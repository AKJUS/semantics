grammar de.cau.cs.kieler.core.kexpressions.keffects.KEffects with de.cau.cs.kieler.core.kexpressions.KExpressions
 

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://kieler.cs.cau.de/annotations" as annotations
import "http://kieler.cs.cau.de/kexpressions/0.1.2" as kexpressions 
import "http://kieler.cs.cau.de/keffects/0.1.0" as keffects

// generate keffects "http://kieler.cs.cau.de/kexpressions/keffects/keffects"

Effect returns keffects::Effect: 
	Emission |
	Assignment | 
	UnaryOperation | 
	TextEffect | 
	FunctionCallEffect;

		
Emission returns keffects::Emission:
	valuedObject=[kexpressions::ValuedObject] ( "(" newValue = Expression ")" )?;

    
Assignment returns keffects::Assignment:
	valuedObject=[kexpressions::ValuedObject]
	('[' indices+=Expression ']')*
	 "=" expression = Expression ;
	 
	 
UnaryOperation returns keffects::Assignment:
    expression = PostfixAddExpression | expression = PostfixSubExpression;


TextEffect returns keffects::HostcodeEffect:
 	text=HOSTCODE;
 	
 	
FunctionCallEffect returns keffects::FunctionCallEffect:
    '<' functionName=ExtendedID (('(' parameters += Parameter (',' parameters += Parameter)* ')')|'()')? '>';





    
	
	