package de.cau.cs.kieler.lustre.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.cau.cs.kieler.lustre.services.LustreGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalLustreParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_STRING", "RULE_HOSTCODE", "RULE_INT", "RULE_FLOAT", "RULE_BOOLEAN", "RULE_COMMENT_ANNOTATION", "RULE_SL_COMMENT_ANNOTATION", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_NUMBER", "RULE_WS", "RULE_ANY_OTHER", "'model'", "'uses'", "','", "';'", "'needs'", "'provides'", "'body'", "'end'", "'const'", "':'", "'='", "'type'", "'unsafe'", "'node'", "'function'", "'<<'", "'>>'", "'returns'", "'package'", "'('", "')'", "'{'", "'}'", "'extern'", "'var'", "'let'", "'tel'", "'.'", "'assert'", "'automaton'", "'|'", "'->'", "'until'", "'unless'", "'then'", "'continue'", "'%'", "'else'", "'=>'", "'xor'", "'()'", "'when'", "'include'", "'\"'", "'\\''", "'::'", "'scope'", "'expression'", "'private'", "'input'", "'output'", "'global'", "'static'", "'signal'", "'ref'", "'schedule'", "'['", "']'", "'combine'", "'call'", "'print'", "'randomize'", "'||'", "'&&'", "'^'", "'&'", "'>>>'", "'+'", "'-'", "'*'", "'/'", "'random'", "'!'", "'_'", "'null'", "'@'", "'#'", "'bool'", "'int'", "'real'", "'enum'", "'<'", "'<='", "'>'", "'>='", "'<>'", "'or'", "'and'", "'not'", "'fby'", "'current'", "'div'", "'if'", "'conflict'", "'confluent'", "'++'", "'--'", "'pre'", "'~'", "'val'", "'host'", "'struct'", "'none'", "'max'", "'min'"
    };
    public static final int T__50=50;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=4;
    public static final int RULE_INT=7;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=12;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int RULE_COMMENT_ANNOTATION=10;
    public static final int T__37=37;
    public static final int RULE_SL_COMMENT_ANNOTATION=11;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int RULE_FLOAT=8;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int RULE_BOOLEAN=9;
    public static final int T__19=19;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__26=26;
    public static final int RULE_HOSTCODE=6;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__70=70;
    public static final int T__121=121;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int T__120=120;
    public static final int RULE_STRING=5;
    public static final int RULE_SL_COMMENT=13;
    public static final int T__77=77;
    public static final int T__119=119;
    public static final int T__78=78;
    public static final int T__118=118;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__117=117;
    public static final int T__76=76;
    public static final int T__116=116;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=15;
    public static final int RULE_ANY_OTHER=16;
    public static final int RULE_NUMBER=14;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalLustreParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalLustreParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalLustreParser.tokenNames; }
    public String getGrammarFileName() { return "InternalLustre.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private LustreGrammarAccess grammarAccess;

        public InternalLustreParser(TokenStream input, LustreGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "LustreProgram";
       	}

       	@Override
       	protected LustreGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleLustreProgram"
    // InternalLustre.g:71:1: entryRuleLustreProgram returns [EObject current=null] : iv_ruleLustreProgram= ruleLustreProgram EOF ;
    public final EObject entryRuleLustreProgram() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLustreProgram = null;



        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");

        try {
            // InternalLustre.g:73:2: (iv_ruleLustreProgram= ruleLustreProgram EOF )
            // InternalLustre.g:74:2: iv_ruleLustreProgram= ruleLustreProgram EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLustreProgramRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLustreProgram=ruleLustreProgram();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLustreProgram; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleLustreProgram"


    // $ANTLR start "ruleLustreProgram"
    // InternalLustre.g:83:1: ruleLustreProgram returns [EObject current=null] : ( ( (lv_includes_0_0= ruleInclude ) )* ( ( (lv_packBody_1_0= rulePackBody ) ) | ( (lv_packList_2_0= rulePackList ) ) ) ) ;
    public final EObject ruleLustreProgram() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_includes_0_0 = null;

        EObject lv_packBody_1_0 = null;

        EObject lv_packList_2_0 = null;



        	enterRule();
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");

        try {
            // InternalLustre.g:90:2: ( ( ( (lv_includes_0_0= ruleInclude ) )* ( ( (lv_packBody_1_0= rulePackBody ) ) | ( (lv_packList_2_0= rulePackList ) ) ) ) )
            // InternalLustre.g:91:2: ( ( (lv_includes_0_0= ruleInclude ) )* ( ( (lv_packBody_1_0= rulePackBody ) ) | ( (lv_packList_2_0= rulePackList ) ) ) )
            {
            // InternalLustre.g:91:2: ( ( (lv_includes_0_0= ruleInclude ) )* ( ( (lv_packBody_1_0= rulePackBody ) ) | ( (lv_packList_2_0= rulePackList ) ) ) )
            // InternalLustre.g:92:3: ( (lv_includes_0_0= ruleInclude ) )* ( ( (lv_packBody_1_0= rulePackBody ) ) | ( (lv_packList_2_0= rulePackList ) ) )
            {
            // InternalLustre.g:92:3: ( (lv_includes_0_0= ruleInclude ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==59) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalLustre.g:93:4: (lv_includes_0_0= ruleInclude )
            	    {
            	    // InternalLustre.g:93:4: (lv_includes_0_0= ruleInclude )
            	    // InternalLustre.g:94:5: lv_includes_0_0= ruleInclude
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getLustreProgramAccess().getIncludesIncludeParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    lv_includes_0_0=ruleInclude();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getLustreProgramRule());
            	      					}
            	      					add(
            	      						current,
            	      						"includes",
            	      						lv_includes_0_0,
            	      						"de.cau.cs.kieler.lustre.Lustre.Include");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            // InternalLustre.g:111:3: ( ( (lv_packBody_1_0= rulePackBody ) ) | ( (lv_packList_2_0= rulePackList ) ) )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==25||(LA2_0>=29 && LA2_0<=31)||LA2_0==40) ) {
                alt2=1;
            }
            else if ( (LA2_0==17||LA2_0==35) ) {
                alt2=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // InternalLustre.g:112:4: ( (lv_packBody_1_0= rulePackBody ) )
                    {
                    // InternalLustre.g:112:4: ( (lv_packBody_1_0= rulePackBody ) )
                    // InternalLustre.g:113:5: (lv_packBody_1_0= rulePackBody )
                    {
                    // InternalLustre.g:113:5: (lv_packBody_1_0= rulePackBody )
                    // InternalLustre.g:114:6: lv_packBody_1_0= rulePackBody
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLustreProgramAccess().getPackBodyPackBodyParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_packBody_1_0=rulePackBody();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLustreProgramRule());
                      						}
                      						set(
                      							current,
                      							"packBody",
                      							lv_packBody_1_0,
                      							"de.cau.cs.kieler.lustre.Lustre.PackBody");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:132:4: ( (lv_packList_2_0= rulePackList ) )
                    {
                    // InternalLustre.g:132:4: ( (lv_packList_2_0= rulePackList ) )
                    // InternalLustre.g:133:5: (lv_packList_2_0= rulePackList )
                    {
                    // InternalLustre.g:133:5: (lv_packList_2_0= rulePackList )
                    // InternalLustre.g:134:6: lv_packList_2_0= rulePackList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLustreProgramAccess().getPackListPackListParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_packList_2_0=rulePackList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLustreProgramRule());
                      						}
                      						set(
                      							current,
                      							"packList",
                      							lv_packList_2_0,
                      							"de.cau.cs.kieler.lustre.Lustre.PackList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleLustreProgram"


    // $ANTLR start "entryRulePackList"
    // InternalLustre.g:159:1: entryRulePackList returns [EObject current=null] : iv_rulePackList= rulePackList EOF ;
    public final EObject entryRulePackList() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePackList = null;


        try {
            // InternalLustre.g:159:49: (iv_rulePackList= rulePackList EOF )
            // InternalLustre.g:160:2: iv_rulePackList= rulePackList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPackListRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePackList=rulePackList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePackList; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePackList"


    // $ANTLR start "rulePackList"
    // InternalLustre.g:166:1: rulePackList returns [EObject current=null] : ( ( (lv_modelDeclarations_0_0= ruleModelDeclaration ) ) | ( (lv_packageDeclarations_1_0= rulePackageDeclaration ) ) | ( (lv_packageEquations_2_0= rulePackageEquation ) ) )+ ;
    public final EObject rulePackList() throws RecognitionException {
        EObject current = null;

        EObject lv_modelDeclarations_0_0 = null;

        EObject lv_packageDeclarations_1_0 = null;

        EObject lv_packageEquations_2_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:172:2: ( ( ( (lv_modelDeclarations_0_0= ruleModelDeclaration ) ) | ( (lv_packageDeclarations_1_0= rulePackageDeclaration ) ) | ( (lv_packageEquations_2_0= rulePackageEquation ) ) )+ )
            // InternalLustre.g:173:2: ( ( (lv_modelDeclarations_0_0= ruleModelDeclaration ) ) | ( (lv_packageDeclarations_1_0= rulePackageDeclaration ) ) | ( (lv_packageEquations_2_0= rulePackageEquation ) ) )+
            {
            // InternalLustre.g:173:2: ( ( (lv_modelDeclarations_0_0= ruleModelDeclaration ) ) | ( (lv_packageDeclarations_1_0= rulePackageDeclaration ) ) | ( (lv_packageEquations_2_0= rulePackageEquation ) ) )+
            int cnt3=0;
            loop3:
            do {
                int alt3=4;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==17) ) {
                    alt3=1;
                }
                else if ( (LA3_0==35) ) {
                    int LA3_3 = input.LA(2);

                    if ( (LA3_3==RULE_ID) ) {
                        int LA3_4 = input.LA(3);

                        if ( (LA3_4==18||(LA3_4>=22 && LA3_4<=23)) ) {
                            alt3=2;
                        }
                        else if ( (LA3_4==RULE_ID) ) {
                            alt3=3;
                        }


                    }


                }


                switch (alt3) {
            	case 1 :
            	    // InternalLustre.g:174:3: ( (lv_modelDeclarations_0_0= ruleModelDeclaration ) )
            	    {
            	    // InternalLustre.g:174:3: ( (lv_modelDeclarations_0_0= ruleModelDeclaration ) )
            	    // InternalLustre.g:175:4: (lv_modelDeclarations_0_0= ruleModelDeclaration )
            	    {
            	    // InternalLustre.g:175:4: (lv_modelDeclarations_0_0= ruleModelDeclaration )
            	    // InternalLustre.g:176:5: lv_modelDeclarations_0_0= ruleModelDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPackListAccess().getModelDeclarationsModelDeclarationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    lv_modelDeclarations_0_0=ruleModelDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPackListRule());
            	      					}
            	      					add(
            	      						current,
            	      						"modelDeclarations",
            	      						lv_modelDeclarations_0_0,
            	      						"de.cau.cs.kieler.lustre.Lustre.ModelDeclaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalLustre.g:194:3: ( (lv_packageDeclarations_1_0= rulePackageDeclaration ) )
            	    {
            	    // InternalLustre.g:194:3: ( (lv_packageDeclarations_1_0= rulePackageDeclaration ) )
            	    // InternalLustre.g:195:4: (lv_packageDeclarations_1_0= rulePackageDeclaration )
            	    {
            	    // InternalLustre.g:195:4: (lv_packageDeclarations_1_0= rulePackageDeclaration )
            	    // InternalLustre.g:196:5: lv_packageDeclarations_1_0= rulePackageDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPackListAccess().getPackageDeclarationsPackageDeclarationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    lv_packageDeclarations_1_0=rulePackageDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPackListRule());
            	      					}
            	      					add(
            	      						current,
            	      						"packageDeclarations",
            	      						lv_packageDeclarations_1_0,
            	      						"de.cau.cs.kieler.lustre.Lustre.PackageDeclaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalLustre.g:214:3: ( (lv_packageEquations_2_0= rulePackageEquation ) )
            	    {
            	    // InternalLustre.g:214:3: ( (lv_packageEquations_2_0= rulePackageEquation ) )
            	    // InternalLustre.g:215:4: (lv_packageEquations_2_0= rulePackageEquation )
            	    {
            	    // InternalLustre.g:215:4: (lv_packageEquations_2_0= rulePackageEquation )
            	    // InternalLustre.g:216:5: lv_packageEquations_2_0= rulePackageEquation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPackListAccess().getPackageEquationsPackageEquationParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    lv_packageEquations_2_0=rulePackageEquation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPackListRule());
            	      					}
            	      					add(
            	      						current,
            	      						"packageEquations",
            	      						lv_packageEquations_2_0,
            	      						"de.cau.cs.kieler.lustre.Lustre.PackageEquation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt3 >= 1 ) break loop3;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(3, input);
                        throw eee;
                }
                cnt3++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackList"


    // $ANTLR start "entryRuleModelDeclaration"
    // InternalLustre.g:237:1: entryRuleModelDeclaration returns [EObject current=null] : iv_ruleModelDeclaration= ruleModelDeclaration EOF ;
    public final EObject entryRuleModelDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModelDeclaration = null;


        try {
            // InternalLustre.g:237:57: (iv_ruleModelDeclaration= ruleModelDeclaration EOF )
            // InternalLustre.g:238:2: iv_ruleModelDeclaration= ruleModelDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleModelDeclaration=ruleModelDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModelDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModelDeclaration"


    // $ANTLR start "ruleModelDeclaration"
    // InternalLustre.g:244:1: ruleModelDeclaration returns [EObject current=null] : (otherlv_0= 'model' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'uses' ( (lv_usesIds_3_0= RULE_ID ) ) (otherlv_4= ',' ( (lv_usesIds_5_0= RULE_ID ) ) )* otherlv_6= ';' )? otherlv_7= 'needs' ( (lv_needsParams_8_0= ruleStaticParam ) ) (otherlv_9= ';' ( (lv_needsParams_10_0= ruleStaticParam ) ) )* otherlv_11= ';' (otherlv_12= 'provides' ( (lv_provisions_13_0= ruleProvide ) ) otherlv_14= ';' ( ( (lv_provisions_15_0= ruleProvide ) ) otherlv_16= ';' )* )? otherlv_17= 'body' ( (lv_body_18_0= rulePackBody ) ) otherlv_19= 'end' ) ;
    public final EObject ruleModelDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token lv_usesIds_3_0=null;
        Token otherlv_4=null;
        Token lv_usesIds_5_0=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        EObject lv_needsParams_8_0 = null;

        EObject lv_needsParams_10_0 = null;

        EObject lv_provisions_13_0 = null;

        EObject lv_provisions_15_0 = null;

        EObject lv_body_18_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:250:2: ( (otherlv_0= 'model' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'uses' ( (lv_usesIds_3_0= RULE_ID ) ) (otherlv_4= ',' ( (lv_usesIds_5_0= RULE_ID ) ) )* otherlv_6= ';' )? otherlv_7= 'needs' ( (lv_needsParams_8_0= ruleStaticParam ) ) (otherlv_9= ';' ( (lv_needsParams_10_0= ruleStaticParam ) ) )* otherlv_11= ';' (otherlv_12= 'provides' ( (lv_provisions_13_0= ruleProvide ) ) otherlv_14= ';' ( ( (lv_provisions_15_0= ruleProvide ) ) otherlv_16= ';' )* )? otherlv_17= 'body' ( (lv_body_18_0= rulePackBody ) ) otherlv_19= 'end' ) )
            // InternalLustre.g:251:2: (otherlv_0= 'model' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'uses' ( (lv_usesIds_3_0= RULE_ID ) ) (otherlv_4= ',' ( (lv_usesIds_5_0= RULE_ID ) ) )* otherlv_6= ';' )? otherlv_7= 'needs' ( (lv_needsParams_8_0= ruleStaticParam ) ) (otherlv_9= ';' ( (lv_needsParams_10_0= ruleStaticParam ) ) )* otherlv_11= ';' (otherlv_12= 'provides' ( (lv_provisions_13_0= ruleProvide ) ) otherlv_14= ';' ( ( (lv_provisions_15_0= ruleProvide ) ) otherlv_16= ';' )* )? otherlv_17= 'body' ( (lv_body_18_0= rulePackBody ) ) otherlv_19= 'end' )
            {
            // InternalLustre.g:251:2: (otherlv_0= 'model' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'uses' ( (lv_usesIds_3_0= RULE_ID ) ) (otherlv_4= ',' ( (lv_usesIds_5_0= RULE_ID ) ) )* otherlv_6= ';' )? otherlv_7= 'needs' ( (lv_needsParams_8_0= ruleStaticParam ) ) (otherlv_9= ';' ( (lv_needsParams_10_0= ruleStaticParam ) ) )* otherlv_11= ';' (otherlv_12= 'provides' ( (lv_provisions_13_0= ruleProvide ) ) otherlv_14= ';' ( ( (lv_provisions_15_0= ruleProvide ) ) otherlv_16= ';' )* )? otherlv_17= 'body' ( (lv_body_18_0= rulePackBody ) ) otherlv_19= 'end' )
            // InternalLustre.g:252:3: otherlv_0= 'model' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'uses' ( (lv_usesIds_3_0= RULE_ID ) ) (otherlv_4= ',' ( (lv_usesIds_5_0= RULE_ID ) ) )* otherlv_6= ';' )? otherlv_7= 'needs' ( (lv_needsParams_8_0= ruleStaticParam ) ) (otherlv_9= ';' ( (lv_needsParams_10_0= ruleStaticParam ) ) )* otherlv_11= ';' (otherlv_12= 'provides' ( (lv_provisions_13_0= ruleProvide ) ) otherlv_14= ';' ( ( (lv_provisions_15_0= ruleProvide ) ) otherlv_16= ';' )* )? otherlv_17= 'body' ( (lv_body_18_0= rulePackBody ) ) otherlv_19= 'end'
            {
            otherlv_0=(Token)match(input,17,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getModelDeclarationAccess().getModelKeyword_0());
              		
            }
            // InternalLustre.g:256:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalLustre.g:257:4: (lv_name_1_0= RULE_ID )
            {
            // InternalLustre.g:257:4: (lv_name_1_0= RULE_ID )
            // InternalLustre.g:258:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getModelDeclarationAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getModelDeclarationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalLustre.g:274:3: (otherlv_2= 'uses' ( (lv_usesIds_3_0= RULE_ID ) ) (otherlv_4= ',' ( (lv_usesIds_5_0= RULE_ID ) ) )* otherlv_6= ';' )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==18) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // InternalLustre.g:275:4: otherlv_2= 'uses' ( (lv_usesIds_3_0= RULE_ID ) ) (otherlv_4= ',' ( (lv_usesIds_5_0= RULE_ID ) ) )* otherlv_6= ';'
                    {
                    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getModelDeclarationAccess().getUsesKeyword_2_0());
                      			
                    }
                    // InternalLustre.g:279:4: ( (lv_usesIds_3_0= RULE_ID ) )
                    // InternalLustre.g:280:5: (lv_usesIds_3_0= RULE_ID )
                    {
                    // InternalLustre.g:280:5: (lv_usesIds_3_0= RULE_ID )
                    // InternalLustre.g:281:6: lv_usesIds_3_0= RULE_ID
                    {
                    lv_usesIds_3_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_usesIds_3_0, grammarAccess.getModelDeclarationAccess().getUsesIdsIDTerminalRuleCall_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getModelDeclarationRule());
                      						}
                      						addWithLastConsumed(
                      							current,
                      							"usesIds",
                      							lv_usesIds_3_0,
                      							"de.cau.cs.kieler.annotations.Annotations.ID");
                      					
                    }

                    }


                    }

                    // InternalLustre.g:297:4: (otherlv_4= ',' ( (lv_usesIds_5_0= RULE_ID ) ) )*
                    loop4:
                    do {
                        int alt4=2;
                        int LA4_0 = input.LA(1);

                        if ( (LA4_0==19) ) {
                            alt4=1;
                        }


                        switch (alt4) {
                    	case 1 :
                    	    // InternalLustre.g:298:5: otherlv_4= ',' ( (lv_usesIds_5_0= RULE_ID ) )
                    	    {
                    	    otherlv_4=(Token)match(input,19,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getModelDeclarationAccess().getCommaKeyword_2_2_0());
                    	      				
                    	    }
                    	    // InternalLustre.g:302:5: ( (lv_usesIds_5_0= RULE_ID ) )
                    	    // InternalLustre.g:303:6: (lv_usesIds_5_0= RULE_ID )
                    	    {
                    	    // InternalLustre.g:303:6: (lv_usesIds_5_0= RULE_ID )
                    	    // InternalLustre.g:304:7: lv_usesIds_5_0= RULE_ID
                    	    {
                    	    lv_usesIds_5_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_7); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(lv_usesIds_5_0, grammarAccess.getModelDeclarationAccess().getUsesIdsIDTerminalRuleCall_2_2_1_0());
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getModelDeclarationRule());
                    	      							}
                    	      							addWithLastConsumed(
                    	      								current,
                    	      								"usesIds",
                    	      								lv_usesIds_5_0,
                    	      								"de.cau.cs.kieler.annotations.Annotations.ID");
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop4;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,20,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getModelDeclarationAccess().getSemicolonKeyword_2_3());
                      			
                    }

                    }
                    break;

            }

            otherlv_7=(Token)match(input,21,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getModelDeclarationAccess().getNeedsKeyword_3());
              		
            }
            // InternalLustre.g:330:3: ( (lv_needsParams_8_0= ruleStaticParam ) )
            // InternalLustre.g:331:4: (lv_needsParams_8_0= ruleStaticParam )
            {
            // InternalLustre.g:331:4: (lv_needsParams_8_0= ruleStaticParam )
            // InternalLustre.g:332:5: lv_needsParams_8_0= ruleStaticParam
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getModelDeclarationAccess().getNeedsParamsStaticParamParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_10);
            lv_needsParams_8_0=ruleStaticParam();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getModelDeclarationRule());
              					}
              					add(
              						current,
              						"needsParams",
              						lv_needsParams_8_0,
              						"de.cau.cs.kieler.lustre.Lustre.StaticParam");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:349:3: (otherlv_9= ';' ( (lv_needsParams_10_0= ruleStaticParam ) ) )*
            loop6:
            do {
                int alt6=2;
                int LA6_0 = input.LA(1);

                if ( (LA6_0==20) ) {
                    int LA6_1 = input.LA(2);

                    if ( (LA6_1==25||(LA6_1>=28 && LA6_1<=31)) ) {
                        alt6=1;
                    }


                }


                switch (alt6) {
            	case 1 :
            	    // InternalLustre.g:350:4: otherlv_9= ';' ( (lv_needsParams_10_0= ruleStaticParam ) )
            	    {
            	    otherlv_9=(Token)match(input,20,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_9, grammarAccess.getModelDeclarationAccess().getSemicolonKeyword_5_0());
            	      			
            	    }
            	    // InternalLustre.g:354:4: ( (lv_needsParams_10_0= ruleStaticParam ) )
            	    // InternalLustre.g:355:5: (lv_needsParams_10_0= ruleStaticParam )
            	    {
            	    // InternalLustre.g:355:5: (lv_needsParams_10_0= ruleStaticParam )
            	    // InternalLustre.g:356:6: lv_needsParams_10_0= ruleStaticParam
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getModelDeclarationAccess().getNeedsParamsStaticParamParserRuleCall_5_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_10);
            	    lv_needsParams_10_0=ruleStaticParam();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getModelDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"needsParams",
            	      							lv_needsParams_10_0,
            	      							"de.cau.cs.kieler.lustre.Lustre.StaticParam");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop6;
                }
            } while (true);

            otherlv_11=(Token)match(input,20,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getModelDeclarationAccess().getSemicolonKeyword_6());
              		
            }
            // InternalLustre.g:378:3: (otherlv_12= 'provides' ( (lv_provisions_13_0= ruleProvide ) ) otherlv_14= ';' ( ( (lv_provisions_15_0= ruleProvide ) ) otherlv_16= ';' )* )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==22) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // InternalLustre.g:379:4: otherlv_12= 'provides' ( (lv_provisions_13_0= ruleProvide ) ) otherlv_14= ';' ( ( (lv_provisions_15_0= ruleProvide ) ) otherlv_16= ';' )*
                    {
                    otherlv_12=(Token)match(input,22,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getModelDeclarationAccess().getProvidesKeyword_7_0());
                      			
                    }
                    // InternalLustre.g:383:4: ( (lv_provisions_13_0= ruleProvide ) )
                    // InternalLustre.g:384:5: (lv_provisions_13_0= ruleProvide )
                    {
                    // InternalLustre.g:384:5: (lv_provisions_13_0= ruleProvide )
                    // InternalLustre.g:385:6: lv_provisions_13_0= ruleProvide
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelDeclarationAccess().getProvisionsProvideParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_10);
                    lv_provisions_13_0=ruleProvide();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"provisions",
                      							lv_provisions_13_0,
                      							"de.cau.cs.kieler.lustre.Lustre.Provide");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_14=(Token)match(input,20,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getModelDeclarationAccess().getSemicolonKeyword_7_2());
                      			
                    }
                    // InternalLustre.g:406:4: ( ( (lv_provisions_15_0= ruleProvide ) ) otherlv_16= ';' )*
                    loop7:
                    do {
                        int alt7=2;
                        int LA7_0 = input.LA(1);

                        if ( (LA7_0==25||(LA7_0>=28 && LA7_0<=31)) ) {
                            alt7=1;
                        }


                        switch (alt7) {
                    	case 1 :
                    	    // InternalLustre.g:407:5: ( (lv_provisions_15_0= ruleProvide ) ) otherlv_16= ';'
                    	    {
                    	    // InternalLustre.g:407:5: ( (lv_provisions_15_0= ruleProvide ) )
                    	    // InternalLustre.g:408:6: (lv_provisions_15_0= ruleProvide )
                    	    {
                    	    // InternalLustre.g:408:6: (lv_provisions_15_0= ruleProvide )
                    	    // InternalLustre.g:409:7: lv_provisions_15_0= ruleProvide
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getModelDeclarationAccess().getProvisionsProvideParserRuleCall_7_3_0_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_10);
                    	    lv_provisions_15_0=ruleProvide();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getModelDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"provisions",
                    	      								lv_provisions_15_0,
                    	      								"de.cau.cs.kieler.lustre.Lustre.Provide");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    otherlv_16=(Token)match(input,20,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_16, grammarAccess.getModelDeclarationAccess().getSemicolonKeyword_7_3_1());
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop7;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_17=(Token)match(input,23,FollowSets000.FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_17, grammarAccess.getModelDeclarationAccess().getBodyKeyword_8());
              		
            }
            // InternalLustre.g:436:3: ( (lv_body_18_0= rulePackBody ) )
            // InternalLustre.g:437:4: (lv_body_18_0= rulePackBody )
            {
            // InternalLustre.g:437:4: (lv_body_18_0= rulePackBody )
            // InternalLustre.g:438:5: lv_body_18_0= rulePackBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getModelDeclarationAccess().getBodyPackBodyParserRuleCall_9_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_14);
            lv_body_18_0=rulePackBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getModelDeclarationRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_18_0,
              						"de.cau.cs.kieler.lustre.Lustre.PackBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_19=(Token)match(input,24,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_19, grammarAccess.getModelDeclarationAccess().getEndKeyword_10());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModelDeclaration"


    // $ANTLR start "entryRuleProvide"
    // InternalLustre.g:463:1: entryRuleProvide returns [EObject current=null] : iv_ruleProvide= ruleProvide EOF ;
    public final EObject entryRuleProvide() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProvide = null;


        try {
            // InternalLustre.g:463:48: (iv_ruleProvide= ruleProvide EOF )
            // InternalLustre.g:464:2: iv_ruleProvide= ruleProvide EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getProvideRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleProvide=ruleProvide();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProvide; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProvide"


    // $ANTLR start "ruleProvide"
    // InternalLustre.g:470:1: ruleProvide returns [EObject current=null] : ( (otherlv_0= 'const' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( (lv_type_3_0= ruleValueType ) ) (otherlv_4= '=' ( (lv_value_5_0= ruleExpression ) ) )? ) | (otherlv_6= 'type' ( (lv_types_7_0= ruleTypeDeclaration ) ) ) | ( (otherlv_8= 'unsafe' )? (otherlv_9= 'node' | otherlv_10= 'function' ) ( (lv_name_11_0= RULE_ID ) ) (otherlv_12= '<<' ( (lv_staticParams_13_0= ruleStaticParam ) ) (otherlv_14= ';' ( (lv_staticParams_15_0= ruleStaticParam ) ) )* otherlv_16= '>>' )? ( (lv_input_17_0= ruleParams ) ) otherlv_18= 'returns' ( (lv_output_19_0= ruleParams ) ) ) ) ;
    public final EObject ruleProvide() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token lv_name_11_0=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Enumerator lv_type_3_0 = null;

        EObject lv_value_5_0 = null;

        EObject lv_types_7_0 = null;

        EObject lv_staticParams_13_0 = null;

        EObject lv_staticParams_15_0 = null;

        EObject lv_input_17_0 = null;

        EObject lv_output_19_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:476:2: ( ( (otherlv_0= 'const' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( (lv_type_3_0= ruleValueType ) ) (otherlv_4= '=' ( (lv_value_5_0= ruleExpression ) ) )? ) | (otherlv_6= 'type' ( (lv_types_7_0= ruleTypeDeclaration ) ) ) | ( (otherlv_8= 'unsafe' )? (otherlv_9= 'node' | otherlv_10= 'function' ) ( (lv_name_11_0= RULE_ID ) ) (otherlv_12= '<<' ( (lv_staticParams_13_0= ruleStaticParam ) ) (otherlv_14= ';' ( (lv_staticParams_15_0= ruleStaticParam ) ) )* otherlv_16= '>>' )? ( (lv_input_17_0= ruleParams ) ) otherlv_18= 'returns' ( (lv_output_19_0= ruleParams ) ) ) ) )
            // InternalLustre.g:477:2: ( (otherlv_0= 'const' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( (lv_type_3_0= ruleValueType ) ) (otherlv_4= '=' ( (lv_value_5_0= ruleExpression ) ) )? ) | (otherlv_6= 'type' ( (lv_types_7_0= ruleTypeDeclaration ) ) ) | ( (otherlv_8= 'unsafe' )? (otherlv_9= 'node' | otherlv_10= 'function' ) ( (lv_name_11_0= RULE_ID ) ) (otherlv_12= '<<' ( (lv_staticParams_13_0= ruleStaticParam ) ) (otherlv_14= ';' ( (lv_staticParams_15_0= ruleStaticParam ) ) )* otherlv_16= '>>' )? ( (lv_input_17_0= ruleParams ) ) otherlv_18= 'returns' ( (lv_output_19_0= ruleParams ) ) ) )
            {
            // InternalLustre.g:477:2: ( (otherlv_0= 'const' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( (lv_type_3_0= ruleValueType ) ) (otherlv_4= '=' ( (lv_value_5_0= ruleExpression ) ) )? ) | (otherlv_6= 'type' ( (lv_types_7_0= ruleTypeDeclaration ) ) ) | ( (otherlv_8= 'unsafe' )? (otherlv_9= 'node' | otherlv_10= 'function' ) ( (lv_name_11_0= RULE_ID ) ) (otherlv_12= '<<' ( (lv_staticParams_13_0= ruleStaticParam ) ) (otherlv_14= ';' ( (lv_staticParams_15_0= ruleStaticParam ) ) )* otherlv_16= '>>' )? ( (lv_input_17_0= ruleParams ) ) otherlv_18= 'returns' ( (lv_output_19_0= ruleParams ) ) ) )
            int alt14=3;
            switch ( input.LA(1) ) {
            case 25:
                {
                alt14=1;
                }
                break;
            case 28:
                {
                alt14=2;
                }
                break;
            case 29:
            case 30:
            case 31:
                {
                alt14=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }

            switch (alt14) {
                case 1 :
                    // InternalLustre.g:478:3: (otherlv_0= 'const' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( (lv_type_3_0= ruleValueType ) ) (otherlv_4= '=' ( (lv_value_5_0= ruleExpression ) ) )? )
                    {
                    // InternalLustre.g:478:3: (otherlv_0= 'const' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( (lv_type_3_0= ruleValueType ) ) (otherlv_4= '=' ( (lv_value_5_0= ruleExpression ) ) )? )
                    // InternalLustre.g:479:4: otherlv_0= 'const' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( (lv_type_3_0= ruleValueType ) ) (otherlv_4= '=' ( (lv_value_5_0= ruleExpression ) ) )?
                    {
                    otherlv_0=(Token)match(input,25,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getProvideAccess().getConstKeyword_0_0());
                      			
                    }
                    // InternalLustre.g:483:4: ( (lv_name_1_0= RULE_ID ) )
                    // InternalLustre.g:484:5: (lv_name_1_0= RULE_ID )
                    {
                    // InternalLustre.g:484:5: (lv_name_1_0= RULE_ID )
                    // InternalLustre.g:485:6: lv_name_1_0= RULE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_1_0, grammarAccess.getProvideAccess().getNameIDTerminalRuleCall_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getProvideRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"de.cau.cs.kieler.annotations.Annotations.ID");
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,26,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getProvideAccess().getColonKeyword_0_2());
                      			
                    }
                    // InternalLustre.g:505:4: ( (lv_type_3_0= ruleValueType ) )
                    // InternalLustre.g:506:5: (lv_type_3_0= ruleValueType )
                    {
                    // InternalLustre.g:506:5: (lv_type_3_0= ruleValueType )
                    // InternalLustre.g:507:6: lv_type_3_0= ruleValueType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getProvideAccess().getTypeValueTypeEnumRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_17);
                    lv_type_3_0=ruleValueType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getProvideRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_3_0,
                      							"de.cau.cs.kieler.lustre.Lustre.ValueType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalLustre.g:524:4: (otherlv_4= '=' ( (lv_value_5_0= ruleExpression ) ) )?
                    int alt9=2;
                    int LA9_0 = input.LA(1);

                    if ( (LA9_0==27) ) {
                        alt9=1;
                    }
                    switch (alt9) {
                        case 1 :
                            // InternalLustre.g:525:5: otherlv_4= '=' ( (lv_value_5_0= ruleExpression ) )
                            {
                            otherlv_4=(Token)match(input,27,FollowSets000.FOLLOW_18); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getProvideAccess().getEqualsSignKeyword_0_4_0());
                              				
                            }
                            // InternalLustre.g:529:5: ( (lv_value_5_0= ruleExpression ) )
                            // InternalLustre.g:530:6: (lv_value_5_0= ruleExpression )
                            {
                            // InternalLustre.g:530:6: (lv_value_5_0= ruleExpression )
                            // InternalLustre.g:531:7: lv_value_5_0= ruleExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getProvideAccess().getValueExpressionParserRuleCall_0_4_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_value_5_0=ruleExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getProvideRule());
                              							}
                              							set(
                              								current,
                              								"value",
                              								lv_value_5_0,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:551:3: (otherlv_6= 'type' ( (lv_types_7_0= ruleTypeDeclaration ) ) )
                    {
                    // InternalLustre.g:551:3: (otherlv_6= 'type' ( (lv_types_7_0= ruleTypeDeclaration ) ) )
                    // InternalLustre.g:552:4: otherlv_6= 'type' ( (lv_types_7_0= ruleTypeDeclaration ) )
                    {
                    otherlv_6=(Token)match(input,28,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getProvideAccess().getTypeKeyword_1_0());
                      			
                    }
                    // InternalLustre.g:556:4: ( (lv_types_7_0= ruleTypeDeclaration ) )
                    // InternalLustre.g:557:5: (lv_types_7_0= ruleTypeDeclaration )
                    {
                    // InternalLustre.g:557:5: (lv_types_7_0= ruleTypeDeclaration )
                    // InternalLustre.g:558:6: lv_types_7_0= ruleTypeDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getProvideAccess().getTypesTypeDeclarationParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_types_7_0=ruleTypeDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getProvideRule());
                      						}
                      						set(
                      							current,
                      							"types",
                      							lv_types_7_0,
                      							"de.cau.cs.kieler.lustre.Lustre.TypeDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalLustre.g:577:3: ( (otherlv_8= 'unsafe' )? (otherlv_9= 'node' | otherlv_10= 'function' ) ( (lv_name_11_0= RULE_ID ) ) (otherlv_12= '<<' ( (lv_staticParams_13_0= ruleStaticParam ) ) (otherlv_14= ';' ( (lv_staticParams_15_0= ruleStaticParam ) ) )* otherlv_16= '>>' )? ( (lv_input_17_0= ruleParams ) ) otherlv_18= 'returns' ( (lv_output_19_0= ruleParams ) ) )
                    {
                    // InternalLustre.g:577:3: ( (otherlv_8= 'unsafe' )? (otherlv_9= 'node' | otherlv_10= 'function' ) ( (lv_name_11_0= RULE_ID ) ) (otherlv_12= '<<' ( (lv_staticParams_13_0= ruleStaticParam ) ) (otherlv_14= ';' ( (lv_staticParams_15_0= ruleStaticParam ) ) )* otherlv_16= '>>' )? ( (lv_input_17_0= ruleParams ) ) otherlv_18= 'returns' ( (lv_output_19_0= ruleParams ) ) )
                    // InternalLustre.g:578:4: (otherlv_8= 'unsafe' )? (otherlv_9= 'node' | otherlv_10= 'function' ) ( (lv_name_11_0= RULE_ID ) ) (otherlv_12= '<<' ( (lv_staticParams_13_0= ruleStaticParam ) ) (otherlv_14= ';' ( (lv_staticParams_15_0= ruleStaticParam ) ) )* otherlv_16= '>>' )? ( (lv_input_17_0= ruleParams ) ) otherlv_18= 'returns' ( (lv_output_19_0= ruleParams ) )
                    {
                    // InternalLustre.g:578:4: (otherlv_8= 'unsafe' )?
                    int alt10=2;
                    int LA10_0 = input.LA(1);

                    if ( (LA10_0==29) ) {
                        alt10=1;
                    }
                    switch (alt10) {
                        case 1 :
                            // InternalLustre.g:579:5: otherlv_8= 'unsafe'
                            {
                            otherlv_8=(Token)match(input,29,FollowSets000.FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getProvideAccess().getUnsafeKeyword_2_0());
                              				
                            }

                            }
                            break;

                    }

                    // InternalLustre.g:584:4: (otherlv_9= 'node' | otherlv_10= 'function' )
                    int alt11=2;
                    int LA11_0 = input.LA(1);

                    if ( (LA11_0==30) ) {
                        alt11=1;
                    }
                    else if ( (LA11_0==31) ) {
                        alt11=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 11, 0, input);

                        throw nvae;
                    }
                    switch (alt11) {
                        case 1 :
                            // InternalLustre.g:585:5: otherlv_9= 'node'
                            {
                            otherlv_9=(Token)match(input,30,FollowSets000.FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_9, grammarAccess.getProvideAccess().getNodeKeyword_2_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalLustre.g:590:5: otherlv_10= 'function'
                            {
                            otherlv_10=(Token)match(input,31,FollowSets000.FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_10, grammarAccess.getProvideAccess().getFunctionKeyword_2_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalLustre.g:595:4: ( (lv_name_11_0= RULE_ID ) )
                    // InternalLustre.g:596:5: (lv_name_11_0= RULE_ID )
                    {
                    // InternalLustre.g:596:5: (lv_name_11_0= RULE_ID )
                    // InternalLustre.g:597:6: lv_name_11_0= RULE_ID
                    {
                    lv_name_11_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_11_0, grammarAccess.getProvideAccess().getNameIDTerminalRuleCall_2_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getProvideRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_11_0,
                      							"de.cau.cs.kieler.annotations.Annotations.ID");
                      					
                    }

                    }


                    }

                    // InternalLustre.g:613:4: (otherlv_12= '<<' ( (lv_staticParams_13_0= ruleStaticParam ) ) (otherlv_14= ';' ( (lv_staticParams_15_0= ruleStaticParam ) ) )* otherlv_16= '>>' )?
                    int alt13=2;
                    int LA13_0 = input.LA(1);

                    if ( (LA13_0==32) ) {
                        alt13=1;
                    }
                    switch (alt13) {
                        case 1 :
                            // InternalLustre.g:614:5: otherlv_12= '<<' ( (lv_staticParams_13_0= ruleStaticParam ) ) (otherlv_14= ';' ( (lv_staticParams_15_0= ruleStaticParam ) ) )* otherlv_16= '>>'
                            {
                            otherlv_12=(Token)match(input,32,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_12, grammarAccess.getProvideAccess().getLessThanSignLessThanSignKeyword_2_3_0());
                              				
                            }
                            // InternalLustre.g:618:5: ( (lv_staticParams_13_0= ruleStaticParam ) )
                            // InternalLustre.g:619:6: (lv_staticParams_13_0= ruleStaticParam )
                            {
                            // InternalLustre.g:619:6: (lv_staticParams_13_0= ruleStaticParam )
                            // InternalLustre.g:620:7: lv_staticParams_13_0= ruleStaticParam
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getProvideAccess().getStaticParamsStaticParamParserRuleCall_2_3_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_21);
                            lv_staticParams_13_0=ruleStaticParam();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getProvideRule());
                              							}
                              							add(
                              								current,
                              								"staticParams",
                              								lv_staticParams_13_0,
                              								"de.cau.cs.kieler.lustre.Lustre.StaticParam");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalLustre.g:637:5: (otherlv_14= ';' ( (lv_staticParams_15_0= ruleStaticParam ) ) )*
                            loop12:
                            do {
                                int alt12=2;
                                int LA12_0 = input.LA(1);

                                if ( (LA12_0==20) ) {
                                    alt12=1;
                                }


                                switch (alt12) {
                            	case 1 :
                            	    // InternalLustre.g:638:6: otherlv_14= ';' ( (lv_staticParams_15_0= ruleStaticParam ) )
                            	    {
                            	    otherlv_14=(Token)match(input,20,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_14, grammarAccess.getProvideAccess().getSemicolonKeyword_2_3_2_0());
                            	      					
                            	    }
                            	    // InternalLustre.g:642:6: ( (lv_staticParams_15_0= ruleStaticParam ) )
                            	    // InternalLustre.g:643:7: (lv_staticParams_15_0= ruleStaticParam )
                            	    {
                            	    // InternalLustre.g:643:7: (lv_staticParams_15_0= ruleStaticParam )
                            	    // InternalLustre.g:644:8: lv_staticParams_15_0= ruleStaticParam
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getProvideAccess().getStaticParamsStaticParamParserRuleCall_2_3_2_1_0());
                            	      							
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_21);
                            	    lv_staticParams_15_0=ruleStaticParam();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getProvideRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"staticParams",
                            	      									lv_staticParams_15_0,
                            	      									"de.cau.cs.kieler.lustre.Lustre.StaticParam");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop12;
                                }
                            } while (true);

                            otherlv_16=(Token)match(input,33,FollowSets000.FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_16, grammarAccess.getProvideAccess().getGreaterThanSignGreaterThanSignKeyword_2_3_3());
                              				
                            }

                            }
                            break;

                    }

                    // InternalLustre.g:667:4: ( (lv_input_17_0= ruleParams ) )
                    // InternalLustre.g:668:5: (lv_input_17_0= ruleParams )
                    {
                    // InternalLustre.g:668:5: (lv_input_17_0= ruleParams )
                    // InternalLustre.g:669:6: lv_input_17_0= ruleParams
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getProvideAccess().getInputParamsParserRuleCall_2_4_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_22);
                    lv_input_17_0=ruleParams();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getProvideRule());
                      						}
                      						set(
                      							current,
                      							"input",
                      							lv_input_17_0,
                      							"de.cau.cs.kieler.lustre.Lustre.Params");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_18=(Token)match(input,34,FollowSets000.FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getProvideAccess().getReturnsKeyword_2_5());
                      			
                    }
                    // InternalLustre.g:690:4: ( (lv_output_19_0= ruleParams ) )
                    // InternalLustre.g:691:5: (lv_output_19_0= ruleParams )
                    {
                    // InternalLustre.g:691:5: (lv_output_19_0= ruleParams )
                    // InternalLustre.g:692:6: lv_output_19_0= ruleParams
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getProvideAccess().getOutputParamsParserRuleCall_2_6_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_output_19_0=ruleParams();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getProvideRule());
                      						}
                      						set(
                      							current,
                      							"output",
                      							lv_output_19_0,
                      							"de.cau.cs.kieler.lustre.Lustre.Params");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProvide"


    // $ANTLR start "entryRulePackageDeclaration"
    // InternalLustre.g:714:1: entryRulePackageDeclaration returns [EObject current=null] : iv_rulePackageDeclaration= rulePackageDeclaration EOF ;
    public final EObject entryRulePackageDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePackageDeclaration = null;


        try {
            // InternalLustre.g:714:59: (iv_rulePackageDeclaration= rulePackageDeclaration EOF )
            // InternalLustre.g:715:2: iv_rulePackageDeclaration= rulePackageDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPackageDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePackageDeclaration=rulePackageDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePackageDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePackageDeclaration"


    // $ANTLR start "rulePackageDeclaration"
    // InternalLustre.g:721:1: rulePackageDeclaration returns [EObject current=null] : (otherlv_0= 'package' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'uses' ( (lv_usesIds_3_0= RULE_ID ) ) (otherlv_4= ',' ( (lv_usesIds_5_0= RULE_ID ) ) )* otherlv_6= ';' )? (otherlv_7= 'provides' ( (lv_provisions_8_0= ruleProvide ) ) otherlv_9= ';' ( ( (lv_provisions_10_0= ruleProvide ) ) otherlv_11= ';' )* )? otherlv_12= 'body' ( (lv_body_13_0= rulePackBody ) ) otherlv_14= 'end' ) ;
    public final EObject rulePackageDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token lv_usesIds_3_0=null;
        Token otherlv_4=null;
        Token lv_usesIds_5_0=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        EObject lv_provisions_8_0 = null;

        EObject lv_provisions_10_0 = null;

        EObject lv_body_13_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:727:2: ( (otherlv_0= 'package' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'uses' ( (lv_usesIds_3_0= RULE_ID ) ) (otherlv_4= ',' ( (lv_usesIds_5_0= RULE_ID ) ) )* otherlv_6= ';' )? (otherlv_7= 'provides' ( (lv_provisions_8_0= ruleProvide ) ) otherlv_9= ';' ( ( (lv_provisions_10_0= ruleProvide ) ) otherlv_11= ';' )* )? otherlv_12= 'body' ( (lv_body_13_0= rulePackBody ) ) otherlv_14= 'end' ) )
            // InternalLustre.g:728:2: (otherlv_0= 'package' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'uses' ( (lv_usesIds_3_0= RULE_ID ) ) (otherlv_4= ',' ( (lv_usesIds_5_0= RULE_ID ) ) )* otherlv_6= ';' )? (otherlv_7= 'provides' ( (lv_provisions_8_0= ruleProvide ) ) otherlv_9= ';' ( ( (lv_provisions_10_0= ruleProvide ) ) otherlv_11= ';' )* )? otherlv_12= 'body' ( (lv_body_13_0= rulePackBody ) ) otherlv_14= 'end' )
            {
            // InternalLustre.g:728:2: (otherlv_0= 'package' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'uses' ( (lv_usesIds_3_0= RULE_ID ) ) (otherlv_4= ',' ( (lv_usesIds_5_0= RULE_ID ) ) )* otherlv_6= ';' )? (otherlv_7= 'provides' ( (lv_provisions_8_0= ruleProvide ) ) otherlv_9= ';' ( ( (lv_provisions_10_0= ruleProvide ) ) otherlv_11= ';' )* )? otherlv_12= 'body' ( (lv_body_13_0= rulePackBody ) ) otherlv_14= 'end' )
            // InternalLustre.g:729:3: otherlv_0= 'package' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'uses' ( (lv_usesIds_3_0= RULE_ID ) ) (otherlv_4= ',' ( (lv_usesIds_5_0= RULE_ID ) ) )* otherlv_6= ';' )? (otherlv_7= 'provides' ( (lv_provisions_8_0= ruleProvide ) ) otherlv_9= ';' ( ( (lv_provisions_10_0= ruleProvide ) ) otherlv_11= ';' )* )? otherlv_12= 'body' ( (lv_body_13_0= rulePackBody ) ) otherlv_14= 'end'
            {
            otherlv_0=(Token)match(input,35,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0());
              		
            }
            // InternalLustre.g:733:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalLustre.g:734:4: (lv_name_1_0= RULE_ID )
            {
            // InternalLustre.g:734:4: (lv_name_1_0= RULE_ID )
            // InternalLustre.g:735:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getPackageDeclarationAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getPackageDeclarationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalLustre.g:751:3: (otherlv_2= 'uses' ( (lv_usesIds_3_0= RULE_ID ) ) (otherlv_4= ',' ( (lv_usesIds_5_0= RULE_ID ) ) )* otherlv_6= ';' )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==18) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // InternalLustre.g:752:4: otherlv_2= 'uses' ( (lv_usesIds_3_0= RULE_ID ) ) (otherlv_4= ',' ( (lv_usesIds_5_0= RULE_ID ) ) )* otherlv_6= ';'
                    {
                    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPackageDeclarationAccess().getUsesKeyword_2_0());
                      			
                    }
                    // InternalLustre.g:756:4: ( (lv_usesIds_3_0= RULE_ID ) )
                    // InternalLustre.g:757:5: (lv_usesIds_3_0= RULE_ID )
                    {
                    // InternalLustre.g:757:5: (lv_usesIds_3_0= RULE_ID )
                    // InternalLustre.g:758:6: lv_usesIds_3_0= RULE_ID
                    {
                    lv_usesIds_3_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_usesIds_3_0, grammarAccess.getPackageDeclarationAccess().getUsesIdsIDTerminalRuleCall_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPackageDeclarationRule());
                      						}
                      						addWithLastConsumed(
                      							current,
                      							"usesIds",
                      							lv_usesIds_3_0,
                      							"de.cau.cs.kieler.annotations.Annotations.ID");
                      					
                    }

                    }


                    }

                    // InternalLustre.g:774:4: (otherlv_4= ',' ( (lv_usesIds_5_0= RULE_ID ) ) )*
                    loop15:
                    do {
                        int alt15=2;
                        int LA15_0 = input.LA(1);

                        if ( (LA15_0==19) ) {
                            alt15=1;
                        }


                        switch (alt15) {
                    	case 1 :
                    	    // InternalLustre.g:775:5: otherlv_4= ',' ( (lv_usesIds_5_0= RULE_ID ) )
                    	    {
                    	    otherlv_4=(Token)match(input,19,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getPackageDeclarationAccess().getCommaKeyword_2_2_0());
                    	      				
                    	    }
                    	    // InternalLustre.g:779:5: ( (lv_usesIds_5_0= RULE_ID ) )
                    	    // InternalLustre.g:780:6: (lv_usesIds_5_0= RULE_ID )
                    	    {
                    	    // InternalLustre.g:780:6: (lv_usesIds_5_0= RULE_ID )
                    	    // InternalLustre.g:781:7: lv_usesIds_5_0= RULE_ID
                    	    {
                    	    lv_usesIds_5_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_7); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(lv_usesIds_5_0, grammarAccess.getPackageDeclarationAccess().getUsesIdsIDTerminalRuleCall_2_2_1_0());
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getPackageDeclarationRule());
                    	      							}
                    	      							addWithLastConsumed(
                    	      								current,
                    	      								"usesIds",
                    	      								lv_usesIds_5_0,
                    	      								"de.cau.cs.kieler.annotations.Annotations.ID");
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop15;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,20,FollowSets000.FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getPackageDeclarationAccess().getSemicolonKeyword_2_3());
                      			
                    }

                    }
                    break;

            }

            // InternalLustre.g:803:3: (otherlv_7= 'provides' ( (lv_provisions_8_0= ruleProvide ) ) otherlv_9= ';' ( ( (lv_provisions_10_0= ruleProvide ) ) otherlv_11= ';' )* )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==22) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // InternalLustre.g:804:4: otherlv_7= 'provides' ( (lv_provisions_8_0= ruleProvide ) ) otherlv_9= ';' ( ( (lv_provisions_10_0= ruleProvide ) ) otherlv_11= ';' )*
                    {
                    otherlv_7=(Token)match(input,22,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getPackageDeclarationAccess().getProvidesKeyword_3_0());
                      			
                    }
                    // InternalLustre.g:808:4: ( (lv_provisions_8_0= ruleProvide ) )
                    // InternalLustre.g:809:5: (lv_provisions_8_0= ruleProvide )
                    {
                    // InternalLustre.g:809:5: (lv_provisions_8_0= ruleProvide )
                    // InternalLustre.g:810:6: lv_provisions_8_0= ruleProvide
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPackageDeclarationAccess().getProvisionsProvideParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_10);
                    lv_provisions_8_0=ruleProvide();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPackageDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"provisions",
                      							lv_provisions_8_0,
                      							"de.cau.cs.kieler.lustre.Lustre.Provide");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,20,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getPackageDeclarationAccess().getSemicolonKeyword_3_2());
                      			
                    }
                    // InternalLustre.g:831:4: ( ( (lv_provisions_10_0= ruleProvide ) ) otherlv_11= ';' )*
                    loop17:
                    do {
                        int alt17=2;
                        int LA17_0 = input.LA(1);

                        if ( (LA17_0==25||(LA17_0>=28 && LA17_0<=31)) ) {
                            alt17=1;
                        }


                        switch (alt17) {
                    	case 1 :
                    	    // InternalLustre.g:832:5: ( (lv_provisions_10_0= ruleProvide ) ) otherlv_11= ';'
                    	    {
                    	    // InternalLustre.g:832:5: ( (lv_provisions_10_0= ruleProvide ) )
                    	    // InternalLustre.g:833:6: (lv_provisions_10_0= ruleProvide )
                    	    {
                    	    // InternalLustre.g:833:6: (lv_provisions_10_0= ruleProvide )
                    	    // InternalLustre.g:834:7: lv_provisions_10_0= ruleProvide
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getPackageDeclarationAccess().getProvisionsProvideParserRuleCall_3_3_0_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_10);
                    	    lv_provisions_10_0=ruleProvide();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getPackageDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"provisions",
                    	      								lv_provisions_10_0,
                    	      								"de.cau.cs.kieler.lustre.Lustre.Provide");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    otherlv_11=(Token)match(input,20,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_11, grammarAccess.getPackageDeclarationAccess().getSemicolonKeyword_3_3_1());
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop17;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_12=(Token)match(input,23,FollowSets000.FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getPackageDeclarationAccess().getBodyKeyword_4());
              		
            }
            // InternalLustre.g:861:3: ( (lv_body_13_0= rulePackBody ) )
            // InternalLustre.g:862:4: (lv_body_13_0= rulePackBody )
            {
            // InternalLustre.g:862:4: (lv_body_13_0= rulePackBody )
            // InternalLustre.g:863:5: lv_body_13_0= rulePackBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPackageDeclarationAccess().getBodyPackBodyParserRuleCall_5_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_14);
            lv_body_13_0=rulePackBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPackageDeclarationRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_13_0,
              						"de.cau.cs.kieler.lustre.Lustre.PackBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_14=(Token)match(input,24,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_14, grammarAccess.getPackageDeclarationAccess().getEndKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackageDeclaration"


    // $ANTLR start "entryRulePackageEquation"
    // InternalLustre.g:888:1: entryRulePackageEquation returns [EObject current=null] : iv_rulePackageEquation= rulePackageEquation EOF ;
    public final EObject entryRulePackageEquation() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePackageEquation = null;


        try {
            // InternalLustre.g:888:56: (iv_rulePackageEquation= rulePackageEquation EOF )
            // InternalLustre.g:889:2: iv_rulePackageEquation= rulePackageEquation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPackageEquationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePackageEquation=rulePackageEquation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePackageEquation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePackageEquation"


    // $ANTLR start "rulePackageEquation"
    // InternalLustre.g:895:1: rulePackageEquation returns [EObject current=null] : (otherlv_0= 'package' ( (lv_name_1_0= RULE_ID ) ) ( (lv_eqOrIs_2_0= RULE_ID ) ) otherlv_3= '(' ( (lv_byNameStaticArgs_4_0= ruleByNameStaticArg ) ) ( (otherlv_5= ',' | otherlv_6= ';' ) ( (lv_byNameStaticArgs_7_0= ruleByNameStaticArg ) ) )* otherlv_8= ')' otherlv_9= ';' ) ;
    public final EObject rulePackageEquation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token lv_eqOrIs_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        EObject lv_byNameStaticArgs_4_0 = null;

        EObject lv_byNameStaticArgs_7_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:901:2: ( (otherlv_0= 'package' ( (lv_name_1_0= RULE_ID ) ) ( (lv_eqOrIs_2_0= RULE_ID ) ) otherlv_3= '(' ( (lv_byNameStaticArgs_4_0= ruleByNameStaticArg ) ) ( (otherlv_5= ',' | otherlv_6= ';' ) ( (lv_byNameStaticArgs_7_0= ruleByNameStaticArg ) ) )* otherlv_8= ')' otherlv_9= ';' ) )
            // InternalLustre.g:902:2: (otherlv_0= 'package' ( (lv_name_1_0= RULE_ID ) ) ( (lv_eqOrIs_2_0= RULE_ID ) ) otherlv_3= '(' ( (lv_byNameStaticArgs_4_0= ruleByNameStaticArg ) ) ( (otherlv_5= ',' | otherlv_6= ';' ) ( (lv_byNameStaticArgs_7_0= ruleByNameStaticArg ) ) )* otherlv_8= ')' otherlv_9= ';' )
            {
            // InternalLustre.g:902:2: (otherlv_0= 'package' ( (lv_name_1_0= RULE_ID ) ) ( (lv_eqOrIs_2_0= RULE_ID ) ) otherlv_3= '(' ( (lv_byNameStaticArgs_4_0= ruleByNameStaticArg ) ) ( (otherlv_5= ',' | otherlv_6= ';' ) ( (lv_byNameStaticArgs_7_0= ruleByNameStaticArg ) ) )* otherlv_8= ')' otherlv_9= ';' )
            // InternalLustre.g:903:3: otherlv_0= 'package' ( (lv_name_1_0= RULE_ID ) ) ( (lv_eqOrIs_2_0= RULE_ID ) ) otherlv_3= '(' ( (lv_byNameStaticArgs_4_0= ruleByNameStaticArg ) ) ( (otherlv_5= ',' | otherlv_6= ';' ) ( (lv_byNameStaticArgs_7_0= ruleByNameStaticArg ) ) )* otherlv_8= ')' otherlv_9= ';'
            {
            otherlv_0=(Token)match(input,35,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPackageEquationAccess().getPackageKeyword_0());
              		
            }
            // InternalLustre.g:907:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalLustre.g:908:4: (lv_name_1_0= RULE_ID )
            {
            // InternalLustre.g:908:4: (lv_name_1_0= RULE_ID )
            // InternalLustre.g:909:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getPackageEquationAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getPackageEquationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalLustre.g:925:3: ( (lv_eqOrIs_2_0= RULE_ID ) )
            // InternalLustre.g:926:4: (lv_eqOrIs_2_0= RULE_ID )
            {
            // InternalLustre.g:926:4: (lv_eqOrIs_2_0= RULE_ID )
            // InternalLustre.g:927:5: lv_eqOrIs_2_0= RULE_ID
            {
            lv_eqOrIs_2_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_24); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_eqOrIs_2_0, grammarAccess.getPackageEquationAccess().getEqOrIsIDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getPackageEquationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"eqOrIs",
              						lv_eqOrIs_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            otherlv_3=(Token)match(input,36,FollowSets000.FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getPackageEquationAccess().getLeftParenthesisKeyword_3());
              		
            }
            // InternalLustre.g:947:3: ( (lv_byNameStaticArgs_4_0= ruleByNameStaticArg ) )
            // InternalLustre.g:948:4: (lv_byNameStaticArgs_4_0= ruleByNameStaticArg )
            {
            // InternalLustre.g:948:4: (lv_byNameStaticArgs_4_0= ruleByNameStaticArg )
            // InternalLustre.g:949:5: lv_byNameStaticArgs_4_0= ruleByNameStaticArg
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPackageEquationAccess().getByNameStaticArgsByNameStaticArgParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_26);
            lv_byNameStaticArgs_4_0=ruleByNameStaticArg();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPackageEquationRule());
              					}
              					add(
              						current,
              						"byNameStaticArgs",
              						lv_byNameStaticArgs_4_0,
              						"de.cau.cs.kieler.lustre.Lustre.ByNameStaticArg");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:966:3: ( (otherlv_5= ',' | otherlv_6= ';' ) ( (lv_byNameStaticArgs_7_0= ruleByNameStaticArg ) ) )*
            loop20:
            do {
                int alt20=2;
                int LA20_0 = input.LA(1);

                if ( ((LA20_0>=19 && LA20_0<=20)) ) {
                    alt20=1;
                }


                switch (alt20) {
            	case 1 :
            	    // InternalLustre.g:967:4: (otherlv_5= ',' | otherlv_6= ';' ) ( (lv_byNameStaticArgs_7_0= ruleByNameStaticArg ) )
            	    {
            	    // InternalLustre.g:967:4: (otherlv_5= ',' | otherlv_6= ';' )
            	    int alt19=2;
            	    int LA19_0 = input.LA(1);

            	    if ( (LA19_0==19) ) {
            	        alt19=1;
            	    }
            	    else if ( (LA19_0==20) ) {
            	        alt19=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 19, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt19) {
            	        case 1 :
            	            // InternalLustre.g:968:5: otherlv_5= ','
            	            {
            	            otherlv_5=(Token)match(input,19,FollowSets000.FOLLOW_25); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_5, grammarAccess.getPackageEquationAccess().getCommaKeyword_5_0_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalLustre.g:973:5: otherlv_6= ';'
            	            {
            	            otherlv_6=(Token)match(input,20,FollowSets000.FOLLOW_25); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_6, grammarAccess.getPackageEquationAccess().getSemicolonKeyword_5_0_1());
            	              				
            	            }

            	            }
            	            break;

            	    }

            	    // InternalLustre.g:978:4: ( (lv_byNameStaticArgs_7_0= ruleByNameStaticArg ) )
            	    // InternalLustre.g:979:5: (lv_byNameStaticArgs_7_0= ruleByNameStaticArg )
            	    {
            	    // InternalLustre.g:979:5: (lv_byNameStaticArgs_7_0= ruleByNameStaticArg )
            	    // InternalLustre.g:980:6: lv_byNameStaticArgs_7_0= ruleByNameStaticArg
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPackageEquationAccess().getByNameStaticArgsByNameStaticArgParserRuleCall_5_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_26);
            	    lv_byNameStaticArgs_7_0=ruleByNameStaticArg();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPackageEquationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"byNameStaticArgs",
            	      							lv_byNameStaticArgs_7_0,
            	      							"de.cau.cs.kieler.lustre.Lustre.ByNameStaticArg");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop20;
                }
            } while (true);

            otherlv_8=(Token)match(input,37,FollowSets000.FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getPackageEquationAccess().getRightParenthesisKeyword_6());
              		
            }
            otherlv_9=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getPackageEquationAccess().getSemicolonKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackageEquation"


    // $ANTLR start "entryRulePackBody"
    // InternalLustre.g:1010:1: entryRulePackBody returns [EObject current=null] : iv_rulePackBody= rulePackBody EOF ;
    public final EObject entryRulePackBody() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePackBody = null;


        try {
            // InternalLustre.g:1010:49: (iv_rulePackBody= rulePackBody EOF )
            // InternalLustre.g:1011:2: iv_rulePackBody= rulePackBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPackBodyRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePackBody=rulePackBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePackBody; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePackBody"


    // $ANTLR start "rulePackBody"
    // InternalLustre.g:1017:1: rulePackBody returns [EObject current=null] : ( (otherlv_0= 'const' ( (lv_constants_1_0= ruleVariableDeclaration ) ) otherlv_2= ';' ( ( (lv_constants_3_0= ruleVariableDeclaration ) ) otherlv_4= ';' )* ) | ( (lv_externals_5_0= ruleExternalNodeDeclaration ) ) | ( (lv_nodes_6_0= ruleNodeDeclaration ) ) )+ ;
    public final EObject rulePackBody() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_constants_1_0 = null;

        EObject lv_constants_3_0 = null;

        EObject lv_externals_5_0 = null;

        EObject lv_nodes_6_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:1023:2: ( ( (otherlv_0= 'const' ( (lv_constants_1_0= ruleVariableDeclaration ) ) otherlv_2= ';' ( ( (lv_constants_3_0= ruleVariableDeclaration ) ) otherlv_4= ';' )* ) | ( (lv_externals_5_0= ruleExternalNodeDeclaration ) ) | ( (lv_nodes_6_0= ruleNodeDeclaration ) ) )+ )
            // InternalLustre.g:1024:2: ( (otherlv_0= 'const' ( (lv_constants_1_0= ruleVariableDeclaration ) ) otherlv_2= ';' ( ( (lv_constants_3_0= ruleVariableDeclaration ) ) otherlv_4= ';' )* ) | ( (lv_externals_5_0= ruleExternalNodeDeclaration ) ) | ( (lv_nodes_6_0= ruleNodeDeclaration ) ) )+
            {
            // InternalLustre.g:1024:2: ( (otherlv_0= 'const' ( (lv_constants_1_0= ruleVariableDeclaration ) ) otherlv_2= ';' ( ( (lv_constants_3_0= ruleVariableDeclaration ) ) otherlv_4= ';' )* ) | ( (lv_externals_5_0= ruleExternalNodeDeclaration ) ) | ( (lv_nodes_6_0= ruleNodeDeclaration ) ) )+
            int cnt22=0;
            loop22:
            do {
                int alt22=4;
                switch ( input.LA(1) ) {
                case 25:
                    {
                    alt22=1;
                    }
                    break;
                case 29:
                    {
                    int LA22_3 = input.LA(2);

                    if ( ((LA22_3>=30 && LA22_3<=31)) ) {
                        alt22=3;
                    }
                    else if ( (LA22_3==40) ) {
                        alt22=2;
                    }


                    }
                    break;
                case 40:
                    {
                    alt22=2;
                    }
                    break;
                case 30:
                case 31:
                    {
                    alt22=3;
                    }
                    break;

                }

                switch (alt22) {
            	case 1 :
            	    // InternalLustre.g:1025:3: (otherlv_0= 'const' ( (lv_constants_1_0= ruleVariableDeclaration ) ) otherlv_2= ';' ( ( (lv_constants_3_0= ruleVariableDeclaration ) ) otherlv_4= ';' )* )
            	    {
            	    // InternalLustre.g:1025:3: (otherlv_0= 'const' ( (lv_constants_1_0= ruleVariableDeclaration ) ) otherlv_2= ';' ( ( (lv_constants_3_0= ruleVariableDeclaration ) ) otherlv_4= ';' )* )
            	    // InternalLustre.g:1026:4: otherlv_0= 'const' ( (lv_constants_1_0= ruleVariableDeclaration ) ) otherlv_2= ';' ( ( (lv_constants_3_0= ruleVariableDeclaration ) ) otherlv_4= ';' )*
            	    {
            	    otherlv_0=(Token)match(input,25,FollowSets000.FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_0, grammarAccess.getPackBodyAccess().getConstKeyword_0_0());
            	      			
            	    }
            	    // InternalLustre.g:1030:4: ( (lv_constants_1_0= ruleVariableDeclaration ) )
            	    // InternalLustre.g:1031:5: (lv_constants_1_0= ruleVariableDeclaration )
            	    {
            	    // InternalLustre.g:1031:5: (lv_constants_1_0= ruleVariableDeclaration )
            	    // InternalLustre.g:1032:6: lv_constants_1_0= ruleVariableDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPackBodyAccess().getConstantsVariableDeclarationParserRuleCall_0_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_10);
            	    lv_constants_1_0=ruleVariableDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPackBodyRule());
            	      						}
            	      						add(
            	      							current,
            	      							"constants",
            	      							lv_constants_1_0,
            	      							"de.cau.cs.kieler.lustre.Lustre.VariableDeclaration");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_2=(Token)match(input,20,FollowSets000.FOLLOW_28); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getPackBodyAccess().getSemicolonKeyword_0_2());
            	      			
            	    }
            	    // InternalLustre.g:1053:4: ( ( (lv_constants_3_0= ruleVariableDeclaration ) ) otherlv_4= ';' )*
            	    loop21:
            	    do {
            	        int alt21=2;
            	        int LA21_0 = input.LA(1);

            	        if ( (LA21_0==RULE_ID||LA21_0==RULE_COMMENT_ANNOTATION||LA21_0==92) ) {
            	            alt21=1;
            	        }


            	        switch (alt21) {
            	    	case 1 :
            	    	    // InternalLustre.g:1054:5: ( (lv_constants_3_0= ruleVariableDeclaration ) ) otherlv_4= ';'
            	    	    {
            	    	    // InternalLustre.g:1054:5: ( (lv_constants_3_0= ruleVariableDeclaration ) )
            	    	    // InternalLustre.g:1055:6: (lv_constants_3_0= ruleVariableDeclaration )
            	    	    {
            	    	    // InternalLustre.g:1055:6: (lv_constants_3_0= ruleVariableDeclaration )
            	    	    // InternalLustre.g:1056:7: lv_constants_3_0= ruleVariableDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      							newCompositeNode(grammarAccess.getPackBodyAccess().getConstantsVariableDeclarationParserRuleCall_0_3_0_0());
            	    	      						
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_10);
            	    	    lv_constants_3_0=ruleVariableDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      							if (current==null) {
            	    	      								current = createModelElementForParent(grammarAccess.getPackBodyRule());
            	    	      							}
            	    	      							add(
            	    	      								current,
            	    	      								"constants",
            	    	      								lv_constants_3_0,
            	    	      								"de.cau.cs.kieler.lustre.Lustre.VariableDeclaration");
            	    	      							afterParserOrEnumRuleCall();
            	    	      						
            	    	    }

            	    	    }


            	    	    }

            	    	    otherlv_4=(Token)match(input,20,FollowSets000.FOLLOW_28); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      					newLeafNode(otherlv_4, grammarAccess.getPackBodyAccess().getSemicolonKeyword_0_3_1());
            	    	      				
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop21;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalLustre.g:1080:3: ( (lv_externals_5_0= ruleExternalNodeDeclaration ) )
            	    {
            	    // InternalLustre.g:1080:3: ( (lv_externals_5_0= ruleExternalNodeDeclaration ) )
            	    // InternalLustre.g:1081:4: (lv_externals_5_0= ruleExternalNodeDeclaration )
            	    {
            	    // InternalLustre.g:1081:4: (lv_externals_5_0= ruleExternalNodeDeclaration )
            	    // InternalLustre.g:1082:5: lv_externals_5_0= ruleExternalNodeDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPackBodyAccess().getExternalsExternalNodeDeclarationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_29);
            	    lv_externals_5_0=ruleExternalNodeDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPackBodyRule());
            	      					}
            	      					add(
            	      						current,
            	      						"externals",
            	      						lv_externals_5_0,
            	      						"de.cau.cs.kieler.lustre.Lustre.ExternalNodeDeclaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalLustre.g:1100:3: ( (lv_nodes_6_0= ruleNodeDeclaration ) )
            	    {
            	    // InternalLustre.g:1100:3: ( (lv_nodes_6_0= ruleNodeDeclaration ) )
            	    // InternalLustre.g:1101:4: (lv_nodes_6_0= ruleNodeDeclaration )
            	    {
            	    // InternalLustre.g:1101:4: (lv_nodes_6_0= ruleNodeDeclaration )
            	    // InternalLustre.g:1102:5: lv_nodes_6_0= ruleNodeDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPackBodyAccess().getNodesNodeDeclarationParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_29);
            	    lv_nodes_6_0=ruleNodeDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPackBodyRule());
            	      					}
            	      					add(
            	      						current,
            	      						"nodes",
            	      						lv_nodes_6_0,
            	      						"de.cau.cs.kieler.lustre.Lustre.NodeDeclaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt22 >= 1 ) break loop22;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(22, input);
                        throw eee;
                }
                cnt22++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackBody"


    // $ANTLR start "entryRuleTypeDeclaration"
    // InternalLustre.g:1123:1: entryRuleTypeDeclaration returns [EObject current=null] : iv_ruleTypeDeclaration= ruleTypeDeclaration EOF ;
    public final EObject entryRuleTypeDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeDeclaration = null;


        try {
            // InternalLustre.g:1123:56: (iv_ruleTypeDeclaration= ruleTypeDeclaration EOF )
            // InternalLustre.g:1124:2: iv_ruleTypeDeclaration= ruleTypeDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeDeclaration=ruleTypeDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeDeclaration"


    // $ANTLR start "ruleTypeDeclaration"
    // InternalLustre.g:1130:1: ruleTypeDeclaration returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= '=' ( ( (lv_types_2_0= ruleValueType ) ) | ( ( (lv_type_3_0= ruleEnumType ) ) otherlv_4= '{' ( (lv_enums_5_0= rulePrimeID ) ) (otherlv_6= ',' ( (lv_enums_7_0= rulePrimeID ) ) )* otherlv_8= '}' ) | ( ( (lv_type_9_0= ruleStructType ) ) otherlv_10= '{' ( (lv_variables_11_0= ruleVariableDeclaration ) ) (otherlv_12= ';' ( (lv_values_13_0= ruleVariableDeclaration ) ) )* (otherlv_14= ';' )? otherlv_15= '}' ) ) )? otherlv_16= ';' ) ;
    public final EObject ruleTypeDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Enumerator lv_types_2_0 = null;

        Enumerator lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_enums_5_0 = null;

        AntlrDatatypeRuleToken lv_enums_7_0 = null;

        Enumerator lv_type_9_0 = null;

        EObject lv_variables_11_0 = null;

        EObject lv_values_13_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:1136:2: ( ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= '=' ( ( (lv_types_2_0= ruleValueType ) ) | ( ( (lv_type_3_0= ruleEnumType ) ) otherlv_4= '{' ( (lv_enums_5_0= rulePrimeID ) ) (otherlv_6= ',' ( (lv_enums_7_0= rulePrimeID ) ) )* otherlv_8= '}' ) | ( ( (lv_type_9_0= ruleStructType ) ) otherlv_10= '{' ( (lv_variables_11_0= ruleVariableDeclaration ) ) (otherlv_12= ';' ( (lv_values_13_0= ruleVariableDeclaration ) ) )* (otherlv_14= ';' )? otherlv_15= '}' ) ) )? otherlv_16= ';' ) )
            // InternalLustre.g:1137:2: ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= '=' ( ( (lv_types_2_0= ruleValueType ) ) | ( ( (lv_type_3_0= ruleEnumType ) ) otherlv_4= '{' ( (lv_enums_5_0= rulePrimeID ) ) (otherlv_6= ',' ( (lv_enums_7_0= rulePrimeID ) ) )* otherlv_8= '}' ) | ( ( (lv_type_9_0= ruleStructType ) ) otherlv_10= '{' ( (lv_variables_11_0= ruleVariableDeclaration ) ) (otherlv_12= ';' ( (lv_values_13_0= ruleVariableDeclaration ) ) )* (otherlv_14= ';' )? otherlv_15= '}' ) ) )? otherlv_16= ';' )
            {
            // InternalLustre.g:1137:2: ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= '=' ( ( (lv_types_2_0= ruleValueType ) ) | ( ( (lv_type_3_0= ruleEnumType ) ) otherlv_4= '{' ( (lv_enums_5_0= rulePrimeID ) ) (otherlv_6= ',' ( (lv_enums_7_0= rulePrimeID ) ) )* otherlv_8= '}' ) | ( ( (lv_type_9_0= ruleStructType ) ) otherlv_10= '{' ( (lv_variables_11_0= ruleVariableDeclaration ) ) (otherlv_12= ';' ( (lv_values_13_0= ruleVariableDeclaration ) ) )* (otherlv_14= ';' )? otherlv_15= '}' ) ) )? otherlv_16= ';' )
            // InternalLustre.g:1138:3: ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= '=' ( ( (lv_types_2_0= ruleValueType ) ) | ( ( (lv_type_3_0= ruleEnumType ) ) otherlv_4= '{' ( (lv_enums_5_0= rulePrimeID ) ) (otherlv_6= ',' ( (lv_enums_7_0= rulePrimeID ) ) )* otherlv_8= '}' ) | ( ( (lv_type_9_0= ruleStructType ) ) otherlv_10= '{' ( (lv_variables_11_0= ruleVariableDeclaration ) ) (otherlv_12= ';' ( (lv_values_13_0= ruleVariableDeclaration ) ) )* (otherlv_14= ';' )? otherlv_15= '}' ) ) )? otherlv_16= ';'
            {
            // InternalLustre.g:1138:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalLustre.g:1139:4: (lv_name_0_0= RULE_ID )
            {
            // InternalLustre.g:1139:4: (lv_name_0_0= RULE_ID )
            // InternalLustre.g:1140:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getTypeDeclarationAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTypeDeclarationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalLustre.g:1156:3: (otherlv_1= '=' ( ( (lv_types_2_0= ruleValueType ) ) | ( ( (lv_type_3_0= ruleEnumType ) ) otherlv_4= '{' ( (lv_enums_5_0= rulePrimeID ) ) (otherlv_6= ',' ( (lv_enums_7_0= rulePrimeID ) ) )* otherlv_8= '}' ) | ( ( (lv_type_9_0= ruleStructType ) ) otherlv_10= '{' ( (lv_variables_11_0= ruleVariableDeclaration ) ) (otherlv_12= ';' ( (lv_values_13_0= ruleVariableDeclaration ) ) )* (otherlv_14= ';' )? otherlv_15= '}' ) ) )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==27) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // InternalLustre.g:1157:4: otherlv_1= '=' ( ( (lv_types_2_0= ruleValueType ) ) | ( ( (lv_type_3_0= ruleEnumType ) ) otherlv_4= '{' ( (lv_enums_5_0= rulePrimeID ) ) (otherlv_6= ',' ( (lv_enums_7_0= rulePrimeID ) ) )* otherlv_8= '}' ) | ( ( (lv_type_9_0= ruleStructType ) ) otherlv_10= '{' ( (lv_variables_11_0= ruleVariableDeclaration ) ) (otherlv_12= ';' ( (lv_values_13_0= ruleVariableDeclaration ) ) )* (otherlv_14= ';' )? otherlv_15= '}' ) )
                    {
                    otherlv_1=(Token)match(input,27,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getTypeDeclarationAccess().getEqualsSignKeyword_1_0());
                      			
                    }
                    // InternalLustre.g:1161:4: ( ( (lv_types_2_0= ruleValueType ) ) | ( ( (lv_type_3_0= ruleEnumType ) ) otherlv_4= '{' ( (lv_enums_5_0= rulePrimeID ) ) (otherlv_6= ',' ( (lv_enums_7_0= rulePrimeID ) ) )* otherlv_8= '}' ) | ( ( (lv_type_9_0= ruleStructType ) ) otherlv_10= '{' ( (lv_variables_11_0= ruleVariableDeclaration ) ) (otherlv_12= ';' ( (lv_values_13_0= ruleVariableDeclaration ) ) )* (otherlv_14= ';' )? otherlv_15= '}' ) )
                    int alt26=3;
                    switch ( input.LA(1) ) {
                    case 94:
                    case 95:
                    case 96:
                        {
                        alt26=1;
                        }
                        break;
                    case 97:
                        {
                        alt26=2;
                        }
                        break;
                    case 118:
                        {
                        alt26=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 26, 0, input);

                        throw nvae;
                    }

                    switch (alt26) {
                        case 1 :
                            // InternalLustre.g:1162:5: ( (lv_types_2_0= ruleValueType ) )
                            {
                            // InternalLustre.g:1162:5: ( (lv_types_2_0= ruleValueType ) )
                            // InternalLustre.g:1163:6: (lv_types_2_0= ruleValueType )
                            {
                            // InternalLustre.g:1163:6: (lv_types_2_0= ruleValueType )
                            // InternalLustre.g:1164:7: lv_types_2_0= ruleValueType
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getTypeDeclarationAccess().getTypesValueTypeEnumRuleCall_1_1_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_10);
                            lv_types_2_0=ruleValueType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
                              							}
                              							set(
                              								current,
                              								"types",
                              								lv_types_2_0,
                              								"de.cau.cs.kieler.lustre.Lustre.ValueType");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalLustre.g:1182:5: ( ( (lv_type_3_0= ruleEnumType ) ) otherlv_4= '{' ( (lv_enums_5_0= rulePrimeID ) ) (otherlv_6= ',' ( (lv_enums_7_0= rulePrimeID ) ) )* otherlv_8= '}' )
                            {
                            // InternalLustre.g:1182:5: ( ( (lv_type_3_0= ruleEnumType ) ) otherlv_4= '{' ( (lv_enums_5_0= rulePrimeID ) ) (otherlv_6= ',' ( (lv_enums_7_0= rulePrimeID ) ) )* otherlv_8= '}' )
                            // InternalLustre.g:1183:6: ( (lv_type_3_0= ruleEnumType ) ) otherlv_4= '{' ( (lv_enums_5_0= rulePrimeID ) ) (otherlv_6= ',' ( (lv_enums_7_0= rulePrimeID ) ) )* otherlv_8= '}'
                            {
                            // InternalLustre.g:1183:6: ( (lv_type_3_0= ruleEnumType ) )
                            // InternalLustre.g:1184:7: (lv_type_3_0= ruleEnumType )
                            {
                            // InternalLustre.g:1184:7: (lv_type_3_0= ruleEnumType )
                            // InternalLustre.g:1185:8: lv_type_3_0= ruleEnumType
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getTypeDeclarationAccess().getTypeEnumTypeEnumRuleCall_1_1_1_0_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_32);
                            lv_type_3_0=ruleEnumType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
                              								}
                              								set(
                              									current,
                              									"type",
                              									lv_type_3_0,
                              									"de.cau.cs.kieler.lustre.Lustre.EnumType");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_4=(Token)match(input,38,FollowSets000.FOLLOW_33); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_4, grammarAccess.getTypeDeclarationAccess().getLeftCurlyBracketKeyword_1_1_1_1());
                              					
                            }
                            // InternalLustre.g:1206:6: ( (lv_enums_5_0= rulePrimeID ) )
                            // InternalLustre.g:1207:7: (lv_enums_5_0= rulePrimeID )
                            {
                            // InternalLustre.g:1207:7: (lv_enums_5_0= rulePrimeID )
                            // InternalLustre.g:1208:8: lv_enums_5_0= rulePrimeID
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getTypeDeclarationAccess().getEnumsPrimeIDParserRuleCall_1_1_1_2_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_34);
                            lv_enums_5_0=rulePrimeID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
                              								}
                              								add(
                              									current,
                              									"enums",
                              									lv_enums_5_0,
                              									"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalLustre.g:1225:6: (otherlv_6= ',' ( (lv_enums_7_0= rulePrimeID ) ) )*
                            loop23:
                            do {
                                int alt23=2;
                                int LA23_0 = input.LA(1);

                                if ( (LA23_0==19) ) {
                                    alt23=1;
                                }


                                switch (alt23) {
                            	case 1 :
                            	    // InternalLustre.g:1226:7: otherlv_6= ',' ( (lv_enums_7_0= rulePrimeID ) )
                            	    {
                            	    otherlv_6=(Token)match(input,19,FollowSets000.FOLLOW_33); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_6, grammarAccess.getTypeDeclarationAccess().getCommaKeyword_1_1_1_3_0());
                            	      						
                            	    }
                            	    // InternalLustre.g:1230:7: ( (lv_enums_7_0= rulePrimeID ) )
                            	    // InternalLustre.g:1231:8: (lv_enums_7_0= rulePrimeID )
                            	    {
                            	    // InternalLustre.g:1231:8: (lv_enums_7_0= rulePrimeID )
                            	    // InternalLustre.g:1232:9: lv_enums_7_0= rulePrimeID
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getTypeDeclarationAccess().getEnumsPrimeIDParserRuleCall_1_1_1_3_1_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_34);
                            	    lv_enums_7_0=rulePrimeID();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"enums",
                            	      										lv_enums_7_0,
                            	      										"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop23;
                                }
                            } while (true);

                            otherlv_8=(Token)match(input,39,FollowSets000.FOLLOW_10); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getTypeDeclarationAccess().getRightCurlyBracketKeyword_1_1_1_4());
                              					
                            }

                            }


                            }
                            break;
                        case 3 :
                            // InternalLustre.g:1256:5: ( ( (lv_type_9_0= ruleStructType ) ) otherlv_10= '{' ( (lv_variables_11_0= ruleVariableDeclaration ) ) (otherlv_12= ';' ( (lv_values_13_0= ruleVariableDeclaration ) ) )* (otherlv_14= ';' )? otherlv_15= '}' )
                            {
                            // InternalLustre.g:1256:5: ( ( (lv_type_9_0= ruleStructType ) ) otherlv_10= '{' ( (lv_variables_11_0= ruleVariableDeclaration ) ) (otherlv_12= ';' ( (lv_values_13_0= ruleVariableDeclaration ) ) )* (otherlv_14= ';' )? otherlv_15= '}' )
                            // InternalLustre.g:1257:6: ( (lv_type_9_0= ruleStructType ) ) otherlv_10= '{' ( (lv_variables_11_0= ruleVariableDeclaration ) ) (otherlv_12= ';' ( (lv_values_13_0= ruleVariableDeclaration ) ) )* (otherlv_14= ';' )? otherlv_15= '}'
                            {
                            // InternalLustre.g:1257:6: ( (lv_type_9_0= ruleStructType ) )
                            // InternalLustre.g:1258:7: (lv_type_9_0= ruleStructType )
                            {
                            // InternalLustre.g:1258:7: (lv_type_9_0= ruleStructType )
                            // InternalLustre.g:1259:8: lv_type_9_0= ruleStructType
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getTypeDeclarationAccess().getTypeStructTypeEnumRuleCall_1_1_2_0_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_32);
                            lv_type_9_0=ruleStructType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
                              								}
                              								set(
                              									current,
                              									"type",
                              									lv_type_9_0,
                              									"de.cau.cs.kieler.kexpressions.KExpressions.StructType");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_10=(Token)match(input,38,FollowSets000.FOLLOW_27); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getTypeDeclarationAccess().getLeftCurlyBracketKeyword_1_1_2_1());
                              					
                            }
                            // InternalLustre.g:1280:6: ( (lv_variables_11_0= ruleVariableDeclaration ) )
                            // InternalLustre.g:1281:7: (lv_variables_11_0= ruleVariableDeclaration )
                            {
                            // InternalLustre.g:1281:7: (lv_variables_11_0= ruleVariableDeclaration )
                            // InternalLustre.g:1282:8: lv_variables_11_0= ruleVariableDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getTypeDeclarationAccess().getVariablesVariableDeclarationParserRuleCall_1_1_2_2_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_35);
                            lv_variables_11_0=ruleVariableDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
                              								}
                              								set(
                              									current,
                              									"variables",
                              									lv_variables_11_0,
                              									"de.cau.cs.kieler.lustre.Lustre.VariableDeclaration");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalLustre.g:1299:6: (otherlv_12= ';' ( (lv_values_13_0= ruleVariableDeclaration ) ) )*
                            loop24:
                            do {
                                int alt24=2;
                                int LA24_0 = input.LA(1);

                                if ( (LA24_0==20) ) {
                                    int LA24_1 = input.LA(2);

                                    if ( (LA24_1==RULE_ID||LA24_1==RULE_COMMENT_ANNOTATION||LA24_1==92) ) {
                                        alt24=1;
                                    }


                                }


                                switch (alt24) {
                            	case 1 :
                            	    // InternalLustre.g:1300:7: otherlv_12= ';' ( (lv_values_13_0= ruleVariableDeclaration ) )
                            	    {
                            	    otherlv_12=(Token)match(input,20,FollowSets000.FOLLOW_27); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_12, grammarAccess.getTypeDeclarationAccess().getSemicolonKeyword_1_1_2_3_0());
                            	      						
                            	    }
                            	    // InternalLustre.g:1304:7: ( (lv_values_13_0= ruleVariableDeclaration ) )
                            	    // InternalLustre.g:1305:8: (lv_values_13_0= ruleVariableDeclaration )
                            	    {
                            	    // InternalLustre.g:1305:8: (lv_values_13_0= ruleVariableDeclaration )
                            	    // InternalLustre.g:1306:9: lv_values_13_0= ruleVariableDeclaration
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getTypeDeclarationAccess().getValuesVariableDeclarationParserRuleCall_1_1_2_3_1_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_35);
                            	    lv_values_13_0=ruleVariableDeclaration();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"values",
                            	      										lv_values_13_0,
                            	      										"de.cau.cs.kieler.lustre.Lustre.VariableDeclaration");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop24;
                                }
                            } while (true);

                            // InternalLustre.g:1324:6: (otherlv_14= ';' )?
                            int alt25=2;
                            int LA25_0 = input.LA(1);

                            if ( (LA25_0==20) ) {
                                alt25=1;
                            }
                            switch (alt25) {
                                case 1 :
                                    // InternalLustre.g:1325:7: otherlv_14= ';'
                                    {
                                    otherlv_14=(Token)match(input,20,FollowSets000.FOLLOW_36); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_14, grammarAccess.getTypeDeclarationAccess().getSemicolonKeyword_1_1_2_4());
                                      						
                                    }

                                    }
                                    break;

                            }

                            otherlv_15=(Token)match(input,39,FollowSets000.FOLLOW_10); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_15, grammarAccess.getTypeDeclarationAccess().getRightCurlyBracketKeyword_1_1_2_5());
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_16=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_16, grammarAccess.getTypeDeclarationAccess().getSemicolonKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeDeclaration"


    // $ANTLR start "entryRuleExternalNodeDeclaration"
    // InternalLustre.g:1345:1: entryRuleExternalNodeDeclaration returns [EObject current=null] : iv_ruleExternalNodeDeclaration= ruleExternalNodeDeclaration EOF ;
    public final EObject entryRuleExternalNodeDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExternalNodeDeclaration = null;


        try {
            // InternalLustre.g:1345:64: (iv_ruleExternalNodeDeclaration= ruleExternalNodeDeclaration EOF )
            // InternalLustre.g:1346:2: iv_ruleExternalNodeDeclaration= ruleExternalNodeDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExternalNodeDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExternalNodeDeclaration=ruleExternalNodeDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExternalNodeDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExternalNodeDeclaration"


    // $ANTLR start "ruleExternalNodeDeclaration"
    // InternalLustre.g:1352:1: ruleExternalNodeDeclaration returns [EObject current=null] : ( ( (lv_isUnsafe_0_0= 'unsafe' ) )? otherlv_1= 'extern' (otherlv_2= 'function' | ( (lv_hasState_3_0= 'node' ) ) ) ( (lv_name_4_0= RULE_ID ) ) ( (lv_input_5_0= ruleParams ) ) otherlv_6= 'returns' ( (lv_output_7_0= ruleParams ) ) (otherlv_8= ';' )? ) ;
    public final EObject ruleExternalNodeDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_isUnsafe_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_hasState_3_0=null;
        Token lv_name_4_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject lv_input_5_0 = null;

        EObject lv_output_7_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:1358:2: ( ( ( (lv_isUnsafe_0_0= 'unsafe' ) )? otherlv_1= 'extern' (otherlv_2= 'function' | ( (lv_hasState_3_0= 'node' ) ) ) ( (lv_name_4_0= RULE_ID ) ) ( (lv_input_5_0= ruleParams ) ) otherlv_6= 'returns' ( (lv_output_7_0= ruleParams ) ) (otherlv_8= ';' )? ) )
            // InternalLustre.g:1359:2: ( ( (lv_isUnsafe_0_0= 'unsafe' ) )? otherlv_1= 'extern' (otherlv_2= 'function' | ( (lv_hasState_3_0= 'node' ) ) ) ( (lv_name_4_0= RULE_ID ) ) ( (lv_input_5_0= ruleParams ) ) otherlv_6= 'returns' ( (lv_output_7_0= ruleParams ) ) (otherlv_8= ';' )? )
            {
            // InternalLustre.g:1359:2: ( ( (lv_isUnsafe_0_0= 'unsafe' ) )? otherlv_1= 'extern' (otherlv_2= 'function' | ( (lv_hasState_3_0= 'node' ) ) ) ( (lv_name_4_0= RULE_ID ) ) ( (lv_input_5_0= ruleParams ) ) otherlv_6= 'returns' ( (lv_output_7_0= ruleParams ) ) (otherlv_8= ';' )? )
            // InternalLustre.g:1360:3: ( (lv_isUnsafe_0_0= 'unsafe' ) )? otherlv_1= 'extern' (otherlv_2= 'function' | ( (lv_hasState_3_0= 'node' ) ) ) ( (lv_name_4_0= RULE_ID ) ) ( (lv_input_5_0= ruleParams ) ) otherlv_6= 'returns' ( (lv_output_7_0= ruleParams ) ) (otherlv_8= ';' )?
            {
            // InternalLustre.g:1360:3: ( (lv_isUnsafe_0_0= 'unsafe' ) )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==29) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // InternalLustre.g:1361:4: (lv_isUnsafe_0_0= 'unsafe' )
                    {
                    // InternalLustre.g:1361:4: (lv_isUnsafe_0_0= 'unsafe' )
                    // InternalLustre.g:1362:5: lv_isUnsafe_0_0= 'unsafe'
                    {
                    lv_isUnsafe_0_0=(Token)match(input,29,FollowSets000.FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isUnsafe_0_0, grammarAccess.getExternalNodeDeclarationAccess().getIsUnsafeUnsafeKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getExternalNodeDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "isUnsafe", true, "unsafe");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,40,FollowSets000.FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getExternalNodeDeclarationAccess().getExternKeyword_1());
              		
            }
            // InternalLustre.g:1378:3: (otherlv_2= 'function' | ( (lv_hasState_3_0= 'node' ) ) )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==31) ) {
                alt29=1;
            }
            else if ( (LA29_0==30) ) {
                alt29=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // InternalLustre.g:1379:4: otherlv_2= 'function'
                    {
                    otherlv_2=(Token)match(input,31,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getExternalNodeDeclarationAccess().getFunctionKeyword_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalLustre.g:1384:4: ( (lv_hasState_3_0= 'node' ) )
                    {
                    // InternalLustre.g:1384:4: ( (lv_hasState_3_0= 'node' ) )
                    // InternalLustre.g:1385:5: (lv_hasState_3_0= 'node' )
                    {
                    // InternalLustre.g:1385:5: (lv_hasState_3_0= 'node' )
                    // InternalLustre.g:1386:6: lv_hasState_3_0= 'node'
                    {
                    lv_hasState_3_0=(Token)match(input,30,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_hasState_3_0, grammarAccess.getExternalNodeDeclarationAccess().getHasStateNodeKeyword_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getExternalNodeDeclarationRule());
                      						}
                      						setWithLastConsumed(current, "hasState", true, "node");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalLustre.g:1399:3: ( (lv_name_4_0= RULE_ID ) )
            // InternalLustre.g:1400:4: (lv_name_4_0= RULE_ID )
            {
            // InternalLustre.g:1400:4: (lv_name_4_0= RULE_ID )
            // InternalLustre.g:1401:5: lv_name_4_0= RULE_ID
            {
            lv_name_4_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_4_0, grammarAccess.getExternalNodeDeclarationAccess().getNameIDTerminalRuleCall_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getExternalNodeDeclarationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_4_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalLustre.g:1417:3: ( (lv_input_5_0= ruleParams ) )
            // InternalLustre.g:1418:4: (lv_input_5_0= ruleParams )
            {
            // InternalLustre.g:1418:4: (lv_input_5_0= ruleParams )
            // InternalLustre.g:1419:5: lv_input_5_0= ruleParams
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExternalNodeDeclarationAccess().getInputParamsParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_22);
            lv_input_5_0=ruleParams();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExternalNodeDeclarationRule());
              					}
              					set(
              						current,
              						"input",
              						lv_input_5_0,
              						"de.cau.cs.kieler.lustre.Lustre.Params");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,34,FollowSets000.FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getExternalNodeDeclarationAccess().getReturnsKeyword_5());
              		
            }
            // InternalLustre.g:1440:3: ( (lv_output_7_0= ruleParams ) )
            // InternalLustre.g:1441:4: (lv_output_7_0= ruleParams )
            {
            // InternalLustre.g:1441:4: (lv_output_7_0= ruleParams )
            // InternalLustre.g:1442:5: lv_output_7_0= ruleParams
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExternalNodeDeclarationAccess().getOutputParamsParserRuleCall_6_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_38);
            lv_output_7_0=ruleParams();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExternalNodeDeclarationRule());
              					}
              					set(
              						current,
              						"output",
              						lv_output_7_0,
              						"de.cau.cs.kieler.lustre.Lustre.Params");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:1459:3: (otherlv_8= ';' )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==20) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // InternalLustre.g:1460:4: otherlv_8= ';'
                    {
                    otherlv_8=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getExternalNodeDeclarationAccess().getSemicolonKeyword_7());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExternalNodeDeclaration"


    // $ANTLR start "entryRuleNodeDeclaration"
    // InternalLustre.g:1469:1: entryRuleNodeDeclaration returns [EObject current=null] : iv_ruleNodeDeclaration= ruleNodeDeclaration EOF ;
    public final EObject entryRuleNodeDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNodeDeclaration = null;


        try {
            // InternalLustre.g:1469:56: (iv_ruleNodeDeclaration= ruleNodeDeclaration EOF )
            // InternalLustre.g:1470:2: iv_ruleNodeDeclaration= ruleNodeDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNodeDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNodeDeclaration=ruleNodeDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNodeDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNodeDeclaration"


    // $ANTLR start "ruleNodeDeclaration"
    // InternalLustre.g:1476:1: ruleNodeDeclaration returns [EObject current=null] : ( ( (lv_isUnsafe_0_0= 'unsafe' ) )? (otherlv_1= 'function' | ( (lv_hasState_2_0= 'node' ) ) ) ( (lv_name_3_0= RULE_ID ) ) (otherlv_4= '<<' ( (lv_staticParams_5_0= ruleStaticParam ) ) (otherlv_6= ';' ( (lv_staticParams_7_0= ruleStaticParam ) ) )* otherlv_8= '>>' )? ( ( ( (lv_input_9_0= ruleParams ) ) otherlv_10= 'returns' ( (lv_output_11_0= ruleParams ) ) ( (otherlv_12= '=' ( (lv_effectiveNode_13_0= ruleNodeReference ) ) (otherlv_14= '<<' ( (lv_staticArgs_15_0= ruleStaticArg ) ) (otherlv_16= ';' ( (lv_staticArgs_17_0= ruleStaticArg ) ) )* otherlv_18= '>>' )? ) | ( (otherlv_19= ';' )? ( (otherlv_20= 'const' ( (lv_constants_21_0= ruleVariableDeclaration ) ) otherlv_22= ';' ( ( (lv_constants_23_0= ruleVariableDeclaration ) ) otherlv_24= ';' )* ) | (otherlv_25= 'var' ( (lv_variables_26_0= ruleClockedVariableDeclaration ) ) (otherlv_27= ';' ( (lv_variables_28_0= ruleClockedVariableDeclaration ) ) )* otherlv_29= ';' ) )* otherlv_30= 'let' ( ( (lv_equations_31_0= ruleEquation ) ) | ( (lv_assertions_32_0= ruleAssertion ) ) | ( (lv_automatons_33_0= ruleAutomaton ) ) )* otherlv_34= 'tel' (otherlv_35= '.' | (otherlv_36= ';' )? ) ) ) ) | (otherlv_37= '=' ( (lv_effectiveNode_38_0= ruleNodeReference ) ) (otherlv_39= '<<' ( (lv_staticArgs_40_0= ruleStaticArg ) ) (otherlv_41= ';' ( (lv_staticArgs_42_0= ruleStaticArg ) ) )* otherlv_43= '>>' )? ) ) ) ;
    public final EObject ruleNodeDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_isUnsafe_0_0=null;
        Token otherlv_1=null;
        Token lv_hasState_2_0=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        Token otherlv_29=null;
        Token otherlv_30=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token otherlv_36=null;
        Token otherlv_37=null;
        Token otherlv_39=null;
        Token otherlv_41=null;
        Token otherlv_43=null;
        EObject lv_staticParams_5_0 = null;

        EObject lv_staticParams_7_0 = null;

        EObject lv_input_9_0 = null;

        EObject lv_output_11_0 = null;

        AntlrDatatypeRuleToken lv_effectiveNode_13_0 = null;

        EObject lv_staticArgs_15_0 = null;

        EObject lv_staticArgs_17_0 = null;

        EObject lv_constants_21_0 = null;

        EObject lv_constants_23_0 = null;

        EObject lv_variables_26_0 = null;

        EObject lv_variables_28_0 = null;

        EObject lv_equations_31_0 = null;

        EObject lv_assertions_32_0 = null;

        EObject lv_automatons_33_0 = null;

        AntlrDatatypeRuleToken lv_effectiveNode_38_0 = null;

        EObject lv_staticArgs_40_0 = null;

        EObject lv_staticArgs_42_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:1482:2: ( ( ( (lv_isUnsafe_0_0= 'unsafe' ) )? (otherlv_1= 'function' | ( (lv_hasState_2_0= 'node' ) ) ) ( (lv_name_3_0= RULE_ID ) ) (otherlv_4= '<<' ( (lv_staticParams_5_0= ruleStaticParam ) ) (otherlv_6= ';' ( (lv_staticParams_7_0= ruleStaticParam ) ) )* otherlv_8= '>>' )? ( ( ( (lv_input_9_0= ruleParams ) ) otherlv_10= 'returns' ( (lv_output_11_0= ruleParams ) ) ( (otherlv_12= '=' ( (lv_effectiveNode_13_0= ruleNodeReference ) ) (otherlv_14= '<<' ( (lv_staticArgs_15_0= ruleStaticArg ) ) (otherlv_16= ';' ( (lv_staticArgs_17_0= ruleStaticArg ) ) )* otherlv_18= '>>' )? ) | ( (otherlv_19= ';' )? ( (otherlv_20= 'const' ( (lv_constants_21_0= ruleVariableDeclaration ) ) otherlv_22= ';' ( ( (lv_constants_23_0= ruleVariableDeclaration ) ) otherlv_24= ';' )* ) | (otherlv_25= 'var' ( (lv_variables_26_0= ruleClockedVariableDeclaration ) ) (otherlv_27= ';' ( (lv_variables_28_0= ruleClockedVariableDeclaration ) ) )* otherlv_29= ';' ) )* otherlv_30= 'let' ( ( (lv_equations_31_0= ruleEquation ) ) | ( (lv_assertions_32_0= ruleAssertion ) ) | ( (lv_automatons_33_0= ruleAutomaton ) ) )* otherlv_34= 'tel' (otherlv_35= '.' | (otherlv_36= ';' )? ) ) ) ) | (otherlv_37= '=' ( (lv_effectiveNode_38_0= ruleNodeReference ) ) (otherlv_39= '<<' ( (lv_staticArgs_40_0= ruleStaticArg ) ) (otherlv_41= ';' ( (lv_staticArgs_42_0= ruleStaticArg ) ) )* otherlv_43= '>>' )? ) ) ) )
            // InternalLustre.g:1483:2: ( ( (lv_isUnsafe_0_0= 'unsafe' ) )? (otherlv_1= 'function' | ( (lv_hasState_2_0= 'node' ) ) ) ( (lv_name_3_0= RULE_ID ) ) (otherlv_4= '<<' ( (lv_staticParams_5_0= ruleStaticParam ) ) (otherlv_6= ';' ( (lv_staticParams_7_0= ruleStaticParam ) ) )* otherlv_8= '>>' )? ( ( ( (lv_input_9_0= ruleParams ) ) otherlv_10= 'returns' ( (lv_output_11_0= ruleParams ) ) ( (otherlv_12= '=' ( (lv_effectiveNode_13_0= ruleNodeReference ) ) (otherlv_14= '<<' ( (lv_staticArgs_15_0= ruleStaticArg ) ) (otherlv_16= ';' ( (lv_staticArgs_17_0= ruleStaticArg ) ) )* otherlv_18= '>>' )? ) | ( (otherlv_19= ';' )? ( (otherlv_20= 'const' ( (lv_constants_21_0= ruleVariableDeclaration ) ) otherlv_22= ';' ( ( (lv_constants_23_0= ruleVariableDeclaration ) ) otherlv_24= ';' )* ) | (otherlv_25= 'var' ( (lv_variables_26_0= ruleClockedVariableDeclaration ) ) (otherlv_27= ';' ( (lv_variables_28_0= ruleClockedVariableDeclaration ) ) )* otherlv_29= ';' ) )* otherlv_30= 'let' ( ( (lv_equations_31_0= ruleEquation ) ) | ( (lv_assertions_32_0= ruleAssertion ) ) | ( (lv_automatons_33_0= ruleAutomaton ) ) )* otherlv_34= 'tel' (otherlv_35= '.' | (otherlv_36= ';' )? ) ) ) ) | (otherlv_37= '=' ( (lv_effectiveNode_38_0= ruleNodeReference ) ) (otherlv_39= '<<' ( (lv_staticArgs_40_0= ruleStaticArg ) ) (otherlv_41= ';' ( (lv_staticArgs_42_0= ruleStaticArg ) ) )* otherlv_43= '>>' )? ) ) )
            {
            // InternalLustre.g:1483:2: ( ( (lv_isUnsafe_0_0= 'unsafe' ) )? (otherlv_1= 'function' | ( (lv_hasState_2_0= 'node' ) ) ) ( (lv_name_3_0= RULE_ID ) ) (otherlv_4= '<<' ( (lv_staticParams_5_0= ruleStaticParam ) ) (otherlv_6= ';' ( (lv_staticParams_7_0= ruleStaticParam ) ) )* otherlv_8= '>>' )? ( ( ( (lv_input_9_0= ruleParams ) ) otherlv_10= 'returns' ( (lv_output_11_0= ruleParams ) ) ( (otherlv_12= '=' ( (lv_effectiveNode_13_0= ruleNodeReference ) ) (otherlv_14= '<<' ( (lv_staticArgs_15_0= ruleStaticArg ) ) (otherlv_16= ';' ( (lv_staticArgs_17_0= ruleStaticArg ) ) )* otherlv_18= '>>' )? ) | ( (otherlv_19= ';' )? ( (otherlv_20= 'const' ( (lv_constants_21_0= ruleVariableDeclaration ) ) otherlv_22= ';' ( ( (lv_constants_23_0= ruleVariableDeclaration ) ) otherlv_24= ';' )* ) | (otherlv_25= 'var' ( (lv_variables_26_0= ruleClockedVariableDeclaration ) ) (otherlv_27= ';' ( (lv_variables_28_0= ruleClockedVariableDeclaration ) ) )* otherlv_29= ';' ) )* otherlv_30= 'let' ( ( (lv_equations_31_0= ruleEquation ) ) | ( (lv_assertions_32_0= ruleAssertion ) ) | ( (lv_automatons_33_0= ruleAutomaton ) ) )* otherlv_34= 'tel' (otherlv_35= '.' | (otherlv_36= ';' )? ) ) ) ) | (otherlv_37= '=' ( (lv_effectiveNode_38_0= ruleNodeReference ) ) (otherlv_39= '<<' ( (lv_staticArgs_40_0= ruleStaticArg ) ) (otherlv_41= ';' ( (lv_staticArgs_42_0= ruleStaticArg ) ) )* otherlv_43= '>>' )? ) ) )
            // InternalLustre.g:1484:3: ( (lv_isUnsafe_0_0= 'unsafe' ) )? (otherlv_1= 'function' | ( (lv_hasState_2_0= 'node' ) ) ) ( (lv_name_3_0= RULE_ID ) ) (otherlv_4= '<<' ( (lv_staticParams_5_0= ruleStaticParam ) ) (otherlv_6= ';' ( (lv_staticParams_7_0= ruleStaticParam ) ) )* otherlv_8= '>>' )? ( ( ( (lv_input_9_0= ruleParams ) ) otherlv_10= 'returns' ( (lv_output_11_0= ruleParams ) ) ( (otherlv_12= '=' ( (lv_effectiveNode_13_0= ruleNodeReference ) ) (otherlv_14= '<<' ( (lv_staticArgs_15_0= ruleStaticArg ) ) (otherlv_16= ';' ( (lv_staticArgs_17_0= ruleStaticArg ) ) )* otherlv_18= '>>' )? ) | ( (otherlv_19= ';' )? ( (otherlv_20= 'const' ( (lv_constants_21_0= ruleVariableDeclaration ) ) otherlv_22= ';' ( ( (lv_constants_23_0= ruleVariableDeclaration ) ) otherlv_24= ';' )* ) | (otherlv_25= 'var' ( (lv_variables_26_0= ruleClockedVariableDeclaration ) ) (otherlv_27= ';' ( (lv_variables_28_0= ruleClockedVariableDeclaration ) ) )* otherlv_29= ';' ) )* otherlv_30= 'let' ( ( (lv_equations_31_0= ruleEquation ) ) | ( (lv_assertions_32_0= ruleAssertion ) ) | ( (lv_automatons_33_0= ruleAutomaton ) ) )* otherlv_34= 'tel' (otherlv_35= '.' | (otherlv_36= ';' )? ) ) ) ) | (otherlv_37= '=' ( (lv_effectiveNode_38_0= ruleNodeReference ) ) (otherlv_39= '<<' ( (lv_staticArgs_40_0= ruleStaticArg ) ) (otherlv_41= ';' ( (lv_staticArgs_42_0= ruleStaticArg ) ) )* otherlv_43= '>>' )? ) )
            {
            // InternalLustre.g:1484:3: ( (lv_isUnsafe_0_0= 'unsafe' ) )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==29) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // InternalLustre.g:1485:4: (lv_isUnsafe_0_0= 'unsafe' )
                    {
                    // InternalLustre.g:1485:4: (lv_isUnsafe_0_0= 'unsafe' )
                    // InternalLustre.g:1486:5: lv_isUnsafe_0_0= 'unsafe'
                    {
                    lv_isUnsafe_0_0=(Token)match(input,29,FollowSets000.FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isUnsafe_0_0, grammarAccess.getNodeDeclarationAccess().getIsUnsafeUnsafeKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getNodeDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "isUnsafe", true, "unsafe");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalLustre.g:1498:3: (otherlv_1= 'function' | ( (lv_hasState_2_0= 'node' ) ) )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==31) ) {
                alt32=1;
            }
            else if ( (LA32_0==30) ) {
                alt32=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // InternalLustre.g:1499:4: otherlv_1= 'function'
                    {
                    otherlv_1=(Token)match(input,31,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getNodeDeclarationAccess().getFunctionKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalLustre.g:1504:4: ( (lv_hasState_2_0= 'node' ) )
                    {
                    // InternalLustre.g:1504:4: ( (lv_hasState_2_0= 'node' ) )
                    // InternalLustre.g:1505:5: (lv_hasState_2_0= 'node' )
                    {
                    // InternalLustre.g:1505:5: (lv_hasState_2_0= 'node' )
                    // InternalLustre.g:1506:6: lv_hasState_2_0= 'node'
                    {
                    lv_hasState_2_0=(Token)match(input,30,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_hasState_2_0, grammarAccess.getNodeDeclarationAccess().getHasStateNodeKeyword_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNodeDeclarationRule());
                      						}
                      						setWithLastConsumed(current, "hasState", true, "node");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalLustre.g:1519:3: ( (lv_name_3_0= RULE_ID ) )
            // InternalLustre.g:1520:4: (lv_name_3_0= RULE_ID )
            {
            // InternalLustre.g:1520:4: (lv_name_3_0= RULE_ID )
            // InternalLustre.g:1521:5: lv_name_3_0= RULE_ID
            {
            lv_name_3_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_3_0, grammarAccess.getNodeDeclarationAccess().getNameIDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getNodeDeclarationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_3_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalLustre.g:1537:3: (otherlv_4= '<<' ( (lv_staticParams_5_0= ruleStaticParam ) ) (otherlv_6= ';' ( (lv_staticParams_7_0= ruleStaticParam ) ) )* otherlv_8= '>>' )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==32) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // InternalLustre.g:1538:4: otherlv_4= '<<' ( (lv_staticParams_5_0= ruleStaticParam ) ) (otherlv_6= ';' ( (lv_staticParams_7_0= ruleStaticParam ) ) )* otherlv_8= '>>'
                    {
                    otherlv_4=(Token)match(input,32,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getNodeDeclarationAccess().getLessThanSignLessThanSignKeyword_3_0());
                      			
                    }
                    // InternalLustre.g:1542:4: ( (lv_staticParams_5_0= ruleStaticParam ) )
                    // InternalLustre.g:1543:5: (lv_staticParams_5_0= ruleStaticParam )
                    {
                    // InternalLustre.g:1543:5: (lv_staticParams_5_0= ruleStaticParam )
                    // InternalLustre.g:1544:6: lv_staticParams_5_0= ruleStaticParam
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNodeDeclarationAccess().getStaticParamsStaticParamParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_21);
                    lv_staticParams_5_0=ruleStaticParam();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"staticParams",
                      							lv_staticParams_5_0,
                      							"de.cau.cs.kieler.lustre.Lustre.StaticParam");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalLustre.g:1561:4: (otherlv_6= ';' ( (lv_staticParams_7_0= ruleStaticParam ) ) )*
                    loop33:
                    do {
                        int alt33=2;
                        int LA33_0 = input.LA(1);

                        if ( (LA33_0==20) ) {
                            alt33=1;
                        }


                        switch (alt33) {
                    	case 1 :
                    	    // InternalLustre.g:1562:5: otherlv_6= ';' ( (lv_staticParams_7_0= ruleStaticParam ) )
                    	    {
                    	    otherlv_6=(Token)match(input,20,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_6, grammarAccess.getNodeDeclarationAccess().getSemicolonKeyword_3_2_0());
                    	      				
                    	    }
                    	    // InternalLustre.g:1566:5: ( (lv_staticParams_7_0= ruleStaticParam ) )
                    	    // InternalLustre.g:1567:6: (lv_staticParams_7_0= ruleStaticParam )
                    	    {
                    	    // InternalLustre.g:1567:6: (lv_staticParams_7_0= ruleStaticParam )
                    	    // InternalLustre.g:1568:7: lv_staticParams_7_0= ruleStaticParam
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getNodeDeclarationAccess().getStaticParamsStaticParamParserRuleCall_3_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_21);
                    	    lv_staticParams_7_0=ruleStaticParam();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"staticParams",
                    	      								lv_staticParams_7_0,
                    	      								"de.cau.cs.kieler.lustre.Lustre.StaticParam");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop33;
                        }
                    } while (true);

                    otherlv_8=(Token)match(input,33,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getNodeDeclarationAccess().getGreaterThanSignGreaterThanSignKeyword_3_3());
                      			
                    }

                    }
                    break;

            }

            // InternalLustre.g:1591:3: ( ( ( (lv_input_9_0= ruleParams ) ) otherlv_10= 'returns' ( (lv_output_11_0= ruleParams ) ) ( (otherlv_12= '=' ( (lv_effectiveNode_13_0= ruleNodeReference ) ) (otherlv_14= '<<' ( (lv_staticArgs_15_0= ruleStaticArg ) ) (otherlv_16= ';' ( (lv_staticArgs_17_0= ruleStaticArg ) ) )* otherlv_18= '>>' )? ) | ( (otherlv_19= ';' )? ( (otherlv_20= 'const' ( (lv_constants_21_0= ruleVariableDeclaration ) ) otherlv_22= ';' ( ( (lv_constants_23_0= ruleVariableDeclaration ) ) otherlv_24= ';' )* ) | (otherlv_25= 'var' ( (lv_variables_26_0= ruleClockedVariableDeclaration ) ) (otherlv_27= ';' ( (lv_variables_28_0= ruleClockedVariableDeclaration ) ) )* otherlv_29= ';' ) )* otherlv_30= 'let' ( ( (lv_equations_31_0= ruleEquation ) ) | ( (lv_assertions_32_0= ruleAssertion ) ) | ( (lv_automatons_33_0= ruleAutomaton ) ) )* otherlv_34= 'tel' (otherlv_35= '.' | (otherlv_36= ';' )? ) ) ) ) | (otherlv_37= '=' ( (lv_effectiveNode_38_0= ruleNodeReference ) ) (otherlv_39= '<<' ( (lv_staticArgs_40_0= ruleStaticArg ) ) (otherlv_41= ';' ( (lv_staticArgs_42_0= ruleStaticArg ) ) )* otherlv_43= '>>' )? ) )
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==36||LA47_0==57) ) {
                alt47=1;
            }
            else if ( (LA47_0==27) ) {
                alt47=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;
            }
            switch (alt47) {
                case 1 :
                    // InternalLustre.g:1592:4: ( ( (lv_input_9_0= ruleParams ) ) otherlv_10= 'returns' ( (lv_output_11_0= ruleParams ) ) ( (otherlv_12= '=' ( (lv_effectiveNode_13_0= ruleNodeReference ) ) (otherlv_14= '<<' ( (lv_staticArgs_15_0= ruleStaticArg ) ) (otherlv_16= ';' ( (lv_staticArgs_17_0= ruleStaticArg ) ) )* otherlv_18= '>>' )? ) | ( (otherlv_19= ';' )? ( (otherlv_20= 'const' ( (lv_constants_21_0= ruleVariableDeclaration ) ) otherlv_22= ';' ( ( (lv_constants_23_0= ruleVariableDeclaration ) ) otherlv_24= ';' )* ) | (otherlv_25= 'var' ( (lv_variables_26_0= ruleClockedVariableDeclaration ) ) (otherlv_27= ';' ( (lv_variables_28_0= ruleClockedVariableDeclaration ) ) )* otherlv_29= ';' ) )* otherlv_30= 'let' ( ( (lv_equations_31_0= ruleEquation ) ) | ( (lv_assertions_32_0= ruleAssertion ) ) | ( (lv_automatons_33_0= ruleAutomaton ) ) )* otherlv_34= 'tel' (otherlv_35= '.' | (otherlv_36= ';' )? ) ) ) )
                    {
                    // InternalLustre.g:1592:4: ( ( (lv_input_9_0= ruleParams ) ) otherlv_10= 'returns' ( (lv_output_11_0= ruleParams ) ) ( (otherlv_12= '=' ( (lv_effectiveNode_13_0= ruleNodeReference ) ) (otherlv_14= '<<' ( (lv_staticArgs_15_0= ruleStaticArg ) ) (otherlv_16= ';' ( (lv_staticArgs_17_0= ruleStaticArg ) ) )* otherlv_18= '>>' )? ) | ( (otherlv_19= ';' )? ( (otherlv_20= 'const' ( (lv_constants_21_0= ruleVariableDeclaration ) ) otherlv_22= ';' ( ( (lv_constants_23_0= ruleVariableDeclaration ) ) otherlv_24= ';' )* ) | (otherlv_25= 'var' ( (lv_variables_26_0= ruleClockedVariableDeclaration ) ) (otherlv_27= ';' ( (lv_variables_28_0= ruleClockedVariableDeclaration ) ) )* otherlv_29= ';' ) )* otherlv_30= 'let' ( ( (lv_equations_31_0= ruleEquation ) ) | ( (lv_assertions_32_0= ruleAssertion ) ) | ( (lv_automatons_33_0= ruleAutomaton ) ) )* otherlv_34= 'tel' (otherlv_35= '.' | (otherlv_36= ';' )? ) ) ) )
                    // InternalLustre.g:1593:5: ( (lv_input_9_0= ruleParams ) ) otherlv_10= 'returns' ( (lv_output_11_0= ruleParams ) ) ( (otherlv_12= '=' ( (lv_effectiveNode_13_0= ruleNodeReference ) ) (otherlv_14= '<<' ( (lv_staticArgs_15_0= ruleStaticArg ) ) (otherlv_16= ';' ( (lv_staticArgs_17_0= ruleStaticArg ) ) )* otherlv_18= '>>' )? ) | ( (otherlv_19= ';' )? ( (otherlv_20= 'const' ( (lv_constants_21_0= ruleVariableDeclaration ) ) otherlv_22= ';' ( ( (lv_constants_23_0= ruleVariableDeclaration ) ) otherlv_24= ';' )* ) | (otherlv_25= 'var' ( (lv_variables_26_0= ruleClockedVariableDeclaration ) ) (otherlv_27= ';' ( (lv_variables_28_0= ruleClockedVariableDeclaration ) ) )* otherlv_29= ';' ) )* otherlv_30= 'let' ( ( (lv_equations_31_0= ruleEquation ) ) | ( (lv_assertions_32_0= ruleAssertion ) ) | ( (lv_automatons_33_0= ruleAutomaton ) ) )* otherlv_34= 'tel' (otherlv_35= '.' | (otherlv_36= ';' )? ) ) )
                    {
                    // InternalLustre.g:1593:5: ( (lv_input_9_0= ruleParams ) )
                    // InternalLustre.g:1594:6: (lv_input_9_0= ruleParams )
                    {
                    // InternalLustre.g:1594:6: (lv_input_9_0= ruleParams )
                    // InternalLustre.g:1595:7: lv_input_9_0= ruleParams
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getNodeDeclarationAccess().getInputParamsParserRuleCall_4_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_22);
                    lv_input_9_0=ruleParams();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
                      							}
                      							set(
                      								current,
                      								"input",
                      								lv_input_9_0,
                      								"de.cau.cs.kieler.lustre.Lustre.Params");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_10=(Token)match(input,34,FollowSets000.FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_10, grammarAccess.getNodeDeclarationAccess().getReturnsKeyword_4_0_1());
                      				
                    }
                    // InternalLustre.g:1616:5: ( (lv_output_11_0= ruleParams ) )
                    // InternalLustre.g:1617:6: (lv_output_11_0= ruleParams )
                    {
                    // InternalLustre.g:1617:6: (lv_output_11_0= ruleParams )
                    // InternalLustre.g:1618:7: lv_output_11_0= ruleParams
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getNodeDeclarationAccess().getOutputParamsParserRuleCall_4_0_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_40);
                    lv_output_11_0=ruleParams();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
                      							}
                      							set(
                      								current,
                      								"output",
                      								lv_output_11_0,
                      								"de.cau.cs.kieler.lustre.Lustre.Params");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalLustre.g:1635:5: ( (otherlv_12= '=' ( (lv_effectiveNode_13_0= ruleNodeReference ) ) (otherlv_14= '<<' ( (lv_staticArgs_15_0= ruleStaticArg ) ) (otherlv_16= ';' ( (lv_staticArgs_17_0= ruleStaticArg ) ) )* otherlv_18= '>>' )? ) | ( (otherlv_19= ';' )? ( (otherlv_20= 'const' ( (lv_constants_21_0= ruleVariableDeclaration ) ) otherlv_22= ';' ( ( (lv_constants_23_0= ruleVariableDeclaration ) ) otherlv_24= ';' )* ) | (otherlv_25= 'var' ( (lv_variables_26_0= ruleClockedVariableDeclaration ) ) (otherlv_27= ';' ( (lv_variables_28_0= ruleClockedVariableDeclaration ) ) )* otherlv_29= ';' ) )* otherlv_30= 'let' ( ( (lv_equations_31_0= ruleEquation ) ) | ( (lv_assertions_32_0= ruleAssertion ) ) | ( (lv_automatons_33_0= ruleAutomaton ) ) )* otherlv_34= 'tel' (otherlv_35= '.' | (otherlv_36= ';' )? ) ) )
                    int alt44=2;
                    int LA44_0 = input.LA(1);

                    if ( (LA44_0==27) ) {
                        alt44=1;
                    }
                    else if ( (LA44_0==20||LA44_0==25||(LA44_0>=41 && LA44_0<=42)) ) {
                        alt44=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 44, 0, input);

                        throw nvae;
                    }
                    switch (alt44) {
                        case 1 :
                            // InternalLustre.g:1636:6: (otherlv_12= '=' ( (lv_effectiveNode_13_0= ruleNodeReference ) ) (otherlv_14= '<<' ( (lv_staticArgs_15_0= ruleStaticArg ) ) (otherlv_16= ';' ( (lv_staticArgs_17_0= ruleStaticArg ) ) )* otherlv_18= '>>' )? )
                            {
                            // InternalLustre.g:1636:6: (otherlv_12= '=' ( (lv_effectiveNode_13_0= ruleNodeReference ) ) (otherlv_14= '<<' ( (lv_staticArgs_15_0= ruleStaticArg ) ) (otherlv_16= ';' ( (lv_staticArgs_17_0= ruleStaticArg ) ) )* otherlv_18= '>>' )? )
                            // InternalLustre.g:1637:7: otherlv_12= '=' ( (lv_effectiveNode_13_0= ruleNodeReference ) ) (otherlv_14= '<<' ( (lv_staticArgs_15_0= ruleStaticArg ) ) (otherlv_16= ';' ( (lv_staticArgs_17_0= ruleStaticArg ) ) )* otherlv_18= '>>' )?
                            {
                            otherlv_12=(Token)match(input,27,FollowSets000.FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_12, grammarAccess.getNodeDeclarationAccess().getEqualsSignKeyword_4_0_3_0_0());
                              						
                            }
                            // InternalLustre.g:1641:7: ( (lv_effectiveNode_13_0= ruleNodeReference ) )
                            // InternalLustre.g:1642:8: (lv_effectiveNode_13_0= ruleNodeReference )
                            {
                            // InternalLustre.g:1642:8: (lv_effectiveNode_13_0= ruleNodeReference )
                            // InternalLustre.g:1643:9: lv_effectiveNode_13_0= ruleNodeReference
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getNodeDeclarationAccess().getEffectiveNodeNodeReferenceParserRuleCall_4_0_3_0_1_0());
                              								
                            }
                            pushFollow(FollowSets000.FOLLOW_41);
                            lv_effectiveNode_13_0=ruleNodeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
                              									}
                              									set(
                              										current,
                              										"effectiveNode",
                              										lv_effectiveNode_13_0,
                              										"de.cau.cs.kieler.lustre.Lustre.NodeReference");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            // InternalLustre.g:1660:7: (otherlv_14= '<<' ( (lv_staticArgs_15_0= ruleStaticArg ) ) (otherlv_16= ';' ( (lv_staticArgs_17_0= ruleStaticArg ) ) )* otherlv_18= '>>' )?
                            int alt36=2;
                            int LA36_0 = input.LA(1);

                            if ( (LA36_0==32) ) {
                                alt36=1;
                            }
                            switch (alt36) {
                                case 1 :
                                    // InternalLustre.g:1661:8: otherlv_14= '<<' ( (lv_staticArgs_15_0= ruleStaticArg ) ) (otherlv_16= ';' ( (lv_staticArgs_17_0= ruleStaticArg ) ) )* otherlv_18= '>>'
                                    {
                                    otherlv_14=(Token)match(input,32,FollowSets000.FOLLOW_42); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_14, grammarAccess.getNodeDeclarationAccess().getLessThanSignLessThanSignKeyword_4_0_3_0_2_0());
                                      							
                                    }
                                    // InternalLustre.g:1665:8: ( (lv_staticArgs_15_0= ruleStaticArg ) )
                                    // InternalLustre.g:1666:9: (lv_staticArgs_15_0= ruleStaticArg )
                                    {
                                    // InternalLustre.g:1666:9: (lv_staticArgs_15_0= ruleStaticArg )
                                    // InternalLustre.g:1667:10: lv_staticArgs_15_0= ruleStaticArg
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getNodeDeclarationAccess().getStaticArgsStaticArgParserRuleCall_4_0_3_0_2_1_0());
                                      									
                                    }
                                    pushFollow(FollowSets000.FOLLOW_21);
                                    lv_staticArgs_15_0=ruleStaticArg();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
                                      										}
                                      										add(
                                      											current,
                                      											"staticArgs",
                                      											lv_staticArgs_15_0,
                                      											"de.cau.cs.kieler.lustre.Lustre.StaticArg");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }

                                    // InternalLustre.g:1684:8: (otherlv_16= ';' ( (lv_staticArgs_17_0= ruleStaticArg ) ) )*
                                    loop35:
                                    do {
                                        int alt35=2;
                                        int LA35_0 = input.LA(1);

                                        if ( (LA35_0==20) ) {
                                            alt35=1;
                                        }


                                        switch (alt35) {
                                    	case 1 :
                                    	    // InternalLustre.g:1685:9: otherlv_16= ';' ( (lv_staticArgs_17_0= ruleStaticArg ) )
                                    	    {
                                    	    otherlv_16=(Token)match(input,20,FollowSets000.FOLLOW_42); if (state.failed) return current;
                                    	    if ( state.backtracking==0 ) {

                                    	      									newLeafNode(otherlv_16, grammarAccess.getNodeDeclarationAccess().getSemicolonKeyword_4_0_3_0_2_2_0());
                                    	      								
                                    	    }
                                    	    // InternalLustre.g:1689:9: ( (lv_staticArgs_17_0= ruleStaticArg ) )
                                    	    // InternalLustre.g:1690:10: (lv_staticArgs_17_0= ruleStaticArg )
                                    	    {
                                    	    // InternalLustre.g:1690:10: (lv_staticArgs_17_0= ruleStaticArg )
                                    	    // InternalLustre.g:1691:11: lv_staticArgs_17_0= ruleStaticArg
                                    	    {
                                    	    if ( state.backtracking==0 ) {

                                    	      											newCompositeNode(grammarAccess.getNodeDeclarationAccess().getStaticArgsStaticArgParserRuleCall_4_0_3_0_2_2_1_0());
                                    	      										
                                    	    }
                                    	    pushFollow(FollowSets000.FOLLOW_21);
                                    	    lv_staticArgs_17_0=ruleStaticArg();

                                    	    state._fsp--;
                                    	    if (state.failed) return current;
                                    	    if ( state.backtracking==0 ) {

                                    	      											if (current==null) {
                                    	      												current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
                                    	      											}
                                    	      											add(
                                    	      												current,
                                    	      												"staticArgs",
                                    	      												lv_staticArgs_17_0,
                                    	      												"de.cau.cs.kieler.lustre.Lustre.StaticArg");
                                    	      											afterParserOrEnumRuleCall();
                                    	      										
                                    	    }

                                    	    }


                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    break loop35;
                                        }
                                    } while (true);

                                    otherlv_18=(Token)match(input,33,FollowSets000.FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_18, grammarAccess.getNodeDeclarationAccess().getGreaterThanSignGreaterThanSignKeyword_4_0_3_0_2_3());
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalLustre.g:1716:6: ( (otherlv_19= ';' )? ( (otherlv_20= 'const' ( (lv_constants_21_0= ruleVariableDeclaration ) ) otherlv_22= ';' ( ( (lv_constants_23_0= ruleVariableDeclaration ) ) otherlv_24= ';' )* ) | (otherlv_25= 'var' ( (lv_variables_26_0= ruleClockedVariableDeclaration ) ) (otherlv_27= ';' ( (lv_variables_28_0= ruleClockedVariableDeclaration ) ) )* otherlv_29= ';' ) )* otherlv_30= 'let' ( ( (lv_equations_31_0= ruleEquation ) ) | ( (lv_assertions_32_0= ruleAssertion ) ) | ( (lv_automatons_33_0= ruleAutomaton ) ) )* otherlv_34= 'tel' (otherlv_35= '.' | (otherlv_36= ';' )? ) )
                            {
                            // InternalLustre.g:1716:6: ( (otherlv_19= ';' )? ( (otherlv_20= 'const' ( (lv_constants_21_0= ruleVariableDeclaration ) ) otherlv_22= ';' ( ( (lv_constants_23_0= ruleVariableDeclaration ) ) otherlv_24= ';' )* ) | (otherlv_25= 'var' ( (lv_variables_26_0= ruleClockedVariableDeclaration ) ) (otherlv_27= ';' ( (lv_variables_28_0= ruleClockedVariableDeclaration ) ) )* otherlv_29= ';' ) )* otherlv_30= 'let' ( ( (lv_equations_31_0= ruleEquation ) ) | ( (lv_assertions_32_0= ruleAssertion ) ) | ( (lv_automatons_33_0= ruleAutomaton ) ) )* otherlv_34= 'tel' (otherlv_35= '.' | (otherlv_36= ';' )? ) )
                            // InternalLustre.g:1717:7: (otherlv_19= ';' )? ( (otherlv_20= 'const' ( (lv_constants_21_0= ruleVariableDeclaration ) ) otherlv_22= ';' ( ( (lv_constants_23_0= ruleVariableDeclaration ) ) otherlv_24= ';' )* ) | (otherlv_25= 'var' ( (lv_variables_26_0= ruleClockedVariableDeclaration ) ) (otherlv_27= ';' ( (lv_variables_28_0= ruleClockedVariableDeclaration ) ) )* otherlv_29= ';' ) )* otherlv_30= 'let' ( ( (lv_equations_31_0= ruleEquation ) ) | ( (lv_assertions_32_0= ruleAssertion ) ) | ( (lv_automatons_33_0= ruleAutomaton ) ) )* otherlv_34= 'tel' (otherlv_35= '.' | (otherlv_36= ';' )? )
                            {
                            // InternalLustre.g:1717:7: (otherlv_19= ';' )?
                            int alt37=2;
                            int LA37_0 = input.LA(1);

                            if ( (LA37_0==20) ) {
                                alt37=1;
                            }
                            switch (alt37) {
                                case 1 :
                                    // InternalLustre.g:1718:8: otherlv_19= ';'
                                    {
                                    otherlv_19=(Token)match(input,20,FollowSets000.FOLLOW_43); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_19, grammarAccess.getNodeDeclarationAccess().getSemicolonKeyword_4_0_3_1_0());
                                      							
                                    }

                                    }
                                    break;

                            }

                            // InternalLustre.g:1723:7: ( (otherlv_20= 'const' ( (lv_constants_21_0= ruleVariableDeclaration ) ) otherlv_22= ';' ( ( (lv_constants_23_0= ruleVariableDeclaration ) ) otherlv_24= ';' )* ) | (otherlv_25= 'var' ( (lv_variables_26_0= ruleClockedVariableDeclaration ) ) (otherlv_27= ';' ( (lv_variables_28_0= ruleClockedVariableDeclaration ) ) )* otherlv_29= ';' ) )*
                            loop40:
                            do {
                                int alt40=3;
                                int LA40_0 = input.LA(1);

                                if ( (LA40_0==25) ) {
                                    alt40=1;
                                }
                                else if ( (LA40_0==41) ) {
                                    alt40=2;
                                }


                                switch (alt40) {
                            	case 1 :
                            	    // InternalLustre.g:1724:8: (otherlv_20= 'const' ( (lv_constants_21_0= ruleVariableDeclaration ) ) otherlv_22= ';' ( ( (lv_constants_23_0= ruleVariableDeclaration ) ) otherlv_24= ';' )* )
                            	    {
                            	    // InternalLustre.g:1724:8: (otherlv_20= 'const' ( (lv_constants_21_0= ruleVariableDeclaration ) ) otherlv_22= ';' ( ( (lv_constants_23_0= ruleVariableDeclaration ) ) otherlv_24= ';' )* )
                            	    // InternalLustre.g:1725:9: otherlv_20= 'const' ( (lv_constants_21_0= ruleVariableDeclaration ) ) otherlv_22= ';' ( ( (lv_constants_23_0= ruleVariableDeclaration ) ) otherlv_24= ';' )*
                            	    {
                            	    otherlv_20=(Token)match(input,25,FollowSets000.FOLLOW_27); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									newLeafNode(otherlv_20, grammarAccess.getNodeDeclarationAccess().getConstKeyword_4_0_3_1_1_0_0());
                            	      								
                            	    }
                            	    // InternalLustre.g:1729:9: ( (lv_constants_21_0= ruleVariableDeclaration ) )
                            	    // InternalLustre.g:1730:10: (lv_constants_21_0= ruleVariableDeclaration )
                            	    {
                            	    // InternalLustre.g:1730:10: (lv_constants_21_0= ruleVariableDeclaration )
                            	    // InternalLustre.g:1731:11: lv_constants_21_0= ruleVariableDeclaration
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      											newCompositeNode(grammarAccess.getNodeDeclarationAccess().getConstantsVariableDeclarationParserRuleCall_4_0_3_1_1_0_1_0());
                            	      										
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_10);
                            	    lv_constants_21_0=ruleVariableDeclaration();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      											if (current==null) {
                            	      												current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
                            	      											}
                            	      											add(
                            	      												current,
                            	      												"constants",
                            	      												lv_constants_21_0,
                            	      												"de.cau.cs.kieler.lustre.Lustre.VariableDeclaration");
                            	      											afterParserOrEnumRuleCall();
                            	      										
                            	    }

                            	    }


                            	    }

                            	    otherlv_22=(Token)match(input,20,FollowSets000.FOLLOW_44); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									newLeafNode(otherlv_22, grammarAccess.getNodeDeclarationAccess().getSemicolonKeyword_4_0_3_1_1_0_2());
                            	      								
                            	    }
                            	    // InternalLustre.g:1752:9: ( ( (lv_constants_23_0= ruleVariableDeclaration ) ) otherlv_24= ';' )*
                            	    loop38:
                            	    do {
                            	        int alt38=2;
                            	        int LA38_0 = input.LA(1);

                            	        if ( (LA38_0==RULE_ID||LA38_0==RULE_COMMENT_ANNOTATION||LA38_0==92) ) {
                            	            alt38=1;
                            	        }


                            	        switch (alt38) {
                            	    	case 1 :
                            	    	    // InternalLustre.g:1753:10: ( (lv_constants_23_0= ruleVariableDeclaration ) ) otherlv_24= ';'
                            	    	    {
                            	    	    // InternalLustre.g:1753:10: ( (lv_constants_23_0= ruleVariableDeclaration ) )
                            	    	    // InternalLustre.g:1754:11: (lv_constants_23_0= ruleVariableDeclaration )
                            	    	    {
                            	    	    // InternalLustre.g:1754:11: (lv_constants_23_0= ruleVariableDeclaration )
                            	    	    // InternalLustre.g:1755:12: lv_constants_23_0= ruleVariableDeclaration
                            	    	    {
                            	    	    if ( state.backtracking==0 ) {

                            	    	      												newCompositeNode(grammarAccess.getNodeDeclarationAccess().getConstantsVariableDeclarationParserRuleCall_4_0_3_1_1_0_3_0_0());
                            	    	      											
                            	    	    }
                            	    	    pushFollow(FollowSets000.FOLLOW_10);
                            	    	    lv_constants_23_0=ruleVariableDeclaration();

                            	    	    state._fsp--;
                            	    	    if (state.failed) return current;
                            	    	    if ( state.backtracking==0 ) {

                            	    	      												if (current==null) {
                            	    	      													current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
                            	    	      												}
                            	    	      												add(
                            	    	      													current,
                            	    	      													"constants",
                            	    	      													lv_constants_23_0,
                            	    	      													"de.cau.cs.kieler.lustre.Lustre.VariableDeclaration");
                            	    	      												afterParserOrEnumRuleCall();
                            	    	      											
                            	    	    }

                            	    	    }


                            	    	    }

                            	    	    otherlv_24=(Token)match(input,20,FollowSets000.FOLLOW_44); if (state.failed) return current;
                            	    	    if ( state.backtracking==0 ) {

                            	    	      										newLeafNode(otherlv_24, grammarAccess.getNodeDeclarationAccess().getSemicolonKeyword_4_0_3_1_1_0_3_1());
                            	    	      									
                            	    	    }

                            	    	    }
                            	    	    break;

                            	    	default :
                            	    	    break loop38;
                            	        }
                            	    } while (true);


                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // InternalLustre.g:1779:8: (otherlv_25= 'var' ( (lv_variables_26_0= ruleClockedVariableDeclaration ) ) (otherlv_27= ';' ( (lv_variables_28_0= ruleClockedVariableDeclaration ) ) )* otherlv_29= ';' )
                            	    {
                            	    // InternalLustre.g:1779:8: (otherlv_25= 'var' ( (lv_variables_26_0= ruleClockedVariableDeclaration ) ) (otherlv_27= ';' ( (lv_variables_28_0= ruleClockedVariableDeclaration ) ) )* otherlv_29= ';' )
                            	    // InternalLustre.g:1780:9: otherlv_25= 'var' ( (lv_variables_26_0= ruleClockedVariableDeclaration ) ) (otherlv_27= ';' ( (lv_variables_28_0= ruleClockedVariableDeclaration ) ) )* otherlv_29= ';'
                            	    {
                            	    otherlv_25=(Token)match(input,41,FollowSets000.FOLLOW_27); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									newLeafNode(otherlv_25, grammarAccess.getNodeDeclarationAccess().getVarKeyword_4_0_3_1_1_1_0());
                            	      								
                            	    }
                            	    // InternalLustre.g:1784:9: ( (lv_variables_26_0= ruleClockedVariableDeclaration ) )
                            	    // InternalLustre.g:1785:10: (lv_variables_26_0= ruleClockedVariableDeclaration )
                            	    {
                            	    // InternalLustre.g:1785:10: (lv_variables_26_0= ruleClockedVariableDeclaration )
                            	    // InternalLustre.g:1786:11: lv_variables_26_0= ruleClockedVariableDeclaration
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      											newCompositeNode(grammarAccess.getNodeDeclarationAccess().getVariablesClockedVariableDeclarationParserRuleCall_4_0_3_1_1_1_1_0());
                            	      										
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_10);
                            	    lv_variables_26_0=ruleClockedVariableDeclaration();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      											if (current==null) {
                            	      												current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
                            	      											}
                            	      											add(
                            	      												current,
                            	      												"variables",
                            	      												lv_variables_26_0,
                            	      												"de.cau.cs.kieler.lustre.Lustre.ClockedVariableDeclaration");
                            	      											afterParserOrEnumRuleCall();
                            	      										
                            	    }

                            	    }


                            	    }

                            	    // InternalLustre.g:1803:9: (otherlv_27= ';' ( (lv_variables_28_0= ruleClockedVariableDeclaration ) ) )*
                            	    loop39:
                            	    do {
                            	        int alt39=2;
                            	        int LA39_0 = input.LA(1);

                            	        if ( (LA39_0==20) ) {
                            	            int LA39_1 = input.LA(2);

                            	            if ( (LA39_1==RULE_ID||LA39_1==RULE_COMMENT_ANNOTATION||LA39_1==92) ) {
                            	                alt39=1;
                            	            }


                            	        }


                            	        switch (alt39) {
                            	    	case 1 :
                            	    	    // InternalLustre.g:1804:10: otherlv_27= ';' ( (lv_variables_28_0= ruleClockedVariableDeclaration ) )
                            	    	    {
                            	    	    otherlv_27=(Token)match(input,20,FollowSets000.FOLLOW_27); if (state.failed) return current;
                            	    	    if ( state.backtracking==0 ) {

                            	    	      										newLeafNode(otherlv_27, grammarAccess.getNodeDeclarationAccess().getSemicolonKeyword_4_0_3_1_1_1_2_0());
                            	    	      									
                            	    	    }
                            	    	    // InternalLustre.g:1808:10: ( (lv_variables_28_0= ruleClockedVariableDeclaration ) )
                            	    	    // InternalLustre.g:1809:11: (lv_variables_28_0= ruleClockedVariableDeclaration )
                            	    	    {
                            	    	    // InternalLustre.g:1809:11: (lv_variables_28_0= ruleClockedVariableDeclaration )
                            	    	    // InternalLustre.g:1810:12: lv_variables_28_0= ruleClockedVariableDeclaration
                            	    	    {
                            	    	    if ( state.backtracking==0 ) {

                            	    	      												newCompositeNode(grammarAccess.getNodeDeclarationAccess().getVariablesClockedVariableDeclarationParserRuleCall_4_0_3_1_1_1_2_1_0());
                            	    	      											
                            	    	    }
                            	    	    pushFollow(FollowSets000.FOLLOW_10);
                            	    	    lv_variables_28_0=ruleClockedVariableDeclaration();

                            	    	    state._fsp--;
                            	    	    if (state.failed) return current;
                            	    	    if ( state.backtracking==0 ) {

                            	    	      												if (current==null) {
                            	    	      													current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
                            	    	      												}
                            	    	      												add(
                            	    	      													current,
                            	    	      													"variables",
                            	    	      													lv_variables_28_0,
                            	    	      													"de.cau.cs.kieler.lustre.Lustre.ClockedVariableDeclaration");
                            	    	      												afterParserOrEnumRuleCall();
                            	    	      											
                            	    	    }

                            	    	    }


                            	    	    }


                            	    	    }
                            	    	    break;

                            	    	default :
                            	    	    break loop39;
                            	        }
                            	    } while (true);

                            	    otherlv_29=(Token)match(input,20,FollowSets000.FOLLOW_43); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									newLeafNode(otherlv_29, grammarAccess.getNodeDeclarationAccess().getSemicolonKeyword_4_0_3_1_1_1_3());
                            	      								
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop40;
                                }
                            } while (true);

                            otherlv_30=(Token)match(input,42,FollowSets000.FOLLOW_45); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_30, grammarAccess.getNodeDeclarationAccess().getLetKeyword_4_0_3_1_2());
                              						
                            }
                            // InternalLustre.g:1838:7: ( ( (lv_equations_31_0= ruleEquation ) ) | ( (lv_assertions_32_0= ruleAssertion ) ) | ( (lv_automatons_33_0= ruleAutomaton ) ) )*
                            loop41:
                            do {
                                int alt41=4;
                                switch ( input.LA(1) ) {
                                case RULE_ID:
                                    {
                                    alt41=1;
                                    }
                                    break;
                                case 45:
                                    {
                                    alt41=2;
                                    }
                                    break;
                                case 46:
                                    {
                                    alt41=3;
                                    }
                                    break;

                                }

                                switch (alt41) {
                            	case 1 :
                            	    // InternalLustre.g:1839:8: ( (lv_equations_31_0= ruleEquation ) )
                            	    {
                            	    // InternalLustre.g:1839:8: ( (lv_equations_31_0= ruleEquation ) )
                            	    // InternalLustre.g:1840:9: (lv_equations_31_0= ruleEquation )
                            	    {
                            	    // InternalLustre.g:1840:9: (lv_equations_31_0= ruleEquation )
                            	    // InternalLustre.g:1841:10: lv_equations_31_0= ruleEquation
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getNodeDeclarationAccess().getEquationsEquationParserRuleCall_4_0_3_1_3_0_0());
                            	      									
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_45);
                            	    lv_equations_31_0=ruleEquation();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"equations",
                            	      											lv_equations_31_0,
                            	      											"de.cau.cs.kieler.lustre.Lustre.Equation");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // InternalLustre.g:1859:8: ( (lv_assertions_32_0= ruleAssertion ) )
                            	    {
                            	    // InternalLustre.g:1859:8: ( (lv_assertions_32_0= ruleAssertion ) )
                            	    // InternalLustre.g:1860:9: (lv_assertions_32_0= ruleAssertion )
                            	    {
                            	    // InternalLustre.g:1860:9: (lv_assertions_32_0= ruleAssertion )
                            	    // InternalLustre.g:1861:10: lv_assertions_32_0= ruleAssertion
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getNodeDeclarationAccess().getAssertionsAssertionParserRuleCall_4_0_3_1_3_1_0());
                            	      									
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_45);
                            	    lv_assertions_32_0=ruleAssertion();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"assertions",
                            	      											lv_assertions_32_0,
                            	      											"de.cau.cs.kieler.lustre.Lustre.Assertion");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;
                            	case 3 :
                            	    // InternalLustre.g:1879:8: ( (lv_automatons_33_0= ruleAutomaton ) )
                            	    {
                            	    // InternalLustre.g:1879:8: ( (lv_automatons_33_0= ruleAutomaton ) )
                            	    // InternalLustre.g:1880:9: (lv_automatons_33_0= ruleAutomaton )
                            	    {
                            	    // InternalLustre.g:1880:9: (lv_automatons_33_0= ruleAutomaton )
                            	    // InternalLustre.g:1881:10: lv_automatons_33_0= ruleAutomaton
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getNodeDeclarationAccess().getAutomatonsAutomatonParserRuleCall_4_0_3_1_3_2_0());
                            	      									
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_45);
                            	    lv_automatons_33_0=ruleAutomaton();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"automatons",
                            	      											lv_automatons_33_0,
                            	      											"de.cau.cs.kieler.lustre.Lustre.Automaton");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop41;
                                }
                            } while (true);

                            otherlv_34=(Token)match(input,43,FollowSets000.FOLLOW_46); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_34, grammarAccess.getNodeDeclarationAccess().getTelKeyword_4_0_3_1_4());
                              						
                            }
                            // InternalLustre.g:1903:7: (otherlv_35= '.' | (otherlv_36= ';' )? )
                            int alt43=2;
                            int LA43_0 = input.LA(1);

                            if ( (LA43_0==44) ) {
                                alt43=1;
                            }
                            else if ( (LA43_0==EOF||LA43_0==20||(LA43_0>=24 && LA43_0<=25)||(LA43_0>=29 && LA43_0<=31)||LA43_0==40) ) {
                                alt43=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 43, 0, input);

                                throw nvae;
                            }
                            switch (alt43) {
                                case 1 :
                                    // InternalLustre.g:1904:8: otherlv_35= '.'
                                    {
                                    otherlv_35=(Token)match(input,44,FollowSets000.FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_35, grammarAccess.getNodeDeclarationAccess().getFullStopKeyword_4_0_3_1_5_0());
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalLustre.g:1909:8: (otherlv_36= ';' )?
                                    {
                                    // InternalLustre.g:1909:8: (otherlv_36= ';' )?
                                    int alt42=2;
                                    int LA42_0 = input.LA(1);

                                    if ( (LA42_0==20) ) {
                                        alt42=1;
                                    }
                                    switch (alt42) {
                                        case 1 :
                                            // InternalLustre.g:1910:9: otherlv_36= ';'
                                            {
                                            otherlv_36=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(otherlv_36, grammarAccess.getNodeDeclarationAccess().getSemicolonKeyword_4_0_3_1_5_1());
                                              								
                                            }

                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:1920:4: (otherlv_37= '=' ( (lv_effectiveNode_38_0= ruleNodeReference ) ) (otherlv_39= '<<' ( (lv_staticArgs_40_0= ruleStaticArg ) ) (otherlv_41= ';' ( (lv_staticArgs_42_0= ruleStaticArg ) ) )* otherlv_43= '>>' )? )
                    {
                    // InternalLustre.g:1920:4: (otherlv_37= '=' ( (lv_effectiveNode_38_0= ruleNodeReference ) ) (otherlv_39= '<<' ( (lv_staticArgs_40_0= ruleStaticArg ) ) (otherlv_41= ';' ( (lv_staticArgs_42_0= ruleStaticArg ) ) )* otherlv_43= '>>' )? )
                    // InternalLustre.g:1921:5: otherlv_37= '=' ( (lv_effectiveNode_38_0= ruleNodeReference ) ) (otherlv_39= '<<' ( (lv_staticArgs_40_0= ruleStaticArg ) ) (otherlv_41= ';' ( (lv_staticArgs_42_0= ruleStaticArg ) ) )* otherlv_43= '>>' )?
                    {
                    otherlv_37=(Token)match(input,27,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_37, grammarAccess.getNodeDeclarationAccess().getEqualsSignKeyword_4_1_0());
                      				
                    }
                    // InternalLustre.g:1925:5: ( (lv_effectiveNode_38_0= ruleNodeReference ) )
                    // InternalLustre.g:1926:6: (lv_effectiveNode_38_0= ruleNodeReference )
                    {
                    // InternalLustre.g:1926:6: (lv_effectiveNode_38_0= ruleNodeReference )
                    // InternalLustre.g:1927:7: lv_effectiveNode_38_0= ruleNodeReference
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getNodeDeclarationAccess().getEffectiveNodeNodeReferenceParserRuleCall_4_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_41);
                    lv_effectiveNode_38_0=ruleNodeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
                      							}
                      							set(
                      								current,
                      								"effectiveNode",
                      								lv_effectiveNode_38_0,
                      								"de.cau.cs.kieler.lustre.Lustre.NodeReference");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalLustre.g:1944:5: (otherlv_39= '<<' ( (lv_staticArgs_40_0= ruleStaticArg ) ) (otherlv_41= ';' ( (lv_staticArgs_42_0= ruleStaticArg ) ) )* otherlv_43= '>>' )?
                    int alt46=2;
                    int LA46_0 = input.LA(1);

                    if ( (LA46_0==32) ) {
                        alt46=1;
                    }
                    switch (alt46) {
                        case 1 :
                            // InternalLustre.g:1945:6: otherlv_39= '<<' ( (lv_staticArgs_40_0= ruleStaticArg ) ) (otherlv_41= ';' ( (lv_staticArgs_42_0= ruleStaticArg ) ) )* otherlv_43= '>>'
                            {
                            otherlv_39=(Token)match(input,32,FollowSets000.FOLLOW_42); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_39, grammarAccess.getNodeDeclarationAccess().getLessThanSignLessThanSignKeyword_4_1_2_0());
                              					
                            }
                            // InternalLustre.g:1949:6: ( (lv_staticArgs_40_0= ruleStaticArg ) )
                            // InternalLustre.g:1950:7: (lv_staticArgs_40_0= ruleStaticArg )
                            {
                            // InternalLustre.g:1950:7: (lv_staticArgs_40_0= ruleStaticArg )
                            // InternalLustre.g:1951:8: lv_staticArgs_40_0= ruleStaticArg
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getNodeDeclarationAccess().getStaticArgsStaticArgParserRuleCall_4_1_2_1_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_21);
                            lv_staticArgs_40_0=ruleStaticArg();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
                              								}
                              								add(
                              									current,
                              									"staticArgs",
                              									lv_staticArgs_40_0,
                              									"de.cau.cs.kieler.lustre.Lustre.StaticArg");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalLustre.g:1968:6: (otherlv_41= ';' ( (lv_staticArgs_42_0= ruleStaticArg ) ) )*
                            loop45:
                            do {
                                int alt45=2;
                                int LA45_0 = input.LA(1);

                                if ( (LA45_0==20) ) {
                                    alt45=1;
                                }


                                switch (alt45) {
                            	case 1 :
                            	    // InternalLustre.g:1969:7: otherlv_41= ';' ( (lv_staticArgs_42_0= ruleStaticArg ) )
                            	    {
                            	    otherlv_41=(Token)match(input,20,FollowSets000.FOLLOW_42); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_41, grammarAccess.getNodeDeclarationAccess().getSemicolonKeyword_4_1_2_2_0());
                            	      						
                            	    }
                            	    // InternalLustre.g:1973:7: ( (lv_staticArgs_42_0= ruleStaticArg ) )
                            	    // InternalLustre.g:1974:8: (lv_staticArgs_42_0= ruleStaticArg )
                            	    {
                            	    // InternalLustre.g:1974:8: (lv_staticArgs_42_0= ruleStaticArg )
                            	    // InternalLustre.g:1975:9: lv_staticArgs_42_0= ruleStaticArg
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getNodeDeclarationAccess().getStaticArgsStaticArgParserRuleCall_4_1_2_2_1_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_21);
                            	    lv_staticArgs_42_0=ruleStaticArg();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"staticArgs",
                            	      										lv_staticArgs_42_0,
                            	      										"de.cau.cs.kieler.lustre.Lustre.StaticArg");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop45;
                                }
                            } while (true);

                            otherlv_43=(Token)match(input,33,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_43, grammarAccess.getNodeDeclarationAccess().getGreaterThanSignGreaterThanSignKeyword_4_1_2_3());
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNodeDeclaration"


    // $ANTLR start "entryRuleEquation"
    // InternalLustre.g:2004:1: entryRuleEquation returns [EObject current=null] : iv_ruleEquation= ruleEquation EOF ;
    public final EObject entryRuleEquation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEquation = null;


        try {
            // InternalLustre.g:2004:49: (iv_ruleEquation= ruleEquation EOF )
            // InternalLustre.g:2005:2: iv_ruleEquation= ruleEquation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEquationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEquation=ruleEquation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEquation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEquation"


    // $ANTLR start "ruleEquation"
    // InternalLustre.g:2011:1: ruleEquation returns [EObject current=null] : ( ( (lv_reference_0_0= ruleValuedObjectReference ) ) ( (lv_operator_1_0= ruleAssignOperator ) ) ( (lv_expression_2_0= ruleExpression ) ) otherlv_3= ';' ) ;
    public final EObject ruleEquation() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        EObject lv_reference_0_0 = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:2017:2: ( ( ( (lv_reference_0_0= ruleValuedObjectReference ) ) ( (lv_operator_1_0= ruleAssignOperator ) ) ( (lv_expression_2_0= ruleExpression ) ) otherlv_3= ';' ) )
            // InternalLustre.g:2018:2: ( ( (lv_reference_0_0= ruleValuedObjectReference ) ) ( (lv_operator_1_0= ruleAssignOperator ) ) ( (lv_expression_2_0= ruleExpression ) ) otherlv_3= ';' )
            {
            // InternalLustre.g:2018:2: ( ( (lv_reference_0_0= ruleValuedObjectReference ) ) ( (lv_operator_1_0= ruleAssignOperator ) ) ( (lv_expression_2_0= ruleExpression ) ) otherlv_3= ';' )
            // InternalLustre.g:2019:3: ( (lv_reference_0_0= ruleValuedObjectReference ) ) ( (lv_operator_1_0= ruleAssignOperator ) ) ( (lv_expression_2_0= ruleExpression ) ) otherlv_3= ';'
            {
            // InternalLustre.g:2019:3: ( (lv_reference_0_0= ruleValuedObjectReference ) )
            // InternalLustre.g:2020:4: (lv_reference_0_0= ruleValuedObjectReference )
            {
            // InternalLustre.g:2020:4: (lv_reference_0_0= ruleValuedObjectReference )
            // InternalLustre.g:2021:5: lv_reference_0_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEquationAccess().getReferenceValuedObjectReferenceParserRuleCall_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_47);
            lv_reference_0_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEquationRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_0_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:2038:3: ( (lv_operator_1_0= ruleAssignOperator ) )
            // InternalLustre.g:2039:4: (lv_operator_1_0= ruleAssignOperator )
            {
            // InternalLustre.g:2039:4: (lv_operator_1_0= ruleAssignOperator )
            // InternalLustre.g:2040:5: lv_operator_1_0= ruleAssignOperator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEquationAccess().getOperatorAssignOperatorEnumRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_18);
            lv_operator_1_0=ruleAssignOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEquationRule());
              					}
              					set(
              						current,
              						"operator",
              						lv_operator_1_0,
              						"de.cau.cs.kieler.lustre.Lustre.AssignOperator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:2057:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalLustre.g:2058:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalLustre.g:2058:4: (lv_expression_2_0= ruleExpression )
            // InternalLustre.g:2059:5: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEquationAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_10);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEquationRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getEquationAccess().getSemicolonKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEquation"


    // $ANTLR start "entryRuleAssertion"
    // InternalLustre.g:2084:1: entryRuleAssertion returns [EObject current=null] : iv_ruleAssertion= ruleAssertion EOF ;
    public final EObject entryRuleAssertion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssertion = null;


        try {
            // InternalLustre.g:2084:50: (iv_ruleAssertion= ruleAssertion EOF )
            // InternalLustre.g:2085:2: iv_ruleAssertion= ruleAssertion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssertionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAssertion=ruleAssertion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssertion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssertion"


    // $ANTLR start "ruleAssertion"
    // InternalLustre.g:2091:1: ruleAssertion returns [EObject current=null] : (otherlv_0= 'assert' this_Expression_1= ruleExpression otherlv_2= ';' ) ;
    public final EObject ruleAssertion() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_Expression_1 = null;



        	enterRule();

        try {
            // InternalLustre.g:2097:2: ( (otherlv_0= 'assert' this_Expression_1= ruleExpression otherlv_2= ';' ) )
            // InternalLustre.g:2098:2: (otherlv_0= 'assert' this_Expression_1= ruleExpression otherlv_2= ';' )
            {
            // InternalLustre.g:2098:2: (otherlv_0= 'assert' this_Expression_1= ruleExpression otherlv_2= ';' )
            // InternalLustre.g:2099:3: otherlv_0= 'assert' this_Expression_1= ruleExpression otherlv_2= ';'
            {
            otherlv_0=(Token)match(input,45,FollowSets000.FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAssertionAccess().getAssertKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAssertionAccess().getExpressionParserRuleCall_1());
              		
            }
            pushFollow(FollowSets000.FOLLOW_10);
            this_Expression_1=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Expression_1;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_2=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAssertionAccess().getSemicolonKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssertion"


    // $ANTLR start "entryRuleAutomaton"
    // InternalLustre.g:2122:1: entryRuleAutomaton returns [EObject current=null] : iv_ruleAutomaton= ruleAutomaton EOF ;
    public final EObject entryRuleAutomaton() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAutomaton = null;


        try {
            // InternalLustre.g:2122:50: (iv_ruleAutomaton= ruleAutomaton EOF )
            // InternalLustre.g:2123:2: iv_ruleAutomaton= ruleAutomaton EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAutomatonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAutomaton=ruleAutomaton();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAutomaton; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAutomaton"


    // $ANTLR start "ruleAutomaton"
    // InternalLustre.g:2129:1: ruleAutomaton returns [EObject current=null] : (otherlv_0= 'automaton' ( (lv_states_1_0= ruleAState ) ) (otherlv_2= '|' ( (lv_states_3_0= ruleAState ) ) )* otherlv_4= 'end' otherlv_5= ';' ) ;
    public final EObject ruleAutomaton() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_states_1_0 = null;

        EObject lv_states_3_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:2135:2: ( (otherlv_0= 'automaton' ( (lv_states_1_0= ruleAState ) ) (otherlv_2= '|' ( (lv_states_3_0= ruleAState ) ) )* otherlv_4= 'end' otherlv_5= ';' ) )
            // InternalLustre.g:2136:2: (otherlv_0= 'automaton' ( (lv_states_1_0= ruleAState ) ) (otherlv_2= '|' ( (lv_states_3_0= ruleAState ) ) )* otherlv_4= 'end' otherlv_5= ';' )
            {
            // InternalLustre.g:2136:2: (otherlv_0= 'automaton' ( (lv_states_1_0= ruleAState ) ) (otherlv_2= '|' ( (lv_states_3_0= ruleAState ) ) )* otherlv_4= 'end' otherlv_5= ';' )
            // InternalLustre.g:2137:3: otherlv_0= 'automaton' ( (lv_states_1_0= ruleAState ) ) (otherlv_2= '|' ( (lv_states_3_0= ruleAState ) ) )* otherlv_4= 'end' otherlv_5= ';'
            {
            otherlv_0=(Token)match(input,46,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAutomatonAccess().getAutomatonKeyword_0());
              		
            }
            // InternalLustre.g:2141:3: ( (lv_states_1_0= ruleAState ) )
            // InternalLustre.g:2142:4: (lv_states_1_0= ruleAState )
            {
            // InternalLustre.g:2142:4: (lv_states_1_0= ruleAState )
            // InternalLustre.g:2143:5: lv_states_1_0= ruleAState
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAutomatonAccess().getStatesAStateParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_48);
            lv_states_1_0=ruleAState();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAutomatonRule());
              					}
              					add(
              						current,
              						"states",
              						lv_states_1_0,
              						"de.cau.cs.kieler.lustre.Lustre.AState");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:2160:3: (otherlv_2= '|' ( (lv_states_3_0= ruleAState ) ) )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==47) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
            	    // InternalLustre.g:2161:4: otherlv_2= '|' ( (lv_states_3_0= ruleAState ) )
            	    {
            	    otherlv_2=(Token)match(input,47,FollowSets000.FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getAutomatonAccess().getVerticalLineKeyword_2_0());
            	      			
            	    }
            	    // InternalLustre.g:2165:4: ( (lv_states_3_0= ruleAState ) )
            	    // InternalLustre.g:2166:5: (lv_states_3_0= ruleAState )
            	    {
            	    // InternalLustre.g:2166:5: (lv_states_3_0= ruleAState )
            	    // InternalLustre.g:2167:6: lv_states_3_0= ruleAState
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAutomatonAccess().getStatesAStateParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_48);
            	    lv_states_3_0=ruleAState();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAutomatonRule());
            	      						}
            	      						add(
            	      							current,
            	      							"states",
            	      							lv_states_3_0,
            	      							"de.cau.cs.kieler.lustre.Lustre.AState");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);

            otherlv_4=(Token)match(input,24,FollowSets000.FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getAutomatonAccess().getEndKeyword_3());
              		
            }
            otherlv_5=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getAutomatonAccess().getSemicolonKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAutomaton"


    // $ANTLR start "entryRuleAState"
    // InternalLustre.g:2197:1: entryRuleAState returns [EObject current=null] : iv_ruleAState= ruleAState EOF ;
    public final EObject entryRuleAState() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAState = null;


        try {
            // InternalLustre.g:2197:47: (iv_ruleAState= ruleAState EOF )
            // InternalLustre.g:2198:2: iv_ruleAState= ruleAState EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAStateRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAState=ruleAState();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAState; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAState"


    // $ANTLR start "ruleAState"
    // InternalLustre.g:2204:1: ruleAState returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '->' ( ( (lv_equations_2_0= ruleEquation ) ) | ( (lv_assertions_3_0= ruleAssertion ) ) | ( (lv_automatons_4_0= ruleAutomaton ) ) )* ( (lv_transitions_5_0= ruleATransition ) )+ ) ;
    public final EObject ruleAState() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        EObject lv_equations_2_0 = null;

        EObject lv_assertions_3_0 = null;

        EObject lv_automatons_4_0 = null;

        EObject lv_transitions_5_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:2210:2: ( ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '->' ( ( (lv_equations_2_0= ruleEquation ) ) | ( (lv_assertions_3_0= ruleAssertion ) ) | ( (lv_automatons_4_0= ruleAutomaton ) ) )* ( (lv_transitions_5_0= ruleATransition ) )+ ) )
            // InternalLustre.g:2211:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '->' ( ( (lv_equations_2_0= ruleEquation ) ) | ( (lv_assertions_3_0= ruleAssertion ) ) | ( (lv_automatons_4_0= ruleAutomaton ) ) )* ( (lv_transitions_5_0= ruleATransition ) )+ )
            {
            // InternalLustre.g:2211:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '->' ( ( (lv_equations_2_0= ruleEquation ) ) | ( (lv_assertions_3_0= ruleAssertion ) ) | ( (lv_automatons_4_0= ruleAutomaton ) ) )* ( (lv_transitions_5_0= ruleATransition ) )+ )
            // InternalLustre.g:2212:3: ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '->' ( ( (lv_equations_2_0= ruleEquation ) ) | ( (lv_assertions_3_0= ruleAssertion ) ) | ( (lv_automatons_4_0= ruleAutomaton ) ) )* ( (lv_transitions_5_0= ruleATransition ) )+
            {
            // InternalLustre.g:2212:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalLustre.g:2213:4: (lv_name_0_0= RULE_ID )
            {
            // InternalLustre.g:2213:4: (lv_name_0_0= RULE_ID )
            // InternalLustre.g:2214:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_49); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getAStateAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAStateRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,48,FollowSets000.FOLLOW_50); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAStateAccess().getHyphenMinusGreaterThanSignKeyword_1());
              		
            }
            // InternalLustre.g:2234:3: ( ( (lv_equations_2_0= ruleEquation ) ) | ( (lv_assertions_3_0= ruleAssertion ) ) | ( (lv_automatons_4_0= ruleAutomaton ) ) )*
            loop49:
            do {
                int alt49=4;
                switch ( input.LA(1) ) {
                case RULE_ID:
                    {
                    alt49=1;
                    }
                    break;
                case 45:
                    {
                    alt49=2;
                    }
                    break;
                case 46:
                    {
                    alt49=3;
                    }
                    break;

                }

                switch (alt49) {
            	case 1 :
            	    // InternalLustre.g:2235:4: ( (lv_equations_2_0= ruleEquation ) )
            	    {
            	    // InternalLustre.g:2235:4: ( (lv_equations_2_0= ruleEquation ) )
            	    // InternalLustre.g:2236:5: (lv_equations_2_0= ruleEquation )
            	    {
            	    // InternalLustre.g:2236:5: (lv_equations_2_0= ruleEquation )
            	    // InternalLustre.g:2237:6: lv_equations_2_0= ruleEquation
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAStateAccess().getEquationsEquationParserRuleCall_2_0_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_50);
            	    lv_equations_2_0=ruleEquation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAStateRule());
            	      						}
            	      						add(
            	      							current,
            	      							"equations",
            	      							lv_equations_2_0,
            	      							"de.cau.cs.kieler.lustre.Lustre.Equation");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalLustre.g:2255:4: ( (lv_assertions_3_0= ruleAssertion ) )
            	    {
            	    // InternalLustre.g:2255:4: ( (lv_assertions_3_0= ruleAssertion ) )
            	    // InternalLustre.g:2256:5: (lv_assertions_3_0= ruleAssertion )
            	    {
            	    // InternalLustre.g:2256:5: (lv_assertions_3_0= ruleAssertion )
            	    // InternalLustre.g:2257:6: lv_assertions_3_0= ruleAssertion
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAStateAccess().getAssertionsAssertionParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_50);
            	    lv_assertions_3_0=ruleAssertion();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAStateRule());
            	      						}
            	      						add(
            	      							current,
            	      							"assertions",
            	      							lv_assertions_3_0,
            	      							"de.cau.cs.kieler.lustre.Lustre.Assertion");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalLustre.g:2275:4: ( (lv_automatons_4_0= ruleAutomaton ) )
            	    {
            	    // InternalLustre.g:2275:4: ( (lv_automatons_4_0= ruleAutomaton ) )
            	    // InternalLustre.g:2276:5: (lv_automatons_4_0= ruleAutomaton )
            	    {
            	    // InternalLustre.g:2276:5: (lv_automatons_4_0= ruleAutomaton )
            	    // InternalLustre.g:2277:6: lv_automatons_4_0= ruleAutomaton
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAStateAccess().getAutomatonsAutomatonParserRuleCall_2_2_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_50);
            	    lv_automatons_4_0=ruleAutomaton();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAStateRule());
            	      						}
            	      						add(
            	      							current,
            	      							"automatons",
            	      							lv_automatons_4_0,
            	      							"de.cau.cs.kieler.lustre.Lustre.Automaton");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);

            // InternalLustre.g:2295:3: ( (lv_transitions_5_0= ruleATransition ) )+
            int cnt50=0;
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( ((LA50_0>=49 && LA50_0<=50)) ) {
                    alt50=1;
                }


                switch (alt50) {
            	case 1 :
            	    // InternalLustre.g:2296:4: (lv_transitions_5_0= ruleATransition )
            	    {
            	    // InternalLustre.g:2296:4: (lv_transitions_5_0= ruleATransition )
            	    // InternalLustre.g:2297:5: lv_transitions_5_0= ruleATransition
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAStateAccess().getTransitionsATransitionParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_51);
            	    lv_transitions_5_0=ruleATransition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAStateRule());
            	      					}
            	      					add(
            	      						current,
            	      						"transitions",
            	      						lv_transitions_5_0,
            	      						"de.cau.cs.kieler.lustre.Lustre.ATransition");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt50 >= 1 ) break loop50;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(50, input);
                        throw eee;
                }
                cnt50++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAState"


    // $ANTLR start "entryRuleATransition"
    // InternalLustre.g:2318:1: entryRuleATransition returns [EObject current=null] : iv_ruleATransition= ruleATransition EOF ;
    public final EObject entryRuleATransition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleATransition = null;


        try {
            // InternalLustre.g:2318:52: (iv_ruleATransition= ruleATransition EOF )
            // InternalLustre.g:2319:2: iv_ruleATransition= ruleATransition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getATransitionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleATransition=ruleATransition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleATransition; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleATransition"


    // $ANTLR start "ruleATransition"
    // InternalLustre.g:2325:1: ruleATransition returns [EObject current=null] : ( (otherlv_0= 'until' | ( (lv_strong_1_0= 'unless' ) ) ) ( (lv_condition_2_0= ruleExpression ) ) (otherlv_3= 'then' | ( (lv_history_4_0= 'continue' ) ) ) ( (otherlv_5= RULE_ID ) ) otherlv_6= ';' ) ;
    public final EObject ruleATransition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_strong_1_0=null;
        Token otherlv_3=null;
        Token lv_history_4_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_condition_2_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:2331:2: ( ( (otherlv_0= 'until' | ( (lv_strong_1_0= 'unless' ) ) ) ( (lv_condition_2_0= ruleExpression ) ) (otherlv_3= 'then' | ( (lv_history_4_0= 'continue' ) ) ) ( (otherlv_5= RULE_ID ) ) otherlv_6= ';' ) )
            // InternalLustre.g:2332:2: ( (otherlv_0= 'until' | ( (lv_strong_1_0= 'unless' ) ) ) ( (lv_condition_2_0= ruleExpression ) ) (otherlv_3= 'then' | ( (lv_history_4_0= 'continue' ) ) ) ( (otherlv_5= RULE_ID ) ) otherlv_6= ';' )
            {
            // InternalLustre.g:2332:2: ( (otherlv_0= 'until' | ( (lv_strong_1_0= 'unless' ) ) ) ( (lv_condition_2_0= ruleExpression ) ) (otherlv_3= 'then' | ( (lv_history_4_0= 'continue' ) ) ) ( (otherlv_5= RULE_ID ) ) otherlv_6= ';' )
            // InternalLustre.g:2333:3: (otherlv_0= 'until' | ( (lv_strong_1_0= 'unless' ) ) ) ( (lv_condition_2_0= ruleExpression ) ) (otherlv_3= 'then' | ( (lv_history_4_0= 'continue' ) ) ) ( (otherlv_5= RULE_ID ) ) otherlv_6= ';'
            {
            // InternalLustre.g:2333:3: (otherlv_0= 'until' | ( (lv_strong_1_0= 'unless' ) ) )
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==49) ) {
                alt51=1;
            }
            else if ( (LA51_0==50) ) {
                alt51=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;
            }
            switch (alt51) {
                case 1 :
                    // InternalLustre.g:2334:4: otherlv_0= 'until'
                    {
                    otherlv_0=(Token)match(input,49,FollowSets000.FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getATransitionAccess().getUntilKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalLustre.g:2339:4: ( (lv_strong_1_0= 'unless' ) )
                    {
                    // InternalLustre.g:2339:4: ( (lv_strong_1_0= 'unless' ) )
                    // InternalLustre.g:2340:5: (lv_strong_1_0= 'unless' )
                    {
                    // InternalLustre.g:2340:5: (lv_strong_1_0= 'unless' )
                    // InternalLustre.g:2341:6: lv_strong_1_0= 'unless'
                    {
                    lv_strong_1_0=(Token)match(input,50,FollowSets000.FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_strong_1_0, grammarAccess.getATransitionAccess().getStrongUnlessKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getATransitionRule());
                      						}
                      						setWithLastConsumed(current, "strong", true, "unless");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalLustre.g:2354:3: ( (lv_condition_2_0= ruleExpression ) )
            // InternalLustre.g:2355:4: (lv_condition_2_0= ruleExpression )
            {
            // InternalLustre.g:2355:4: (lv_condition_2_0= ruleExpression )
            // InternalLustre.g:2356:5: lv_condition_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getATransitionAccess().getConditionExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_52);
            lv_condition_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getATransitionRule());
              					}
              					set(
              						current,
              						"condition",
              						lv_condition_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:2373:3: (otherlv_3= 'then' | ( (lv_history_4_0= 'continue' ) ) )
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==51) ) {
                alt52=1;
            }
            else if ( (LA52_0==52) ) {
                alt52=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }
            switch (alt52) {
                case 1 :
                    // InternalLustre.g:2374:4: otherlv_3= 'then'
                    {
                    otherlv_3=(Token)match(input,51,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getATransitionAccess().getThenKeyword_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalLustre.g:2379:4: ( (lv_history_4_0= 'continue' ) )
                    {
                    // InternalLustre.g:2379:4: ( (lv_history_4_0= 'continue' ) )
                    // InternalLustre.g:2380:5: (lv_history_4_0= 'continue' )
                    {
                    // InternalLustre.g:2380:5: (lv_history_4_0= 'continue' )
                    // InternalLustre.g:2381:6: lv_history_4_0= 'continue'
                    {
                    lv_history_4_0=(Token)match(input,52,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_history_4_0, grammarAccess.getATransitionAccess().getHistoryContinueKeyword_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getATransitionRule());
                      						}
                      						setWithLastConsumed(current, "history", true, "continue");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalLustre.g:2394:3: ( (otherlv_5= RULE_ID ) )
            // InternalLustre.g:2395:4: (otherlv_5= RULE_ID )
            {
            // InternalLustre.g:2395:4: (otherlv_5= RULE_ID )
            // InternalLustre.g:2396:5: otherlv_5= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getATransitionRule());
              					}
              				
            }
            otherlv_5=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_5, grammarAccess.getATransitionAccess().getNextStateAStateCrossReference_3_0());
              				
            }

            }


            }

            otherlv_6=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getATransitionAccess().getSemicolonKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleATransition"


    // $ANTLR start "entryRuleModExpression"
    // InternalLustre.g:2418:1: entryRuleModExpression returns [EObject current=null] : iv_ruleModExpression= ruleModExpression EOF ;
    public final EObject entryRuleModExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModExpression = null;


        try {
            // InternalLustre.g:2418:54: (iv_ruleModExpression= ruleModExpression EOF )
            // InternalLustre.g:2419:2: iv_ruleModExpression= ruleModExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleModExpression=ruleModExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModExpression"


    // $ANTLR start "ruleModExpression"
    // InternalLustre.g:2425:1: ruleModExpression returns [EObject current=null] : (this_IntDivExpression_0= ruleIntDivExpression ( () ( ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )? ) ;
    public final EObject ruleModExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_IntDivExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:2431:2: ( (this_IntDivExpression_0= ruleIntDivExpression ( () ( ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )? ) )
            // InternalLustre.g:2432:2: (this_IntDivExpression_0= ruleIntDivExpression ( () ( ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )? )
            {
            // InternalLustre.g:2432:2: (this_IntDivExpression_0= ruleIntDivExpression ( () ( ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )? )
            // InternalLustre.g:2433:3: this_IntDivExpression_0= ruleIntDivExpression ( () ( ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getModExpressionAccess().getIntDivExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_53);
            this_IntDivExpression_0=ruleIntDivExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_IntDivExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalLustre.g:2444:3: ( () ( ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==53) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalLustre.g:2445:4: () ( ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )*
                    {
                    // InternalLustre.g:2445:4: ()
                    // InternalLustre.g:2446:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getModExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalLustre.g:2455:4: ( ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
                    // InternalLustre.g:2456:5: ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    {
                    // InternalLustre.g:2456:5: ( (lv_operator_2_0= ruleModOperator ) )
                    // InternalLustre.g:2457:6: (lv_operator_2_0= ruleModOperator )
                    {
                    // InternalLustre.g:2457:6: (lv_operator_2_0= ruleModOperator )
                    // InternalLustre.g:2458:7: lv_operator_2_0= ruleModOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getModExpressionAccess().getOperatorModOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_54);
                    lv_operator_2_0=ruleModOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getModExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ModOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalLustre.g:2475:5: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    // InternalLustre.g:2476:6: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    {
                    // InternalLustre.g:2476:6: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    // InternalLustre.g:2477:7: lv_subExpressions_3_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getModExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_53);
                    lv_subExpressions_3_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getModExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalLustre.g:2495:4: (otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )*
                    loop53:
                    do {
                        int alt53=2;
                        int LA53_0 = input.LA(1);

                        if ( (LA53_0==53) ) {
                            alt53=1;
                        }


                        switch (alt53) {
                    	case 1 :
                    	    // InternalLustre.g:2496:5: otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,53,FollowSets000.FOLLOW_54); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getModExpressionAccess().getPercentSignKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalLustre.g:2500:5: ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
                    	    // InternalLustre.g:2501:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                    	    {
                    	    // InternalLustre.g:2501:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                    	    // InternalLustre.g:2502:7: lv_subExpressions_5_0= ruleAtomicValuedExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getModExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_53);
                    	    lv_subExpressions_5_0=ruleAtomicValuedExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getModExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop53;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModExpression"


    // $ANTLR start "entryRuleIntDivExpression"
    // InternalLustre.g:2525:1: entryRuleIntDivExpression returns [EObject current=null] : iv_ruleIntDivExpression= ruleIntDivExpression EOF ;
    public final EObject entryRuleIntDivExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntDivExpression = null;


        try {
            // InternalLustre.g:2525:57: (iv_ruleIntDivExpression= ruleIntDivExpression EOF )
            // InternalLustre.g:2526:2: iv_ruleIntDivExpression= ruleIntDivExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntDivExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIntDivExpression=ruleIntDivExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntDivExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntDivExpression"


    // $ANTLR start "ruleIntDivExpression"
    // InternalLustre.g:2532:1: ruleIntDivExpression returns [EObject current=null] : ( ( () ( (lv_subExpressions_1_0= ruleNegExpression ) ) ( (lv_operator_2_0= ruleIntDivOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) ) | this_NegExpression_4= ruleNegExpression ) ;
    public final EObject ruleIntDivExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_subExpressions_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject this_NegExpression_4 = null;



        	enterRule();

        try {
            // InternalLustre.g:2538:2: ( ( ( () ( (lv_subExpressions_1_0= ruleNegExpression ) ) ( (lv_operator_2_0= ruleIntDivOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) ) | this_NegExpression_4= ruleNegExpression ) )
            // InternalLustre.g:2539:2: ( ( () ( (lv_subExpressions_1_0= ruleNegExpression ) ) ( (lv_operator_2_0= ruleIntDivOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) ) | this_NegExpression_4= ruleNegExpression )
            {
            // InternalLustre.g:2539:2: ( ( () ( (lv_subExpressions_1_0= ruleNegExpression ) ) ( (lv_operator_2_0= ruleIntDivOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) ) | this_NegExpression_4= ruleNegExpression )
            int alt55=2;
            alt55 = dfa55.predict(input);
            switch (alt55) {
                case 1 :
                    // InternalLustre.g:2540:3: ( () ( (lv_subExpressions_1_0= ruleNegExpression ) ) ( (lv_operator_2_0= ruleIntDivOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) )
                    {
                    // InternalLustre.g:2540:3: ( () ( (lv_subExpressions_1_0= ruleNegExpression ) ) ( (lv_operator_2_0= ruleIntDivOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) )
                    // InternalLustre.g:2541:4: () ( (lv_subExpressions_1_0= ruleNegExpression ) ) ( (lv_operator_2_0= ruleIntDivOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) )
                    {
                    // InternalLustre.g:2541:4: ()
                    // InternalLustre.g:2542:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getIntDivExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalLustre.g:2551:4: ( (lv_subExpressions_1_0= ruleNegExpression ) )
                    // InternalLustre.g:2552:5: (lv_subExpressions_1_0= ruleNegExpression )
                    {
                    // InternalLustre.g:2552:5: (lv_subExpressions_1_0= ruleNegExpression )
                    // InternalLustre.g:2553:6: lv_subExpressions_1_0= ruleNegExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIntDivExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_55);
                    lv_subExpressions_1_0=ruleNegExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIntDivExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_1_0,
                      							"de.cau.cs.kieler.lustre.Lustre.NegExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalLustre.g:2570:4: ( (lv_operator_2_0= ruleIntDivOperator ) )
                    // InternalLustre.g:2571:5: (lv_operator_2_0= ruleIntDivOperator )
                    {
                    // InternalLustre.g:2571:5: (lv_operator_2_0= ruleIntDivOperator )
                    // InternalLustre.g:2572:6: lv_operator_2_0= ruleIntDivOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIntDivExpressionAccess().getOperatorIntDivOperatorEnumRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_56);
                    lv_operator_2_0=ruleIntDivOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIntDivExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"de.cau.cs.kieler.lustre.Lustre.IntDivOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalLustre.g:2589:4: ( (lv_subExpressions_3_0= ruleNegExpression ) )
                    // InternalLustre.g:2590:5: (lv_subExpressions_3_0= ruleNegExpression )
                    {
                    // InternalLustre.g:2590:5: (lv_subExpressions_3_0= ruleNegExpression )
                    // InternalLustre.g:2591:6: lv_subExpressions_3_0= ruleNegExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIntDivExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_3_0=ruleNegExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIntDivExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.lustre.Lustre.NegExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:2610:3: this_NegExpression_4= ruleNegExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getIntDivExpressionAccess().getNegExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NegExpression_4=ruleNegExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NegExpression_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntDivExpression"


    // $ANTLR start "entryRuleNegExpression"
    // InternalLustre.g:2625:1: entryRuleNegExpression returns [EObject current=null] : iv_ruleNegExpression= ruleNegExpression EOF ;
    public final EObject entryRuleNegExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNegExpression = null;


        try {
            // InternalLustre.g:2625:54: (iv_ruleNegExpression= ruleNegExpression EOF )
            // InternalLustre.g:2626:2: iv_ruleNegExpression= ruleNegExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNegExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNegExpression=ruleNegExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNegExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNegExpression"


    // $ANTLR start "ruleNegExpression"
    // InternalLustre.g:2632:1: ruleNegExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_FBYExpression_3= ruleFBYExpression ) ;
    public final EObject ruleNegExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_FBYExpression_3 = null;



        	enterRule();

        try {
            // InternalLustre.g:2638:2: ( ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_FBYExpression_3= ruleFBYExpression ) )
            // InternalLustre.g:2639:2: ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_FBYExpression_3= ruleFBYExpression )
            {
            // InternalLustre.g:2639:2: ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_FBYExpression_3= ruleFBYExpression )
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==85) ) {
                alt56=1;
            }
            else if ( ((LA56_0>=RULE_ID && LA56_0<=RULE_COMMENT_ANNOTATION)||LA56_0==36||LA56_0==38||LA56_0==40||LA56_0==78||LA56_0==88||LA56_0==92||LA56_0==107||LA56_0==114||LA56_0==116) ) {
                alt56=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }
            switch (alt56) {
                case 1 :
                    // InternalLustre.g:2640:3: ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) )
                    {
                    // InternalLustre.g:2640:3: ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) )
                    // InternalLustre.g:2641:4: () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) )
                    {
                    // InternalLustre.g:2641:4: ()
                    // InternalLustre.g:2642:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getNegExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalLustre.g:2651:4: ( (lv_operator_1_0= ruleSubOperator ) )
                    // InternalLustre.g:2652:5: (lv_operator_1_0= ruleSubOperator )
                    {
                    // InternalLustre.g:2652:5: (lv_operator_1_0= ruleSubOperator )
                    // InternalLustre.g:2653:6: lv_operator_1_0= ruleSubOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNegExpressionAccess().getOperatorSubOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_56);
                    lv_operator_1_0=ruleSubOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNegExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.SubOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalLustre.g:2670:4: ( (lv_subExpressions_2_0= ruleNegExpression ) )
                    // InternalLustre.g:2671:5: (lv_subExpressions_2_0= ruleNegExpression )
                    {
                    // InternalLustre.g:2671:5: (lv_subExpressions_2_0= ruleNegExpression )
                    // InternalLustre.g:2672:6: lv_subExpressions_2_0= ruleNegExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNegExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleNegExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNegExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.lustre.Lustre.NegExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:2691:3: this_FBYExpression_3= ruleFBYExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNegExpressionAccess().getFBYExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FBYExpression_3=ruleFBYExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FBYExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNegExpression"


    // $ANTLR start "entryRuleFBYExpression"
    // InternalLustre.g:2706:1: entryRuleFBYExpression returns [EObject current=null] : iv_ruleFBYExpression= ruleFBYExpression EOF ;
    public final EObject entryRuleFBYExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFBYExpression = null;


        try {
            // InternalLustre.g:2706:54: (iv_ruleFBYExpression= ruleFBYExpression EOF )
            // InternalLustre.g:2707:2: iv_ruleFBYExpression= ruleFBYExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFBYExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFBYExpression=ruleFBYExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFBYExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFBYExpression"


    // $ANTLR start "ruleFBYExpression"
    // InternalLustre.g:2713:1: ruleFBYExpression returns [EObject current=null] : ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_WhenExpression_4= ruleWhenExpression ) ;
    public final EObject ruleFBYExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_subExpressions_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject this_WhenExpression_4 = null;



        	enterRule();

        try {
            // InternalLustre.g:2719:2: ( ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_WhenExpression_4= ruleWhenExpression ) )
            // InternalLustre.g:2720:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_WhenExpression_4= ruleWhenExpression )
            {
            // InternalLustre.g:2720:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_WhenExpression_4= ruleWhenExpression )
            int alt57=2;
            alt57 = dfa57.predict(input);
            switch (alt57) {
                case 1 :
                    // InternalLustre.g:2721:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
                    {
                    // InternalLustre.g:2721:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
                    // InternalLustre.g:2722:4: () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    {
                    // InternalLustre.g:2722:4: ()
                    // InternalLustre.g:2723:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getFBYExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalLustre.g:2732:4: ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) )
                    // InternalLustre.g:2733:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
                    {
                    // InternalLustre.g:2733:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
                    // InternalLustre.g:2734:6: lv_subExpressions_1_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFBYExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_57);
                    lv_subExpressions_1_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFBYExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalLustre.g:2751:4: ( (lv_operator_2_0= ruleFBYOperator ) )
                    // InternalLustre.g:2752:5: (lv_operator_2_0= ruleFBYOperator )
                    {
                    // InternalLustre.g:2752:5: (lv_operator_2_0= ruleFBYOperator )
                    // InternalLustre.g:2753:6: lv_operator_2_0= ruleFBYOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFBYExpressionAccess().getOperatorFBYOperatorEnumRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_54);
                    lv_operator_2_0=ruleFBYOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFBYExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"de.cau.cs.kieler.lustre.Lustre.FBYOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalLustre.g:2770:4: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    // InternalLustre.g:2771:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    {
                    // InternalLustre.g:2771:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    // InternalLustre.g:2772:6: lv_subExpressions_3_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFBYExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_3_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFBYExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:2791:3: this_WhenExpression_4= ruleWhenExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFBYExpressionAccess().getWhenExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_WhenExpression_4=ruleWhenExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_WhenExpression_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFBYExpression"


    // $ANTLR start "entryRuleWhenExpression"
    // InternalLustre.g:2806:1: entryRuleWhenExpression returns [EObject current=null] : iv_ruleWhenExpression= ruleWhenExpression EOF ;
    public final EObject entryRuleWhenExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWhenExpression = null;


        try {
            // InternalLustre.g:2806:55: (iv_ruleWhenExpression= ruleWhenExpression EOF )
            // InternalLustre.g:2807:2: iv_ruleWhenExpression= ruleWhenExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWhenExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleWhenExpression=ruleWhenExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWhenExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWhenExpression"


    // $ANTLR start "ruleWhenExpression"
    // InternalLustre.g:2813:1: ruleWhenExpression returns [EObject current=null] : ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_CurrentExpression_4= ruleCurrentExpression ) ;
    public final EObject ruleWhenExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_subExpressions_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject this_CurrentExpression_4 = null;



        	enterRule();

        try {
            // InternalLustre.g:2819:2: ( ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_CurrentExpression_4= ruleCurrentExpression ) )
            // InternalLustre.g:2820:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_CurrentExpression_4= ruleCurrentExpression )
            {
            // InternalLustre.g:2820:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_CurrentExpression_4= ruleCurrentExpression )
            int alt58=2;
            alt58 = dfa58.predict(input);
            switch (alt58) {
                case 1 :
                    // InternalLustre.g:2821:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
                    {
                    // InternalLustre.g:2821:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
                    // InternalLustre.g:2822:4: () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    {
                    // InternalLustre.g:2822:4: ()
                    // InternalLustre.g:2823:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getWhenExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalLustre.g:2832:4: ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) )
                    // InternalLustre.g:2833:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
                    {
                    // InternalLustre.g:2833:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
                    // InternalLustre.g:2834:6: lv_subExpressions_1_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getWhenExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_58);
                    lv_subExpressions_1_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getWhenExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalLustre.g:2851:4: ( (lv_operator_2_0= ruleWhenOperator ) )
                    // InternalLustre.g:2852:5: (lv_operator_2_0= ruleWhenOperator )
                    {
                    // InternalLustre.g:2852:5: (lv_operator_2_0= ruleWhenOperator )
                    // InternalLustre.g:2853:6: lv_operator_2_0= ruleWhenOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getWhenExpressionAccess().getOperatorWhenOperatorEnumRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_54);
                    lv_operator_2_0=ruleWhenOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getWhenExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"de.cau.cs.kieler.lustre.Lustre.WhenOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalLustre.g:2870:4: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    // InternalLustre.g:2871:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    {
                    // InternalLustre.g:2871:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    // InternalLustre.g:2872:6: lv_subExpressions_3_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getWhenExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_3_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getWhenExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:2891:3: this_CurrentExpression_4= ruleCurrentExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getWhenExpressionAccess().getCurrentExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CurrentExpression_4=ruleCurrentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CurrentExpression_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWhenExpression"


    // $ANTLR start "entryRuleCurrentExpression"
    // InternalLustre.g:2906:1: entryRuleCurrentExpression returns [EObject current=null] : iv_ruleCurrentExpression= ruleCurrentExpression EOF ;
    public final EObject entryRuleCurrentExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCurrentExpression = null;


        try {
            // InternalLustre.g:2906:58: (iv_ruleCurrentExpression= ruleCurrentExpression EOF )
            // InternalLustre.g:2907:2: iv_ruleCurrentExpression= ruleCurrentExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCurrentExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCurrentExpression=ruleCurrentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCurrentExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCurrentExpression"


    // $ANTLR start "ruleCurrentExpression"
    // InternalLustre.g:2913:1: ruleCurrentExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleCurrentOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) ) | this_PreExpression_3= rulePreExpression ) ;
    public final EObject ruleCurrentExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_PreExpression_3 = null;



        	enterRule();

        try {
            // InternalLustre.g:2919:2: ( ( ( () ( (lv_operator_1_0= ruleCurrentOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) ) | this_PreExpression_3= rulePreExpression ) )
            // InternalLustre.g:2920:2: ( ( () ( (lv_operator_1_0= ruleCurrentOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) ) | this_PreExpression_3= rulePreExpression )
            {
            // InternalLustre.g:2920:2: ( ( () ( (lv_operator_1_0= ruleCurrentOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) ) | this_PreExpression_3= rulePreExpression )
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==107) ) {
                alt59=1;
            }
            else if ( ((LA59_0>=RULE_ID && LA59_0<=RULE_COMMENT_ANNOTATION)||LA59_0==36||LA59_0==38||LA59_0==40||LA59_0==78||LA59_0==88||LA59_0==92||LA59_0==114||LA59_0==116) ) {
                alt59=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;
            }
            switch (alt59) {
                case 1 :
                    // InternalLustre.g:2921:3: ( () ( (lv_operator_1_0= ruleCurrentOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) )
                    {
                    // InternalLustre.g:2921:3: ( () ( (lv_operator_1_0= ruleCurrentOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) )
                    // InternalLustre.g:2922:4: () ( (lv_operator_1_0= ruleCurrentOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) )
                    {
                    // InternalLustre.g:2922:4: ()
                    // InternalLustre.g:2923:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getCurrentExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalLustre.g:2932:4: ( (lv_operator_1_0= ruleCurrentOperator ) )
                    // InternalLustre.g:2933:5: (lv_operator_1_0= ruleCurrentOperator )
                    {
                    // InternalLustre.g:2933:5: (lv_operator_1_0= ruleCurrentOperator )
                    // InternalLustre.g:2934:6: lv_operator_1_0= ruleCurrentOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCurrentExpressionAccess().getOperatorCurrentOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_54);
                    lv_operator_1_0=ruleCurrentOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCurrentExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.lustre.Lustre.CurrentOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalLustre.g:2951:4: ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) )
                    // InternalLustre.g:2952:5: (lv_subExpressions_2_0= ruleAtomicValuedExpression )
                    {
                    // InternalLustre.g:2952:5: (lv_subExpressions_2_0= ruleAtomicValuedExpression )
                    // InternalLustre.g:2953:6: lv_subExpressions_2_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCurrentExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCurrentExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:2972:3: this_PreExpression_3= rulePreExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getCurrentExpressionAccess().getPreExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PreExpression_3=rulePreExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PreExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCurrentExpression"


    // $ANTLR start "entryRulePreExpression"
    // InternalLustre.g:2987:1: entryRulePreExpression returns [EObject current=null] : iv_rulePreExpression= rulePreExpression EOF ;
    public final EObject entryRulePreExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePreExpression = null;


        try {
            // InternalLustre.g:2987:54: (iv_rulePreExpression= rulePreExpression EOF )
            // InternalLustre.g:2988:2: iv_rulePreExpression= rulePreExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPreExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePreExpression=rulePreExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePreExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePreExpression"


    // $ANTLR start "rulePreExpression"
    // InternalLustre.g:2994:1: rulePreExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_3= ruleAtomicValuedExpression ) ;
    public final EObject rulePreExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_AtomicValuedExpression_3 = null;



        	enterRule();

        try {
            // InternalLustre.g:3000:2: ( ( ( () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_3= ruleAtomicValuedExpression ) )
            // InternalLustre.g:3001:2: ( ( () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_3= ruleAtomicValuedExpression )
            {
            // InternalLustre.g:3001:2: ( ( () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_3= ruleAtomicValuedExpression )
            int alt60=2;
            alt60 = dfa60.predict(input);
            switch (alt60) {
                case 1 :
                    // InternalLustre.g:3002:3: ( () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) )
                    {
                    // InternalLustre.g:3002:3: ( () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) )
                    // InternalLustre.g:3003:4: () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) )
                    {
                    // InternalLustre.g:3003:4: ()
                    // InternalLustre.g:3004:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPreExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalLustre.g:3013:4: ( (lv_operator_1_0= rulePreOperator ) )
                    // InternalLustre.g:3014:5: (lv_operator_1_0= rulePreOperator )
                    {
                    // InternalLustre.g:3014:5: (lv_operator_1_0= rulePreOperator )
                    // InternalLustre.g:3015:6: lv_operator_1_0= rulePreOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPreExpressionAccess().getOperatorPreOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_54);
                    lv_operator_1_0=rulePreOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPreExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.PreOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalLustre.g:3032:4: ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) )
                    // InternalLustre.g:3033:5: (lv_subExpressions_2_0= ruleAtomicValuedExpression )
                    {
                    // InternalLustre.g:3033:5: (lv_subExpressions_2_0= ruleAtomicValuedExpression )
                    // InternalLustre.g:3034:6: lv_subExpressions_2_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPreExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPreExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:3053:3: this_AtomicValuedExpression_3= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPreExpressionAccess().getAtomicValuedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicValuedExpression_3=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AtomicValuedExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePreExpression"


    // $ANTLR start "entryRuleBoolExpression"
    // InternalLustre.g:3068:1: entryRuleBoolExpression returns [EObject current=null] : iv_ruleBoolExpression= ruleBoolExpression EOF ;
    public final EObject entryRuleBoolExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBoolExpression = null;


        try {
            // InternalLustre.g:3068:55: (iv_ruleBoolExpression= ruleBoolExpression EOF )
            // InternalLustre.g:3069:2: iv_ruleBoolExpression= ruleBoolExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBoolExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBoolExpression=ruleBoolExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBoolExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBoolExpression"


    // $ANTLR start "ruleBoolExpression"
    // InternalLustre.g:3075:1: ruleBoolExpression returns [EObject current=null] : this_InitExpression_0= ruleInitExpression ;
    public final EObject ruleBoolExpression() throws RecognitionException {
        EObject current = null;

        EObject this_InitExpression_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:3081:2: (this_InitExpression_0= ruleInitExpression )
            // InternalLustre.g:3082:2: this_InitExpression_0= ruleInitExpression
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getBoolExpressionAccess().getInitExpressionParserRuleCall());
              	
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_InitExpression_0=ruleInitExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_InitExpression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBoolExpression"


    // $ANTLR start "entryRuleInitExpression"
    // InternalLustre.g:3096:1: entryRuleInitExpression returns [EObject current=null] : iv_ruleInitExpression= ruleInitExpression EOF ;
    public final EObject entryRuleInitExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInitExpression = null;


        try {
            // InternalLustre.g:3096:55: (iv_ruleInitExpression= ruleInitExpression EOF )
            // InternalLustre.g:3097:2: iv_ruleInitExpression= ruleInitExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInitExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInitExpression=ruleInitExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInitExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInitExpression"


    // $ANTLR start "ruleInitExpression"
    // InternalLustre.g:3103:1: ruleInitExpression returns [EObject current=null] : ( ( () ( (lv_subExpressions_1_0= ruleTernaryOperation ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleTernaryOperation ) ) ) | this_TernaryOperation_4= ruleTernaryOperation ) ;
    public final EObject ruleInitExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_subExpressions_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject this_TernaryOperation_4 = null;



        	enterRule();

        try {
            // InternalLustre.g:3109:2: ( ( ( () ( (lv_subExpressions_1_0= ruleTernaryOperation ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleTernaryOperation ) ) ) | this_TernaryOperation_4= ruleTernaryOperation ) )
            // InternalLustre.g:3110:2: ( ( () ( (lv_subExpressions_1_0= ruleTernaryOperation ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleTernaryOperation ) ) ) | this_TernaryOperation_4= ruleTernaryOperation )
            {
            // InternalLustre.g:3110:2: ( ( () ( (lv_subExpressions_1_0= ruleTernaryOperation ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleTernaryOperation ) ) ) | this_TernaryOperation_4= ruleTernaryOperation )
            int alt61=2;
            alt61 = dfa61.predict(input);
            switch (alt61) {
                case 1 :
                    // InternalLustre.g:3111:3: ( () ( (lv_subExpressions_1_0= ruleTernaryOperation ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleTernaryOperation ) ) )
                    {
                    // InternalLustre.g:3111:3: ( () ( (lv_subExpressions_1_0= ruleTernaryOperation ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleTernaryOperation ) ) )
                    // InternalLustre.g:3112:4: () ( (lv_subExpressions_1_0= ruleTernaryOperation ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleTernaryOperation ) )
                    {
                    // InternalLustre.g:3112:4: ()
                    // InternalLustre.g:3113:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getInitExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalLustre.g:3122:4: ( (lv_subExpressions_1_0= ruleTernaryOperation ) )
                    // InternalLustre.g:3123:5: (lv_subExpressions_1_0= ruleTernaryOperation )
                    {
                    // InternalLustre.g:3123:5: (lv_subExpressions_1_0= ruleTernaryOperation )
                    // InternalLustre.g:3124:6: lv_subExpressions_1_0= ruleTernaryOperation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInitExpressionAccess().getSubExpressionsTernaryOperationParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_49);
                    lv_subExpressions_1_0=ruleTernaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInitExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_1_0,
                      							"de.cau.cs.kieler.lustre.Lustre.TernaryOperation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalLustre.g:3141:4: ( (lv_operator_2_0= ruleInitOperator ) )
                    // InternalLustre.g:3142:5: (lv_operator_2_0= ruleInitOperator )
                    {
                    // InternalLustre.g:3142:5: (lv_operator_2_0= ruleInitOperator )
                    // InternalLustre.g:3143:6: lv_operator_2_0= ruleInitOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInitExpressionAccess().getOperatorInitOperatorEnumRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_18);
                    lv_operator_2_0=ruleInitOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInitExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"de.cau.cs.kieler.lustre.Lustre.InitOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalLustre.g:3160:4: ( (lv_subExpressions_3_0= ruleTernaryOperation ) )
                    // InternalLustre.g:3161:5: (lv_subExpressions_3_0= ruleTernaryOperation )
                    {
                    // InternalLustre.g:3161:5: (lv_subExpressions_3_0= ruleTernaryOperation )
                    // InternalLustre.g:3162:6: lv_subExpressions_3_0= ruleTernaryOperation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInitExpressionAccess().getSubExpressionsTernaryOperationParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_3_0=ruleTernaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInitExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.lustre.Lustre.TernaryOperation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:3181:3: this_TernaryOperation_4= ruleTernaryOperation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getInitExpressionAccess().getTernaryOperationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TernaryOperation_4=ruleTernaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TernaryOperation_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInitExpression"


    // $ANTLR start "entryRuleTernaryOperation"
    // InternalLustre.g:3196:1: entryRuleTernaryOperation returns [EObject current=null] : iv_ruleTernaryOperation= ruleTernaryOperation EOF ;
    public final EObject entryRuleTernaryOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTernaryOperation = null;


        try {
            // InternalLustre.g:3196:57: (iv_ruleTernaryOperation= ruleTernaryOperation EOF )
            // InternalLustre.g:3197:2: iv_ruleTernaryOperation= ruleTernaryOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTernaryOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTernaryOperation=ruleTernaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTernaryOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTernaryOperation"


    // $ANTLR start "ruleTernaryOperation"
    // InternalLustre.g:3203:1: ruleTernaryOperation returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleConditionalOperator ) ) ( (lv_subExpressions_2_0= ruleBoolExpression ) ) otherlv_3= 'then' ( (lv_subExpressions_4_0= ruleImpliesExpression ) ) otherlv_5= 'else' ( (lv_subExpressions_6_0= ruleImpliesExpression ) ) ) | this_ImpliesExpression_7= ruleImpliesExpression ) ;
    public final EObject ruleTernaryOperation() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_5=null;
        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject lv_subExpressions_4_0 = null;

        EObject lv_subExpressions_6_0 = null;

        EObject this_ImpliesExpression_7 = null;



        	enterRule();

        try {
            // InternalLustre.g:3209:2: ( ( ( () ( (lv_operator_1_0= ruleConditionalOperator ) ) ( (lv_subExpressions_2_0= ruleBoolExpression ) ) otherlv_3= 'then' ( (lv_subExpressions_4_0= ruleImpliesExpression ) ) otherlv_5= 'else' ( (lv_subExpressions_6_0= ruleImpliesExpression ) ) ) | this_ImpliesExpression_7= ruleImpliesExpression ) )
            // InternalLustre.g:3210:2: ( ( () ( (lv_operator_1_0= ruleConditionalOperator ) ) ( (lv_subExpressions_2_0= ruleBoolExpression ) ) otherlv_3= 'then' ( (lv_subExpressions_4_0= ruleImpliesExpression ) ) otherlv_5= 'else' ( (lv_subExpressions_6_0= ruleImpliesExpression ) ) ) | this_ImpliesExpression_7= ruleImpliesExpression )
            {
            // InternalLustre.g:3210:2: ( ( () ( (lv_operator_1_0= ruleConditionalOperator ) ) ( (lv_subExpressions_2_0= ruleBoolExpression ) ) otherlv_3= 'then' ( (lv_subExpressions_4_0= ruleImpliesExpression ) ) otherlv_5= 'else' ( (lv_subExpressions_6_0= ruleImpliesExpression ) ) ) | this_ImpliesExpression_7= ruleImpliesExpression )
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==109) ) {
                alt62=1;
            }
            else if ( ((LA62_0>=RULE_ID && LA62_0<=RULE_COMMENT_ANNOTATION)||LA62_0==36||LA62_0==38||LA62_0==40||LA62_0==78||LA62_0==85||LA62_0==88||LA62_0==92||LA62_0==105||LA62_0==107||(LA62_0>=114 && LA62_0<=116)) ) {
                alt62=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 62, 0, input);

                throw nvae;
            }
            switch (alt62) {
                case 1 :
                    // InternalLustre.g:3211:3: ( () ( (lv_operator_1_0= ruleConditionalOperator ) ) ( (lv_subExpressions_2_0= ruleBoolExpression ) ) otherlv_3= 'then' ( (lv_subExpressions_4_0= ruleImpliesExpression ) ) otherlv_5= 'else' ( (lv_subExpressions_6_0= ruleImpliesExpression ) ) )
                    {
                    // InternalLustre.g:3211:3: ( () ( (lv_operator_1_0= ruleConditionalOperator ) ) ( (lv_subExpressions_2_0= ruleBoolExpression ) ) otherlv_3= 'then' ( (lv_subExpressions_4_0= ruleImpliesExpression ) ) otherlv_5= 'else' ( (lv_subExpressions_6_0= ruleImpliesExpression ) ) )
                    // InternalLustre.g:3212:4: () ( (lv_operator_1_0= ruleConditionalOperator ) ) ( (lv_subExpressions_2_0= ruleBoolExpression ) ) otherlv_3= 'then' ( (lv_subExpressions_4_0= ruleImpliesExpression ) ) otherlv_5= 'else' ( (lv_subExpressions_6_0= ruleImpliesExpression ) )
                    {
                    // InternalLustre.g:3212:4: ()
                    // InternalLustre.g:3213:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTernaryOperationAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalLustre.g:3222:4: ( (lv_operator_1_0= ruleConditionalOperator ) )
                    // InternalLustre.g:3223:5: (lv_operator_1_0= ruleConditionalOperator )
                    {
                    // InternalLustre.g:3223:5: (lv_operator_1_0= ruleConditionalOperator )
                    // InternalLustre.g:3224:6: lv_operator_1_0= ruleConditionalOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTernaryOperationAccess().getOperatorConditionalOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_18);
                    lv_operator_1_0=ruleConditionalOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTernaryOperationRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.lustre.Lustre.ConditionalOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalLustre.g:3241:4: ( (lv_subExpressions_2_0= ruleBoolExpression ) )
                    // InternalLustre.g:3242:5: (lv_subExpressions_2_0= ruleBoolExpression )
                    {
                    // InternalLustre.g:3242:5: (lv_subExpressions_2_0= ruleBoolExpression )
                    // InternalLustre.g:3243:6: lv_subExpressions_2_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsBoolExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_59);
                    lv_subExpressions_2_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTernaryOperationRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.lustre.Lustre.BoolExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,51,FollowSets000.FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getTernaryOperationAccess().getThenKeyword_0_3());
                      			
                    }
                    // InternalLustre.g:3264:4: ( (lv_subExpressions_4_0= ruleImpliesExpression ) )
                    // InternalLustre.g:3265:5: (lv_subExpressions_4_0= ruleImpliesExpression )
                    {
                    // InternalLustre.g:3265:5: (lv_subExpressions_4_0= ruleImpliesExpression )
                    // InternalLustre.g:3266:6: lv_subExpressions_4_0= ruleImpliesExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsImpliesExpressionParserRuleCall_0_4_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_60);
                    lv_subExpressions_4_0=ruleImpliesExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTernaryOperationRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_4_0,
                      							"de.cau.cs.kieler.lustre.Lustre.ImpliesExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,54,FollowSets000.FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getTernaryOperationAccess().getElseKeyword_0_5());
                      			
                    }
                    // InternalLustre.g:3287:4: ( (lv_subExpressions_6_0= ruleImpliesExpression ) )
                    // InternalLustre.g:3288:5: (lv_subExpressions_6_0= ruleImpliesExpression )
                    {
                    // InternalLustre.g:3288:5: (lv_subExpressions_6_0= ruleImpliesExpression )
                    // InternalLustre.g:3289:6: lv_subExpressions_6_0= ruleImpliesExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsImpliesExpressionParserRuleCall_0_6_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_6_0=ruleImpliesExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTernaryOperationRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_6_0,
                      							"de.cau.cs.kieler.lustre.Lustre.ImpliesExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:3308:3: this_ImpliesExpression_7= ruleImpliesExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTernaryOperationAccess().getImpliesExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ImpliesExpression_7=ruleImpliesExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ImpliesExpression_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTernaryOperation"


    // $ANTLR start "entryRuleImpliesExpression"
    // InternalLustre.g:3323:1: entryRuleImpliesExpression returns [EObject current=null] : iv_ruleImpliesExpression= ruleImpliesExpression EOF ;
    public final EObject entryRuleImpliesExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImpliesExpression = null;


        try {
            // InternalLustre.g:3323:58: (iv_ruleImpliesExpression= ruleImpliesExpression EOF )
            // InternalLustre.g:3324:2: iv_ruleImpliesExpression= ruleImpliesExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImpliesExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleImpliesExpression=ruleImpliesExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImpliesExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImpliesExpression"


    // $ANTLR start "ruleImpliesExpression"
    // InternalLustre.g:3330:1: ruleImpliesExpression returns [EObject current=null] : (this_LogicalXorExpression_0= ruleLogicalXorExpression ( () ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalXorExpression ) ) ) (otherlv_4= '=>' ( (lv_subExpressions_5_0= ruleLogicalXorExpression ) ) )* )? ) ;
    public final EObject ruleImpliesExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_LogicalXorExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:3336:2: ( (this_LogicalXorExpression_0= ruleLogicalXorExpression ( () ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalXorExpression ) ) ) (otherlv_4= '=>' ( (lv_subExpressions_5_0= ruleLogicalXorExpression ) ) )* )? ) )
            // InternalLustre.g:3337:2: (this_LogicalXorExpression_0= ruleLogicalXorExpression ( () ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalXorExpression ) ) ) (otherlv_4= '=>' ( (lv_subExpressions_5_0= ruleLogicalXorExpression ) ) )* )? )
            {
            // InternalLustre.g:3337:2: (this_LogicalXorExpression_0= ruleLogicalXorExpression ( () ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalXorExpression ) ) ) (otherlv_4= '=>' ( (lv_subExpressions_5_0= ruleLogicalXorExpression ) ) )* )? )
            // InternalLustre.g:3338:3: this_LogicalXorExpression_0= ruleLogicalXorExpression ( () ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalXorExpression ) ) ) (otherlv_4= '=>' ( (lv_subExpressions_5_0= ruleLogicalXorExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getImpliesExpressionAccess().getLogicalXorExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_61);
            this_LogicalXorExpression_0=ruleLogicalXorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LogicalXorExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalLustre.g:3349:3: ( () ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalXorExpression ) ) ) (otherlv_4= '=>' ( (lv_subExpressions_5_0= ruleLogicalXorExpression ) ) )* )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==56) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalLustre.g:3350:4: () ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalXorExpression ) ) ) (otherlv_4= '=>' ( (lv_subExpressions_5_0= ruleLogicalXorExpression ) ) )*
                    {
                    // InternalLustre.g:3350:4: ()
                    // InternalLustre.g:3351:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getImpliesExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalLustre.g:3360:4: ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalXorExpression ) ) )
                    // InternalLustre.g:3361:5: ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalXorExpression ) )
                    {
                    // InternalLustre.g:3361:5: ( (lv_operator_2_0= ruleLogicalXorOperator ) )
                    // InternalLustre.g:3362:6: (lv_operator_2_0= ruleLogicalXorOperator )
                    {
                    // InternalLustre.g:3362:6: (lv_operator_2_0= ruleLogicalXorOperator )
                    // InternalLustre.g:3363:7: lv_operator_2_0= ruleLogicalXorOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getImpliesExpressionAccess().getOperatorLogicalXorOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_18);
                    lv_operator_2_0=ruleLogicalXorOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getImpliesExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.lustre.Lustre.LogicalXorOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalLustre.g:3380:5: ( (lv_subExpressions_3_0= ruleLogicalXorExpression ) )
                    // InternalLustre.g:3381:6: (lv_subExpressions_3_0= ruleLogicalXorExpression )
                    {
                    // InternalLustre.g:3381:6: (lv_subExpressions_3_0= ruleLogicalXorExpression )
                    // InternalLustre.g:3382:7: lv_subExpressions_3_0= ruleLogicalXorExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getImpliesExpressionAccess().getSubExpressionsLogicalXorExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_62);
                    lv_subExpressions_3_0=ruleLogicalXorExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getImpliesExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.lustre.Lustre.LogicalXorExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalLustre.g:3400:4: (otherlv_4= '=>' ( (lv_subExpressions_5_0= ruleLogicalXorExpression ) ) )*
                    loop63:
                    do {
                        int alt63=2;
                        int LA63_0 = input.LA(1);

                        if ( (LA63_0==55) ) {
                            alt63=1;
                        }


                        switch (alt63) {
                    	case 1 :
                    	    // InternalLustre.g:3401:5: otherlv_4= '=>' ( (lv_subExpressions_5_0= ruleLogicalXorExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,55,FollowSets000.FOLLOW_18); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getImpliesExpressionAccess().getEqualsSignGreaterThanSignKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalLustre.g:3405:5: ( (lv_subExpressions_5_0= ruleLogicalXorExpression ) )
                    	    // InternalLustre.g:3406:6: (lv_subExpressions_5_0= ruleLogicalXorExpression )
                    	    {
                    	    // InternalLustre.g:3406:6: (lv_subExpressions_5_0= ruleLogicalXorExpression )
                    	    // InternalLustre.g:3407:7: lv_subExpressions_5_0= ruleLogicalXorExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getImpliesExpressionAccess().getSubExpressionsLogicalXorExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_62);
                    	    lv_subExpressions_5_0=ruleLogicalXorExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getImpliesExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.lustre.Lustre.LogicalXorExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop63;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImpliesExpression"


    // $ANTLR start "entryRuleLogicalXorExpression"
    // InternalLustre.g:3430:1: entryRuleLogicalXorExpression returns [EObject current=null] : iv_ruleLogicalXorExpression= ruleLogicalXorExpression EOF ;
    public final EObject entryRuleLogicalXorExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalXorExpression = null;


        try {
            // InternalLustre.g:3430:61: (iv_ruleLogicalXorExpression= ruleLogicalXorExpression EOF )
            // InternalLustre.g:3431:2: iv_ruleLogicalXorExpression= ruleLogicalXorExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalXorExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLogicalXorExpression=ruleLogicalXorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalXorExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalXorExpression"


    // $ANTLR start "ruleLogicalXorExpression"
    // InternalLustre.g:3437:1: ruleLogicalXorExpression returns [EObject current=null] : (this_LogicalOrExpression_0= ruleLogicalOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) ) ) (otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) ) )* )? ) ;
    public final EObject ruleLogicalXorExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_LogicalOrExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:3443:2: ( (this_LogicalOrExpression_0= ruleLogicalOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) ) ) (otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) ) )* )? ) )
            // InternalLustre.g:3444:2: (this_LogicalOrExpression_0= ruleLogicalOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) ) ) (otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) ) )* )? )
            {
            // InternalLustre.g:3444:2: (this_LogicalOrExpression_0= ruleLogicalOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) ) ) (otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) ) )* )? )
            // InternalLustre.g:3445:3: this_LogicalOrExpression_0= ruleLogicalOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) ) ) (otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLogicalXorExpressionAccess().getLogicalOrExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_61);
            this_LogicalOrExpression_0=ruleLogicalOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LogicalOrExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalLustre.g:3456:3: ( () ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) ) ) (otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) ) )* )?
            int alt66=2;
            alt66 = dfa66.predict(input);
            switch (alt66) {
                case 1 :
                    // InternalLustre.g:3457:4: () ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) ) ) (otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) ) )*
                    {
                    // InternalLustre.g:3457:4: ()
                    // InternalLustre.g:3458:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getLogicalXorExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalLustre.g:3467:4: ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) ) )
                    // InternalLustre.g:3468:5: ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) )
                    {
                    // InternalLustre.g:3468:5: ( (lv_operator_2_0= ruleLogicalXorOperator ) )
                    // InternalLustre.g:3469:6: (lv_operator_2_0= ruleLogicalXorOperator )
                    {
                    // InternalLustre.g:3469:6: (lv_operator_2_0= ruleLogicalXorOperator )
                    // InternalLustre.g:3470:7: lv_operator_2_0= ruleLogicalXorOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalXorExpressionAccess().getOperatorLogicalXorOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_18);
                    lv_operator_2_0=ruleLogicalXorOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalXorExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.lustre.Lustre.LogicalXorOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalLustre.g:3487:5: ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) )
                    // InternalLustre.g:3488:6: (lv_subExpressions_3_0= ruleLogicalOrExpression )
                    {
                    // InternalLustre.g:3488:6: (lv_subExpressions_3_0= ruleLogicalOrExpression )
                    // InternalLustre.g:3489:7: lv_subExpressions_3_0= ruleLogicalOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalXorExpressionAccess().getSubExpressionsLogicalOrExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_61);
                    lv_subExpressions_3_0=ruleLogicalOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalXorExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.LogicalOrExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalLustre.g:3507:4: (otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) ) )*
                    loop65:
                    do {
                        int alt65=2;
                        alt65 = dfa65.predict(input);
                        switch (alt65) {
                    	case 1 :
                    	    // InternalLustre.g:3508:5: otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,56,FollowSets000.FOLLOW_18); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getLogicalXorExpressionAccess().getXorKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalLustre.g:3512:5: ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) )
                    	    // InternalLustre.g:3513:6: (lv_subExpressions_5_0= ruleLogicalOrExpression )
                    	    {
                    	    // InternalLustre.g:3513:6: (lv_subExpressions_5_0= ruleLogicalOrExpression )
                    	    // InternalLustre.g:3514:7: lv_subExpressions_5_0= ruleLogicalOrExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getLogicalXorExpressionAccess().getSubExpressionsLogicalOrExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_61);
                    	    lv_subExpressions_5_0=ruleLogicalOrExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getLogicalXorExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.LogicalOrExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop65;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalXorExpression"


    // $ANTLR start "entryRuleParams"
    // InternalLustre.g:3537:1: entryRuleParams returns [EObject current=null] : iv_ruleParams= ruleParams EOF ;
    public final EObject entryRuleParams() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParams = null;


        try {
            // InternalLustre.g:3537:47: (iv_ruleParams= ruleParams EOF )
            // InternalLustre.g:3538:2: iv_ruleParams= ruleParams EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParamsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleParams=ruleParams();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParams; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParams"


    // $ANTLR start "ruleParams"
    // InternalLustre.g:3544:1: ruleParams returns [EObject current=null] : ( () ( (otherlv_1= '(' ( ( (lv_parameter_2_0= ruleClockedVariableDeclaration ) ) (otherlv_3= ';' ( (lv_parameter_4_0= ruleClockedVariableDeclaration ) ) )* )? otherlv_5= ')' ) | otherlv_6= '()' ) ) ;
    public final EObject ruleParams() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_parameter_2_0 = null;

        EObject lv_parameter_4_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:3550:2: ( ( () ( (otherlv_1= '(' ( ( (lv_parameter_2_0= ruleClockedVariableDeclaration ) ) (otherlv_3= ';' ( (lv_parameter_4_0= ruleClockedVariableDeclaration ) ) )* )? otherlv_5= ')' ) | otherlv_6= '()' ) ) )
            // InternalLustre.g:3551:2: ( () ( (otherlv_1= '(' ( ( (lv_parameter_2_0= ruleClockedVariableDeclaration ) ) (otherlv_3= ';' ( (lv_parameter_4_0= ruleClockedVariableDeclaration ) ) )* )? otherlv_5= ')' ) | otherlv_6= '()' ) )
            {
            // InternalLustre.g:3551:2: ( () ( (otherlv_1= '(' ( ( (lv_parameter_2_0= ruleClockedVariableDeclaration ) ) (otherlv_3= ';' ( (lv_parameter_4_0= ruleClockedVariableDeclaration ) ) )* )? otherlv_5= ')' ) | otherlv_6= '()' ) )
            // InternalLustre.g:3552:3: () ( (otherlv_1= '(' ( ( (lv_parameter_2_0= ruleClockedVariableDeclaration ) ) (otherlv_3= ';' ( (lv_parameter_4_0= ruleClockedVariableDeclaration ) ) )* )? otherlv_5= ')' ) | otherlv_6= '()' )
            {
            // InternalLustre.g:3552:3: ()
            // InternalLustre.g:3553:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getParamsAccess().getParamsAction_0(),
              					current);
              			
            }

            }

            // InternalLustre.g:3562:3: ( (otherlv_1= '(' ( ( (lv_parameter_2_0= ruleClockedVariableDeclaration ) ) (otherlv_3= ';' ( (lv_parameter_4_0= ruleClockedVariableDeclaration ) ) )* )? otherlv_5= ')' ) | otherlv_6= '()' )
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==36) ) {
                alt69=1;
            }
            else if ( (LA69_0==57) ) {
                alt69=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 69, 0, input);

                throw nvae;
            }
            switch (alt69) {
                case 1 :
                    // InternalLustre.g:3563:4: (otherlv_1= '(' ( ( (lv_parameter_2_0= ruleClockedVariableDeclaration ) ) (otherlv_3= ';' ( (lv_parameter_4_0= ruleClockedVariableDeclaration ) ) )* )? otherlv_5= ')' )
                    {
                    // InternalLustre.g:3563:4: (otherlv_1= '(' ( ( (lv_parameter_2_0= ruleClockedVariableDeclaration ) ) (otherlv_3= ';' ( (lv_parameter_4_0= ruleClockedVariableDeclaration ) ) )* )? otherlv_5= ')' )
                    // InternalLustre.g:3564:5: otherlv_1= '(' ( ( (lv_parameter_2_0= ruleClockedVariableDeclaration ) ) (otherlv_3= ';' ( (lv_parameter_4_0= ruleClockedVariableDeclaration ) ) )* )? otherlv_5= ')'
                    {
                    otherlv_1=(Token)match(input,36,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getParamsAccess().getLeftParenthesisKeyword_1_0_0());
                      				
                    }
                    // InternalLustre.g:3568:5: ( ( (lv_parameter_2_0= ruleClockedVariableDeclaration ) ) (otherlv_3= ';' ( (lv_parameter_4_0= ruleClockedVariableDeclaration ) ) )* )?
                    int alt68=2;
                    int LA68_0 = input.LA(1);

                    if ( (LA68_0==RULE_ID||LA68_0==RULE_COMMENT_ANNOTATION||LA68_0==92) ) {
                        alt68=1;
                    }
                    switch (alt68) {
                        case 1 :
                            // InternalLustre.g:3569:6: ( (lv_parameter_2_0= ruleClockedVariableDeclaration ) ) (otherlv_3= ';' ( (lv_parameter_4_0= ruleClockedVariableDeclaration ) ) )*
                            {
                            // InternalLustre.g:3569:6: ( (lv_parameter_2_0= ruleClockedVariableDeclaration ) )
                            // InternalLustre.g:3570:7: (lv_parameter_2_0= ruleClockedVariableDeclaration )
                            {
                            // InternalLustre.g:3570:7: (lv_parameter_2_0= ruleClockedVariableDeclaration )
                            // InternalLustre.g:3571:8: lv_parameter_2_0= ruleClockedVariableDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getParamsAccess().getParameterClockedVariableDeclarationParserRuleCall_1_0_1_0_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_64);
                            lv_parameter_2_0=ruleClockedVariableDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getParamsRule());
                              								}
                              								add(
                              									current,
                              									"parameter",
                              									lv_parameter_2_0,
                              									"de.cau.cs.kieler.lustre.Lustre.ClockedVariableDeclaration");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalLustre.g:3588:6: (otherlv_3= ';' ( (lv_parameter_4_0= ruleClockedVariableDeclaration ) ) )*
                            loop67:
                            do {
                                int alt67=2;
                                int LA67_0 = input.LA(1);

                                if ( (LA67_0==20) ) {
                                    alt67=1;
                                }


                                switch (alt67) {
                            	case 1 :
                            	    // InternalLustre.g:3589:7: otherlv_3= ';' ( (lv_parameter_4_0= ruleClockedVariableDeclaration ) )
                            	    {
                            	    otherlv_3=(Token)match(input,20,FollowSets000.FOLLOW_27); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_3, grammarAccess.getParamsAccess().getSemicolonKeyword_1_0_1_1_0());
                            	      						
                            	    }
                            	    // InternalLustre.g:3593:7: ( (lv_parameter_4_0= ruleClockedVariableDeclaration ) )
                            	    // InternalLustre.g:3594:8: (lv_parameter_4_0= ruleClockedVariableDeclaration )
                            	    {
                            	    // InternalLustre.g:3594:8: (lv_parameter_4_0= ruleClockedVariableDeclaration )
                            	    // InternalLustre.g:3595:9: lv_parameter_4_0= ruleClockedVariableDeclaration
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getParamsAccess().getParameterClockedVariableDeclarationParserRuleCall_1_0_1_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_64);
                            	    lv_parameter_4_0=ruleClockedVariableDeclaration();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getParamsRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"parameter",
                            	      										lv_parameter_4_0,
                            	      										"de.cau.cs.kieler.lustre.Lustre.ClockedVariableDeclaration");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop67;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getParamsAccess().getRightParenthesisKeyword_1_0_2());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:3620:4: otherlv_6= '()'
                    {
                    otherlv_6=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getParamsAccess().getLeftParenthesisRightParenthesisKeyword_1_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParams"


    // $ANTLR start "entryRuleStaticParam"
    // InternalLustre.g:3629:1: entryRuleStaticParam returns [EObject current=null] : iv_ruleStaticParam= ruleStaticParam EOF ;
    public final EObject entryRuleStaticParam() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStaticParam = null;


        try {
            // InternalLustre.g:3629:52: (iv_ruleStaticParam= ruleStaticParam EOF )
            // InternalLustre.g:3630:2: iv_ruleStaticParam= ruleStaticParam EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStaticParamRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStaticParam=ruleStaticParam();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStaticParam; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStaticParam"


    // $ANTLR start "ruleStaticParam"
    // InternalLustre.g:3636:1: ruleStaticParam returns [EObject current=null] : ( (otherlv_0= 'type' ( (lv_name_1_0= RULE_ID ) ) ) | (otherlv_2= 'const' ( (lv_name_3_0= RULE_ID ) ) otherlv_4= ':' ( (lv_type_5_0= ruleValueType ) ) ) | ( (otherlv_6= 'unsafe' )? (otherlv_7= 'node' | otherlv_8= 'function' ) ( (lv_name_9_0= RULE_ID ) ) ( (lv_nodeInput_10_0= ruleParams ) ) otherlv_11= 'returns' ( (lv_nodeOutput_12_0= ruleParams ) ) ) ) ;
    public final EObject ruleStaticParam() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token lv_name_9_0=null;
        Token otherlv_11=null;
        Enumerator lv_type_5_0 = null;

        EObject lv_nodeInput_10_0 = null;

        EObject lv_nodeOutput_12_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:3642:2: ( ( (otherlv_0= 'type' ( (lv_name_1_0= RULE_ID ) ) ) | (otherlv_2= 'const' ( (lv_name_3_0= RULE_ID ) ) otherlv_4= ':' ( (lv_type_5_0= ruleValueType ) ) ) | ( (otherlv_6= 'unsafe' )? (otherlv_7= 'node' | otherlv_8= 'function' ) ( (lv_name_9_0= RULE_ID ) ) ( (lv_nodeInput_10_0= ruleParams ) ) otherlv_11= 'returns' ( (lv_nodeOutput_12_0= ruleParams ) ) ) ) )
            // InternalLustre.g:3643:2: ( (otherlv_0= 'type' ( (lv_name_1_0= RULE_ID ) ) ) | (otherlv_2= 'const' ( (lv_name_3_0= RULE_ID ) ) otherlv_4= ':' ( (lv_type_5_0= ruleValueType ) ) ) | ( (otherlv_6= 'unsafe' )? (otherlv_7= 'node' | otherlv_8= 'function' ) ( (lv_name_9_0= RULE_ID ) ) ( (lv_nodeInput_10_0= ruleParams ) ) otherlv_11= 'returns' ( (lv_nodeOutput_12_0= ruleParams ) ) ) )
            {
            // InternalLustre.g:3643:2: ( (otherlv_0= 'type' ( (lv_name_1_0= RULE_ID ) ) ) | (otherlv_2= 'const' ( (lv_name_3_0= RULE_ID ) ) otherlv_4= ':' ( (lv_type_5_0= ruleValueType ) ) ) | ( (otherlv_6= 'unsafe' )? (otherlv_7= 'node' | otherlv_8= 'function' ) ( (lv_name_9_0= RULE_ID ) ) ( (lv_nodeInput_10_0= ruleParams ) ) otherlv_11= 'returns' ( (lv_nodeOutput_12_0= ruleParams ) ) ) )
            int alt72=3;
            switch ( input.LA(1) ) {
            case 28:
                {
                alt72=1;
                }
                break;
            case 25:
                {
                alt72=2;
                }
                break;
            case 29:
            case 30:
            case 31:
                {
                alt72=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 72, 0, input);

                throw nvae;
            }

            switch (alt72) {
                case 1 :
                    // InternalLustre.g:3644:3: (otherlv_0= 'type' ( (lv_name_1_0= RULE_ID ) ) )
                    {
                    // InternalLustre.g:3644:3: (otherlv_0= 'type' ( (lv_name_1_0= RULE_ID ) ) )
                    // InternalLustre.g:3645:4: otherlv_0= 'type' ( (lv_name_1_0= RULE_ID ) )
                    {
                    otherlv_0=(Token)match(input,28,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getStaticParamAccess().getTypeKeyword_0_0());
                      			
                    }
                    // InternalLustre.g:3649:4: ( (lv_name_1_0= RULE_ID ) )
                    // InternalLustre.g:3650:5: (lv_name_1_0= RULE_ID )
                    {
                    // InternalLustre.g:3650:5: (lv_name_1_0= RULE_ID )
                    // InternalLustre.g:3651:6: lv_name_1_0= RULE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_1_0, grammarAccess.getStaticParamAccess().getNameIDTerminalRuleCall_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getStaticParamRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"de.cau.cs.kieler.annotations.Annotations.ID");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:3669:3: (otherlv_2= 'const' ( (lv_name_3_0= RULE_ID ) ) otherlv_4= ':' ( (lv_type_5_0= ruleValueType ) ) )
                    {
                    // InternalLustre.g:3669:3: (otherlv_2= 'const' ( (lv_name_3_0= RULE_ID ) ) otherlv_4= ':' ( (lv_type_5_0= ruleValueType ) ) )
                    // InternalLustre.g:3670:4: otherlv_2= 'const' ( (lv_name_3_0= RULE_ID ) ) otherlv_4= ':' ( (lv_type_5_0= ruleValueType ) )
                    {
                    otherlv_2=(Token)match(input,25,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getStaticParamAccess().getConstKeyword_1_0());
                      			
                    }
                    // InternalLustre.g:3674:4: ( (lv_name_3_0= RULE_ID ) )
                    // InternalLustre.g:3675:5: (lv_name_3_0= RULE_ID )
                    {
                    // InternalLustre.g:3675:5: (lv_name_3_0= RULE_ID )
                    // InternalLustre.g:3676:6: lv_name_3_0= RULE_ID
                    {
                    lv_name_3_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_3_0, grammarAccess.getStaticParamAccess().getNameIDTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getStaticParamRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_3_0,
                      							"de.cau.cs.kieler.annotations.Annotations.ID");
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,26,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getStaticParamAccess().getColonKeyword_1_2());
                      			
                    }
                    // InternalLustre.g:3696:4: ( (lv_type_5_0= ruleValueType ) )
                    // InternalLustre.g:3697:5: (lv_type_5_0= ruleValueType )
                    {
                    // InternalLustre.g:3697:5: (lv_type_5_0= ruleValueType )
                    // InternalLustre.g:3698:6: lv_type_5_0= ruleValueType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStaticParamAccess().getTypeValueTypeEnumRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_type_5_0=ruleValueType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStaticParamRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_5_0,
                      							"de.cau.cs.kieler.lustre.Lustre.ValueType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalLustre.g:3717:3: ( (otherlv_6= 'unsafe' )? (otherlv_7= 'node' | otherlv_8= 'function' ) ( (lv_name_9_0= RULE_ID ) ) ( (lv_nodeInput_10_0= ruleParams ) ) otherlv_11= 'returns' ( (lv_nodeOutput_12_0= ruleParams ) ) )
                    {
                    // InternalLustre.g:3717:3: ( (otherlv_6= 'unsafe' )? (otherlv_7= 'node' | otherlv_8= 'function' ) ( (lv_name_9_0= RULE_ID ) ) ( (lv_nodeInput_10_0= ruleParams ) ) otherlv_11= 'returns' ( (lv_nodeOutput_12_0= ruleParams ) ) )
                    // InternalLustre.g:3718:4: (otherlv_6= 'unsafe' )? (otherlv_7= 'node' | otherlv_8= 'function' ) ( (lv_name_9_0= RULE_ID ) ) ( (lv_nodeInput_10_0= ruleParams ) ) otherlv_11= 'returns' ( (lv_nodeOutput_12_0= ruleParams ) )
                    {
                    // InternalLustre.g:3718:4: (otherlv_6= 'unsafe' )?
                    int alt70=2;
                    int LA70_0 = input.LA(1);

                    if ( (LA70_0==29) ) {
                        alt70=1;
                    }
                    switch (alt70) {
                        case 1 :
                            // InternalLustre.g:3719:5: otherlv_6= 'unsafe'
                            {
                            otherlv_6=(Token)match(input,29,FollowSets000.FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_6, grammarAccess.getStaticParamAccess().getUnsafeKeyword_2_0());
                              				
                            }

                            }
                            break;

                    }

                    // InternalLustre.g:3724:4: (otherlv_7= 'node' | otherlv_8= 'function' )
                    int alt71=2;
                    int LA71_0 = input.LA(1);

                    if ( (LA71_0==30) ) {
                        alt71=1;
                    }
                    else if ( (LA71_0==31) ) {
                        alt71=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 71, 0, input);

                        throw nvae;
                    }
                    switch (alt71) {
                        case 1 :
                            // InternalLustre.g:3725:5: otherlv_7= 'node'
                            {
                            otherlv_7=(Token)match(input,30,FollowSets000.FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_7, grammarAccess.getStaticParamAccess().getNodeKeyword_2_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalLustre.g:3730:5: otherlv_8= 'function'
                            {
                            otherlv_8=(Token)match(input,31,FollowSets000.FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getStaticParamAccess().getFunctionKeyword_2_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalLustre.g:3735:4: ( (lv_name_9_0= RULE_ID ) )
                    // InternalLustre.g:3736:5: (lv_name_9_0= RULE_ID )
                    {
                    // InternalLustre.g:3736:5: (lv_name_9_0= RULE_ID )
                    // InternalLustre.g:3737:6: lv_name_9_0= RULE_ID
                    {
                    lv_name_9_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_9_0, grammarAccess.getStaticParamAccess().getNameIDTerminalRuleCall_2_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getStaticParamRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_9_0,
                      							"de.cau.cs.kieler.annotations.Annotations.ID");
                      					
                    }

                    }


                    }

                    // InternalLustre.g:3753:4: ( (lv_nodeInput_10_0= ruleParams ) )
                    // InternalLustre.g:3754:5: (lv_nodeInput_10_0= ruleParams )
                    {
                    // InternalLustre.g:3754:5: (lv_nodeInput_10_0= ruleParams )
                    // InternalLustre.g:3755:6: lv_nodeInput_10_0= ruleParams
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStaticParamAccess().getNodeInputParamsParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_22);
                    lv_nodeInput_10_0=ruleParams();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStaticParamRule());
                      						}
                      						set(
                      							current,
                      							"nodeInput",
                      							lv_nodeInput_10_0,
                      							"de.cau.cs.kieler.lustre.Lustre.Params");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_11=(Token)match(input,34,FollowSets000.FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getStaticParamAccess().getReturnsKeyword_2_4());
                      			
                    }
                    // InternalLustre.g:3776:4: ( (lv_nodeOutput_12_0= ruleParams ) )
                    // InternalLustre.g:3777:5: (lv_nodeOutput_12_0= ruleParams )
                    {
                    // InternalLustre.g:3777:5: (lv_nodeOutput_12_0= ruleParams )
                    // InternalLustre.g:3778:6: lv_nodeOutput_12_0= ruleParams
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStaticParamAccess().getNodeOutputParamsParserRuleCall_2_5_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_nodeOutput_12_0=ruleParams();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStaticParamRule());
                      						}
                      						set(
                      							current,
                      							"nodeOutput",
                      							lv_nodeOutput_12_0,
                      							"de.cau.cs.kieler.lustre.Lustre.Params");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStaticParam"


    // $ANTLR start "entryRuleStaticArg"
    // InternalLustre.g:3800:1: entryRuleStaticArg returns [EObject current=null] : iv_ruleStaticArg= ruleStaticArg EOF ;
    public final EObject entryRuleStaticArg() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStaticArg = null;


        try {
            // InternalLustre.g:3800:50: (iv_ruleStaticArg= ruleStaticArg EOF )
            // InternalLustre.g:3801:2: iv_ruleStaticArg= ruleStaticArg EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStaticArgRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStaticArg=ruleStaticArg();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStaticArg; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStaticArg"


    // $ANTLR start "ruleStaticArg"
    // InternalLustre.g:3807:1: ruleStaticArg returns [EObject current=null] : ( (otherlv_0= 'type' ( (lv_type_1_0= ruleValueType ) ) ) | (otherlv_2= 'const' ( (lv_expr_3_0= ruleExpression ) ) ) | ( (otherlv_4= 'node' | otherlv_5= 'function' ) ( (lv_name_6_0= ruleNodeReference ) ) (otherlv_7= '<<' ( (lv_staticArgs_8_0= ruleStaticArg ) ) ( (otherlv_9= ';' | otherlv_10= ',' ) ( (lv_staticArgs_11_0= ruleStaticArg ) ) )* otherlv_12= '>>' )? ) ) ;
    public final EObject ruleStaticArg() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Enumerator lv_type_1_0 = null;

        EObject lv_expr_3_0 = null;

        AntlrDatatypeRuleToken lv_name_6_0 = null;

        EObject lv_staticArgs_8_0 = null;

        EObject lv_staticArgs_11_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:3813:2: ( ( (otherlv_0= 'type' ( (lv_type_1_0= ruleValueType ) ) ) | (otherlv_2= 'const' ( (lv_expr_3_0= ruleExpression ) ) ) | ( (otherlv_4= 'node' | otherlv_5= 'function' ) ( (lv_name_6_0= ruleNodeReference ) ) (otherlv_7= '<<' ( (lv_staticArgs_8_0= ruleStaticArg ) ) ( (otherlv_9= ';' | otherlv_10= ',' ) ( (lv_staticArgs_11_0= ruleStaticArg ) ) )* otherlv_12= '>>' )? ) ) )
            // InternalLustre.g:3814:2: ( (otherlv_0= 'type' ( (lv_type_1_0= ruleValueType ) ) ) | (otherlv_2= 'const' ( (lv_expr_3_0= ruleExpression ) ) ) | ( (otherlv_4= 'node' | otherlv_5= 'function' ) ( (lv_name_6_0= ruleNodeReference ) ) (otherlv_7= '<<' ( (lv_staticArgs_8_0= ruleStaticArg ) ) ( (otherlv_9= ';' | otherlv_10= ',' ) ( (lv_staticArgs_11_0= ruleStaticArg ) ) )* otherlv_12= '>>' )? ) )
            {
            // InternalLustre.g:3814:2: ( (otherlv_0= 'type' ( (lv_type_1_0= ruleValueType ) ) ) | (otherlv_2= 'const' ( (lv_expr_3_0= ruleExpression ) ) ) | ( (otherlv_4= 'node' | otherlv_5= 'function' ) ( (lv_name_6_0= ruleNodeReference ) ) (otherlv_7= '<<' ( (lv_staticArgs_8_0= ruleStaticArg ) ) ( (otherlv_9= ';' | otherlv_10= ',' ) ( (lv_staticArgs_11_0= ruleStaticArg ) ) )* otherlv_12= '>>' )? ) )
            int alt77=3;
            switch ( input.LA(1) ) {
            case 28:
                {
                alt77=1;
                }
                break;
            case 25:
                {
                alt77=2;
                }
                break;
            case 30:
            case 31:
                {
                alt77=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 77, 0, input);

                throw nvae;
            }

            switch (alt77) {
                case 1 :
                    // InternalLustre.g:3815:3: (otherlv_0= 'type' ( (lv_type_1_0= ruleValueType ) ) )
                    {
                    // InternalLustre.g:3815:3: (otherlv_0= 'type' ( (lv_type_1_0= ruleValueType ) ) )
                    // InternalLustre.g:3816:4: otherlv_0= 'type' ( (lv_type_1_0= ruleValueType ) )
                    {
                    otherlv_0=(Token)match(input,28,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getStaticArgAccess().getTypeKeyword_0_0());
                      			
                    }
                    // InternalLustre.g:3820:4: ( (lv_type_1_0= ruleValueType ) )
                    // InternalLustre.g:3821:5: (lv_type_1_0= ruleValueType )
                    {
                    // InternalLustre.g:3821:5: (lv_type_1_0= ruleValueType )
                    // InternalLustre.g:3822:6: lv_type_1_0= ruleValueType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStaticArgAccess().getTypeValueTypeEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_type_1_0=ruleValueType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStaticArgRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_1_0,
                      							"de.cau.cs.kieler.lustre.Lustre.ValueType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:3841:3: (otherlv_2= 'const' ( (lv_expr_3_0= ruleExpression ) ) )
                    {
                    // InternalLustre.g:3841:3: (otherlv_2= 'const' ( (lv_expr_3_0= ruleExpression ) ) )
                    // InternalLustre.g:3842:4: otherlv_2= 'const' ( (lv_expr_3_0= ruleExpression ) )
                    {
                    otherlv_2=(Token)match(input,25,FollowSets000.FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getStaticArgAccess().getConstKeyword_1_0());
                      			
                    }
                    // InternalLustre.g:3846:4: ( (lv_expr_3_0= ruleExpression ) )
                    // InternalLustre.g:3847:5: (lv_expr_3_0= ruleExpression )
                    {
                    // InternalLustre.g:3847:5: (lv_expr_3_0= ruleExpression )
                    // InternalLustre.g:3848:6: lv_expr_3_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStaticArgAccess().getExprExpressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expr_3_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStaticArgRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_3_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalLustre.g:3867:3: ( (otherlv_4= 'node' | otherlv_5= 'function' ) ( (lv_name_6_0= ruleNodeReference ) ) (otherlv_7= '<<' ( (lv_staticArgs_8_0= ruleStaticArg ) ) ( (otherlv_9= ';' | otherlv_10= ',' ) ( (lv_staticArgs_11_0= ruleStaticArg ) ) )* otherlv_12= '>>' )? )
                    {
                    // InternalLustre.g:3867:3: ( (otherlv_4= 'node' | otherlv_5= 'function' ) ( (lv_name_6_0= ruleNodeReference ) ) (otherlv_7= '<<' ( (lv_staticArgs_8_0= ruleStaticArg ) ) ( (otherlv_9= ';' | otherlv_10= ',' ) ( (lv_staticArgs_11_0= ruleStaticArg ) ) )* otherlv_12= '>>' )? )
                    // InternalLustre.g:3868:4: (otherlv_4= 'node' | otherlv_5= 'function' ) ( (lv_name_6_0= ruleNodeReference ) ) (otherlv_7= '<<' ( (lv_staticArgs_8_0= ruleStaticArg ) ) ( (otherlv_9= ';' | otherlv_10= ',' ) ( (lv_staticArgs_11_0= ruleStaticArg ) ) )* otherlv_12= '>>' )?
                    {
                    // InternalLustre.g:3868:4: (otherlv_4= 'node' | otherlv_5= 'function' )
                    int alt73=2;
                    int LA73_0 = input.LA(1);

                    if ( (LA73_0==30) ) {
                        alt73=1;
                    }
                    else if ( (LA73_0==31) ) {
                        alt73=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 73, 0, input);

                        throw nvae;
                    }
                    switch (alt73) {
                        case 1 :
                            // InternalLustre.g:3869:5: otherlv_4= 'node'
                            {
                            otherlv_4=(Token)match(input,30,FollowSets000.FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getStaticArgAccess().getNodeKeyword_2_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalLustre.g:3874:5: otherlv_5= 'function'
                            {
                            otherlv_5=(Token)match(input,31,FollowSets000.FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_5, grammarAccess.getStaticArgAccess().getFunctionKeyword_2_0_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalLustre.g:3879:4: ( (lv_name_6_0= ruleNodeReference ) )
                    // InternalLustre.g:3880:5: (lv_name_6_0= ruleNodeReference )
                    {
                    // InternalLustre.g:3880:5: (lv_name_6_0= ruleNodeReference )
                    // InternalLustre.g:3881:6: lv_name_6_0= ruleNodeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStaticArgAccess().getNameNodeReferenceParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_41);
                    lv_name_6_0=ruleNodeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStaticArgRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_6_0,
                      							"de.cau.cs.kieler.lustre.Lustre.NodeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalLustre.g:3898:4: (otherlv_7= '<<' ( (lv_staticArgs_8_0= ruleStaticArg ) ) ( (otherlv_9= ';' | otherlv_10= ',' ) ( (lv_staticArgs_11_0= ruleStaticArg ) ) )* otherlv_12= '>>' )?
                    int alt76=2;
                    int LA76_0 = input.LA(1);

                    if ( (LA76_0==32) ) {
                        alt76=1;
                    }
                    switch (alt76) {
                        case 1 :
                            // InternalLustre.g:3899:5: otherlv_7= '<<' ( (lv_staticArgs_8_0= ruleStaticArg ) ) ( (otherlv_9= ';' | otherlv_10= ',' ) ( (lv_staticArgs_11_0= ruleStaticArg ) ) )* otherlv_12= '>>'
                            {
                            otherlv_7=(Token)match(input,32,FollowSets000.FOLLOW_42); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_7, grammarAccess.getStaticArgAccess().getLessThanSignLessThanSignKeyword_2_2_0());
                              				
                            }
                            // InternalLustre.g:3903:5: ( (lv_staticArgs_8_0= ruleStaticArg ) )
                            // InternalLustre.g:3904:6: (lv_staticArgs_8_0= ruleStaticArg )
                            {
                            // InternalLustre.g:3904:6: (lv_staticArgs_8_0= ruleStaticArg )
                            // InternalLustre.g:3905:7: lv_staticArgs_8_0= ruleStaticArg
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getStaticArgAccess().getStaticArgsStaticArgParserRuleCall_2_2_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_65);
                            lv_staticArgs_8_0=ruleStaticArg();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getStaticArgRule());
                              							}
                              							add(
                              								current,
                              								"staticArgs",
                              								lv_staticArgs_8_0,
                              								"de.cau.cs.kieler.lustre.Lustre.StaticArg");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalLustre.g:3922:5: ( (otherlv_9= ';' | otherlv_10= ',' ) ( (lv_staticArgs_11_0= ruleStaticArg ) ) )*
                            loop75:
                            do {
                                int alt75=2;
                                int LA75_0 = input.LA(1);

                                if ( ((LA75_0>=19 && LA75_0<=20)) ) {
                                    alt75=1;
                                }


                                switch (alt75) {
                            	case 1 :
                            	    // InternalLustre.g:3923:6: (otherlv_9= ';' | otherlv_10= ',' ) ( (lv_staticArgs_11_0= ruleStaticArg ) )
                            	    {
                            	    // InternalLustre.g:3923:6: (otherlv_9= ';' | otherlv_10= ',' )
                            	    int alt74=2;
                            	    int LA74_0 = input.LA(1);

                            	    if ( (LA74_0==20) ) {
                            	        alt74=1;
                            	    }
                            	    else if ( (LA74_0==19) ) {
                            	        alt74=2;
                            	    }
                            	    else {
                            	        if (state.backtracking>0) {state.failed=true; return current;}
                            	        NoViableAltException nvae =
                            	            new NoViableAltException("", 74, 0, input);

                            	        throw nvae;
                            	    }
                            	    switch (alt74) {
                            	        case 1 :
                            	            // InternalLustre.g:3924:7: otherlv_9= ';'
                            	            {
                            	            otherlv_9=(Token)match(input,20,FollowSets000.FOLLOW_42); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              							newLeafNode(otherlv_9, grammarAccess.getStaticArgAccess().getSemicolonKeyword_2_2_2_0_0());
                            	              						
                            	            }

                            	            }
                            	            break;
                            	        case 2 :
                            	            // InternalLustre.g:3929:7: otherlv_10= ','
                            	            {
                            	            otherlv_10=(Token)match(input,19,FollowSets000.FOLLOW_42); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              							newLeafNode(otherlv_10, grammarAccess.getStaticArgAccess().getCommaKeyword_2_2_2_0_1());
                            	              						
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalLustre.g:3934:6: ( (lv_staticArgs_11_0= ruleStaticArg ) )
                            	    // InternalLustre.g:3935:7: (lv_staticArgs_11_0= ruleStaticArg )
                            	    {
                            	    // InternalLustre.g:3935:7: (lv_staticArgs_11_0= ruleStaticArg )
                            	    // InternalLustre.g:3936:8: lv_staticArgs_11_0= ruleStaticArg
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getStaticArgAccess().getStaticArgsStaticArgParserRuleCall_2_2_2_1_0());
                            	      							
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_65);
                            	    lv_staticArgs_11_0=ruleStaticArg();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getStaticArgRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"staticArgs",
                            	      									lv_staticArgs_11_0,
                            	      									"de.cau.cs.kieler.lustre.Lustre.StaticArg");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop75;
                                }
                            } while (true);

                            otherlv_12=(Token)match(input,33,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_12, grammarAccess.getStaticArgAccess().getGreaterThanSignGreaterThanSignKeyword_2_2_3());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStaticArg"


    // $ANTLR start "entryRuleByNameStaticArg"
    // InternalLustre.g:3964:1: entryRuleByNameStaticArg returns [EObject current=null] : iv_ruleByNameStaticArg= ruleByNameStaticArg EOF ;
    public final EObject entryRuleByNameStaticArg() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleByNameStaticArg = null;


        try {
            // InternalLustre.g:3964:56: (iv_ruleByNameStaticArg= ruleByNameStaticArg EOF )
            // InternalLustre.g:3965:2: iv_ruleByNameStaticArg= ruleByNameStaticArg EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getByNameStaticArgRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleByNameStaticArg=ruleByNameStaticArg();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleByNameStaticArg; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleByNameStaticArg"


    // $ANTLR start "ruleByNameStaticArg"
    // InternalLustre.g:3971:1: ruleByNameStaticArg returns [EObject current=null] : ( (otherlv_0= 'type' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '=' ( (lv_type_3_0= ruleValueType ) ) ) | (otherlv_4= 'const' ( (lv_name_5_0= RULE_ID ) ) otherlv_6= '=' ( (lv_expr_7_0= ruleExpression ) ) ) | ( (otherlv_8= 'function' | otherlv_9= 'node' ) ( (lv_name_10_0= RULE_ID ) ) otherlv_11= '=' ( (lv_nodeRef_12_0= ruleNodeReference ) ) (otherlv_13= '<<' ( (lv_staticArgs_14_0= ruleStaticArg ) ) ( (otherlv_15= ';' | otherlv_16= ',' ) ( (lv_staticArgs_17_0= ruleStaticArg ) ) )* otherlv_18= '>>' )? ) | ( ( (lv_name_19_0= RULE_ID ) ) otherlv_20= '=' ) ) ;
    public final EObject ruleByNameStaticArg() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_name_5_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token lv_name_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token lv_name_19_0=null;
        Token otherlv_20=null;
        Enumerator lv_type_3_0 = null;

        EObject lv_expr_7_0 = null;

        AntlrDatatypeRuleToken lv_nodeRef_12_0 = null;

        EObject lv_staticArgs_14_0 = null;

        EObject lv_staticArgs_17_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:3977:2: ( ( (otherlv_0= 'type' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '=' ( (lv_type_3_0= ruleValueType ) ) ) | (otherlv_4= 'const' ( (lv_name_5_0= RULE_ID ) ) otherlv_6= '=' ( (lv_expr_7_0= ruleExpression ) ) ) | ( (otherlv_8= 'function' | otherlv_9= 'node' ) ( (lv_name_10_0= RULE_ID ) ) otherlv_11= '=' ( (lv_nodeRef_12_0= ruleNodeReference ) ) (otherlv_13= '<<' ( (lv_staticArgs_14_0= ruleStaticArg ) ) ( (otherlv_15= ';' | otherlv_16= ',' ) ( (lv_staticArgs_17_0= ruleStaticArg ) ) )* otherlv_18= '>>' )? ) | ( ( (lv_name_19_0= RULE_ID ) ) otherlv_20= '=' ) ) )
            // InternalLustre.g:3978:2: ( (otherlv_0= 'type' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '=' ( (lv_type_3_0= ruleValueType ) ) ) | (otherlv_4= 'const' ( (lv_name_5_0= RULE_ID ) ) otherlv_6= '=' ( (lv_expr_7_0= ruleExpression ) ) ) | ( (otherlv_8= 'function' | otherlv_9= 'node' ) ( (lv_name_10_0= RULE_ID ) ) otherlv_11= '=' ( (lv_nodeRef_12_0= ruleNodeReference ) ) (otherlv_13= '<<' ( (lv_staticArgs_14_0= ruleStaticArg ) ) ( (otherlv_15= ';' | otherlv_16= ',' ) ( (lv_staticArgs_17_0= ruleStaticArg ) ) )* otherlv_18= '>>' )? ) | ( ( (lv_name_19_0= RULE_ID ) ) otherlv_20= '=' ) )
            {
            // InternalLustre.g:3978:2: ( (otherlv_0= 'type' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '=' ( (lv_type_3_0= ruleValueType ) ) ) | (otherlv_4= 'const' ( (lv_name_5_0= RULE_ID ) ) otherlv_6= '=' ( (lv_expr_7_0= ruleExpression ) ) ) | ( (otherlv_8= 'function' | otherlv_9= 'node' ) ( (lv_name_10_0= RULE_ID ) ) otherlv_11= '=' ( (lv_nodeRef_12_0= ruleNodeReference ) ) (otherlv_13= '<<' ( (lv_staticArgs_14_0= ruleStaticArg ) ) ( (otherlv_15= ';' | otherlv_16= ',' ) ( (lv_staticArgs_17_0= ruleStaticArg ) ) )* otherlv_18= '>>' )? ) | ( ( (lv_name_19_0= RULE_ID ) ) otherlv_20= '=' ) )
            int alt82=4;
            switch ( input.LA(1) ) {
            case 28:
                {
                alt82=1;
                }
                break;
            case 25:
                {
                alt82=2;
                }
                break;
            case 30:
            case 31:
                {
                alt82=3;
                }
                break;
            case RULE_ID:
                {
                alt82=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 82, 0, input);

                throw nvae;
            }

            switch (alt82) {
                case 1 :
                    // InternalLustre.g:3979:3: (otherlv_0= 'type' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '=' ( (lv_type_3_0= ruleValueType ) ) )
                    {
                    // InternalLustre.g:3979:3: (otherlv_0= 'type' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '=' ( (lv_type_3_0= ruleValueType ) ) )
                    // InternalLustre.g:3980:4: otherlv_0= 'type' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '=' ( (lv_type_3_0= ruleValueType ) )
                    {
                    otherlv_0=(Token)match(input,28,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getByNameStaticArgAccess().getTypeKeyword_0_0());
                      			
                    }
                    // InternalLustre.g:3984:4: ( (lv_name_1_0= RULE_ID ) )
                    // InternalLustre.g:3985:5: (lv_name_1_0= RULE_ID )
                    {
                    // InternalLustre.g:3985:5: (lv_name_1_0= RULE_ID )
                    // InternalLustre.g:3986:6: lv_name_1_0= RULE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_1_0, grammarAccess.getByNameStaticArgAccess().getNameIDTerminalRuleCall_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getByNameStaticArgRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"de.cau.cs.kieler.annotations.Annotations.ID");
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,27,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getByNameStaticArgAccess().getEqualsSignKeyword_0_2());
                      			
                    }
                    // InternalLustre.g:4006:4: ( (lv_type_3_0= ruleValueType ) )
                    // InternalLustre.g:4007:5: (lv_type_3_0= ruleValueType )
                    {
                    // InternalLustre.g:4007:5: (lv_type_3_0= ruleValueType )
                    // InternalLustre.g:4008:6: lv_type_3_0= ruleValueType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getByNameStaticArgAccess().getTypeValueTypeEnumRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_type_3_0=ruleValueType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getByNameStaticArgRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_3_0,
                      							"de.cau.cs.kieler.lustre.Lustre.ValueType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:4027:3: (otherlv_4= 'const' ( (lv_name_5_0= RULE_ID ) ) otherlv_6= '=' ( (lv_expr_7_0= ruleExpression ) ) )
                    {
                    // InternalLustre.g:4027:3: (otherlv_4= 'const' ( (lv_name_5_0= RULE_ID ) ) otherlv_6= '=' ( (lv_expr_7_0= ruleExpression ) ) )
                    // InternalLustre.g:4028:4: otherlv_4= 'const' ( (lv_name_5_0= RULE_ID ) ) otherlv_6= '=' ( (lv_expr_7_0= ruleExpression ) )
                    {
                    otherlv_4=(Token)match(input,25,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getByNameStaticArgAccess().getConstKeyword_1_0());
                      			
                    }
                    // InternalLustre.g:4032:4: ( (lv_name_5_0= RULE_ID ) )
                    // InternalLustre.g:4033:5: (lv_name_5_0= RULE_ID )
                    {
                    // InternalLustre.g:4033:5: (lv_name_5_0= RULE_ID )
                    // InternalLustre.g:4034:6: lv_name_5_0= RULE_ID
                    {
                    lv_name_5_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_5_0, grammarAccess.getByNameStaticArgAccess().getNameIDTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getByNameStaticArgRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_5_0,
                      							"de.cau.cs.kieler.annotations.Annotations.ID");
                      					
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,27,FollowSets000.FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getByNameStaticArgAccess().getEqualsSignKeyword_1_2());
                      			
                    }
                    // InternalLustre.g:4054:4: ( (lv_expr_7_0= ruleExpression ) )
                    // InternalLustre.g:4055:5: (lv_expr_7_0= ruleExpression )
                    {
                    // InternalLustre.g:4055:5: (lv_expr_7_0= ruleExpression )
                    // InternalLustre.g:4056:6: lv_expr_7_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getByNameStaticArgAccess().getExprExpressionParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expr_7_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getByNameStaticArgRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_7_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalLustre.g:4075:3: ( (otherlv_8= 'function' | otherlv_9= 'node' ) ( (lv_name_10_0= RULE_ID ) ) otherlv_11= '=' ( (lv_nodeRef_12_0= ruleNodeReference ) ) (otherlv_13= '<<' ( (lv_staticArgs_14_0= ruleStaticArg ) ) ( (otherlv_15= ';' | otherlv_16= ',' ) ( (lv_staticArgs_17_0= ruleStaticArg ) ) )* otherlv_18= '>>' )? )
                    {
                    // InternalLustre.g:4075:3: ( (otherlv_8= 'function' | otherlv_9= 'node' ) ( (lv_name_10_0= RULE_ID ) ) otherlv_11= '=' ( (lv_nodeRef_12_0= ruleNodeReference ) ) (otherlv_13= '<<' ( (lv_staticArgs_14_0= ruleStaticArg ) ) ( (otherlv_15= ';' | otherlv_16= ',' ) ( (lv_staticArgs_17_0= ruleStaticArg ) ) )* otherlv_18= '>>' )? )
                    // InternalLustre.g:4076:4: (otherlv_8= 'function' | otherlv_9= 'node' ) ( (lv_name_10_0= RULE_ID ) ) otherlv_11= '=' ( (lv_nodeRef_12_0= ruleNodeReference ) ) (otherlv_13= '<<' ( (lv_staticArgs_14_0= ruleStaticArg ) ) ( (otherlv_15= ';' | otherlv_16= ',' ) ( (lv_staticArgs_17_0= ruleStaticArg ) ) )* otherlv_18= '>>' )?
                    {
                    // InternalLustre.g:4076:4: (otherlv_8= 'function' | otherlv_9= 'node' )
                    int alt78=2;
                    int LA78_0 = input.LA(1);

                    if ( (LA78_0==31) ) {
                        alt78=1;
                    }
                    else if ( (LA78_0==30) ) {
                        alt78=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 78, 0, input);

                        throw nvae;
                    }
                    switch (alt78) {
                        case 1 :
                            // InternalLustre.g:4077:5: otherlv_8= 'function'
                            {
                            otherlv_8=(Token)match(input,31,FollowSets000.FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getByNameStaticArgAccess().getFunctionKeyword_2_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalLustre.g:4082:5: otherlv_9= 'node'
                            {
                            otherlv_9=(Token)match(input,30,FollowSets000.FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_9, grammarAccess.getByNameStaticArgAccess().getNodeKeyword_2_0_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalLustre.g:4087:4: ( (lv_name_10_0= RULE_ID ) )
                    // InternalLustre.g:4088:5: (lv_name_10_0= RULE_ID )
                    {
                    // InternalLustre.g:4088:5: (lv_name_10_0= RULE_ID )
                    // InternalLustre.g:4089:6: lv_name_10_0= RULE_ID
                    {
                    lv_name_10_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_10_0, grammarAccess.getByNameStaticArgAccess().getNameIDTerminalRuleCall_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getByNameStaticArgRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_10_0,
                      							"de.cau.cs.kieler.annotations.Annotations.ID");
                      					
                    }

                    }


                    }

                    otherlv_11=(Token)match(input,27,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getByNameStaticArgAccess().getEqualsSignKeyword_2_2());
                      			
                    }
                    // InternalLustre.g:4109:4: ( (lv_nodeRef_12_0= ruleNodeReference ) )
                    // InternalLustre.g:4110:5: (lv_nodeRef_12_0= ruleNodeReference )
                    {
                    // InternalLustre.g:4110:5: (lv_nodeRef_12_0= ruleNodeReference )
                    // InternalLustre.g:4111:6: lv_nodeRef_12_0= ruleNodeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getByNameStaticArgAccess().getNodeRefNodeReferenceParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_41);
                    lv_nodeRef_12_0=ruleNodeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getByNameStaticArgRule());
                      						}
                      						set(
                      							current,
                      							"nodeRef",
                      							lv_nodeRef_12_0,
                      							"de.cau.cs.kieler.lustre.Lustre.NodeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalLustre.g:4128:4: (otherlv_13= '<<' ( (lv_staticArgs_14_0= ruleStaticArg ) ) ( (otherlv_15= ';' | otherlv_16= ',' ) ( (lv_staticArgs_17_0= ruleStaticArg ) ) )* otherlv_18= '>>' )?
                    int alt81=2;
                    int LA81_0 = input.LA(1);

                    if ( (LA81_0==32) ) {
                        alt81=1;
                    }
                    switch (alt81) {
                        case 1 :
                            // InternalLustre.g:4129:5: otherlv_13= '<<' ( (lv_staticArgs_14_0= ruleStaticArg ) ) ( (otherlv_15= ';' | otherlv_16= ',' ) ( (lv_staticArgs_17_0= ruleStaticArg ) ) )* otherlv_18= '>>'
                            {
                            otherlv_13=(Token)match(input,32,FollowSets000.FOLLOW_42); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_13, grammarAccess.getByNameStaticArgAccess().getLessThanSignLessThanSignKeyword_2_4_0());
                              				
                            }
                            // InternalLustre.g:4133:5: ( (lv_staticArgs_14_0= ruleStaticArg ) )
                            // InternalLustre.g:4134:6: (lv_staticArgs_14_0= ruleStaticArg )
                            {
                            // InternalLustre.g:4134:6: (lv_staticArgs_14_0= ruleStaticArg )
                            // InternalLustre.g:4135:7: lv_staticArgs_14_0= ruleStaticArg
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getByNameStaticArgAccess().getStaticArgsStaticArgParserRuleCall_2_4_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_65);
                            lv_staticArgs_14_0=ruleStaticArg();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getByNameStaticArgRule());
                              							}
                              							add(
                              								current,
                              								"staticArgs",
                              								lv_staticArgs_14_0,
                              								"de.cau.cs.kieler.lustre.Lustre.StaticArg");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalLustre.g:4152:5: ( (otherlv_15= ';' | otherlv_16= ',' ) ( (lv_staticArgs_17_0= ruleStaticArg ) ) )*
                            loop80:
                            do {
                                int alt80=2;
                                int LA80_0 = input.LA(1);

                                if ( ((LA80_0>=19 && LA80_0<=20)) ) {
                                    alt80=1;
                                }


                                switch (alt80) {
                            	case 1 :
                            	    // InternalLustre.g:4153:6: (otherlv_15= ';' | otherlv_16= ',' ) ( (lv_staticArgs_17_0= ruleStaticArg ) )
                            	    {
                            	    // InternalLustre.g:4153:6: (otherlv_15= ';' | otherlv_16= ',' )
                            	    int alt79=2;
                            	    int LA79_0 = input.LA(1);

                            	    if ( (LA79_0==20) ) {
                            	        alt79=1;
                            	    }
                            	    else if ( (LA79_0==19) ) {
                            	        alt79=2;
                            	    }
                            	    else {
                            	        if (state.backtracking>0) {state.failed=true; return current;}
                            	        NoViableAltException nvae =
                            	            new NoViableAltException("", 79, 0, input);

                            	        throw nvae;
                            	    }
                            	    switch (alt79) {
                            	        case 1 :
                            	            // InternalLustre.g:4154:7: otherlv_15= ';'
                            	            {
                            	            otherlv_15=(Token)match(input,20,FollowSets000.FOLLOW_42); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              							newLeafNode(otherlv_15, grammarAccess.getByNameStaticArgAccess().getSemicolonKeyword_2_4_2_0_0());
                            	              						
                            	            }

                            	            }
                            	            break;
                            	        case 2 :
                            	            // InternalLustre.g:4159:7: otherlv_16= ','
                            	            {
                            	            otherlv_16=(Token)match(input,19,FollowSets000.FOLLOW_42); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              							newLeafNode(otherlv_16, grammarAccess.getByNameStaticArgAccess().getCommaKeyword_2_4_2_0_1());
                            	              						
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalLustre.g:4164:6: ( (lv_staticArgs_17_0= ruleStaticArg ) )
                            	    // InternalLustre.g:4165:7: (lv_staticArgs_17_0= ruleStaticArg )
                            	    {
                            	    // InternalLustre.g:4165:7: (lv_staticArgs_17_0= ruleStaticArg )
                            	    // InternalLustre.g:4166:8: lv_staticArgs_17_0= ruleStaticArg
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getByNameStaticArgAccess().getStaticArgsStaticArgParserRuleCall_2_4_2_1_0());
                            	      							
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_65);
                            	    lv_staticArgs_17_0=ruleStaticArg();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getByNameStaticArgRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"staticArgs",
                            	      									lv_staticArgs_17_0,
                            	      									"de.cau.cs.kieler.lustre.Lustre.StaticArg");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop80;
                                }
                            } while (true);

                            otherlv_18=(Token)match(input,33,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_18, grammarAccess.getByNameStaticArgAccess().getGreaterThanSignGreaterThanSignKeyword_2_4_3());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalLustre.g:4191:3: ( ( (lv_name_19_0= RULE_ID ) ) otherlv_20= '=' )
                    {
                    // InternalLustre.g:4191:3: ( ( (lv_name_19_0= RULE_ID ) ) otherlv_20= '=' )
                    // InternalLustre.g:4192:4: ( (lv_name_19_0= RULE_ID ) ) otherlv_20= '='
                    {
                    // InternalLustre.g:4192:4: ( (lv_name_19_0= RULE_ID ) )
                    // InternalLustre.g:4193:5: (lv_name_19_0= RULE_ID )
                    {
                    // InternalLustre.g:4193:5: (lv_name_19_0= RULE_ID )
                    // InternalLustre.g:4194:6: lv_name_19_0= RULE_ID
                    {
                    lv_name_19_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_19_0, grammarAccess.getByNameStaticArgAccess().getNameIDTerminalRuleCall_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getByNameStaticArgRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_19_0,
                      							"de.cau.cs.kieler.annotations.Annotations.ID");
                      					
                    }

                    }


                    }

                    otherlv_20=(Token)match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getByNameStaticArgAccess().getEqualsSignKeyword_3_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleByNameStaticArg"


    // $ANTLR start "entryRuleVariableDeclaration"
    // InternalLustre.g:4219:1: entryRuleVariableDeclaration returns [EObject current=null] : iv_ruleVariableDeclaration= ruleVariableDeclaration EOF ;
    public final EObject entryRuleVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableDeclaration = null;


        try {
            // InternalLustre.g:4219:60: (iv_ruleVariableDeclaration= ruleVariableDeclaration EOF )
            // InternalLustre.g:4220:2: iv_ruleVariableDeclaration= ruleVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVariableDeclaration=ruleVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableDeclaration"


    // $ANTLR start "ruleVariableDeclaration"
    // InternalLustre.g:4226:1: ruleVariableDeclaration returns [EObject current=null] : ( ( (lv_valuedObjects_0_0= ruleValuedObject ) ) (otherlv_1= ',' ( (lv_valuedObjects_2_0= ruleValuedObject ) ) )* otherlv_3= ':' ( (lv_type_4_0= ruleValueType ) ) ) ;
    public final EObject ruleVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_valuedObjects_0_0 = null;

        EObject lv_valuedObjects_2_0 = null;

        Enumerator lv_type_4_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:4232:2: ( ( ( (lv_valuedObjects_0_0= ruleValuedObject ) ) (otherlv_1= ',' ( (lv_valuedObjects_2_0= ruleValuedObject ) ) )* otherlv_3= ':' ( (lv_type_4_0= ruleValueType ) ) ) )
            // InternalLustre.g:4233:2: ( ( (lv_valuedObjects_0_0= ruleValuedObject ) ) (otherlv_1= ',' ( (lv_valuedObjects_2_0= ruleValuedObject ) ) )* otherlv_3= ':' ( (lv_type_4_0= ruleValueType ) ) )
            {
            // InternalLustre.g:4233:2: ( ( (lv_valuedObjects_0_0= ruleValuedObject ) ) (otherlv_1= ',' ( (lv_valuedObjects_2_0= ruleValuedObject ) ) )* otherlv_3= ':' ( (lv_type_4_0= ruleValueType ) ) )
            // InternalLustre.g:4234:3: ( (lv_valuedObjects_0_0= ruleValuedObject ) ) (otherlv_1= ',' ( (lv_valuedObjects_2_0= ruleValuedObject ) ) )* otherlv_3= ':' ( (lv_type_4_0= ruleValueType ) )
            {
            // InternalLustre.g:4234:3: ( (lv_valuedObjects_0_0= ruleValuedObject ) )
            // InternalLustre.g:4235:4: (lv_valuedObjects_0_0= ruleValuedObject )
            {
            // InternalLustre.g:4235:4: (lv_valuedObjects_0_0= ruleValuedObject )
            // InternalLustre.g:4236:5: lv_valuedObjects_0_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_66);
            lv_valuedObjects_0_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_0_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:4253:3: (otherlv_1= ',' ( (lv_valuedObjects_2_0= ruleValuedObject ) ) )*
            loop83:
            do {
                int alt83=2;
                int LA83_0 = input.LA(1);

                if ( (LA83_0==19) ) {
                    alt83=1;
                }


                switch (alt83) {
            	case 1 :
            	    // InternalLustre.g:4254:4: otherlv_1= ',' ( (lv_valuedObjects_2_0= ruleValuedObject ) )
            	    {
            	    otherlv_1=(Token)match(input,19,FollowSets000.FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getVariableDeclarationAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalLustre.g:4258:4: ( (lv_valuedObjects_2_0= ruleValuedObject ) )
            	    // InternalLustre.g:4259:5: (lv_valuedObjects_2_0= ruleValuedObject )
            	    {
            	    // InternalLustre.g:4259:5: (lv_valuedObjects_2_0= ruleValuedObject )
            	    // InternalLustre.g:4260:6: lv_valuedObjects_2_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getVariableDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_66);
            	    lv_valuedObjects_2_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_2_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop83;
                }
            } while (true);

            otherlv_3=(Token)match(input,26,FollowSets000.FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getVariableDeclarationAccess().getColonKeyword_2());
              		
            }
            // InternalLustre.g:4282:3: ( (lv_type_4_0= ruleValueType ) )
            // InternalLustre.g:4283:4: (lv_type_4_0= ruleValueType )
            {
            // InternalLustre.g:4283:4: (lv_type_4_0= ruleValueType )
            // InternalLustre.g:4284:5: lv_type_4_0= ruleValueType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getTypeValueTypeEnumRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_type_4_0=ruleValueType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_4_0,
              						"de.cau.cs.kieler.lustre.Lustre.ValueType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableDeclaration"


    // $ANTLR start "entryRuleClockedVariableDeclaration"
    // InternalLustre.g:4305:1: entryRuleClockedVariableDeclaration returns [EObject current=null] : iv_ruleClockedVariableDeclaration= ruleClockedVariableDeclaration EOF ;
    public final EObject entryRuleClockedVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClockedVariableDeclaration = null;


        try {
            // InternalLustre.g:4305:67: (iv_ruleClockedVariableDeclaration= ruleClockedVariableDeclaration EOF )
            // InternalLustre.g:4306:2: iv_ruleClockedVariableDeclaration= ruleClockedVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClockedVariableDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleClockedVariableDeclaration=ruleClockedVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClockedVariableDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClockedVariableDeclaration"


    // $ANTLR start "ruleClockedVariableDeclaration"
    // InternalLustre.g:4312:1: ruleClockedVariableDeclaration returns [EObject current=null] : ( ( (lv_vardecl_0_0= ruleVariableDeclaration ) ) (otherlv_1= 'when' ( (lv_clockExpr_2_0= ruleBoolExpression ) ) )? ) ;
    public final EObject ruleClockedVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_vardecl_0_0 = null;

        EObject lv_clockExpr_2_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:4318:2: ( ( ( (lv_vardecl_0_0= ruleVariableDeclaration ) ) (otherlv_1= 'when' ( (lv_clockExpr_2_0= ruleBoolExpression ) ) )? ) )
            // InternalLustre.g:4319:2: ( ( (lv_vardecl_0_0= ruleVariableDeclaration ) ) (otherlv_1= 'when' ( (lv_clockExpr_2_0= ruleBoolExpression ) ) )? )
            {
            // InternalLustre.g:4319:2: ( ( (lv_vardecl_0_0= ruleVariableDeclaration ) ) (otherlv_1= 'when' ( (lv_clockExpr_2_0= ruleBoolExpression ) ) )? )
            // InternalLustre.g:4320:3: ( (lv_vardecl_0_0= ruleVariableDeclaration ) ) (otherlv_1= 'when' ( (lv_clockExpr_2_0= ruleBoolExpression ) ) )?
            {
            // InternalLustre.g:4320:3: ( (lv_vardecl_0_0= ruleVariableDeclaration ) )
            // InternalLustre.g:4321:4: (lv_vardecl_0_0= ruleVariableDeclaration )
            {
            // InternalLustre.g:4321:4: (lv_vardecl_0_0= ruleVariableDeclaration )
            // InternalLustre.g:4322:5: lv_vardecl_0_0= ruleVariableDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getClockedVariableDeclarationAccess().getVardeclVariableDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_67);
            lv_vardecl_0_0=ruleVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getClockedVariableDeclarationRule());
              					}
              					set(
              						current,
              						"vardecl",
              						lv_vardecl_0_0,
              						"de.cau.cs.kieler.lustre.Lustre.VariableDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:4339:3: (otherlv_1= 'when' ( (lv_clockExpr_2_0= ruleBoolExpression ) ) )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==58) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalLustre.g:4340:4: otherlv_1= 'when' ( (lv_clockExpr_2_0= ruleBoolExpression ) )
                    {
                    otherlv_1=(Token)match(input,58,FollowSets000.FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getClockedVariableDeclarationAccess().getWhenKeyword_1_0());
                      			
                    }
                    // InternalLustre.g:4344:4: ( (lv_clockExpr_2_0= ruleBoolExpression ) )
                    // InternalLustre.g:4345:5: (lv_clockExpr_2_0= ruleBoolExpression )
                    {
                    // InternalLustre.g:4345:5: (lv_clockExpr_2_0= ruleBoolExpression )
                    // InternalLustre.g:4346:6: lv_clockExpr_2_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClockedVariableDeclarationAccess().getClockExprBoolExpressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_clockExpr_2_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClockedVariableDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"clockExpr",
                      							lv_clockExpr_2_0,
                      							"de.cau.cs.kieler.lustre.Lustre.BoolExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClockedVariableDeclaration"


    // $ANTLR start "entryRuleInclude"
    // InternalLustre.g:4368:1: entryRuleInclude returns [String current=null] : iv_ruleInclude= ruleInclude EOF ;
    public final String entryRuleInclude() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleInclude = null;


        try {
            // InternalLustre.g:4368:47: (iv_ruleInclude= ruleInclude EOF )
            // InternalLustre.g:4369:2: iv_ruleInclude= ruleInclude EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIncludeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInclude=ruleInclude();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInclude.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInclude"


    // $ANTLR start "ruleInclude"
    // InternalLustre.g:4375:1: ruleInclude returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'include' ( (kw= '\"' this_STRING_2= RULE_STRING kw= '\"' ) | (kw= '\\'' this_STRING_5= RULE_STRING kw= '\\'' ) ) ) ;
    public final AntlrDatatypeRuleToken ruleInclude() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_STRING_2=null;
        Token this_STRING_5=null;


        	enterRule();

        try {
            // InternalLustre.g:4381:2: ( (kw= 'include' ( (kw= '\"' this_STRING_2= RULE_STRING kw= '\"' ) | (kw= '\\'' this_STRING_5= RULE_STRING kw= '\\'' ) ) ) )
            // InternalLustre.g:4382:2: (kw= 'include' ( (kw= '\"' this_STRING_2= RULE_STRING kw= '\"' ) | (kw= '\\'' this_STRING_5= RULE_STRING kw= '\\'' ) ) )
            {
            // InternalLustre.g:4382:2: (kw= 'include' ( (kw= '\"' this_STRING_2= RULE_STRING kw= '\"' ) | (kw= '\\'' this_STRING_5= RULE_STRING kw= '\\'' ) ) )
            // InternalLustre.g:4383:3: kw= 'include' ( (kw= '\"' this_STRING_2= RULE_STRING kw= '\"' ) | (kw= '\\'' this_STRING_5= RULE_STRING kw= '\\'' ) )
            {
            kw=(Token)match(input,59,FollowSets000.FOLLOW_68); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getIncludeAccess().getIncludeKeyword_0());
              		
            }
            // InternalLustre.g:4388:3: ( (kw= '\"' this_STRING_2= RULE_STRING kw= '\"' ) | (kw= '\\'' this_STRING_5= RULE_STRING kw= '\\'' ) )
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==60) ) {
                alt85=1;
            }
            else if ( (LA85_0==61) ) {
                alt85=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 85, 0, input);

                throw nvae;
            }
            switch (alt85) {
                case 1 :
                    // InternalLustre.g:4389:4: (kw= '\"' this_STRING_2= RULE_STRING kw= '\"' )
                    {
                    // InternalLustre.g:4389:4: (kw= '\"' this_STRING_2= RULE_STRING kw= '\"' )
                    // InternalLustre.g:4390:5: kw= '\"' this_STRING_2= RULE_STRING kw= '\"'
                    {
                    kw=(Token)match(input,60,FollowSets000.FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current.merge(kw);
                      					newLeafNode(kw, grammarAccess.getIncludeAccess().getQuotationMarkKeyword_1_0_0());
                      				
                    }
                    this_STRING_2=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current.merge(this_STRING_2);
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newLeafNode(this_STRING_2, grammarAccess.getIncludeAccess().getSTRINGTerminalRuleCall_1_0_1());
                      				
                    }
                    kw=(Token)match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current.merge(kw);
                      					newLeafNode(kw, grammarAccess.getIncludeAccess().getQuotationMarkKeyword_1_0_2());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:4409:4: (kw= '\\'' this_STRING_5= RULE_STRING kw= '\\'' )
                    {
                    // InternalLustre.g:4409:4: (kw= '\\'' this_STRING_5= RULE_STRING kw= '\\'' )
                    // InternalLustre.g:4410:5: kw= '\\'' this_STRING_5= RULE_STRING kw= '\\''
                    {
                    kw=(Token)match(input,61,FollowSets000.FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current.merge(kw);
                      					newLeafNode(kw, grammarAccess.getIncludeAccess().getApostropheKeyword_1_1_0());
                      				
                    }
                    this_STRING_5=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_71); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current.merge(this_STRING_5);
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newLeafNode(this_STRING_5, grammarAccess.getIncludeAccess().getSTRINGTerminalRuleCall_1_1_1());
                      				
                    }
                    kw=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current.merge(kw);
                      					newLeafNode(kw, grammarAccess.getIncludeAccess().getApostropheKeyword_1_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInclude"


    // $ANTLR start "entryRuleNodeReference"
    // InternalLustre.g:4433:1: entryRuleNodeReference returns [String current=null] : iv_ruleNodeReference= ruleNodeReference EOF ;
    public final String entryRuleNodeReference() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNodeReference = null;


        try {
            // InternalLustre.g:4433:53: (iv_ruleNodeReference= ruleNodeReference EOF )
            // InternalLustre.g:4434:2: iv_ruleNodeReference= ruleNodeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNodeReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNodeReference=ruleNodeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNodeReference.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNodeReference"


    // $ANTLR start "ruleNodeReference"
    // InternalLustre.g:4440:1: ruleNodeReference returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID | (this_ID_1= RULE_ID kw= '::' this_ID_3= RULE_ID ) ) ;
    public final AntlrDatatypeRuleToken ruleNodeReference() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token this_ID_1=null;
        Token kw=null;
        Token this_ID_3=null;


        	enterRule();

        try {
            // InternalLustre.g:4446:2: ( (this_ID_0= RULE_ID | (this_ID_1= RULE_ID kw= '::' this_ID_3= RULE_ID ) ) )
            // InternalLustre.g:4447:2: (this_ID_0= RULE_ID | (this_ID_1= RULE_ID kw= '::' this_ID_3= RULE_ID ) )
            {
            // InternalLustre.g:4447:2: (this_ID_0= RULE_ID | (this_ID_1= RULE_ID kw= '::' this_ID_3= RULE_ID ) )
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==RULE_ID) ) {
                int LA86_1 = input.LA(2);

                if ( (LA86_1==EOF||(LA86_1>=19 && LA86_1<=20)||(LA86_1>=24 && LA86_1<=25)||(LA86_1>=29 && LA86_1<=33)||LA86_1==37||LA86_1==40) ) {
                    alt86=1;
                }
                else if ( (LA86_1==62) ) {
                    alt86=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 86, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 86, 0, input);

                throw nvae;
            }
            switch (alt86) {
                case 1 :
                    // InternalLustre.g:4448:3: this_ID_0= RULE_ID
                    {
                    this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ID_0, grammarAccess.getNodeReferenceAccess().getIDTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalLustre.g:4456:3: (this_ID_1= RULE_ID kw= '::' this_ID_3= RULE_ID )
                    {
                    // InternalLustre.g:4456:3: (this_ID_1= RULE_ID kw= '::' this_ID_3= RULE_ID )
                    // InternalLustre.g:4457:4: this_ID_1= RULE_ID kw= '::' this_ID_3= RULE_ID
                    {
                    this_ID_1=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_ID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_ID_1, grammarAccess.getNodeReferenceAccess().getIDTerminalRuleCall_1_0());
                      			
                    }
                    kw=(Token)match(input,62,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getNodeReferenceAccess().getColonColonKeyword_1_1());
                      			
                    }
                    this_ID_3=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_ID_3);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_ID_3, grammarAccess.getNodeReferenceAccess().getIDTerminalRuleCall_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNodeReference"


    // $ANTLR start "entryRuleRootScope"
    // InternalLustre.g:4481:1: entryRuleRootScope returns [EObject current=null] : iv_ruleRootScope= ruleRootScope EOF ;
    public final EObject entryRuleRootScope() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRootScope = null;


        try {
            // InternalLustre.g:4481:50: (iv_ruleRootScope= ruleRootScope EOF )
            // InternalLustre.g:4482:2: iv_ruleRootScope= ruleRootScope EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRootScopeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRootScope=ruleRootScope();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRootScope; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRootScope"


    // $ANTLR start "ruleRootScope"
    // InternalLustre.g:4488:1: ruleRootScope returns [EObject current=null] : ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* ) ;
    public final EObject ruleRootScope() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        EObject lv_declarations_1_0 = null;

        EObject lv_entities_2_0 = null;

        EObject lv_scopes_4_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:4494:2: ( ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* ) )
            // InternalLustre.g:4495:2: ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* )
            {
            // InternalLustre.g:4495:2: ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* )
            // InternalLustre.g:4496:3: () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )*
            {
            // InternalLustre.g:4496:3: ()
            // InternalLustre.g:4497:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRootScopeAccess().getKExtScopeAction_0(),
              					current);
              			
            }

            }

            // InternalLustre.g:4506:3: ( (lv_declarations_1_0= ruleDeclaration ) )*
            loop87:
            do {
                int alt87=2;
                alt87 = dfa87.predict(input);
                switch (alt87) {
            	case 1 :
            	    // InternalLustre.g:4507:4: (lv_declarations_1_0= ruleDeclaration )
            	    {
            	    // InternalLustre.g:4507:4: (lv_declarations_1_0= ruleDeclaration )
            	    // InternalLustre.g:4508:5: lv_declarations_1_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRootScopeAccess().getDeclarationsDeclarationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_73);
            	    lv_declarations_1_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop87;
                }
            } while (true);

            // InternalLustre.g:4525:3: ( (lv_entities_2_0= ruleTestEntity ) )*
            loop88:
            do {
                int alt88=2;
                int LA88_0 = input.LA(1);

                if ( (LA88_0==RULE_ID||LA88_0==RULE_HOSTCODE||LA88_0==RULE_COMMENT_ANNOTATION||LA88_0==40||LA88_0==64||(LA88_0>=76 && LA88_0<=78)||LA88_0==92) ) {
                    alt88=1;
                }


                switch (alt88) {
            	case 1 :
            	    // InternalLustre.g:4526:4: (lv_entities_2_0= ruleTestEntity )
            	    {
            	    // InternalLustre.g:4526:4: (lv_entities_2_0= ruleTestEntity )
            	    // InternalLustre.g:4527:5: lv_entities_2_0= ruleTestEntity
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRootScopeAccess().getEntitiesTestEntityParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_74);
            	    lv_entities_2_0=ruleTestEntity();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"entities",
            	      						lv_entities_2_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.TestEntity");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);

            // InternalLustre.g:4544:3: (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )*
            loop89:
            do {
                int alt89=2;
                int LA89_0 = input.LA(1);

                if ( (LA89_0==63) ) {
                    alt89=1;
                }


                switch (alt89) {
            	case 1 :
            	    // InternalLustre.g:4545:4: otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) )
            	    {
            	    otherlv_3=(Token)match(input,63,FollowSets000.FOLLOW_75); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getRootScopeAccess().getScopeKeyword_3_0());
            	      			
            	    }
            	    // InternalLustre.g:4549:4: ( (lv_scopes_4_0= ruleScope ) )
            	    // InternalLustre.g:4550:5: (lv_scopes_4_0= ruleScope )
            	    {
            	    // InternalLustre.g:4550:5: (lv_scopes_4_0= ruleScope )
            	    // InternalLustre.g:4551:6: lv_scopes_4_0= ruleScope
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRootScopeAccess().getScopesScopeParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_76);
            	    lv_scopes_4_0=ruleScope();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"scopes",
            	      							lv_scopes_4_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.Scope");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop89;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRootScope"


    // $ANTLR start "entryRuleScope"
    // InternalLustre.g:4573:1: entryRuleScope returns [EObject current=null] : iv_ruleScope= ruleScope EOF ;
    public final EObject entryRuleScope() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScope = null;


        try {
            // InternalLustre.g:4573:46: (iv_ruleScope= ruleScope EOF )
            // InternalLustre.g:4574:2: iv_ruleScope= ruleScope EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScopeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScope=ruleScope();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScope; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScope"


    // $ANTLR start "ruleScope"
    // InternalLustre.g:4580:1: ruleScope returns [EObject current=null] : ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' ) ;
    public final EObject ruleScope() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_declarations_3_0 = null;

        EObject lv_entities_4_0 = null;

        EObject lv_scopes_6_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:4586:2: ( ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' ) )
            // InternalLustre.g:4587:2: ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' )
            {
            // InternalLustre.g:4587:2: ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' )
            // InternalLustre.g:4588:3: () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}'
            {
            // InternalLustre.g:4588:3: ()
            // InternalLustre.g:4589:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getScopeAccess().getKExtScopeAction_0(),
              					current);
              			
            }

            }

            // InternalLustre.g:4598:3: ( (lv_name_1_0= RULE_ID ) )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==RULE_ID) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalLustre.g:4599:4: (lv_name_1_0= RULE_ID )
                    {
                    // InternalLustre.g:4599:4: (lv_name_1_0= RULE_ID )
                    // InternalLustre.g:4600:5: lv_name_1_0= RULE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_1_0, grammarAccess.getScopeAccess().getNameIDTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getScopeRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"de.cau.cs.kieler.annotations.Annotations.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,38,FollowSets000.FOLLOW_77); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getScopeAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalLustre.g:4620:3: ( (lv_declarations_3_0= ruleDeclaration ) )*
            loop91:
            do {
                int alt91=2;
                alt91 = dfa91.predict(input);
                switch (alt91) {
            	case 1 :
            	    // InternalLustre.g:4621:4: (lv_declarations_3_0= ruleDeclaration )
            	    {
            	    // InternalLustre.g:4621:4: (lv_declarations_3_0= ruleDeclaration )
            	    // InternalLustre.g:4622:5: lv_declarations_3_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScopeAccess().getDeclarationsDeclarationParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_77);
            	    lv_declarations_3_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_3_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);

            // InternalLustre.g:4639:3: ( (lv_entities_4_0= ruleTestEntity ) )*
            loop92:
            do {
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==RULE_ID||LA92_0==RULE_HOSTCODE||LA92_0==RULE_COMMENT_ANNOTATION||LA92_0==40||LA92_0==64||(LA92_0>=76 && LA92_0<=78)||LA92_0==92) ) {
                    alt92=1;
                }


                switch (alt92) {
            	case 1 :
            	    // InternalLustre.g:4640:4: (lv_entities_4_0= ruleTestEntity )
            	    {
            	    // InternalLustre.g:4640:4: (lv_entities_4_0= ruleTestEntity )
            	    // InternalLustre.g:4641:5: lv_entities_4_0= ruleTestEntity
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScopeAccess().getEntitiesTestEntityParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_78);
            	    lv_entities_4_0=ruleTestEntity();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"entities",
            	      						lv_entities_4_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.TestEntity");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop92;
                }
            } while (true);

            // InternalLustre.g:4658:3: (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )*
            loop93:
            do {
                int alt93=2;
                int LA93_0 = input.LA(1);

                if ( (LA93_0==63) ) {
                    alt93=1;
                }


                switch (alt93) {
            	case 1 :
            	    // InternalLustre.g:4659:4: otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) )
            	    {
            	    otherlv_5=(Token)match(input,63,FollowSets000.FOLLOW_75); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getScopeAccess().getScopeKeyword_5_0());
            	      			
            	    }
            	    // InternalLustre.g:4663:4: ( (lv_scopes_6_0= ruleScope ) )
            	    // InternalLustre.g:4664:5: (lv_scopes_6_0= ruleScope )
            	    {
            	    // InternalLustre.g:4664:5: (lv_scopes_6_0= ruleScope )
            	    // InternalLustre.g:4665:6: lv_scopes_6_0= ruleScope
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getScopeAccess().getScopesScopeParserRuleCall_5_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_79);
            	    lv_scopes_6_0=ruleScope();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getScopeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"scopes",
            	      							lv_scopes_6_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.Scope");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop93;
                }
            } while (true);

            otherlv_7=(Token)match(input,39,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getScopeAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScope"


    // $ANTLR start "entryRuleTestEntity"
    // InternalLustre.g:4691:1: entryRuleTestEntity returns [EObject current=null] : iv_ruleTestEntity= ruleTestEntity EOF ;
    public final EObject entryRuleTestEntity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTestEntity = null;


        try {
            // InternalLustre.g:4691:51: (iv_ruleTestEntity= ruleTestEntity EOF )
            // InternalLustre.g:4692:2: iv_ruleTestEntity= ruleTestEntity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTestEntityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTestEntity=ruleTestEntity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTestEntity; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTestEntity"


    // $ANTLR start "ruleTestEntity"
    // InternalLustre.g:4698:1: ruleTestEntity returns [EObject current=null] : ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) ) ;
    public final EObject ruleTestEntity() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;

        EObject lv_effect_1_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:4704:2: ( ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) ) )
            // InternalLustre.g:4705:2: ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) )
            {
            // InternalLustre.g:4705:2: ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) )
            int alt94=2;
            alt94 = dfa94.predict(input);
            switch (alt94) {
                case 1 :
                    // InternalLustre.g:4706:3: ( (lv_expression_0_0= ruleAnnotatedExpression ) )
                    {
                    // InternalLustre.g:4706:3: ( (lv_expression_0_0= ruleAnnotatedExpression ) )
                    // InternalLustre.g:4707:4: (lv_expression_0_0= ruleAnnotatedExpression )
                    {
                    // InternalLustre.g:4707:4: (lv_expression_0_0= ruleAnnotatedExpression )
                    // InternalLustre.g:4708:5: lv_expression_0_0= ruleAnnotatedExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTestEntityAccess().getExpressionAnnotatedExpressionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expression_0_0=ruleAnnotatedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTestEntityRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_0_0,
                      						"de.cau.cs.kieler.kexpressions.kext.KExt.AnnotatedExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:4726:3: ( (lv_effect_1_0= ruleEffect ) )
                    {
                    // InternalLustre.g:4726:3: ( (lv_effect_1_0= ruleEffect ) )
                    // InternalLustre.g:4727:4: (lv_effect_1_0= ruleEffect )
                    {
                    // InternalLustre.g:4727:4: (lv_effect_1_0= ruleEffect )
                    // InternalLustre.g:4728:5: lv_effect_1_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTestEntityAccess().getEffectEffectParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_effect_1_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTestEntityRule());
                      					}
                      					set(
                      						current,
                      						"effect",
                      						lv_effect_1_0,
                      						"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTestEntity"


    // $ANTLR start "entryRuleAnnotatedExpression"
    // InternalLustre.g:4749:1: entryRuleAnnotatedExpression returns [EObject current=null] : iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF ;
    public final EObject entryRuleAnnotatedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedExpression = null;


        try {
            // InternalLustre.g:4749:60: (iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF )
            // InternalLustre.g:4750:2: iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotatedExpression=ruleAnnotatedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotatedExpression"


    // $ANTLR start "ruleAnnotatedExpression"
    // InternalLustre.g:4756:1: ruleAnnotatedExpression returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) ) ;
    public final EObject ruleAnnotatedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:4762:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) ) )
            // InternalLustre.g:4763:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) )
            {
            // InternalLustre.g:4763:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) )
            // InternalLustre.g:4764:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) )
            {
            // InternalLustre.g:4764:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop95:
            do {
                int alt95=2;
                int LA95_0 = input.LA(1);

                if ( (LA95_0==RULE_COMMENT_ANNOTATION||LA95_0==92) ) {
                    alt95=1;
                }


                switch (alt95) {
            	case 1 :
            	    // InternalLustre.g:4765:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalLustre.g:4765:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalLustre.g:4766:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_80);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAnnotatedExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop95;
                }
            } while (true);

            otherlv_1=(Token)match(input,64,FollowSets000.FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAnnotatedExpressionAccess().getExpressionKeyword_1());
              		
            }
            // InternalLustre.g:4787:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalLustre.g:4788:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalLustre.g:4788:4: (lv_expression_2_0= ruleExpression )
            // InternalLustre.g:4789:5: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAnnotatedExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotatedExpression"


    // $ANTLR start "entryRuleDeclaration"
    // InternalLustre.g:4810:1: entryRuleDeclaration returns [EObject current=null] : iv_ruleDeclaration= ruleDeclaration EOF ;
    public final EObject entryRuleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclaration = null;


        try {
            // InternalLustre.g:4810:52: (iv_ruleDeclaration= ruleDeclaration EOF )
            // InternalLustre.g:4811:2: iv_ruleDeclaration= ruleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclaration=ruleDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclaration"


    // $ANTLR start "ruleDeclaration"
    // InternalLustre.g:4817:1: ruleDeclaration returns [EObject current=null] : (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_StructDeclaration_3= ruleStructDeclaration ) ;
    public final EObject ruleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclaration_0 = null;

        EObject this_ReferenceDeclaration_1 = null;

        EObject this_ScheduleDeclaration_2 = null;

        EObject this_StructDeclaration_3 = null;



        	enterRule();

        try {
            // InternalLustre.g:4823:2: ( (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_StructDeclaration_3= ruleStructDeclaration ) )
            // InternalLustre.g:4824:2: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_StructDeclaration_3= ruleStructDeclaration )
            {
            // InternalLustre.g:4824:2: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_StructDeclaration_3= ruleStructDeclaration )
            int alt96=4;
            alt96 = dfa96.predict(input);
            switch (alt96) {
                case 1 :
                    // InternalLustre.g:4825:3: this_VariableDeclaration_0= ruleVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getVariableDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_VariableDeclaration_0=ruleVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VariableDeclaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalLustre.g:4837:3: this_ReferenceDeclaration_1= ruleReferenceDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getReferenceDeclarationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceDeclaration_1=ruleReferenceDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReferenceDeclaration_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalLustre.g:4849:3: this_ScheduleDeclaration_2= ruleScheduleDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getScheduleDeclarationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ScheduleDeclaration_2=ruleScheduleDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ScheduleDeclaration_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalLustre.g:4861:3: this_StructDeclaration_3= ruleStructDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getStructDeclarationParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StructDeclaration_3=ruleStructDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StructDeclaration_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclaration"


    // $ANTLR start "entryRuleDeclarationWOSemicolon"
    // InternalLustre.g:4876:1: entryRuleDeclarationWOSemicolon returns [EObject current=null] : iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF ;
    public final EObject entryRuleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclarationWOSemicolon = null;


        try {
            // InternalLustre.g:4876:63: (iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF )
            // InternalLustre.g:4877:2: iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclarationWOSemicolon=ruleDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclarationWOSemicolon"


    // $ANTLR start "ruleDeclarationWOSemicolon"
    // InternalLustre.g:4883:1: ruleDeclarationWOSemicolon returns [EObject current=null] : (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_StructDeclarationWOSemicolon_3= ruleStructDeclarationWOSemicolon ) ;
    public final EObject ruleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationWOSemicolon_0 = null;

        EObject this_ReferenceDeclarationWOSemicolon_1 = null;

        EObject this_ScheduleDeclarationWOSemicolon_2 = null;

        EObject this_StructDeclarationWOSemicolon_3 = null;



        	enterRule();

        try {
            // InternalLustre.g:4889:2: ( (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_StructDeclarationWOSemicolon_3= ruleStructDeclarationWOSemicolon ) )
            // InternalLustre.g:4890:2: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_StructDeclarationWOSemicolon_3= ruleStructDeclarationWOSemicolon )
            {
            // InternalLustre.g:4890:2: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_StructDeclarationWOSemicolon_3= ruleStructDeclarationWOSemicolon )
            int alt97=4;
            alt97 = dfa97.predict(input);
            switch (alt97) {
                case 1 :
                    // InternalLustre.g:4891:3: this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getVariableDeclarationWOSemicolonParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_VariableDeclarationWOSemicolon_0=ruleVariableDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VariableDeclarationWOSemicolon_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalLustre.g:4903:3: this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getReferenceDeclarationWOSemicolonParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceDeclarationWOSemicolon_1=ruleReferenceDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReferenceDeclarationWOSemicolon_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalLustre.g:4915:3: this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getScheduleDeclarationWOSemicolonParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ScheduleDeclarationWOSemicolon_2=ruleScheduleDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ScheduleDeclarationWOSemicolon_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalLustre.g:4927:3: this_StructDeclarationWOSemicolon_3= ruleStructDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getStructDeclarationWOSemicolonParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StructDeclarationWOSemicolon_3=ruleStructDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StructDeclarationWOSemicolon_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclarationWOSemicolon"


    // $ANTLR start "entryRuleVariableDeclarationWOSemicolon"
    // InternalLustre.g:4942:1: entryRuleVariableDeclarationWOSemicolon returns [EObject current=null] : iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF ;
    public final EObject entryRuleVariableDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableDeclarationWOSemicolon = null;


        try {
            // InternalLustre.g:4942:71: (iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF )
            // InternalLustre.g:4943:2: iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVariableDeclarationWOSemicolon=ruleVariableDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableDeclarationWOSemicolon"


    // $ANTLR start "ruleVariableDeclarationWOSemicolon"
    // InternalLustre.g:4949:1: ruleVariableDeclarationWOSemicolon returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleVariableDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token lv_private_1_0=null;
        Token lv_const_2_0=null;
        Token lv_input_3_0=null;
        Token lv_output_4_0=null;
        Token lv_global_5_0=null;
        Token lv_static_6_0=null;
        Token lv_signal_7_0=null;
        Token lv_signal_9_0=null;
        Token lv_hostType_11_0=null;
        Token otherlv_13=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_type_8_0 = null;

        Enumerator lv_type_10_0 = null;

        EObject lv_valuedObjects_12_0 = null;

        EObject lv_valuedObjects_14_0 = null;

        EObject lv_annotations_15_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:4955:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalLustre.g:4956:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalLustre.g:4956:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? )
            // InternalLustre.g:4957:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalLustre.g:4957:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop98:
            do {
                int alt98=2;
                int LA98_0 = input.LA(1);

                if ( (LA98_0==RULE_COMMENT_ANNOTATION||LA98_0==92) ) {
                    alt98=1;
                }


                switch (alt98) {
            	case 1 :
            	    // InternalLustre.g:4958:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalLustre.g:4958:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalLustre.g:4959:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_81);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop98;
                }
            } while (true);

            // InternalLustre.g:4976:3: ( (lv_private_1_0= 'private' ) )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==65) ) {
                alt99=1;
            }
            switch (alt99) {
                case 1 :
                    // InternalLustre.g:4977:4: (lv_private_1_0= 'private' )
                    {
                    // InternalLustre.g:4977:4: (lv_private_1_0= 'private' )
                    // InternalLustre.g:4978:5: lv_private_1_0= 'private'
                    {
                    lv_private_1_0=(Token)match(input,65,FollowSets000.FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_private_1_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getPrivatePrivateKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "private", true, "private");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalLustre.g:4990:3: ( (lv_const_2_0= 'const' ) )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==25) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // InternalLustre.g:4991:4: (lv_const_2_0= 'const' )
                    {
                    // InternalLustre.g:4991:4: (lv_const_2_0= 'const' )
                    // InternalLustre.g:4992:5: lv_const_2_0= 'const'
                    {
                    lv_const_2_0=(Token)match(input,25,FollowSets000.FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_const_2_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getConstConstKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "const", true, "const");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalLustre.g:5004:3: ( (lv_input_3_0= 'input' ) )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==66) ) {
                alt101=1;
            }
            switch (alt101) {
                case 1 :
                    // InternalLustre.g:5005:4: (lv_input_3_0= 'input' )
                    {
                    // InternalLustre.g:5005:4: (lv_input_3_0= 'input' )
                    // InternalLustre.g:5006:5: lv_input_3_0= 'input'
                    {
                    lv_input_3_0=(Token)match(input,66,FollowSets000.FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_input_3_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getInputInputKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "input", true, "input");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalLustre.g:5018:3: ( (lv_output_4_0= 'output' ) )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==67) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // InternalLustre.g:5019:4: (lv_output_4_0= 'output' )
                    {
                    // InternalLustre.g:5019:4: (lv_output_4_0= 'output' )
                    // InternalLustre.g:5020:5: lv_output_4_0= 'output'
                    {
                    lv_output_4_0=(Token)match(input,67,FollowSets000.FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_output_4_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getOutputOutputKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "output", true, "output");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalLustre.g:5032:3: ( (lv_global_5_0= 'global' ) )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==68) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalLustre.g:5033:4: (lv_global_5_0= 'global' )
                    {
                    // InternalLustre.g:5033:4: (lv_global_5_0= 'global' )
                    // InternalLustre.g:5034:5: lv_global_5_0= 'global'
                    {
                    lv_global_5_0=(Token)match(input,68,FollowSets000.FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_global_5_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getGlobalGlobalKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "global", true, "global");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalLustre.g:5046:3: ( (lv_static_6_0= 'static' ) )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==69) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalLustre.g:5047:4: (lv_static_6_0= 'static' )
                    {
                    // InternalLustre.g:5047:4: (lv_static_6_0= 'static' )
                    // InternalLustre.g:5048:5: lv_static_6_0= 'static'
                    {
                    lv_static_6_0=(Token)match(input,69,FollowSets000.FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_static_6_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getStaticStaticKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "static", true, "static");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalLustre.g:5060:3: ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) )
            int alt106=3;
            switch ( input.LA(1) ) {
            case 70:
                {
                int LA106_1 = input.LA(2);

                if ( ((LA106_1>=94 && LA106_1<=96)) ) {
                    alt106=1;
                }
                else if ( (LA106_1==RULE_ID||LA106_1==RULE_COMMENT_ANNOTATION||LA106_1==92) ) {
                    alt106=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 106, 1, input);

                    throw nvae;
                }
                }
                break;
            case 94:
            case 95:
            case 96:
                {
                alt106=1;
                }
                break;
            case 117:
                {
                alt106=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 106, 0, input);

                throw nvae;
            }

            switch (alt106) {
                case 1 :
                    // InternalLustre.g:5061:4: ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) )
                    {
                    // InternalLustre.g:5061:4: ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) )
                    // InternalLustre.g:5062:5: ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) )
                    {
                    // InternalLustre.g:5062:5: ( (lv_signal_7_0= 'signal' ) )?
                    int alt105=2;
                    int LA105_0 = input.LA(1);

                    if ( (LA105_0==70) ) {
                        alt105=1;
                    }
                    switch (alt105) {
                        case 1 :
                            // InternalLustre.g:5063:6: (lv_signal_7_0= 'signal' )
                            {
                            // InternalLustre.g:5063:6: (lv_signal_7_0= 'signal' )
                            // InternalLustre.g:5064:7: lv_signal_7_0= 'signal'
                            {
                            lv_signal_7_0=(Token)match(input,70,FollowSets000.FOLLOW_16); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_signal_7_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalSignalKeyword_7_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                              							}
                              							setWithLastConsumed(current, "signal", true, "signal");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalLustre.g:5076:5: ( (lv_type_8_0= ruleValueType ) )
                    // InternalLustre.g:5077:6: (lv_type_8_0= ruleValueType )
                    {
                    // InternalLustre.g:5077:6: (lv_type_8_0= ruleValueType )
                    // InternalLustre.g:5078:7: lv_type_8_0= ruleValueType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getTypeValueTypeEnumRuleCall_7_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_27);
                    lv_type_8_0=ruleValueType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_8_0,
                      								"de.cau.cs.kieler.lustre.Lustre.ValueType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:5097:4: ( (lv_signal_9_0= 'signal' ) )
                    {
                    // InternalLustre.g:5097:4: ( (lv_signal_9_0= 'signal' ) )
                    // InternalLustre.g:5098:5: (lv_signal_9_0= 'signal' )
                    {
                    // InternalLustre.g:5098:5: (lv_signal_9_0= 'signal' )
                    // InternalLustre.g:5099:6: lv_signal_9_0= 'signal'
                    {
                    lv_signal_9_0=(Token)match(input,70,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_signal_9_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalSignalKeyword_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      						}
                      						setWithLastConsumed(current, "signal", true, "signal");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalLustre.g:5112:4: ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) )
                    {
                    // InternalLustre.g:5112:4: ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) )
                    // InternalLustre.g:5113:5: ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) )
                    {
                    // InternalLustre.g:5113:5: ( (lv_type_10_0= ruleHostType ) )
                    // InternalLustre.g:5114:6: (lv_type_10_0= ruleHostType )
                    {
                    // InternalLustre.g:5114:6: (lv_type_10_0= ruleHostType )
                    // InternalLustre.g:5115:7: lv_type_10_0= ruleHostType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getTypeHostTypeEnumRuleCall_7_2_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_69);
                    lv_type_10_0=ruleHostType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_10_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.HostType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalLustre.g:5132:5: ( (lv_hostType_11_0= RULE_STRING ) )
                    // InternalLustre.g:5133:6: (lv_hostType_11_0= RULE_STRING )
                    {
                    // InternalLustre.g:5133:6: (lv_hostType_11_0= RULE_STRING )
                    // InternalLustre.g:5134:7: lv_hostType_11_0= RULE_STRING
                    {
                    lv_hostType_11_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_hostType_11_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getHostTypeSTRINGTerminalRuleCall_7_2_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"hostType",
                      								lv_hostType_11_0,
                      								"de.cau.cs.kieler.annotations.Annotations.STRING");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalLustre.g:5152:3: ( (lv_valuedObjects_12_0= ruleValuedObject ) )
            // InternalLustre.g:5153:4: (lv_valuedObjects_12_0= ruleValuedObject )
            {
            // InternalLustre.g:5153:4: (lv_valuedObjects_12_0= ruleValuedObject )
            // InternalLustre.g:5154:5: lv_valuedObjects_12_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_8_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_83);
            lv_valuedObjects_12_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_12_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:5171:3: (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )*
            loop107:
            do {
                int alt107=2;
                int LA107_0 = input.LA(1);

                if ( (LA107_0==19) ) {
                    alt107=1;
                }


                switch (alt107) {
            	case 1 :
            	    // InternalLustre.g:5172:4: otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) )
            	    {
            	    otherlv_13=(Token)match(input,19,FollowSets000.FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_13, grammarAccess.getVariableDeclarationWOSemicolonAccess().getCommaKeyword_9_0());
            	      			
            	    }
            	    // InternalLustre.g:5176:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) )
            	    // InternalLustre.g:5177:5: (lv_valuedObjects_14_0= ruleValuedObject )
            	    {
            	    // InternalLustre.g:5177:5: (lv_valuedObjects_14_0= ruleValuedObject )
            	    // InternalLustre.g:5178:6: lv_valuedObjects_14_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_9_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_83);
            	    lv_valuedObjects_14_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_14_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop107;
                }
            } while (true);

            // InternalLustre.g:5196:3: ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalLustre.g:5197:4: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                    {
                    // InternalLustre.g:5197:4: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                    // InternalLustre.g:5198:5: lv_annotations_15_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_10_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_15_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_15_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableDeclarationWOSemicolon"


    // $ANTLR start "entryRuleStructDeclaration"
    // InternalLustre.g:5219:1: entryRuleStructDeclaration returns [EObject current=null] : iv_ruleStructDeclaration= ruleStructDeclaration EOF ;
    public final EObject entryRuleStructDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructDeclaration = null;


        try {
            // InternalLustre.g:5219:58: (iv_ruleStructDeclaration= ruleStructDeclaration EOF )
            // InternalLustre.g:5220:2: iv_ruleStructDeclaration= ruleStructDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStructDeclaration=ruleStructDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructDeclaration"


    // $ANTLR start "ruleStructDeclaration"
    // InternalLustre.g:5226:1: ruleStructDeclaration returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_private_2_0= 'private' ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_type_8_0= ruleStructType ) ) ( (lv_name_9_0= RULE_ID ) )? otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclaration ) )* otherlv_12= '}' ( ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )* )? otherlv_16= ';' ( (lv_annotations_17_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleStructDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_private_2_0=null;
        Token lv_const_3_0=null;
        Token lv_input_4_0=null;
        Token lv_output_5_0=null;
        Token lv_global_6_0=null;
        Token lv_static_7_0=null;
        Token lv_name_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_type_8_0 = null;

        EObject lv_declarations_11_0 = null;

        EObject lv_valuedObjects_13_0 = null;

        EObject lv_valuedObjects_15_0 = null;

        EObject lv_annotations_17_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:5232:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_private_2_0= 'private' ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_type_8_0= ruleStructType ) ) ( (lv_name_9_0= RULE_ID ) )? otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclaration ) )* otherlv_12= '}' ( ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )* )? otherlv_16= ';' ( (lv_annotations_17_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalLustre.g:5233:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_private_2_0= 'private' ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_type_8_0= ruleStructType ) ) ( (lv_name_9_0= RULE_ID ) )? otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclaration ) )* otherlv_12= '}' ( ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )* )? otherlv_16= ';' ( (lv_annotations_17_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalLustre.g:5233:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_private_2_0= 'private' ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_type_8_0= ruleStructType ) ) ( (lv_name_9_0= RULE_ID ) )? otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclaration ) )* otherlv_12= '}' ( ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )* )? otherlv_16= ';' ( (lv_annotations_17_0= ruleCommentAnnotatonSL ) )? )
            // InternalLustre.g:5234:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_private_2_0= 'private' ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_type_8_0= ruleStructType ) ) ( (lv_name_9_0= RULE_ID ) )? otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclaration ) )* otherlv_12= '}' ( ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )* )? otherlv_16= ';' ( (lv_annotations_17_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalLustre.g:5234:3: ()
            // InternalLustre.g:5235:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getStructDeclarationAccess().getStructDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalLustre.g:5244:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop109:
            do {
                int alt109=2;
                int LA109_0 = input.LA(1);

                if ( (LA109_0==RULE_COMMENT_ANNOTATION||LA109_0==92) ) {
                    alt109=1;
                }


                switch (alt109) {
            	case 1 :
            	    // InternalLustre.g:5245:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalLustre.g:5245:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalLustre.g:5246:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getStructDeclarationAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_84);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop109;
                }
            } while (true);

            // InternalLustre.g:5263:3: ( (lv_private_2_0= 'private' ) )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==65) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // InternalLustre.g:5264:4: (lv_private_2_0= 'private' )
                    {
                    // InternalLustre.g:5264:4: (lv_private_2_0= 'private' )
                    // InternalLustre.g:5265:5: lv_private_2_0= 'private'
                    {
                    lv_private_2_0=(Token)match(input,65,FollowSets000.FOLLOW_85); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_private_2_0, grammarAccess.getStructDeclarationAccess().getPrivatePrivateKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "private", true, "private");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalLustre.g:5277:3: ( (lv_const_3_0= 'const' ) )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==25) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // InternalLustre.g:5278:4: (lv_const_3_0= 'const' )
                    {
                    // InternalLustre.g:5278:4: (lv_const_3_0= 'const' )
                    // InternalLustre.g:5279:5: lv_const_3_0= 'const'
                    {
                    lv_const_3_0=(Token)match(input,25,FollowSets000.FOLLOW_86); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_const_3_0, grammarAccess.getStructDeclarationAccess().getConstConstKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "const", true, "const");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalLustre.g:5291:3: ( (lv_input_4_0= 'input' ) )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==66) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // InternalLustre.g:5292:4: (lv_input_4_0= 'input' )
                    {
                    // InternalLustre.g:5292:4: (lv_input_4_0= 'input' )
                    // InternalLustre.g:5293:5: lv_input_4_0= 'input'
                    {
                    lv_input_4_0=(Token)match(input,66,FollowSets000.FOLLOW_87); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_input_4_0, grammarAccess.getStructDeclarationAccess().getInputInputKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "input", true, "input");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalLustre.g:5305:3: ( (lv_output_5_0= 'output' ) )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==67) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalLustre.g:5306:4: (lv_output_5_0= 'output' )
                    {
                    // InternalLustre.g:5306:4: (lv_output_5_0= 'output' )
                    // InternalLustre.g:5307:5: lv_output_5_0= 'output'
                    {
                    lv_output_5_0=(Token)match(input,67,FollowSets000.FOLLOW_88); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_output_5_0, grammarAccess.getStructDeclarationAccess().getOutputOutputKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "output", true, "output");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalLustre.g:5319:3: ( (lv_global_6_0= 'global' ) )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==68) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalLustre.g:5320:4: (lv_global_6_0= 'global' )
                    {
                    // InternalLustre.g:5320:4: (lv_global_6_0= 'global' )
                    // InternalLustre.g:5321:5: lv_global_6_0= 'global'
                    {
                    lv_global_6_0=(Token)match(input,68,FollowSets000.FOLLOW_89); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_global_6_0, grammarAccess.getStructDeclarationAccess().getGlobalGlobalKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "global", true, "global");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalLustre.g:5333:3: ( (lv_static_7_0= 'static' ) )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==69) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // InternalLustre.g:5334:4: (lv_static_7_0= 'static' )
                    {
                    // InternalLustre.g:5334:4: (lv_static_7_0= 'static' )
                    // InternalLustre.g:5335:5: lv_static_7_0= 'static'
                    {
                    lv_static_7_0=(Token)match(input,69,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_static_7_0, grammarAccess.getStructDeclarationAccess().getStaticStaticKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "static", true, "static");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalLustre.g:5347:3: ( (lv_type_8_0= ruleStructType ) )
            // InternalLustre.g:5348:4: (lv_type_8_0= ruleStructType )
            {
            // InternalLustre.g:5348:4: (lv_type_8_0= ruleStructType )
            // InternalLustre.g:5349:5: lv_type_8_0= ruleStructType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStructDeclarationAccess().getTypeStructTypeEnumRuleCall_8_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_75);
            lv_type_8_0=ruleStructType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_8_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.StructType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:5366:3: ( (lv_name_9_0= RULE_ID ) )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==RULE_ID) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalLustre.g:5367:4: (lv_name_9_0= RULE_ID )
                    {
                    // InternalLustre.g:5367:4: (lv_name_9_0= RULE_ID )
                    // InternalLustre.g:5368:5: lv_name_9_0= RULE_ID
                    {
                    lv_name_9_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_9_0, grammarAccess.getStructDeclarationAccess().getNameIDTerminalRuleCall_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_9_0,
                      						"de.cau.cs.kieler.annotations.Annotations.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,38,FollowSets000.FOLLOW_77); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getStructDeclarationAccess().getLeftCurlyBracketKeyword_10());
              		
            }
            // InternalLustre.g:5388:3: ( (lv_declarations_11_0= ruleDeclaration ) )*
            loop117:
            do {
                int alt117=2;
                int LA117_0 = input.LA(1);

                if ( (LA117_0==RULE_ID||LA117_0==RULE_COMMENT_ANNOTATION||LA117_0==25||LA117_0==40||(LA117_0>=65 && LA117_0<=69)||(LA117_0>=71 && LA117_0<=72)||LA117_0==92||LA117_0==118) ) {
                    alt117=1;
                }


                switch (alt117) {
            	case 1 :
            	    // InternalLustre.g:5389:4: (lv_declarations_11_0= ruleDeclaration )
            	    {
            	    // InternalLustre.g:5389:4: (lv_declarations_11_0= ruleDeclaration )
            	    // InternalLustre.g:5390:5: lv_declarations_11_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getStructDeclarationAccess().getDeclarationsDeclarationParserRuleCall_11_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_77);
            	    lv_declarations_11_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_11_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop117;
                }
            } while (true);

            otherlv_12=(Token)match(input,39,FollowSets000.FOLLOW_90); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getStructDeclarationAccess().getRightCurlyBracketKeyword_12());
              		
            }
            // InternalLustre.g:5411:3: ( ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )* )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==RULE_ID||LA119_0==RULE_COMMENT_ANNOTATION||LA119_0==92) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // InternalLustre.g:5412:4: ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )*
                    {
                    // InternalLustre.g:5412:4: ( (lv_valuedObjects_13_0= ruleValuedObject ) )
                    // InternalLustre.g:5413:5: (lv_valuedObjects_13_0= ruleValuedObject )
                    {
                    // InternalLustre.g:5413:5: (lv_valuedObjects_13_0= ruleValuedObject )
                    // InternalLustre.g:5414:6: lv_valuedObjects_13_0= ruleValuedObject
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStructDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_13_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_7);
                    lv_valuedObjects_13_0=ruleValuedObject();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"valuedObjects",
                      							lv_valuedObjects_13_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalLustre.g:5431:4: (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )*
                    loop118:
                    do {
                        int alt118=2;
                        int LA118_0 = input.LA(1);

                        if ( (LA118_0==19) ) {
                            alt118=1;
                        }


                        switch (alt118) {
                    	case 1 :
                    	    // InternalLustre.g:5432:5: otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) )
                    	    {
                    	    otherlv_14=(Token)match(input,19,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_14, grammarAccess.getStructDeclarationAccess().getCommaKeyword_13_1_0());
                    	      				
                    	    }
                    	    // InternalLustre.g:5436:5: ( (lv_valuedObjects_15_0= ruleValuedObject ) )
                    	    // InternalLustre.g:5437:6: (lv_valuedObjects_15_0= ruleValuedObject )
                    	    {
                    	    // InternalLustre.g:5437:6: (lv_valuedObjects_15_0= ruleValuedObject )
                    	    // InternalLustre.g:5438:7: lv_valuedObjects_15_0= ruleValuedObject
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getStructDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_13_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_7);
                    	    lv_valuedObjects_15_0=ruleValuedObject();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"valuedObjects",
                    	      								lv_valuedObjects_15_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop118;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_16=(Token)match(input,20,FollowSets000.FOLLOW_91); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_16, grammarAccess.getStructDeclarationAccess().getSemicolonKeyword_14());
              		
            }
            // InternalLustre.g:5461:3: ( (lv_annotations_17_0= ruleCommentAnnotatonSL ) )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // InternalLustre.g:5462:4: (lv_annotations_17_0= ruleCommentAnnotatonSL )
                    {
                    // InternalLustre.g:5462:4: (lv_annotations_17_0= ruleCommentAnnotatonSL )
                    // InternalLustre.g:5463:5: lv_annotations_17_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStructDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_15_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_17_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_17_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructDeclaration"


    // $ANTLR start "entryRuleStructDeclarationWOSemicolon"
    // InternalLustre.g:5484:1: entryRuleStructDeclarationWOSemicolon returns [EObject current=null] : iv_ruleStructDeclarationWOSemicolon= ruleStructDeclarationWOSemicolon EOF ;
    public final EObject entryRuleStructDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructDeclarationWOSemicolon = null;


        try {
            // InternalLustre.g:5484:69: (iv_ruleStructDeclarationWOSemicolon= ruleStructDeclarationWOSemicolon EOF )
            // InternalLustre.g:5485:2: iv_ruleStructDeclarationWOSemicolon= ruleStructDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStructDeclarationWOSemicolon=ruleStructDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructDeclarationWOSemicolon"


    // $ANTLR start "ruleStructDeclarationWOSemicolon"
    // InternalLustre.g:5491:1: ruleStructDeclarationWOSemicolon returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_private_2_0= 'private' ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_type_8_0= ruleStructType ) ) ( (lv_name_9_0= RULE_ID ) )? otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* otherlv_12= '}' ( ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )* )? ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleStructDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token lv_private_2_0=null;
        Token lv_const_3_0=null;
        Token lv_input_4_0=null;
        Token lv_output_5_0=null;
        Token lv_global_6_0=null;
        Token lv_static_7_0=null;
        Token lv_name_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_type_8_0 = null;

        EObject lv_declarations_11_0 = null;

        EObject lv_valuedObjects_13_0 = null;

        EObject lv_valuedObjects_15_0 = null;

        EObject lv_annotations_16_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:5497:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_private_2_0= 'private' ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_type_8_0= ruleStructType ) ) ( (lv_name_9_0= RULE_ID ) )? otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* otherlv_12= '}' ( ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )* )? ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalLustre.g:5498:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_private_2_0= 'private' ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_type_8_0= ruleStructType ) ) ( (lv_name_9_0= RULE_ID ) )? otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* otherlv_12= '}' ( ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )* )? ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalLustre.g:5498:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_private_2_0= 'private' ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_type_8_0= ruleStructType ) ) ( (lv_name_9_0= RULE_ID ) )? otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* otherlv_12= '}' ( ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )* )? ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? )
            // InternalLustre.g:5499:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_private_2_0= 'private' ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_type_8_0= ruleStructType ) ) ( (lv_name_9_0= RULE_ID ) )? otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* otherlv_12= '}' ( ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )* )? ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalLustre.g:5499:3: ()
            // InternalLustre.g:5500:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getStructDeclarationWOSemicolonAccess().getStructDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalLustre.g:5509:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop121:
            do {
                int alt121=2;
                int LA121_0 = input.LA(1);

                if ( (LA121_0==RULE_COMMENT_ANNOTATION||LA121_0==92) ) {
                    alt121=1;
                }


                switch (alt121) {
            	case 1 :
            	    // InternalLustre.g:5510:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalLustre.g:5510:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalLustre.g:5511:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getStructDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_84);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getStructDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop121;
                }
            } while (true);

            // InternalLustre.g:5528:3: ( (lv_private_2_0= 'private' ) )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==65) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // InternalLustre.g:5529:4: (lv_private_2_0= 'private' )
                    {
                    // InternalLustre.g:5529:4: (lv_private_2_0= 'private' )
                    // InternalLustre.g:5530:5: lv_private_2_0= 'private'
                    {
                    lv_private_2_0=(Token)match(input,65,FollowSets000.FOLLOW_85); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_private_2_0, grammarAccess.getStructDeclarationWOSemicolonAccess().getPrivatePrivateKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "private", true, "private");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalLustre.g:5542:3: ( (lv_const_3_0= 'const' ) )?
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==25) ) {
                alt123=1;
            }
            switch (alt123) {
                case 1 :
                    // InternalLustre.g:5543:4: (lv_const_3_0= 'const' )
                    {
                    // InternalLustre.g:5543:4: (lv_const_3_0= 'const' )
                    // InternalLustre.g:5544:5: lv_const_3_0= 'const'
                    {
                    lv_const_3_0=(Token)match(input,25,FollowSets000.FOLLOW_86); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_const_3_0, grammarAccess.getStructDeclarationWOSemicolonAccess().getConstConstKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "const", true, "const");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalLustre.g:5556:3: ( (lv_input_4_0= 'input' ) )?
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( (LA124_0==66) ) {
                alt124=1;
            }
            switch (alt124) {
                case 1 :
                    // InternalLustre.g:5557:4: (lv_input_4_0= 'input' )
                    {
                    // InternalLustre.g:5557:4: (lv_input_4_0= 'input' )
                    // InternalLustre.g:5558:5: lv_input_4_0= 'input'
                    {
                    lv_input_4_0=(Token)match(input,66,FollowSets000.FOLLOW_87); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_input_4_0, grammarAccess.getStructDeclarationWOSemicolonAccess().getInputInputKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "input", true, "input");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalLustre.g:5570:3: ( (lv_output_5_0= 'output' ) )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==67) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // InternalLustre.g:5571:4: (lv_output_5_0= 'output' )
                    {
                    // InternalLustre.g:5571:4: (lv_output_5_0= 'output' )
                    // InternalLustre.g:5572:5: lv_output_5_0= 'output'
                    {
                    lv_output_5_0=(Token)match(input,67,FollowSets000.FOLLOW_88); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_output_5_0, grammarAccess.getStructDeclarationWOSemicolonAccess().getOutputOutputKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "output", true, "output");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalLustre.g:5584:3: ( (lv_global_6_0= 'global' ) )?
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==68) ) {
                alt126=1;
            }
            switch (alt126) {
                case 1 :
                    // InternalLustre.g:5585:4: (lv_global_6_0= 'global' )
                    {
                    // InternalLustre.g:5585:4: (lv_global_6_0= 'global' )
                    // InternalLustre.g:5586:5: lv_global_6_0= 'global'
                    {
                    lv_global_6_0=(Token)match(input,68,FollowSets000.FOLLOW_89); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_global_6_0, grammarAccess.getStructDeclarationWOSemicolonAccess().getGlobalGlobalKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "global", true, "global");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalLustre.g:5598:3: ( (lv_static_7_0= 'static' ) )?
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==69) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    // InternalLustre.g:5599:4: (lv_static_7_0= 'static' )
                    {
                    // InternalLustre.g:5599:4: (lv_static_7_0= 'static' )
                    // InternalLustre.g:5600:5: lv_static_7_0= 'static'
                    {
                    lv_static_7_0=(Token)match(input,69,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_static_7_0, grammarAccess.getStructDeclarationWOSemicolonAccess().getStaticStaticKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "static", true, "static");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalLustre.g:5612:3: ( (lv_type_8_0= ruleStructType ) )
            // InternalLustre.g:5613:4: (lv_type_8_0= ruleStructType )
            {
            // InternalLustre.g:5613:4: (lv_type_8_0= ruleStructType )
            // InternalLustre.g:5614:5: lv_type_8_0= ruleStructType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStructDeclarationWOSemicolonAccess().getTypeStructTypeEnumRuleCall_8_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_75);
            lv_type_8_0=ruleStructType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStructDeclarationWOSemicolonRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_8_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.StructType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:5631:3: ( (lv_name_9_0= RULE_ID ) )?
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==RULE_ID) ) {
                alt128=1;
            }
            switch (alt128) {
                case 1 :
                    // InternalLustre.g:5632:4: (lv_name_9_0= RULE_ID )
                    {
                    // InternalLustre.g:5632:4: (lv_name_9_0= RULE_ID )
                    // InternalLustre.g:5633:5: lv_name_9_0= RULE_ID
                    {
                    lv_name_9_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_9_0, grammarAccess.getStructDeclarationWOSemicolonAccess().getNameIDTerminalRuleCall_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_9_0,
                      						"de.cau.cs.kieler.annotations.Annotations.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,38,FollowSets000.FOLLOW_92); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getStructDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_10());
              		
            }
            // InternalLustre.g:5653:3: ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )*
            loop129:
            do {
                int alt129=2;
                int LA129_0 = input.LA(1);

                if ( (LA129_0==RULE_COMMENT_ANNOTATION||LA129_0==25||LA129_0==40||(LA129_0>=65 && LA129_0<=72)||LA129_0==92||(LA129_0>=94 && LA129_0<=96)||(LA129_0>=117 && LA129_0<=118)) ) {
                    alt129=1;
                }


                switch (alt129) {
            	case 1 :
            	    // InternalLustre.g:5654:4: (lv_declarations_11_0= ruleDeclarationWOSemicolon )
            	    {
            	    // InternalLustre.g:5654:4: (lv_declarations_11_0= ruleDeclarationWOSemicolon )
            	    // InternalLustre.g:5655:5: lv_declarations_11_0= ruleDeclarationWOSemicolon
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getStructDeclarationWOSemicolonAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_11_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_92);
            	    lv_declarations_11_0=ruleDeclarationWOSemicolon();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getStructDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_11_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop129;
                }
            } while (true);

            otherlv_12=(Token)match(input,39,FollowSets000.FOLLOW_93); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getStructDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_12());
              		
            }
            // InternalLustre.g:5676:3: ( ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )* )?
            int alt131=2;
            alt131 = dfa131.predict(input);
            switch (alt131) {
                case 1 :
                    // InternalLustre.g:5677:4: ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )*
                    {
                    // InternalLustre.g:5677:4: ( (lv_valuedObjects_13_0= ruleValuedObject ) )
                    // InternalLustre.g:5678:5: (lv_valuedObjects_13_0= ruleValuedObject )
                    {
                    // InternalLustre.g:5678:5: (lv_valuedObjects_13_0= ruleValuedObject )
                    // InternalLustre.g:5679:6: lv_valuedObjects_13_0= ruleValuedObject
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStructDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_13_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_83);
                    lv_valuedObjects_13_0=ruleValuedObject();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStructDeclarationWOSemicolonRule());
                      						}
                      						add(
                      							current,
                      							"valuedObjects",
                      							lv_valuedObjects_13_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalLustre.g:5696:4: (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )*
                    loop130:
                    do {
                        int alt130=2;
                        int LA130_0 = input.LA(1);

                        if ( (LA130_0==19) ) {
                            alt130=1;
                        }


                        switch (alt130) {
                    	case 1 :
                    	    // InternalLustre.g:5697:5: otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) )
                    	    {
                    	    otherlv_14=(Token)match(input,19,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_14, grammarAccess.getStructDeclarationWOSemicolonAccess().getCommaKeyword_13_1_0());
                    	      				
                    	    }
                    	    // InternalLustre.g:5701:5: ( (lv_valuedObjects_15_0= ruleValuedObject ) )
                    	    // InternalLustre.g:5702:6: (lv_valuedObjects_15_0= ruleValuedObject )
                    	    {
                    	    // InternalLustre.g:5702:6: (lv_valuedObjects_15_0= ruleValuedObject )
                    	    // InternalLustre.g:5703:7: lv_valuedObjects_15_0= ruleValuedObject
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getStructDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_13_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_83);
                    	    lv_valuedObjects_15_0=ruleValuedObject();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getStructDeclarationWOSemicolonRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"valuedObjects",
                    	      								lv_valuedObjects_15_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop130;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalLustre.g:5722:3: ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // InternalLustre.g:5723:4: (lv_annotations_16_0= ruleCommentAnnotatonSL )
                    {
                    // InternalLustre.g:5723:4: (lv_annotations_16_0= ruleCommentAnnotatonSL )
                    // InternalLustre.g:5724:5: lv_annotations_16_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStructDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_14_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_16_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStructDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_16_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructDeclarationWOSemicolon"


    // $ANTLR start "entryRuleNamespaceID"
    // InternalLustre.g:5745:1: entryRuleNamespaceID returns [String current=null] : iv_ruleNamespaceID= ruleNamespaceID EOF ;
    public final String entryRuleNamespaceID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNamespaceID = null;


        try {
            // InternalLustre.g:5745:51: (iv_ruleNamespaceID= ruleNamespaceID EOF )
            // InternalLustre.g:5746:2: iv_ruleNamespaceID= ruleNamespaceID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNamespaceID=ruleNamespaceID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespaceID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamespaceID"


    // $ANTLR start "ruleNamespaceID"
    // InternalLustre.g:5752:1: ruleNamespaceID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )* ) ;
    public final AntlrDatatypeRuleToken ruleNamespaceID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ExtendedID_0 = null;

        AntlrDatatypeRuleToken this_PrimeID_2 = null;



        	enterRule();

        try {
            // InternalLustre.g:5758:2: ( (this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )* ) )
            // InternalLustre.g:5759:2: (this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )* )
            {
            // InternalLustre.g:5759:2: (this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )* )
            // InternalLustre.g:5760:3: this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getNamespaceIDAccess().getExtendedIDParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_94);
            this_ExtendedID_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ExtendedID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalLustre.g:5770:3: (kw= ':' this_PrimeID_2= rulePrimeID )*
            loop133:
            do {
                int alt133=2;
                int LA133_0 = input.LA(1);

                if ( (LA133_0==26) ) {
                    alt133=1;
                }


                switch (alt133) {
            	case 1 :
            	    // InternalLustre.g:5771:4: kw= ':' this_PrimeID_2= rulePrimeID
            	    {
            	    kw=(Token)match(input,26,FollowSets000.FOLLOW_33); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getNamespaceIDAccess().getColonKeyword_1_0());
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getNamespaceIDAccess().getPrimeIDParserRuleCall_1_1());
            	      			
            	    }
            	    pushFollow(FollowSets000.FOLLOW_94);
            	    this_PrimeID_2=rulePrimeID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_PrimeID_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop133;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceID"


    // $ANTLR start "entryRuleReferenceDeclaration"
    // InternalLustre.g:5791:1: entryRuleReferenceDeclaration returns [EObject current=null] : iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF ;
    public final EObject entryRuleReferenceDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceDeclaration = null;


        try {
            // InternalLustre.g:5791:61: (iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF )
            // InternalLustre.g:5792:2: iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceDeclaration=ruleReferenceDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceDeclaration"


    // $ANTLR start "ruleReferenceDeclaration"
    // InternalLustre.g:5798:1: ruleReferenceDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleReferenceDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_private_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_extern_5_0 = null;

        EObject lv_extern_7_0 = null;

        EObject lv_valuedObjects_8_0 = null;

        EObject lv_valuedObjects_10_0 = null;

        EObject lv_annotations_12_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:5804:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalLustre.g:5805:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalLustre.g:5805:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? )
            // InternalLustre.g:5806:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalLustre.g:5806:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop134:
            do {
                int alt134=2;
                int LA134_0 = input.LA(1);

                if ( (LA134_0==RULE_COMMENT_ANNOTATION||LA134_0==92) ) {
                    alt134=1;
                }


                switch (alt134) {
            	case 1 :
            	    // InternalLustre.g:5807:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalLustre.g:5807:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalLustre.g:5808:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_95);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop134;
                }
            } while (true);

            // InternalLustre.g:5825:3: ( (lv_private_1_0= 'private' ) )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==65) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // InternalLustre.g:5826:4: (lv_private_1_0= 'private' )
                    {
                    // InternalLustre.g:5826:4: (lv_private_1_0= 'private' )
                    // InternalLustre.g:5827:5: lv_private_1_0= 'private'
                    {
                    lv_private_1_0=(Token)match(input,65,FollowSets000.FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_private_1_0, grammarAccess.getReferenceDeclarationAccess().getPrivatePrivateKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getReferenceDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "private", true, "private");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalLustre.g:5839:3: ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) )
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==71) ) {
                alt137=1;
            }
            else if ( (LA137_0==40) ) {
                alt137=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 137, 0, input);

                throw nvae;
            }
            switch (alt137) {
                case 1 :
                    // InternalLustre.g:5840:4: (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) )
                    {
                    // InternalLustre.g:5840:4: (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) )
                    // InternalLustre.g:5841:5: otherlv_2= 'ref' ( ( ruleNamespaceID ) )
                    {
                    otherlv_2=(Token)match(input,71,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getReferenceDeclarationAccess().getRefKeyword_2_0_0());
                      				
                    }
                    // InternalLustre.g:5845:5: ( ( ruleNamespaceID ) )
                    // InternalLustre.g:5846:6: ( ruleNamespaceID )
                    {
                    // InternalLustre.g:5846:6: ( ruleNamespaceID )
                    // InternalLustre.g:5847:7: ruleNamespaceID
                    {
                    if ( state.backtracking==0 ) {

                      							/* */
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getReferenceDeclarationRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getReferenceNamedObjectCrossReference_2_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_27);
                    ruleNamespaceID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:5866:4: (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* )
                    {
                    // InternalLustre.g:5866:4: (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* )
                    // InternalLustre.g:5867:5: otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )*
                    {
                    otherlv_4=(Token)match(input,40,FollowSets000.FOLLOW_97); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getReferenceDeclarationAccess().getExternKeyword_2_1_0());
                      				
                    }
                    // InternalLustre.g:5871:5: ( (lv_extern_5_0= ruleExternString ) )
                    // InternalLustre.g:5872:6: (lv_extern_5_0= ruleExternString )
                    {
                    // InternalLustre.g:5872:6: (lv_extern_5_0= ruleExternString )
                    // InternalLustre.g:5873:7: lv_extern_5_0= ruleExternString
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getExternExternStringParserRuleCall_2_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_98);
                    lv_extern_5_0=ruleExternString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                      							}
                      							add(
                      								current,
                      								"extern",
                      								lv_extern_5_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalLustre.g:5890:5: (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )*
                    loop136:
                    do {
                        int alt136=2;
                        int LA136_0 = input.LA(1);

                        if ( (LA136_0==19) ) {
                            alt136=1;
                        }


                        switch (alt136) {
                    	case 1 :
                    	    // InternalLustre.g:5891:6: otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,19,FollowSets000.FOLLOW_97); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_6, grammarAccess.getReferenceDeclarationAccess().getCommaKeyword_2_1_2_0());
                    	      					
                    	    }
                    	    // InternalLustre.g:5895:6: ( (lv_extern_7_0= ruleExternString ) )
                    	    // InternalLustre.g:5896:7: (lv_extern_7_0= ruleExternString )
                    	    {
                    	    // InternalLustre.g:5896:7: (lv_extern_7_0= ruleExternString )
                    	    // InternalLustre.g:5897:8: lv_extern_7_0= ruleExternString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getExternExternStringParserRuleCall_2_1_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_98);
                    	    lv_extern_7_0=ruleExternString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"extern",
                    	      									lv_extern_7_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop136;
                        }
                    } while (true);


                    }


                    }
                    break;

            }

            // InternalLustre.g:5917:3: ( (lv_valuedObjects_8_0= ruleValuedObject ) )
            // InternalLustre.g:5918:4: (lv_valuedObjects_8_0= ruleValuedObject )
            {
            // InternalLustre.g:5918:4: (lv_valuedObjects_8_0= ruleValuedObject )
            // InternalLustre.g:5919:5: lv_valuedObjects_8_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_7);
            lv_valuedObjects_8_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_8_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:5936:3: (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )*
            loop138:
            do {
                int alt138=2;
                int LA138_0 = input.LA(1);

                if ( (LA138_0==19) ) {
                    alt138=1;
                }


                switch (alt138) {
            	case 1 :
            	    // InternalLustre.g:5937:4: otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    {
            	    otherlv_9=(Token)match(input,19,FollowSets000.FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_9, grammarAccess.getReferenceDeclarationAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalLustre.g:5941:4: ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    // InternalLustre.g:5942:5: (lv_valuedObjects_10_0= ruleValuedObject )
            	    {
            	    // InternalLustre.g:5942:5: (lv_valuedObjects_10_0= ruleValuedObject )
            	    // InternalLustre.g:5943:6: lv_valuedObjects_10_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_7);
            	    lv_valuedObjects_10_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_10_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop138;
                }
            } while (true);

            otherlv_11=(Token)match(input,20,FollowSets000.FOLLOW_91); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getReferenceDeclarationAccess().getSemicolonKeyword_5());
              		
            }
            // InternalLustre.g:5965:3: ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )?
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt139=1;
            }
            switch (alt139) {
                case 1 :
                    // InternalLustre.g:5966:4: (lv_annotations_12_0= ruleCommentAnnotatonSL )
                    {
                    // InternalLustre.g:5966:4: (lv_annotations_12_0= ruleCommentAnnotatonSL )
                    // InternalLustre.g:5967:5: lv_annotations_12_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_12_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_12_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceDeclaration"


    // $ANTLR start "entryRuleReferenceDeclarationWOSemicolon"
    // InternalLustre.g:5988:1: entryRuleReferenceDeclarationWOSemicolon returns [EObject current=null] : iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF ;
    public final EObject entryRuleReferenceDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceDeclarationWOSemicolon = null;


        try {
            // InternalLustre.g:5988:72: (iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF )
            // InternalLustre.g:5989:2: iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceDeclarationWOSemicolon=ruleReferenceDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceDeclarationWOSemicolon"


    // $ANTLR start "ruleReferenceDeclarationWOSemicolon"
    // InternalLustre.g:5995:1: ruleReferenceDeclarationWOSemicolon returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleReferenceDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token lv_private_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_extern_5_0 = null;

        EObject lv_extern_7_0 = null;

        EObject lv_valuedObjects_8_0 = null;

        EObject lv_valuedObjects_10_0 = null;

        EObject lv_annotations_11_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:6001:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalLustre.g:6002:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalLustre.g:6002:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? )
            // InternalLustre.g:6003:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalLustre.g:6003:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop140:
            do {
                int alt140=2;
                int LA140_0 = input.LA(1);

                if ( (LA140_0==RULE_COMMENT_ANNOTATION||LA140_0==92) ) {
                    alt140=1;
                }


                switch (alt140) {
            	case 1 :
            	    // InternalLustre.g:6004:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalLustre.g:6004:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalLustre.g:6005:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_95);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop140;
                }
            } while (true);

            // InternalLustre.g:6022:3: ( (lv_private_1_0= 'private' ) )?
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==65) ) {
                alt141=1;
            }
            switch (alt141) {
                case 1 :
                    // InternalLustre.g:6023:4: (lv_private_1_0= 'private' )
                    {
                    // InternalLustre.g:6023:4: (lv_private_1_0= 'private' )
                    // InternalLustre.g:6024:5: lv_private_1_0= 'private'
                    {
                    lv_private_1_0=(Token)match(input,65,FollowSets000.FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_private_1_0, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getPrivatePrivateKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "private", true, "private");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalLustre.g:6036:3: ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) )
            int alt143=2;
            int LA143_0 = input.LA(1);

            if ( (LA143_0==71) ) {
                alt143=1;
            }
            else if ( (LA143_0==40) ) {
                alt143=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 143, 0, input);

                throw nvae;
            }
            switch (alt143) {
                case 1 :
                    // InternalLustre.g:6037:4: (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) )
                    {
                    // InternalLustre.g:6037:4: (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) )
                    // InternalLustre.g:6038:5: otherlv_2= 'ref' ( ( ruleNamespaceID ) )
                    {
                    otherlv_2=(Token)match(input,71,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getRefKeyword_2_0_0());
                      				
                    }
                    // InternalLustre.g:6042:5: ( ( ruleNamespaceID ) )
                    // InternalLustre.g:6043:6: ( ruleNamespaceID )
                    {
                    // InternalLustre.g:6043:6: ( ruleNamespaceID )
                    // InternalLustre.g:6044:7: ruleNamespaceID
                    {
                    if ( state.backtracking==0 ) {

                      							/* */
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getReferenceNamedObjectCrossReference_2_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_27);
                    ruleNamespaceID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:6063:4: (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* )
                    {
                    // InternalLustre.g:6063:4: (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* )
                    // InternalLustre.g:6064:5: otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )*
                    {
                    otherlv_4=(Token)match(input,40,FollowSets000.FOLLOW_97); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternKeyword_2_1_0());
                      				
                    }
                    // InternalLustre.g:6068:5: ( (lv_extern_5_0= ruleExternString ) )
                    // InternalLustre.g:6069:6: (lv_extern_5_0= ruleExternString )
                    {
                    // InternalLustre.g:6069:6: (lv_extern_5_0= ruleExternString )
                    // InternalLustre.g:6070:7: lv_extern_5_0= ruleExternString
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternExternStringParserRuleCall_2_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_98);
                    lv_extern_5_0=ruleExternString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      							}
                      							add(
                      								current,
                      								"extern",
                      								lv_extern_5_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalLustre.g:6087:5: (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )*
                    loop142:
                    do {
                        int alt142=2;
                        int LA142_0 = input.LA(1);

                        if ( (LA142_0==19) ) {
                            alt142=1;
                        }


                        switch (alt142) {
                    	case 1 :
                    	    // InternalLustre.g:6088:6: otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,19,FollowSets000.FOLLOW_97); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_6, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getCommaKeyword_2_1_2_0());
                    	      					
                    	    }
                    	    // InternalLustre.g:6092:6: ( (lv_extern_7_0= ruleExternString ) )
                    	    // InternalLustre.g:6093:7: (lv_extern_7_0= ruleExternString )
                    	    {
                    	    // InternalLustre.g:6093:7: (lv_extern_7_0= ruleExternString )
                    	    // InternalLustre.g:6094:8: lv_extern_7_0= ruleExternString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternExternStringParserRuleCall_2_1_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_98);
                    	    lv_extern_7_0=ruleExternString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"extern",
                    	      									lv_extern_7_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop142;
                        }
                    } while (true);


                    }


                    }
                    break;

            }

            // InternalLustre.g:6114:3: ( (lv_valuedObjects_8_0= ruleValuedObject ) )
            // InternalLustre.g:6115:4: (lv_valuedObjects_8_0= ruleValuedObject )
            {
            // InternalLustre.g:6115:4: (lv_valuedObjects_8_0= ruleValuedObject )
            // InternalLustre.g:6116:5: lv_valuedObjects_8_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_83);
            lv_valuedObjects_8_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_8_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:6133:3: (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )*
            loop144:
            do {
                int alt144=2;
                int LA144_0 = input.LA(1);

                if ( (LA144_0==19) ) {
                    alt144=1;
                }


                switch (alt144) {
            	case 1 :
            	    // InternalLustre.g:6134:4: otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    {
            	    otherlv_9=(Token)match(input,19,FollowSets000.FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_9, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalLustre.g:6138:4: ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    // InternalLustre.g:6139:5: (lv_valuedObjects_10_0= ruleValuedObject )
            	    {
            	    // InternalLustre.g:6139:5: (lv_valuedObjects_10_0= ruleValuedObject )
            	    // InternalLustre.g:6140:6: lv_valuedObjects_10_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_83);
            	    lv_valuedObjects_10_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_10_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop144;
                }
            } while (true);

            // InternalLustre.g:6158:3: ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )?
            int alt145=2;
            int LA145_0 = input.LA(1);

            if ( (LA145_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt145=1;
            }
            switch (alt145) {
                case 1 :
                    // InternalLustre.g:6159:4: (lv_annotations_11_0= ruleCommentAnnotatonSL )
                    {
                    // InternalLustre.g:6159:4: (lv_annotations_11_0= ruleCommentAnnotatonSL )
                    // InternalLustre.g:6160:5: lv_annotations_11_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_11_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_11_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceDeclarationWOSemicolon"


    // $ANTLR start "entryRuleExternString"
    // InternalLustre.g:6181:1: entryRuleExternString returns [EObject current=null] : iv_ruleExternString= ruleExternString EOF ;
    public final EObject entryRuleExternString() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExternString = null;


        try {
            // InternalLustre.g:6181:53: (iv_ruleExternString= ruleExternString EOF )
            // InternalLustre.g:6182:2: iv_ruleExternString= ruleExternString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExternStringRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExternString=ruleExternString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExternString; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExternString"


    // $ANTLR start "ruleExternString"
    // InternalLustre.g:6188:1: ruleExternString returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleExternString() throws RecognitionException {
        EObject current = null;

        Token lv_code_1_0=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:6194:2: ( ( ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) ) ) )
            // InternalLustre.g:6195:2: ( ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) ) )
            {
            // InternalLustre.g:6195:2: ( ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) ) )
            // InternalLustre.g:6196:3: ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) )
            {
            // InternalLustre.g:6196:3: ( (lv_annotations_0_0= ruleTagAnnotation ) )*
            loop146:
            do {
                int alt146=2;
                int LA146_0 = input.LA(1);

                if ( (LA146_0==92) ) {
                    alt146=1;
                }


                switch (alt146) {
            	case 1 :
            	    // InternalLustre.g:6197:4: (lv_annotations_0_0= ruleTagAnnotation )
            	    {
            	    // InternalLustre.g:6197:4: (lv_annotations_0_0= ruleTagAnnotation )
            	    // InternalLustre.g:6198:5: lv_annotations_0_0= ruleTagAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getExternStringAccess().getAnnotationsTagAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_97);
            	    lv_annotations_0_0=ruleTagAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getExternStringRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.TagAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop146;
                }
            } while (true);

            // InternalLustre.g:6215:3: ( (lv_code_1_0= RULE_STRING ) )
            // InternalLustre.g:6216:4: (lv_code_1_0= RULE_STRING )
            {
            // InternalLustre.g:6216:4: (lv_code_1_0= RULE_STRING )
            // InternalLustre.g:6217:5: lv_code_1_0= RULE_STRING
            {
            lv_code_1_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_code_1_0, grammarAccess.getExternStringAccess().getCodeSTRINGTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getExternStringRule());
              					}
              					setWithLastConsumed(
              						current,
              						"code",
              						lv_code_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.STRING");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExternString"


    // $ANTLR start "entryRuleScheduleDeclaration"
    // InternalLustre.g:6237:1: entryRuleScheduleDeclaration returns [EObject current=null] : iv_ruleScheduleDeclaration= ruleScheduleDeclaration EOF ;
    public final EObject entryRuleScheduleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScheduleDeclaration = null;


        try {
            // InternalLustre.g:6237:60: (iv_ruleScheduleDeclaration= ruleScheduleDeclaration EOF )
            // InternalLustre.g:6238:2: iv_ruleScheduleDeclaration= ruleScheduleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScheduleDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScheduleDeclaration=ruleScheduleDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScheduleDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScheduleDeclaration"


    // $ANTLR start "ruleScheduleDeclaration"
    // InternalLustre.g:6244:1: ruleScheduleDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleScheduleDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_private_1_0=null;
        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_global_5_0 = null;

        Enumerator lv_priorities_7_0 = null;

        Enumerator lv_priorities_9_0 = null;

        EObject lv_valuedObjects_11_0 = null;

        EObject lv_valuedObjects_13_0 = null;

        EObject lv_annotations_15_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:6250:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalLustre.g:6251:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalLustre.g:6251:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? )
            // InternalLustre.g:6252:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalLustre.g:6252:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop147:
            do {
                int alt147=2;
                int LA147_0 = input.LA(1);

                if ( (LA147_0==RULE_COMMENT_ANNOTATION||LA147_0==92) ) {
                    alt147=1;
                }


                switch (alt147) {
            	case 1 :
            	    // InternalLustre.g:6253:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalLustre.g:6253:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalLustre.g:6254:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_99);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop147;
                }
            } while (true);

            // InternalLustre.g:6271:3: ( (lv_private_1_0= 'private' ) )?
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( (LA148_0==65) ) {
                alt148=1;
            }
            switch (alt148) {
                case 1 :
                    // InternalLustre.g:6272:4: (lv_private_1_0= 'private' )
                    {
                    // InternalLustre.g:6272:4: (lv_private_1_0= 'private' )
                    // InternalLustre.g:6273:5: lv_private_1_0= 'private'
                    {
                    lv_private_1_0=(Token)match(input,65,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_private_1_0, grammarAccess.getScheduleDeclarationAccess().getPrivatePrivateKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getScheduleDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "private", true, "private");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,72,FollowSets000.FOLLOW_101); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getScheduleDeclarationAccess().getScheduleKeyword_2());
              		
            }
            // InternalLustre.g:6289:3: ( (lv_name_3_0= RULE_STRING ) )?
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( (LA149_0==RULE_STRING) ) {
                alt149=1;
            }
            switch (alt149) {
                case 1 :
                    // InternalLustre.g:6290:4: (lv_name_3_0= RULE_STRING )
                    {
                    // InternalLustre.g:6290:4: (lv_name_3_0= RULE_STRING )
                    // InternalLustre.g:6291:5: lv_name_3_0= RULE_STRING
                    {
                    lv_name_3_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_3_0, grammarAccess.getScheduleDeclarationAccess().getNameSTRINGTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getScheduleDeclarationRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_3_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalLustre.g:6307:3: (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )?
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( (LA150_0==68) ) {
                alt150=1;
            }
            switch (alt150) {
                case 1 :
                    // InternalLustre.g:6308:4: otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) )
                    {
                    otherlv_4=(Token)match(input,68,FollowSets000.FOLLOW_103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getScheduleDeclarationAccess().getGlobalKeyword_4_0());
                      			
                    }
                    // InternalLustre.g:6312:4: ( (lv_global_5_0= rulePriorityProtocol ) )
                    // InternalLustre.g:6313:5: (lv_global_5_0= rulePriorityProtocol )
                    {
                    // InternalLustre.g:6313:5: (lv_global_5_0= rulePriorityProtocol )
                    // InternalLustre.g:6314:6: lv_global_5_0= rulePriorityProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getGlobalPriorityProtocolEnumRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_104);
                    lv_global_5_0=rulePriorityProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"global",
                      							lv_global_5_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalLustre.g:6332:3: (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )?
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==38) ) {
                alt152=1;
            }
            switch (alt152) {
                case 1 :
                    // InternalLustre.g:6333:4: otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}'
                    {
                    otherlv_6=(Token)match(input,38,FollowSets000.FOLLOW_103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getScheduleDeclarationAccess().getLeftCurlyBracketKeyword_5_0());
                      			
                    }
                    // InternalLustre.g:6337:4: ( (lv_priorities_7_0= rulePriorityProtocol ) )
                    // InternalLustre.g:6338:5: (lv_priorities_7_0= rulePriorityProtocol )
                    {
                    // InternalLustre.g:6338:5: (lv_priorities_7_0= rulePriorityProtocol )
                    // InternalLustre.g:6339:6: lv_priorities_7_0= rulePriorityProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_34);
                    lv_priorities_7_0=rulePriorityProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"priorities",
                      							lv_priorities_7_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalLustre.g:6356:4: (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )*
                    loop151:
                    do {
                        int alt151=2;
                        int LA151_0 = input.LA(1);

                        if ( (LA151_0==19) ) {
                            alt151=1;
                        }


                        switch (alt151) {
                    	case 1 :
                    	    // InternalLustre.g:6357:5: otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) )
                    	    {
                    	    otherlv_8=(Token)match(input,19,FollowSets000.FOLLOW_103); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getScheduleDeclarationAccess().getCommaKeyword_5_2_0());
                    	      				
                    	    }
                    	    // InternalLustre.g:6361:5: ( (lv_priorities_9_0= rulePriorityProtocol ) )
                    	    // InternalLustre.g:6362:6: (lv_priorities_9_0= rulePriorityProtocol )
                    	    {
                    	    // InternalLustre.g:6362:6: (lv_priorities_9_0= rulePriorityProtocol )
                    	    // InternalLustre.g:6363:7: lv_priorities_9_0= rulePriorityProtocol
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_34);
                    	    lv_priorities_9_0=rulePriorityProtocol();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"priorities",
                    	      								lv_priorities_9_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop151;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,39,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getScheduleDeclarationAccess().getRightCurlyBracketKeyword_5_3());
                      			
                    }

                    }
                    break;

            }

            // InternalLustre.g:6386:3: ( (lv_valuedObjects_11_0= ruleValuedObject ) )
            // InternalLustre.g:6387:4: (lv_valuedObjects_11_0= ruleValuedObject )
            {
            // InternalLustre.g:6387:4: (lv_valuedObjects_11_0= ruleValuedObject )
            // InternalLustre.g:6388:5: lv_valuedObjects_11_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_6_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_7);
            lv_valuedObjects_11_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_11_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:6405:3: (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )*
            loop153:
            do {
                int alt153=2;
                int LA153_0 = input.LA(1);

                if ( (LA153_0==19) ) {
                    alt153=1;
                }


                switch (alt153) {
            	case 1 :
            	    // InternalLustre.g:6406:4: otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) )
            	    {
            	    otherlv_12=(Token)match(input,19,FollowSets000.FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_12, grammarAccess.getScheduleDeclarationAccess().getCommaKeyword_7_0());
            	      			
            	    }
            	    // InternalLustre.g:6410:4: ( (lv_valuedObjects_13_0= ruleValuedObject ) )
            	    // InternalLustre.g:6411:5: (lv_valuedObjects_13_0= ruleValuedObject )
            	    {
            	    // InternalLustre.g:6411:5: (lv_valuedObjects_13_0= ruleValuedObject )
            	    // InternalLustre.g:6412:6: lv_valuedObjects_13_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_7_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_7);
            	    lv_valuedObjects_13_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_13_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop153;
                }
            } while (true);

            otherlv_14=(Token)match(input,20,FollowSets000.FOLLOW_91); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_14, grammarAccess.getScheduleDeclarationAccess().getSemicolonKeyword_8());
              		
            }
            // InternalLustre.g:6434:3: ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( (LA154_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt154=1;
            }
            switch (alt154) {
                case 1 :
                    // InternalLustre.g:6435:4: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                    {
                    // InternalLustre.g:6435:4: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                    // InternalLustre.g:6436:5: lv_annotations_15_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_9_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_15_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_15_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScheduleDeclaration"


    // $ANTLR start "entryRuleScheduleDeclarationWOSemicolon"
    // InternalLustre.g:6457:1: entryRuleScheduleDeclarationWOSemicolon returns [EObject current=null] : iv_ruleScheduleDeclarationWOSemicolon= ruleScheduleDeclarationWOSemicolon EOF ;
    public final EObject entryRuleScheduleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScheduleDeclarationWOSemicolon = null;


        try {
            // InternalLustre.g:6457:71: (iv_ruleScheduleDeclarationWOSemicolon= ruleScheduleDeclarationWOSemicolon EOF )
            // InternalLustre.g:6458:2: iv_ruleScheduleDeclarationWOSemicolon= ruleScheduleDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScheduleDeclarationWOSemicolon=ruleScheduleDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScheduleDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScheduleDeclarationWOSemicolon"


    // $ANTLR start "ruleScheduleDeclarationWOSemicolon"
    // InternalLustre.g:6464:1: ruleScheduleDeclarationWOSemicolon returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleScheduleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token lv_private_1_0=null;
        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_global_5_0 = null;

        Enumerator lv_priorities_7_0 = null;

        Enumerator lv_priorities_9_0 = null;

        EObject lv_valuedObjects_11_0 = null;

        EObject lv_valuedObjects_13_0 = null;

        EObject lv_annotations_14_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:6470:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalLustre.g:6471:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalLustre.g:6471:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? )
            // InternalLustre.g:6472:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalLustre.g:6472:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop155:
            do {
                int alt155=2;
                int LA155_0 = input.LA(1);

                if ( (LA155_0==RULE_COMMENT_ANNOTATION||LA155_0==92) ) {
                    alt155=1;
                }


                switch (alt155) {
            	case 1 :
            	    // InternalLustre.g:6473:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalLustre.g:6473:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalLustre.g:6474:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_99);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop155;
                }
            } while (true);

            // InternalLustre.g:6491:3: ( (lv_private_1_0= 'private' ) )?
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( (LA156_0==65) ) {
                alt156=1;
            }
            switch (alt156) {
                case 1 :
                    // InternalLustre.g:6492:4: (lv_private_1_0= 'private' )
                    {
                    // InternalLustre.g:6492:4: (lv_private_1_0= 'private' )
                    // InternalLustre.g:6493:5: lv_private_1_0= 'private'
                    {
                    lv_private_1_0=(Token)match(input,65,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_private_1_0, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getPrivatePrivateKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "private", true, "private");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,72,FollowSets000.FOLLOW_101); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getScheduleKeyword_2());
              		
            }
            // InternalLustre.g:6509:3: ( (lv_name_3_0= RULE_STRING ) )?
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==RULE_STRING) ) {
                alt157=1;
            }
            switch (alt157) {
                case 1 :
                    // InternalLustre.g:6510:4: (lv_name_3_0= RULE_STRING )
                    {
                    // InternalLustre.g:6510:4: (lv_name_3_0= RULE_STRING )
                    // InternalLustre.g:6511:5: lv_name_3_0= RULE_STRING
                    {
                    lv_name_3_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_3_0, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getNameSTRINGTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_3_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalLustre.g:6527:3: (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )?
            int alt158=2;
            int LA158_0 = input.LA(1);

            if ( (LA158_0==68) ) {
                alt158=1;
            }
            switch (alt158) {
                case 1 :
                    // InternalLustre.g:6528:4: otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) )
                    {
                    otherlv_4=(Token)match(input,68,FollowSets000.FOLLOW_103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getGlobalKeyword_4_0());
                      			
                    }
                    // InternalLustre.g:6532:4: ( (lv_global_5_0= rulePriorityProtocol ) )
                    // InternalLustre.g:6533:5: (lv_global_5_0= rulePriorityProtocol )
                    {
                    // InternalLustre.g:6533:5: (lv_global_5_0= rulePriorityProtocol )
                    // InternalLustre.g:6534:6: lv_global_5_0= rulePriorityProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getGlobalPriorityProtocolEnumRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_104);
                    lv_global_5_0=rulePriorityProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      						}
                      						set(
                      							current,
                      							"global",
                      							lv_global_5_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalLustre.g:6552:3: (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )?
            int alt160=2;
            int LA160_0 = input.LA(1);

            if ( (LA160_0==38) ) {
                alt160=1;
            }
            switch (alt160) {
                case 1 :
                    // InternalLustre.g:6553:4: otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}'
                    {
                    otherlv_6=(Token)match(input,38,FollowSets000.FOLLOW_103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_5_0());
                      			
                    }
                    // InternalLustre.g:6557:4: ( (lv_priorities_7_0= rulePriorityProtocol ) )
                    // InternalLustre.g:6558:5: (lv_priorities_7_0= rulePriorityProtocol )
                    {
                    // InternalLustre.g:6558:5: (lv_priorities_7_0= rulePriorityProtocol )
                    // InternalLustre.g:6559:6: lv_priorities_7_0= rulePriorityProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_34);
                    lv_priorities_7_0=rulePriorityProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      						}
                      						add(
                      							current,
                      							"priorities",
                      							lv_priorities_7_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalLustre.g:6576:4: (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )*
                    loop159:
                    do {
                        int alt159=2;
                        int LA159_0 = input.LA(1);

                        if ( (LA159_0==19) ) {
                            alt159=1;
                        }


                        switch (alt159) {
                    	case 1 :
                    	    // InternalLustre.g:6577:5: otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) )
                    	    {
                    	    otherlv_8=(Token)match(input,19,FollowSets000.FOLLOW_103); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getCommaKeyword_5_2_0());
                    	      				
                    	    }
                    	    // InternalLustre.g:6581:5: ( (lv_priorities_9_0= rulePriorityProtocol ) )
                    	    // InternalLustre.g:6582:6: (lv_priorities_9_0= rulePriorityProtocol )
                    	    {
                    	    // InternalLustre.g:6582:6: (lv_priorities_9_0= rulePriorityProtocol )
                    	    // InternalLustre.g:6583:7: lv_priorities_9_0= rulePriorityProtocol
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_34);
                    	    lv_priorities_9_0=rulePriorityProtocol();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"priorities",
                    	      								lv_priorities_9_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop159;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,39,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_5_3());
                      			
                    }

                    }
                    break;

            }

            // InternalLustre.g:6606:3: ( (lv_valuedObjects_11_0= ruleValuedObject ) )
            // InternalLustre.g:6607:4: (lv_valuedObjects_11_0= ruleValuedObject )
            {
            // InternalLustre.g:6607:4: (lv_valuedObjects_11_0= ruleValuedObject )
            // InternalLustre.g:6608:5: lv_valuedObjects_11_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_6_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_83);
            lv_valuedObjects_11_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_11_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:6625:3: (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )*
            loop161:
            do {
                int alt161=2;
                int LA161_0 = input.LA(1);

                if ( (LA161_0==19) ) {
                    alt161=1;
                }


                switch (alt161) {
            	case 1 :
            	    // InternalLustre.g:6626:4: otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) )
            	    {
            	    otherlv_12=(Token)match(input,19,FollowSets000.FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_12, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getCommaKeyword_7_0());
            	      			
            	    }
            	    // InternalLustre.g:6630:4: ( (lv_valuedObjects_13_0= ruleValuedObject ) )
            	    // InternalLustre.g:6631:5: (lv_valuedObjects_13_0= ruleValuedObject )
            	    {
            	    // InternalLustre.g:6631:5: (lv_valuedObjects_13_0= ruleValuedObject )
            	    // InternalLustre.g:6632:6: lv_valuedObjects_13_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_7_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_83);
            	    lv_valuedObjects_13_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_13_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop161;
                }
            } while (true);

            // InternalLustre.g:6650:3: ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )?
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( (LA162_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt162=1;
            }
            switch (alt162) {
                case 1 :
                    // InternalLustre.g:6651:4: (lv_annotations_14_0= ruleCommentAnnotatonSL )
                    {
                    // InternalLustre.g:6651:4: (lv_annotations_14_0= ruleCommentAnnotatonSL )
                    // InternalLustre.g:6652:5: lv_annotations_14_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_14_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_14_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScheduleDeclarationWOSemicolon"


    // $ANTLR start "entryRuleValuedObject"
    // InternalLustre.g:6673:1: entryRuleValuedObject returns [EObject current=null] : iv_ruleValuedObject= ruleValuedObject EOF ;
    public final EObject entryRuleValuedObject() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObject = null;


        try {
            // InternalLustre.g:6673:53: (iv_ruleValuedObject= ruleValuedObject EOF )
            // InternalLustre.g:6674:2: iv_ruleValuedObject= ruleValuedObject EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObject=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObject; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObject"


    // $ANTLR start "ruleValuedObject"
    // InternalLustre.g:6680:1: ruleValuedObject returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? ) ;
    public final EObject ruleValuedObject() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_cardinalities_3_0 = null;

        EObject lv_initialValue_6_0 = null;

        Enumerator lv_combineOperator_8_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:6686:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? ) )
            // InternalLustre.g:6687:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? )
            {
            // InternalLustre.g:6687:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? )
            // InternalLustre.g:6688:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )?
            {
            // InternalLustre.g:6688:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop163:
            do {
                int alt163=2;
                int LA163_0 = input.LA(1);

                if ( (LA163_0==RULE_COMMENT_ANNOTATION||LA163_0==92) ) {
                    alt163=1;
                }


                switch (alt163) {
            	case 1 :
            	    // InternalLustre.g:6689:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalLustre.g:6689:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalLustre.g:6690:5: lv_annotations_0_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getValuedObjectAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_27);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getValuedObjectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.QuotedStringAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop163;
                }
            } while (true);

            // InternalLustre.g:6707:3: ( (lv_name_1_0= rulePrimeID ) )
            // InternalLustre.g:6708:4: (lv_name_1_0= rulePrimeID )
            {
            // InternalLustre.g:6708:4: (lv_name_1_0= rulePrimeID )
            // InternalLustre.g:6709:5: lv_name_1_0= rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedObjectAccess().getNamePrimeIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_105);
            lv_name_1_0=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValuedObjectRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:6726:3: (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )*
            loop164:
            do {
                int alt164=2;
                int LA164_0 = input.LA(1);

                if ( (LA164_0==73) ) {
                    alt164=1;
                }


                switch (alt164) {
            	case 1 :
            	    // InternalLustre.g:6727:4: otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']'
            	    {
            	    otherlv_2=(Token)match(input,73,FollowSets000.FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getValuedObjectAccess().getLeftSquareBracketKeyword_2_0());
            	      			
            	    }
            	    // InternalLustre.g:6731:4: ( (lv_cardinalities_3_0= ruleExpression ) )
            	    // InternalLustre.g:6732:5: (lv_cardinalities_3_0= ruleExpression )
            	    {
            	    // InternalLustre.g:6732:5: (lv_cardinalities_3_0= ruleExpression )
            	    // InternalLustre.g:6733:6: lv_cardinalities_3_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getValuedObjectAccess().getCardinalitiesExpressionParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_106);
            	    lv_cardinalities_3_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getValuedObjectRule());
            	      						}
            	      						add(
            	      							current,
            	      							"cardinalities",
            	      							lv_cardinalities_3_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,74,FollowSets000.FOLLOW_105); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getValuedObjectAccess().getRightSquareBracketKeyword_2_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop164;
                }
            } while (true);

            // InternalLustre.g:6755:3: (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )?
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( (LA165_0==27) ) {
                alt165=1;
            }
            switch (alt165) {
                case 1 :
                    // InternalLustre.g:6756:4: otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) )
                    {
                    otherlv_5=(Token)match(input,27,FollowSets000.FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getValuedObjectAccess().getEqualsSignKeyword_3_0());
                      			
                    }
                    // InternalLustre.g:6760:4: ( (lv_initialValue_6_0= ruleExpression ) )
                    // InternalLustre.g:6761:5: (lv_initialValue_6_0= ruleExpression )
                    {
                    // InternalLustre.g:6761:5: (lv_initialValue_6_0= ruleExpression )
                    // InternalLustre.g:6762:6: lv_initialValue_6_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectAccess().getInitialValueExpressionParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_107);
                    lv_initialValue_6_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectRule());
                      						}
                      						set(
                      							current,
                      							"initialValue",
                      							lv_initialValue_6_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalLustre.g:6780:3: (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )?
            int alt166=2;
            int LA166_0 = input.LA(1);

            if ( (LA166_0==75) ) {
                alt166=1;
            }
            switch (alt166) {
                case 1 :
                    // InternalLustre.g:6781:4: otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) )
                    {
                    otherlv_7=(Token)match(input,75,FollowSets000.FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getValuedObjectAccess().getCombineKeyword_4_0());
                      			
                    }
                    // InternalLustre.g:6785:4: ( (lv_combineOperator_8_0= ruleCombineOperator ) )
                    // InternalLustre.g:6786:5: (lv_combineOperator_8_0= ruleCombineOperator )
                    {
                    // InternalLustre.g:6786:5: (lv_combineOperator_8_0= ruleCombineOperator )
                    // InternalLustre.g:6787:6: lv_combineOperator_8_0= ruleCombineOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectAccess().getCombineOperatorCombineOperatorEnumRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_combineOperator_8_0=ruleCombineOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectRule());
                      						}
                      						set(
                      							current,
                      							"combineOperator",
                      							lv_combineOperator_8_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.CombineOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObject"


    // $ANTLR start "entryRuleEffect"
    // InternalLustre.g:6809:1: entryRuleEffect returns [EObject current=null] : iv_ruleEffect= ruleEffect EOF ;
    public final EObject entryRuleEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEffect = null;


        try {
            // InternalLustre.g:6809:47: (iv_ruleEffect= ruleEffect EOF )
            // InternalLustre.g:6810:2: iv_ruleEffect= ruleEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEffect=ruleEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEffect"


    // $ANTLR start "ruleEffect"
    // InternalLustre.g:6816:1: ruleEffect returns [EObject current=null] : (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_Emission_2= ruleEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect ) ;
    public final EObject ruleEffect() throws RecognitionException {
        EObject current = null;

        EObject this_Assignment_0 = null;

        EObject this_PostfixEffect_1 = null;

        EObject this_Emission_2 = null;

        EObject this_HostcodeEffect_3 = null;

        EObject this_ReferenceCallEffect_4 = null;

        EObject this_FunctionCallEffect_5 = null;

        EObject this_PrintCallEffect_6 = null;

        EObject this_RandomizeCallEffect_7 = null;



        	enterRule();

        try {
            // InternalLustre.g:6822:2: ( (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_Emission_2= ruleEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect ) )
            // InternalLustre.g:6823:2: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_Emission_2= ruleEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect )
            {
            // InternalLustre.g:6823:2: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_Emission_2= ruleEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect )
            int alt167=8;
            alt167 = dfa167.predict(input);
            switch (alt167) {
                case 1 :
                    // InternalLustre.g:6824:3: this_Assignment_0= ruleAssignment
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getAssignmentParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Assignment_0=ruleAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Assignment_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalLustre.g:6836:3: this_PostfixEffect_1= rulePostfixEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getPostfixEffectParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PostfixEffect_1=rulePostfixEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PostfixEffect_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalLustre.g:6848:3: this_Emission_2= ruleEmission
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getEmissionParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Emission_2=ruleEmission();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Emission_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalLustre.g:6860:3: this_HostcodeEffect_3= ruleHostcodeEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getHostcodeEffectParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_HostcodeEffect_3=ruleHostcodeEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_HostcodeEffect_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalLustre.g:6872:3: this_ReferenceCallEffect_4= ruleReferenceCallEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getReferenceCallEffectParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceCallEffect_4=ruleReferenceCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReferenceCallEffect_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalLustre.g:6884:3: this_FunctionCallEffect_5= ruleFunctionCallEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getFunctionCallEffectParserRuleCall_5());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FunctionCallEffect_5=ruleFunctionCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionCallEffect_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalLustre.g:6896:3: this_PrintCallEffect_6= rulePrintCallEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getPrintCallEffectParserRuleCall_6());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrintCallEffect_6=rulePrintCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrintCallEffect_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalLustre.g:6908:3: this_RandomizeCallEffect_7= ruleRandomizeCallEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getRandomizeCallEffectParserRuleCall_7());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RandomizeCallEffect_7=ruleRandomizeCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RandomizeCallEffect_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEffect"


    // $ANTLR start "entryRuleEmission"
    // InternalLustre.g:6923:1: entryRuleEmission returns [EObject current=null] : iv_ruleEmission= ruleEmission EOF ;
    public final EObject entryRuleEmission() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmission = null;


        try {
            // InternalLustre.g:6923:49: (iv_ruleEmission= ruleEmission EOF )
            // InternalLustre.g:6924:2: iv_ruleEmission= ruleEmission EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmissionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEmission=ruleEmission();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmission; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmission"


    // $ANTLR start "ruleEmission"
    // InternalLustre.g:6930:1: ruleEmission returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' )? (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject ruleEmission() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        EObject lv_newValue_3_0 = null;

        EObject lv_schedule_6_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:6936:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' )? (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalLustre.g:6937:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' )? (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalLustre.g:6937:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' )? (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? )
            // InternalLustre.g:6938:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' )? (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalLustre.g:6938:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop168:
            do {
                int alt168=2;
                int LA168_0 = input.LA(1);

                if ( (LA168_0==RULE_COMMENT_ANNOTATION||LA168_0==92) ) {
                    alt168=1;
                }


                switch (alt168) {
            	case 1 :
            	    // InternalLustre.g:6939:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalLustre.g:6939:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalLustre.g:6940:5: lv_annotations_0_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEmissionAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_27);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEmissionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.QuotedStringAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop168;
                }
            } while (true);

            // InternalLustre.g:6957:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalLustre.g:6958:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalLustre.g:6958:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalLustre.g:6959:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEmissionAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_109);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEmissionRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:6976:3: (otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' )?
            int alt169=2;
            int LA169_0 = input.LA(1);

            if ( (LA169_0==36) ) {
                alt169=1;
            }
            switch (alt169) {
                case 1 :
                    // InternalLustre.g:6977:4: otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,36,FollowSets000.FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getEmissionAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalLustre.g:6981:4: ( (lv_newValue_3_0= ruleExpression ) )
                    // InternalLustre.g:6982:5: (lv_newValue_3_0= ruleExpression )
                    {
                    // InternalLustre.g:6982:5: (lv_newValue_3_0= ruleExpression )
                    // InternalLustre.g:6983:6: lv_newValue_3_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEmissionAccess().getNewValueExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_110);
                    lv_newValue_3_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEmissionRule());
                      						}
                      						set(
                      							current,
                      							"newValue",
                      							lv_newValue_3_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,37,FollowSets000.FOLLOW_111); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getEmissionAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }
                    break;

            }

            // InternalLustre.g:7005:3: (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )?
            int alt171=2;
            int LA171_0 = input.LA(1);

            if ( (LA171_0==72) ) {
                alt171=1;
            }
            switch (alt171) {
                case 1 :
                    // InternalLustre.g:7006:4: otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_5=(Token)match(input,72,FollowSets000.FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getEmissionAccess().getScheduleKeyword_3_0());
                      			
                    }
                    // InternalLustre.g:7010:4: ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+
                    int cnt170=0;
                    loop170:
                    do {
                        int alt170=2;
                        alt170 = dfa170.predict(input);
                        switch (alt170) {
                    	case 1 :
                    	    // InternalLustre.g:7011:5: (lv_schedule_6_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalLustre.g:7011:5: (lv_schedule_6_0= ruleScheduleObjectReference )
                    	    // InternalLustre.g:7012:6: lv_schedule_6_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getEmissionAccess().getScheduleScheduleObjectReferenceParserRuleCall_3_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_112);
                    	    lv_schedule_6_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getEmissionRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_6_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt170 >= 1 ) break loop170;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(170, input);
                                throw eee;
                        }
                        cnt170++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmission"


    // $ANTLR start "entryRuleAssignment"
    // InternalLustre.g:7034:1: entryRuleAssignment returns [EObject current=null] : iv_ruleAssignment= ruleAssignment EOF ;
    public final EObject entryRuleAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssignment = null;


        try {
            // InternalLustre.g:7034:51: (iv_ruleAssignment= ruleAssignment EOF )
            // InternalLustre.g:7035:2: iv_ruleAssignment= ruleAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignmentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAssignment=ruleAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssignment; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssignment"


    // $ANTLR start "ruleAssignment"
    // InternalLustre.g:7041:1: ruleAssignment returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject ruleAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_expression_3_0 = null;

        EObject lv_schedule_5_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:7047:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalLustre.g:7048:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalLustre.g:7048:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? )
            // InternalLustre.g:7049:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalLustre.g:7049:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop172:
            do {
                int alt172=2;
                int LA172_0 = input.LA(1);

                if ( (LA172_0==RULE_COMMENT_ANNOTATION||LA172_0==92) ) {
                    alt172=1;
                }


                switch (alt172) {
            	case 1 :
            	    // InternalLustre.g:7050:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalLustre.g:7050:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalLustre.g:7051:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_27);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAssignmentRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop172;
                }
            } while (true);

            // InternalLustre.g:7068:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalLustre.g:7069:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalLustre.g:7069:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalLustre.g:7070:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_47);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:7087:3: ( (lv_operator_2_0= ruleAssignOperator ) )
            // InternalLustre.g:7088:4: (lv_operator_2_0= ruleAssignOperator )
            {
            // InternalLustre.g:7088:4: (lv_operator_2_0= ruleAssignOperator )
            // InternalLustre.g:7089:5: lv_operator_2_0= ruleAssignOperator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_18);
            lv_operator_2_0=ruleAssignOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"operator",
              						lv_operator_2_0,
              						"de.cau.cs.kieler.lustre.Lustre.AssignOperator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:7106:3: ( (lv_expression_3_0= ruleExpression ) )
            // InternalLustre.g:7107:4: (lv_expression_3_0= ruleExpression )
            {
            // InternalLustre.g:7107:4: (lv_expression_3_0= ruleExpression )
            // InternalLustre.g:7108:5: lv_expression_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_111);
            lv_expression_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_3_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:7125:3: (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )?
            int alt174=2;
            int LA174_0 = input.LA(1);

            if ( (LA174_0==72) ) {
                alt174=1;
            }
            switch (alt174) {
                case 1 :
                    // InternalLustre.g:7126:4: otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_4=(Token)match(input,72,FollowSets000.FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getAssignmentAccess().getScheduleKeyword_4_0());
                      			
                    }
                    // InternalLustre.g:7130:4: ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+
                    int cnt173=0;
                    loop173:
                    do {
                        int alt173=2;
                        alt173 = dfa173.predict(input);
                        switch (alt173) {
                    	case 1 :
                    	    // InternalLustre.g:7131:5: (lv_schedule_5_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalLustre.g:7131:5: (lv_schedule_5_0= ruleScheduleObjectReference )
                    	    // InternalLustre.g:7132:6: lv_schedule_5_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getAssignmentAccess().getScheduleScheduleObjectReferenceParserRuleCall_4_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_112);
                    	    lv_schedule_5_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getAssignmentRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_5_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt173 >= 1 ) break loop173;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(173, input);
                                throw eee;
                        }
                        cnt173++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssignment"


    // $ANTLR start "entryRulePostfixEffect"
    // InternalLustre.g:7154:1: entryRulePostfixEffect returns [EObject current=null] : iv_rulePostfixEffect= rulePostfixEffect EOF ;
    public final EObject entryRulePostfixEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePostfixEffect = null;


        try {
            // InternalLustre.g:7154:54: (iv_rulePostfixEffect= rulePostfixEffect EOF )
            // InternalLustre.g:7155:2: iv_rulePostfixEffect= rulePostfixEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPostfixEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePostfixEffect=rulePostfixEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePostfixEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePostfixEffect"


    // $ANTLR start "rulePostfixEffect"
    // InternalLustre.g:7161:1: rulePostfixEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject rulePostfixEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_schedule_4_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:7167:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalLustre.g:7168:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalLustre.g:7168:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? )
            // InternalLustre.g:7169:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalLustre.g:7169:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop175:
            do {
                int alt175=2;
                int LA175_0 = input.LA(1);

                if ( (LA175_0==RULE_COMMENT_ANNOTATION||LA175_0==92) ) {
                    alt175=1;
                }


                switch (alt175) {
            	case 1 :
            	    // InternalLustre.g:7170:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalLustre.g:7170:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalLustre.g:7171:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPostfixEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_27);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop175;
                }
            } while (true);

            // InternalLustre.g:7188:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalLustre.g:7189:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalLustre.g:7189:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalLustre.g:7190:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPostfixEffectAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_113);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:7207:3: ( (lv_operator_2_0= rulePostfixOperator ) )
            // InternalLustre.g:7208:4: (lv_operator_2_0= rulePostfixOperator )
            {
            // InternalLustre.g:7208:4: (lv_operator_2_0= rulePostfixOperator )
            // InternalLustre.g:7209:5: lv_operator_2_0= rulePostfixOperator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPostfixEffectAccess().getOperatorPostfixOperatorEnumRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_111);
            lv_operator_2_0=rulePostfixOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
              					}
              					set(
              						current,
              						"operator",
              						lv_operator_2_0,
              						"de.cau.cs.kieler.kexpressions.keffects.KEffects.PostfixOperator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:7226:3: (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )?
            int alt177=2;
            int LA177_0 = input.LA(1);

            if ( (LA177_0==72) ) {
                alt177=1;
            }
            switch (alt177) {
                case 1 :
                    // InternalLustre.g:7227:4: otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_3=(Token)match(input,72,FollowSets000.FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getPostfixEffectAccess().getScheduleKeyword_3_0());
                      			
                    }
                    // InternalLustre.g:7231:4: ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+
                    int cnt176=0;
                    loop176:
                    do {
                        int alt176=2;
                        alt176 = dfa176.predict(input);
                        switch (alt176) {
                    	case 1 :
                    	    // InternalLustre.g:7232:5: (lv_schedule_4_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalLustre.g:7232:5: (lv_schedule_4_0= ruleScheduleObjectReference )
                    	    // InternalLustre.g:7233:6: lv_schedule_4_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getPostfixEffectAccess().getScheduleScheduleObjectReferenceParserRuleCall_3_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_112);
                    	    lv_schedule_4_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_4_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt176 >= 1 ) break loop176;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(176, input);
                                throw eee;
                        }
                        cnt176++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePostfixEffect"


    // $ANTLR start "entryRuleHostcodeEffect"
    // InternalLustre.g:7255:1: entryRuleHostcodeEffect returns [EObject current=null] : iv_ruleHostcodeEffect= ruleHostcodeEffect EOF ;
    public final EObject entryRuleHostcodeEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHostcodeEffect = null;


        try {
            // InternalLustre.g:7255:55: (iv_ruleHostcodeEffect= ruleHostcodeEffect EOF )
            // InternalLustre.g:7256:2: iv_ruleHostcodeEffect= ruleHostcodeEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHostcodeEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleHostcodeEffect=ruleHostcodeEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHostcodeEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHostcodeEffect"


    // $ANTLR start "ruleHostcodeEffect"
    // InternalLustre.g:7262:1: ruleHostcodeEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) ;
    public final EObject ruleHostcodeEffect() throws RecognitionException {
        EObject current = null;

        Token lv_text_1_0=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:7268:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) )
            // InternalLustre.g:7269:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            {
            // InternalLustre.g:7269:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            // InternalLustre.g:7270:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) )
            {
            // InternalLustre.g:7270:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop178:
            do {
                int alt178=2;
                int LA178_0 = input.LA(1);

                if ( (LA178_0==RULE_COMMENT_ANNOTATION||LA178_0==92) ) {
                    alt178=1;
                }


                switch (alt178) {
            	case 1 :
            	    // InternalLustre.g:7271:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalLustre.g:7271:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalLustre.g:7272:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getHostcodeEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_114);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getHostcodeEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop178;
                }
            } while (true);

            // InternalLustre.g:7289:3: ( (lv_text_1_0= RULE_HOSTCODE ) )
            // InternalLustre.g:7290:4: (lv_text_1_0= RULE_HOSTCODE )
            {
            // InternalLustre.g:7290:4: (lv_text_1_0= RULE_HOSTCODE )
            // InternalLustre.g:7291:5: lv_text_1_0= RULE_HOSTCODE
            {
            lv_text_1_0=(Token)match(input,RULE_HOSTCODE,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_text_1_0, grammarAccess.getHostcodeEffectAccess().getTextHOSTCODETerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getHostcodeEffectRule());
              					}
              					setWithLastConsumed(
              						current,
              						"text",
              						lv_text_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.HOSTCODE");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHostcodeEffect"


    // $ANTLR start "entryRuleReferenceCallEffect"
    // InternalLustre.g:7311:1: entryRuleReferenceCallEffect returns [EObject current=null] : iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF ;
    public final EObject entryRuleReferenceCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceCallEffect = null;


        try {
            // InternalLustre.g:7311:60: (iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF )
            // InternalLustre.g:7312:2: iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceCallEffect=ruleReferenceCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceCallEffect"


    // $ANTLR start "ruleReferenceCallEffect"
    // InternalLustre.g:7318:1: ruleReferenceCallEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'call' ( ( rulePrimeID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ;
    public final EObject ruleReferenceCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parameters_4_0 = null;

        EObject lv_parameters_6_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:7324:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'call' ( ( rulePrimeID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
            // InternalLustre.g:7325:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'call' ( ( rulePrimeID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            {
            // InternalLustre.g:7325:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'call' ( ( rulePrimeID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            // InternalLustre.g:7326:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'call' ( ( rulePrimeID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            {
            // InternalLustre.g:7326:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop179:
            do {
                int alt179=2;
                int LA179_0 = input.LA(1);

                if ( (LA179_0==RULE_COMMENT_ANNOTATION||LA179_0==92) ) {
                    alt179=1;
                }


                switch (alt179) {
            	case 1 :
            	    // InternalLustre.g:7327:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalLustre.g:7327:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalLustre.g:7328:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_115);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop179;
                }
            } while (true);

            otherlv_1=(Token)match(input,76,FollowSets000.FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getReferenceCallEffectAccess().getCallKeyword_1());
              		
            }
            // InternalLustre.g:7349:3: ( ( rulePrimeID ) )
            // InternalLustre.g:7350:4: ( rulePrimeID )
            {
            // InternalLustre.g:7350:4: ( rulePrimeID )
            // InternalLustre.g:7351:5: rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getReferenceCallEffectRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getValuedObjectValuedObjectCrossReference_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_116);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:7368:3: ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            int alt181=2;
            int LA181_0 = input.LA(1);

            if ( (LA181_0==36) ) {
                alt181=1;
            }
            else if ( (LA181_0==57) ) {
                alt181=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 181, 0, input);

                throw nvae;
            }
            switch (alt181) {
                case 1 :
                    // InternalLustre.g:7369:4: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    {
                    // InternalLustre.g:7369:4: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    // InternalLustre.g:7370:5: otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')'
                    {
                    otherlv_3=(Token)match(input,36,FollowSets000.FOLLOW_117); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getReferenceCallEffectAccess().getLeftParenthesisKeyword_3_0_0());
                      				
                    }
                    // InternalLustre.g:7374:5: ( (lv_parameters_4_0= ruleParameter ) )
                    // InternalLustre.g:7375:6: (lv_parameters_4_0= ruleParameter )
                    {
                    // InternalLustre.g:7375:6: (lv_parameters_4_0= ruleParameter )
                    // InternalLustre.g:7376:7: lv_parameters_4_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getParametersParameterParserRuleCall_3_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_118);
                    lv_parameters_4_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_4_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalLustre.g:7393:5: (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )*
                    loop180:
                    do {
                        int alt180=2;
                        int LA180_0 = input.LA(1);

                        if ( (LA180_0==19) ) {
                            alt180=1;
                        }


                        switch (alt180) {
                    	case 1 :
                    	    // InternalLustre.g:7394:6: otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) )
                    	    {
                    	    otherlv_5=(Token)match(input,19,FollowSets000.FOLLOW_117); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_5, grammarAccess.getReferenceCallEffectAccess().getCommaKeyword_3_0_2_0());
                    	      					
                    	    }
                    	    // InternalLustre.g:7398:6: ( (lv_parameters_6_0= ruleParameter ) )
                    	    // InternalLustre.g:7399:7: (lv_parameters_6_0= ruleParameter )
                    	    {
                    	    // InternalLustre.g:7399:7: (lv_parameters_6_0= ruleParameter )
                    	    // InternalLustre.g:7400:8: lv_parameters_6_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getParametersParameterParserRuleCall_3_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_118);
                    	    lv_parameters_6_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_6_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop180;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getReferenceCallEffectAccess().getRightParenthesisKeyword_3_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:7424:4: otherlv_8= '()'
                    {
                    otherlv_8=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getReferenceCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceCallEffect"


    // $ANTLR start "entryRuleFunctionCallEffect"
    // InternalLustre.g:7433:1: entryRuleFunctionCallEffect returns [EObject current=null] : iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF ;
    public final EObject entryRuleFunctionCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionCallEffect = null;


        try {
            // InternalLustre.g:7433:59: (iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF )
            // InternalLustre.g:7434:2: iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunctionCallEffect=ruleFunctionCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionCallEffect"


    // $ANTLR start "ruleFunctionCallEffect"
    // InternalLustre.g:7440:1: ruleFunctionCallEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ) ;
    public final EObject ruleFunctionCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_functionName_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parameters_4_0 = null;

        EObject lv_parameters_6_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:7446:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ) )
            // InternalLustre.g:7447:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
            {
            // InternalLustre.g:7447:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
            // InternalLustre.g:7448:3: ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            {
            // InternalLustre.g:7448:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop182:
            do {
                int alt182=2;
                int LA182_0 = input.LA(1);

                if ( (LA182_0==RULE_COMMENT_ANNOTATION||LA182_0==92) ) {
                    alt182=1;
                }


                switch (alt182) {
            	case 1 :
            	    // InternalLustre.g:7449:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalLustre.g:7449:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalLustre.g:7450:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_119);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop182;
                }
            } while (true);

            // InternalLustre.g:7467:3: (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            // InternalLustre.g:7468:4: otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            {
            otherlv_1=(Token)match(input,40,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_1, grammarAccess.getFunctionCallEffectAccess().getExternKeyword_1_0());
              			
            }
            // InternalLustre.g:7472:4: ( (lv_functionName_2_0= RULE_ID ) )
            // InternalLustre.g:7473:5: (lv_functionName_2_0= RULE_ID )
            {
            // InternalLustre.g:7473:5: (lv_functionName_2_0= RULE_ID )
            // InternalLustre.g:7474:6: lv_functionName_2_0= RULE_ID
            {
            lv_functionName_2_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_116); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						newLeafNode(lv_functionName_2_0, grammarAccess.getFunctionCallEffectAccess().getFunctionNameIDTerminalRuleCall_1_1_0());
              					
            }
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElement(grammarAccess.getFunctionCallEffectRule());
              						}
              						setWithLastConsumed(
              							current,
              							"functionName",
              							lv_functionName_2_0,
              							"de.cau.cs.kieler.annotations.Annotations.ID");
              					
            }

            }


            }

            // InternalLustre.g:7490:4: ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            int alt184=2;
            int LA184_0 = input.LA(1);

            if ( (LA184_0==36) ) {
                alt184=1;
            }
            else if ( (LA184_0==57) ) {
                alt184=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 184, 0, input);

                throw nvae;
            }
            switch (alt184) {
                case 1 :
                    // InternalLustre.g:7491:5: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    {
                    // InternalLustre.g:7491:5: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    // InternalLustre.g:7492:6: otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')'
                    {
                    otherlv_3=(Token)match(input,36,FollowSets000.FOLLOW_117); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_3, grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisKeyword_1_2_0_0());
                      					
                    }
                    // InternalLustre.g:7496:6: ( (lv_parameters_4_0= ruleParameter ) )
                    // InternalLustre.g:7497:7: (lv_parameters_4_0= ruleParameter )
                    {
                    // InternalLustre.g:7497:7: (lv_parameters_4_0= ruleParameter )
                    // InternalLustre.g:7498:8: lv_parameters_4_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_1_2_0_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_118);
                    lv_parameters_4_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
                      								}
                      								add(
                      									current,
                      									"parameters",
                      									lv_parameters_4_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalLustre.g:7515:6: (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )*
                    loop183:
                    do {
                        int alt183=2;
                        int LA183_0 = input.LA(1);

                        if ( (LA183_0==19) ) {
                            alt183=1;
                        }


                        switch (alt183) {
                    	case 1 :
                    	    // InternalLustre.g:7516:7: otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) )
                    	    {
                    	    otherlv_5=(Token)match(input,19,FollowSets000.FOLLOW_117); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_5, grammarAccess.getFunctionCallEffectAccess().getCommaKeyword_1_2_0_2_0());
                    	      						
                    	    }
                    	    // InternalLustre.g:7520:7: ( (lv_parameters_6_0= ruleParameter ) )
                    	    // InternalLustre.g:7521:8: (lv_parameters_6_0= ruleParameter )
                    	    {
                    	    // InternalLustre.g:7521:8: (lv_parameters_6_0= ruleParameter )
                    	    // InternalLustre.g:7522:9: lv_parameters_6_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      									newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_1_2_0_2_1_0());
                    	      								
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_118);
                    	    lv_parameters_6_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									if (current==null) {
                    	      										current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
                    	      									}
                    	      									add(
                    	      										current,
                    	      										"parameters",
                    	      										lv_parameters_6_0,
                    	      										"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      									afterParserOrEnumRuleCall();
                    	      								
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop183;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_7, grammarAccess.getFunctionCallEffectAccess().getRightParenthesisKeyword_1_2_0_3());
                      					
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:7546:5: otherlv_8= '()'
                    {
                    otherlv_8=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_1_2_1());
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionCallEffect"


    // $ANTLR start "entryRulePrintCallEffect"
    // InternalLustre.g:7556:1: entryRulePrintCallEffect returns [EObject current=null] : iv_rulePrintCallEffect= rulePrintCallEffect EOF ;
    public final EObject entryRulePrintCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrintCallEffect = null;


        try {
            // InternalLustre.g:7556:56: (iv_rulePrintCallEffect= rulePrintCallEffect EOF )
            // InternalLustre.g:7557:2: iv_rulePrintCallEffect= rulePrintCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrintCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrintCallEffect=rulePrintCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrintCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrintCallEffect"


    // $ANTLR start "rulePrintCallEffect"
    // InternalLustre.g:7563:1: rulePrintCallEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) ) ;
    public final EObject rulePrintCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:7569:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) ) )
            // InternalLustre.g:7570:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) )
            {
            // InternalLustre.g:7570:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) )
            // InternalLustre.g:7571:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
            {
            // InternalLustre.g:7571:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop185:
            do {
                int alt185=2;
                int LA185_0 = input.LA(1);

                if ( (LA185_0==RULE_COMMENT_ANNOTATION||LA185_0==92) ) {
                    alt185=1;
                }


                switch (alt185) {
            	case 1 :
            	    // InternalLustre.g:7572:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalLustre.g:7572:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalLustre.g:7573:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPrintCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_120);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop185;
                }
            } while (true);

            otherlv_1=(Token)match(input,77,FollowSets000.FOLLOW_24); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getPrintCallEffectAccess().getPrintKeyword_1());
              		
            }
            // InternalLustre.g:7594:3: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
            // InternalLustre.g:7595:4: otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')'
            {
            otherlv_2=(Token)match(input,36,FollowSets000.FOLLOW_117); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_2, grammarAccess.getPrintCallEffectAccess().getLeftParenthesisKeyword_2_0());
              			
            }
            // InternalLustre.g:7599:4: ( (lv_parameters_3_0= ruleParameter ) )
            // InternalLustre.g:7600:5: (lv_parameters_3_0= ruleParameter )
            {
            // InternalLustre.g:7600:5: (lv_parameters_3_0= ruleParameter )
            // InternalLustre.g:7601:6: lv_parameters_3_0= ruleParameter
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getPrintCallEffectAccess().getParametersParameterParserRuleCall_2_1_0());
              					
            }
            pushFollow(FollowSets000.FOLLOW_118);
            lv_parameters_3_0=ruleParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
              						}
              						add(
              							current,
              							"parameters",
              							lv_parameters_3_0,
              							"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }

            // InternalLustre.g:7618:4: (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )*
            loop186:
            do {
                int alt186=2;
                int LA186_0 = input.LA(1);

                if ( (LA186_0==19) ) {
                    alt186=1;
                }


                switch (alt186) {
            	case 1 :
            	    // InternalLustre.g:7619:5: otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) )
            	    {
            	    otherlv_4=(Token)match(input,19,FollowSets000.FOLLOW_117); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_4, grammarAccess.getPrintCallEffectAccess().getCommaKeyword_2_2_0());
            	      				
            	    }
            	    // InternalLustre.g:7623:5: ( (lv_parameters_5_0= ruleParameter ) )
            	    // InternalLustre.g:7624:6: (lv_parameters_5_0= ruleParameter )
            	    {
            	    // InternalLustre.g:7624:6: (lv_parameters_5_0= ruleParameter )
            	    // InternalLustre.g:7625:7: lv_parameters_5_0= ruleParameter
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getPrintCallEffectAccess().getParametersParameterParserRuleCall_2_2_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_118);
            	    lv_parameters_5_0=ruleParameter();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
            	      							}
            	      							add(
            	      								current,
            	      								"parameters",
            	      								lv_parameters_5_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop186;
                }
            } while (true);

            otherlv_6=(Token)match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_6, grammarAccess.getPrintCallEffectAccess().getRightParenthesisKeyword_2_3());
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrintCallEffect"


    // $ANTLR start "entryRuleRandomizeCallEffect"
    // InternalLustre.g:7652:1: entryRuleRandomizeCallEffect returns [EObject current=null] : iv_ruleRandomizeCallEffect= ruleRandomizeCallEffect EOF ;
    public final EObject entryRuleRandomizeCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRandomizeCallEffect = null;


        try {
            // InternalLustre.g:7652:60: (iv_ruleRandomizeCallEffect= ruleRandomizeCallEffect EOF )
            // InternalLustre.g:7653:2: iv_ruleRandomizeCallEffect= ruleRandomizeCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRandomizeCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRandomizeCallEffect=ruleRandomizeCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRandomizeCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRandomizeCallEffect"


    // $ANTLR start "ruleRandomizeCallEffect"
    // InternalLustre.g:7659:1: ruleRandomizeCallEffect returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ;
    public final EObject ruleRandomizeCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_parameters_4_0 = null;

        EObject lv_parameters_6_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:7665:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
            // InternalLustre.g:7666:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            {
            // InternalLustre.g:7666:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            // InternalLustre.g:7667:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            {
            // InternalLustre.g:7667:3: ()
            // InternalLustre.g:7668:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRandomizeCallEffectAccess().getRandomizeCallEffectAction_0(),
              					current);
              			
            }

            }

            // InternalLustre.g:7677:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop187:
            do {
                int alt187=2;
                int LA187_0 = input.LA(1);

                if ( (LA187_0==RULE_COMMENT_ANNOTATION||LA187_0==92) ) {
                    alt187=1;
                }


                switch (alt187) {
            	case 1 :
            	    // InternalLustre.g:7678:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalLustre.g:7678:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalLustre.g:7679:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRandomizeCallEffectAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_121);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRandomizeCallEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop187;
                }
            } while (true);

            otherlv_2=(Token)match(input,78,FollowSets000.FOLLOW_116); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getRandomizeCallEffectAccess().getRandomizeKeyword_2());
              		
            }
            // InternalLustre.g:7700:3: ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            int alt189=2;
            int LA189_0 = input.LA(1);

            if ( (LA189_0==36) ) {
                alt189=1;
            }
            else if ( (LA189_0==57) ) {
                alt189=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 189, 0, input);

                throw nvae;
            }
            switch (alt189) {
                case 1 :
                    // InternalLustre.g:7701:4: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    {
                    // InternalLustre.g:7701:4: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    // InternalLustre.g:7702:5: otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')'
                    {
                    otherlv_3=(Token)match(input,36,FollowSets000.FOLLOW_117); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getRandomizeCallEffectAccess().getLeftParenthesisKeyword_3_0_0());
                      				
                    }
                    // InternalLustre.g:7706:5: ( (lv_parameters_4_0= ruleParameter ) )
                    // InternalLustre.g:7707:6: (lv_parameters_4_0= ruleParameter )
                    {
                    // InternalLustre.g:7707:6: (lv_parameters_4_0= ruleParameter )
                    // InternalLustre.g:7708:7: lv_parameters_4_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRandomizeCallEffectAccess().getParametersParameterParserRuleCall_3_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_118);
                    lv_parameters_4_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRandomizeCallEffectRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_4_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalLustre.g:7725:5: (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )*
                    loop188:
                    do {
                        int alt188=2;
                        int LA188_0 = input.LA(1);

                        if ( (LA188_0==19) ) {
                            alt188=1;
                        }


                        switch (alt188) {
                    	case 1 :
                    	    // InternalLustre.g:7726:6: otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) )
                    	    {
                    	    otherlv_5=(Token)match(input,19,FollowSets000.FOLLOW_117); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_5, grammarAccess.getRandomizeCallEffectAccess().getCommaKeyword_3_0_2_0());
                    	      					
                    	    }
                    	    // InternalLustre.g:7730:6: ( (lv_parameters_6_0= ruleParameter ) )
                    	    // InternalLustre.g:7731:7: (lv_parameters_6_0= ruleParameter )
                    	    {
                    	    // InternalLustre.g:7731:7: (lv_parameters_6_0= ruleParameter )
                    	    // InternalLustre.g:7732:8: lv_parameters_6_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getRandomizeCallEffectAccess().getParametersParameterParserRuleCall_3_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_118);
                    	    lv_parameters_6_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getRandomizeCallEffectRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_6_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop188;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getRandomizeCallEffectAccess().getRightParenthesisKeyword_3_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:7756:4: otherlv_8= '()'
                    {
                    otherlv_8=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getRandomizeCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRandomizeCallEffect"


    // $ANTLR start "entryRuleExpression"
    // InternalLustre.g:7765:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalLustre.g:7765:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalLustre.g:7766:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalLustre.g:7772:1: ruleExpression returns [EObject current=null] : (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression ) ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BoolExpression_0 = null;

        EObject this_ValuedExpression_1 = null;



        	enterRule();

        try {
            // InternalLustre.g:7778:2: ( (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression ) )
            // InternalLustre.g:7779:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression )
            {
            // InternalLustre.g:7779:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression )
            int alt190=2;
            alt190 = dfa190.predict(input);
            switch (alt190) {
                case 1 :
                    // InternalLustre.g:7780:3: this_BoolExpression_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionAccess().getBoolExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolExpression_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoolExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalLustre.g:7792:3: this_ValuedExpression_1= ruleValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionAccess().getValuedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedExpression_1=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleLogicalOrExpression"
    // InternalLustre.g:7807:1: entryRuleLogicalOrExpression returns [EObject current=null] : iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF ;
    public final EObject entryRuleLogicalOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalOrExpression = null;


        try {
            // InternalLustre.g:7807:60: (iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF )
            // InternalLustre.g:7808:2: iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLogicalOrExpression=ruleLogicalOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalOrExpression"


    // $ANTLR start "ruleLogicalOrExpression"
    // InternalLustre.g:7814:1: ruleLogicalOrExpression returns [EObject current=null] : (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? ) ;
    public final EObject ruleLogicalOrExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_LogicalAndExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:7820:2: ( (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? ) )
            // InternalLustre.g:7821:2: (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? )
            {
            // InternalLustre.g:7821:2: (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? )
            // InternalLustre.g:7822:3: this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_122);
            this_LogicalAndExpression_0=ruleLogicalAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LogicalAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalLustre.g:7833:3: ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )?
            int alt192=2;
            int LA192_0 = input.LA(1);

            if ( (LA192_0==103) ) {
                alt192=1;
            }
            switch (alt192) {
                case 1 :
                    // InternalLustre.g:7834:4: () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )*
                    {
                    // InternalLustre.g:7834:4: ()
                    // InternalLustre.g:7835:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getLogicalOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalLustre.g:7844:4: ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) )
                    // InternalLustre.g:7845:5: ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) )
                    {
                    // InternalLustre.g:7845:5: ( (lv_operator_2_0= ruleLogicalOrOperator ) )
                    // InternalLustre.g:7846:6: (lv_operator_2_0= ruleLogicalOrOperator )
                    {
                    // InternalLustre.g:7846:6: (lv_operator_2_0= ruleLogicalOrOperator )
                    // InternalLustre.g:7847:7: lv_operator_2_0= ruleLogicalOrOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getOperatorLogicalOrOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_18);
                    lv_operator_2_0=ruleLogicalOrOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.lustre.Lustre.LogicalOrOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalLustre.g:7864:5: ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) )
                    // InternalLustre.g:7865:6: (lv_subExpressions_3_0= ruleLogicalAndExpression )
                    {
                    // InternalLustre.g:7865:6: (lv_subExpressions_3_0= ruleLogicalAndExpression )
                    // InternalLustre.g:7866:7: lv_subExpressions_3_0= ruleLogicalAndExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_123);
                    lv_subExpressions_3_0=ruleLogicalAndExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.LogicalAndExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalLustre.g:7884:4: (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )*
                    loop191:
                    do {
                        int alt191=2;
                        int LA191_0 = input.LA(1);

                        if ( (LA191_0==79) ) {
                            alt191=1;
                        }


                        switch (alt191) {
                    	case 1 :
                    	    // InternalLustre.g:7885:5: otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,79,FollowSets000.FOLLOW_18); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getLogicalOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalLustre.g:7889:5: ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) )
                    	    // InternalLustre.g:7890:6: (lv_subExpressions_5_0= ruleLogicalAndExpression )
                    	    {
                    	    // InternalLustre.g:7890:6: (lv_subExpressions_5_0= ruleLogicalAndExpression )
                    	    // InternalLustre.g:7891:7: lv_subExpressions_5_0= ruleLogicalAndExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_123);
                    	    lv_subExpressions_5_0=ruleLogicalAndExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.LogicalAndExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop191;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalOrExpression"


    // $ANTLR start "entryRuleLogicalAndExpression"
    // InternalLustre.g:7914:1: entryRuleLogicalAndExpression returns [EObject current=null] : iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF ;
    public final EObject entryRuleLogicalAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalAndExpression = null;


        try {
            // InternalLustre.g:7914:61: (iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF )
            // InternalLustre.g:7915:2: iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalAndExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLogicalAndExpression=ruleLogicalAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalAndExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalAndExpression"


    // $ANTLR start "ruleLogicalAndExpression"
    // InternalLustre.g:7921:1: ruleLogicalAndExpression returns [EObject current=null] : (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? ) ;
    public final EObject ruleLogicalAndExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_BitwiseOrExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:7927:2: ( (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? ) )
            // InternalLustre.g:7928:2: (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? )
            {
            // InternalLustre.g:7928:2: (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? )
            // InternalLustre.g:7929:3: this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getBitwiseOrExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_124);
            this_BitwiseOrExpression_0=ruleBitwiseOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BitwiseOrExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalLustre.g:7940:3: ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )?
            int alt194=2;
            int LA194_0 = input.LA(1);

            if ( (LA194_0==104) ) {
                alt194=1;
            }
            switch (alt194) {
                case 1 :
                    // InternalLustre.g:7941:4: () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )*
                    {
                    // InternalLustre.g:7941:4: ()
                    // InternalLustre.g:7942:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getLogicalAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalLustre.g:7951:4: ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) )
                    // InternalLustre.g:7952:5: ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) )
                    {
                    // InternalLustre.g:7952:5: ( (lv_operator_2_0= ruleLogicalAndOperator ) )
                    // InternalLustre.g:7953:6: (lv_operator_2_0= ruleLogicalAndOperator )
                    {
                    // InternalLustre.g:7953:6: (lv_operator_2_0= ruleLogicalAndOperator )
                    // InternalLustre.g:7954:7: lv_operator_2_0= ruleLogicalAndOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getOperatorLogicalAndOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_18);
                    lv_operator_2_0=ruleLogicalAndOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.lustre.Lustre.LogicalAndOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalLustre.g:7971:5: ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) )
                    // InternalLustre.g:7972:6: (lv_subExpressions_3_0= ruleBitwiseOrExpression )
                    {
                    // InternalLustre.g:7972:6: (lv_subExpressions_3_0= ruleBitwiseOrExpression )
                    // InternalLustre.g:7973:7: lv_subExpressions_3_0= ruleBitwiseOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsBitwiseOrExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_125);
                    lv_subExpressions_3_0=ruleBitwiseOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseOrExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalLustre.g:7991:4: (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )*
                    loop193:
                    do {
                        int alt193=2;
                        int LA193_0 = input.LA(1);

                        if ( (LA193_0==80) ) {
                            alt193=1;
                        }


                        switch (alt193) {
                    	case 1 :
                    	    // InternalLustre.g:7992:5: otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,80,FollowSets000.FOLLOW_18); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getLogicalAndExpressionAccess().getAmpersandAmpersandKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalLustre.g:7996:5: ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) )
                    	    // InternalLustre.g:7997:6: (lv_subExpressions_5_0= ruleBitwiseOrExpression )
                    	    {
                    	    // InternalLustre.g:7997:6: (lv_subExpressions_5_0= ruleBitwiseOrExpression )
                    	    // InternalLustre.g:7998:7: lv_subExpressions_5_0= ruleBitwiseOrExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsBitwiseOrExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_125);
                    	    lv_subExpressions_5_0=ruleBitwiseOrExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseOrExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop193;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalAndExpression"


    // $ANTLR start "entryRuleBitwiseOrExpression"
    // InternalLustre.g:8021:1: entryRuleBitwiseOrExpression returns [EObject current=null] : iv_ruleBitwiseOrExpression= ruleBitwiseOrExpression EOF ;
    public final EObject entryRuleBitwiseOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseOrExpression = null;


        try {
            // InternalLustre.g:8021:60: (iv_ruleBitwiseOrExpression= ruleBitwiseOrExpression EOF )
            // InternalLustre.g:8022:2: iv_ruleBitwiseOrExpression= ruleBitwiseOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseOrExpression=ruleBitwiseOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseOrExpression"


    // $ANTLR start "ruleBitwiseOrExpression"
    // InternalLustre.g:8028:1: ruleBitwiseOrExpression returns [EObject current=null] : (this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )? ) ;
    public final EObject ruleBitwiseOrExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_BitwiseXOrExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:8034:2: ( (this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )? ) )
            // InternalLustre.g:8035:2: (this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )? )
            {
            // InternalLustre.g:8035:2: (this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )? )
            // InternalLustre.g:8036:3: this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getBitwiseXOrExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_126);
            this_BitwiseXOrExpression_0=ruleBitwiseXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BitwiseXOrExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalLustre.g:8047:3: ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )?
            int alt196=2;
            int LA196_0 = input.LA(1);

            if ( (LA196_0==47) ) {
                alt196=1;
            }
            switch (alt196) {
                case 1 :
                    // InternalLustre.g:8048:4: () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )*
                    {
                    // InternalLustre.g:8048:4: ()
                    // InternalLustre.g:8049:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getBitwiseOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalLustre.g:8058:4: ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) )
                    // InternalLustre.g:8059:5: ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) )
                    {
                    // InternalLustre.g:8059:5: ( (lv_operator_2_0= ruleBitwiseOrOperator ) )
                    // InternalLustre.g:8060:6: (lv_operator_2_0= ruleBitwiseOrOperator )
                    {
                    // InternalLustre.g:8060:6: (lv_operator_2_0= ruleBitwiseOrOperator )
                    // InternalLustre.g:8061:7: lv_operator_2_0= ruleBitwiseOrOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getOperatorBitwiseOrOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_18);
                    lv_operator_2_0=ruleBitwiseOrOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseOrExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseOrOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalLustre.g:8078:5: ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) )
                    // InternalLustre.g:8079:6: (lv_subExpressions_3_0= ruleBitwiseXOrExpression )
                    {
                    // InternalLustre.g:8079:6: (lv_subExpressions_3_0= ruleBitwiseXOrExpression )
                    // InternalLustre.g:8080:7: lv_subExpressions_3_0= ruleBitwiseXOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsBitwiseXOrExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_126);
                    lv_subExpressions_3_0=ruleBitwiseXOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseOrExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseXOrExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalLustre.g:8098:4: (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )*
                    loop195:
                    do {
                        int alt195=2;
                        int LA195_0 = input.LA(1);

                        if ( (LA195_0==47) ) {
                            alt195=1;
                        }


                        switch (alt195) {
                    	case 1 :
                    	    // InternalLustre.g:8099:5: otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,47,FollowSets000.FOLLOW_18); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getBitwiseOrExpressionAccess().getVerticalLineKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalLustre.g:8103:5: ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) )
                    	    // InternalLustre.g:8104:6: (lv_subExpressions_5_0= ruleBitwiseXOrExpression )
                    	    {
                    	    // InternalLustre.g:8104:6: (lv_subExpressions_5_0= ruleBitwiseXOrExpression )
                    	    // InternalLustre.g:8105:7: lv_subExpressions_5_0= ruleBitwiseXOrExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsBitwiseXOrExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_126);
                    	    lv_subExpressions_5_0=ruleBitwiseXOrExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getBitwiseOrExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseXOrExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop195;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseOrExpression"


    // $ANTLR start "entryRuleBitwiseXOrExpression"
    // InternalLustre.g:8128:1: entryRuleBitwiseXOrExpression returns [EObject current=null] : iv_ruleBitwiseXOrExpression= ruleBitwiseXOrExpression EOF ;
    public final EObject entryRuleBitwiseXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseXOrExpression = null;


        try {
            // InternalLustre.g:8128:61: (iv_ruleBitwiseXOrExpression= ruleBitwiseXOrExpression EOF )
            // InternalLustre.g:8129:2: iv_ruleBitwiseXOrExpression= ruleBitwiseXOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseXOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseXOrExpression=ruleBitwiseXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseXOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseXOrExpression"


    // $ANTLR start "ruleBitwiseXOrExpression"
    // InternalLustre.g:8135:1: ruleBitwiseXOrExpression returns [EObject current=null] : (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? ) ;
    public final EObject ruleBitwiseXOrExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_BitwiseAndExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:8141:2: ( (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? ) )
            // InternalLustre.g:8142:2: (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? )
            {
            // InternalLustre.g:8142:2: (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? )
            // InternalLustre.g:8143:3: this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getBitwiseAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_127);
            this_BitwiseAndExpression_0=ruleBitwiseAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BitwiseAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalLustre.g:8154:3: ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )?
            int alt198=2;
            int LA198_0 = input.LA(1);

            if ( (LA198_0==81) ) {
                alt198=1;
            }
            switch (alt198) {
                case 1 :
                    // InternalLustre.g:8155:4: () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )*
                    {
                    // InternalLustre.g:8155:4: ()
                    // InternalLustre.g:8156:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getBitwiseXOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalLustre.g:8165:4: ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) )
                    // InternalLustre.g:8166:5: ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) )
                    {
                    // InternalLustre.g:8166:5: ( (lv_operator_2_0= ruleBitwiseXOrOperator ) )
                    // InternalLustre.g:8167:6: (lv_operator_2_0= ruleBitwiseXOrOperator )
                    {
                    // InternalLustre.g:8167:6: (lv_operator_2_0= ruleBitwiseXOrOperator )
                    // InternalLustre.g:8168:7: lv_operator_2_0= ruleBitwiseXOrOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getOperatorBitwiseXOrOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_18);
                    lv_operator_2_0=ruleBitwiseXOrOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseXOrExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseXOrOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalLustre.g:8185:5: ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) )
                    // InternalLustre.g:8186:6: (lv_subExpressions_3_0= ruleBitwiseAndExpression )
                    {
                    // InternalLustre.g:8186:6: (lv_subExpressions_3_0= ruleBitwiseAndExpression )
                    // InternalLustre.g:8187:7: lv_subExpressions_3_0= ruleBitwiseAndExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_127);
                    lv_subExpressions_3_0=ruleBitwiseAndExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseXOrExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalLustre.g:8205:4: (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )*
                    loop197:
                    do {
                        int alt197=2;
                        int LA197_0 = input.LA(1);

                        if ( (LA197_0==81) ) {
                            alt197=1;
                        }


                        switch (alt197) {
                    	case 1 :
                    	    // InternalLustre.g:8206:5: otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,81,FollowSets000.FOLLOW_18); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getBitwiseXOrExpressionAccess().getCircumflexAccentKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalLustre.g:8210:5: ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) )
                    	    // InternalLustre.g:8211:6: (lv_subExpressions_5_0= ruleBitwiseAndExpression )
                    	    {
                    	    // InternalLustre.g:8211:6: (lv_subExpressions_5_0= ruleBitwiseAndExpression )
                    	    // InternalLustre.g:8212:7: lv_subExpressions_5_0= ruleBitwiseAndExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_127);
                    	    lv_subExpressions_5_0=ruleBitwiseAndExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getBitwiseXOrExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop197;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseXOrExpression"


    // $ANTLR start "entryRuleBitwiseAndExpression"
    // InternalLustre.g:8235:1: entryRuleBitwiseAndExpression returns [EObject current=null] : iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF ;
    public final EObject entryRuleBitwiseAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseAndExpression = null;


        try {
            // InternalLustre.g:8235:61: (iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF )
            // InternalLustre.g:8236:2: iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseAndExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseAndExpression=ruleBitwiseAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseAndExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseAndExpression"


    // $ANTLR start "ruleBitwiseAndExpression"
    // InternalLustre.g:8242:1: ruleBitwiseAndExpression returns [EObject current=null] : (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? ) ;
    public final EObject ruleBitwiseAndExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_CompareOperation_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:8248:2: ( (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? ) )
            // InternalLustre.g:8249:2: (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? )
            {
            // InternalLustre.g:8249:2: (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? )
            // InternalLustre.g:8250:3: this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getCompareOperationParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_128);
            this_CompareOperation_0=ruleCompareOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_CompareOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalLustre.g:8261:3: ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )?
            int alt200=2;
            int LA200_0 = input.LA(1);

            if ( (LA200_0==82) ) {
                alt200=1;
            }
            switch (alt200) {
                case 1 :
                    // InternalLustre.g:8262:4: () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )*
                    {
                    // InternalLustre.g:8262:4: ()
                    // InternalLustre.g:8263:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getBitwiseAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalLustre.g:8272:4: ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) )
                    // InternalLustre.g:8273:5: ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) )
                    {
                    // InternalLustre.g:8273:5: ( (lv_operator_2_0= ruleBitwiseAndOperator ) )
                    // InternalLustre.g:8274:6: (lv_operator_2_0= ruleBitwiseAndOperator )
                    {
                    // InternalLustre.g:8274:6: (lv_operator_2_0= ruleBitwiseAndOperator )
                    // InternalLustre.g:8275:7: lv_operator_2_0= ruleBitwiseAndOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getOperatorBitwiseAndOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_18);
                    lv_operator_2_0=ruleBitwiseAndOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalLustre.g:8292:5: ( (lv_subExpressions_3_0= ruleCompareOperation ) )
                    // InternalLustre.g:8293:6: (lv_subExpressions_3_0= ruleCompareOperation )
                    {
                    // InternalLustre.g:8293:6: (lv_subExpressions_3_0= ruleCompareOperation )
                    // InternalLustre.g:8294:7: lv_subExpressions_3_0= ruleCompareOperation
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_128);
                    lv_subExpressions_3_0=ruleCompareOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperation");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalLustre.g:8312:4: (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )*
                    loop199:
                    do {
                        int alt199=2;
                        int LA199_0 = input.LA(1);

                        if ( (LA199_0==82) ) {
                            alt199=1;
                        }


                        switch (alt199) {
                    	case 1 :
                    	    // InternalLustre.g:8313:5: otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) )
                    	    {
                    	    otherlv_4=(Token)match(input,82,FollowSets000.FOLLOW_18); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getBitwiseAndExpressionAccess().getAmpersandKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalLustre.g:8317:5: ( (lv_subExpressions_5_0= ruleCompareOperation ) )
                    	    // InternalLustre.g:8318:6: (lv_subExpressions_5_0= ruleCompareOperation )
                    	    {
                    	    // InternalLustre.g:8318:6: (lv_subExpressions_5_0= ruleCompareOperation )
                    	    // InternalLustre.g:8319:7: lv_subExpressions_5_0= ruleCompareOperation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_128);
                    	    lv_subExpressions_5_0=ruleCompareOperation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperation");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop199;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseAndExpression"


    // $ANTLR start "entryRuleCompareOperation"
    // InternalLustre.g:8342:1: entryRuleCompareOperation returns [EObject current=null] : iv_ruleCompareOperation= ruleCompareOperation EOF ;
    public final EObject entryRuleCompareOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompareOperation = null;


        try {
            // InternalLustre.g:8342:57: (iv_ruleCompareOperation= ruleCompareOperation EOF )
            // InternalLustre.g:8343:2: iv_ruleCompareOperation= ruleCompareOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompareOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCompareOperation=ruleCompareOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCompareOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCompareOperation"


    // $ANTLR start "ruleCompareOperation"
    // InternalLustre.g:8349:1: ruleCompareOperation returns [EObject current=null] : (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? ) ;
    public final EObject ruleCompareOperation() throws RecognitionException {
        EObject current = null;

        EObject this_NotOrValuedExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:8355:2: ( (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? ) )
            // InternalLustre.g:8356:2: (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? )
            {
            // InternalLustre.g:8356:2: (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? )
            // InternalLustre.g:8357:3: this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getCompareOperationAccess().getNotOrValuedExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_129);
            this_NotOrValuedExpression_0=ruleNotOrValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NotOrValuedExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalLustre.g:8368:3: ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )?
            int alt201=2;
            int LA201_0 = input.LA(1);

            if ( (LA201_0==27||(LA201_0>=98 && LA201_0<=102)) ) {
                alt201=1;
            }
            switch (alt201) {
                case 1 :
                    // InternalLustre.g:8369:4: () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) )
                    {
                    // InternalLustre.g:8369:4: ()
                    // InternalLustre.g:8370:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getCompareOperationAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalLustre.g:8379:4: ( (lv_operator_2_0= ruleCompareOperator ) )
                    // InternalLustre.g:8380:5: (lv_operator_2_0= ruleCompareOperator )
                    {
                    // InternalLustre.g:8380:5: (lv_operator_2_0= ruleCompareOperator )
                    // InternalLustre.g:8381:6: lv_operator_2_0= ruleCompareOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCompareOperationAccess().getOperatorCompareOperatorEnumRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_18);
                    lv_operator_2_0=ruleCompareOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCompareOperationRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"de.cau.cs.kieler.lustre.Lustre.CompareOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalLustre.g:8398:4: ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) )
                    // InternalLustre.g:8399:5: (lv_subExpressions_3_0= ruleNotOrValuedExpression )
                    {
                    // InternalLustre.g:8399:5: (lv_subExpressions_3_0= ruleNotOrValuedExpression )
                    // InternalLustre.g:8400:6: lv_subExpressions_3_0= ruleNotOrValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCompareOperationAccess().getSubExpressionsNotOrValuedExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_3_0=ruleNotOrValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCompareOperationRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.NotOrValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompareOperation"


    // $ANTLR start "entryRuleNotOrValuedExpression"
    // InternalLustre.g:8422:1: entryRuleNotOrValuedExpression returns [EObject current=null] : iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF ;
    public final EObject entryRuleNotOrValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNotOrValuedExpression = null;


        try {
            // InternalLustre.g:8422:62: (iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF )
            // InternalLustre.g:8423:2: iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNotOrValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNotOrValuedExpression=ruleNotOrValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNotOrValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNotOrValuedExpression"


    // $ANTLR start "ruleNotOrValuedExpression"
    // InternalLustre.g:8429:1: ruleNotOrValuedExpression returns [EObject current=null] : (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression ) ;
    public final EObject ruleNotOrValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ValuedExpression_0 = null;

        EObject this_NotExpression_1 = null;



        	enterRule();

        try {
            // InternalLustre.g:8435:2: ( (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression ) )
            // InternalLustre.g:8436:2: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )
            {
            // InternalLustre.g:8436:2: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )
            int alt202=2;
            alt202 = dfa202.predict(input);
            switch (alt202) {
                case 1 :
                    // InternalLustre.g:8437:3: this_ValuedExpression_0= ruleValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNotOrValuedExpressionAccess().getValuedExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedExpression_0=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalLustre.g:8449:3: this_NotExpression_1= ruleNotExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNotOrValuedExpressionAccess().getNotExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NotExpression_1=ruleNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NotExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotOrValuedExpression"


    // $ANTLR start "entryRuleBitwiseNotExpression"
    // InternalLustre.g:8464:1: entryRuleBitwiseNotExpression returns [EObject current=null] : iv_ruleBitwiseNotExpression= ruleBitwiseNotExpression EOF ;
    public final EObject entryRuleBitwiseNotExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseNotExpression = null;


        try {
            // InternalLustre.g:8464:61: (iv_ruleBitwiseNotExpression= ruleBitwiseNotExpression EOF )
            // InternalLustre.g:8465:2: iv_ruleBitwiseNotExpression= ruleBitwiseNotExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseNotExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseNotExpression=ruleBitwiseNotExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseNotExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseNotExpression"


    // $ANTLR start "ruleBitwiseNotExpression"
    // InternalLustre.g:8471:1: ruleBitwiseNotExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression ) ;
    public final EObject ruleBitwiseNotExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_AtomicExpression_3 = null;



        	enterRule();

        try {
            // InternalLustre.g:8477:2: ( ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression ) )
            // InternalLustre.g:8478:2: ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression )
            {
            // InternalLustre.g:8478:2: ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression )
            int alt203=2;
            int LA203_0 = input.LA(1);

            if ( (LA203_0==115) ) {
                alt203=1;
            }
            else if ( (LA203_0==RULE_ID||LA203_0==RULE_HOSTCODE||(LA203_0>=RULE_BOOLEAN && LA203_0<=RULE_COMMENT_ANNOTATION)||LA203_0==36||LA203_0==40||LA203_0==78||LA203_0==88||LA203_0==92||LA203_0==114||LA203_0==116) ) {
                alt203=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 203, 0, input);

                throw nvae;
            }
            switch (alt203) {
                case 1 :
                    // InternalLustre.g:8479:3: ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) )
                    {
                    // InternalLustre.g:8479:3: ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) )
                    // InternalLustre.g:8480:4: () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) )
                    {
                    // InternalLustre.g:8480:4: ()
                    // InternalLustre.g:8481:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getBitwiseNotExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalLustre.g:8490:4: ( (lv_operator_1_0= ruleBitwiseNotOperator ) )
                    // InternalLustre.g:8491:5: (lv_operator_1_0= ruleBitwiseNotOperator )
                    {
                    // InternalLustre.g:8491:5: (lv_operator_1_0= ruleBitwiseNotOperator )
                    // InternalLustre.g:8492:6: lv_operator_1_0= ruleBitwiseNotOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBitwiseNotExpressionAccess().getOperatorBitwiseNotOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_18);
                    lv_operator_1_0=ruleBitwiseNotOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBitwiseNotExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseNotOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalLustre.g:8509:4: ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) )
                    // InternalLustre.g:8510:5: (lv_subExpressions_2_0= ruleBitwiseNotExpression )
                    {
                    // InternalLustre.g:8510:5: (lv_subExpressions_2_0= ruleBitwiseNotExpression )
                    // InternalLustre.g:8511:6: lv_subExpressions_2_0= ruleBitwiseNotExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBitwiseNotExpressionAccess().getSubExpressionsBitwiseNotExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleBitwiseNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBitwiseNotExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseNotExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:8530:3: this_AtomicExpression_3= ruleAtomicExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBitwiseNotExpressionAccess().getAtomicExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicExpression_3=ruleAtomicExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AtomicExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseNotExpression"


    // $ANTLR start "entryRuleNotExpression"
    // InternalLustre.g:8545:1: entryRuleNotExpression returns [EObject current=null] : iv_ruleNotExpression= ruleNotExpression EOF ;
    public final EObject entryRuleNotExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNotExpression = null;


        try {
            // InternalLustre.g:8545:54: (iv_ruleNotExpression= ruleNotExpression EOF )
            // InternalLustre.g:8546:2: iv_ruleNotExpression= ruleNotExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNotExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNotExpression=ruleNotExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNotExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNotExpression"


    // $ANTLR start "ruleNotExpression"
    // InternalLustre.g:8552:1: ruleNotExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_BitwiseNotExpression_3= ruleBitwiseNotExpression ) ;
    public final EObject ruleNotExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_BitwiseNotExpression_3 = null;



        	enterRule();

        try {
            // InternalLustre.g:8558:2: ( ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_BitwiseNotExpression_3= ruleBitwiseNotExpression ) )
            // InternalLustre.g:8559:2: ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_BitwiseNotExpression_3= ruleBitwiseNotExpression )
            {
            // InternalLustre.g:8559:2: ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_BitwiseNotExpression_3= ruleBitwiseNotExpression )
            int alt204=2;
            int LA204_0 = input.LA(1);

            if ( (LA204_0==105) ) {
                alt204=1;
            }
            else if ( (LA204_0==RULE_ID||LA204_0==RULE_HOSTCODE||(LA204_0>=RULE_BOOLEAN && LA204_0<=RULE_COMMENT_ANNOTATION)||LA204_0==36||LA204_0==40||LA204_0==78||LA204_0==88||LA204_0==92||(LA204_0>=114 && LA204_0<=116)) ) {
                alt204=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 204, 0, input);

                throw nvae;
            }
            switch (alt204) {
                case 1 :
                    // InternalLustre.g:8560:3: ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) )
                    {
                    // InternalLustre.g:8560:3: ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) )
                    // InternalLustre.g:8561:4: () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) )
                    {
                    // InternalLustre.g:8561:4: ()
                    // InternalLustre.g:8562:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getNotExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalLustre.g:8571:4: ( (lv_operator_1_0= ruleNotOperator ) )
                    // InternalLustre.g:8572:5: (lv_operator_1_0= ruleNotOperator )
                    {
                    // InternalLustre.g:8572:5: (lv_operator_1_0= ruleNotOperator )
                    // InternalLustre.g:8573:6: lv_operator_1_0= ruleNotOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNotExpressionAccess().getOperatorNotOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_18);
                    lv_operator_1_0=ruleNotOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNotExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.lustre.Lustre.NotOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalLustre.g:8590:4: ( (lv_subExpressions_2_0= ruleNotExpression ) )
                    // InternalLustre.g:8591:5: (lv_subExpressions_2_0= ruleNotExpression )
                    {
                    // InternalLustre.g:8591:5: (lv_subExpressions_2_0= ruleNotExpression )
                    // InternalLustre.g:8592:6: lv_subExpressions_2_0= ruleNotExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNotExpressionAccess().getSubExpressionsNotExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNotExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.NotExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:8611:3: this_BitwiseNotExpression_3= ruleBitwiseNotExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNotExpressionAccess().getBitwiseNotExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BitwiseNotExpression_3=ruleBitwiseNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BitwiseNotExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotExpression"


    // $ANTLR start "entryRuleValuedExpression"
    // InternalLustre.g:8626:1: entryRuleValuedExpression returns [EObject current=null] : iv_ruleValuedExpression= ruleValuedExpression EOF ;
    public final EObject entryRuleValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedExpression = null;


        try {
            // InternalLustre.g:8626:57: (iv_ruleValuedExpression= ruleValuedExpression EOF )
            // InternalLustre.g:8627:2: iv_ruleValuedExpression= ruleValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedExpression=ruleValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedExpression"


    // $ANTLR start "ruleValuedExpression"
    // InternalLustre.g:8633:1: ruleValuedExpression returns [EObject current=null] : this_ShiftLeftExpression_0= ruleShiftLeftExpression ;
    public final EObject ruleValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ShiftLeftExpression_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:8639:2: (this_ShiftLeftExpression_0= ruleShiftLeftExpression )
            // InternalLustre.g:8640:2: this_ShiftLeftExpression_0= ruleShiftLeftExpression
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getValuedExpressionAccess().getShiftLeftExpressionParserRuleCall());
              	
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_ShiftLeftExpression_0=ruleShiftLeftExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_ShiftLeftExpression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedExpression"


    // $ANTLR start "entryRuleShiftLeftExpression"
    // InternalLustre.g:8654:1: entryRuleShiftLeftExpression returns [EObject current=null] : iv_ruleShiftLeftExpression= ruleShiftLeftExpression EOF ;
    public final EObject entryRuleShiftLeftExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShiftLeftExpression = null;


        try {
            // InternalLustre.g:8654:60: (iv_ruleShiftLeftExpression= ruleShiftLeftExpression EOF )
            // InternalLustre.g:8655:2: iv_ruleShiftLeftExpression= ruleShiftLeftExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShiftLeftExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleShiftLeftExpression=ruleShiftLeftExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShiftLeftExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShiftLeftExpression"


    // $ANTLR start "ruleShiftLeftExpression"
    // InternalLustre.g:8661:1: ruleShiftLeftExpression returns [EObject current=null] : (this_ShiftRightExpression_0= ruleShiftRightExpression ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightExpression ) ) )* )? ) ;
    public final EObject ruleShiftLeftExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_ShiftRightExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:8667:2: ( (this_ShiftRightExpression_0= ruleShiftRightExpression ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightExpression ) ) )* )? ) )
            // InternalLustre.g:8668:2: (this_ShiftRightExpression_0= ruleShiftRightExpression ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightExpression ) ) )* )? )
            {
            // InternalLustre.g:8668:2: (this_ShiftRightExpression_0= ruleShiftRightExpression ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightExpression ) ) )* )? )
            // InternalLustre.g:8669:3: this_ShiftRightExpression_0= ruleShiftRightExpression ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getShiftLeftExpressionAccess().getShiftRightExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_41);
            this_ShiftRightExpression_0=ruleShiftRightExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ShiftRightExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalLustre.g:8680:3: ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightExpression ) ) )* )?
            int alt206=2;
            int LA206_0 = input.LA(1);

            if ( (LA206_0==32) ) {
                alt206=1;
            }
            switch (alt206) {
                case 1 :
                    // InternalLustre.g:8681:4: () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightExpression ) ) )*
                    {
                    // InternalLustre.g:8681:4: ()
                    // InternalLustre.g:8682:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getShiftLeftExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalLustre.g:8691:4: ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightExpression ) ) )
                    // InternalLustre.g:8692:5: ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightExpression ) )
                    {
                    // InternalLustre.g:8692:5: ( (lv_operator_2_0= ruleShiftLeftOperator ) )
                    // InternalLustre.g:8693:6: (lv_operator_2_0= ruleShiftLeftOperator )
                    {
                    // InternalLustre.g:8693:6: (lv_operator_2_0= ruleShiftLeftOperator )
                    // InternalLustre.g:8694:7: lv_operator_2_0= ruleShiftLeftOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftLeftExpressionAccess().getOperatorShiftLeftOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_56);
                    lv_operator_2_0=ruleShiftLeftOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftLeftExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftLeftOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalLustre.g:8711:5: ( (lv_subExpressions_3_0= ruleShiftRightExpression ) )
                    // InternalLustre.g:8712:6: (lv_subExpressions_3_0= ruleShiftRightExpression )
                    {
                    // InternalLustre.g:8712:6: (lv_subExpressions_3_0= ruleShiftRightExpression )
                    // InternalLustre.g:8713:7: lv_subExpressions_3_0= ruleShiftRightExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftLeftExpressionAccess().getSubExpressionsShiftRightExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_41);
                    lv_subExpressions_3_0=ruleShiftRightExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftLeftExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalLustre.g:8731:4: (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightExpression ) ) )*
                    loop205:
                    do {
                        int alt205=2;
                        int LA205_0 = input.LA(1);

                        if ( (LA205_0==32) ) {
                            alt205=1;
                        }


                        switch (alt205) {
                    	case 1 :
                    	    // InternalLustre.g:8732:5: otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,32,FollowSets000.FOLLOW_56); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getShiftLeftExpressionAccess().getLessThanSignLessThanSignKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalLustre.g:8736:5: ( (lv_subExpressions_5_0= ruleShiftRightExpression ) )
                    	    // InternalLustre.g:8737:6: (lv_subExpressions_5_0= ruleShiftRightExpression )
                    	    {
                    	    // InternalLustre.g:8737:6: (lv_subExpressions_5_0= ruleShiftRightExpression )
                    	    // InternalLustre.g:8738:7: lv_subExpressions_5_0= ruleShiftRightExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getShiftLeftExpressionAccess().getSubExpressionsShiftRightExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_41);
                    	    lv_subExpressions_5_0=ruleShiftRightExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getShiftLeftExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop205;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftLeftExpression"


    // $ANTLR start "entryRuleShiftRightExpression"
    // InternalLustre.g:8761:1: entryRuleShiftRightExpression returns [EObject current=null] : iv_ruleShiftRightExpression= ruleShiftRightExpression EOF ;
    public final EObject entryRuleShiftRightExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShiftRightExpression = null;


        try {
            // InternalLustre.g:8761:61: (iv_ruleShiftRightExpression= ruleShiftRightExpression EOF )
            // InternalLustre.g:8762:2: iv_ruleShiftRightExpression= ruleShiftRightExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShiftRightExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleShiftRightExpression=ruleShiftRightExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShiftRightExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShiftRightExpression"


    // $ANTLR start "ruleShiftRightExpression"
    // InternalLustre.g:8768:1: ruleShiftRightExpression returns [EObject current=null] : (this_ShiftRightUnsignedExpression_0= ruleShiftRightUnsignedExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? ) ;
    public final EObject ruleShiftRightExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_ShiftRightUnsignedExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:8774:2: ( (this_ShiftRightUnsignedExpression_0= ruleShiftRightUnsignedExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? ) )
            // InternalLustre.g:8775:2: (this_ShiftRightUnsignedExpression_0= ruleShiftRightUnsignedExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? )
            {
            // InternalLustre.g:8775:2: (this_ShiftRightUnsignedExpression_0= ruleShiftRightUnsignedExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? )
            // InternalLustre.g:8776:3: this_ShiftRightUnsignedExpression_0= ruleShiftRightUnsignedExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getShiftRightUnsignedExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_130);
            this_ShiftRightUnsignedExpression_0=ruleShiftRightUnsignedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ShiftRightUnsignedExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalLustre.g:8787:3: ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )?
            int alt208=2;
            int LA208_0 = input.LA(1);

            if ( (LA208_0==33) ) {
                int LA208_1 = input.LA(2);

                if ( (LA208_1==40) ) {
                    int LA208_3 = input.LA(3);

                    if ( (LA208_3==RULE_ID) ) {
                        alt208=1;
                    }
                }
                else if ( ((LA208_1>=RULE_ID && LA208_1<=RULE_COMMENT_ANNOTATION)||LA208_1==36||LA208_1==38||LA208_1==78||LA208_1==85||LA208_1==88||LA208_1==92||LA208_1==107||LA208_1==114||LA208_1==116) ) {
                    alt208=1;
                }
            }
            switch (alt208) {
                case 1 :
                    // InternalLustre.g:8788:4: () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )*
                    {
                    // InternalLustre.g:8788:4: ()
                    // InternalLustre.g:8789:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getShiftRightExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalLustre.g:8798:4: ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) )
                    // InternalLustre.g:8799:5: ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) )
                    {
                    // InternalLustre.g:8799:5: ( (lv_operator_2_0= ruleShiftRightOperator ) )
                    // InternalLustre.g:8800:6: (lv_operator_2_0= ruleShiftRightOperator )
                    {
                    // InternalLustre.g:8800:6: (lv_operator_2_0= ruleShiftRightOperator )
                    // InternalLustre.g:8801:7: lv_operator_2_0= ruleShiftRightOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getOperatorShiftRightOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_56);
                    lv_operator_2_0=ruleShiftRightOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftRightExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalLustre.g:8818:5: ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) )
                    // InternalLustre.g:8819:6: (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression )
                    {
                    // InternalLustre.g:8819:6: (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression )
                    // InternalLustre.g:8820:7: lv_subExpressions_3_0= ruleShiftRightUnsignedExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getSubExpressionsShiftRightUnsignedExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_130);
                    lv_subExpressions_3_0=ruleShiftRightUnsignedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftRightExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalLustre.g:8838:4: (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )*
                    loop207:
                    do {
                        int alt207=2;
                        int LA207_0 = input.LA(1);

                        if ( (LA207_0==33) ) {
                            int LA207_2 = input.LA(2);

                            if ( ((LA207_2>=RULE_ID && LA207_2<=RULE_COMMENT_ANNOTATION)||LA207_2==36||LA207_2==38||LA207_2==78||LA207_2==85||LA207_2==88||LA207_2==92||LA207_2==107||LA207_2==114||LA207_2==116) ) {
                                alt207=1;
                            }
                            else if ( (LA207_2==40) ) {
                                int LA207_4 = input.LA(3);

                                if ( (LA207_4==RULE_ID) ) {
                                    alt207=1;
                                }


                            }


                        }


                        switch (alt207) {
                    	case 1 :
                    	    // InternalLustre.g:8839:5: otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,33,FollowSets000.FOLLOW_56); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getShiftRightExpressionAccess().getGreaterThanSignGreaterThanSignKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalLustre.g:8843:5: ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) )
                    	    // InternalLustre.g:8844:6: (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression )
                    	    {
                    	    // InternalLustre.g:8844:6: (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression )
                    	    // InternalLustre.g:8845:7: lv_subExpressions_5_0= ruleShiftRightUnsignedExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getSubExpressionsShiftRightUnsignedExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_130);
                    	    lv_subExpressions_5_0=ruleShiftRightUnsignedExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getShiftRightExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop207;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightExpression"


    // $ANTLR start "entryRuleShiftRightUnsignedExpression"
    // InternalLustre.g:8868:1: entryRuleShiftRightUnsignedExpression returns [EObject current=null] : iv_ruleShiftRightUnsignedExpression= ruleShiftRightUnsignedExpression EOF ;
    public final EObject entryRuleShiftRightUnsignedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShiftRightUnsignedExpression = null;


        try {
            // InternalLustre.g:8868:69: (iv_ruleShiftRightUnsignedExpression= ruleShiftRightUnsignedExpression EOF )
            // InternalLustre.g:8869:2: iv_ruleShiftRightUnsignedExpression= ruleShiftRightUnsignedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleShiftRightUnsignedExpression=ruleShiftRightUnsignedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShiftRightUnsignedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShiftRightUnsignedExpression"


    // $ANTLR start "ruleShiftRightUnsignedExpression"
    // InternalLustre.g:8875:1: ruleShiftRightUnsignedExpression returns [EObject current=null] : (this_AddExpression_0= ruleAddExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleAddExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleAddExpression ) ) )* )? ) ;
    public final EObject ruleShiftRightUnsignedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_AddExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:8881:2: ( (this_AddExpression_0= ruleAddExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleAddExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleAddExpression ) ) )* )? ) )
            // InternalLustre.g:8882:2: (this_AddExpression_0= ruleAddExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleAddExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleAddExpression ) ) )* )? )
            {
            // InternalLustre.g:8882:2: (this_AddExpression_0= ruleAddExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleAddExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleAddExpression ) ) )* )? )
            // InternalLustre.g:8883:3: this_AddExpression_0= ruleAddExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleAddExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleAddExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getAddExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_131);
            this_AddExpression_0=ruleAddExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AddExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalLustre.g:8894:3: ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleAddExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleAddExpression ) ) )* )?
            int alt210=2;
            int LA210_0 = input.LA(1);

            if ( (LA210_0==83) ) {
                alt210=1;
            }
            switch (alt210) {
                case 1 :
                    // InternalLustre.g:8895:4: () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleAddExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleAddExpression ) ) )*
                    {
                    // InternalLustre.g:8895:4: ()
                    // InternalLustre.g:8896:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getShiftRightUnsignedExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalLustre.g:8905:4: ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleAddExpression ) ) )
                    // InternalLustre.g:8906:5: ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleAddExpression ) )
                    {
                    // InternalLustre.g:8906:5: ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) )
                    // InternalLustre.g:8907:6: (lv_operator_2_0= ruleShiftRightUnsignedOperator )
                    {
                    // InternalLustre.g:8907:6: (lv_operator_2_0= ruleShiftRightUnsignedOperator )
                    // InternalLustre.g:8908:7: lv_operator_2_0= ruleShiftRightUnsignedOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getOperatorShiftRightUnsignedOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_56);
                    lv_operator_2_0=ruleShiftRightUnsignedOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftRightUnsignedExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalLustre.g:8925:5: ( (lv_subExpressions_3_0= ruleAddExpression ) )
                    // InternalLustre.g:8926:6: (lv_subExpressions_3_0= ruleAddExpression )
                    {
                    // InternalLustre.g:8926:6: (lv_subExpressions_3_0= ruleAddExpression )
                    // InternalLustre.g:8927:7: lv_subExpressions_3_0= ruleAddExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getSubExpressionsAddExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_131);
                    lv_subExpressions_3_0=ruleAddExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftRightUnsignedExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.AddExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalLustre.g:8945:4: (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleAddExpression ) ) )*
                    loop209:
                    do {
                        int alt209=2;
                        int LA209_0 = input.LA(1);

                        if ( (LA209_0==83) ) {
                            alt209=1;
                        }


                        switch (alt209) {
                    	case 1 :
                    	    // InternalLustre.g:8946:5: otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleAddExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,83,FollowSets000.FOLLOW_56); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getShiftRightUnsignedExpressionAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalLustre.g:8950:5: ( (lv_subExpressions_5_0= ruleAddExpression ) )
                    	    // InternalLustre.g:8951:6: (lv_subExpressions_5_0= ruleAddExpression )
                    	    {
                    	    // InternalLustre.g:8951:6: (lv_subExpressions_5_0= ruleAddExpression )
                    	    // InternalLustre.g:8952:7: lv_subExpressions_5_0= ruleAddExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getSubExpressionsAddExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_131);
                    	    lv_subExpressions_5_0=ruleAddExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getShiftRightUnsignedExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.AddExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop209;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightUnsignedExpression"


    // $ANTLR start "entryRuleAddExpression"
    // InternalLustre.g:8975:1: entryRuleAddExpression returns [EObject current=null] : iv_ruleAddExpression= ruleAddExpression EOF ;
    public final EObject entryRuleAddExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAddExpression = null;


        try {
            // InternalLustre.g:8975:54: (iv_ruleAddExpression= ruleAddExpression EOF )
            // InternalLustre.g:8976:2: iv_ruleAddExpression= ruleAddExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAddExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAddExpression=ruleAddExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAddExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAddExpression"


    // $ANTLR start "ruleAddExpression"
    // InternalLustre.g:8982:1: ruleAddExpression returns [EObject current=null] : (this_SubExpression_0= ruleSubExpression ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )* )? ) ;
    public final EObject ruleAddExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_SubExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:8988:2: ( (this_SubExpression_0= ruleSubExpression ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )* )? ) )
            // InternalLustre.g:8989:2: (this_SubExpression_0= ruleSubExpression ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )* )? )
            {
            // InternalLustre.g:8989:2: (this_SubExpression_0= ruleSubExpression ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )* )? )
            // InternalLustre.g:8990:3: this_SubExpression_0= ruleSubExpression ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAddExpressionAccess().getSubExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_132);
            this_SubExpression_0=ruleSubExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SubExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalLustre.g:9001:3: ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )* )?
            int alt212=2;
            int LA212_0 = input.LA(1);

            if ( (LA212_0==84) ) {
                alt212=1;
            }
            switch (alt212) {
                case 1 :
                    // InternalLustre.g:9002:4: () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )*
                    {
                    // InternalLustre.g:9002:4: ()
                    // InternalLustre.g:9003:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getAddExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalLustre.g:9012:4: ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) )
                    // InternalLustre.g:9013:5: ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) )
                    {
                    // InternalLustre.g:9013:5: ( (lv_operator_2_0= ruleAddOperator ) )
                    // InternalLustre.g:9014:6: (lv_operator_2_0= ruleAddOperator )
                    {
                    // InternalLustre.g:9014:6: (lv_operator_2_0= ruleAddOperator )
                    // InternalLustre.g:9015:7: lv_operator_2_0= ruleAddOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAddExpressionAccess().getOperatorAddOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_56);
                    lv_operator_2_0=ruleAddOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getAddExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.AddOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalLustre.g:9032:5: ( (lv_subExpressions_3_0= ruleSubExpression ) )
                    // InternalLustre.g:9033:6: (lv_subExpressions_3_0= ruleSubExpression )
                    {
                    // InternalLustre.g:9033:6: (lv_subExpressions_3_0= ruleSubExpression )
                    // InternalLustre.g:9034:7: lv_subExpressions_3_0= ruleSubExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAddExpressionAccess().getSubExpressionsSubExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_132);
                    lv_subExpressions_3_0=ruleSubExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getAddExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.SubExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalLustre.g:9052:4: (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )*
                    loop211:
                    do {
                        int alt211=2;
                        int LA211_0 = input.LA(1);

                        if ( (LA211_0==84) ) {
                            alt211=1;
                        }


                        switch (alt211) {
                    	case 1 :
                    	    // InternalLustre.g:9053:5: otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,84,FollowSets000.FOLLOW_56); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getAddExpressionAccess().getPlusSignKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalLustre.g:9057:5: ( (lv_subExpressions_5_0= ruleSubExpression ) )
                    	    // InternalLustre.g:9058:6: (lv_subExpressions_5_0= ruleSubExpression )
                    	    {
                    	    // InternalLustre.g:9058:6: (lv_subExpressions_5_0= ruleSubExpression )
                    	    // InternalLustre.g:9059:7: lv_subExpressions_5_0= ruleSubExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAddExpressionAccess().getSubExpressionsSubExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_132);
                    	    lv_subExpressions_5_0=ruleSubExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAddExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.SubExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop211;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAddExpression"


    // $ANTLR start "entryRuleSubExpression"
    // InternalLustre.g:9082:1: entryRuleSubExpression returns [EObject current=null] : iv_ruleSubExpression= ruleSubExpression EOF ;
    public final EObject entryRuleSubExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSubExpression = null;


        try {
            // InternalLustre.g:9082:54: (iv_ruleSubExpression= ruleSubExpression EOF )
            // InternalLustre.g:9083:2: iv_ruleSubExpression= ruleSubExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSubExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSubExpression=ruleSubExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSubExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSubExpression"


    // $ANTLR start "ruleSubExpression"
    // InternalLustre.g:9089:1: ruleSubExpression returns [EObject current=null] : (this_MultExpression_0= ruleMultExpression ( () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) ) )* )? ) ;
    public final EObject ruleSubExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_MultExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:9095:2: ( (this_MultExpression_0= ruleMultExpression ( () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) ) )* )? ) )
            // InternalLustre.g:9096:2: (this_MultExpression_0= ruleMultExpression ( () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) ) )* )? )
            {
            // InternalLustre.g:9096:2: (this_MultExpression_0= ruleMultExpression ( () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) ) )* )? )
            // InternalLustre.g:9097:3: this_MultExpression_0= ruleMultExpression ( () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSubExpressionAccess().getMultExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_133);
            this_MultExpression_0=ruleMultExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MultExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalLustre.g:9108:3: ( () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) ) )* )?
            int alt214=2;
            int LA214_0 = input.LA(1);

            if ( (LA214_0==85) ) {
                alt214=1;
            }
            switch (alt214) {
                case 1 :
                    // InternalLustre.g:9109:4: () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) ) )*
                    {
                    // InternalLustre.g:9109:4: ()
                    // InternalLustre.g:9110:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getSubExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalLustre.g:9119:4: ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) )
                    // InternalLustre.g:9120:5: ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) )
                    {
                    // InternalLustre.g:9120:5: ( (lv_operator_2_0= ruleSubOperator ) )
                    // InternalLustre.g:9121:6: (lv_operator_2_0= ruleSubOperator )
                    {
                    // InternalLustre.g:9121:6: (lv_operator_2_0= ruleSubOperator )
                    // InternalLustre.g:9122:7: lv_operator_2_0= ruleSubOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSubExpressionAccess().getOperatorSubOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_56);
                    lv_operator_2_0=ruleSubOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSubExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.SubOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalLustre.g:9139:5: ( (lv_subExpressions_3_0= ruleMultExpression ) )
                    // InternalLustre.g:9140:6: (lv_subExpressions_3_0= ruleMultExpression )
                    {
                    // InternalLustre.g:9140:6: (lv_subExpressions_3_0= ruleMultExpression )
                    // InternalLustre.g:9141:7: lv_subExpressions_3_0= ruleMultExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSubExpressionAccess().getSubExpressionsMultExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_133);
                    lv_subExpressions_3_0=ruleMultExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSubExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.MultExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalLustre.g:9159:4: (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) ) )*
                    loop213:
                    do {
                        int alt213=2;
                        int LA213_0 = input.LA(1);

                        if ( (LA213_0==85) ) {
                            alt213=1;
                        }


                        switch (alt213) {
                    	case 1 :
                    	    // InternalLustre.g:9160:5: otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,85,FollowSets000.FOLLOW_56); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getSubExpressionAccess().getHyphenMinusKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalLustre.g:9164:5: ( (lv_subExpressions_5_0= ruleMultExpression ) )
                    	    // InternalLustre.g:9165:6: (lv_subExpressions_5_0= ruleMultExpression )
                    	    {
                    	    // InternalLustre.g:9165:6: (lv_subExpressions_5_0= ruleMultExpression )
                    	    // InternalLustre.g:9166:7: lv_subExpressions_5_0= ruleMultExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSubExpressionAccess().getSubExpressionsMultExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_133);
                    	    lv_subExpressions_5_0=ruleMultExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSubExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.MultExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop213;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubExpression"


    // $ANTLR start "entryRuleMultExpression"
    // InternalLustre.g:9189:1: entryRuleMultExpression returns [EObject current=null] : iv_ruleMultExpression= ruleMultExpression EOF ;
    public final EObject entryRuleMultExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultExpression = null;


        try {
            // InternalLustre.g:9189:55: (iv_ruleMultExpression= ruleMultExpression EOF )
            // InternalLustre.g:9190:2: iv_ruleMultExpression= ruleMultExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMultExpression=ruleMultExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultExpression"


    // $ANTLR start "ruleMultExpression"
    // InternalLustre.g:9196:1: ruleMultExpression returns [EObject current=null] : (this_DivExpression_0= ruleDivExpression ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) ) )* )? ) ;
    public final EObject ruleMultExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_DivExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:9202:2: ( (this_DivExpression_0= ruleDivExpression ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) ) )* )? ) )
            // InternalLustre.g:9203:2: (this_DivExpression_0= ruleDivExpression ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) ) )* )? )
            {
            // InternalLustre.g:9203:2: (this_DivExpression_0= ruleDivExpression ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) ) )* )? )
            // InternalLustre.g:9204:3: this_DivExpression_0= ruleDivExpression ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMultExpressionAccess().getDivExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_134);
            this_DivExpression_0=ruleDivExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DivExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalLustre.g:9215:3: ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) ) )* )?
            int alt216=2;
            int LA216_0 = input.LA(1);

            if ( (LA216_0==86) ) {
                alt216=1;
            }
            switch (alt216) {
                case 1 :
                    // InternalLustre.g:9216:4: () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) ) )*
                    {
                    // InternalLustre.g:9216:4: ()
                    // InternalLustre.g:9217:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getMultExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalLustre.g:9226:4: ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) )
                    // InternalLustre.g:9227:5: ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) )
                    {
                    // InternalLustre.g:9227:5: ( (lv_operator_2_0= ruleMultOperator ) )
                    // InternalLustre.g:9228:6: (lv_operator_2_0= ruleMultOperator )
                    {
                    // InternalLustre.g:9228:6: (lv_operator_2_0= ruleMultOperator )
                    // InternalLustre.g:9229:7: lv_operator_2_0= ruleMultOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getMultExpressionAccess().getOperatorMultOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_56);
                    lv_operator_2_0=ruleMultOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getMultExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.MultOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalLustre.g:9246:5: ( (lv_subExpressions_3_0= ruleDivExpression ) )
                    // InternalLustre.g:9247:6: (lv_subExpressions_3_0= ruleDivExpression )
                    {
                    // InternalLustre.g:9247:6: (lv_subExpressions_3_0= ruleDivExpression )
                    // InternalLustre.g:9248:7: lv_subExpressions_3_0= ruleDivExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getMultExpressionAccess().getSubExpressionsDivExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_134);
                    lv_subExpressions_3_0=ruleDivExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getMultExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.DivExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalLustre.g:9266:4: (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) ) )*
                    loop215:
                    do {
                        int alt215=2;
                        int LA215_0 = input.LA(1);

                        if ( (LA215_0==86) ) {
                            alt215=1;
                        }


                        switch (alt215) {
                    	case 1 :
                    	    // InternalLustre.g:9267:5: otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,86,FollowSets000.FOLLOW_56); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getMultExpressionAccess().getAsteriskKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalLustre.g:9271:5: ( (lv_subExpressions_5_0= ruleDivExpression ) )
                    	    // InternalLustre.g:9272:6: (lv_subExpressions_5_0= ruleDivExpression )
                    	    {
                    	    // InternalLustre.g:9272:6: (lv_subExpressions_5_0= ruleDivExpression )
                    	    // InternalLustre.g:9273:7: lv_subExpressions_5_0= ruleDivExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMultExpressionAccess().getSubExpressionsDivExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_134);
                    	    lv_subExpressions_5_0=ruleDivExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMultExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.DivExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop215;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultExpression"


    // $ANTLR start "entryRuleDivExpression"
    // InternalLustre.g:9296:1: entryRuleDivExpression returns [EObject current=null] : iv_ruleDivExpression= ruleDivExpression EOF ;
    public final EObject entryRuleDivExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDivExpression = null;


        try {
            // InternalLustre.g:9296:54: (iv_ruleDivExpression= ruleDivExpression EOF )
            // InternalLustre.g:9297:2: iv_ruleDivExpression= ruleDivExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDivExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDivExpression=ruleDivExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDivExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDivExpression"


    // $ANTLR start "ruleDivExpression"
    // InternalLustre.g:9303:1: ruleDivExpression returns [EObject current=null] : (this_ModExpression_0= ruleModExpression ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) ) )* )? ) ;
    public final EObject ruleDivExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_ModExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:9309:2: ( (this_ModExpression_0= ruleModExpression ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) ) )* )? ) )
            // InternalLustre.g:9310:2: (this_ModExpression_0= ruleModExpression ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) ) )* )? )
            {
            // InternalLustre.g:9310:2: (this_ModExpression_0= ruleModExpression ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) ) )* )? )
            // InternalLustre.g:9311:3: this_ModExpression_0= ruleModExpression ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDivExpressionAccess().getModExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_135);
            this_ModExpression_0=ruleModExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ModExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalLustre.g:9322:3: ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) ) )* )?
            int alt218=2;
            int LA218_0 = input.LA(1);

            if ( (LA218_0==87) ) {
                alt218=1;
            }
            switch (alt218) {
                case 1 :
                    // InternalLustre.g:9323:4: () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) ) )*
                    {
                    // InternalLustre.g:9323:4: ()
                    // InternalLustre.g:9324:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getDivExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalLustre.g:9333:4: ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) )
                    // InternalLustre.g:9334:5: ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) )
                    {
                    // InternalLustre.g:9334:5: ( (lv_operator_2_0= ruleDivOperator ) )
                    // InternalLustre.g:9335:6: (lv_operator_2_0= ruleDivOperator )
                    {
                    // InternalLustre.g:9335:6: (lv_operator_2_0= ruleDivOperator )
                    // InternalLustre.g:9336:7: lv_operator_2_0= ruleDivOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDivExpressionAccess().getOperatorDivOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_56);
                    lv_operator_2_0=ruleDivOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDivExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.DivOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalLustre.g:9353:5: ( (lv_subExpressions_3_0= ruleModExpression ) )
                    // InternalLustre.g:9354:6: (lv_subExpressions_3_0= ruleModExpression )
                    {
                    // InternalLustre.g:9354:6: (lv_subExpressions_3_0= ruleModExpression )
                    // InternalLustre.g:9355:7: lv_subExpressions_3_0= ruleModExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDivExpressionAccess().getSubExpressionsModExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_135);
                    lv_subExpressions_3_0=ruleModExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDivExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.lustre.Lustre.ModExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalLustre.g:9373:4: (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) ) )*
                    loop217:
                    do {
                        int alt217=2;
                        int LA217_0 = input.LA(1);

                        if ( (LA217_0==87) ) {
                            alt217=1;
                        }


                        switch (alt217) {
                    	case 1 :
                    	    // InternalLustre.g:9374:5: otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,87,FollowSets000.FOLLOW_56); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getDivExpressionAccess().getSolidusKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalLustre.g:9378:5: ( (lv_subExpressions_5_0= ruleModExpression ) )
                    	    // InternalLustre.g:9379:6: (lv_subExpressions_5_0= ruleModExpression )
                    	    {
                    	    // InternalLustre.g:9379:6: (lv_subExpressions_5_0= ruleModExpression )
                    	    // InternalLustre.g:9380:7: lv_subExpressions_5_0= ruleModExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDivExpressionAccess().getSubExpressionsModExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_135);
                    	    lv_subExpressions_5_0=ruleModExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDivExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.lustre.Lustre.ModExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop217;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDivExpression"


    // $ANTLR start "entryRuleAtomicExpression"
    // InternalLustre.g:9403:1: entryRuleAtomicExpression returns [EObject current=null] : iv_ruleAtomicExpression= ruleAtomicExpression EOF ;
    public final EObject entryRuleAtomicExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAtomicExpression = null;


        try {
            // InternalLustre.g:9403:57: (iv_ruleAtomicExpression= ruleAtomicExpression EOF )
            // InternalLustre.g:9404:2: iv_ruleAtomicExpression= ruleAtomicExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAtomicExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAtomicExpression=ruleAtomicExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAtomicExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAtomicExpression"


    // $ANTLR start "ruleAtomicExpression"
    // InternalLustre.g:9410:1: ruleAtomicExpression returns [EObject current=null] : (this_BoolValue_0= ruleBoolValue | this_ValuedObjectTestExpression_1= ruleValuedObjectTestExpression | (otherlv_2= '(' this_BoolExpression_3= ruleBoolExpression otherlv_4= ')' ) | this_ReferenceCall_5= ruleReferenceCall | this_FunctionCall_6= ruleFunctionCall | this_RandomCall_7= ruleRandomCall | this_RandomizeCall_8= ruleRandomizeCall | this_TextExpression_9= ruleTextExpression ) ;
    public final EObject ruleAtomicExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_BoolValue_0 = null;

        EObject this_ValuedObjectTestExpression_1 = null;

        EObject this_BoolExpression_3 = null;

        EObject this_ReferenceCall_5 = null;

        EObject this_FunctionCall_6 = null;

        EObject this_RandomCall_7 = null;

        EObject this_RandomizeCall_8 = null;

        EObject this_TextExpression_9 = null;



        	enterRule();

        try {
            // InternalLustre.g:9416:2: ( (this_BoolValue_0= ruleBoolValue | this_ValuedObjectTestExpression_1= ruleValuedObjectTestExpression | (otherlv_2= '(' this_BoolExpression_3= ruleBoolExpression otherlv_4= ')' ) | this_ReferenceCall_5= ruleReferenceCall | this_FunctionCall_6= ruleFunctionCall | this_RandomCall_7= ruleRandomCall | this_RandomizeCall_8= ruleRandomizeCall | this_TextExpression_9= ruleTextExpression ) )
            // InternalLustre.g:9417:2: (this_BoolValue_0= ruleBoolValue | this_ValuedObjectTestExpression_1= ruleValuedObjectTestExpression | (otherlv_2= '(' this_BoolExpression_3= ruleBoolExpression otherlv_4= ')' ) | this_ReferenceCall_5= ruleReferenceCall | this_FunctionCall_6= ruleFunctionCall | this_RandomCall_7= ruleRandomCall | this_RandomizeCall_8= ruleRandomizeCall | this_TextExpression_9= ruleTextExpression )
            {
            // InternalLustre.g:9417:2: (this_BoolValue_0= ruleBoolValue | this_ValuedObjectTestExpression_1= ruleValuedObjectTestExpression | (otherlv_2= '(' this_BoolExpression_3= ruleBoolExpression otherlv_4= ')' ) | this_ReferenceCall_5= ruleReferenceCall | this_FunctionCall_6= ruleFunctionCall | this_RandomCall_7= ruleRandomCall | this_RandomizeCall_8= ruleRandomizeCall | this_TextExpression_9= ruleTextExpression )
            int alt219=8;
            alt219 = dfa219.predict(input);
            switch (alt219) {
                case 1 :
                    // InternalLustre.g:9418:3: this_BoolValue_0= ruleBoolValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getBoolValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolValue_0=ruleBoolValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoolValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalLustre.g:9430:3: this_ValuedObjectTestExpression_1= ruleValuedObjectTestExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getValuedObjectTestExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedObjectTestExpression_1=ruleValuedObjectTestExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedObjectTestExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalLustre.g:9442:3: (otherlv_2= '(' this_BoolExpression_3= ruleBoolExpression otherlv_4= ')' )
                    {
                    // InternalLustre.g:9442:3: (otherlv_2= '(' this_BoolExpression_3= ruleBoolExpression otherlv_4= ')' )
                    // InternalLustre.g:9443:4: otherlv_2= '(' this_BoolExpression_3= ruleBoolExpression otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,36,FollowSets000.FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAtomicExpressionAccess().getBoolExpressionParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_110);
                    this_BoolExpression_3=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_BoolExpression_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_4=(Token)match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getAtomicExpressionAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalLustre.g:9464:3: this_ReferenceCall_5= ruleReferenceCall
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getReferenceCallParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceCall_5=ruleReferenceCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReferenceCall_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalLustre.g:9476:3: this_FunctionCall_6= ruleFunctionCall
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getFunctionCallParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FunctionCall_6=ruleFunctionCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionCall_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalLustre.g:9488:3: this_RandomCall_7= ruleRandomCall
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getRandomCallParserRuleCall_5());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RandomCall_7=ruleRandomCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RandomCall_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalLustre.g:9500:3: this_RandomizeCall_8= ruleRandomizeCall
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getRandomizeCallParserRuleCall_6());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RandomizeCall_8=ruleRandomizeCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RandomizeCall_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalLustre.g:9512:3: this_TextExpression_9= ruleTextExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getTextExpressionParserRuleCall_7());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TextExpression_9=ruleTextExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TextExpression_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAtomicExpression"


    // $ANTLR start "entryRuleAtomicValuedExpression"
    // InternalLustre.g:9527:1: entryRuleAtomicValuedExpression returns [EObject current=null] : iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF ;
    public final EObject entryRuleAtomicValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAtomicValuedExpression = null;


        try {
            // InternalLustre.g:9527:63: (iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF )
            // InternalLustre.g:9528:2: iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAtomicValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAtomicValuedExpression=ruleAtomicValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAtomicValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAtomicValuedExpression"


    // $ANTLR start "ruleAtomicValuedExpression"
    // InternalLustre.g:9534:1: ruleAtomicValuedExpression returns [EObject current=null] : (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression ) ;
    public final EObject ruleAtomicValuedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject this_IntValue_0 = null;

        EObject this_FloatValue_1 = null;

        EObject this_StringValue_2 = null;

        EObject this_VectorValue_3 = null;

        EObject this_ValuedExpression_5 = null;

        EObject this_AtomicExpression_7 = null;



        	enterRule();

        try {
            // InternalLustre.g:9540:2: ( (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression ) )
            // InternalLustre.g:9541:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression )
            {
            // InternalLustre.g:9541:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression )
            int alt220=6;
            alt220 = dfa220.predict(input);
            switch (alt220) {
                case 1 :
                    // InternalLustre.g:9542:3: this_IntValue_0= ruleIntValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getIntValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IntValue_0=ruleIntValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IntValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalLustre.g:9554:3: this_FloatValue_1= ruleFloatValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getFloatValueParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FloatValue_1=ruleFloatValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FloatValue_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalLustre.g:9566:3: this_StringValue_2= ruleStringValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getStringValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringValue_2=ruleStringValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalLustre.g:9578:3: this_VectorValue_3= ruleVectorValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getVectorValueParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_VectorValue_3=ruleVectorValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VectorValue_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalLustre.g:9590:3: (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' )
                    {
                    // InternalLustre.g:9590:3: (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' )
                    // InternalLustre.g:9591:4: otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')'
                    {
                    otherlv_4=(Token)match(input,36,FollowSets000.FOLLOW_56); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getAtomicValuedExpressionAccess().getLeftParenthesisKeyword_4_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getValuedExpressionParserRuleCall_4_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_110);
                    this_ValuedExpression_5=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ValuedExpression_5;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_6=(Token)match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getAtomicValuedExpressionAccess().getRightParenthesisKeyword_4_2());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalLustre.g:9612:3: this_AtomicExpression_7= ruleAtomicExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getAtomicExpressionParserRuleCall_5());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicExpression_7=ruleAtomicExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AtomicExpression_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAtomicValuedExpression"


    // $ANTLR start "entryRuleValuedObjectTestExpression"
    // InternalLustre.g:9627:1: entryRuleValuedObjectTestExpression returns [EObject current=null] : iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF ;
    public final EObject entryRuleValuedObjectTestExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObjectTestExpression = null;


        try {
            // InternalLustre.g:9627:67: (iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF )
            // InternalLustre.g:9628:2: iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectTestExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObjectTestExpression=ruleValuedObjectTestExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObjectTestExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObjectTestExpression"


    // $ANTLR start "ruleValuedObjectTestExpression"
    // InternalLustre.g:9634:1: ruleValuedObjectTestExpression returns [EObject current=null] : ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' ) | this_ValuedObjectReference_5= ruleValuedObjectReference ) ;
    public final EObject ruleValuedObjectTestExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Enumerator lv_operator_1_1 = null;

        Enumerator lv_operator_1_2 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject this_ValuedObjectReference_5 = null;



        	enterRule();

        try {
            // InternalLustre.g:9640:2: ( ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' ) | this_ValuedObjectReference_5= ruleValuedObjectReference ) )
            // InternalLustre.g:9641:2: ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' ) | this_ValuedObjectReference_5= ruleValuedObjectReference )
            {
            // InternalLustre.g:9641:2: ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' ) | this_ValuedObjectReference_5= ruleValuedObjectReference )
            int alt222=2;
            int LA222_0 = input.LA(1);

            if ( (LA222_0==114||LA222_0==116) ) {
                alt222=1;
            }
            else if ( (LA222_0==RULE_ID) ) {
                alt222=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 222, 0, input);

                throw nvae;
            }
            switch (alt222) {
                case 1 :
                    // InternalLustre.g:9642:3: ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' )
                    {
                    // InternalLustre.g:9642:3: ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' )
                    // InternalLustre.g:9643:4: () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')'
                    {
                    // InternalLustre.g:9643:4: ()
                    // InternalLustre.g:9644:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getValuedObjectTestExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalLustre.g:9653:4: ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) )
                    // InternalLustre.g:9654:5: ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) )
                    {
                    // InternalLustre.g:9654:5: ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) )
                    // InternalLustre.g:9655:6: (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator )
                    {
                    // InternalLustre.g:9655:6: (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator )
                    int alt221=2;
                    int LA221_0 = input.LA(1);

                    if ( (LA221_0==114) ) {
                        alt221=1;
                    }
                    else if ( (LA221_0==116) ) {
                        alt221=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 221, 0, input);

                        throw nvae;
                    }
                    switch (alt221) {
                        case 1 :
                            // InternalLustre.g:9656:7: lv_operator_1_1= rulePreOperator
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorPreOperatorEnumRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_24);
                            lv_operator_1_1=rulePreOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                              							}
                              							set(
                              								current,
                              								"operator",
                              								lv_operator_1_1,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.PreOperator");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalLustre.g:9672:7: lv_operator_1_2= ruleValOperator
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorValOperatorEnumRuleCall_0_1_0_1());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_24);
                            lv_operator_1_2=ruleValOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                              							}
                              							set(
                              								current,
                              								"operator",
                              								lv_operator_1_2,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.ValOperator");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    otherlv_2=(Token)match(input,36,FollowSets000.FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getValuedObjectTestExpressionAccess().getLeftParenthesisKeyword_0_2());
                      			
                    }
                    // InternalLustre.g:9694:4: ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) )
                    // InternalLustre.g:9695:5: (lv_subExpressions_3_0= ruleValuedObjectTestExpression )
                    {
                    // InternalLustre.g:9695:5: (lv_subExpressions_3_0= ruleValuedObjectTestExpression )
                    // InternalLustre.g:9696:6: lv_subExpressions_3_0= ruleValuedObjectTestExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectTestExpressionParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_110);
                    lv_subExpressions_3_0=ruleValuedObjectTestExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectTestExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getValuedObjectTestExpressionAccess().getRightParenthesisKeyword_0_4());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:9719:3: this_ValuedObjectReference_5= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getValuedObjectReferenceParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedObjectReference_5=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedObjectReference_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObjectTestExpression"


    // $ANTLR start "entryRulePrimeID"
    // InternalLustre.g:9734:1: entryRulePrimeID returns [String current=null] : iv_rulePrimeID= rulePrimeID EOF ;
    public final String entryRulePrimeID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePrimeID = null;


        try {
            // InternalLustre.g:9734:47: (iv_rulePrimeID= rulePrimeID EOF )
            // InternalLustre.g:9735:2: iv_rulePrimeID= rulePrimeID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimeIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrimeID=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimeID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimeID"


    // $ANTLR start "rulePrimeID"
    // InternalLustre.g:9741:1: rulePrimeID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (kw= '\\'' )* ) ;
    public final AntlrDatatypeRuleToken rulePrimeID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;


        	enterRule();

        try {
            // InternalLustre.g:9747:2: ( (this_ID_0= RULE_ID (kw= '\\'' )* ) )
            // InternalLustre.g:9748:2: (this_ID_0= RULE_ID (kw= '\\'' )* )
            {
            // InternalLustre.g:9748:2: (this_ID_0= RULE_ID (kw= '\\'' )* )
            // InternalLustre.g:9749:3: this_ID_0= RULE_ID (kw= '\\'' )*
            {
            this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_136); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_ID_0, grammarAccess.getPrimeIDAccess().getIDTerminalRuleCall_0());
              		
            }
            // InternalLustre.g:9756:3: (kw= '\\'' )*
            loop223:
            do {
                int alt223=2;
                int LA223_0 = input.LA(1);

                if ( (LA223_0==61) ) {
                    alt223=1;
                }


                switch (alt223) {
            	case 1 :
            	    // InternalLustre.g:9757:4: kw= '\\''
            	    {
            	    kw=(Token)match(input,61,FollowSets000.FOLLOW_136); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getPrimeIDAccess().getApostropheKeyword_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop223;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimeID"


    // $ANTLR start "entryRuleValuedObjectReference"
    // InternalLustre.g:9767:1: entryRuleValuedObjectReference returns [EObject current=null] : iv_ruleValuedObjectReference= ruleValuedObjectReference EOF ;
    public final EObject entryRuleValuedObjectReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObjectReference = null;


        try {
            // InternalLustre.g:9767:62: (iv_ruleValuedObjectReference= ruleValuedObjectReference EOF )
            // InternalLustre.g:9768:2: iv_ruleValuedObjectReference= ruleValuedObjectReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObjectReference=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObjectReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObjectReference"


    // $ANTLR start "ruleValuedObjectReference"
    // InternalLustre.g:9774:1: ruleValuedObjectReference returns [EObject current=null] : ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ) ;
    public final EObject ruleValuedObjectReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_indices_2_0 = null;

        EObject lv_subReference_5_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:9780:2: ( ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ) )
            // InternalLustre.g:9781:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? )
            {
            // InternalLustre.g:9781:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? )
            // InternalLustre.g:9782:3: ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            {
            // InternalLustre.g:9782:3: ( ( rulePrimeID ) )
            // InternalLustre.g:9783:4: ( rulePrimeID )
            {
            // InternalLustre.g:9783:4: ( rulePrimeID )
            // InternalLustre.g:9784:5: rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getValuedObjectReferenceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_137);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:9801:3: (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )*
            loop224:
            do {
                int alt224=2;
                int LA224_0 = input.LA(1);

                if ( (LA224_0==73) ) {
                    alt224=1;
                }


                switch (alt224) {
            	case 1 :
            	    // InternalLustre.g:9802:4: otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']'
            	    {
            	    otherlv_1=(Token)match(input,73,FollowSets000.FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getValuedObjectReferenceAccess().getLeftSquareBracketKeyword_1_0());
            	      			
            	    }
            	    // InternalLustre.g:9806:4: ( (lv_indices_2_0= ruleExpression ) )
            	    // InternalLustre.g:9807:5: (lv_indices_2_0= ruleExpression )
            	    {
            	    // InternalLustre.g:9807:5: (lv_indices_2_0= ruleExpression )
            	    // InternalLustre.g:9808:6: lv_indices_2_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getIndicesExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_106);
            	    lv_indices_2_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getValuedObjectReferenceRule());
            	      						}
            	      						add(
            	      							current,
            	      							"indices",
            	      							lv_indices_2_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,74,FollowSets000.FOLLOW_137); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getValuedObjectReferenceAccess().getRightSquareBracketKeyword_1_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop224;
                }
            } while (true);

            // InternalLustre.g:9830:3: (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            int alt225=2;
            int LA225_0 = input.LA(1);

            if ( (LA225_0==44) ) {
                alt225=1;
            }
            switch (alt225) {
                case 1 :
                    // InternalLustre.g:9831:4: otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    {
                    otherlv_4=(Token)match(input,44,FollowSets000.FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getValuedObjectReferenceAccess().getFullStopKeyword_2_0());
                      			
                    }
                    // InternalLustre.g:9835:4: ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    // InternalLustre.g:9836:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    {
                    // InternalLustre.g:9836:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    // InternalLustre.g:9837:6: lv_subReference_5_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getSubReferenceValuedObjectReferenceParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subReference_5_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectReferenceRule());
                      						}
                      						set(
                      							current,
                      							"subReference",
                      							lv_subReference_5_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObjectReference"


    // $ANTLR start "entryRuleScheduleObjectReference"
    // InternalLustre.g:9859:1: entryRuleScheduleObjectReference returns [EObject current=null] : iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF ;
    public final EObject entryRuleScheduleObjectReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScheduleObjectReference = null;


        try {
            // InternalLustre.g:9859:64: (iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF )
            // InternalLustre.g:9860:2: iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScheduleObjectReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScheduleObjectReference=ruleScheduleObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScheduleObjectReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScheduleObjectReference"


    // $ANTLR start "ruleScheduleObjectReference"
    // InternalLustre.g:9866:1: ruleScheduleObjectReference returns [EObject current=null] : ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) ) ;
    public final EObject ruleScheduleObjectReference() throws RecognitionException {
        EObject current = null;

        Token lv_priority_1_0=null;


        	enterRule();

        try {
            // InternalLustre.g:9872:2: ( ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) ) )
            // InternalLustre.g:9873:2: ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) )
            {
            // InternalLustre.g:9873:2: ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) )
            // InternalLustre.g:9874:3: ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) )
            {
            // InternalLustre.g:9874:3: ( ( rulePrimeID ) )
            // InternalLustre.g:9875:4: ( rulePrimeID )
            {
            // InternalLustre.g:9875:4: ( rulePrimeID )
            // InternalLustre.g:9876:5: rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getScheduleObjectReferenceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScheduleObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_138);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:9893:3: ( (lv_priority_1_0= RULE_INT ) )
            // InternalLustre.g:9894:4: (lv_priority_1_0= RULE_INT )
            {
            // InternalLustre.g:9894:4: (lv_priority_1_0= RULE_INT )
            // InternalLustre.g:9895:5: lv_priority_1_0= RULE_INT
            {
            lv_priority_1_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_priority_1_0, grammarAccess.getScheduleObjectReferenceAccess().getPriorityINTTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getScheduleObjectReferenceRule());
              					}
              					setWithLastConsumed(
              						current,
              						"priority",
              						lv_priority_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.INT");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScheduleObjectReference"


    // $ANTLR start "entryRuleReferenceCall"
    // InternalLustre.g:9915:1: entryRuleReferenceCall returns [EObject current=null] : iv_ruleReferenceCall= ruleReferenceCall EOF ;
    public final EObject entryRuleReferenceCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceCall = null;


        try {
            // InternalLustre.g:9915:54: (iv_ruleReferenceCall= ruleReferenceCall EOF )
            // InternalLustre.g:9916:2: iv_ruleReferenceCall= ruleReferenceCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceCall=ruleReferenceCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceCall"


    // $ANTLR start "ruleReferenceCall"
    // InternalLustre.g:9922:1: ruleReferenceCall returns [EObject current=null] : ( ( ( rulePrimeID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | otherlv_6= '()' ) ) ;
    public final EObject ruleReferenceCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_parameters_2_0 = null;

        EObject lv_parameters_4_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:9928:2: ( ( ( ( rulePrimeID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | otherlv_6= '()' ) ) )
            // InternalLustre.g:9929:2: ( ( ( rulePrimeID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | otherlv_6= '()' ) )
            {
            // InternalLustre.g:9929:2: ( ( ( rulePrimeID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | otherlv_6= '()' ) )
            // InternalLustre.g:9930:3: ( ( rulePrimeID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | otherlv_6= '()' )
            {
            // InternalLustre.g:9930:3: ( ( rulePrimeID ) )
            // InternalLustre.g:9931:4: ( rulePrimeID )
            {
            // InternalLustre.g:9931:4: ( rulePrimeID )
            // InternalLustre.g:9932:5: rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getReferenceCallRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferenceCallAccess().getValuedObjectValuedObjectCrossReference_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_116);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:9949:3: ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | otherlv_6= '()' )
            int alt227=2;
            int LA227_0 = input.LA(1);

            if ( (LA227_0==36) ) {
                alt227=1;
            }
            else if ( (LA227_0==57) ) {
                alt227=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 227, 0, input);

                throw nvae;
            }
            switch (alt227) {
                case 1 :
                    // InternalLustre.g:9950:4: (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' )
                    {
                    // InternalLustre.g:9950:4: (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' )
                    // InternalLustre.g:9951:5: otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')'
                    {
                    otherlv_1=(Token)match(input,36,FollowSets000.FOLLOW_117); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getReferenceCallAccess().getLeftParenthesisKeyword_1_0_0());
                      				
                    }
                    // InternalLustre.g:9955:5: ( (lv_parameters_2_0= ruleParameter ) )
                    // InternalLustre.g:9956:6: (lv_parameters_2_0= ruleParameter )
                    {
                    // InternalLustre.g:9956:6: (lv_parameters_2_0= ruleParameter )
                    // InternalLustre.g:9957:7: lv_parameters_2_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceCallAccess().getParametersParameterParserRuleCall_1_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_118);
                    lv_parameters_2_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceCallRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalLustre.g:9974:5: (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )*
                    loop226:
                    do {
                        int alt226=2;
                        int LA226_0 = input.LA(1);

                        if ( (LA226_0==19) ) {
                            alt226=1;
                        }


                        switch (alt226) {
                    	case 1 :
                    	    // InternalLustre.g:9975:6: otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) )
                    	    {
                    	    otherlv_3=(Token)match(input,19,FollowSets000.FOLLOW_117); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_3, grammarAccess.getReferenceCallAccess().getCommaKeyword_1_0_2_0());
                    	      					
                    	    }
                    	    // InternalLustre.g:9979:6: ( (lv_parameters_4_0= ruleParameter ) )
                    	    // InternalLustre.g:9980:7: (lv_parameters_4_0= ruleParameter )
                    	    {
                    	    // InternalLustre.g:9980:7: (lv_parameters_4_0= ruleParameter )
                    	    // InternalLustre.g:9981:8: lv_parameters_4_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceCallAccess().getParametersParameterParserRuleCall_1_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_118);
                    	    lv_parameters_4_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceCallRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_4_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop226;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getReferenceCallAccess().getRightParenthesisKeyword_1_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:10005:4: otherlv_6= '()'
                    {
                    otherlv_6=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getReferenceCallAccess().getLeftParenthesisRightParenthesisKeyword_1_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceCall"


    // $ANTLR start "entryRuleRandomCall"
    // InternalLustre.g:10014:1: entryRuleRandomCall returns [EObject current=null] : iv_ruleRandomCall= ruleRandomCall EOF ;
    public final EObject entryRuleRandomCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRandomCall = null;


        try {
            // InternalLustre.g:10014:51: (iv_ruleRandomCall= ruleRandomCall EOF )
            // InternalLustre.g:10015:2: iv_ruleRandomCall= ruleRandomCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRandomCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRandomCall=ruleRandomCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRandomCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRandomCall"


    // $ANTLR start "ruleRandomCall"
    // InternalLustre.g:10021:1: ruleRandomCall returns [EObject current=null] : ( () otherlv_1= 'random' (otherlv_2= '()' )? ) ;
    public final EObject ruleRandomCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;


        	enterRule();

        try {
            // InternalLustre.g:10027:2: ( ( () otherlv_1= 'random' (otherlv_2= '()' )? ) )
            // InternalLustre.g:10028:2: ( () otherlv_1= 'random' (otherlv_2= '()' )? )
            {
            // InternalLustre.g:10028:2: ( () otherlv_1= 'random' (otherlv_2= '()' )? )
            // InternalLustre.g:10029:3: () otherlv_1= 'random' (otherlv_2= '()' )?
            {
            // InternalLustre.g:10029:3: ()
            // InternalLustre.g:10030:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRandomCallAccess().getRandomCallAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,88,FollowSets000.FOLLOW_139); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getRandomCallAccess().getRandomKeyword_1());
              		
            }
            // InternalLustre.g:10043:3: (otherlv_2= '()' )?
            int alt228=2;
            int LA228_0 = input.LA(1);

            if ( (LA228_0==57) ) {
                alt228=1;
            }
            switch (alt228) {
                case 1 :
                    // InternalLustre.g:10044:4: otherlv_2= '()'
                    {
                    otherlv_2=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getRandomCallAccess().getLeftParenthesisRightParenthesisKeyword_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRandomCall"


    // $ANTLR start "entryRuleRandomizeCall"
    // InternalLustre.g:10053:1: entryRuleRandomizeCall returns [EObject current=null] : iv_ruleRandomizeCall= ruleRandomizeCall EOF ;
    public final EObject entryRuleRandomizeCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRandomizeCall = null;


        try {
            // InternalLustre.g:10053:54: (iv_ruleRandomizeCall= ruleRandomizeCall EOF )
            // InternalLustre.g:10054:2: iv_ruleRandomizeCall= ruleRandomizeCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRandomizeCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRandomizeCall=ruleRandomizeCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRandomizeCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRandomizeCall"


    // $ANTLR start "ruleRandomizeCall"
    // InternalLustre.g:10060:1: ruleRandomizeCall returns [EObject current=null] : ( () otherlv_1= 'randomize' (otherlv_2= '()' )? ) ;
    public final EObject ruleRandomizeCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;


        	enterRule();

        try {
            // InternalLustre.g:10066:2: ( ( () otherlv_1= 'randomize' (otherlv_2= '()' )? ) )
            // InternalLustre.g:10067:2: ( () otherlv_1= 'randomize' (otherlv_2= '()' )? )
            {
            // InternalLustre.g:10067:2: ( () otherlv_1= 'randomize' (otherlv_2= '()' )? )
            // InternalLustre.g:10068:3: () otherlv_1= 'randomize' (otherlv_2= '()' )?
            {
            // InternalLustre.g:10068:3: ()
            // InternalLustre.g:10069:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRandomizeCallAccess().getRandomizeCallAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,78,FollowSets000.FOLLOW_139); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getRandomizeCallAccess().getRandomizeKeyword_1());
              		
            }
            // InternalLustre.g:10082:3: (otherlv_2= '()' )?
            int alt229=2;
            int LA229_0 = input.LA(1);

            if ( (LA229_0==57) ) {
                alt229=1;
            }
            switch (alt229) {
                case 1 :
                    // InternalLustre.g:10083:4: otherlv_2= '()'
                    {
                    otherlv_2=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getRandomizeCallAccess().getLeftParenthesisRightParenthesisKeyword_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRandomizeCall"


    // $ANTLR start "entryRuleFunctionCall"
    // InternalLustre.g:10092:1: entryRuleFunctionCall returns [EObject current=null] : iv_ruleFunctionCall= ruleFunctionCall EOF ;
    public final EObject entryRuleFunctionCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionCall = null;


        try {
            // InternalLustre.g:10092:53: (iv_ruleFunctionCall= ruleFunctionCall EOF )
            // InternalLustre.g:10093:2: iv_ruleFunctionCall= ruleFunctionCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunctionCall=ruleFunctionCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionCall"


    // $ANTLR start "ruleFunctionCall"
    // InternalLustre.g:10099:1: ruleFunctionCall returns [EObject current=null] : (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) ;
    public final EObject ruleFunctionCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_functionName_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:10105:2: ( (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) )
            // InternalLustre.g:10106:2: (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) )
            {
            // InternalLustre.g:10106:2: (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) )
            // InternalLustre.g:10107:3: otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' )
            {
            otherlv_0=(Token)match(input,40,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFunctionCallAccess().getExternKeyword_0());
              		
            }
            // InternalLustre.g:10111:3: ( (lv_functionName_1_0= RULE_ID ) )
            // InternalLustre.g:10112:4: (lv_functionName_1_0= RULE_ID )
            {
            // InternalLustre.g:10112:4: (lv_functionName_1_0= RULE_ID )
            // InternalLustre.g:10113:5: lv_functionName_1_0= RULE_ID
            {
            lv_functionName_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_116); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_functionName_1_0, grammarAccess.getFunctionCallAccess().getFunctionNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getFunctionCallRule());
              					}
              					setWithLastConsumed(
              						current,
              						"functionName",
              						lv_functionName_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalLustre.g:10129:3: ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' )
            int alt231=2;
            int LA231_0 = input.LA(1);

            if ( (LA231_0==36) ) {
                alt231=1;
            }
            else if ( (LA231_0==57) ) {
                alt231=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 231, 0, input);

                throw nvae;
            }
            switch (alt231) {
                case 1 :
                    // InternalLustre.g:10130:4: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
                    {
                    // InternalLustre.g:10130:4: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
                    // InternalLustre.g:10131:5: otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')'
                    {
                    otherlv_2=(Token)match(input,36,FollowSets000.FOLLOW_117); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_2_0_0());
                      				
                    }
                    // InternalLustre.g:10135:5: ( (lv_parameters_3_0= ruleParameter ) )
                    // InternalLustre.g:10136:6: (lv_parameters_3_0= ruleParameter )
                    {
                    // InternalLustre.g:10136:6: (lv_parameters_3_0= ruleParameter )
                    // InternalLustre.g:10137:7: lv_parameters_3_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_2_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_118);
                    lv_parameters_3_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFunctionCallRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalLustre.g:10154:5: (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )*
                    loop230:
                    do {
                        int alt230=2;
                        int LA230_0 = input.LA(1);

                        if ( (LA230_0==19) ) {
                            alt230=1;
                        }


                        switch (alt230) {
                    	case 1 :
                    	    // InternalLustre.g:10155:6: otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) )
                    	    {
                    	    otherlv_4=(Token)match(input,19,FollowSets000.FOLLOW_117); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getFunctionCallAccess().getCommaKeyword_2_0_2_0());
                    	      					
                    	    }
                    	    // InternalLustre.g:10159:6: ( (lv_parameters_5_0= ruleParameter ) )
                    	    // InternalLustre.g:10160:7: (lv_parameters_5_0= ruleParameter )
                    	    {
                    	    // InternalLustre.g:10160:7: (lv_parameters_5_0= ruleParameter )
                    	    // InternalLustre.g:10161:8: lv_parameters_5_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_2_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_118);
                    	    lv_parameters_5_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getFunctionCallRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_5_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop230;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_2_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:10185:4: otherlv_7= '()'
                    {
                    otherlv_7=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_2_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionCall"


    // $ANTLR start "entryRuleParameter"
    // InternalLustre.g:10194:1: entryRuleParameter returns [EObject current=null] : iv_ruleParameter= ruleParameter EOF ;
    public final EObject entryRuleParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameter = null;


        try {
            // InternalLustre.g:10194:50: (iv_ruleParameter= ruleParameter EOF )
            // InternalLustre.g:10195:2: iv_ruleParameter= ruleParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleParameter=ruleParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameter"


    // $ANTLR start "ruleParameter"
    // InternalLustre.g:10201:1: ruleParameter returns [EObject current=null] : ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) ) ;
    public final EObject ruleParameter() throws RecognitionException {
        EObject current = null;

        Token lv_pureOutput_0_0=null;
        Token lv_callByReference_1_0=null;
        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:10207:2: ( ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) ) )
            // InternalLustre.g:10208:2: ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) )
            {
            // InternalLustre.g:10208:2: ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) )
            // InternalLustre.g:10209:3: ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) )
            {
            // InternalLustre.g:10209:3: ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )?
            int alt233=2;
            int LA233_0 = input.LA(1);

            if ( (LA233_0==82||LA233_0==89) ) {
                alt233=1;
            }
            switch (alt233) {
                case 1 :
                    // InternalLustre.g:10210:4: ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) )
                    {
                    // InternalLustre.g:10210:4: ( (lv_pureOutput_0_0= '!' ) )?
                    int alt232=2;
                    int LA232_0 = input.LA(1);

                    if ( (LA232_0==89) ) {
                        alt232=1;
                    }
                    switch (alt232) {
                        case 1 :
                            // InternalLustre.g:10211:5: (lv_pureOutput_0_0= '!' )
                            {
                            // InternalLustre.g:10211:5: (lv_pureOutput_0_0= '!' )
                            // InternalLustre.g:10212:6: lv_pureOutput_0_0= '!'
                            {
                            lv_pureOutput_0_0=(Token)match(input,89,FollowSets000.FOLLOW_140); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_pureOutput_0_0, grammarAccess.getParameterAccess().getPureOutputExclamationMarkKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getParameterRule());
                              						}
                              						setWithLastConsumed(current, "pureOutput", true, "!");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalLustre.g:10224:4: ( (lv_callByReference_1_0= '&' ) )
                    // InternalLustre.g:10225:5: (lv_callByReference_1_0= '&' )
                    {
                    // InternalLustre.g:10225:5: (lv_callByReference_1_0= '&' )
                    // InternalLustre.g:10226:6: lv_callByReference_1_0= '&'
                    {
                    lv_callByReference_1_0=(Token)match(input,82,FollowSets000.FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_callByReference_1_0, grammarAccess.getParameterAccess().getCallByReferenceAmpersandKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getParameterRule());
                      						}
                      						setWithLastConsumed(current, "callByReference", true, "&");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalLustre.g:10239:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalLustre.g:10240:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalLustre.g:10240:4: (lv_expression_2_0= ruleExpression )
            // InternalLustre.g:10241:5: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getParameterAccess().getExpressionExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getParameterRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameter"


    // $ANTLR start "entryRuleTextExpression"
    // InternalLustre.g:10262:1: entryRuleTextExpression returns [EObject current=null] : iv_ruleTextExpression= ruleTextExpression EOF ;
    public final EObject entryRuleTextExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTextExpression = null;


        try {
            // InternalLustre.g:10262:55: (iv_ruleTextExpression= ruleTextExpression EOF )
            // InternalLustre.g:10263:2: iv_ruleTextExpression= ruleTextExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTextExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTextExpression=ruleTextExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTextExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTextExpression"


    // $ANTLR start "ruleTextExpression"
    // InternalLustre.g:10269:1: ruleTextExpression returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) ;
    public final EObject ruleTextExpression() throws RecognitionException {
        EObject current = null;

        Token lv_text_1_0=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:10275:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) )
            // InternalLustre.g:10276:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            {
            // InternalLustre.g:10276:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            // InternalLustre.g:10277:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) )
            {
            // InternalLustre.g:10277:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop234:
            do {
                int alt234=2;
                int LA234_0 = input.LA(1);

                if ( (LA234_0==RULE_COMMENT_ANNOTATION||LA234_0==92) ) {
                    alt234=1;
                }


                switch (alt234) {
            	case 1 :
            	    // InternalLustre.g:10278:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalLustre.g:10278:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalLustre.g:10279:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getTextExpressionAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_114);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getTextExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop234;
                }
            } while (true);

            // InternalLustre.g:10296:3: ( (lv_text_1_0= RULE_HOSTCODE ) )
            // InternalLustre.g:10297:4: (lv_text_1_0= RULE_HOSTCODE )
            {
            // InternalLustre.g:10297:4: (lv_text_1_0= RULE_HOSTCODE )
            // InternalLustre.g:10298:5: lv_text_1_0= RULE_HOSTCODE
            {
            lv_text_1_0=(Token)match(input,RULE_HOSTCODE,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_text_1_0, grammarAccess.getTextExpressionAccess().getTextHOSTCODETerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTextExpressionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"text",
              						lv_text_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.HOSTCODE");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTextExpression"


    // $ANTLR start "entryRuleIntValue"
    // InternalLustre.g:10318:1: entryRuleIntValue returns [EObject current=null] : iv_ruleIntValue= ruleIntValue EOF ;
    public final EObject entryRuleIntValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntValue = null;


        try {
            // InternalLustre.g:10318:49: (iv_ruleIntValue= ruleIntValue EOF )
            // InternalLustre.g:10319:2: iv_ruleIntValue= ruleIntValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIntValue=ruleIntValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntValue"


    // $ANTLR start "ruleIntValue"
    // InternalLustre.g:10325:1: ruleIntValue returns [EObject current=null] : ( (lv_value_0_0= RULE_INT ) ) ;
    public final EObject ruleIntValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalLustre.g:10331:2: ( ( (lv_value_0_0= RULE_INT ) ) )
            // InternalLustre.g:10332:2: ( (lv_value_0_0= RULE_INT ) )
            {
            // InternalLustre.g:10332:2: ( (lv_value_0_0= RULE_INT ) )
            // InternalLustre.g:10333:3: (lv_value_0_0= RULE_INT )
            {
            // InternalLustre.g:10333:3: (lv_value_0_0= RULE_INT )
            // InternalLustre.g:10334:4: lv_value_0_0= RULE_INT
            {
            lv_value_0_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getIntValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.INT");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntValue"


    // $ANTLR start "entryRuleFloatValue"
    // InternalLustre.g:10353:1: entryRuleFloatValue returns [EObject current=null] : iv_ruleFloatValue= ruleFloatValue EOF ;
    public final EObject entryRuleFloatValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFloatValue = null;


        try {
            // InternalLustre.g:10353:51: (iv_ruleFloatValue= ruleFloatValue EOF )
            // InternalLustre.g:10354:2: iv_ruleFloatValue= ruleFloatValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFloatValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFloatValue=ruleFloatValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFloatValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFloatValue"


    // $ANTLR start "ruleFloatValue"
    // InternalLustre.g:10360:1: ruleFloatValue returns [EObject current=null] : ( (lv_value_0_0= RULE_FLOAT ) ) ;
    public final EObject ruleFloatValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalLustre.g:10366:2: ( ( (lv_value_0_0= RULE_FLOAT ) ) )
            // InternalLustre.g:10367:2: ( (lv_value_0_0= RULE_FLOAT ) )
            {
            // InternalLustre.g:10367:2: ( (lv_value_0_0= RULE_FLOAT ) )
            // InternalLustre.g:10368:3: (lv_value_0_0= RULE_FLOAT )
            {
            // InternalLustre.g:10368:3: (lv_value_0_0= RULE_FLOAT )
            // InternalLustre.g:10369:4: lv_value_0_0= RULE_FLOAT
            {
            lv_value_0_0=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getFloatValueAccess().getValueFLOATTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFloatValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.FLOAT");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFloatValue"


    // $ANTLR start "entryRuleBoolValue"
    // InternalLustre.g:10388:1: entryRuleBoolValue returns [EObject current=null] : iv_ruleBoolValue= ruleBoolValue EOF ;
    public final EObject entryRuleBoolValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBoolValue = null;


        try {
            // InternalLustre.g:10388:50: (iv_ruleBoolValue= ruleBoolValue EOF )
            // InternalLustre.g:10389:2: iv_ruleBoolValue= ruleBoolValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBoolValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBoolValue=ruleBoolValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBoolValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBoolValue"


    // $ANTLR start "ruleBoolValue"
    // InternalLustre.g:10395:1: ruleBoolValue returns [EObject current=null] : ( (lv_value_0_0= RULE_BOOLEAN ) ) ;
    public final EObject ruleBoolValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalLustre.g:10401:2: ( ( (lv_value_0_0= RULE_BOOLEAN ) ) )
            // InternalLustre.g:10402:2: ( (lv_value_0_0= RULE_BOOLEAN ) )
            {
            // InternalLustre.g:10402:2: ( (lv_value_0_0= RULE_BOOLEAN ) )
            // InternalLustre.g:10403:3: (lv_value_0_0= RULE_BOOLEAN )
            {
            // InternalLustre.g:10403:3: (lv_value_0_0= RULE_BOOLEAN )
            // InternalLustre.g:10404:4: lv_value_0_0= RULE_BOOLEAN
            {
            lv_value_0_0=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getBoolValueAccess().getValueBOOLEANTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getBoolValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.BOOLEAN");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBoolValue"


    // $ANTLR start "entryRuleStringValue"
    // InternalLustre.g:10423:1: entryRuleStringValue returns [EObject current=null] : iv_ruleStringValue= ruleStringValue EOF ;
    public final EObject entryRuleStringValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringValue = null;


        try {
            // InternalLustre.g:10423:52: (iv_ruleStringValue= ruleStringValue EOF )
            // InternalLustre.g:10424:2: iv_ruleStringValue= ruleStringValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringValue=ruleStringValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringValue"


    // $ANTLR start "ruleStringValue"
    // InternalLustre.g:10430:1: ruleStringValue returns [EObject current=null] : ( (lv_value_0_0= RULE_STRING ) ) ;
    public final EObject ruleStringValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalLustre.g:10436:2: ( ( (lv_value_0_0= RULE_STRING ) ) )
            // InternalLustre.g:10437:2: ( (lv_value_0_0= RULE_STRING ) )
            {
            // InternalLustre.g:10437:2: ( (lv_value_0_0= RULE_STRING ) )
            // InternalLustre.g:10438:3: (lv_value_0_0= RULE_STRING )
            {
            // InternalLustre.g:10438:3: (lv_value_0_0= RULE_STRING )
            // InternalLustre.g:10439:4: lv_value_0_0= RULE_STRING
            {
            lv_value_0_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getStringValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.STRING");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringValue"


    // $ANTLR start "entryRuleVectorValue"
    // InternalLustre.g:10458:1: entryRuleVectorValue returns [EObject current=null] : iv_ruleVectorValue= ruleVectorValue EOF ;
    public final EObject entryRuleVectorValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVectorValue = null;


        try {
            // InternalLustre.g:10458:52: (iv_ruleVectorValue= ruleVectorValue EOF )
            // InternalLustre.g:10459:2: iv_ruleVectorValue= ruleVectorValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVectorValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVectorValue=ruleVectorValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVectorValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVectorValue"


    // $ANTLR start "ruleVectorValue"
    // InternalLustre.g:10465:1: ruleVectorValue returns [EObject current=null] : (otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}' ) ;
    public final EObject ruleVectorValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_values_1_0 = null;

        EObject lv_values_3_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:10471:2: ( (otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}' ) )
            // InternalLustre.g:10472:2: (otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}' )
            {
            // InternalLustre.g:10472:2: (otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}' )
            // InternalLustre.g:10473:3: otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}'
            {
            otherlv_0=(Token)match(input,38,FollowSets000.FOLLOW_141); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getVectorValueAccess().getLeftCurlyBracketKeyword_0());
              		
            }
            // InternalLustre.g:10477:3: ( (lv_values_1_0= ruleVectorValueMember ) )
            // InternalLustre.g:10478:4: (lv_values_1_0= ruleVectorValueMember )
            {
            // InternalLustre.g:10478:4: (lv_values_1_0= ruleVectorValueMember )
            // InternalLustre.g:10479:5: lv_values_1_0= ruleVectorValueMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVectorValueAccess().getValuesVectorValueMemberParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_34);
            lv_values_1_0=ruleVectorValueMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVectorValueRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.VectorValueMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:10496:3: (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )*
            loop235:
            do {
                int alt235=2;
                int LA235_0 = input.LA(1);

                if ( (LA235_0==19) ) {
                    alt235=1;
                }


                switch (alt235) {
            	case 1 :
            	    // InternalLustre.g:10497:4: otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) )
            	    {
            	    otherlv_2=(Token)match(input,19,FollowSets000.FOLLOW_141); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getVectorValueAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalLustre.g:10501:4: ( (lv_values_3_0= ruleVectorValueMember ) )
            	    // InternalLustre.g:10502:5: (lv_values_3_0= ruleVectorValueMember )
            	    {
            	    // InternalLustre.g:10502:5: (lv_values_3_0= ruleVectorValueMember )
            	    // InternalLustre.g:10503:6: lv_values_3_0= ruleVectorValueMember
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getVectorValueAccess().getValuesVectorValueMemberParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_34);
            	    lv_values_3_0=ruleVectorValueMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getVectorValueRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_3_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.VectorValueMember");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop235;
                }
            } while (true);

            otherlv_4=(Token)match(input,39,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getVectorValueAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVectorValue"


    // $ANTLR start "entryRuleVectorValueMember"
    // InternalLustre.g:10529:1: entryRuleVectorValueMember returns [EObject current=null] : iv_ruleVectorValueMember= ruleVectorValueMember EOF ;
    public final EObject entryRuleVectorValueMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVectorValueMember = null;


        try {
            // InternalLustre.g:10529:58: (iv_ruleVectorValueMember= ruleVectorValueMember EOF )
            // InternalLustre.g:10530:2: iv_ruleVectorValueMember= ruleVectorValueMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVectorValueMemberRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVectorValueMember=ruleVectorValueMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVectorValueMember; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVectorValueMember"


    // $ANTLR start "ruleVectorValueMember"
    // InternalLustre.g:10536:1: ruleVectorValueMember returns [EObject current=null] : (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue ) ;
    public final EObject ruleVectorValueMember() throws RecognitionException {
        EObject current = null;

        EObject this_BoolExpression_0 = null;

        EObject this_ValuedExpression_1 = null;

        EObject this_IgnoreValue_2 = null;



        	enterRule();

        try {
            // InternalLustre.g:10542:2: ( (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue ) )
            // InternalLustre.g:10543:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue )
            {
            // InternalLustre.g:10543:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue )
            int alt236=3;
            alt236 = dfa236.predict(input);
            switch (alt236) {
                case 1 :
                    // InternalLustre.g:10544:3: this_BoolExpression_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVectorValueMemberAccess().getBoolExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolExpression_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoolExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalLustre.g:10556:3: this_ValuedExpression_1= ruleValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVectorValueMemberAccess().getValuedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedExpression_1=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalLustre.g:10568:3: this_IgnoreValue_2= ruleIgnoreValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVectorValueMemberAccess().getIgnoreValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IgnoreValue_2=ruleIgnoreValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IgnoreValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVectorValueMember"


    // $ANTLR start "entryRuleIgnoreValue"
    // InternalLustre.g:10583:1: entryRuleIgnoreValue returns [EObject current=null] : iv_ruleIgnoreValue= ruleIgnoreValue EOF ;
    public final EObject entryRuleIgnoreValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIgnoreValue = null;


        try {
            // InternalLustre.g:10583:52: (iv_ruleIgnoreValue= ruleIgnoreValue EOF )
            // InternalLustre.g:10584:2: iv_ruleIgnoreValue= ruleIgnoreValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIgnoreValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIgnoreValue=ruleIgnoreValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIgnoreValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIgnoreValue"


    // $ANTLR start "ruleIgnoreValue"
    // InternalLustre.g:10590:1: ruleIgnoreValue returns [EObject current=null] : ( () otherlv_1= '_' ) ;
    public final EObject ruleIgnoreValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalLustre.g:10596:2: ( ( () otherlv_1= '_' ) )
            // InternalLustre.g:10597:2: ( () otherlv_1= '_' )
            {
            // InternalLustre.g:10597:2: ( () otherlv_1= '_' )
            // InternalLustre.g:10598:3: () otherlv_1= '_'
            {
            // InternalLustre.g:10598:3: ()
            // InternalLustre.g:10599:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getIgnoreValueAccess().getIgnoreValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,90,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getIgnoreValueAccess().get_Keyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIgnoreValue"


    // $ANTLR start "entryRuleAnyValue"
    // InternalLustre.g:10616:1: entryRuleAnyValue returns [EObject current=null] : iv_ruleAnyValue= ruleAnyValue EOF ;
    public final EObject entryRuleAnyValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnyValue = null;


        try {
            // InternalLustre.g:10616:49: (iv_ruleAnyValue= ruleAnyValue EOF )
            // InternalLustre.g:10617:2: iv_ruleAnyValue= ruleAnyValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnyValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnyValue=ruleAnyValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnyValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnyValue"


    // $ANTLR start "ruleAnyValue"
    // InternalLustre.g:10623:1: ruleAnyValue returns [EObject current=null] : (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue ) ;
    public final EObject ruleAnyValue() throws RecognitionException {
        EObject current = null;

        EObject this_IntValue_0 = null;

        EObject this_FloatValue_1 = null;

        EObject this_BoolValue_2 = null;

        EObject this_StringValue_3 = null;



        	enterRule();

        try {
            // InternalLustre.g:10629:2: ( (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue ) )
            // InternalLustre.g:10630:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue )
            {
            // InternalLustre.g:10630:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue )
            int alt237=4;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt237=1;
                }
                break;
            case RULE_FLOAT:
                {
                alt237=2;
                }
                break;
            case RULE_BOOLEAN:
                {
                alt237=3;
                }
                break;
            case RULE_STRING:
                {
                alt237=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 237, 0, input);

                throw nvae;
            }

            switch (alt237) {
                case 1 :
                    // InternalLustre.g:10631:3: this_IntValue_0= ruleIntValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnyValueAccess().getIntValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IntValue_0=ruleIntValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IntValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalLustre.g:10643:3: this_FloatValue_1= ruleFloatValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnyValueAccess().getFloatValueParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FloatValue_1=ruleFloatValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FloatValue_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalLustre.g:10655:3: this_BoolValue_2= ruleBoolValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnyValueAccess().getBoolValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolValue_2=ruleBoolValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoolValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalLustre.g:10667:3: this_StringValue_3= ruleStringValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnyValueAccess().getStringValueParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringValue_3=ruleStringValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringValue_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnyValue"


    // $ANTLR start "entryRuleJsonObjectValue"
    // InternalLustre.g:10682:1: entryRuleJsonObjectValue returns [EObject current=null] : iv_ruleJsonObjectValue= ruleJsonObjectValue EOF ;
    public final EObject entryRuleJsonObjectValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonObjectValue = null;


        try {
            // InternalLustre.g:10682:56: (iv_ruleJsonObjectValue= ruleJsonObjectValue EOF )
            // InternalLustre.g:10683:2: iv_ruleJsonObjectValue= ruleJsonObjectValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonObjectValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonObjectValue=ruleJsonObjectValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonObjectValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonObjectValue"


    // $ANTLR start "ruleJsonObjectValue"
    // InternalLustre.g:10689:1: ruleJsonObjectValue returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleJsonObjectValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_members_2_0 = null;

        EObject lv_members_4_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:10695:2: ( ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' ) )
            // InternalLustre.g:10696:2: ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' )
            {
            // InternalLustre.g:10696:2: ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' )
            // InternalLustre.g:10697:3: () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}'
            {
            // InternalLustre.g:10697:3: ()
            // InternalLustre.g:10698:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getJsonObjectValueAccess().getJsonObjectValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,38,FollowSets000.FOLLOW_142); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJsonObjectValueAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalLustre.g:10711:3: ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )?
            int alt239=2;
            int LA239_0 = input.LA(1);

            if ( (LA239_0==RULE_STRING) ) {
                alt239=1;
            }
            switch (alt239) {
                case 1 :
                    // InternalLustre.g:10712:4: ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )*
                    {
                    // InternalLustre.g:10712:4: ( (lv_members_2_0= ruleJsonObjectMember ) )
                    // InternalLustre.g:10713:5: (lv_members_2_0= ruleJsonObjectMember )
                    {
                    // InternalLustre.g:10713:5: (lv_members_2_0= ruleJsonObjectMember )
                    // InternalLustre.g:10714:6: lv_members_2_0= ruleJsonObjectMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJsonObjectValueAccess().getMembersJsonObjectMemberParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_34);
                    lv_members_2_0=ruleJsonObjectMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJsonObjectValueRule());
                      						}
                      						add(
                      							current,
                      							"members",
                      							lv_members_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalLustre.g:10731:4: (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )*
                    loop238:
                    do {
                        int alt238=2;
                        int LA238_0 = input.LA(1);

                        if ( (LA238_0==19) ) {
                            alt238=1;
                        }


                        switch (alt238) {
                    	case 1 :
                    	    // InternalLustre.g:10732:5: otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) )
                    	    {
                    	    otherlv_3=(Token)match(input,19,FollowSets000.FOLLOW_69); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getJsonObjectValueAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalLustre.g:10736:5: ( (lv_members_4_0= ruleJsonObjectMember ) )
                    	    // InternalLustre.g:10737:6: (lv_members_4_0= ruleJsonObjectMember )
                    	    {
                    	    // InternalLustre.g:10737:6: (lv_members_4_0= ruleJsonObjectMember )
                    	    // InternalLustre.g:10738:7: lv_members_4_0= ruleJsonObjectMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJsonObjectValueAccess().getMembersJsonObjectMemberParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_34);
                    	    lv_members_4_0=ruleJsonObjectMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJsonObjectValueRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"members",
                    	      								lv_members_4_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop238;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,39,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getJsonObjectValueAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonObjectValue"


    // $ANTLR start "entryRuleJsonObjectMember"
    // InternalLustre.g:10765:1: entryRuleJsonObjectMember returns [EObject current=null] : iv_ruleJsonObjectMember= ruleJsonObjectMember EOF ;
    public final EObject entryRuleJsonObjectMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonObjectMember = null;


        try {
            // InternalLustre.g:10765:57: (iv_ruleJsonObjectMember= ruleJsonObjectMember EOF )
            // InternalLustre.g:10766:2: iv_ruleJsonObjectMember= ruleJsonObjectMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonObjectMemberRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonObjectMember=ruleJsonObjectMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonObjectMember; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonObjectMember"


    // $ANTLR start "ruleJsonObjectMember"
    // InternalLustre.g:10772:1: ruleJsonObjectMember returns [EObject current=null] : ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) ) ;
    public final EObject ruleJsonObjectMember() throws RecognitionException {
        EObject current = null;

        Token lv_key_0_0=null;
        Token otherlv_1=null;
        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:10778:2: ( ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) ) )
            // InternalLustre.g:10779:2: ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) )
            {
            // InternalLustre.g:10779:2: ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) )
            // InternalLustre.g:10780:3: ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) )
            {
            // InternalLustre.g:10780:3: ( (lv_key_0_0= RULE_STRING ) )
            // InternalLustre.g:10781:4: (lv_key_0_0= RULE_STRING )
            {
            // InternalLustre.g:10781:4: (lv_key_0_0= RULE_STRING )
            // InternalLustre.g:10782:5: lv_key_0_0= RULE_STRING
            {
            lv_key_0_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_key_0_0, grammarAccess.getJsonObjectMemberAccess().getKeySTRINGTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getJsonObjectMemberRule());
              					}
              					setWithLastConsumed(
              						current,
              						"key",
              						lv_key_0_0,
              						"de.cau.cs.kieler.annotations.Annotations.STRING");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,26,FollowSets000.FOLLOW_143); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJsonObjectMemberAccess().getColonKeyword_1());
              		
            }
            // InternalLustre.g:10802:3: ( (lv_value_2_0= ruleJsonValue ) )
            // InternalLustre.g:10803:4: (lv_value_2_0= ruleJsonValue )
            {
            // InternalLustre.g:10803:4: (lv_value_2_0= ruleJsonValue )
            // InternalLustre.g:10804:5: lv_value_2_0= ruleJsonValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJsonObjectMemberAccess().getValueJsonValueParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_value_2_0=ruleJsonValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJsonObjectMemberRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.JsonValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonObjectMember"


    // $ANTLR start "entryRuleJsonArrayValue"
    // InternalLustre.g:10825:1: entryRuleJsonArrayValue returns [EObject current=null] : iv_ruleJsonArrayValue= ruleJsonArrayValue EOF ;
    public final EObject entryRuleJsonArrayValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonArrayValue = null;


        try {
            // InternalLustre.g:10825:55: (iv_ruleJsonArrayValue= ruleJsonArrayValue EOF )
            // InternalLustre.g:10826:2: iv_ruleJsonArrayValue= ruleJsonArrayValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonArrayValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonArrayValue=ruleJsonArrayValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonArrayValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonArrayValue"


    // $ANTLR start "ruleJsonArrayValue"
    // InternalLustre.g:10832:1: ruleJsonArrayValue returns [EObject current=null] : ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' ) ;
    public final EObject ruleJsonArrayValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_4_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:10838:2: ( ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' ) )
            // InternalLustre.g:10839:2: ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' )
            {
            // InternalLustre.g:10839:2: ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' )
            // InternalLustre.g:10840:3: () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']'
            {
            // InternalLustre.g:10840:3: ()
            // InternalLustre.g:10841:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getJsonArrayValueAccess().getJsonArrayValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,73,FollowSets000.FOLLOW_144); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJsonArrayValueAccess().getLeftSquareBracketKeyword_1());
              		
            }
            // InternalLustre.g:10854:3: ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )?
            int alt241=2;
            int LA241_0 = input.LA(1);

            if ( (LA241_0==RULE_STRING||(LA241_0>=RULE_INT && LA241_0<=RULE_BOOLEAN)||LA241_0==38||LA241_0==73||LA241_0==91) ) {
                alt241=1;
            }
            switch (alt241) {
                case 1 :
                    // InternalLustre.g:10855:4: ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )*
                    {
                    // InternalLustre.g:10855:4: ( (lv_elements_2_0= ruleJsonValue ) )
                    // InternalLustre.g:10856:5: (lv_elements_2_0= ruleJsonValue )
                    {
                    // InternalLustre.g:10856:5: (lv_elements_2_0= ruleJsonValue )
                    // InternalLustre.g:10857:6: lv_elements_2_0= ruleJsonValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJsonArrayValueAccess().getElementsJsonValueParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_145);
                    lv_elements_2_0=ruleJsonValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJsonArrayValueRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.JsonValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalLustre.g:10874:4: (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )*
                    loop240:
                    do {
                        int alt240=2;
                        int LA240_0 = input.LA(1);

                        if ( (LA240_0==19) ) {
                            alt240=1;
                        }


                        switch (alt240) {
                    	case 1 :
                    	    // InternalLustre.g:10875:5: otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) )
                    	    {
                    	    otherlv_3=(Token)match(input,19,FollowSets000.FOLLOW_143); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getJsonArrayValueAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalLustre.g:10879:5: ( (lv_elements_4_0= ruleJsonValue ) )
                    	    // InternalLustre.g:10880:6: (lv_elements_4_0= ruleJsonValue )
                    	    {
                    	    // InternalLustre.g:10880:6: (lv_elements_4_0= ruleJsonValue )
                    	    // InternalLustre.g:10881:7: lv_elements_4_0= ruleJsonValue
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJsonArrayValueAccess().getElementsJsonValueParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_145);
                    	    lv_elements_4_0=ruleJsonValue();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJsonArrayValueRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_4_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.JsonValue");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop240;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getJsonArrayValueAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonArrayValue"


    // $ANTLR start "entryRuleJsonValue"
    // InternalLustre.g:10908:1: entryRuleJsonValue returns [EObject current=null] : iv_ruleJsonValue= ruleJsonValue EOF ;
    public final EObject entryRuleJsonValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonValue = null;


        try {
            // InternalLustre.g:10908:50: (iv_ruleJsonValue= ruleJsonValue EOF )
            // InternalLustre.g:10909:2: iv_ruleJsonValue= ruleJsonValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonValue=ruleJsonValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonValue"


    // $ANTLR start "ruleJsonValue"
    // InternalLustre.g:10915:1: ruleJsonValue returns [EObject current=null] : (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue ) ;
    public final EObject ruleJsonValue() throws RecognitionException {
        EObject current = null;

        EObject this_JsonObjectValue_0 = null;

        EObject this_JsonArrayValue_1 = null;

        EObject this_NullValue_2 = null;

        EObject this_AnyValue_3 = null;



        	enterRule();

        try {
            // InternalLustre.g:10921:2: ( (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue ) )
            // InternalLustre.g:10922:2: (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue )
            {
            // InternalLustre.g:10922:2: (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue )
            int alt242=4;
            switch ( input.LA(1) ) {
            case 38:
                {
                alt242=1;
                }
                break;
            case 73:
                {
                alt242=2;
                }
                break;
            case 91:
                {
                alt242=3;
                }
                break;
            case RULE_STRING:
            case RULE_INT:
            case RULE_FLOAT:
            case RULE_BOOLEAN:
                {
                alt242=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 242, 0, input);

                throw nvae;
            }

            switch (alt242) {
                case 1 :
                    // InternalLustre.g:10923:3: this_JsonObjectValue_0= ruleJsonObjectValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJsonValueAccess().getJsonObjectValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JsonObjectValue_0=ruleJsonObjectValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JsonObjectValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalLustre.g:10935:3: this_JsonArrayValue_1= ruleJsonArrayValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJsonValueAccess().getJsonArrayValueParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JsonArrayValue_1=ruleJsonArrayValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JsonArrayValue_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalLustre.g:10947:3: this_NullValue_2= ruleNullValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJsonValueAccess().getNullValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NullValue_2=ruleNullValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NullValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalLustre.g:10959:3: this_AnyValue_3= ruleAnyValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJsonValueAccess().getAnyValueParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AnyValue_3=ruleAnyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AnyValue_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonValue"


    // $ANTLR start "entryRuleNullValue"
    // InternalLustre.g:10974:1: entryRuleNullValue returns [EObject current=null] : iv_ruleNullValue= ruleNullValue EOF ;
    public final EObject entryRuleNullValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNullValue = null;


        try {
            // InternalLustre.g:10974:50: (iv_ruleNullValue= ruleNullValue EOF )
            // InternalLustre.g:10975:2: iv_ruleNullValue= ruleNullValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNullValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNullValue=ruleNullValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNullValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNullValue"


    // $ANTLR start "ruleNullValue"
    // InternalLustre.g:10981:1: ruleNullValue returns [EObject current=null] : ( () otherlv_1= 'null' ) ;
    public final EObject ruleNullValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalLustre.g:10987:2: ( ( () otherlv_1= 'null' ) )
            // InternalLustre.g:10988:2: ( () otherlv_1= 'null' )
            {
            // InternalLustre.g:10988:2: ( () otherlv_1= 'null' )
            // InternalLustre.g:10989:3: () otherlv_1= 'null'
            {
            // InternalLustre.g:10989:3: ()
            // InternalLustre.g:10990:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getNullValueAccess().getNullValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,91,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getNullValueAccess().getNullKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNullValue"


    // $ANTLR start "entryRuleAnnotation"
    // InternalLustre.g:11007:1: entryRuleAnnotation returns [EObject current=null] : iv_ruleAnnotation= ruleAnnotation EOF ;
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotation = null;


        try {
            // InternalLustre.g:11007:51: (iv_ruleAnnotation= ruleAnnotation EOF )
            // InternalLustre.g:11008:2: iv_ruleAnnotation= ruleAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotation"


    // $ANTLR start "ruleAnnotation"
    // InternalLustre.g:11014:1: ruleAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) ;
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_KeyStringValueAnnotation_1 = null;

        EObject this_TypedKeyStringValueAnnotation_2 = null;

        EObject this_TagAnnotation_3 = null;



        	enterRule();

        try {
            // InternalLustre.g:11020:2: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) )
            // InternalLustre.g:11021:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            {
            // InternalLustre.g:11021:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            int alt243=4;
            alt243 = dfa243.predict(input);
            switch (alt243) {
                case 1 :
                    // InternalLustre.g:11022:3: this_CommentAnnotation_0= ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationAccess().getCommentAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CommentAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalLustre.g:11034:3: this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_KeyStringValueAnnotation_1=ruleKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_KeyStringValueAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalLustre.g:11046:3: this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypedKeyStringValueAnnotation_2=ruleTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypedKeyStringValueAnnotation_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalLustre.g:11058:3: this_TagAnnotation_3= ruleTagAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationAccess().getTagAnnotationParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TagAnnotation_3=ruleTagAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TagAnnotation_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotation"


    // $ANTLR start "entryRuleQuotedStringAnnotation"
    // InternalLustre.g:11073:1: entryRuleQuotedStringAnnotation returns [EObject current=null] : iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF ;
    public final EObject entryRuleQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedStringAnnotation = null;


        try {
            // InternalLustre.g:11073:63: (iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF )
            // InternalLustre.g:11074:2: iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedStringAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedStringAnnotation=ruleQuotedStringAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedStringAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedStringAnnotation"


    // $ANTLR start "ruleQuotedStringAnnotation"
    // InternalLustre.g:11080:1: ruleQuotedStringAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) ;
    public final EObject ruleQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_QuotedKeyStringValueAnnotation_1 = null;

        EObject this_QuotedTypedKeyStringValueAnnotation_2 = null;

        EObject this_TagAnnotation_3 = null;



        	enterRule();

        try {
            // InternalLustre.g:11086:2: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) )
            // InternalLustre.g:11087:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            {
            // InternalLustre.g:11087:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            int alt244=4;
            alt244 = dfa244.predict(input);
            switch (alt244) {
                case 1 :
                    // InternalLustre.g:11088:3: this_CommentAnnotation_0= ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getCommentAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CommentAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalLustre.g:11100:3: this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getQuotedKeyStringValueAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QuotedKeyStringValueAnnotation_1=ruleQuotedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_QuotedKeyStringValueAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalLustre.g:11112:3: this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getQuotedTypedKeyStringValueAnnotationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QuotedTypedKeyStringValueAnnotation_2=ruleQuotedTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_QuotedTypedKeyStringValueAnnotation_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalLustre.g:11124:3: this_TagAnnotation_3= ruleTagAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getTagAnnotationParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TagAnnotation_3=ruleTagAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TagAnnotation_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedStringAnnotation"


    // $ANTLR start "entryRuleCommentAnnotation"
    // InternalLustre.g:11139:1: entryRuleCommentAnnotation returns [EObject current=null] : iv_ruleCommentAnnotation= ruleCommentAnnotation EOF ;
    public final EObject entryRuleCommentAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommentAnnotation = null;


        try {
            // InternalLustre.g:11139:58: (iv_ruleCommentAnnotation= ruleCommentAnnotation EOF )
            // InternalLustre.g:11140:2: iv_ruleCommentAnnotation= ruleCommentAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommentAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCommentAnnotation=ruleCommentAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommentAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommentAnnotation"


    // $ANTLR start "ruleCommentAnnotation"
    // InternalLustre.g:11146:1: ruleCommentAnnotation returns [EObject current=null] : ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) ) ;
    public final EObject ruleCommentAnnotation() throws RecognitionException {
        EObject current = null;

        Token lv_values_0_0=null;


        	enterRule();

        try {
            // InternalLustre.g:11152:2: ( ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) ) )
            // InternalLustre.g:11153:2: ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) )
            {
            // InternalLustre.g:11153:2: ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) )
            // InternalLustre.g:11154:3: (lv_values_0_0= RULE_COMMENT_ANNOTATION )
            {
            // InternalLustre.g:11154:3: (lv_values_0_0= RULE_COMMENT_ANNOTATION )
            // InternalLustre.g:11155:4: lv_values_0_0= RULE_COMMENT_ANNOTATION
            {
            lv_values_0_0=(Token)match(input,RULE_COMMENT_ANNOTATION,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_values_0_0, grammarAccess.getCommentAnnotationAccess().getValuesCOMMENT_ANNOTATIONTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getCommentAnnotationRule());
              				}
              				addWithLastConsumed(
              					current,
              					"values",
              					lv_values_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.COMMENT_ANNOTATION");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommentAnnotation"


    // $ANTLR start "entryRuleCommentAnnotatonSL"
    // InternalLustre.g:11174:1: entryRuleCommentAnnotatonSL returns [EObject current=null] : iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF ;
    public final EObject entryRuleCommentAnnotatonSL() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommentAnnotatonSL = null;


        try {
            // InternalLustre.g:11174:59: (iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF )
            // InternalLustre.g:11175:2: iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommentAnnotatonSLRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCommentAnnotatonSL=ruleCommentAnnotatonSL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommentAnnotatonSL; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommentAnnotatonSL"


    // $ANTLR start "ruleCommentAnnotatonSL"
    // InternalLustre.g:11181:1: ruleCommentAnnotatonSL returns [EObject current=null] : ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) ) ;
    public final EObject ruleCommentAnnotatonSL() throws RecognitionException {
        EObject current = null;

        Token lv_values_0_0=null;


        	enterRule();

        try {
            // InternalLustre.g:11187:2: ( ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) ) )
            // InternalLustre.g:11188:2: ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) )
            {
            // InternalLustre.g:11188:2: ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) )
            // InternalLustre.g:11189:3: (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION )
            {
            // InternalLustre.g:11189:3: (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION )
            // InternalLustre.g:11190:4: lv_values_0_0= RULE_SL_COMMENT_ANNOTATION
            {
            lv_values_0_0=(Token)match(input,RULE_SL_COMMENT_ANNOTATION,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_values_0_0, grammarAccess.getCommentAnnotatonSLAccess().getValuesSL_COMMENT_ANNOTATIONTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getCommentAnnotatonSLRule());
              				}
              				addWithLastConsumed(
              					current,
              					"values",
              					lv_values_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.SL_COMMENT_ANNOTATION");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommentAnnotatonSL"


    // $ANTLR start "entryRuleTagAnnotation"
    // InternalLustre.g:11209:1: entryRuleTagAnnotation returns [EObject current=null] : iv_ruleTagAnnotation= ruleTagAnnotation EOF ;
    public final EObject entryRuleTagAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTagAnnotation = null;


        try {
            // InternalLustre.g:11209:54: (iv_ruleTagAnnotation= ruleTagAnnotation EOF )
            // InternalLustre.g:11210:2: iv_ruleTagAnnotation= ruleTagAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTagAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTagAnnotation=ruleTagAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTagAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTagAnnotation"


    // $ANTLR start "ruleTagAnnotation"
    // InternalLustre.g:11216:1: ruleTagAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ) ;
    public final EObject ruleTagAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:11222:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ) )
            // InternalLustre.g:11223:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) )
            {
            // InternalLustre.g:11223:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) )
            // InternalLustre.g:11224:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) )
            {
            otherlv_0=(Token)match(input,92,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTagAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalLustre.g:11228:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalLustre.g:11229:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalLustre.g:11229:4: (lv_name_1_0= ruleExtendedID )
            // InternalLustre.g:11230:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTagAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTagAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTagAnnotation"


    // $ANTLR start "entryRulePragmaTag"
    // InternalLustre.g:11251:1: entryRulePragmaTag returns [EObject current=null] : iv_rulePragmaTag= rulePragmaTag EOF ;
    public final EObject entryRulePragmaTag() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePragmaTag = null;


        try {
            // InternalLustre.g:11251:50: (iv_rulePragmaTag= rulePragmaTag EOF )
            // InternalLustre.g:11252:2: iv_rulePragmaTag= rulePragmaTag EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPragmaTagRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePragmaTag=rulePragmaTag();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePragmaTag; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePragmaTag"


    // $ANTLR start "rulePragmaTag"
    // InternalLustre.g:11258:1: rulePragmaTag returns [EObject current=null] : (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ) ;
    public final EObject rulePragmaTag() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:11264:2: ( (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ) )
            // InternalLustre.g:11265:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) )
            {
            // InternalLustre.g:11265:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) )
            // InternalLustre.g:11266:3: otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) )
            {
            otherlv_0=(Token)match(input,93,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPragmaTagAccess().getNumberSignKeyword_0());
              		
            }
            // InternalLustre.g:11270:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalLustre.g:11271:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalLustre.g:11271:4: (lv_name_1_0= ruleExtendedID )
            // InternalLustre.g:11272:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPragmaTagAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPragmaTagRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePragmaTag"


    // $ANTLR start "entryRuleKeyStringValueAnnotation"
    // InternalLustre.g:11293:1: entryRuleKeyStringValueAnnotation returns [EObject current=null] : iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF ;
    public final EObject entryRuleKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeyStringValueAnnotation = null;


        try {
            // InternalLustre.g:11293:65: (iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF )
            // InternalLustre.g:11294:2: iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleKeyStringValueAnnotation=ruleKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeyStringValueAnnotation"


    // $ANTLR start "ruleKeyStringValueAnnotation"
    // InternalLustre.g:11300:1: ruleKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) ;
    public final EObject ruleKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:11306:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) )
            // InternalLustre.g:11307:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalLustre.g:11307:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            // InternalLustre.g:11308:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,92,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalLustre.g:11312:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalLustre.g:11313:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalLustre.g:11313:4: (lv_name_1_0= ruleExtendedID )
            // InternalLustre.g:11314:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_146);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:11331:3: ( (lv_values_2_0= ruleEStringAllTypes ) )
            // InternalLustre.g:11332:4: (lv_values_2_0= ruleEStringAllTypes )
            {
            // InternalLustre.g:11332:4: (lv_values_2_0= ruleEStringAllTypes )
            // InternalLustre.g:11333:5: lv_values_2_0= ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_147);
            lv_values_2_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:11350:3: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            loop245:
            do {
                int alt245=2;
                int LA245_0 = input.LA(1);

                if ( (LA245_0==19) ) {
                    alt245=1;
                }


                switch (alt245) {
            	case 1 :
            	    // InternalLustre.g:11351:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    {
            	    otherlv_3=(Token)match(input,19,FollowSets000.FOLLOW_146); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalLustre.g:11355:4: ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    // InternalLustre.g:11356:5: (lv_values_4_0= ruleEStringAllTypes )
            	    {
            	    // InternalLustre.g:11356:5: (lv_values_4_0= ruleEStringAllTypes )
            	    // InternalLustre.g:11357:6: lv_values_4_0= ruleEStringAllTypes
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_147);
            	    lv_values_4_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop245;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeyStringValueAnnotation"


    // $ANTLR start "entryRuleRestrictedKeyStringValueAnnotation"
    // InternalLustre.g:11379:1: entryRuleRestrictedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleRestrictedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictedKeyStringValueAnnotation = null;


        try {
            // InternalLustre.g:11379:75: (iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF )
            // InternalLustre.g:11380:2: iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRestrictedKeyStringValueAnnotation=ruleRestrictedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictedKeyStringValueAnnotation"


    // $ANTLR start "ruleRestrictedKeyStringValueAnnotation"
    // InternalLustre.g:11386:1: ruleRestrictedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* ) ;
    public final EObject ruleRestrictedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:11392:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* ) )
            // InternalLustre.g:11393:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* )
            {
            // InternalLustre.g:11393:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* )
            // InternalLustre.g:11394:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )*
            {
            otherlv_0=(Token)match(input,92,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalLustre.g:11398:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalLustre.g:11399:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalLustre.g:11399:4: (lv_name_1_0= ruleExtendedID )
            // InternalLustre.g:11400:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_148);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:11417:3: ( (lv_values_2_0= ruleEStringBoolean ) )
            // InternalLustre.g:11418:4: (lv_values_2_0= ruleEStringBoolean )
            {
            // InternalLustre.g:11418:4: (lv_values_2_0= ruleEStringBoolean )
            // InternalLustre.g:11419:5: lv_values_2_0= ruleEStringBoolean
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_147);
            lv_values_2_0=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:11436:3: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )*
            loop246:
            do {
                int alt246=2;
                int LA246_0 = input.LA(1);

                if ( (LA246_0==19) ) {
                    alt246=1;
                }


                switch (alt246) {
            	case 1 :
            	    // InternalLustre.g:11437:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) )
            	    {
            	    otherlv_3=(Token)match(input,19,FollowSets000.FOLLOW_148); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalLustre.g:11441:4: ( (lv_values_4_0= ruleEStringBoolean ) )
            	    // InternalLustre.g:11442:5: (lv_values_4_0= ruleEStringBoolean )
            	    {
            	    // InternalLustre.g:11442:5: (lv_values_4_0= ruleEStringBoolean )
            	    // InternalLustre.g:11443:6: lv_values_4_0= ruleEStringBoolean
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_147);
            	    lv_values_4_0=ruleEStringBoolean();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop246;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleStringPragma"
    // InternalLustre.g:11465:1: entryRuleStringPragma returns [EObject current=null] : iv_ruleStringPragma= ruleStringPragma EOF ;
    public final EObject entryRuleStringPragma() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringPragma = null;


        try {
            // InternalLustre.g:11465:53: (iv_ruleStringPragma= ruleStringPragma EOF )
            // InternalLustre.g:11466:2: iv_ruleStringPragma= ruleStringPragma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringPragma=ruleStringPragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringPragma; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringPragma"


    // $ANTLR start "ruleStringPragma"
    // InternalLustre.g:11472:1: ruleStringPragma returns [EObject current=null] : (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) ;
    public final EObject ruleStringPragma() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:11478:2: ( (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) )
            // InternalLustre.g:11479:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalLustre.g:11479:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            // InternalLustre.g:11480:3: otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,93,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getStringPragmaAccess().getNumberSignKeyword_0());
              		
            }
            // InternalLustre.g:11484:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalLustre.g:11485:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalLustre.g:11485:4: (lv_name_1_0= ruleExtendedID )
            // InternalLustre.g:11486:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStringPragmaAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_146);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStringPragmaRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:11503:3: ( (lv_values_2_0= ruleEStringAllTypes ) )
            // InternalLustre.g:11504:4: (lv_values_2_0= ruleEStringAllTypes )
            {
            // InternalLustre.g:11504:4: (lv_values_2_0= ruleEStringAllTypes )
            // InternalLustre.g:11505:5: lv_values_2_0= ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStringPragmaAccess().getValuesEStringAllTypesParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_147);
            lv_values_2_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStringPragmaRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:11522:3: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            loop247:
            do {
                int alt247=2;
                int LA247_0 = input.LA(1);

                if ( (LA247_0==19) ) {
                    alt247=1;
                }


                switch (alt247) {
            	case 1 :
            	    // InternalLustre.g:11523:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    {
            	    otherlv_3=(Token)match(input,19,FollowSets000.FOLLOW_146); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getStringPragmaAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalLustre.g:11527:4: ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    // InternalLustre.g:11528:5: (lv_values_4_0= ruleEStringAllTypes )
            	    {
            	    // InternalLustre.g:11528:5: (lv_values_4_0= ruleEStringAllTypes )
            	    // InternalLustre.g:11529:6: lv_values_4_0= ruleEStringAllTypes
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getStringPragmaAccess().getValuesEStringAllTypesParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_147);
            	    lv_values_4_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getStringPragmaRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop247;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringPragma"


    // $ANTLR start "entryRuleTypedKeyStringValueAnnotation"
    // InternalLustre.g:11551:1: entryRuleTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypedKeyStringValueAnnotation = null;


        try {
            // InternalLustre.g:11551:70: (iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF )
            // InternalLustre.g:11552:2: iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypedKeyStringValueAnnotation=ruleTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleTypedKeyStringValueAnnotation"
    // InternalLustre.g:11558:1: ruleTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* ) ;
    public final EObject ruleTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_values_5_0 = null;

        AntlrDatatypeRuleToken lv_values_7_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:11564:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* ) )
            // InternalLustre.g:11565:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalLustre.g:11565:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* )
            // InternalLustre.g:11566:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,92,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalLustre.g:11570:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalLustre.g:11571:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalLustre.g:11571:4: (lv_name_1_0= ruleExtendedID )
            // InternalLustre.g:11572:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_149);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,73,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalLustre.g:11593:3: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalLustre.g:11594:4: (lv_type_3_0= ruleExtendedID )
            {
            // InternalLustre.g:11594:4: (lv_type_3_0= ruleExtendedID )
            // InternalLustre.g:11595:5: lv_type_3_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_106);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_3_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,74,FollowSets000.FOLLOW_146); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
              		
            }
            // InternalLustre.g:11616:3: ( (lv_values_5_0= ruleEStringAllTypes ) )
            // InternalLustre.g:11617:4: (lv_values_5_0= ruleEStringAllTypes )
            {
            // InternalLustre.g:11617:4: (lv_values_5_0= ruleEStringAllTypes )
            // InternalLustre.g:11618:5: lv_values_5_0= ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_5_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_147);
            lv_values_5_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_5_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:11635:3: (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )*
            loop248:
            do {
                int alt248=2;
                int LA248_0 = input.LA(1);

                if ( (LA248_0==19) ) {
                    alt248=1;
                }


                switch (alt248) {
            	case 1 :
            	    // InternalLustre.g:11636:4: otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) )
            	    {
            	    otherlv_6=(Token)match(input,19,FollowSets000.FOLLOW_146); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	      			
            	    }
            	    // InternalLustre.g:11640:4: ( (lv_values_7_0= ruleEStringAllTypes ) )
            	    // InternalLustre.g:11641:5: (lv_values_7_0= ruleEStringAllTypes )
            	    {
            	    // InternalLustre.g:11641:5: (lv_values_7_0= ruleEStringAllTypes )
            	    // InternalLustre.g:11642:6: lv_values_7_0= ruleEStringAllTypes
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_6_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_147);
            	    lv_values_7_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_7_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop248;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleRestrictedTypedKeyStringValueAnnotation"
    // InternalLustre.g:11664:1: entryRuleRestrictedTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleRestrictedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictedTypedKeyStringValueAnnotation = null;


        try {
            // InternalLustre.g:11664:80: (iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF )
            // InternalLustre.g:11665:2: iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRestrictedTypedKeyStringValueAnnotation=ruleRestrictedTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictedTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictedTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleRestrictedTypedKeyStringValueAnnotation"
    // InternalLustre.g:11671:1: ruleRestrictedTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* ) ;
    public final EObject ruleRestrictedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_values_5_0 = null;

        AntlrDatatypeRuleToken lv_values_7_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:11677:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* ) )
            // InternalLustre.g:11678:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* )
            {
            // InternalLustre.g:11678:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* )
            // InternalLustre.g:11679:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )*
            {
            otherlv_0=(Token)match(input,92,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalLustre.g:11683:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalLustre.g:11684:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalLustre.g:11684:4: (lv_name_1_0= ruleExtendedID )
            // InternalLustre.g:11685:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_149);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,73,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalLustre.g:11706:3: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalLustre.g:11707:4: (lv_type_3_0= ruleExtendedID )
            {
            // InternalLustre.g:11707:4: (lv_type_3_0= ruleExtendedID )
            // InternalLustre.g:11708:5: lv_type_3_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_106);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_3_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,74,FollowSets000.FOLLOW_148); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
              		
            }
            // InternalLustre.g:11729:3: ( (lv_values_5_0= ruleEStringBoolean ) )
            // InternalLustre.g:11730:4: (lv_values_5_0= ruleEStringBoolean )
            {
            // InternalLustre.g:11730:4: (lv_values_5_0= ruleEStringBoolean )
            // InternalLustre.g:11731:5: lv_values_5_0= ruleEStringBoolean
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_5_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_147);
            lv_values_5_0=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_5_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:11748:3: (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )*
            loop249:
            do {
                int alt249=2;
                int LA249_0 = input.LA(1);

                if ( (LA249_0==19) ) {
                    alt249=1;
                }


                switch (alt249) {
            	case 1 :
            	    // InternalLustre.g:11749:4: otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) )
            	    {
            	    otherlv_6=(Token)match(input,19,FollowSets000.FOLLOW_148); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	      			
            	    }
            	    // InternalLustre.g:11753:4: ( (lv_values_7_0= ruleEStringBoolean ) )
            	    // InternalLustre.g:11754:5: (lv_values_7_0= ruleEStringBoolean )
            	    {
            	    // InternalLustre.g:11754:5: (lv_values_7_0= ruleEStringBoolean )
            	    // InternalLustre.g:11755:6: lv_values_7_0= ruleEStringBoolean
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_6_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_147);
            	    lv_values_7_0=ruleEStringBoolean();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_7_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop249;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictedTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleQuotedKeyStringValueAnnotation"
    // InternalLustre.g:11777:1: entryRuleQuotedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleQuotedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedKeyStringValueAnnotation = null;


        try {
            // InternalLustre.g:11777:71: (iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF )
            // InternalLustre.g:11778:2: iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedKeyStringValueAnnotation=ruleQuotedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedKeyStringValueAnnotation"


    // $ANTLR start "ruleQuotedKeyStringValueAnnotation"
    // InternalLustre.g:11784:1: ruleQuotedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* ) ;
    public final EObject ruleQuotedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_values_2_0=null;
        Token otherlv_3=null;
        Token lv_values_4_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:11790:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* ) )
            // InternalLustre.g:11791:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* )
            {
            // InternalLustre.g:11791:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* )
            // InternalLustre.g:11792:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )*
            {
            otherlv_0=(Token)match(input,92,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalLustre.g:11796:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalLustre.g:11797:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalLustre.g:11797:4: (lv_name_1_0= ruleExtendedID )
            // InternalLustre.g:11798:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_69);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQuotedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalLustre.g:11815:3: ( (lv_values_2_0= RULE_STRING ) )
            // InternalLustre.g:11816:4: (lv_values_2_0= RULE_STRING )
            {
            // InternalLustre.g:11816:4: (lv_values_2_0= RULE_STRING )
            // InternalLustre.g:11817:5: lv_values_2_0= RULE_STRING
            {
            lv_values_2_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_147); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_values_2_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getQuotedKeyStringValueAnnotationRule());
              					}
              					addWithLastConsumed(
              						current,
              						"values",
              						lv_values_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.STRING");
              				
            }

            }


            }

            // InternalLustre.g:11833:3: (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )*
            loop250:
            do {
                int alt250=2;
                int LA250_0 = input.LA(1);

                if ( (LA250_0==19) ) {
                    alt250=1;
                }


                switch (alt250) {
            	case 1 :
            	    // InternalLustre.g:11834:4: otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) )
            	    {
            	    otherlv_3=(Token)match(input,19,FollowSets000.FOLLOW_69); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalLustre.g:11838:4: ( (lv_values_4_0= RULE_STRING ) )
            	    // InternalLustre.g:11839:5: (lv_values_4_0= RULE_STRING )
            	    {
            	    // InternalLustre.g:11839:5: (lv_values_4_0= RULE_STRING )
            	    // InternalLustre.g:11840:6: lv_values_4_0= RULE_STRING
            	    {
            	    lv_values_4_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_147); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_values_4_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_3_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getQuotedKeyStringValueAnnotationRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.STRING");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop250;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleQuotedTypedKeyStringValueAnnotation"
    // InternalLustre.g:11861:1: entryRuleQuotedTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleQuotedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedTypedKeyStringValueAnnotation = null;


        try {
            // InternalLustre.g:11861:76: (iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF )
            // InternalLustre.g:11862:2: iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedTypedKeyStringValueAnnotation=ruleQuotedTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleQuotedTypedKeyStringValueAnnotation"
    // InternalLustre.g:11868:1: ruleQuotedTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* ) ;
    public final EObject ruleQuotedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_values_5_0=null;
        Token otherlv_6=null;
        Token lv_values_7_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;



        	enterRule();

        try {
            // InternalLustre.g:11874:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* ) )
            // InternalLustre.g:11875:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* )
            {
            // InternalLustre.g:11875:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* )
            // InternalLustre.g:11876:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )*
            {
            otherlv_0=(Token)match(input,92,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalLustre.g:11880:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalLustre.g:11881:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalLustre.g:11881:4: (lv_name_1_0= ruleExtendedID )
            // InternalLustre.g:11882:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_149);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,73,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalLustre.g:11903:3: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalLustre.g:11904:4: (lv_type_3_0= ruleExtendedID )
            {
            // InternalLustre.g:11904:4: (lv_type_3_0= ruleExtendedID )
            // InternalLustre.g:11905:5: lv_type_3_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_106);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_3_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,74,FollowSets000.FOLLOW_69); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
              		
            }
            // InternalLustre.g:11926:3: ( (lv_values_5_0= RULE_STRING ) )
            // InternalLustre.g:11927:4: (lv_values_5_0= RULE_STRING )
            {
            // InternalLustre.g:11927:4: (lv_values_5_0= RULE_STRING )
            // InternalLustre.g:11928:5: lv_values_5_0= RULE_STRING
            {
            lv_values_5_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_147); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_values_5_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_5_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              					}
              					addWithLastConsumed(
              						current,
              						"values",
              						lv_values_5_0,
              						"de.cau.cs.kieler.annotations.Annotations.STRING");
              				
            }

            }


            }

            // InternalLustre.g:11944:3: (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )*
            loop251:
            do {
                int alt251=2;
                int LA251_0 = input.LA(1);

                if ( (LA251_0==19) ) {
                    alt251=1;
                }


                switch (alt251) {
            	case 1 :
            	    // InternalLustre.g:11945:4: otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) )
            	    {
            	    otherlv_6=(Token)match(input,19,FollowSets000.FOLLOW_69); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	      			
            	    }
            	    // InternalLustre.g:11949:4: ( (lv_values_7_0= RULE_STRING ) )
            	    // InternalLustre.g:11950:5: (lv_values_7_0= RULE_STRING )
            	    {
            	    // InternalLustre.g:11950:5: (lv_values_7_0= RULE_STRING )
            	    // InternalLustre.g:11951:6: lv_values_7_0= RULE_STRING
            	    {
            	    lv_values_7_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_147); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_values_7_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_6_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"values",
            	      							lv_values_7_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.STRING");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop251;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleEStringBoolean"
    // InternalLustre.g:11972:1: entryRuleEStringBoolean returns [String current=null] : iv_ruleEStringBoolean= ruleEStringBoolean EOF ;
    public final String entryRuleEStringBoolean() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEStringBoolean = null;


        try {
            // InternalLustre.g:11972:54: (iv_ruleEStringBoolean= ruleEStringBoolean EOF )
            // InternalLustre.g:11973:2: iv_ruleEStringBoolean= ruleEStringBoolean EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEStringBooleanRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEStringBoolean=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEStringBoolean.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEStringBoolean"


    // $ANTLR start "ruleEStringBoolean"
    // InternalLustre.g:11979:1: ruleEStringBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN ) ;
    public final AntlrDatatypeRuleToken ruleEStringBoolean() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_BOOLEAN_2=null;
        AntlrDatatypeRuleToken this_ExtendedID_1 = null;



        	enterRule();

        try {
            // InternalLustre.g:11985:2: ( (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN ) )
            // InternalLustre.g:11986:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN )
            {
            // InternalLustre.g:11986:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN )
            int alt252=3;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt252=1;
                }
                break;
            case RULE_ID:
                {
                alt252=2;
                }
                break;
            case RULE_BOOLEAN:
                {
                alt252=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 252, 0, input);

                throw nvae;
            }

            switch (alt252) {
                case 1 :
                    // InternalLustre.g:11987:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_0, grammarAccess.getEStringBooleanAccess().getSTRINGTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalLustre.g:11995:3: this_ExtendedID_1= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringBooleanAccess().getExtendedIDParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExtendedID_1=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ExtendedID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalLustre.g:12006:3: this_BOOLEAN_2= RULE_BOOLEAN
                    {
                    this_BOOLEAN_2=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_BOOLEAN_2);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_BOOLEAN_2, grammarAccess.getEStringBooleanAccess().getBOOLEANTerminalRuleCall_2());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEStringBoolean"


    // $ANTLR start "entryRuleEStringAllTypes"
    // InternalLustre.g:12017:1: entryRuleEStringAllTypes returns [String current=null] : iv_ruleEStringAllTypes= ruleEStringAllTypes EOF ;
    public final String entryRuleEStringAllTypes() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEStringAllTypes = null;


        try {
            // InternalLustre.g:12017:55: (iv_ruleEStringAllTypes= ruleEStringAllTypes EOF )
            // InternalLustre.g:12018:2: iv_ruleEStringAllTypes= ruleEStringAllTypes EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEStringAllTypesRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEStringAllTypes=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEStringAllTypes.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEStringAllTypes"


    // $ANTLR start "ruleEStringAllTypes"
    // InternalLustre.g:12024:1: ruleEStringAllTypes returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger ) ;
    public final AntlrDatatypeRuleToken ruleEStringAllTypes() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_BOOLEAN_2=null;
        AntlrDatatypeRuleToken this_ExtendedID_1 = null;

        AntlrDatatypeRuleToken this_Integer_3 = null;

        AntlrDatatypeRuleToken this_Floateger_4 = null;



        	enterRule();

        try {
            // InternalLustre.g:12030:2: ( (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger ) )
            // InternalLustre.g:12031:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger )
            {
            // InternalLustre.g:12031:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger )
            int alt253=5;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt253=1;
                }
                break;
            case RULE_ID:
                {
                alt253=2;
                }
                break;
            case RULE_BOOLEAN:
                {
                alt253=3;
                }
                break;
            case 85:
                {
                int LA253_4 = input.LA(2);

                if ( (LA253_4==RULE_INT) ) {
                    alt253=4;
                }
                else if ( (LA253_4==RULE_FLOAT) ) {
                    alt253=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 253, 4, input);

                    throw nvae;
                }
                }
                break;
            case RULE_INT:
                {
                alt253=4;
                }
                break;
            case RULE_FLOAT:
                {
                alt253=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 253, 0, input);

                throw nvae;
            }

            switch (alt253) {
                case 1 :
                    // InternalLustre.g:12032:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_0, grammarAccess.getEStringAllTypesAccess().getSTRINGTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalLustre.g:12040:3: this_ExtendedID_1= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringAllTypesAccess().getExtendedIDParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExtendedID_1=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ExtendedID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalLustre.g:12051:3: this_BOOLEAN_2= RULE_BOOLEAN
                    {
                    this_BOOLEAN_2=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_BOOLEAN_2);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_BOOLEAN_2, grammarAccess.getEStringAllTypesAccess().getBOOLEANTerminalRuleCall_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalLustre.g:12059:3: this_Integer_3= ruleInteger
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringAllTypesAccess().getIntegerParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Integer_3=ruleInteger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_Integer_3);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalLustre.g:12070:3: this_Floateger_4= ruleFloateger
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringAllTypesAccess().getFloategerParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Floateger_4=ruleFloateger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_Floateger_4);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEStringAllTypes"


    // $ANTLR start "entryRuleExtendedID"
    // InternalLustre.g:12084:1: entryRuleExtendedID returns [String current=null] : iv_ruleExtendedID= ruleExtendedID EOF ;
    public final String entryRuleExtendedID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleExtendedID = null;


        try {
            // InternalLustre.g:12084:50: (iv_ruleExtendedID= ruleExtendedID EOF )
            // InternalLustre.g:12085:2: iv_ruleExtendedID= ruleExtendedID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendedIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExtendedID=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExtendedID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExtendedID"


    // $ANTLR start "ruleExtendedID"
    // InternalLustre.g:12091:1: ruleExtendedID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? ) ;
    public final AntlrDatatypeRuleToken ruleExtendedID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;
        Token this_ID_3=null;
        Token this_INT_5=null;


        	enterRule();

        try {
            // InternalLustre.g:12097:2: ( (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? ) )
            // InternalLustre.g:12098:2: (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? )
            {
            // InternalLustre.g:12098:2: (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? )
            // InternalLustre.g:12099:3: this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )?
            {
            this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_150); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_ID_0, grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_0());
              		
            }
            // InternalLustre.g:12106:3: ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )*
            loop255:
            do {
                int alt255=2;
                int LA255_0 = input.LA(1);

                if ( (LA255_0==85) ) {
                    int LA255_2 = input.LA(2);

                    if ( (LA255_2==RULE_ID) ) {
                        alt255=1;
                    }


                }
                else if ( (LA255_0==44) ) {
                    alt255=1;
                }


                switch (alt255) {
            	case 1 :
            	    // InternalLustre.g:12107:4: (kw= '.' | kw= '-' ) this_ID_3= RULE_ID
            	    {
            	    // InternalLustre.g:12107:4: (kw= '.' | kw= '-' )
            	    int alt254=2;
            	    int LA254_0 = input.LA(1);

            	    if ( (LA254_0==44) ) {
            	        alt254=1;
            	    }
            	    else if ( (LA254_0==85) ) {
            	        alt254=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 254, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt254) {
            	        case 1 :
            	            // InternalLustre.g:12108:5: kw= '.'
            	            {
            	            kw=(Token)match(input,44,FollowSets000.FOLLOW_5); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getExtendedIDAccess().getFullStopKeyword_1_0_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalLustre.g:12114:5: kw= '-'
            	            {
            	            kw=(Token)match(input,85,FollowSets000.FOLLOW_5); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getExtendedIDAccess().getHyphenMinusKeyword_1_0_1());
            	              				
            	            }

            	            }
            	            break;

            	    }

            	    this_ID_3=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_150); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_ID_3);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(this_ID_3, grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_1_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop255;
                }
            } while (true);

            // InternalLustre.g:12128:3: (kw= '#' this_INT_5= RULE_INT )?
            int alt256=2;
            int LA256_0 = input.LA(1);

            if ( (LA256_0==93) ) {
                alt256=1;
            }
            switch (alt256) {
                case 1 :
                    // InternalLustre.g:12129:4: kw= '#' this_INT_5= RULE_INT
                    {
                    kw=(Token)match(input,93,FollowSets000.FOLLOW_138); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getExtendedIDAccess().getNumberSignKeyword_2_0());
                      			
                    }
                    this_INT_5=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_INT_5);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_INT_5, grammarAccess.getExtendedIDAccess().getINTTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExtendedID"


    // $ANTLR start "entryRuleInteger"
    // InternalLustre.g:12146:1: entryRuleInteger returns [String current=null] : iv_ruleInteger= ruleInteger EOF ;
    public final String entryRuleInteger() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleInteger = null;


        try {
            // InternalLustre.g:12146:47: (iv_ruleInteger= ruleInteger EOF )
            // InternalLustre.g:12147:2: iv_ruleInteger= ruleInteger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInteger=ruleInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInteger.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInteger"


    // $ANTLR start "ruleInteger"
    // InternalLustre.g:12153:1: ruleInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_INT_1= RULE_INT ) ;
    public final AntlrDatatypeRuleToken ruleInteger() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_1=null;


        	enterRule();

        try {
            // InternalLustre.g:12159:2: ( ( (kw= '-' )? this_INT_1= RULE_INT ) )
            // InternalLustre.g:12160:2: ( (kw= '-' )? this_INT_1= RULE_INT )
            {
            // InternalLustre.g:12160:2: ( (kw= '-' )? this_INT_1= RULE_INT )
            // InternalLustre.g:12161:3: (kw= '-' )? this_INT_1= RULE_INT
            {
            // InternalLustre.g:12161:3: (kw= '-' )?
            int alt257=2;
            int LA257_0 = input.LA(1);

            if ( (LA257_0==85) ) {
                alt257=1;
            }
            switch (alt257) {
                case 1 :
                    // InternalLustre.g:12162:4: kw= '-'
                    {
                    kw=(Token)match(input,85,FollowSets000.FOLLOW_138); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getIntegerAccess().getHyphenMinusKeyword_0());
                      			
                    }

                    }
                    break;

            }

            this_INT_1=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_INT_1);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_INT_1, grammarAccess.getIntegerAccess().getINTTerminalRuleCall_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInteger"


    // $ANTLR start "entryRuleFloateger"
    // InternalLustre.g:12179:1: entryRuleFloateger returns [String current=null] : iv_ruleFloateger= ruleFloateger EOF ;
    public final String entryRuleFloateger() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFloateger = null;


        try {
            // InternalLustre.g:12179:49: (iv_ruleFloateger= ruleFloateger EOF )
            // InternalLustre.g:12180:2: iv_ruleFloateger= ruleFloateger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFloategerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFloateger=ruleFloateger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFloateger.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFloateger"


    // $ANTLR start "ruleFloateger"
    // InternalLustre.g:12186:1: ruleFloateger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT ) ;
    public final AntlrDatatypeRuleToken ruleFloateger() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_FLOAT_1=null;


        	enterRule();

        try {
            // InternalLustre.g:12192:2: ( ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT ) )
            // InternalLustre.g:12193:2: ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT )
            {
            // InternalLustre.g:12193:2: ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT )
            // InternalLustre.g:12194:3: (kw= '-' )? this_FLOAT_1= RULE_FLOAT
            {
            // InternalLustre.g:12194:3: (kw= '-' )?
            int alt258=2;
            int LA258_0 = input.LA(1);

            if ( (LA258_0==85) ) {
                alt258=1;
            }
            switch (alt258) {
                case 1 :
                    // InternalLustre.g:12195:4: kw= '-'
                    {
                    kw=(Token)match(input,85,FollowSets000.FOLLOW_151); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getFloategerAccess().getHyphenMinusKeyword_0());
                      			
                    }

                    }
                    break;

            }

            this_FLOAT_1=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_FLOAT_1);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_FLOAT_1, grammarAccess.getFloategerAccess().getFLOATTerminalRuleCall_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFloateger"


    // $ANTLR start "ruleValueType"
    // InternalLustre.g:12212:1: ruleValueType returns [Enumerator current=null] : ( (enumLiteral_0= 'bool' ) | (enumLiteral_1= 'int' ) | (enumLiteral_2= 'real' ) ) ;
    public final Enumerator ruleValueType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalLustre.g:12218:2: ( ( (enumLiteral_0= 'bool' ) | (enumLiteral_1= 'int' ) | (enumLiteral_2= 'real' ) ) )
            // InternalLustre.g:12219:2: ( (enumLiteral_0= 'bool' ) | (enumLiteral_1= 'int' ) | (enumLiteral_2= 'real' ) )
            {
            // InternalLustre.g:12219:2: ( (enumLiteral_0= 'bool' ) | (enumLiteral_1= 'int' ) | (enumLiteral_2= 'real' ) )
            int alt259=3;
            switch ( input.LA(1) ) {
            case 94:
                {
                alt259=1;
                }
                break;
            case 95:
                {
                alt259=2;
                }
                break;
            case 96:
                {
                alt259=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 259, 0, input);

                throw nvae;
            }

            switch (alt259) {
                case 1 :
                    // InternalLustre.g:12220:3: (enumLiteral_0= 'bool' )
                    {
                    // InternalLustre.g:12220:3: (enumLiteral_0= 'bool' )
                    // InternalLustre.g:12221:4: enumLiteral_0= 'bool'
                    {
                    enumLiteral_0=(Token)match(input,94,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:12228:3: (enumLiteral_1= 'int' )
                    {
                    // InternalLustre.g:12228:3: (enumLiteral_1= 'int' )
                    // InternalLustre.g:12229:4: enumLiteral_1= 'int'
                    {
                    enumLiteral_1=(Token)match(input,95,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLustre.g:12236:3: (enumLiteral_2= 'real' )
                    {
                    // InternalLustre.g:12236:3: (enumLiteral_2= 'real' )
                    // InternalLustre.g:12237:4: enumLiteral_2= 'real'
                    {
                    enumLiteral_2=(Token)match(input,96,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueType"


    // $ANTLR start "ruleEnumType"
    // InternalLustre.g:12247:1: ruleEnumType returns [Enumerator current=null] : (enumLiteral_0= 'enum' ) ;
    public final Enumerator ruleEnumType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalLustre.g:12253:2: ( (enumLiteral_0= 'enum' ) )
            // InternalLustre.g:12254:2: (enumLiteral_0= 'enum' )
            {
            // InternalLustre.g:12254:2: (enumLiteral_0= 'enum' )
            // InternalLustre.g:12255:3: enumLiteral_0= 'enum'
            {
            enumLiteral_0=(Token)match(input,97,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getEnumTypeAccess().getENUMEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getEnumTypeAccess().getENUMEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumType"


    // $ANTLR start "ruleAssignOperator"
    // InternalLustre.g:12264:1: ruleAssignOperator returns [Enumerator current=null] : (enumLiteral_0= '=' ) ;
    public final Enumerator ruleAssignOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalLustre.g:12270:2: ( (enumLiteral_0= '=' ) )
            // InternalLustre.g:12271:2: (enumLiteral_0= '=' )
            {
            // InternalLustre.g:12271:2: (enumLiteral_0= '=' )
            // InternalLustre.g:12272:3: enumLiteral_0= '='
            {
            enumLiteral_0=(Token)match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getAssignOperatorAccess().getASSIGNEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getAssignOperatorAccess().getASSIGNEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssignOperator"


    // $ANTLR start "ruleCompareOperator"
    // InternalLustre.g:12281:1: ruleCompareOperator returns [Enumerator current=null] : ( (enumLiteral_0= '=' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '<>' ) ) ;
    public final Enumerator ruleCompareOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;


        	enterRule();

        try {
            // InternalLustre.g:12287:2: ( ( (enumLiteral_0= '=' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '<>' ) ) )
            // InternalLustre.g:12288:2: ( (enumLiteral_0= '=' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '<>' ) )
            {
            // InternalLustre.g:12288:2: ( (enumLiteral_0= '=' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '<>' ) )
            int alt260=6;
            switch ( input.LA(1) ) {
            case 27:
                {
                alt260=1;
                }
                break;
            case 98:
                {
                alt260=2;
                }
                break;
            case 99:
                {
                alt260=3;
                }
                break;
            case 100:
                {
                alt260=4;
                }
                break;
            case 101:
                {
                alt260=5;
                }
                break;
            case 102:
                {
                alt260=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 260, 0, input);

                throw nvae;
            }

            switch (alt260) {
                case 1 :
                    // InternalLustre.g:12289:3: (enumLiteral_0= '=' )
                    {
                    // InternalLustre.g:12289:3: (enumLiteral_0= '=' )
                    // InternalLustre.g:12290:4: enumLiteral_0= '='
                    {
                    enumLiteral_0=(Token)match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:12297:3: (enumLiteral_1= '<' )
                    {
                    // InternalLustre.g:12297:3: (enumLiteral_1= '<' )
                    // InternalLustre.g:12298:4: enumLiteral_1= '<'
                    {
                    enumLiteral_1=(Token)match(input,98,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLustre.g:12305:3: (enumLiteral_2= '<=' )
                    {
                    // InternalLustre.g:12305:3: (enumLiteral_2= '<=' )
                    // InternalLustre.g:12306:4: enumLiteral_2= '<='
                    {
                    enumLiteral_2=(Token)match(input,99,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalLustre.g:12313:3: (enumLiteral_3= '>' )
                    {
                    // InternalLustre.g:12313:3: (enumLiteral_3= '>' )
                    // InternalLustre.g:12314:4: enumLiteral_3= '>'
                    {
                    enumLiteral_3=(Token)match(input,100,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalLustre.g:12321:3: (enumLiteral_4= '>=' )
                    {
                    // InternalLustre.g:12321:3: (enumLiteral_4= '>=' )
                    // InternalLustre.g:12322:4: enumLiteral_4= '>='
                    {
                    enumLiteral_4=(Token)match(input,101,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalLustre.g:12329:3: (enumLiteral_5= '<>' )
                    {
                    // InternalLustre.g:12329:3: (enumLiteral_5= '<>' )
                    // InternalLustre.g:12330:4: enumLiteral_5= '<>'
                    {
                    enumLiteral_5=(Token)match(input,102,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompareOperator"


    // $ANTLR start "ruleLogicalOrOperator"
    // InternalLustre.g:12340:1: ruleLogicalOrOperator returns [Enumerator current=null] : (enumLiteral_0= 'or' ) ;
    public final Enumerator ruleLogicalOrOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalLustre.g:12346:2: ( (enumLiteral_0= 'or' ) )
            // InternalLustre.g:12347:2: (enumLiteral_0= 'or' )
            {
            // InternalLustre.g:12347:2: (enumLiteral_0= 'or' )
            // InternalLustre.g:12348:3: enumLiteral_0= 'or'
            {
            enumLiteral_0=(Token)match(input,103,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getLogicalOrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getLogicalOrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalOrOperator"


    // $ANTLR start "ruleLogicalAndOperator"
    // InternalLustre.g:12357:1: ruleLogicalAndOperator returns [Enumerator current=null] : (enumLiteral_0= 'and' ) ;
    public final Enumerator ruleLogicalAndOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalLustre.g:12363:2: ( (enumLiteral_0= 'and' ) )
            // InternalLustre.g:12364:2: (enumLiteral_0= 'and' )
            {
            // InternalLustre.g:12364:2: (enumLiteral_0= 'and' )
            // InternalLustre.g:12365:3: enumLiteral_0= 'and'
            {
            enumLiteral_0=(Token)match(input,104,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getLogicalAndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getLogicalAndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalAndOperator"


    // $ANTLR start "ruleNotOperator"
    // InternalLustre.g:12374:1: ruleNotOperator returns [Enumerator current=null] : (enumLiteral_0= 'not' ) ;
    public final Enumerator ruleNotOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalLustre.g:12380:2: ( (enumLiteral_0= 'not' ) )
            // InternalLustre.g:12381:2: (enumLiteral_0= 'not' )
            {
            // InternalLustre.g:12381:2: (enumLiteral_0= 'not' )
            // InternalLustre.g:12382:3: enumLiteral_0= 'not'
            {
            enumLiteral_0=(Token)match(input,105,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getNotOperatorAccess().getNOTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getNotOperatorAccess().getNOTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotOperator"


    // $ANTLR start "ruleFBYOperator"
    // InternalLustre.g:12391:1: ruleFBYOperator returns [Enumerator current=null] : (enumLiteral_0= 'fby' ) ;
    public final Enumerator ruleFBYOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalLustre.g:12397:2: ( (enumLiteral_0= 'fby' ) )
            // InternalLustre.g:12398:2: (enumLiteral_0= 'fby' )
            {
            // InternalLustre.g:12398:2: (enumLiteral_0= 'fby' )
            // InternalLustre.g:12399:3: enumLiteral_0= 'fby'
            {
            enumLiteral_0=(Token)match(input,106,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getFBYOperatorAccess().getFBYEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getFBYOperatorAccess().getFBYEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFBYOperator"


    // $ANTLR start "ruleCurrentOperator"
    // InternalLustre.g:12408:1: ruleCurrentOperator returns [Enumerator current=null] : (enumLiteral_0= 'current' ) ;
    public final Enumerator ruleCurrentOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalLustre.g:12414:2: ( (enumLiteral_0= 'current' ) )
            // InternalLustre.g:12415:2: (enumLiteral_0= 'current' )
            {
            // InternalLustre.g:12415:2: (enumLiteral_0= 'current' )
            // InternalLustre.g:12416:3: enumLiteral_0= 'current'
            {
            enumLiteral_0=(Token)match(input,107,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getCurrentOperatorAccess().getCURRENTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getCurrentOperatorAccess().getCURRENTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCurrentOperator"


    // $ANTLR start "ruleWhenOperator"
    // InternalLustre.g:12425:1: ruleWhenOperator returns [Enumerator current=null] : (enumLiteral_0= 'when' ) ;
    public final Enumerator ruleWhenOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalLustre.g:12431:2: ( (enumLiteral_0= 'when' ) )
            // InternalLustre.g:12432:2: (enumLiteral_0= 'when' )
            {
            // InternalLustre.g:12432:2: (enumLiteral_0= 'when' )
            // InternalLustre.g:12433:3: enumLiteral_0= 'when'
            {
            enumLiteral_0=(Token)match(input,58,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getWhenOperatorAccess().getWHENEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getWhenOperatorAccess().getWHENEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWhenOperator"


    // $ANTLR start "ruleInitOperator"
    // InternalLustre.g:12442:1: ruleInitOperator returns [Enumerator current=null] : (enumLiteral_0= '->' ) ;
    public final Enumerator ruleInitOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalLustre.g:12448:2: ( (enumLiteral_0= '->' ) )
            // InternalLustre.g:12449:2: (enumLiteral_0= '->' )
            {
            // InternalLustre.g:12449:2: (enumLiteral_0= '->' )
            // InternalLustre.g:12450:3: enumLiteral_0= '->'
            {
            enumLiteral_0=(Token)match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getInitOperatorAccess().getINITEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getInitOperatorAccess().getINITEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInitOperator"


    // $ANTLR start "ruleLogicalXorOperator"
    // InternalLustre.g:12459:1: ruleLogicalXorOperator returns [Enumerator current=null] : (enumLiteral_0= 'xor' ) ;
    public final Enumerator ruleLogicalXorOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalLustre.g:12465:2: ( (enumLiteral_0= 'xor' ) )
            // InternalLustre.g:12466:2: (enumLiteral_0= 'xor' )
            {
            // InternalLustre.g:12466:2: (enumLiteral_0= 'xor' )
            // InternalLustre.g:12467:3: enumLiteral_0= 'xor'
            {
            enumLiteral_0=(Token)match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getLogicalXorOperatorAccess().getLOGICAL_XOREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getLogicalXorOperatorAccess().getLOGICAL_XOREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalXorOperator"


    // $ANTLR start "ruleIntDivOperator"
    // InternalLustre.g:12476:1: ruleIntDivOperator returns [Enumerator current=null] : (enumLiteral_0= 'div' ) ;
    public final Enumerator ruleIntDivOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalLustre.g:12482:2: ( (enumLiteral_0= 'div' ) )
            // InternalLustre.g:12483:2: (enumLiteral_0= 'div' )
            {
            // InternalLustre.g:12483:2: (enumLiteral_0= 'div' )
            // InternalLustre.g:12484:3: enumLiteral_0= 'div'
            {
            enumLiteral_0=(Token)match(input,108,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getIntDivOperatorAccess().getINTDIVEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getIntDivOperatorAccess().getINTDIVEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntDivOperator"


    // $ANTLR start "ruleConditionalOperator"
    // InternalLustre.g:12493:1: ruleConditionalOperator returns [Enumerator current=null] : (enumLiteral_0= 'if' ) ;
    public final Enumerator ruleConditionalOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalLustre.g:12499:2: ( (enumLiteral_0= 'if' ) )
            // InternalLustre.g:12500:2: (enumLiteral_0= 'if' )
            {
            // InternalLustre.g:12500:2: (enumLiteral_0= 'if' )
            // InternalLustre.g:12501:3: enumLiteral_0= 'if'
            {
            enumLiteral_0=(Token)match(input,109,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getConditionalOperatorAccess().getCONDITIONALEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getConditionalOperatorAccess().getCONDITIONALEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalOperator"


    // $ANTLR start "rulePriorityProtocol"
    // InternalLustre.g:12510:1: rulePriorityProtocol returns [Enumerator current=null] : ( (enumLiteral_0= 'conflict' ) | (enumLiteral_1= 'confluent' ) ) ;
    public final Enumerator rulePriorityProtocol() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalLustre.g:12516:2: ( ( (enumLiteral_0= 'conflict' ) | (enumLiteral_1= 'confluent' ) ) )
            // InternalLustre.g:12517:2: ( (enumLiteral_0= 'conflict' ) | (enumLiteral_1= 'confluent' ) )
            {
            // InternalLustre.g:12517:2: ( (enumLiteral_0= 'conflict' ) | (enumLiteral_1= 'confluent' ) )
            int alt261=2;
            int LA261_0 = input.LA(1);

            if ( (LA261_0==110) ) {
                alt261=1;
            }
            else if ( (LA261_0==111) ) {
                alt261=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 261, 0, input);

                throw nvae;
            }
            switch (alt261) {
                case 1 :
                    // InternalLustre.g:12518:3: (enumLiteral_0= 'conflict' )
                    {
                    // InternalLustre.g:12518:3: (enumLiteral_0= 'conflict' )
                    // InternalLustre.g:12519:4: enumLiteral_0= 'conflict'
                    {
                    enumLiteral_0=(Token)match(input,110,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPriorityProtocolAccess().getCONFLICTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getPriorityProtocolAccess().getCONFLICTEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:12526:3: (enumLiteral_1= 'confluent' )
                    {
                    // InternalLustre.g:12526:3: (enumLiteral_1= 'confluent' )
                    // InternalLustre.g:12527:4: enumLiteral_1= 'confluent'
                    {
                    enumLiteral_1=(Token)match(input,111,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPriorityProtocolAccess().getCONFLUENTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getPriorityProtocolAccess().getCONFLUENTEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePriorityProtocol"


    // $ANTLR start "rulePostfixOperator"
    // InternalLustre.g:12537:1: rulePostfixOperator returns [Enumerator current=null] : ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) ) ;
    public final Enumerator rulePostfixOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalLustre.g:12543:2: ( ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) ) )
            // InternalLustre.g:12544:2: ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) )
            {
            // InternalLustre.g:12544:2: ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) )
            int alt262=2;
            int LA262_0 = input.LA(1);

            if ( (LA262_0==112) ) {
                alt262=1;
            }
            else if ( (LA262_0==113) ) {
                alt262=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 262, 0, input);

                throw nvae;
            }
            switch (alt262) {
                case 1 :
                    // InternalLustre.g:12545:3: (enumLiteral_0= '++' )
                    {
                    // InternalLustre.g:12545:3: (enumLiteral_0= '++' )
                    // InternalLustre.g:12546:4: enumLiteral_0= '++'
                    {
                    enumLiteral_0=(Token)match(input,112,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPostfixOperatorAccess().getPOSTFIXADDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getPostfixOperatorAccess().getPOSTFIXADDEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:12553:3: (enumLiteral_1= '--' )
                    {
                    // InternalLustre.g:12553:3: (enumLiteral_1= '--' )
                    // InternalLustre.g:12554:4: enumLiteral_1= '--'
                    {
                    enumLiteral_1=(Token)match(input,113,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPostfixOperatorAccess().getPOSTFIXSUBEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getPostfixOperatorAccess().getPOSTFIXSUBEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePostfixOperator"


    // $ANTLR start "rulePreOperator"
    // InternalLustre.g:12564:1: rulePreOperator returns [Enumerator current=null] : (enumLiteral_0= 'pre' ) ;
    public final Enumerator rulePreOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalLustre.g:12570:2: ( (enumLiteral_0= 'pre' ) )
            // InternalLustre.g:12571:2: (enumLiteral_0= 'pre' )
            {
            // InternalLustre.g:12571:2: (enumLiteral_0= 'pre' )
            // InternalLustre.g:12572:3: enumLiteral_0= 'pre'
            {
            enumLiteral_0=(Token)match(input,114,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePreOperator"


    // $ANTLR start "ruleBitwiseNotOperator"
    // InternalLustre.g:12581:1: ruleBitwiseNotOperator returns [Enumerator current=null] : (enumLiteral_0= '~' ) ;
    public final Enumerator ruleBitwiseNotOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalLustre.g:12587:2: ( (enumLiteral_0= '~' ) )
            // InternalLustre.g:12588:2: (enumLiteral_0= '~' )
            {
            // InternalLustre.g:12588:2: (enumLiteral_0= '~' )
            // InternalLustre.g:12589:3: enumLiteral_0= '~'
            {
            enumLiteral_0=(Token)match(input,115,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseNotOperatorAccess().getBITWISE_NOTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseNotOperatorAccess().getBITWISE_NOTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseNotOperator"


    // $ANTLR start "ruleBitwiseXOrOperator"
    // InternalLustre.g:12598:1: ruleBitwiseXOrOperator returns [Enumerator current=null] : (enumLiteral_0= '^' ) ;
    public final Enumerator ruleBitwiseXOrOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalLustre.g:12604:2: ( (enumLiteral_0= '^' ) )
            // InternalLustre.g:12605:2: (enumLiteral_0= '^' )
            {
            // InternalLustre.g:12605:2: (enumLiteral_0= '^' )
            // InternalLustre.g:12606:3: enumLiteral_0= '^'
            {
            enumLiteral_0=(Token)match(input,81,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseXOrOperatorAccess().getBITWISE_XOREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseXOrOperatorAccess().getBITWISE_XOREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseXOrOperator"


    // $ANTLR start "ruleBitwiseOrOperator"
    // InternalLustre.g:12615:1: ruleBitwiseOrOperator returns [Enumerator current=null] : (enumLiteral_0= '|' ) ;
    public final Enumerator ruleBitwiseOrOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalLustre.g:12621:2: ( (enumLiteral_0= '|' ) )
            // InternalLustre.g:12622:2: (enumLiteral_0= '|' )
            {
            // InternalLustre.g:12622:2: (enumLiteral_0= '|' )
            // InternalLustre.g:12623:3: enumLiteral_0= '|'
            {
            enumLiteral_0=(Token)match(input,47,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseOrOperatorAccess().getBITWISE_OREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseOrOperatorAccess().getBITWISE_OREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseOrOperator"


    // $ANTLR start "ruleBitwiseAndOperator"
    // InternalLustre.g:12632:1: ruleBitwiseAndOperator returns [Enumerator current=null] : (enumLiteral_0= '&' ) ;
    public final Enumerator ruleBitwiseAndOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalLustre.g:12638:2: ( (enumLiteral_0= '&' ) )
            // InternalLustre.g:12639:2: (enumLiteral_0= '&' )
            {
            // InternalLustre.g:12639:2: (enumLiteral_0= '&' )
            // InternalLustre.g:12640:3: enumLiteral_0= '&'
            {
            enumLiteral_0=(Token)match(input,82,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseAndOperatorAccess().getBITWISE_ANDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseAndOperatorAccess().getBITWISE_ANDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseAndOperator"


    // $ANTLR start "ruleAddOperator"
    // InternalLustre.g:12649:1: ruleAddOperator returns [Enumerator current=null] : (enumLiteral_0= '+' ) ;
    public final Enumerator ruleAddOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalLustre.g:12655:2: ( (enumLiteral_0= '+' ) )
            // InternalLustre.g:12656:2: (enumLiteral_0= '+' )
            {
            // InternalLustre.g:12656:2: (enumLiteral_0= '+' )
            // InternalLustre.g:12657:3: enumLiteral_0= '+'
            {
            enumLiteral_0=(Token)match(input,84,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getAddOperatorAccess().getADDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getAddOperatorAccess().getADDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAddOperator"


    // $ANTLR start "ruleSubOperator"
    // InternalLustre.g:12666:1: ruleSubOperator returns [Enumerator current=null] : (enumLiteral_0= '-' ) ;
    public final Enumerator ruleSubOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalLustre.g:12672:2: ( (enumLiteral_0= '-' ) )
            // InternalLustre.g:12673:2: (enumLiteral_0= '-' )
            {
            // InternalLustre.g:12673:2: (enumLiteral_0= '-' )
            // InternalLustre.g:12674:3: enumLiteral_0= '-'
            {
            enumLiteral_0=(Token)match(input,85,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getSubOperatorAccess().getSUBEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getSubOperatorAccess().getSUBEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubOperator"


    // $ANTLR start "ruleMultOperator"
    // InternalLustre.g:12683:1: ruleMultOperator returns [Enumerator current=null] : (enumLiteral_0= '*' ) ;
    public final Enumerator ruleMultOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalLustre.g:12689:2: ( (enumLiteral_0= '*' ) )
            // InternalLustre.g:12690:2: (enumLiteral_0= '*' )
            {
            // InternalLustre.g:12690:2: (enumLiteral_0= '*' )
            // InternalLustre.g:12691:3: enumLiteral_0= '*'
            {
            enumLiteral_0=(Token)match(input,86,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultOperator"


    // $ANTLR start "ruleModOperator"
    // InternalLustre.g:12700:1: ruleModOperator returns [Enumerator current=null] : (enumLiteral_0= '%' ) ;
    public final Enumerator ruleModOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalLustre.g:12706:2: ( (enumLiteral_0= '%' ) )
            // InternalLustre.g:12707:2: (enumLiteral_0= '%' )
            {
            // InternalLustre.g:12707:2: (enumLiteral_0= '%' )
            // InternalLustre.g:12708:3: enumLiteral_0= '%'
            {
            enumLiteral_0=(Token)match(input,53,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getModOperatorAccess().getMODEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getModOperatorAccess().getMODEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModOperator"


    // $ANTLR start "ruleDivOperator"
    // InternalLustre.g:12717:1: ruleDivOperator returns [Enumerator current=null] : (enumLiteral_0= '/' ) ;
    public final Enumerator ruleDivOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalLustre.g:12723:2: ( (enumLiteral_0= '/' ) )
            // InternalLustre.g:12724:2: (enumLiteral_0= '/' )
            {
            // InternalLustre.g:12724:2: (enumLiteral_0= '/' )
            // InternalLustre.g:12725:3: enumLiteral_0= '/'
            {
            enumLiteral_0=(Token)match(input,87,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDivOperator"


    // $ANTLR start "ruleValOperator"
    // InternalLustre.g:12734:1: ruleValOperator returns [Enumerator current=null] : (enumLiteral_0= 'val' ) ;
    public final Enumerator ruleValOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalLustre.g:12740:2: ( (enumLiteral_0= 'val' ) )
            // InternalLustre.g:12741:2: (enumLiteral_0= 'val' )
            {
            // InternalLustre.g:12741:2: (enumLiteral_0= 'val' )
            // InternalLustre.g:12742:3: enumLiteral_0= 'val'
            {
            enumLiteral_0=(Token)match(input,116,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getValOperatorAccess().getVALEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getValOperatorAccess().getVALEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValOperator"


    // $ANTLR start "ruleShiftLeftOperator"
    // InternalLustre.g:12751:1: ruleShiftLeftOperator returns [Enumerator current=null] : (enumLiteral_0= '<<' ) ;
    public final Enumerator ruleShiftLeftOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalLustre.g:12757:2: ( (enumLiteral_0= '<<' ) )
            // InternalLustre.g:12758:2: (enumLiteral_0= '<<' )
            {
            // InternalLustre.g:12758:2: (enumLiteral_0= '<<' )
            // InternalLustre.g:12759:3: enumLiteral_0= '<<'
            {
            enumLiteral_0=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getShiftLeftOperatorAccess().getSHIFT_LEFTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getShiftLeftOperatorAccess().getSHIFT_LEFTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftLeftOperator"


    // $ANTLR start "ruleShiftRightOperator"
    // InternalLustre.g:12768:1: ruleShiftRightOperator returns [Enumerator current=null] : (enumLiteral_0= '>>' ) ;
    public final Enumerator ruleShiftRightOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalLustre.g:12774:2: ( (enumLiteral_0= '>>' ) )
            // InternalLustre.g:12775:2: (enumLiteral_0= '>>' )
            {
            // InternalLustre.g:12775:2: (enumLiteral_0= '>>' )
            // InternalLustre.g:12776:3: enumLiteral_0= '>>'
            {
            enumLiteral_0=(Token)match(input,33,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getShiftRightOperatorAccess().getSHIFT_RIGHTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getShiftRightOperatorAccess().getSHIFT_RIGHTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightOperator"


    // $ANTLR start "ruleShiftRightUnsignedOperator"
    // InternalLustre.g:12785:1: ruleShiftRightUnsignedOperator returns [Enumerator current=null] : (enumLiteral_0= '>>>' ) ;
    public final Enumerator ruleShiftRightUnsignedOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalLustre.g:12791:2: ( (enumLiteral_0= '>>>' ) )
            // InternalLustre.g:12792:2: (enumLiteral_0= '>>>' )
            {
            // InternalLustre.g:12792:2: (enumLiteral_0= '>>>' )
            // InternalLustre.g:12793:3: enumLiteral_0= '>>>'
            {
            enumLiteral_0=(Token)match(input,83,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getShiftRightUnsignedOperatorAccess().getSHIFT_RIGHT_UNSIGNEDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getShiftRightUnsignedOperatorAccess().getSHIFT_RIGHT_UNSIGNEDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightUnsignedOperator"


    // $ANTLR start "ruleHostType"
    // InternalLustre.g:12802:1: ruleHostType returns [Enumerator current=null] : (enumLiteral_0= 'host' ) ;
    public final Enumerator ruleHostType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalLustre.g:12808:2: ( (enumLiteral_0= 'host' ) )
            // InternalLustre.g:12809:2: (enumLiteral_0= 'host' )
            {
            // InternalLustre.g:12809:2: (enumLiteral_0= 'host' )
            // InternalLustre.g:12810:3: enumLiteral_0= 'host'
            {
            enumLiteral_0=(Token)match(input,117,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getHostTypeAccess().getHOSTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getHostTypeAccess().getHOSTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHostType"


    // $ANTLR start "ruleStructType"
    // InternalLustre.g:12819:1: ruleStructType returns [Enumerator current=null] : (enumLiteral_0= 'struct' ) ;
    public final Enumerator ruleStructType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalLustre.g:12825:2: ( (enumLiteral_0= 'struct' ) )
            // InternalLustre.g:12826:2: (enumLiteral_0= 'struct' )
            {
            // InternalLustre.g:12826:2: (enumLiteral_0= 'struct' )
            // InternalLustre.g:12827:3: enumLiteral_0= 'struct'
            {
            enumLiteral_0=(Token)match(input,118,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getStructTypeAccess().getSTRUCTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getStructTypeAccess().getSTRUCTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructType"


    // $ANTLR start "ruleCombineOperator"
    // InternalLustre.g:12836:1: ruleCombineOperator returns [Enumerator current=null] : ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) ) ;
    public final Enumerator ruleCombineOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;


        	enterRule();

        try {
            // InternalLustre.g:12842:2: ( ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) ) )
            // InternalLustre.g:12843:2: ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) )
            {
            // InternalLustre.g:12843:2: ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) )
            int alt263=8;
            switch ( input.LA(1) ) {
            case 119:
                {
                alt263=1;
                }
                break;
            case 84:
                {
                alt263=2;
                }
                break;
            case 86:
                {
                alt263=3;
                }
                break;
            case 120:
                {
                alt263=4;
                }
                break;
            case 121:
                {
                alt263=5;
                }
                break;
            case 47:
                {
                alt263=6;
                }
                break;
            case 82:
                {
                alt263=7;
                }
                break;
            case 117:
                {
                alt263=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 263, 0, input);

                throw nvae;
            }

            switch (alt263) {
                case 1 :
                    // InternalLustre.g:12844:3: (enumLiteral_0= 'none' )
                    {
                    // InternalLustre.g:12844:3: (enumLiteral_0= 'none' )
                    // InternalLustre.g:12845:4: enumLiteral_0= 'none'
                    {
                    enumLiteral_0=(Token)match(input,119,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLustre.g:12852:3: (enumLiteral_1= '+' )
                    {
                    // InternalLustre.g:12852:3: (enumLiteral_1= '+' )
                    // InternalLustre.g:12853:4: enumLiteral_1= '+'
                    {
                    enumLiteral_1=(Token)match(input,84,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLustre.g:12860:3: (enumLiteral_2= '*' )
                    {
                    // InternalLustre.g:12860:3: (enumLiteral_2= '*' )
                    // InternalLustre.g:12861:4: enumLiteral_2= '*'
                    {
                    enumLiteral_2=(Token)match(input,86,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalLustre.g:12868:3: (enumLiteral_3= 'max' )
                    {
                    // InternalLustre.g:12868:3: (enumLiteral_3= 'max' )
                    // InternalLustre.g:12869:4: enumLiteral_3= 'max'
                    {
                    enumLiteral_3=(Token)match(input,120,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalLustre.g:12876:3: (enumLiteral_4= 'min' )
                    {
                    // InternalLustre.g:12876:3: (enumLiteral_4= 'min' )
                    // InternalLustre.g:12877:4: enumLiteral_4= 'min'
                    {
                    enumLiteral_4=(Token)match(input,121,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalLustre.g:12884:3: (enumLiteral_5= '|' )
                    {
                    // InternalLustre.g:12884:3: (enumLiteral_5= '|' )
                    // InternalLustre.g:12885:4: enumLiteral_5= '|'
                    {
                    enumLiteral_5=(Token)match(input,47,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalLustre.g:12892:3: (enumLiteral_6= '&' )
                    {
                    // InternalLustre.g:12892:3: (enumLiteral_6= '&' )
                    // InternalLustre.g:12893:4: enumLiteral_6= '&'
                    {
                    enumLiteral_6=(Token)match(input,82,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalLustre.g:12900:3: (enumLiteral_7= 'host' )
                    {
                    // InternalLustre.g:12900:3: (enumLiteral_7= 'host' )
                    // InternalLustre.g:12901:4: enumLiteral_7= 'host'
                    {
                    enumLiteral_7=(Token)match(input,117,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_7, grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCombineOperator"

    // $ANTLR start synpred66_InternalLustre
    public final void synpred66_InternalLustre_fragment() throws RecognitionException {   
        EObject lv_subExpressions_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;


        // InternalLustre.g:2540:3: ( ( () ( (lv_subExpressions_1_0= ruleNegExpression ) ) ( (lv_operator_2_0= ruleIntDivOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) ) )
        // InternalLustre.g:2540:3: ( () ( (lv_subExpressions_1_0= ruleNegExpression ) ) ( (lv_operator_2_0= ruleIntDivOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) )
        {
        // InternalLustre.g:2540:3: ( () ( (lv_subExpressions_1_0= ruleNegExpression ) ) ( (lv_operator_2_0= ruleIntDivOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) )
        // InternalLustre.g:2541:4: () ( (lv_subExpressions_1_0= ruleNegExpression ) ) ( (lv_operator_2_0= ruleIntDivOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) )
        {
        // InternalLustre.g:2541:4: ()
        // InternalLustre.g:2542:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalLustre.g:2551:4: ( (lv_subExpressions_1_0= ruleNegExpression ) )
        // InternalLustre.g:2552:5: (lv_subExpressions_1_0= ruleNegExpression )
        {
        // InternalLustre.g:2552:5: (lv_subExpressions_1_0= ruleNegExpression )
        // InternalLustre.g:2553:6: lv_subExpressions_1_0= ruleNegExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIntDivExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_0_1_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_55);
        lv_subExpressions_1_0=ruleNegExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalLustre.g:2570:4: ( (lv_operator_2_0= ruleIntDivOperator ) )
        // InternalLustre.g:2571:5: (lv_operator_2_0= ruleIntDivOperator )
        {
        // InternalLustre.g:2571:5: (lv_operator_2_0= ruleIntDivOperator )
        // InternalLustre.g:2572:6: lv_operator_2_0= ruleIntDivOperator
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIntDivExpressionAccess().getOperatorIntDivOperatorEnumRuleCall_0_2_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_56);
        lv_operator_2_0=ruleIntDivOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalLustre.g:2589:4: ( (lv_subExpressions_3_0= ruleNegExpression ) )
        // InternalLustre.g:2590:5: (lv_subExpressions_3_0= ruleNegExpression )
        {
        // InternalLustre.g:2590:5: (lv_subExpressions_3_0= ruleNegExpression )
        // InternalLustre.g:2591:6: lv_subExpressions_3_0= ruleNegExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIntDivExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_0_3_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_3_0=ruleNegExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred66_InternalLustre

    // $ANTLR start synpred68_InternalLustre
    public final void synpred68_InternalLustre_fragment() throws RecognitionException {   
        EObject lv_subExpressions_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;


        // InternalLustre.g:2721:3: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) )
        // InternalLustre.g:2721:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
        {
        // InternalLustre.g:2721:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
        // InternalLustre.g:2722:4: () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
        {
        // InternalLustre.g:2722:4: ()
        // InternalLustre.g:2723:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalLustre.g:2732:4: ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) )
        // InternalLustre.g:2733:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
        {
        // InternalLustre.g:2733:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
        // InternalLustre.g:2734:6: lv_subExpressions_1_0= ruleAtomicValuedExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getFBYExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_1_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_57);
        lv_subExpressions_1_0=ruleAtomicValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalLustre.g:2751:4: ( (lv_operator_2_0= ruleFBYOperator ) )
        // InternalLustre.g:2752:5: (lv_operator_2_0= ruleFBYOperator )
        {
        // InternalLustre.g:2752:5: (lv_operator_2_0= ruleFBYOperator )
        // InternalLustre.g:2753:6: lv_operator_2_0= ruleFBYOperator
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getFBYExpressionAccess().getOperatorFBYOperatorEnumRuleCall_0_2_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_54);
        lv_operator_2_0=ruleFBYOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalLustre.g:2770:4: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
        // InternalLustre.g:2771:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
        {
        // InternalLustre.g:2771:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
        // InternalLustre.g:2772:6: lv_subExpressions_3_0= ruleAtomicValuedExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getFBYExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_3_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_3_0=ruleAtomicValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred68_InternalLustre

    // $ANTLR start synpred69_InternalLustre
    public final void synpred69_InternalLustre_fragment() throws RecognitionException {   
        EObject lv_subExpressions_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;


        // InternalLustre.g:2821:3: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) )
        // InternalLustre.g:2821:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
        {
        // InternalLustre.g:2821:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
        // InternalLustre.g:2822:4: () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
        {
        // InternalLustre.g:2822:4: ()
        // InternalLustre.g:2823:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalLustre.g:2832:4: ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) )
        // InternalLustre.g:2833:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
        {
        // InternalLustre.g:2833:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
        // InternalLustre.g:2834:6: lv_subExpressions_1_0= ruleAtomicValuedExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getWhenExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_1_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_58);
        lv_subExpressions_1_0=ruleAtomicValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalLustre.g:2851:4: ( (lv_operator_2_0= ruleWhenOperator ) )
        // InternalLustre.g:2852:5: (lv_operator_2_0= ruleWhenOperator )
        {
        // InternalLustre.g:2852:5: (lv_operator_2_0= ruleWhenOperator )
        // InternalLustre.g:2853:6: lv_operator_2_0= ruleWhenOperator
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getWhenExpressionAccess().getOperatorWhenOperatorEnumRuleCall_0_2_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_54);
        lv_operator_2_0=ruleWhenOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalLustre.g:2870:4: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
        // InternalLustre.g:2871:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
        {
        // InternalLustre.g:2871:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
        // InternalLustre.g:2872:6: lv_subExpressions_3_0= ruleAtomicValuedExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getWhenExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_3_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_3_0=ruleAtomicValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred69_InternalLustre

    // $ANTLR start synpred71_InternalLustre
    public final void synpred71_InternalLustre_fragment() throws RecognitionException {   
        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;


        // InternalLustre.g:3002:3: ( ( () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) ) )
        // InternalLustre.g:3002:3: ( () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) )
        {
        // InternalLustre.g:3002:3: ( () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) )
        // InternalLustre.g:3003:4: () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) )
        {
        // InternalLustre.g:3003:4: ()
        // InternalLustre.g:3004:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalLustre.g:3013:4: ( (lv_operator_1_0= rulePreOperator ) )
        // InternalLustre.g:3014:5: (lv_operator_1_0= rulePreOperator )
        {
        // InternalLustre.g:3014:5: (lv_operator_1_0= rulePreOperator )
        // InternalLustre.g:3015:6: lv_operator_1_0= rulePreOperator
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPreExpressionAccess().getOperatorPreOperatorEnumRuleCall_0_1_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_54);
        lv_operator_1_0=rulePreOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalLustre.g:3032:4: ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) )
        // InternalLustre.g:3033:5: (lv_subExpressions_2_0= ruleAtomicValuedExpression )
        {
        // InternalLustre.g:3033:5: (lv_subExpressions_2_0= ruleAtomicValuedExpression )
        // InternalLustre.g:3034:6: lv_subExpressions_2_0= ruleAtomicValuedExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPreExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_2_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_2_0=ruleAtomicValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred71_InternalLustre

    // $ANTLR start synpred72_InternalLustre
    public final void synpred72_InternalLustre_fragment() throws RecognitionException {   
        EObject lv_subExpressions_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;


        // InternalLustre.g:3111:3: ( ( () ( (lv_subExpressions_1_0= ruleTernaryOperation ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleTernaryOperation ) ) ) )
        // InternalLustre.g:3111:3: ( () ( (lv_subExpressions_1_0= ruleTernaryOperation ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleTernaryOperation ) ) )
        {
        // InternalLustre.g:3111:3: ( () ( (lv_subExpressions_1_0= ruleTernaryOperation ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleTernaryOperation ) ) )
        // InternalLustre.g:3112:4: () ( (lv_subExpressions_1_0= ruleTernaryOperation ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleTernaryOperation ) )
        {
        // InternalLustre.g:3112:4: ()
        // InternalLustre.g:3113:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalLustre.g:3122:4: ( (lv_subExpressions_1_0= ruleTernaryOperation ) )
        // InternalLustre.g:3123:5: (lv_subExpressions_1_0= ruleTernaryOperation )
        {
        // InternalLustre.g:3123:5: (lv_subExpressions_1_0= ruleTernaryOperation )
        // InternalLustre.g:3124:6: lv_subExpressions_1_0= ruleTernaryOperation
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getInitExpressionAccess().getSubExpressionsTernaryOperationParserRuleCall_0_1_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_49);
        lv_subExpressions_1_0=ruleTernaryOperation();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalLustre.g:3141:4: ( (lv_operator_2_0= ruleInitOperator ) )
        // InternalLustre.g:3142:5: (lv_operator_2_0= ruleInitOperator )
        {
        // InternalLustre.g:3142:5: (lv_operator_2_0= ruleInitOperator )
        // InternalLustre.g:3143:6: lv_operator_2_0= ruleInitOperator
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getInitExpressionAccess().getOperatorInitOperatorEnumRuleCall_0_2_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_18);
        lv_operator_2_0=ruleInitOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalLustre.g:3160:4: ( (lv_subExpressions_3_0= ruleTernaryOperation ) )
        // InternalLustre.g:3161:5: (lv_subExpressions_3_0= ruleTernaryOperation )
        {
        // InternalLustre.g:3161:5: (lv_subExpressions_3_0= ruleTernaryOperation )
        // InternalLustre.g:3162:6: lv_subExpressions_3_0= ruleTernaryOperation
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getInitExpressionAccess().getSubExpressionsTernaryOperationParserRuleCall_0_3_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_3_0=ruleTernaryOperation();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred72_InternalLustre

    // $ANTLR start synpred76_InternalLustre
    public final void synpred76_InternalLustre_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_subExpressions_5_0 = null;


        // InternalLustre.g:3508:5: (otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) ) )
        // InternalLustre.g:3508:5: otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) )
        {
        otherlv_4=(Token)match(input,56,FollowSets000.FOLLOW_18); if (state.failed) return ;
        // InternalLustre.g:3512:5: ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) )
        // InternalLustre.g:3513:6: (lv_subExpressions_5_0= ruleLogicalOrExpression )
        {
        // InternalLustre.g:3513:6: (lv_subExpressions_5_0= ruleLogicalOrExpression )
        // InternalLustre.g:3514:7: lv_subExpressions_5_0= ruleLogicalOrExpression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getLogicalXorExpressionAccess().getSubExpressionsLogicalOrExpressionParserRuleCall_1_2_1_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_5_0=ruleLogicalOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred76_InternalLustre

    // $ANTLR start synpred77_InternalLustre
    public final void synpred77_InternalLustre_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


        // InternalLustre.g:3457:4: ( () ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) ) ) (otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) ) )* )
        // InternalLustre.g:3457:4: () ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) ) ) (otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) ) )*
        {
        // InternalLustre.g:3457:4: ()
        // InternalLustre.g:3458:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalLustre.g:3467:4: ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) ) )
        // InternalLustre.g:3468:5: ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) )
        {
        // InternalLustre.g:3468:5: ( (lv_operator_2_0= ruleLogicalXorOperator ) )
        // InternalLustre.g:3469:6: (lv_operator_2_0= ruleLogicalXorOperator )
        {
        // InternalLustre.g:3469:6: (lv_operator_2_0= ruleLogicalXorOperator )
        // InternalLustre.g:3470:7: lv_operator_2_0= ruleLogicalXorOperator
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getLogicalXorExpressionAccess().getOperatorLogicalXorOperatorEnumRuleCall_1_1_0_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_18);
        lv_operator_2_0=ruleLogicalXorOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalLustre.g:3487:5: ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) )
        // InternalLustre.g:3488:6: (lv_subExpressions_3_0= ruleLogicalOrExpression )
        {
        // InternalLustre.g:3488:6: (lv_subExpressions_3_0= ruleLogicalOrExpression )
        // InternalLustre.g:3489:7: lv_subExpressions_3_0= ruleLogicalOrExpression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getLogicalXorExpressionAccess().getSubExpressionsLogicalOrExpressionParserRuleCall_1_1_1_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_61);
        lv_subExpressions_3_0=ruleLogicalOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }

        // InternalLustre.g:3507:4: (otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) ) )*
        loop296:
        do {
            int alt296=2;
            int LA296_0 = input.LA(1);

            if ( (LA296_0==56) ) {
                alt296=1;
            }


            switch (alt296) {
        	case 1 :
        	    // InternalLustre.g:3508:5: otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) )
        	    {
        	    otherlv_4=(Token)match(input,56,FollowSets000.FOLLOW_18); if (state.failed) return ;
        	    // InternalLustre.g:3512:5: ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) )
        	    // InternalLustre.g:3513:6: (lv_subExpressions_5_0= ruleLogicalOrExpression )
        	    {
        	    // InternalLustre.g:3513:6: (lv_subExpressions_5_0= ruleLogicalOrExpression )
        	    // InternalLustre.g:3514:7: lv_subExpressions_5_0= ruleLogicalOrExpression
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getLogicalXorExpressionAccess().getSubExpressionsLogicalOrExpressionParserRuleCall_1_2_1_0());
        	      						
        	    }
        	    pushFollow(FollowSets000.FOLLOW_61);
        	    lv_subExpressions_5_0=ruleLogicalOrExpression();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop296;
            }
        } while (true);


        }
    }
    // $ANTLR end synpred77_InternalLustre

    // $ANTLR start synpred102_InternalLustre
    public final void synpred102_InternalLustre_fragment() throws RecognitionException {   
        EObject lv_declarations_1_0 = null;


        // InternalLustre.g:4507:4: ( (lv_declarations_1_0= ruleDeclaration ) )
        // InternalLustre.g:4507:4: (lv_declarations_1_0= ruleDeclaration )
        {
        // InternalLustre.g:4507:4: (lv_declarations_1_0= ruleDeclaration )
        // InternalLustre.g:4508:5: lv_declarations_1_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getRootScopeAccess().getDeclarationsDeclarationParserRuleCall_1_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_1_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred102_InternalLustre

    // $ANTLR start synpred106_InternalLustre
    public final void synpred106_InternalLustre_fragment() throws RecognitionException {   
        EObject lv_declarations_3_0 = null;


        // InternalLustre.g:4621:4: ( (lv_declarations_3_0= ruleDeclaration ) )
        // InternalLustre.g:4621:4: (lv_declarations_3_0= ruleDeclaration )
        {
        // InternalLustre.g:4621:4: (lv_declarations_3_0= ruleDeclaration )
        // InternalLustre.g:4622:5: lv_declarations_3_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getScopeAccess().getDeclarationsDeclarationParserRuleCall_3_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_3_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred106_InternalLustre

    // $ANTLR start synpred109_InternalLustre
    public final void synpred109_InternalLustre_fragment() throws RecognitionException {   
        EObject lv_expression_0_0 = null;


        // InternalLustre.g:4706:3: ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) )
        // InternalLustre.g:4706:3: ( (lv_expression_0_0= ruleAnnotatedExpression ) )
        {
        // InternalLustre.g:4706:3: ( (lv_expression_0_0= ruleAnnotatedExpression ) )
        // InternalLustre.g:4707:4: (lv_expression_0_0= ruleAnnotatedExpression )
        {
        // InternalLustre.g:4707:4: (lv_expression_0_0= ruleAnnotatedExpression )
        // InternalLustre.g:4708:5: lv_expression_0_0= ruleAnnotatedExpression
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getTestEntityAccess().getExpressionAnnotatedExpressionParserRuleCall_0_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_expression_0_0=ruleAnnotatedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred109_InternalLustre

    // $ANTLR start synpred151_InternalLustre
    public final void synpred151_InternalLustre_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        EObject lv_valuedObjects_13_0 = null;

        EObject lv_valuedObjects_15_0 = null;


        // InternalLustre.g:5677:4: ( ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )* )
        // InternalLustre.g:5677:4: ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )*
        {
        // InternalLustre.g:5677:4: ( (lv_valuedObjects_13_0= ruleValuedObject ) )
        // InternalLustre.g:5678:5: (lv_valuedObjects_13_0= ruleValuedObject )
        {
        // InternalLustre.g:5678:5: (lv_valuedObjects_13_0= ruleValuedObject )
        // InternalLustre.g:5679:6: lv_valuedObjects_13_0= ruleValuedObject
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStructDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_13_0_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_147);
        lv_valuedObjects_13_0=ruleValuedObject();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalLustre.g:5696:4: (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )*
        loop312:
        do {
            int alt312=2;
            int LA312_0 = input.LA(1);

            if ( (LA312_0==19) ) {
                alt312=1;
            }


            switch (alt312) {
        	case 1 :
        	    // InternalLustre.g:5697:5: otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) )
        	    {
        	    otherlv_14=(Token)match(input,19,FollowSets000.FOLLOW_27); if (state.failed) return ;
        	    // InternalLustre.g:5701:5: ( (lv_valuedObjects_15_0= ruleValuedObject ) )
        	    // InternalLustre.g:5702:6: (lv_valuedObjects_15_0= ruleValuedObject )
        	    {
        	    // InternalLustre.g:5702:6: (lv_valuedObjects_15_0= ruleValuedObject )
        	    // InternalLustre.g:5703:7: lv_valuedObjects_15_0= ruleValuedObject
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getStructDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_13_1_1_0());
        	      						
        	    }
        	    pushFollow(FollowSets000.FOLLOW_147);
        	    lv_valuedObjects_15_0=ruleValuedObject();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop312;
            }
        } while (true);


        }
    }
    // $ANTLR end synpred151_InternalLustre

    // $ANTLR start synpred187_InternalLustre
    public final void synpred187_InternalLustre_fragment() throws RecognitionException {   
        EObject this_Assignment_0 = null;


        // InternalLustre.g:6824:3: (this_Assignment_0= ruleAssignment )
        // InternalLustre.g:6824:3: this_Assignment_0= ruleAssignment
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Assignment_0=ruleAssignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred187_InternalLustre

    // $ANTLR start synpred188_InternalLustre
    public final void synpred188_InternalLustre_fragment() throws RecognitionException {   
        EObject this_PostfixEffect_1 = null;


        // InternalLustre.g:6836:3: (this_PostfixEffect_1= rulePostfixEffect )
        // InternalLustre.g:6836:3: this_PostfixEffect_1= rulePostfixEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_PostfixEffect_1=rulePostfixEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred188_InternalLustre

    // $ANTLR start synpred189_InternalLustre
    public final void synpred189_InternalLustre_fragment() throws RecognitionException {   
        EObject this_Emission_2 = null;


        // InternalLustre.g:6848:3: (this_Emission_2= ruleEmission )
        // InternalLustre.g:6848:3: this_Emission_2= ruleEmission
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Emission_2=ruleEmission();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred189_InternalLustre

    // $ANTLR start synpred190_InternalLustre
    public final void synpred190_InternalLustre_fragment() throws RecognitionException {   
        EObject this_HostcodeEffect_3 = null;


        // InternalLustre.g:6860:3: (this_HostcodeEffect_3= ruleHostcodeEffect )
        // InternalLustre.g:6860:3: this_HostcodeEffect_3= ruleHostcodeEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_HostcodeEffect_3=ruleHostcodeEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred190_InternalLustre

    // $ANTLR start synpred191_InternalLustre
    public final void synpred191_InternalLustre_fragment() throws RecognitionException {   
        EObject this_ReferenceCallEffect_4 = null;


        // InternalLustre.g:6872:3: (this_ReferenceCallEffect_4= ruleReferenceCallEffect )
        // InternalLustre.g:6872:3: this_ReferenceCallEffect_4= ruleReferenceCallEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ReferenceCallEffect_4=ruleReferenceCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred191_InternalLustre

    // $ANTLR start synpred192_InternalLustre
    public final void synpred192_InternalLustre_fragment() throws RecognitionException {   
        EObject this_FunctionCallEffect_5 = null;


        // InternalLustre.g:6884:3: (this_FunctionCallEffect_5= ruleFunctionCallEffect )
        // InternalLustre.g:6884:3: this_FunctionCallEffect_5= ruleFunctionCallEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_FunctionCallEffect_5=ruleFunctionCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred192_InternalLustre

    // $ANTLR start synpred193_InternalLustre
    public final void synpred193_InternalLustre_fragment() throws RecognitionException {   
        EObject this_PrintCallEffect_6 = null;


        // InternalLustre.g:6896:3: (this_PrintCallEffect_6= rulePrintCallEffect )
        // InternalLustre.g:6896:3: this_PrintCallEffect_6= rulePrintCallEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_PrintCallEffect_6=rulePrintCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred193_InternalLustre

    // $ANTLR start synpred216_InternalLustre
    public final void synpred216_InternalLustre_fragment() throws RecognitionException {   
        EObject this_BoolExpression_0 = null;


        // InternalLustre.g:7780:3: (this_BoolExpression_0= ruleBoolExpression )
        // InternalLustre.g:7780:3: this_BoolExpression_0= ruleBoolExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_BoolExpression_0=ruleBoolExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred216_InternalLustre

    // $ANTLR start synpred228_InternalLustre
    public final void synpred228_InternalLustre_fragment() throws RecognitionException {   
        EObject this_ValuedExpression_0 = null;


        // InternalLustre.g:8437:3: (this_ValuedExpression_0= ruleValuedExpression )
        // InternalLustre.g:8437:3: this_ValuedExpression_0= ruleValuedExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedExpression_0=ruleValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred228_InternalLustre

    // $ANTLR start synpred256_InternalLustre
    public final void synpred256_InternalLustre_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject this_ValuedExpression_5 = null;


        // InternalLustre.g:9590:3: ( (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) )
        // InternalLustre.g:9590:3: (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' )
        {
        // InternalLustre.g:9590:3: (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' )
        // InternalLustre.g:9591:4: otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')'
        {
        otherlv_4=(Token)match(input,36,FollowSets000.FOLLOW_56); if (state.failed) return ;
        pushFollow(FollowSets000.FOLLOW_110);
        this_ValuedExpression_5=ruleValuedExpression();

        state._fsp--;
        if (state.failed) return ;
        otherlv_6=(Token)match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred256_InternalLustre

    // $ANTLR start synpred272_InternalLustre
    public final void synpred272_InternalLustre_fragment() throws RecognitionException {   
        EObject this_BoolExpression_0 = null;


        // InternalLustre.g:10544:3: (this_BoolExpression_0= ruleBoolExpression )
        // InternalLustre.g:10544:3: this_BoolExpression_0= ruleBoolExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_BoolExpression_0=ruleBoolExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred272_InternalLustre

    // $ANTLR start synpred273_InternalLustre
    public final void synpred273_InternalLustre_fragment() throws RecognitionException {   
        EObject this_ValuedExpression_1 = null;


        // InternalLustre.g:10556:3: (this_ValuedExpression_1= ruleValuedExpression )
        // InternalLustre.g:10556:3: this_ValuedExpression_1= ruleValuedExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedExpression_1=ruleValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred273_InternalLustre

    // $ANTLR start synpred285_InternalLustre
    public final void synpred285_InternalLustre_fragment() throws RecognitionException {   
        EObject this_KeyStringValueAnnotation_1 = null;


        // InternalLustre.g:11034:3: (this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation )
        // InternalLustre.g:11034:3: this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_KeyStringValueAnnotation_1=ruleKeyStringValueAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred285_InternalLustre

    // Delegated rules

    public final boolean synpred192_InternalLustre() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred192_InternalLustre_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred272_InternalLustre() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred272_InternalLustre_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred256_InternalLustre() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred256_InternalLustre_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred285_InternalLustre() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred285_InternalLustre_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred216_InternalLustre() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred216_InternalLustre_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred77_InternalLustre() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred77_InternalLustre_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred72_InternalLustre() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred72_InternalLustre_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred151_InternalLustre() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred151_InternalLustre_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred188_InternalLustre() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred188_InternalLustre_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred106_InternalLustre() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred106_InternalLustre_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred66_InternalLustre() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred66_InternalLustre_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred68_InternalLustre() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred68_InternalLustre_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred102_InternalLustre() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred102_InternalLustre_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred190_InternalLustre() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred190_InternalLustre_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred109_InternalLustre() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred109_InternalLustre_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred76_InternalLustre() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred76_InternalLustre_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred71_InternalLustre() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred71_InternalLustre_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred187_InternalLustre() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred187_InternalLustre_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred228_InternalLustre() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred228_InternalLustre_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred189_InternalLustre() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred189_InternalLustre_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred193_InternalLustre() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred193_InternalLustre_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred273_InternalLustre() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred273_InternalLustre_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred69_InternalLustre() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred69_InternalLustre_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred191_InternalLustre() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred191_InternalLustre_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA55 dfa55 = new DFA55(this);
    protected DFA57 dfa57 = new DFA57(this);
    protected DFA58 dfa58 = new DFA58(this);
    protected DFA60 dfa60 = new DFA60(this);
    protected DFA61 dfa61 = new DFA61(this);
    protected DFA66 dfa66 = new DFA66(this);
    protected DFA65 dfa65 = new DFA65(this);
    protected DFA87 dfa87 = new DFA87(this);
    protected DFA91 dfa91 = new DFA91(this);
    protected DFA94 dfa94 = new DFA94(this);
    protected DFA96 dfa96 = new DFA96(this);
    protected DFA97 dfa97 = new DFA97(this);
    protected DFA131 dfa131 = new DFA131(this);
    protected DFA167 dfa167 = new DFA167(this);
    protected DFA170 dfa170 = new DFA170(this);
    protected DFA173 dfa173 = new DFA173(this);
    protected DFA176 dfa176 = new DFA176(this);
    protected DFA190 dfa190 = new DFA190(this);
    protected DFA202 dfa202 = new DFA202(this);
    protected DFA219 dfa219 = new DFA219(this);
    protected DFA220 dfa220 = new DFA220(this);
    protected DFA236 dfa236 = new DFA236(this);
    protected DFA243 dfa243 = new DFA243(this);
    protected DFA244 dfa244 = new DFA244(this);
    static final String dfa_1s = "\24\uffff";
    static final String dfa_2s = "\1\4\21\0\2\uffff";
    static final String dfa_3s = "\1\164\21\0\2\uffff";
    static final String dfa_4s = "\22\uffff\1\1\1\2";
    static final String dfa_5s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\2\uffff}>";
    static final String[] dfa_6s = {
            "\1\12\1\4\1\20\1\2\1\3\1\7\1\16\31\uffff\1\6\1\uffff\1\5\1\uffff\1\13\45\uffff\1\15\6\uffff\1\1\2\uffff\1\14\3\uffff\1\17\16\uffff\1\21\6\uffff\1\10\1\uffff\1\11",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA55 extends DFA {

        public DFA55(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 55;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "2539:2: ( ( () ( (lv_subExpressions_1_0= ruleNegExpression ) ) ( (lv_operator_2_0= ruleIntDivOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) ) | this_NegExpression_4= ruleNegExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA55_1 = input.LA(1);

                         
                        int index55_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalLustre()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index55_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA55_2 = input.LA(1);

                         
                        int index55_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalLustre()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index55_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA55_3 = input.LA(1);

                         
                        int index55_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalLustre()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index55_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA55_4 = input.LA(1);

                         
                        int index55_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalLustre()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index55_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA55_5 = input.LA(1);

                         
                        int index55_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalLustre()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index55_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA55_6 = input.LA(1);

                         
                        int index55_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalLustre()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index55_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA55_7 = input.LA(1);

                         
                        int index55_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalLustre()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index55_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA55_8 = input.LA(1);

                         
                        int index55_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalLustre()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index55_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA55_9 = input.LA(1);

                         
                        int index55_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalLustre()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index55_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA55_10 = input.LA(1);

                         
                        int index55_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalLustre()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index55_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA55_11 = input.LA(1);

                         
                        int index55_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalLustre()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index55_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA55_12 = input.LA(1);

                         
                        int index55_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalLustre()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index55_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA55_13 = input.LA(1);

                         
                        int index55_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalLustre()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index55_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA55_14 = input.LA(1);

                         
                        int index55_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalLustre()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index55_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA55_15 = input.LA(1);

                         
                        int index55_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalLustre()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index55_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA55_16 = input.LA(1);

                         
                        int index55_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalLustre()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index55_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA55_17 = input.LA(1);

                         
                        int index55_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalLustre()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index55_17);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 55, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_7s = "\22\uffff";
    static final String dfa_8s = "\1\4\17\0\2\uffff";
    static final String dfa_9s = "\1\164\17\0\2\uffff";
    static final String dfa_10s = "\20\uffff\1\2\1\1";
    static final String dfa_11s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\2\uffff}>";
    static final String[] dfa_12s = {
            "\1\11\1\3\1\17\1\1\1\2\1\6\1\15\31\uffff\1\5\1\uffff\1\4\1\uffff\1\12\45\uffff\1\14\11\uffff\1\13\3\uffff\1\16\16\uffff\1\20\6\uffff\1\7\1\uffff\1\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA57 extends DFA {

        public DFA57(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 57;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "2720:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_WhenExpression_4= ruleWhenExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA57_1 = input.LA(1);

                         
                        int index57_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalLustre()) ) {s = 17;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index57_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA57_2 = input.LA(1);

                         
                        int index57_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalLustre()) ) {s = 17;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index57_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA57_3 = input.LA(1);

                         
                        int index57_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalLustre()) ) {s = 17;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index57_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA57_4 = input.LA(1);

                         
                        int index57_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalLustre()) ) {s = 17;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index57_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA57_5 = input.LA(1);

                         
                        int index57_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalLustre()) ) {s = 17;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index57_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA57_6 = input.LA(1);

                         
                        int index57_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalLustre()) ) {s = 17;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index57_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA57_7 = input.LA(1);

                         
                        int index57_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalLustre()) ) {s = 17;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index57_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA57_8 = input.LA(1);

                         
                        int index57_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalLustre()) ) {s = 17;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index57_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA57_9 = input.LA(1);

                         
                        int index57_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalLustre()) ) {s = 17;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index57_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA57_10 = input.LA(1);

                         
                        int index57_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalLustre()) ) {s = 17;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index57_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA57_11 = input.LA(1);

                         
                        int index57_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalLustre()) ) {s = 17;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index57_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA57_12 = input.LA(1);

                         
                        int index57_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalLustre()) ) {s = 17;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index57_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA57_13 = input.LA(1);

                         
                        int index57_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalLustre()) ) {s = 17;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index57_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA57_14 = input.LA(1);

                         
                        int index57_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalLustre()) ) {s = 17;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index57_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA57_15 = input.LA(1);

                         
                        int index57_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalLustre()) ) {s = 17;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index57_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 57, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA58 extends DFA {

        public DFA58(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 58;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "2820:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_CurrentExpression_4= ruleCurrentExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA58_1 = input.LA(1);

                         
                        int index58_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalLustre()) ) {s = 17;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index58_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA58_2 = input.LA(1);

                         
                        int index58_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalLustre()) ) {s = 17;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index58_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA58_3 = input.LA(1);

                         
                        int index58_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalLustre()) ) {s = 17;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index58_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA58_4 = input.LA(1);

                         
                        int index58_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalLustre()) ) {s = 17;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index58_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA58_5 = input.LA(1);

                         
                        int index58_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalLustre()) ) {s = 17;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index58_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA58_6 = input.LA(1);

                         
                        int index58_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalLustre()) ) {s = 17;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index58_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA58_7 = input.LA(1);

                         
                        int index58_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalLustre()) ) {s = 17;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index58_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA58_8 = input.LA(1);

                         
                        int index58_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalLustre()) ) {s = 17;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index58_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA58_9 = input.LA(1);

                         
                        int index58_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalLustre()) ) {s = 17;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index58_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA58_10 = input.LA(1);

                         
                        int index58_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalLustre()) ) {s = 17;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index58_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA58_11 = input.LA(1);

                         
                        int index58_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalLustre()) ) {s = 17;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index58_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA58_12 = input.LA(1);

                         
                        int index58_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalLustre()) ) {s = 17;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index58_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA58_13 = input.LA(1);

                         
                        int index58_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalLustre()) ) {s = 17;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index58_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA58_14 = input.LA(1);

                         
                        int index58_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalLustre()) ) {s = 17;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index58_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA58_15 = input.LA(1);

                         
                        int index58_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalLustre()) ) {s = 17;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index58_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 58, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_13s = "\21\uffff";
    static final String dfa_14s = "\1\4\1\0\17\uffff";
    static final String dfa_15s = "\1\164\1\0\17\uffff";
    static final String dfa_16s = "\2\uffff\1\2\15\uffff\1\1";
    static final String dfa_17s = "\1\uffff\1\0\17\uffff}>";
    static final String[] dfa_18s = {
            "\7\2\31\uffff\1\2\1\uffff\1\2\1\uffff\1\2\45\uffff\1\2\11\uffff\1\2\3\uffff\1\2\25\uffff\1\1\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[][] dfa_18 = unpackEncodedStringArray(dfa_18s);

    class DFA60 extends DFA {

        public DFA60(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 60;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_17;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "3001:2: ( ( () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_3= ruleAtomicValuedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA60_1 = input.LA(1);

                         
                        int index60_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalLustre()) ) {s = 16;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index60_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 60, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_19s = "\27\uffff";
    static final String dfa_20s = "\1\4\24\0\2\uffff";
    static final String dfa_21s = "\1\164\24\0\2\uffff";
    static final String dfa_22s = "\25\uffff\1\1\1\2";
    static final String dfa_23s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\2\uffff}>";
    static final String[] dfa_24s = {
            "\1\13\1\5\1\21\1\3\1\4\1\10\1\17\31\uffff\1\7\1\uffff\1\6\1\uffff\1\14\45\uffff\1\16\6\uffff\1\2\2\uffff\1\15\3\uffff\1\20\14\uffff\1\23\1\uffff\1\22\1\uffff\1\1\4\uffff\1\11\1\24\1\12",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final char[] dfa_20 = DFA.unpackEncodedStringToUnsignedChars(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[][] dfa_24 = unpackEncodedStringArray(dfa_24s);

    class DFA61 extends DFA {

        public DFA61(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 61;
            this.eot = dfa_19;
            this.eof = dfa_19;
            this.min = dfa_20;
            this.max = dfa_21;
            this.accept = dfa_22;
            this.special = dfa_23;
            this.transition = dfa_24;
        }
        public String getDescription() {
            return "3110:2: ( ( () ( (lv_subExpressions_1_0= ruleTernaryOperation ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleTernaryOperation ) ) ) | this_TernaryOperation_4= ruleTernaryOperation )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA61_1 = input.LA(1);

                         
                        int index61_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalLustre()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index61_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA61_2 = input.LA(1);

                         
                        int index61_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalLustre()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index61_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA61_3 = input.LA(1);

                         
                        int index61_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalLustre()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index61_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA61_4 = input.LA(1);

                         
                        int index61_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalLustre()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index61_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA61_5 = input.LA(1);

                         
                        int index61_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalLustre()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index61_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA61_6 = input.LA(1);

                         
                        int index61_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalLustre()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index61_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA61_7 = input.LA(1);

                         
                        int index61_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalLustre()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index61_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA61_8 = input.LA(1);

                         
                        int index61_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalLustre()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index61_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA61_9 = input.LA(1);

                         
                        int index61_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalLustre()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index61_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA61_10 = input.LA(1);

                         
                        int index61_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalLustre()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index61_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA61_11 = input.LA(1);

                         
                        int index61_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalLustre()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index61_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA61_12 = input.LA(1);

                         
                        int index61_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalLustre()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index61_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA61_13 = input.LA(1);

                         
                        int index61_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalLustre()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index61_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA61_14 = input.LA(1);

                         
                        int index61_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalLustre()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index61_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA61_15 = input.LA(1);

                         
                        int index61_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalLustre()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index61_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA61_16 = input.LA(1);

                         
                        int index61_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalLustre()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index61_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA61_17 = input.LA(1);

                         
                        int index61_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalLustre()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index61_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA61_18 = input.LA(1);

                         
                        int index61_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalLustre()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index61_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA61_19 = input.LA(1);

                         
                        int index61_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalLustre()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index61_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA61_20 = input.LA(1);

                         
                        int index61_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalLustre()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index61_20);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 61, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_25s = "\52\uffff";
    static final String dfa_26s = "\1\2\51\uffff";
    static final String dfa_27s = "\1\4\1\0\50\uffff";
    static final String dfa_28s = "\1\166\1\0\50\uffff";
    static final String dfa_29s = "\2\uffff\1\2\46\uffff\1\1";
    static final String dfa_30s = "\1\uffff\1\0\50\uffff}>";
    static final String[] dfa_31s = {
            "\1\2\1\uffff\1\2\3\uffff\2\2\7\uffff\2\2\4\uffff\2\2\6\uffff\1\2\3\uffff\1\2\1\uffff\2\2\7\uffff\1\2\2\uffff\2\2\1\uffff\2\2\1\1\6\uffff\12\2\1\uffff\5\2\15\uffff\1\2\1\uffff\3\2\24\uffff\2\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[][] dfa_31 = unpackEncodedStringArray(dfa_31s);

    class DFA66 extends DFA {

        public DFA66(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 66;
            this.eot = dfa_25;
            this.eof = dfa_26;
            this.min = dfa_27;
            this.max = dfa_28;
            this.accept = dfa_29;
            this.special = dfa_30;
            this.transition = dfa_31;
        }
        public String getDescription() {
            return "3456:3: ( () ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) ) ) (otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) ) )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA66_1 = input.LA(1);

                         
                        int index66_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalLustre()) ) {s = 41;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index66_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 66, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA65 extends DFA {

        public DFA65(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 65;
            this.eot = dfa_25;
            this.eof = dfa_26;
            this.min = dfa_27;
            this.max = dfa_28;
            this.accept = dfa_29;
            this.special = dfa_30;
            this.transition = dfa_31;
        }
        public String getDescription() {
            return "()* loopback of 3507:4: (otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA65_1 = input.LA(1);

                         
                        int index65_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalLustre()) ) {s = 41;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index65_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 65, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_32s = "\25\uffff";
    static final String dfa_33s = "\1\3\24\uffff";
    static final String dfa_34s = "\1\4\2\0\1\uffff\1\0\2\uffff\1\0\15\uffff";
    static final String dfa_35s = "\1\166\2\0\1\uffff\1\0\2\uffff\1\0\15\uffff";
    static final String dfa_36s = "\3\uffff\1\2\10\uffff\1\1\10\uffff";
    static final String dfa_37s = "\1\uffff\1\0\1\1\1\uffff\1\2\2\uffff\1\3\15\uffff}>";
    static final String[] dfa_38s = {
            "\1\4\1\uffff\1\3\3\uffff\1\1\16\uffff\1\14\16\uffff\1\7\26\uffff\2\3\5\14\1\uffff\2\14\3\uffff\3\3\15\uffff\1\2\31\uffff\1\14",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final char[] dfa_34 = DFA.unpackEncodedStringToUnsignedChars(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[][] dfa_38 = unpackEncodedStringArray(dfa_38s);

    class DFA87 extends DFA {

        public DFA87(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 87;
            this.eot = dfa_32;
            this.eof = dfa_33;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_36;
            this.special = dfa_37;
            this.transition = dfa_38;
        }
        public String getDescription() {
            return "()* loopback of 4506:3: ( (lv_declarations_1_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA87_1 = input.LA(1);

                         
                        int index87_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred102_InternalLustre()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index87_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA87_2 = input.LA(1);

                         
                        int index87_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred102_InternalLustre()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index87_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA87_4 = input.LA(1);

                         
                        int index87_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred102_InternalLustre()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index87_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA87_7 = input.LA(1);

                         
                        int index87_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred102_InternalLustre()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index87_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 87, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_39s = {
            "\1\4\1\uffff\1\3\3\uffff\1\1\16\uffff\1\14\15\uffff\1\3\1\7\26\uffff\2\3\5\14\1\uffff\2\14\3\uffff\3\3\15\uffff\1\2\31\uffff\1\14",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_39 = unpackEncodedStringArray(dfa_39s);

    class DFA91 extends DFA {

        public DFA91(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 91;
            this.eot = dfa_32;
            this.eof = dfa_32;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_36;
            this.special = dfa_37;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "()* loopback of 4620:3: ( (lv_declarations_3_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA91_1 = input.LA(1);

                         
                        int index91_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_InternalLustre()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index91_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA91_2 = input.LA(1);

                         
                        int index91_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_InternalLustre()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index91_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA91_4 = input.LA(1);

                         
                        int index91_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_InternalLustre()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index91_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA91_7 = input.LA(1);

                         
                        int index91_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_InternalLustre()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index91_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 91, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_40s = "\141\uffff";
    static final String dfa_41s = "\3\4\2\uffff\3\4\1\7\1\0\7\4\1\54\4\4\1\7\2\4\1\7\4\4\1\7\4\4\1\54\1\112\3\4\1\7\4\4\1\7\2\4\1\7\6\4\1\7\7\4\1\7\1\54\3\4\1\7\12\4\1\7\3\4\1\7\2\4\1\54\1\112\10\4\1\0";
    static final String dfa_42s = "\2\134\1\4\2\uffff\1\135\1\4\1\10\1\7\1\0\1\4\4\134\1\135\1\134\1\135\2\125\1\134\1\4\1\10\2\4\1\7\1\125\1\134\1\135\1\134\1\10\3\134\2\135\1\112\1\134\1\135\1\134\1\10\2\134\2\4\1\7\1\4\1\10\1\7\1\134\1\161\1\4\1\125\2\4\1\7\1\125\1\135\1\134\1\135\1\134\2\4\1\7\1\135\1\134\1\135\1\134\1\10\2\134\1\135\2\134\1\161\1\135\1\134\2\4\1\7\1\125\2\4\1\7\2\4\1\135\1\112\1\134\1\135\1\134\1\161\1\4\1\161\1\4\1\161\1\0";
    static final String dfa_43s = "\3\uffff\1\1\1\2\134\uffff";
    static final String dfa_44s = "\11\uffff\1\1\126\uffff\1\0}>";
    static final String[] dfa_45s = {
            "\1\4\1\uffff\1\4\3\uffff\1\1\35\uffff\1\4\27\uffff\1\3\13\uffff\3\4\15\uffff\1\2",
            "\1\4\1\uffff\1\4\3\uffff\1\1\35\uffff\1\4\27\uffff\1\3\13\uffff\3\4\15\uffff\1\2",
            "\1\5",
            "",
            "",
            "\1\11\1\13\1\4\1\15\1\16\1\14\1\1\35\uffff\1\4\3\uffff\1\6\23\uffff\1\3\10\uffff\1\12\2\uffff\3\4\6\uffff\1\7\6\uffff\1\2\1\10",
            "\1\17",
            "\1\17\2\uffff\1\15\1\16",
            "\1\20",
            "\1\uffff",
            "\1\21",
            "\1\4\1\uffff\1\4\3\uffff\1\1\10\uffff\1\22\24\uffff\1\4\27\uffff\1\3\13\uffff\3\4\15\uffff\1\2",
            "\1\4\1\uffff\1\4\3\uffff\1\24\10\uffff\1\23\24\uffff\1\4\27\uffff\1\3\13\uffff\3\4\15\uffff\1\25",
            "\1\4\1\uffff\1\4\3\uffff\1\24\10\uffff\1\23\24\uffff\1\4\27\uffff\1\3\13\uffff\3\4\15\uffff\1\25",
            "\1\4\1\uffff\1\4\3\uffff\1\24\10\uffff\1\23\24\uffff\1\4\27\uffff\1\3\13\uffff\3\4\15\uffff\1\25",
            "\1\11\1\13\1\4\1\15\1\16\1\14\1\1\35\uffff\1\4\3\uffff\1\6\23\uffff\1\3\10\uffff\1\12\2\uffff\3\4\6\uffff\1\7\6\uffff\1\2\1\10",
            "\1\11\1\13\1\4\1\15\1\16\1\14\1\1\35\uffff\1\4\27\uffff\1\3\10\uffff\1\12\2\uffff\3\4\6\uffff\1\26\6\uffff\1\2",
            "\1\27\35\uffff\1\32\12\uffff\1\30\7\uffff\1\31",
            "\1\34\1\33\1\uffff\1\37\1\40\1\35\113\uffff\1\36",
            "\1\34\1\41\1\uffff\1\37\1\40\1\35\113\uffff\1\36",
            "\1\4\1\uffff\1\4\3\uffff\1\24\35\uffff\1\4\27\uffff\1\3\13\uffff\3\4\15\uffff\1\25",
            "\1\42",
            "\1\15\1\16",
            "\1\43",
            "\1\43",
            "\1\44",
            "\1\46\1\45\1\uffff\1\51\1\52\1\47\113\uffff\1\50",
            "\1\4\1\uffff\1\4\3\uffff\1\1\10\uffff\1\22\24\uffff\1\4\27\uffff\1\3\13\uffff\3\4\15\uffff\1\2",
            "\1\4\1\uffff\1\4\3\uffff\1\24\10\uffff\1\23\24\uffff\1\4\3\uffff\1\53\23\uffff\1\3\13\uffff\3\4\6\uffff\1\54\6\uffff\1\25\1\55",
            "\1\4\1\uffff\1\4\3\uffff\1\24\10\uffff\1\23\24\uffff\1\4\27\uffff\1\3\13\uffff\3\4\15\uffff\1\25",
            "\1\37\1\40",
            "\1\4\1\uffff\1\4\3\uffff\1\24\10\uffff\1\23\24\uffff\1\4\27\uffff\1\3\13\uffff\3\4\15\uffff\1\25",
            "\1\4\1\uffff\1\4\3\uffff\1\24\10\uffff\1\23\24\uffff\1\4\27\uffff\1\3\13\uffff\3\4\15\uffff\1\25",
            "\1\4\1\uffff\1\4\3\uffff\1\24\10\uffff\1\23\24\uffff\1\4\27\uffff\1\3\13\uffff\3\4\15\uffff\1\25",
            "\1\62\1\61\1\4\1\15\1\16\1\14\1\24\35\uffff\1\4\3\uffff\1\56\23\uffff\1\3\10\uffff\1\63\2\uffff\3\4\6\uffff\1\57\6\uffff\1\25\1\60",
            "\1\27\35\uffff\1\32\12\uffff\1\30\7\uffff\1\31",
            "\1\32",
            "\1\4\1\uffff\1\4\3\uffff\1\1\10\uffff\1\64\24\uffff\1\4\27\uffff\1\3\13\uffff\3\4\15\uffff\1\2",
            "\1\4\1\uffff\1\4\3\uffff\1\24\10\uffff\1\70\24\uffff\1\4\3\uffff\1\65\23\uffff\1\3\13\uffff\3\4\6\uffff\1\66\6\uffff\1\25\1\67",
            "\1\4\1\uffff\1\4\3\uffff\1\24\10\uffff\1\70\24\uffff\1\4\27\uffff\1\3\13\uffff\3\4\15\uffff\1\25",
            "\1\51\1\52",
            "\1\4\1\uffff\1\4\3\uffff\1\24\10\uffff\1\70\24\uffff\1\4\27\uffff\1\3\13\uffff\3\4\15\uffff\1\25",
            "\1\4\1\uffff\1\4\3\uffff\1\24\10\uffff\1\70\24\uffff\1\4\27\uffff\1\3\13\uffff\3\4\15\uffff\1\25",
            "\1\71",
            "\1\71",
            "\1\72",
            "\1\73",
            "\1\73\2\uffff\1\15\1\16",
            "\1\74",
            "\1\4\1\uffff\1\4\3\uffff\1\24\10\uffff\1\23\24\uffff\1\4\27\uffff\1\3\13\uffff\3\4\15\uffff\1\25",
            "\1\4\1\uffff\1\4\3\uffff\1\24\10\uffff\1\23\7\uffff\1\4\14\uffff\1\4\3\uffff\1\75\20\uffff\1\4\2\uffff\1\3\10\uffff\1\4\2\uffff\3\4\6\uffff\1\76\6\uffff\1\25\1\77\22\uffff\2\4",
            "\1\100",
            "\1\102\1\101\1\uffff\1\105\1\106\1\103\113\uffff\1\104",
            "\1\107",
            "\1\107",
            "\1\110",
            "\1\102\1\111\1\uffff\1\105\1\106\1\103\113\uffff\1\104",
            "\1\4\1\uffff\1\4\3\uffff\1\24\10\uffff\1\23\24\uffff\1\4\3\uffff\1\53\23\uffff\1\3\13\uffff\3\4\6\uffff\1\54\6\uffff\1\25\1\55",
            "\1\4\1\uffff\1\4\3\uffff\1\24\10\uffff\1\23\24\uffff\1\4\27\uffff\1\3\13\uffff\3\4\15\uffff\1\25",
            "\1\62\1\61\1\4\1\15\1\16\1\14\1\24\35\uffff\1\4\3\uffff\1\56\23\uffff\1\3\10\uffff\1\63\2\uffff\3\4\6\uffff\1\57\6\uffff\1\25\1\60",
            "\1\62\1\61\1\4\1\15\1\16\1\14\1\24\35\uffff\1\4\27\uffff\1\3\10\uffff\1\63\2\uffff\3\4\6\uffff\1\26\6\uffff\1\25",
            "\1\112",
            "\1\113",
            "\1\114",
            "\1\115\35\uffff\1\120\12\uffff\1\116\7\uffff\1\117",
            "\1\4\1\uffff\1\4\3\uffff\1\1\10\uffff\1\64\24\uffff\1\4\27\uffff\1\3\13\uffff\3\4\15\uffff\1\2",
            "\1\4\1\uffff\1\4\3\uffff\1\24\10\uffff\1\70\24\uffff\1\4\3\uffff\1\121\23\uffff\1\3\13\uffff\3\4\6\uffff\1\122\6\uffff\1\25\1\123",
            "\1\4\1\uffff\1\4\3\uffff\1\24\10\uffff\1\70\24\uffff\1\4\27\uffff\1\3\13\uffff\3\4\15\uffff\1\25",
            "\1\105\1\106",
            "\1\4\1\uffff\1\4\3\uffff\1\24\10\uffff\1\70\24\uffff\1\4\27\uffff\1\3\13\uffff\3\4\15\uffff\1\25",
            "\1\4\1\uffff\1\4\3\uffff\1\24\10\uffff\1\70\24\uffff\1\4\27\uffff\1\3\13\uffff\3\4\15\uffff\1\25",
            "\1\4\1\uffff\1\4\3\uffff\1\24\10\uffff\1\70\24\uffff\1\4\3\uffff\1\65\23\uffff\1\3\13\uffff\3\4\6\uffff\1\66\6\uffff\1\25\1\67",
            "\1\4\1\uffff\1\4\3\uffff\1\24\10\uffff\1\70\24\uffff\1\4\27\uffff\1\3\13\uffff\3\4\15\uffff\1\25",
            "\1\4\1\uffff\1\4\3\uffff\1\24\10\uffff\1\70\24\uffff\1\4\27\uffff\1\3\13\uffff\3\4\15\uffff\1\25",
            "\1\4\1\uffff\1\4\3\uffff\1\24\10\uffff\1\23\7\uffff\1\4\14\uffff\1\4\3\uffff\1\124\20\uffff\1\4\2\uffff\1\3\10\uffff\1\4\2\uffff\3\4\6\uffff\1\76\6\uffff\1\25\1\77\22\uffff\2\4",
            "\1\4\1\uffff\1\4\3\uffff\1\24\10\uffff\1\23\24\uffff\1\4\3\uffff\1\125\23\uffff\1\3\13\uffff\3\4\6\uffff\1\76\6\uffff\1\25\1\77",
            "\1\4\1\uffff\1\4\3\uffff\1\24\10\uffff\1\23\24\uffff\1\4\27\uffff\1\3\13\uffff\3\4\15\uffff\1\25",
            "\1\126",
            "\1\126",
            "\1\127",
            "\1\46\1\130\1\uffff\1\51\1\52\1\47\113\uffff\1\50",
            "\1\131",
            "\1\131",
            "\1\132",
            "\1\133",
            "\1\113",
            "\1\115\35\uffff\1\120\12\uffff\1\116\7\uffff\1\117",
            "\1\120",
            "\1\4\1\uffff\1\4\3\uffff\1\24\10\uffff\1\70\24\uffff\1\4\27\uffff\1\3\13\uffff\3\4\15\uffff\1\25",
            "\1\4\1\uffff\1\4\3\uffff\1\24\10\uffff\1\70\24\uffff\1\4\3\uffff\1\121\23\uffff\1\3\13\uffff\3\4\6\uffff\1\122\6\uffff\1\25\1\123",
            "\1\4\1\uffff\1\4\3\uffff\1\24\10\uffff\1\70\24\uffff\1\4\27\uffff\1\3\13\uffff\3\4\15\uffff\1\25",
            "\1\4\1\uffff\1\4\3\uffff\1\24\10\uffff\1\23\7\uffff\1\4\14\uffff\1\4\3\uffff\1\134\20\uffff\1\4\2\uffff\1\3\10\uffff\1\4\2\uffff\3\4\6\uffff\1\76\6\uffff\1\25\1\77\22\uffff\2\4",
            "\1\135",
            "\1\4\1\uffff\1\4\3\uffff\1\24\10\uffff\1\23\7\uffff\1\4\14\uffff\1\4\3\uffff\1\136\20\uffff\1\4\2\uffff\1\3\10\uffff\1\4\2\uffff\3\4\6\uffff\1\76\6\uffff\1\25\1\77\22\uffff\2\4",
            "\1\137",
            "\1\4\1\uffff\1\4\3\uffff\1\24\10\uffff\1\23\7\uffff\1\4\14\uffff\1\4\3\uffff\1\140\20\uffff\1\4\2\uffff\1\3\10\uffff\1\4\2\uffff\3\4\6\uffff\1\76\6\uffff\1\25\1\77\22\uffff\2\4",
            "\1\uffff"
    };

    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[][] dfa_45 = unpackEncodedStringArray(dfa_45s);

    class DFA94 extends DFA {

        public DFA94(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 94;
            this.eot = dfa_40;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "4705:2: ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA94_96 = input.LA(1);

                         
                        int index94_96 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred109_InternalLustre()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index94_96);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA94_9 = input.LA(1);

                         
                        int index94_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred109_InternalLustre()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index94_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 94, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_46s = "\135\uffff";
    static final String dfa_47s = "\3\4\1\uffff\1\31\3\uffff\3\4\1\7\1\12\1\4\3\12\6\4\1\7\1\12\3\4\1\54\1\7\3\12\1\7\4\12\2\4\1\12\2\4\1\7\3\4\1\7\2\4\1\7\2\12\1\4\1\54\1\112\1\4\2\12\1\7\4\12\2\4\1\54\3\4\1\7\3\4\1\7\2\4\2\12\1\7\5\12\1\54\1\112\1\12\2\4\1\7\2\12";
    static final String dfa_48s = "\2\166\1\4\1\uffff\1\166\3\uffff\1\166\1\4\1\10\1\7\5\166\1\4\2\166\1\134\2\4\1\7\1\166\1\4\2\125\1\135\1\10\3\166\1\10\7\166\2\4\1\7\1\125\2\4\1\7\1\4\1\10\1\7\2\166\1\4\1\135\1\112\3\166\1\10\6\166\1\135\1\125\2\4\1\7\1\125\2\4\1\7\1\125\3\166\1\10\5\166\1\135\1\112\1\166\2\4\1\7\2\166";
    static final String dfa_49s = "\3\uffff\1\1\1\uffff\1\2\1\3\1\4\125\uffff";
    static final String dfa_50s = "\135\uffff}>";
    static final String[] dfa_51s = {
            "\1\3\5\uffff\1\1\16\uffff\1\7\16\uffff\1\5\30\uffff\1\4\4\7\1\uffff\1\5\1\6\23\uffff\1\2\31\uffff\1\7",
            "\1\3\5\uffff\1\1\16\uffff\1\7\16\uffff\1\5\30\uffff\1\4\4\7\1\uffff\1\5\1\6\23\uffff\1\2\31\uffff\1\7",
            "\1\10",
            "",
            "\1\7\16\uffff\1\5\31\uffff\4\7\1\uffff\1\5\1\6\55\uffff\1\7",
            "",
            "",
            "",
            "\1\14\1\15\1\uffff\1\17\1\20\1\16\1\1\16\uffff\1\7\16\uffff\1\5\3\uffff\1\11\24\uffff\1\4\4\7\1\uffff\1\5\1\6\1\21\13\uffff\1\12\6\uffff\1\2\1\13\30\uffff\1\7",
            "\1\22",
            "\1\22\2\uffff\1\17\1\20",
            "\1\23",
            "\1\30\10\uffff\1\24\5\uffff\1\7\2\3\14\uffff\1\5\3\uffff\1\25\20\uffff\1\3\3\uffff\1\4\4\7\1\uffff\1\5\1\6\1\3\1\uffff\1\3\11\uffff\1\26\6\uffff\1\31\1\27\30\uffff\1\7",
            "\1\3\5\uffff\1\1\10\uffff\1\32\5\uffff\1\7\16\uffff\1\5\30\uffff\1\4\4\7\1\uffff\1\5\1\6\23\uffff\1\2\31\uffff\1\7",
            "\1\30\10\uffff\1\33\5\uffff\1\7\16\uffff\1\5\30\uffff\1\4\4\7\1\uffff\1\5\1\6\23\uffff\1\31\31\uffff\1\7",
            "\1\30\10\uffff\1\33\5\uffff\1\7\16\uffff\1\5\30\uffff\1\4\4\7\1\uffff\1\5\1\6\23\uffff\1\31\31\uffff\1\7",
            "\1\30\10\uffff\1\33\5\uffff\1\7\16\uffff\1\5\30\uffff\1\4\4\7\1\uffff\1\5\1\6\23\uffff\1\31\31\uffff\1\7",
            "\1\34",
            "\1\14\1\15\1\uffff\1\17\1\20\1\16\1\1\16\uffff\1\7\16\uffff\1\5\3\uffff\1\11\24\uffff\1\4\4\7\1\uffff\1\5\1\6\1\21\13\uffff\1\12\6\uffff\1\2\1\13\30\uffff\1\7",
            "\1\14\1\15\1\uffff\1\17\1\20\1\16\1\1\16\uffff\1\7\16\uffff\1\5\30\uffff\1\4\4\7\1\uffff\1\5\1\6\1\21\13\uffff\1\35\6\uffff\1\2\31\uffff\1\7",
            "\1\37\1\36\1\uffff\1\42\1\43\1\40\1\3\112\uffff\1\41\6\uffff\1\3",
            "\1\44",
            "\1\44",
            "\1\45",
            "\1\30\16\uffff\1\7\16\uffff\1\5\30\uffff\1\4\4\7\1\uffff\1\5\1\6\23\uffff\1\31\31\uffff\1\7",
            "\1\46",
            "\1\50\1\47\1\uffff\1\42\1\43\1\40\113\uffff\1\41",
            "\1\50\1\36\1\uffff\1\42\1\43\1\40\113\uffff\1\41",
            "\1\51\35\uffff\1\54\12\uffff\1\52\7\uffff\1\53",
            "\1\17\1\20",
            "\1\30\10\uffff\1\33\5\uffff\1\7\16\uffff\1\5\30\uffff\1\4\4\7\1\uffff\1\5\1\6\23\uffff\1\31\31\uffff\1\7",
            "\1\30\10\uffff\1\24\5\uffff\1\7\2\3\14\uffff\1\5\3\uffff\1\55\20\uffff\1\3\3\uffff\1\4\4\7\1\uffff\1\5\1\6\1\3\1\uffff\1\3\11\uffff\1\56\6\uffff\1\31\1\57\30\uffff\1\7",
            "\1\30\10\uffff\1\33\5\uffff\1\7\16\uffff\1\5\30\uffff\1\4\4\7\1\uffff\1\5\1\6\23\uffff\1\31\31\uffff\1\7",
            "\1\42\1\43",
            "\1\30\10\uffff\1\33\5\uffff\1\7\16\uffff\1\5\30\uffff\1\4\4\7\1\uffff\1\5\1\6\23\uffff\1\31\31\uffff\1\7",
            "\1\30\10\uffff\1\33\5\uffff\1\7\16\uffff\1\5\30\uffff\1\4\4\7\1\uffff\1\5\1\6\23\uffff\1\31\31\uffff\1\7",
            "\1\30\10\uffff\1\33\5\uffff\1\7\16\uffff\1\5\3\uffff\1\25\24\uffff\1\4\4\7\1\uffff\1\5\1\6\14\uffff\1\26\6\uffff\1\31\1\27\30\uffff\1\7",
            "\1\30\10\uffff\1\33\5\uffff\1\7\16\uffff\1\5\30\uffff\1\4\4\7\1\uffff\1\5\1\6\23\uffff\1\31\31\uffff\1\7",
            "\1\64\1\63\1\uffff\1\17\1\20\1\16\1\30\16\uffff\1\7\16\uffff\1\5\3\uffff\1\60\24\uffff\1\4\4\7\1\uffff\1\5\1\6\1\65\13\uffff\1\61\6\uffff\1\31\1\62\30\uffff\1\7",
            "\1\3\5\uffff\1\1\10\uffff\1\32\5\uffff\1\7\16\uffff\1\5\30\uffff\1\4\4\7\1\uffff\1\5\1\6\23\uffff\1\2\31\uffff\1\7",
            "\1\30\10\uffff\1\33\5\uffff\1\7\16\uffff\1\5\3\uffff\1\55\24\uffff\1\4\4\7\1\uffff\1\5\1\6\14\uffff\1\56\6\uffff\1\31\1\57\30\uffff\1\7",
            "\1\66",
            "\1\66",
            "\1\67",
            "\1\71\1\70\1\uffff\1\74\1\75\1\72\113\uffff\1\73",
            "\1\76",
            "\1\76",
            "\1\77",
            "\1\100",
            "\1\100\2\uffff\1\17\1\20",
            "\1\101",
            "\1\30\10\uffff\1\33\5\uffff\1\7\16\uffff\1\5\30\uffff\1\4\4\7\1\uffff\1\5\1\6\23\uffff\1\31\31\uffff\1\7",
            "\1\30\10\uffff\1\33\5\uffff\1\7\16\uffff\1\5\3\uffff\1\25\24\uffff\1\4\4\7\1\uffff\1\5\1\6\14\uffff\1\26\6\uffff\1\31\1\27\30\uffff\1\7",
            "\1\102",
            "\1\51\35\uffff\1\54\12\uffff\1\52\7\uffff\1\53",
            "\1\54",
            "\1\3\5\uffff\1\1\10\uffff\1\103\5\uffff\1\7\16\uffff\1\5\30\uffff\1\4\4\7\1\uffff\1\5\1\6\23\uffff\1\2\31\uffff\1\7",
            "\1\30\10\uffff\1\107\5\uffff\1\7\16\uffff\1\5\3\uffff\1\104\24\uffff\1\4\4\7\1\uffff\1\5\1\6\14\uffff\1\105\6\uffff\1\31\1\106\30\uffff\1\7",
            "\1\30\10\uffff\1\107\5\uffff\1\7\16\uffff\1\5\30\uffff\1\4\4\7\1\uffff\1\5\1\6\23\uffff\1\31\31\uffff\1\7",
            "\1\74\1\75",
            "\1\30\10\uffff\1\107\5\uffff\1\7\16\uffff\1\5\30\uffff\1\4\4\7\1\uffff\1\5\1\6\23\uffff\1\31\31\uffff\1\7",
            "\1\30\10\uffff\1\107\5\uffff\1\7\16\uffff\1\5\30\uffff\1\4\4\7\1\uffff\1\5\1\6\23\uffff\1\31\31\uffff\1\7",
            "\1\30\10\uffff\1\33\5\uffff\1\7\16\uffff\1\5\3\uffff\1\55\24\uffff\1\4\4\7\1\uffff\1\5\1\6\14\uffff\1\56\6\uffff\1\31\1\57\30\uffff\1\7",
            "\1\30\10\uffff\1\33\5\uffff\1\7\16\uffff\1\5\30\uffff\1\4\4\7\1\uffff\1\5\1\6\23\uffff\1\31\31\uffff\1\7",
            "\1\64\1\63\1\uffff\1\17\1\20\1\16\1\30\16\uffff\1\7\16\uffff\1\5\3\uffff\1\60\24\uffff\1\4\4\7\1\uffff\1\5\1\6\1\65\13\uffff\1\61\6\uffff\1\31\1\62\30\uffff\1\7",
            "\1\64\1\63\1\uffff\1\17\1\20\1\16\1\30\16\uffff\1\7\16\uffff\1\5\30\uffff\1\4\4\7\1\uffff\1\5\1\6\1\65\13\uffff\1\35\6\uffff\1\31\31\uffff\1\7",
            "\1\110\35\uffff\1\113\12\uffff\1\111\7\uffff\1\112",
            "\1\115\1\114\1\uffff\1\120\1\121\1\116\113\uffff\1\117",
            "\1\122",
            "\1\122",
            "\1\123",
            "\1\115\1\124\1\uffff\1\120\1\121\1\116\113\uffff\1\117",
            "\1\125",
            "\1\125",
            "\1\126",
            "\1\71\1\127\1\uffff\1\74\1\75\1\72\113\uffff\1\73",
            "\1\3\5\uffff\1\1\10\uffff\1\103\5\uffff\1\7\16\uffff\1\5\30\uffff\1\4\4\7\1\uffff\1\5\1\6\23\uffff\1\2\31\uffff\1\7",
            "\1\30\10\uffff\1\107\5\uffff\1\7\16\uffff\1\5\3\uffff\1\130\24\uffff\1\4\4\7\1\uffff\1\5\1\6\14\uffff\1\131\6\uffff\1\31\1\132\30\uffff\1\7",
            "\1\30\10\uffff\1\107\5\uffff\1\7\16\uffff\1\5\30\uffff\1\4\4\7\1\uffff\1\5\1\6\23\uffff\1\31\31\uffff\1\7",
            "\1\120\1\121",
            "\1\30\10\uffff\1\107\5\uffff\1\7\16\uffff\1\5\30\uffff\1\4\4\7\1\uffff\1\5\1\6\23\uffff\1\31\31\uffff\1\7",
            "\1\30\10\uffff\1\107\5\uffff\1\7\16\uffff\1\5\30\uffff\1\4\4\7\1\uffff\1\5\1\6\23\uffff\1\31\31\uffff\1\7",
            "\1\30\10\uffff\1\107\5\uffff\1\7\16\uffff\1\5\3\uffff\1\104\24\uffff\1\4\4\7\1\uffff\1\5\1\6\14\uffff\1\105\6\uffff\1\31\1\106\30\uffff\1\7",
            "\1\30\10\uffff\1\107\5\uffff\1\7\16\uffff\1\5\30\uffff\1\4\4\7\1\uffff\1\5\1\6\23\uffff\1\31\31\uffff\1\7",
            "\1\30\10\uffff\1\107\5\uffff\1\7\16\uffff\1\5\30\uffff\1\4\4\7\1\uffff\1\5\1\6\23\uffff\1\31\31\uffff\1\7",
            "\1\110\35\uffff\1\113\12\uffff\1\111\7\uffff\1\112",
            "\1\113",
            "\1\30\10\uffff\1\107\5\uffff\1\7\16\uffff\1\5\30\uffff\1\4\4\7\1\uffff\1\5\1\6\23\uffff\1\31\31\uffff\1\7",
            "\1\133",
            "\1\133",
            "\1\134",
            "\1\30\10\uffff\1\107\5\uffff\1\7\16\uffff\1\5\3\uffff\1\130\24\uffff\1\4\4\7\1\uffff\1\5\1\6\14\uffff\1\131\6\uffff\1\31\1\132\30\uffff\1\7",
            "\1\30\10\uffff\1\107\5\uffff\1\7\16\uffff\1\5\30\uffff\1\4\4\7\1\uffff\1\5\1\6\23\uffff\1\31\31\uffff\1\7"
    };

    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final char[] dfa_48 = DFA.unpackEncodedStringToUnsignedChars(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[][] dfa_51 = unpackEncodedStringArray(dfa_51s);

    class DFA96 extends DFA {

        public DFA96(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 96;
            this.eot = dfa_46;
            this.eof = dfa_46;
            this.min = dfa_47;
            this.max = dfa_48;
            this.accept = dfa_49;
            this.special = dfa_50;
            this.transition = dfa_51;
        }
        public String getDescription() {
            return "4824:2: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_StructDeclaration_3= ruleStructDeclaration )";
        }
    }
    static final String dfa_52s = "\111\uffff";
    static final String dfa_53s = "\2\12\1\4\1\31\1\102\1\103\1\104\1\105\1\106\4\uffff\3\4\1\7\1\4\5\12\2\4\1\54\3\4\2\7\2\4\1\7\1\4\3\12\1\7\4\12\1\54\1\112\3\12\1\7\2\12\2\4\1\7\3\4\1\7\5\12\1\7\4\12\2\4\1\7\2\12";
    static final String dfa_54s = "\2\166\1\4\6\166\4\uffff\1\166\1\4\1\10\1\7\1\4\7\166\1\135\1\125\2\4\1\7\1\10\2\4\1\7\1\125\3\166\1\10\4\166\1\135\1\112\3\166\1\10\2\166\2\4\1\7\1\125\2\4\1\7\5\166\1\10\4\166\2\4\1\7\2\166";
    static final String dfa_55s = "\11\uffff\1\1\1\2\1\3\1\4\74\uffff";
    static final String dfa_56s = "\111\uffff}>";
    static final String[] dfa_57s = {
            "\1\1\16\uffff\1\4\16\uffff\1\12\30\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\23\uffff\1\2\1\uffff\3\11\24\uffff\1\11\1\14",
            "\1\1\16\uffff\1\4\16\uffff\1\12\30\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\23\uffff\1\2\1\uffff\3\11\24\uffff\1\11\1\14",
            "\1\15",
            "\1\4\16\uffff\1\12\31\uffff\1\5\1\6\1\7\1\10\1\11\1\12\1\13\25\uffff\3\11\24\uffff\1\11\1\14",
            "\1\5\1\6\1\7\1\10\1\11\27\uffff\3\11\24\uffff\1\11\1\14",
            "\1\6\1\7\1\10\1\11\27\uffff\3\11\24\uffff\1\11\1\14",
            "\1\7\1\10\1\11\27\uffff\3\11\24\uffff\1\11\1\14",
            "\1\10\1\11\27\uffff\3\11\24\uffff\1\11\1\14",
            "\1\11\27\uffff\3\11\24\uffff\1\11\1\14",
            "",
            "",
            "",
            "",
            "\1\23\1\22\1\uffff\1\25\1\26\1\24\1\1\16\uffff\1\4\16\uffff\1\12\3\uffff\1\16\24\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\21\13\uffff\1\17\6\uffff\1\2\1\20\3\11\24\uffff\1\11\1\14",
            "\1\27",
            "\1\27\2\uffff\1\25\1\26",
            "\1\30",
            "\1\31",
            "\1\1\10\uffff\1\32\5\uffff\1\4\16\uffff\1\12\30\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\23\uffff\1\2\1\uffff\3\11\24\uffff\1\11\1\14",
            "\1\1\10\uffff\1\32\5\uffff\1\4\16\uffff\1\12\3\uffff\1\33\24\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\14\uffff\1\34\6\uffff\1\2\1\35\3\11\24\uffff\1\11\1\14",
            "\1\1\10\uffff\1\32\5\uffff\1\4\16\uffff\1\12\30\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\23\uffff\1\2\1\uffff\3\11\24\uffff\1\11\1\14",
            "\1\1\10\uffff\1\32\5\uffff\1\4\16\uffff\1\12\30\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\23\uffff\1\2\1\uffff\3\11\24\uffff\1\11\1\14",
            "\1\1\10\uffff\1\32\5\uffff\1\4\16\uffff\1\12\30\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\23\uffff\1\2\1\uffff\3\11\24\uffff\1\11\1\14",
            "\1\23\1\22\1\uffff\1\25\1\26\1\24\1\1\16\uffff\1\4\16\uffff\1\12\3\uffff\1\16\24\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\21\13\uffff\1\17\6\uffff\1\2\1\20\3\11\24\uffff\1\11\1\14",
            "\1\23\1\22\1\uffff\1\25\1\26\1\24\1\1\16\uffff\1\4\16\uffff\1\12\30\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\21\13\uffff\1\36\6\uffff\1\2\1\uffff\3\11\24\uffff\1\11\1\14",
            "\1\37\35\uffff\1\42\12\uffff\1\40\7\uffff\1\41",
            "\1\44\1\43\1\uffff\1\47\1\50\1\45\113\uffff\1\46",
            "\1\51",
            "\1\51",
            "\1\52",
            "\1\25\1\26",
            "\1\53",
            "\1\53",
            "\1\54",
            "\1\56\1\55\1\uffff\1\61\1\62\1\57\113\uffff\1\60",
            "\1\1\10\uffff\1\32\5\uffff\1\4\16\uffff\1\12\30\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\23\uffff\1\2\1\uffff\3\11\24\uffff\1\11\1\14",
            "\1\1\10\uffff\1\32\5\uffff\1\4\16\uffff\1\12\3\uffff\1\63\24\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\14\uffff\1\64\6\uffff\1\2\1\65\3\11\24\uffff\1\11\1\14",
            "\1\1\10\uffff\1\32\5\uffff\1\4\16\uffff\1\12\30\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\23\uffff\1\2\1\uffff\3\11\24\uffff\1\11\1\14",
            "\1\47\1\50",
            "\1\1\10\uffff\1\32\5\uffff\1\4\16\uffff\1\12\30\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\23\uffff\1\2\1\uffff\3\11\24\uffff\1\11\1\14",
            "\1\1\10\uffff\1\32\5\uffff\1\4\16\uffff\1\12\30\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\23\uffff\1\2\1\uffff\3\11\24\uffff\1\11\1\14",
            "\1\1\10\uffff\1\32\5\uffff\1\4\16\uffff\1\12\3\uffff\1\33\24\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\14\uffff\1\34\6\uffff\1\2\1\35\3\11\24\uffff\1\11\1\14",
            "\1\1\10\uffff\1\32\5\uffff\1\4\16\uffff\1\12\30\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\23\uffff\1\2\1\uffff\3\11\24\uffff\1\11\1\14",
            "\1\37\35\uffff\1\42\12\uffff\1\40\7\uffff\1\41",
            "\1\42",
            "\1\1\10\uffff\1\66\5\uffff\1\4\16\uffff\1\12\30\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\23\uffff\1\2\1\uffff\3\11\24\uffff\1\11\1\14",
            "\1\1\10\uffff\1\66\5\uffff\1\4\16\uffff\1\12\3\uffff\1\67\24\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\14\uffff\1\70\6\uffff\1\2\1\71\3\11\24\uffff\1\11\1\14",
            "\1\1\10\uffff\1\66\5\uffff\1\4\16\uffff\1\12\30\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\23\uffff\1\2\1\uffff\3\11\24\uffff\1\11\1\14",
            "\1\61\1\62",
            "\1\1\10\uffff\1\66\5\uffff\1\4\16\uffff\1\12\30\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\23\uffff\1\2\1\uffff\3\11\24\uffff\1\11\1\14",
            "\1\1\10\uffff\1\66\5\uffff\1\4\16\uffff\1\12\30\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\23\uffff\1\2\1\uffff\3\11\24\uffff\1\11\1\14",
            "\1\72",
            "\1\72",
            "\1\73",
            "\1\75\1\74\1\uffff\1\100\1\101\1\76\113\uffff\1\77",
            "\1\102",
            "\1\102",
            "\1\103",
            "\1\1\10\uffff\1\32\5\uffff\1\4\16\uffff\1\12\3\uffff\1\63\24\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\14\uffff\1\64\6\uffff\1\2\1\65\3\11\24\uffff\1\11\1\14",
            "\1\1\10\uffff\1\32\5\uffff\1\4\16\uffff\1\12\30\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\23\uffff\1\2\1\uffff\3\11\24\uffff\1\11\1\14",
            "\1\1\10\uffff\1\66\5\uffff\1\4\16\uffff\1\12\30\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\23\uffff\1\2\1\uffff\3\11\24\uffff\1\11\1\14",
            "\1\1\10\uffff\1\66\5\uffff\1\4\16\uffff\1\12\3\uffff\1\104\24\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\14\uffff\1\105\6\uffff\1\2\1\106\3\11\24\uffff\1\11\1\14",
            "\1\1\10\uffff\1\66\5\uffff\1\4\16\uffff\1\12\30\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\23\uffff\1\2\1\uffff\3\11\24\uffff\1\11\1\14",
            "\1\100\1\101",
            "\1\1\10\uffff\1\66\5\uffff\1\4\16\uffff\1\12\30\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\23\uffff\1\2\1\uffff\3\11\24\uffff\1\11\1\14",
            "\1\1\10\uffff\1\66\5\uffff\1\4\16\uffff\1\12\30\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\23\uffff\1\2\1\uffff\3\11\24\uffff\1\11\1\14",
            "\1\1\10\uffff\1\66\5\uffff\1\4\16\uffff\1\12\3\uffff\1\67\24\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\14\uffff\1\70\6\uffff\1\2\1\71\3\11\24\uffff\1\11\1\14",
            "\1\1\10\uffff\1\66\5\uffff\1\4\16\uffff\1\12\30\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\23\uffff\1\2\1\uffff\3\11\24\uffff\1\11\1\14",
            "\1\107",
            "\1\107",
            "\1\110",
            "\1\1\10\uffff\1\66\5\uffff\1\4\16\uffff\1\12\3\uffff\1\104\24\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\14\uffff\1\105\6\uffff\1\2\1\106\3\11\24\uffff\1\11\1\14",
            "\1\1\10\uffff\1\66\5\uffff\1\4\16\uffff\1\12\30\uffff\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\23\uffff\1\2\1\uffff\3\11\24\uffff\1\11\1\14"
    };

    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[][] dfa_57 = unpackEncodedStringArray(dfa_57s);

    class DFA97 extends DFA {

        public DFA97(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 97;
            this.eot = dfa_52;
            this.eof = dfa_52;
            this.min = dfa_53;
            this.max = dfa_54;
            this.accept = dfa_55;
            this.special = dfa_56;
            this.transition = dfa_57;
        }
        public String getDescription() {
            return "4890:2: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_StructDeclarationWOSemicolon_3= ruleStructDeclarationWOSemicolon )";
        }
    }
    static final String dfa_58s = "\32\uffff";
    static final String dfa_59s = "\1\4\31\uffff";
    static final String dfa_60s = "\3\4\2\uffff\3\4\1\7\2\4\1\0\2\4\1\54\3\4\1\7\2\4\1\54\1\112\3\4";
    static final String dfa_61s = "\2\166\1\4\2\uffff\1\166\1\4\1\10\1\7\1\4\1\166\1\0\2\166\1\135\1\125\2\4\1\7\1\125\1\166\1\135\1\112\1\166\1\125\1\166";
    static final String dfa_62s = "\3\uffff\1\1\1\2\25\uffff";
    static final String dfa_63s = "\13\uffff\1\0\16\uffff}>";
    static final String[] dfa_64s = {
            "\1\3\5\uffff\1\1\1\4\15\uffff\1\4\15\uffff\2\4\30\uffff\10\4\23\uffff\1\2\1\uffff\3\4\24\uffff\2\4",
            "\1\3\5\uffff\1\1\16\uffff\1\4\16\uffff\1\4\30\uffff\10\4\23\uffff\1\2\1\uffff\3\4\24\uffff\2\4",
            "\1\5",
            "",
            "",
            "\1\13\1\12\1\uffff\3\4\1\1\16\uffff\1\4\16\uffff\1\4\3\uffff\1\6\24\uffff\10\4\1\11\13\uffff\1\7\6\uffff\1\2\1\10\3\4\24\uffff\2\4",
            "\1\14",
            "\1\14\2\uffff\2\4",
            "\1\15",
            "\1\16",
            "\1\3\5\uffff\1\1\10\uffff\1\17\5\uffff\1\4\16\uffff\1\4\30\uffff\10\4\23\uffff\1\2\1\uffff\3\4\24\uffff\2\4",
            "\1\uffff",
            "\1\13\1\12\1\uffff\3\4\1\1\16\uffff\1\4\16\uffff\1\4\3\uffff\1\6\24\uffff\10\4\1\11\13\uffff\1\7\6\uffff\1\2\1\10\3\4\24\uffff\2\4",
            "\1\13\1\12\1\uffff\3\4\1\1\16\uffff\1\4\16\uffff\1\4\30\uffff\10\4\1\11\13\uffff\1\4\6\uffff\1\2\1\uffff\3\4\24\uffff\2\4",
            "\1\20\35\uffff\1\23\12\uffff\1\21\7\uffff\1\22",
            "\1\4\1\24\1\uffff\3\4\113\uffff\1\4",
            "\1\25",
            "\1\25",
            "\1\26",
            "\1\4\1\27\1\uffff\3\4\113\uffff\1\4",
            "\1\3\5\uffff\1\1\10\uffff\1\17\5\uffff\1\4\16\uffff\1\4\30\uffff\10\4\23\uffff\1\2\1\uffff\3\4\24\uffff\2\4",
            "\1\20\35\uffff\1\23\12\uffff\1\21\7\uffff\1\22",
            "\1\23",
            "\1\3\5\uffff\1\1\10\uffff\1\30\5\uffff\1\4\16\uffff\1\4\30\uffff\10\4\23\uffff\1\2\1\uffff\3\4\24\uffff\2\4",
            "\1\4\1\31\1\uffff\3\4\113\uffff\1\4",
            "\1\3\5\uffff\1\1\10\uffff\1\30\5\uffff\1\4\16\uffff\1\4\30\uffff\10\4\23\uffff\1\2\1\uffff\3\4\24\uffff\2\4"
    };

    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final char[] dfa_61 = DFA.unpackEncodedStringToUnsignedChars(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final short[][] dfa_64 = unpackEncodedStringArray(dfa_64s);

    class DFA131 extends DFA {

        public DFA131(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 131;
            this.eot = dfa_58;
            this.eof = dfa_59;
            this.min = dfa_60;
            this.max = dfa_61;
            this.accept = dfa_62;
            this.special = dfa_63;
            this.transition = dfa_64;
        }
        public String getDescription() {
            return "5676:3: ( ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA131_11 = input.LA(1);

                         
                        int index131_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred151_InternalLustre()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index131_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 131, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_65s = "\14\uffff";
    static final String dfa_66s = "\1\4\3\0\10\uffff";
    static final String dfa_67s = "\1\134\3\0\10\uffff";
    static final String dfa_68s = "\4\uffff\1\4\1\5\1\6\1\7\1\10\1\1\1\2\1\3";
    static final String dfa_69s = "\1\uffff\1\0\1\1\1\2\10\uffff}>";
    static final String[] dfa_70s = {
            "\1\3\1\uffff\1\4\3\uffff\1\1\35\uffff\1\6\43\uffff\1\5\1\7\1\10\15\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final char[] dfa_66 = DFA.unpackEncodedStringToUnsignedChars(dfa_66s);
    static final char[] dfa_67 = DFA.unpackEncodedStringToUnsignedChars(dfa_67s);
    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_68s);
    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final short[][] dfa_70 = unpackEncodedStringArray(dfa_70s);

    class DFA167 extends DFA {

        public DFA167(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 167;
            this.eot = dfa_65;
            this.eof = dfa_65;
            this.min = dfa_66;
            this.max = dfa_67;
            this.accept = dfa_68;
            this.special = dfa_69;
            this.transition = dfa_70;
        }
        public String getDescription() {
            return "6823:2: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_Emission_2= ruleEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA167_1 = input.LA(1);

                         
                        int index167_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred187_InternalLustre()) ) {s = 9;}

                        else if ( (synpred188_InternalLustre()) ) {s = 10;}

                        else if ( (synpred189_InternalLustre()) ) {s = 11;}

                        else if ( (synpred190_InternalLustre()) ) {s = 4;}

                        else if ( (synpred191_InternalLustre()) ) {s = 5;}

                        else if ( (synpred192_InternalLustre()) ) {s = 6;}

                        else if ( (synpred193_InternalLustre()) ) {s = 7;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index167_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA167_2 = input.LA(1);

                         
                        int index167_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred187_InternalLustre()) ) {s = 9;}

                        else if ( (synpred188_InternalLustre()) ) {s = 10;}

                        else if ( (synpred189_InternalLustre()) ) {s = 11;}

                        else if ( (synpred190_InternalLustre()) ) {s = 4;}

                        else if ( (synpred191_InternalLustre()) ) {s = 5;}

                        else if ( (synpred192_InternalLustre()) ) {s = 6;}

                        else if ( (synpred193_InternalLustre()) ) {s = 7;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index167_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA167_3 = input.LA(1);

                         
                        int index167_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred187_InternalLustre()) ) {s = 9;}

                        else if ( (synpred188_InternalLustre()) ) {s = 10;}

                        else if ( (synpred189_InternalLustre()) ) {s = 11;}

                         
                        input.seek(index167_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 167, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_71s = "\5\uffff";
    static final String dfa_72s = "\1\1\1\uffff\2\1\1\uffff";
    static final String dfa_73s = "\1\4\1\uffff\2\4\1\uffff";
    static final String dfa_74s = "\1\134\1\uffff\2\161\1\uffff";
    static final String dfa_75s = "\1\uffff\1\2\2\uffff\1\1";
    static final String dfa_76s = "\5\uffff}>";
    static final String[] dfa_77s = {
            "\1\2\1\uffff\1\1\3\uffff\1\1\34\uffff\2\1\26\uffff\2\1\13\uffff\3\1\15\uffff\1\1",
            "",
            "\1\1\1\uffff\1\1\1\4\2\uffff\1\1\20\uffff\1\1\10\uffff\1\1\2\uffff\2\1\3\uffff\1\1\20\uffff\1\3\1\uffff\2\1\7\uffff\2\1\2\uffff\3\1\15\uffff\1\1\23\uffff\2\1",
            "\1\1\1\uffff\1\1\1\4\2\uffff\1\1\20\uffff\1\1\10\uffff\1\1\2\uffff\2\1\3\uffff\1\1\20\uffff\1\3\1\uffff\2\1\7\uffff\2\1\2\uffff\3\1\15\uffff\1\1\23\uffff\2\1",
            ""
    };

    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final char[] dfa_73 = DFA.unpackEncodedStringToUnsignedChars(dfa_73s);
    static final char[] dfa_74 = DFA.unpackEncodedStringToUnsignedChars(dfa_74s);
    static final short[] dfa_75 = DFA.unpackEncodedString(dfa_75s);
    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final short[][] dfa_77 = unpackEncodedStringArray(dfa_77s);

    class DFA170 extends DFA {

        public DFA170(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 170;
            this.eot = dfa_71;
            this.eof = dfa_72;
            this.min = dfa_73;
            this.max = dfa_74;
            this.accept = dfa_75;
            this.special = dfa_76;
            this.transition = dfa_77;
        }
        public String getDescription() {
            return "()+ loopback of 7010:4: ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA173 extends DFA {

        public DFA173(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 173;
            this.eot = dfa_71;
            this.eof = dfa_72;
            this.min = dfa_73;
            this.max = dfa_74;
            this.accept = dfa_75;
            this.special = dfa_76;
            this.transition = dfa_77;
        }
        public String getDescription() {
            return "()+ loopback of 7130:4: ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA176 extends DFA {

        public DFA176(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 176;
            this.eot = dfa_71;
            this.eof = dfa_72;
            this.min = dfa_73;
            this.max = dfa_74;
            this.accept = dfa_75;
            this.special = dfa_76;
            this.transition = dfa_77;
        }
        public String getDescription() {
            return "()+ loopback of 7231:4: ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+";
        }
    }
    static final String dfa_78s = "\26\uffff";
    static final String dfa_79s = "\1\4\1\uffff\21\0\3\uffff";
    static final String dfa_80s = "\1\164\1\uffff\21\0\3\uffff";
    static final String dfa_81s = "\1\uffff\1\1\23\uffff\1\2";
    static final String dfa_82s = "\2\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\3\uffff}>";
    static final String[] dfa_83s = {
            "\1\13\1\5\1\21\1\3\1\4\1\10\1\17\31\uffff\1\7\1\uffff\1\6\1\uffff\1\14\45\uffff\1\16\6\uffff\1\2\2\uffff\1\15\3\uffff\1\20\14\uffff\1\1\1\uffff\1\22\1\uffff\1\1\4\uffff\1\11\1\1\1\12",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_78 = DFA.unpackEncodedString(dfa_78s);
    static final char[] dfa_79 = DFA.unpackEncodedStringToUnsignedChars(dfa_79s);
    static final char[] dfa_80 = DFA.unpackEncodedStringToUnsignedChars(dfa_80s);
    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final short[] dfa_82 = DFA.unpackEncodedString(dfa_82s);
    static final short[][] dfa_83 = unpackEncodedStringArray(dfa_83s);

    class DFA190 extends DFA {

        public DFA190(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 190;
            this.eot = dfa_78;
            this.eof = dfa_78;
            this.min = dfa_79;
            this.max = dfa_80;
            this.accept = dfa_81;
            this.special = dfa_82;
            this.transition = dfa_83;
        }
        public String getDescription() {
            return "7779:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA190_2 = input.LA(1);

                         
                        int index190_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred216_InternalLustre()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index190_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA190_3 = input.LA(1);

                         
                        int index190_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred216_InternalLustre()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index190_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA190_4 = input.LA(1);

                         
                        int index190_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred216_InternalLustre()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index190_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA190_5 = input.LA(1);

                         
                        int index190_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred216_InternalLustre()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index190_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA190_6 = input.LA(1);

                         
                        int index190_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred216_InternalLustre()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index190_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA190_7 = input.LA(1);

                         
                        int index190_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred216_InternalLustre()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index190_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA190_8 = input.LA(1);

                         
                        int index190_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred216_InternalLustre()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index190_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA190_9 = input.LA(1);

                         
                        int index190_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred216_InternalLustre()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index190_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA190_10 = input.LA(1);

                         
                        int index190_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred216_InternalLustre()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index190_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA190_11 = input.LA(1);

                         
                        int index190_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred216_InternalLustre()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index190_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA190_12 = input.LA(1);

                         
                        int index190_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred216_InternalLustre()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index190_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA190_13 = input.LA(1);

                         
                        int index190_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred216_InternalLustre()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index190_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA190_14 = input.LA(1);

                         
                        int index190_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred216_InternalLustre()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index190_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA190_15 = input.LA(1);

                         
                        int index190_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred216_InternalLustre()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index190_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA190_16 = input.LA(1);

                         
                        int index190_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred216_InternalLustre()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index190_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA190_17 = input.LA(1);

                         
                        int index190_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred216_InternalLustre()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index190_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA190_18 = input.LA(1);

                         
                        int index190_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred216_InternalLustre()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index190_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 190, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_84s = "\1\4\5\uffff\13\0\3\uffff";
    static final String dfa_85s = "\1\164\5\uffff\13\0\3\uffff";
    static final String dfa_86s = "\1\uffff\1\1\20\uffff\1\2\1\uffff";
    static final String dfa_87s = "\6\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\3\uffff}>";
    static final String[] dfa_88s = {
            "\1\12\1\1\1\20\2\1\1\7\1\16\31\uffff\1\6\1\uffff\1\1\1\uffff\1\13\45\uffff\1\15\6\uffff\1\1\2\uffff\1\14\3\uffff\1\17\14\uffff\1\22\1\uffff\1\1\6\uffff\1\10\1\22\1\11",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final char[] dfa_84 = DFA.unpackEncodedStringToUnsignedChars(dfa_84s);
    static final char[] dfa_85 = DFA.unpackEncodedStringToUnsignedChars(dfa_85s);
    static final short[] dfa_86 = DFA.unpackEncodedString(dfa_86s);
    static final short[] dfa_87 = DFA.unpackEncodedString(dfa_87s);
    static final short[][] dfa_88 = unpackEncodedStringArray(dfa_88s);

    class DFA202 extends DFA {

        public DFA202(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 202;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_84;
            this.max = dfa_85;
            this.accept = dfa_86;
            this.special = dfa_87;
            this.transition = dfa_88;
        }
        public String getDescription() {
            return "8436:2: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA202_6 = input.LA(1);

                         
                        int index202_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred228_InternalLustre()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index202_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA202_7 = input.LA(1);

                         
                        int index202_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred228_InternalLustre()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index202_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA202_8 = input.LA(1);

                         
                        int index202_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred228_InternalLustre()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index202_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA202_9 = input.LA(1);

                         
                        int index202_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred228_InternalLustre()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index202_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA202_10 = input.LA(1);

                         
                        int index202_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred228_InternalLustre()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index202_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA202_11 = input.LA(1);

                         
                        int index202_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred228_InternalLustre()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index202_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA202_12 = input.LA(1);

                         
                        int index202_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred228_InternalLustre()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index202_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA202_13 = input.LA(1);

                         
                        int index202_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred228_InternalLustre()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index202_13);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA202_14 = input.LA(1);

                         
                        int index202_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred228_InternalLustre()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index202_14);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA202_15 = input.LA(1);

                         
                        int index202_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred228_InternalLustre()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index202_15);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA202_16 = input.LA(1);

                         
                        int index202_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred228_InternalLustre()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index202_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 202, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_89s = "\13\uffff";
    static final String dfa_90s = "\3\uffff\1\2\5\uffff\1\2\1\uffff";
    static final String dfa_91s = "\1\4\2\uffff\1\4\5\uffff\1\4\1\uffff";
    static final String dfa_92s = "\1\164\2\uffff\1\166\5\uffff\1\166\1\uffff";
    static final String dfa_93s = "\1\uffff\1\1\1\2\1\uffff\1\3\1\5\1\6\1\7\1\10\1\uffff\1\4";
    static final String dfa_94s = "\13\uffff}>";
    static final String[] dfa_95s = {
            "\1\3\1\uffff\1\10\2\uffff\1\1\1\10\31\uffff\1\4\3\uffff\1\5\45\uffff\1\7\11\uffff\1\6\3\uffff\1\10\25\uffff\1\2\1\uffff\1\2",
            "",
            "",
            "\1\2\1\uffff\1\2\3\uffff\2\2\7\uffff\2\2\4\uffff\3\2\4\uffff\2\2\2\uffff\1\12\1\2\1\uffff\2\2\3\uffff\1\2\2\uffff\2\2\2\uffff\6\2\1\12\1\2\2\uffff\1\11\1\uffff\31\2\4\uffff\1\2\1\uffff\3\2\1\uffff\7\2\1\uffff\1\2\1\uffff\1\2\10\uffff\2\2",
            "",
            "",
            "",
            "",
            "",
            "\1\2\1\uffff\1\2\3\uffff\2\2\7\uffff\2\2\4\uffff\3\2\4\uffff\2\2\2\uffff\1\12\1\2\1\uffff\2\2\3\uffff\1\2\2\uffff\2\2\2\uffff\6\2\1\12\1\2\2\uffff\1\11\1\uffff\31\2\4\uffff\1\2\1\uffff\3\2\1\uffff\7\2\1\uffff\1\2\1\uffff\1\2\10\uffff\2\2",
            ""
    };

    static final short[] dfa_89 = DFA.unpackEncodedString(dfa_89s);
    static final short[] dfa_90 = DFA.unpackEncodedString(dfa_90s);
    static final char[] dfa_91 = DFA.unpackEncodedStringToUnsignedChars(dfa_91s);
    static final char[] dfa_92 = DFA.unpackEncodedStringToUnsignedChars(dfa_92s);
    static final short[] dfa_93 = DFA.unpackEncodedString(dfa_93s);
    static final short[] dfa_94 = DFA.unpackEncodedString(dfa_94s);
    static final short[][] dfa_95 = unpackEncodedStringArray(dfa_95s);

    class DFA219 extends DFA {

        public DFA219(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 219;
            this.eot = dfa_89;
            this.eof = dfa_90;
            this.min = dfa_91;
            this.max = dfa_92;
            this.accept = dfa_93;
            this.special = dfa_94;
            this.transition = dfa_95;
        }
        public String getDescription() {
            return "9417:2: (this_BoolValue_0= ruleBoolValue | this_ValuedObjectTestExpression_1= ruleValuedObjectTestExpression | (otherlv_2= '(' this_BoolExpression_3= ruleBoolExpression otherlv_4= ')' ) | this_ReferenceCall_5= ruleReferenceCall | this_FunctionCall_6= ruleFunctionCall | this_RandomCall_7= ruleRandomCall | this_RandomizeCall_8= ruleRandomizeCall | this_TextExpression_9= ruleTextExpression )";
        }
    }
    static final String dfa_96s = "\1\4\4\uffff\1\0\13\uffff";
    static final String dfa_97s = "\1\164\4\uffff\1\0\13\uffff";
    static final String dfa_98s = "\1\uffff\1\1\1\2\1\3\1\4\1\uffff\1\6\11\uffff\1\5";
    static final String dfa_99s = "\5\uffff\1\0\13\uffff}>";
    static final String[] dfa_100s = {
            "\1\6\1\3\1\6\1\1\1\2\2\6\31\uffff\1\5\1\uffff\1\4\1\uffff\1\6\45\uffff\1\6\11\uffff\1\6\3\uffff\1\6\25\uffff\1\6\1\uffff\1\6",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_96 = DFA.unpackEncodedStringToUnsignedChars(dfa_96s);
    static final char[] dfa_97 = DFA.unpackEncodedStringToUnsignedChars(dfa_97s);
    static final short[] dfa_98 = DFA.unpackEncodedString(dfa_98s);
    static final short[] dfa_99 = DFA.unpackEncodedString(dfa_99s);
    static final short[][] dfa_100 = unpackEncodedStringArray(dfa_100s);

    class DFA220 extends DFA {

        public DFA220(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 220;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_96;
            this.max = dfa_97;
            this.accept = dfa_98;
            this.special = dfa_99;
            this.transition = dfa_100;
        }
        public String getDescription() {
            return "9541:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA220_5 = input.LA(1);

                         
                        int index220_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred256_InternalLustre()) ) {s = 16;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index220_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 220, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_101s = "\1\4\1\uffff\21\0\4\uffff";
    static final String dfa_102s = "\1\164\1\uffff\21\0\4\uffff";
    static final String dfa_103s = "\1\uffff\1\1\23\uffff\1\3\1\2";
    static final String dfa_104s = "\2\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\4\uffff}>";
    static final String[] dfa_105s = {
            "\1\13\1\5\1\21\1\3\1\4\1\10\1\17\31\uffff\1\7\1\uffff\1\6\1\uffff\1\14\45\uffff\1\16\6\uffff\1\2\2\uffff\1\15\1\uffff\1\25\1\uffff\1\20\14\uffff\1\1\1\uffff\1\22\1\uffff\1\1\4\uffff\1\11\1\1\1\12",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_101 = DFA.unpackEncodedStringToUnsignedChars(dfa_101s);
    static final char[] dfa_102 = DFA.unpackEncodedStringToUnsignedChars(dfa_102s);
    static final short[] dfa_103 = DFA.unpackEncodedString(dfa_103s);
    static final short[] dfa_104 = DFA.unpackEncodedString(dfa_104s);
    static final short[][] dfa_105 = unpackEncodedStringArray(dfa_105s);

    class DFA236 extends DFA {

        public DFA236(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 236;
            this.eot = dfa_19;
            this.eof = dfa_19;
            this.min = dfa_101;
            this.max = dfa_102;
            this.accept = dfa_103;
            this.special = dfa_104;
            this.transition = dfa_105;
        }
        public String getDescription() {
            return "10543:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA236_2 = input.LA(1);

                         
                        int index236_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred272_InternalLustre()) ) {s = 1;}

                        else if ( (synpred273_InternalLustre()) ) {s = 22;}

                         
                        input.seek(index236_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA236_3 = input.LA(1);

                         
                        int index236_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred272_InternalLustre()) ) {s = 1;}

                        else if ( (synpred273_InternalLustre()) ) {s = 22;}

                         
                        input.seek(index236_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA236_4 = input.LA(1);

                         
                        int index236_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred272_InternalLustre()) ) {s = 1;}

                        else if ( (synpred273_InternalLustre()) ) {s = 22;}

                         
                        input.seek(index236_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA236_5 = input.LA(1);

                         
                        int index236_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred272_InternalLustre()) ) {s = 1;}

                        else if ( (synpred273_InternalLustre()) ) {s = 22;}

                         
                        input.seek(index236_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA236_6 = input.LA(1);

                         
                        int index236_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred272_InternalLustre()) ) {s = 1;}

                        else if ( (synpred273_InternalLustre()) ) {s = 22;}

                         
                        input.seek(index236_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA236_7 = input.LA(1);

                         
                        int index236_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred272_InternalLustre()) ) {s = 1;}

                        else if ( (synpred273_InternalLustre()) ) {s = 22;}

                         
                        input.seek(index236_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA236_8 = input.LA(1);

                         
                        int index236_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred272_InternalLustre()) ) {s = 1;}

                        else if ( (synpred273_InternalLustre()) ) {s = 22;}

                         
                        input.seek(index236_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA236_9 = input.LA(1);

                         
                        int index236_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred272_InternalLustre()) ) {s = 1;}

                        else if ( (synpred273_InternalLustre()) ) {s = 22;}

                         
                        input.seek(index236_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA236_10 = input.LA(1);

                         
                        int index236_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred272_InternalLustre()) ) {s = 1;}

                        else if ( (synpred273_InternalLustre()) ) {s = 22;}

                         
                        input.seek(index236_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA236_11 = input.LA(1);

                         
                        int index236_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred272_InternalLustre()) ) {s = 1;}

                        else if ( (synpred273_InternalLustre()) ) {s = 22;}

                         
                        input.seek(index236_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA236_12 = input.LA(1);

                         
                        int index236_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred272_InternalLustre()) ) {s = 1;}

                        else if ( (synpred273_InternalLustre()) ) {s = 22;}

                         
                        input.seek(index236_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA236_13 = input.LA(1);

                         
                        int index236_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred272_InternalLustre()) ) {s = 1;}

                        else if ( (synpred273_InternalLustre()) ) {s = 22;}

                         
                        input.seek(index236_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA236_14 = input.LA(1);

                         
                        int index236_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred272_InternalLustre()) ) {s = 1;}

                        else if ( (synpred273_InternalLustre()) ) {s = 22;}

                         
                        input.seek(index236_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA236_15 = input.LA(1);

                         
                        int index236_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred272_InternalLustre()) ) {s = 1;}

                        else if ( (synpred273_InternalLustre()) ) {s = 22;}

                         
                        input.seek(index236_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA236_16 = input.LA(1);

                         
                        int index236_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred272_InternalLustre()) ) {s = 1;}

                        else if ( (synpred273_InternalLustre()) ) {s = 22;}

                         
                        input.seek(index236_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA236_17 = input.LA(1);

                         
                        int index236_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred272_InternalLustre()) ) {s = 1;}

                        else if ( (synpred273_InternalLustre()) ) {s = 22;}

                         
                        input.seek(index236_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA236_18 = input.LA(1);

                         
                        int index236_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred272_InternalLustre()) ) {s = 1;}

                        else if ( (synpred273_InternalLustre()) ) {s = 22;}

                         
                        input.seek(index236_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 236, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_106s = "\3\uffff\1\12\5\uffff\1\10\1\uffff\2\12\1\uffff\1\10\1\uffff\1\10\1\uffff\1\10\1\uffff\1\10\1\uffff";
    static final String dfa_107s = "\1\12\1\uffff\4\4\1\7\2\uffff\1\4\1\uffff\12\4\1\0";
    static final String dfa_108s = "\1\134\1\uffff\1\4\1\166\1\4\1\10\1\7\2\uffff\1\166\1\uffff\2\166\1\4\1\166\1\4\1\166\1\4\1\166\1\4\1\166\1\0";
    static final String dfa_109s = "\1\uffff\1\1\5\uffff\1\3\1\2\1\uffff\1\4\13\uffff";
    static final String dfa_110s = "\25\uffff\1\0}>";
    static final String[] dfa_111s = {
            "\1\1\121\uffff\1\2",
            "",
            "\1\3",
            "\1\11\1\10\1\12\3\10\1\12\16\uffff\1\12\16\uffff\1\12\3\uffff\1\4\23\uffff\11\12\1\7\2\uffff\3\12\6\uffff\1\5\6\uffff\1\12\1\6\3\12\24\uffff\2\12",
            "\1\13",
            "\1\13\2\uffff\2\10",
            "\1\14",
            "",
            "",
            "\1\10\1\uffff\1\10\3\uffff\1\10\10\uffff\1\10\5\uffff\1\10\1\uffff\1\12\14\uffff\1\10\3\uffff\1\15\20\uffff\1\12\2\uffff\11\10\1\12\2\uffff\3\10\6\uffff\1\10\6\uffff\5\10\17\uffff\2\12\3\uffff\2\10",
            "",
            "\1\11\1\10\1\12\3\10\1\12\16\uffff\1\12\16\uffff\1\12\3\uffff\1\4\23\uffff\11\12\1\7\2\uffff\3\12\6\uffff\1\5\6\uffff\1\12\1\6\3\12\24\uffff\2\12",
            "\1\11\1\10\1\12\3\10\1\12\16\uffff\1\12\16\uffff\1\12\27\uffff\11\12\1\7\2\uffff\3\12\6\uffff\1\10\6\uffff\1\12\1\uffff\3\12\24\uffff\2\12",
            "\1\16",
            "\1\10\1\uffff\1\10\3\uffff\1\10\10\uffff\1\10\5\uffff\1\10\1\uffff\1\12\14\uffff\1\10\3\uffff\1\17\20\uffff\1\12\2\uffff\11\10\1\12\2\uffff\3\10\6\uffff\1\10\6\uffff\5\10\17\uffff\2\12\3\uffff\2\10",
            "\1\20",
            "\1\10\1\uffff\1\10\3\uffff\1\10\10\uffff\1\10\5\uffff\1\10\1\uffff\1\12\14\uffff\1\10\3\uffff\1\21\20\uffff\1\12\2\uffff\11\10\1\12\2\uffff\3\10\6\uffff\1\10\6\uffff\5\10\17\uffff\2\12\3\uffff\2\10",
            "\1\22",
            "\1\10\1\uffff\1\10\3\uffff\1\10\10\uffff\1\10\5\uffff\1\10\1\uffff\1\12\14\uffff\1\10\3\uffff\1\23\20\uffff\1\12\2\uffff\11\10\1\12\2\uffff\3\10\6\uffff\1\10\6\uffff\5\10\17\uffff\2\12\3\uffff\2\10",
            "\1\24",
            "\1\10\1\uffff\1\10\3\uffff\1\10\10\uffff\1\10\5\uffff\1\10\1\uffff\1\12\14\uffff\1\10\3\uffff\1\25\20\uffff\1\12\2\uffff\11\10\1\12\2\uffff\3\10\6\uffff\1\10\6\uffff\5\10\17\uffff\2\12\3\uffff\2\10",
            "\1\uffff"
    };
    static final short[] dfa_106 = DFA.unpackEncodedString(dfa_106s);
    static final char[] dfa_107 = DFA.unpackEncodedStringToUnsignedChars(dfa_107s);
    static final char[] dfa_108 = DFA.unpackEncodedStringToUnsignedChars(dfa_108s);
    static final short[] dfa_109 = DFA.unpackEncodedString(dfa_109s);
    static final short[] dfa_110 = DFA.unpackEncodedString(dfa_110s);
    static final short[][] dfa_111 = unpackEncodedStringArray(dfa_111s);

    class DFA243 extends DFA {

        public DFA243(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 243;
            this.eot = dfa_78;
            this.eof = dfa_106;
            this.min = dfa_107;
            this.max = dfa_108;
            this.accept = dfa_109;
            this.special = dfa_110;
            this.transition = dfa_111;
        }
        public String getDescription() {
            return "11021:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA243_21 = input.LA(1);

                         
                        int index243_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalLustre()) ) {s = 8;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index243_21);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 243, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_112s = "\3\uffff\1\7\6\uffff\2\7";
    static final String dfa_113s = "\1\12\1\uffff\4\4\1\7\3\uffff\2\4";
    static final String dfa_114s = "\1\134\1\uffff\1\4\1\135\2\4\1\7\3\uffff\1\135\1\134";
    static final String dfa_115s = "\1\uffff\1\1\5\uffff\1\4\1\3\1\2\2\uffff";
    static final String dfa_116s = "\14\uffff}>";
    static final String[] dfa_117s = {
            "\1\1\121\uffff\1\2",
            "",
            "\1\3",
            "\1\7\1\11\4\uffff\1\7\41\uffff\1\4\34\uffff\1\10\13\uffff\1\5\6\uffff\1\7\1\6",
            "\1\12",
            "\1\12",
            "\1\13",
            "",
            "",
            "",
            "\1\7\1\11\4\uffff\1\7\41\uffff\1\4\34\uffff\1\10\13\uffff\1\5\6\uffff\1\7\1\6",
            "\1\7\1\11\4\uffff\1\7\76\uffff\1\10\22\uffff\1\7"
    };
    static final short[] dfa_112 = DFA.unpackEncodedString(dfa_112s);
    static final char[] dfa_113 = DFA.unpackEncodedStringToUnsignedChars(dfa_113s);
    static final char[] dfa_114 = DFA.unpackEncodedStringToUnsignedChars(dfa_114s);
    static final short[] dfa_115 = DFA.unpackEncodedString(dfa_115s);
    static final short[] dfa_116 = DFA.unpackEncodedString(dfa_116s);
    static final short[][] dfa_117 = unpackEncodedStringArray(dfa_117s);

    class DFA244 extends DFA {

        public DFA244(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 244;
            this.eot = dfa_65;
            this.eof = dfa_112;
            this.min = dfa_113;
            this.max = dfa_114;
            this.accept = dfa_115;
            this.special = dfa_116;
            this.transition = dfa_117;
        }
        public String getDescription() {
            return "11087:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )";
        }
    }
 

    
    private static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x08000108E2020000L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x00000108E2020002L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000240000L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000180000L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000200000L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x00000000F2000000L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000100000L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000C00000L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x00000000F2800000L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x00000100E2000000L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000001000000L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000004000000L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000000L,0x00000001C0000000L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000008000002L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x00000150000007F0L,0x001C2A0011204000L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x00000000C0000000L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0200001100000000L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000200100000L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000400000000L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000C40000L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000001000000000L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x00000000D2000010L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000002000180000L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000000410L,0x0014000010000000L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x00000100E2000412L,0x0014000010000000L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x00000100E2000002L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000008100000L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000000L,0x00400003C0000000L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000004000000000L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000000010L,0x0014000000000000L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000008000080000L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000008000100000L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000008000000000L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000010000000000L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000100002L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0200001108000000L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x000006000A100000L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000100000002L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x00000000D2000000L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000060002000000L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000060002000410L,0x0014000010000000L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000680000000010L,0x0014000000000000L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000100000100002L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000008000000L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000800001000000L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0001000000000000L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0006600000000010L,0x0014000000000000L});
        public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0006600000000012L,0x0014000000000000L});
        public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0018000000000000L});
        public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0020000000000002L});
        public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x00000150000007F0L,0x0014000011004000L});
        public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
        public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x00000150000007F0L,0x0014080011204000L});
        public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
        public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0400000000000000L});
        public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0008000000000000L});
        public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0040000000000000L});
        public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0100000000000002L});
        public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0080000000000002L});
        public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000002000000410L,0x0014000010000000L});
        public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000002000100000L});
        public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000200180000L});
        public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000004080000L});
        public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0400000000000002L});
        public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x3000000000000000L});
        public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x2000000000000000L});
        public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x4000000000000000L});
        public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x8000010002000452L,0x00540003D00071BFL});
        public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x8000010000000452L,0x0014000010007001L});
        public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000004000000010L});
        public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x8000000000000002L});
        public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x8000018002000450L,0x00540003D00071BFL});
        public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x8000018000000450L,0x0014000010007001L});
        public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x8000008000000000L});
        public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000400L,0x0000000010000001L});
        public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000002000400L,0x00200001D000007EL});
        public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000002000000L,0x00200001C000007EL});
        public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000080802L});
        public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000002000400L,0x00400003D000003EL});
        public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000002000000L,0x00400003C000003CL});
        public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000000L,0x00400003C000003CL});
        public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000000L,0x00400003C0000038L});
        public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000000L,0x00400003C0000030L});
        public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000000L,0x00400003C0000020L});
        public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000100410L,0x0014000010000000L});
        public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000000802L});
        public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000018002000400L,0x00600003D00001FEL});
        public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000000000C12L,0x0014000010000000L});
        public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000004000002L});
        public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000010000000400L,0x0000000010000082L});
        public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000010000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000000420L,0x0000000010000000L});
        public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000000080410L,0x0014000010000000L});
        public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000000400L,0x0000000010000102L});
        public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
        public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000004000000430L,0x0014000010000010L});
        public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000004000000410L,0x0014000010000010L});
        public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000000000L,0x0000C00000000000L});
        public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000004000000410L,0x0014000010000000L});
        public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000008000002L,0x0000000000000A00L});
        public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
        public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000800L});
        public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000800000000000L,0x03A0000000540000L});
        public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000001000000002L,0x0000000000000100L});
        public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000002000000000L});
        public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
        public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000012L,0x0014000000000000L});
        public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000000L,0x0003000000000000L});
        public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000000440L,0x0000000010000000L});
        public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000000000400L,0x0000000010001000L});
        public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0200001000000000L});
        public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x00000150000007F0L,0x001C2A0013244000L});
        public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000002000080000L});
        public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000010000000400L,0x0000000010000000L});
        public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000000000400L,0x0000000010002000L});
        public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000000000000400L,0x0000000010004000L});
        public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000000002L,0x0000008000000000L});
        public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000000000000002L,0x0000000000008000L});
        public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000000000002L,0x0000010000000000L});
        public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
        public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000800000000002L});
        public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000000000000002L,0x0000000000020000L});
        public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000000000000002L,0x0000000000040000L});
        public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000008000002L,0x0000007C00000000L});
        public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000000200000002L});
        public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x0000000000000002L,0x0000000000080000L});
        public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0000000000000002L,0x0000000000100000L});
        public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
        public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L});
        public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000000000000002L,0x0000000000800000L});
        public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x2000000000000002L});
        public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x0000100000000002L,0x0000000000000200L});
        public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0000000000000080L});
        public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0200000000000002L});
        public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L});
        public static final BitSet FOLLOW_141 = new BitSet(new long[]{0x00000150000007F0L,0x001C2A0015204000L});
        public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x0000008000000020L});
        public static final BitSet FOLLOW_143 = new BitSet(new long[]{0x00000040000003A0L,0x0000000008000200L});
        public static final BitSet FOLLOW_144 = new BitSet(new long[]{0x00000040000003A0L,0x0000000008000600L});
        public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x0000000000080000L,0x0000000000000400L});
        public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x00000000000003B0L,0x0000000000200000L});
        public static final BitSet FOLLOW_147 = new BitSet(new long[]{0x0000000000080002L});
        public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x0000000000000230L});
        public static final BitSet FOLLOW_149 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
        public static final BitSet FOLLOW_150 = new BitSet(new long[]{0x0000100000000002L,0x0000000020200000L});
        public static final BitSet FOLLOW_151 = new BitSet(new long[]{0x0000000000000100L});
    }


}