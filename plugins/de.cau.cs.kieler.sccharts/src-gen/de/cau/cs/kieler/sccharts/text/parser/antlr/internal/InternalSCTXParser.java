package de.cau.cs.kieler.sccharts.text.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.cau.cs.kieler.sccharts.text.services.SCTXGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalSCTXParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_STRING", "RULE_ID", "RULE_INT", "RULE_HOSTCODE", "RULE_FLOAT", "RULE_BOOLEAN", "RULE_COMMENT_ANNOTATION", "RULE_SL_COMMENT_ANNOTATION", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_NUMBER", "RULE_WS", "RULE_ANY_OTHER", "'scchart'", "'{'", "'}'", "'initial'", "'final'", "'violation'", "'connector'", "'state'", "'is'", "'('", "','", "')'", "'!'", "'&'", "'to'", "'['", "']'", "'deferred'", "'if'", "'do'", "';'", "'label'", "'region'", "':'", "'dataflow'", "'entry'", "'during'", "'exit'", "'weak'", "'suspend'", "'preceding'", "'succeeding'", "'scope'", "'expression'", "'const'", "'input'", "'output'", "'static'", "'signal'", "'ref'", "'extern'", "'schedule'", "'prio'", "'='", "'combine'", "'.'", "'()'", "'<'", "'>'", "'print'", "'||'", "'&&'", "'|'", "'+'", "'-'", "'*'", "'/'", "'%'", "'\\''", "'@'", "'#'", "'go to'", "'abort to'", "'join to'", "'-->'", "'o->'", "'>->'", "'undefined'", "'delayed'", "'immediate'", "'auto'", "'reset'", "'shallow history'", "'history'", "'conflict'", "'confluent'", "'+='", "'-='", "'*='", "'/='", "'%='", "'&='", "'|='", "'^='", "'min='", "'max='", "'++'", "'--'", "'=='", "'<='", "'>='", "'!='", "'pre'", "'val'", "'pure'", "'bool'", "'unsigned'", "'int'", "'float'", "'string'", "'host'", "'none'", "'max'", "'min'"
    };
    public static final int T__50=50;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=5;
    public static final int RULE_INT=6;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=12;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int RULE_COMMENT_ANNOTATION=10;
    public static final int T__37=37;
    public static final int RULE_SL_COMMENT_ANNOTATION=11;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int RULE_FLOAT=8;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int RULE_BOOLEAN=9;
    public static final int T__19=19;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__26=26;
    public static final int RULE_HOSTCODE=7;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int T__120=120;
    public static final int RULE_STRING=4;
    public static final int RULE_SL_COMMENT=13;
    public static final int T__77=77;
    public static final int T__119=119;
    public static final int T__78=78;
    public static final int T__118=118;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__117=117;
    public static final int T__76=76;
    public static final int T__116=116;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=15;
    public static final int RULE_ANY_OTHER=16;
    public static final int RULE_NUMBER=14;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalSCTXParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSCTXParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSCTXParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSCTX.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */
     
     	private SCTXGrammarAccess grammarAccess;
     	
        public InternalSCTXParser(TokenStream input, SCTXGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }
        
        @Override
        protected String getFirstRuleName() {
        	return "SCCharts";	
       	}
       	
       	@Override
       	protected SCTXGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}



    // $ANTLR start "entryRuleSCCharts"
    // InternalSCTX.g:74:1: entryRuleSCCharts returns [EObject current=null] : iv_ruleSCCharts= ruleSCCharts EOF ;
    public final EObject entryRuleSCCharts() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSCCharts = null;


        try {
            // InternalSCTX.g:75:2: (iv_ruleSCCharts= ruleSCCharts EOF )
            // InternalSCTX.g:76:2: iv_ruleSCCharts= ruleSCCharts EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSCChartsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSCCharts=ruleSCCharts();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSCCharts; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSCCharts"


    // $ANTLR start "ruleSCCharts"
    // InternalSCTX.g:83:1: ruleSCCharts returns [EObject current=null] : ( ( (lv_pragmas_0_0= rulePragma ) )* ( (lv_rootStates_1_0= ruleRootState ) )* ) ;
    public final EObject ruleSCCharts() throws RecognitionException {
        EObject current = null;

        EObject lv_pragmas_0_0 = null;

        EObject lv_rootStates_1_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:86:28: ( ( ( (lv_pragmas_0_0= rulePragma ) )* ( (lv_rootStates_1_0= ruleRootState ) )* ) )
            // InternalSCTX.g:87:1: ( ( (lv_pragmas_0_0= rulePragma ) )* ( (lv_rootStates_1_0= ruleRootState ) )* )
            {
            // InternalSCTX.g:87:1: ( ( (lv_pragmas_0_0= rulePragma ) )* ( (lv_rootStates_1_0= ruleRootState ) )* )
            // InternalSCTX.g:87:2: ( (lv_pragmas_0_0= rulePragma ) )* ( (lv_rootStates_1_0= ruleRootState ) )*
            {
            // InternalSCTX.g:87:2: ( (lv_pragmas_0_0= rulePragma ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==77) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalSCTX.g:88:1: (lv_pragmas_0_0= rulePragma )
            	    {
            	    // InternalSCTX.g:88:1: (lv_pragmas_0_0= rulePragma )
            	    // InternalSCTX.g:89:3: lv_pragmas_0_0= rulePragma
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSCChartsAccess().getPragmasPragmaParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    lv_pragmas_0_0=rulePragma();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSCChartsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"pragmas",
            	              		lv_pragmas_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Pragma");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            // InternalSCTX.g:105:3: ( (lv_rootStates_1_0= ruleRootState ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==RULE_COMMENT_ANNOTATION||LA2_0==17||LA2_0==76) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalSCTX.g:106:1: (lv_rootStates_1_0= ruleRootState )
            	    {
            	    // InternalSCTX.g:106:1: (lv_rootStates_1_0= ruleRootState )
            	    // InternalSCTX.g:107:3: lv_rootStates_1_0= ruleRootState
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSCChartsAccess().getRootStatesRootStateParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    lv_rootStates_1_0=ruleRootState();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSCChartsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"rootStates",
            	              		lv_rootStates_1_0, 
            	              		"de.cau.cs.kieler.sccharts.text.SCTX.RootState");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSCCharts"


    // $ANTLR start "entryRuleRootState"
    // InternalSCTX.g:131:1: entryRuleRootState returns [EObject current=null] : iv_ruleRootState= ruleRootState EOF ;
    public final EObject entryRuleRootState() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRootState = null;


        try {
            // InternalSCTX.g:132:2: (iv_ruleRootState= ruleRootState EOF )
            // InternalSCTX.g:133:2: iv_ruleRootState= ruleRootState EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRootStateRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRootState=ruleRootState();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRootState; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRootState"


    // $ANTLR start "ruleRootState"
    // InternalSCTX.g:140:1: ruleRootState returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'scchart' ( (lv_name_2_0= ruleExtendedID ) ) ( (lv_label_3_0= RULE_STRING ) )? otherlv_4= '{' ( (lv_declarations_5_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_6_0= ruleLocalAction ) )* ( ( (lv_regions_7_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_8_0= ruleImplicitDataflowRegion ) ) | ( (lv_regions_9_0= ruleRegion ) )* ) otherlv_10= '}' ) ;
    public final EObject ruleRootState() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_label_3_0=null;
        Token otherlv_4=null;
        Token otherlv_10=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_declarations_5_0 = null;

        EObject lv_actions_6_0 = null;

        EObject lv_regions_7_0 = null;

        EObject lv_regions_8_0 = null;

        EObject lv_regions_9_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:143:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'scchart' ( (lv_name_2_0= ruleExtendedID ) ) ( (lv_label_3_0= RULE_STRING ) )? otherlv_4= '{' ( (lv_declarations_5_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_6_0= ruleLocalAction ) )* ( ( (lv_regions_7_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_8_0= ruleImplicitDataflowRegion ) ) | ( (lv_regions_9_0= ruleRegion ) )* ) otherlv_10= '}' ) )
            // InternalSCTX.g:144:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'scchart' ( (lv_name_2_0= ruleExtendedID ) ) ( (lv_label_3_0= RULE_STRING ) )? otherlv_4= '{' ( (lv_declarations_5_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_6_0= ruleLocalAction ) )* ( ( (lv_regions_7_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_8_0= ruleImplicitDataflowRegion ) ) | ( (lv_regions_9_0= ruleRegion ) )* ) otherlv_10= '}' )
            {
            // InternalSCTX.g:144:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'scchart' ( (lv_name_2_0= ruleExtendedID ) ) ( (lv_label_3_0= RULE_STRING ) )? otherlv_4= '{' ( (lv_declarations_5_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_6_0= ruleLocalAction ) )* ( ( (lv_regions_7_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_8_0= ruleImplicitDataflowRegion ) ) | ( (lv_regions_9_0= ruleRegion ) )* ) otherlv_10= '}' )
            // InternalSCTX.g:144:2: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'scchart' ( (lv_name_2_0= ruleExtendedID ) ) ( (lv_label_3_0= RULE_STRING ) )? otherlv_4= '{' ( (lv_declarations_5_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_6_0= ruleLocalAction ) )* ( ( (lv_regions_7_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_8_0= ruleImplicitDataflowRegion ) ) | ( (lv_regions_9_0= ruleRegion ) )* ) otherlv_10= '}'
            {
            // InternalSCTX.g:144:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==RULE_COMMENT_ANNOTATION||LA3_0==76) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // InternalSCTX.g:145:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:145:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:146:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRootStateAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_5);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRootStateRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);

            otherlv_1=(Token)match(input,17,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getRootStateAccess().getScchartKeyword_1());
                  
            }
            // InternalSCTX.g:166:1: ( (lv_name_2_0= ruleExtendedID ) )
            // InternalSCTX.g:167:1: (lv_name_2_0= ruleExtendedID )
            {
            // InternalSCTX.g:167:1: (lv_name_2_0= ruleExtendedID )
            // InternalSCTX.g:168:3: lv_name_2_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRootStateAccess().getNameExtendedIDParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_7);
            lv_name_2_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRootStateRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:184:2: ( (lv_label_3_0= RULE_STRING ) )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==RULE_STRING) ) {
                alt4=1;
            }
            switch (alt4) {
                case 1 :
                    // InternalSCTX.g:185:1: (lv_label_3_0= RULE_STRING )
                    {
                    // InternalSCTX.g:185:1: (lv_label_3_0= RULE_STRING )
                    // InternalSCTX.g:186:3: lv_label_3_0= RULE_STRING
                    {
                    lv_label_3_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_label_3_0, grammarAccess.getRootStateAccess().getLabelSTRINGTerminalRuleCall_3_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getRootStateRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"label",
                              		lv_label_3_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.STRING");
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,18,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getRootStateAccess().getLeftCurlyBracketKeyword_4());
                  
            }
            // InternalSCTX.g:206:1: ( (lv_declarations_5_0= ruleDeclarationWOSemicolon ) )*
            loop5:
            do {
                int alt5=2;
                alt5 = dfa5.predict(input);
                switch (alt5) {
            	case 1 :
            	    // InternalSCTX.g:207:1: (lv_declarations_5_0= ruleDeclarationWOSemicolon )
            	    {
            	    // InternalSCTX.g:207:1: (lv_declarations_5_0= ruleDeclarationWOSemicolon )
            	    // InternalSCTX.g:208:3: lv_declarations_5_0= ruleDeclarationWOSemicolon
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRootStateAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_5_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_9);
            	    lv_declarations_5_0=ruleDeclarationWOSemicolon();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRootStateRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declarations",
            	              		lv_declarations_5_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop5;
                }
            } while (true);

            // InternalSCTX.g:224:3: ( (lv_actions_6_0= ruleLocalAction ) )*
            loop6:
            do {
                int alt6=2;
                int LA6_0 = input.LA(1);

                if ( ((LA6_0>=42 && LA6_0<=48)||(LA6_0>=84 && LA6_0<=87)) ) {
                    alt6=1;
                }


                switch (alt6) {
            	case 1 :
            	    // InternalSCTX.g:225:1: (lv_actions_6_0= ruleLocalAction )
            	    {
            	    // InternalSCTX.g:225:1: (lv_actions_6_0= ruleLocalAction )
            	    // InternalSCTX.g:226:3: lv_actions_6_0= ruleLocalAction
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRootStateAccess().getActionsLocalActionParserRuleCall_6_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_10);
            	    lv_actions_6_0=ruleLocalAction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRootStateRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"actions",
            	              		lv_actions_6_0, 
            	              		"de.cau.cs.kieler.sccharts.text.SCTX.LocalAction");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop6;
                }
            } while (true);

            // InternalSCTX.g:242:3: ( ( (lv_regions_7_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_8_0= ruleImplicitDataflowRegion ) ) | ( (lv_regions_9_0= ruleRegion ) )* )
            int alt8=3;
            alt8 = dfa8.predict(input);
            switch (alt8) {
                case 1 :
                    // InternalSCTX.g:242:4: ( (lv_regions_7_0= ruleImplicitControlflowRegion ) )
                    {
                    // InternalSCTX.g:242:4: ( (lv_regions_7_0= ruleImplicitControlflowRegion ) )
                    // InternalSCTX.g:243:1: (lv_regions_7_0= ruleImplicitControlflowRegion )
                    {
                    // InternalSCTX.g:243:1: (lv_regions_7_0= ruleImplicitControlflowRegion )
                    // InternalSCTX.g:244:3: lv_regions_7_0= ruleImplicitControlflowRegion
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getRootStateAccess().getRegionsImplicitControlflowRegionParserRuleCall_7_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_regions_7_0=ruleImplicitControlflowRegion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getRootStateRule());
                      	        }
                             		add(
                             			current, 
                             			"regions",
                              		lv_regions_7_0, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.ImplicitControlflowRegion");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:261:6: ( (lv_regions_8_0= ruleImplicitDataflowRegion ) )
                    {
                    // InternalSCTX.g:261:6: ( (lv_regions_8_0= ruleImplicitDataflowRegion ) )
                    // InternalSCTX.g:262:1: (lv_regions_8_0= ruleImplicitDataflowRegion )
                    {
                    // InternalSCTX.g:262:1: (lv_regions_8_0= ruleImplicitDataflowRegion )
                    // InternalSCTX.g:263:3: lv_regions_8_0= ruleImplicitDataflowRegion
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getRootStateAccess().getRegionsImplicitDataflowRegionParserRuleCall_7_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_regions_8_0=ruleImplicitDataflowRegion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getRootStateRule());
                      	        }
                             		add(
                             			current, 
                             			"regions",
                              		lv_regions_8_0, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.ImplicitDataflowRegion");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:280:6: ( (lv_regions_9_0= ruleRegion ) )*
                    {
                    // InternalSCTX.g:280:6: ( (lv_regions_9_0= ruleRegion ) )*
                    loop7:
                    do {
                        int alt7=2;
                        int LA7_0 = input.LA(1);

                        if ( (LA7_0==RULE_COMMENT_ANNOTATION||LA7_0==39||LA7_0==41||LA7_0==76) ) {
                            alt7=1;
                        }


                        switch (alt7) {
                    	case 1 :
                    	    // InternalSCTX.g:281:1: (lv_regions_9_0= ruleRegion )
                    	    {
                    	    // InternalSCTX.g:281:1: (lv_regions_9_0= ruleRegion )
                    	    // InternalSCTX.g:282:3: lv_regions_9_0= ruleRegion
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getRootStateAccess().getRegionsRegionParserRuleCall_7_2_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_12);
                    	    lv_regions_9_0=ruleRegion();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getRootStateRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"regions",
                    	              		lv_regions_9_0, 
                    	              		"de.cau.cs.kieler.sccharts.text.SCTX.Region");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop7;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_10=(Token)match(input,19,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_10, grammarAccess.getRootStateAccess().getRightCurlyBracketKeyword_8());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRootState"


    // $ANTLR start "entryRuleState"
    // InternalSCTX.g:310:1: entryRuleState returns [EObject current=null] : iv_ruleState= ruleState EOF ;
    public final EObject entryRuleState() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleState = null;


        try {
            // InternalSCTX.g:311:2: (iv_ruleState= ruleState EOF )
            // InternalSCTX.g:312:2: iv_ruleState= ruleState EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStateRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleState=ruleState();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleState; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleState"


    // $ANTLR start "ruleState"
    // InternalSCTX.g:319:1: ruleState returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? ( (lv_final_2_0= 'final' ) )? ( (lv_violation_3_0= 'violation' ) )? ( (lv_connector_4_0= 'connector' ) )? otherlv_5= 'state' ( (lv_name_6_0= RULE_ID ) ) ( (lv_label_7_0= RULE_STRING ) )? ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) ) | (otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_12_0= ruleLocalAction ) )* ( ( (lv_regions_13_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_14_0= ruleImplicitDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* ) otherlv_16= '}' ) )? ( (lv_outgoingTransitions_17_0= ruleTransition ) )* ) ;
    public final EObject ruleState() throws RecognitionException {
        EObject current = null;

        Token lv_initial_1_0=null;
        Token lv_final_2_0=null;
        Token lv_violation_3_0=null;
        Token lv_connector_4_0=null;
        Token otherlv_5=null;
        Token lv_name_6_0=null;
        Token lv_label_7_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_16=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_9_0 = null;

        EObject lv_declarations_11_0 = null;

        EObject lv_actions_12_0 = null;

        EObject lv_regions_13_0 = null;

        EObject lv_regions_14_0 = null;

        EObject lv_regions_15_0 = null;

        EObject lv_outgoingTransitions_17_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:322:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? ( (lv_final_2_0= 'final' ) )? ( (lv_violation_3_0= 'violation' ) )? ( (lv_connector_4_0= 'connector' ) )? otherlv_5= 'state' ( (lv_name_6_0= RULE_ID ) ) ( (lv_label_7_0= RULE_STRING ) )? ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) ) | (otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_12_0= ruleLocalAction ) )* ( ( (lv_regions_13_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_14_0= ruleImplicitDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* ) otherlv_16= '}' ) )? ( (lv_outgoingTransitions_17_0= ruleTransition ) )* ) )
            // InternalSCTX.g:323:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? ( (lv_final_2_0= 'final' ) )? ( (lv_violation_3_0= 'violation' ) )? ( (lv_connector_4_0= 'connector' ) )? otherlv_5= 'state' ( (lv_name_6_0= RULE_ID ) ) ( (lv_label_7_0= RULE_STRING ) )? ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) ) | (otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_12_0= ruleLocalAction ) )* ( ( (lv_regions_13_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_14_0= ruleImplicitDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* ) otherlv_16= '}' ) )? ( (lv_outgoingTransitions_17_0= ruleTransition ) )* )
            {
            // InternalSCTX.g:323:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? ( (lv_final_2_0= 'final' ) )? ( (lv_violation_3_0= 'violation' ) )? ( (lv_connector_4_0= 'connector' ) )? otherlv_5= 'state' ( (lv_name_6_0= RULE_ID ) ) ( (lv_label_7_0= RULE_STRING ) )? ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) ) | (otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_12_0= ruleLocalAction ) )* ( ( (lv_regions_13_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_14_0= ruleImplicitDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* ) otherlv_16= '}' ) )? ( (lv_outgoingTransitions_17_0= ruleTransition ) )* )
            // InternalSCTX.g:323:2: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? ( (lv_final_2_0= 'final' ) )? ( (lv_violation_3_0= 'violation' ) )? ( (lv_connector_4_0= 'connector' ) )? otherlv_5= 'state' ( (lv_name_6_0= RULE_ID ) ) ( (lv_label_7_0= RULE_STRING ) )? ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) ) | (otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_12_0= ruleLocalAction ) )* ( ( (lv_regions_13_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_14_0= ruleImplicitDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* ) otherlv_16= '}' ) )? ( (lv_outgoingTransitions_17_0= ruleTransition ) )*
            {
            // InternalSCTX.g:323:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop9:
            do {
                int alt9=2;
                int LA9_0 = input.LA(1);

                if ( (LA9_0==RULE_COMMENT_ANNOTATION||LA9_0==76) ) {
                    alt9=1;
                }


                switch (alt9) {
            	case 1 :
            	    // InternalSCTX.g:324:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:324:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:325:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getStateAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_13);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getStateRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop9;
                }
            } while (true);

            // InternalSCTX.g:341:3: ( (lv_initial_1_0= 'initial' ) )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==20) ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // InternalSCTX.g:342:1: (lv_initial_1_0= 'initial' )
                    {
                    // InternalSCTX.g:342:1: (lv_initial_1_0= 'initial' )
                    // InternalSCTX.g:343:3: lv_initial_1_0= 'initial'
                    {
                    lv_initial_1_0=(Token)match(input,20,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_initial_1_0, grammarAccess.getStateAccess().getInitialInitialKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getStateRule());
                      	        }
                             		setWithLastConsumed(current, "initial", true, "initial");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:356:3: ( (lv_final_2_0= 'final' ) )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==21) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // InternalSCTX.g:357:1: (lv_final_2_0= 'final' )
                    {
                    // InternalSCTX.g:357:1: (lv_final_2_0= 'final' )
                    // InternalSCTX.g:358:3: lv_final_2_0= 'final'
                    {
                    lv_final_2_0=(Token)match(input,21,FollowSets000.FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_final_2_0, grammarAccess.getStateAccess().getFinalFinalKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getStateRule());
                      	        }
                             		setWithLastConsumed(current, "final", true, "final");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:371:3: ( (lv_violation_3_0= 'violation' ) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==22) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalSCTX.g:372:1: (lv_violation_3_0= 'violation' )
                    {
                    // InternalSCTX.g:372:1: (lv_violation_3_0= 'violation' )
                    // InternalSCTX.g:373:3: lv_violation_3_0= 'violation'
                    {
                    lv_violation_3_0=(Token)match(input,22,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_violation_3_0, grammarAccess.getStateAccess().getViolationViolationKeyword_3_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getStateRule());
                      	        }
                             		setWithLastConsumed(current, "violation", true, "violation");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:386:3: ( (lv_connector_4_0= 'connector' ) )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==23) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // InternalSCTX.g:387:1: (lv_connector_4_0= 'connector' )
                    {
                    // InternalSCTX.g:387:1: (lv_connector_4_0= 'connector' )
                    // InternalSCTX.g:388:3: lv_connector_4_0= 'connector'
                    {
                    lv_connector_4_0=(Token)match(input,23,FollowSets000.FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_connector_4_0, grammarAccess.getStateAccess().getConnectorConnectorKeyword_4_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getStateRule());
                      	        }
                             		setWithLastConsumed(current, "connector", true, "connector");
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,24,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getStateAccess().getStateKeyword_5());
                  
            }
            // InternalSCTX.g:405:1: ( (lv_name_6_0= RULE_ID ) )
            // InternalSCTX.g:406:1: (lv_name_6_0= RULE_ID )
            {
            // InternalSCTX.g:406:1: (lv_name_6_0= RULE_ID )
            // InternalSCTX.g:407:3: lv_name_6_0= RULE_ID
            {
            lv_name_6_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_6_0, grammarAccess.getStateAccess().getNameIDTerminalRuleCall_6_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getStateRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_6_0, 
                      		"org.eclipse.xtext.common.Terminals.ID");
              	    
            }

            }


            }

            // InternalSCTX.g:423:2: ( (lv_label_7_0= RULE_STRING ) )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==RULE_STRING) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // InternalSCTX.g:424:1: (lv_label_7_0= RULE_STRING )
                    {
                    // InternalSCTX.g:424:1: (lv_label_7_0= RULE_STRING )
                    // InternalSCTX.g:425:3: lv_label_7_0= RULE_STRING
                    {
                    lv_label_7_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_label_7_0, grammarAccess.getStateAccess().getLabelSTRINGTerminalRuleCall_7_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getStateRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"label",
                              		lv_label_7_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.STRING");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:441:3: ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) ) | (otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_12_0= ruleLocalAction ) )* ( ( (lv_regions_13_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_14_0= ruleImplicitDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* ) otherlv_16= '}' ) )?
            int alt19=3;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==25) ) {
                alt19=1;
            }
            else if ( (LA19_0==18) ) {
                alt19=2;
            }
            switch (alt19) {
                case 1 :
                    // InternalSCTX.g:441:4: (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) )
                    {
                    // InternalSCTX.g:441:4: (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) )
                    // InternalSCTX.g:441:6: otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) )
                    {
                    otherlv_8=(Token)match(input,25,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getStateAccess().getIsKeyword_8_0_0());
                          
                    }
                    // InternalSCTX.g:445:1: ( (lv_reference_9_0= ruleScopeCall ) )
                    // InternalSCTX.g:446:1: (lv_reference_9_0= ruleScopeCall )
                    {
                    // InternalSCTX.g:446:1: (lv_reference_9_0= ruleScopeCall )
                    // InternalSCTX.g:447:3: lv_reference_9_0= ruleScopeCall
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getStateAccess().getReferenceScopeCallParserRuleCall_8_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_20);
                    lv_reference_9_0=ruleScopeCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getStateRule());
                      	        }
                             		set(
                             			current, 
                             			"reference",
                              		lv_reference_9_0, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.ScopeCall");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:464:6: (otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_12_0= ruleLocalAction ) )* ( ( (lv_regions_13_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_14_0= ruleImplicitDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* ) otherlv_16= '}' )
                    {
                    // InternalSCTX.g:464:6: (otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_12_0= ruleLocalAction ) )* ( ( (lv_regions_13_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_14_0= ruleImplicitDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* ) otherlv_16= '}' )
                    // InternalSCTX.g:464:8: otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_12_0= ruleLocalAction ) )* ( ( (lv_regions_13_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_14_0= ruleImplicitDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* ) otherlv_16= '}'
                    {
                    otherlv_10=(Token)match(input,18,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_8_1_0());
                          
                    }
                    // InternalSCTX.g:468:1: ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )*
                    loop15:
                    do {
                        int alt15=2;
                        alt15 = dfa15.predict(input);
                        switch (alt15) {
                    	case 1 :
                    	    // InternalSCTX.g:469:1: (lv_declarations_11_0= ruleDeclarationWOSemicolon )
                    	    {
                    	    // InternalSCTX.g:469:1: (lv_declarations_11_0= ruleDeclarationWOSemicolon )
                    	    // InternalSCTX.g:470:3: lv_declarations_11_0= ruleDeclarationWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getStateAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_8_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_9);
                    	    lv_declarations_11_0=ruleDeclarationWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getStateRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declarations",
                    	              		lv_declarations_11_0, 
                    	              		"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop15;
                        }
                    } while (true);

                    // InternalSCTX.g:486:3: ( (lv_actions_12_0= ruleLocalAction ) )*
                    loop16:
                    do {
                        int alt16=2;
                        int LA16_0 = input.LA(1);

                        if ( ((LA16_0>=42 && LA16_0<=48)||(LA16_0>=84 && LA16_0<=87)) ) {
                            alt16=1;
                        }


                        switch (alt16) {
                    	case 1 :
                    	    // InternalSCTX.g:487:1: (lv_actions_12_0= ruleLocalAction )
                    	    {
                    	    // InternalSCTX.g:487:1: (lv_actions_12_0= ruleLocalAction )
                    	    // InternalSCTX.g:488:3: lv_actions_12_0= ruleLocalAction
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getStateAccess().getActionsLocalActionParserRuleCall_8_1_2_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_10);
                    	    lv_actions_12_0=ruleLocalAction();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getStateRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"actions",
                    	              		lv_actions_12_0, 
                    	              		"de.cau.cs.kieler.sccharts.text.SCTX.LocalAction");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop16;
                        }
                    } while (true);

                    // InternalSCTX.g:504:3: ( ( (lv_regions_13_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_14_0= ruleImplicitDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* )
                    int alt18=3;
                    alt18 = dfa18.predict(input);
                    switch (alt18) {
                        case 1 :
                            // InternalSCTX.g:504:4: ( (lv_regions_13_0= ruleImplicitControlflowRegion ) )
                            {
                            // InternalSCTX.g:504:4: ( (lv_regions_13_0= ruleImplicitControlflowRegion ) )
                            // InternalSCTX.g:505:1: (lv_regions_13_0= ruleImplicitControlflowRegion )
                            {
                            // InternalSCTX.g:505:1: (lv_regions_13_0= ruleImplicitControlflowRegion )
                            // InternalSCTX.g:506:3: lv_regions_13_0= ruleImplicitControlflowRegion
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getStateAccess().getRegionsImplicitControlflowRegionParserRuleCall_8_1_3_0_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_11);
                            lv_regions_13_0=ruleImplicitControlflowRegion();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getStateRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"regions",
                                      		lv_regions_13_0, 
                                      		"de.cau.cs.kieler.sccharts.text.SCTX.ImplicitControlflowRegion");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:523:6: ( (lv_regions_14_0= ruleImplicitDataflowRegion ) )
                            {
                            // InternalSCTX.g:523:6: ( (lv_regions_14_0= ruleImplicitDataflowRegion ) )
                            // InternalSCTX.g:524:1: (lv_regions_14_0= ruleImplicitDataflowRegion )
                            {
                            // InternalSCTX.g:524:1: (lv_regions_14_0= ruleImplicitDataflowRegion )
                            // InternalSCTX.g:525:3: lv_regions_14_0= ruleImplicitDataflowRegion
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getStateAccess().getRegionsImplicitDataflowRegionParserRuleCall_8_1_3_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_11);
                            lv_regions_14_0=ruleImplicitDataflowRegion();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getStateRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"regions",
                                      		lv_regions_14_0, 
                                      		"de.cau.cs.kieler.sccharts.text.SCTX.ImplicitDataflowRegion");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalSCTX.g:542:6: ( (lv_regions_15_0= ruleRegion ) )*
                            {
                            // InternalSCTX.g:542:6: ( (lv_regions_15_0= ruleRegion ) )*
                            loop17:
                            do {
                                int alt17=2;
                                int LA17_0 = input.LA(1);

                                if ( (LA17_0==RULE_COMMENT_ANNOTATION||LA17_0==39||LA17_0==41||LA17_0==76) ) {
                                    alt17=1;
                                }


                                switch (alt17) {
                            	case 1 :
                            	    // InternalSCTX.g:543:1: (lv_regions_15_0= ruleRegion )
                            	    {
                            	    // InternalSCTX.g:543:1: (lv_regions_15_0= ruleRegion )
                            	    // InternalSCTX.g:544:3: lv_regions_15_0= ruleRegion
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getStateAccess().getRegionsRegionParserRuleCall_8_1_3_2_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_12);
                            	    lv_regions_15_0=ruleRegion();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getStateRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"regions",
                            	              		lv_regions_15_0, 
                            	              		"de.cau.cs.kieler.sccharts.text.SCTX.Region");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop17;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_16=(Token)match(input,19,FollowSets000.FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_16, grammarAccess.getStateAccess().getRightCurlyBracketKeyword_8_1_4());
                          
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:564:4: ( (lv_outgoingTransitions_17_0= ruleTransition ) )*
            loop20:
            do {
                int alt20=2;
                alt20 = dfa20.predict(input);
                switch (alt20) {
            	case 1 :
            	    // InternalSCTX.g:565:1: (lv_outgoingTransitions_17_0= ruleTransition )
            	    {
            	    // InternalSCTX.g:565:1: (lv_outgoingTransitions_17_0= ruleTransition )
            	    // InternalSCTX.g:566:3: lv_outgoingTransitions_17_0= ruleTransition
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getStateAccess().getOutgoingTransitionsTransitionParserRuleCall_9_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_20);
            	    lv_outgoingTransitions_17_0=ruleTransition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getStateRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"outgoingTransitions",
            	              		lv_outgoingTransitions_17_0, 
            	              		"de.cau.cs.kieler.sccharts.text.SCTX.Transition");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop20;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleState"


    // $ANTLR start "entryRuleImplicitState"
    // InternalSCTX.g:590:1: entryRuleImplicitState returns [EObject current=null] : iv_ruleImplicitState= ruleImplicitState EOF ;
    public final EObject entryRuleImplicitState() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImplicitState = null;


        try {
            // InternalSCTX.g:591:2: (iv_ruleImplicitState= ruleImplicitState EOF )
            // InternalSCTX.g:592:2: iv_ruleImplicitState= ruleImplicitState EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImplicitStateRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleImplicitState=ruleImplicitState();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImplicitState; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImplicitState"


    // $ANTLR start "ruleImplicitState"
    // InternalSCTX.g:599:1: ruleImplicitState returns [EObject current=null] : ( () ( (lv_regions_1_0= ruleRegion ) )+ ) ;
    public final EObject ruleImplicitState() throws RecognitionException {
        EObject current = null;

        EObject lv_regions_1_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:602:28: ( ( () ( (lv_regions_1_0= ruleRegion ) )+ ) )
            // InternalSCTX.g:603:1: ( () ( (lv_regions_1_0= ruleRegion ) )+ )
            {
            // InternalSCTX.g:603:1: ( () ( (lv_regions_1_0= ruleRegion ) )+ )
            // InternalSCTX.g:603:2: () ( (lv_regions_1_0= ruleRegion ) )+
            {
            // InternalSCTX.g:603:2: ()
            // InternalSCTX.g:604:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getImplicitStateAccess().getStateAction_0(),
                          current);
                  
            }

            }

            // InternalSCTX.g:612:2: ( (lv_regions_1_0= ruleRegion ) )+
            int cnt21=0;
            loop21:
            do {
                int alt21=2;
                int LA21_0 = input.LA(1);

                if ( (LA21_0==RULE_COMMENT_ANNOTATION||LA21_0==39||LA21_0==41||LA21_0==76) ) {
                    alt21=1;
                }


                switch (alt21) {
            	case 1 :
            	    // InternalSCTX.g:613:1: (lv_regions_1_0= ruleRegion )
            	    {
            	    // InternalSCTX.g:613:1: (lv_regions_1_0= ruleRegion )
            	    // InternalSCTX.g:614:3: lv_regions_1_0= ruleRegion
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getImplicitStateAccess().getRegionsRegionParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_21);
            	    lv_regions_1_0=ruleRegion();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getImplicitStateRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"regions",
            	              		lv_regions_1_0, 
            	              		"de.cau.cs.kieler.sccharts.text.SCTX.Region");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt21 >= 1 ) break loop21;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(21, input);
                        throw eee;
                }
                cnt21++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImplicitState"


    // $ANTLR start "entryRuleScopeCall"
    // InternalSCTX.g:638:1: entryRuleScopeCall returns [EObject current=null] : iv_ruleScopeCall= ruleScopeCall EOF ;
    public final EObject entryRuleScopeCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScopeCall = null;


        try {
            // InternalSCTX.g:639:2: (iv_ruleScopeCall= ruleScopeCall EOF )
            // InternalSCTX.g:640:2: iv_ruleScopeCall= ruleScopeCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScopeCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScopeCall=ruleScopeCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScopeCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScopeCall"


    // $ANTLR start "ruleScopeCall"
    // InternalSCTX.g:647:1: ruleScopeCall returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | (otherlv_6= '(' otherlv_7= ')' ) )? ) ;
    public final EObject ruleScopeCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_parameters_2_0 = null;

        EObject lv_parameters_4_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:650:28: ( ( ( (otherlv_0= RULE_ID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | (otherlv_6= '(' otherlv_7= ')' ) )? ) )
            // InternalSCTX.g:651:1: ( ( (otherlv_0= RULE_ID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | (otherlv_6= '(' otherlv_7= ')' ) )? )
            {
            // InternalSCTX.g:651:1: ( ( (otherlv_0= RULE_ID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | (otherlv_6= '(' otherlv_7= ')' ) )? )
            // InternalSCTX.g:651:2: ( (otherlv_0= RULE_ID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | (otherlv_6= '(' otherlv_7= ')' ) )?
            {
            // InternalSCTX.g:651:2: ( (otherlv_0= RULE_ID ) )
            // InternalSCTX.g:652:1: (otherlv_0= RULE_ID )
            {
            // InternalSCTX.g:652:1: (otherlv_0= RULE_ID )
            // InternalSCTX.g:653:3: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getScopeCallRule());
              	        }
                      
            }
            otherlv_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_0, grammarAccess.getScopeCallAccess().getScopeStateCrossReference_0_0()); 
              	
            }

            }


            }

            // InternalSCTX.g:667:2: ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | (otherlv_6= '(' otherlv_7= ')' ) )?
            int alt23=3;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==26) ) {
                int LA23_1 = input.LA(2);

                if ( ((LA23_1>=RULE_STRING && LA23_1<=RULE_BOOLEAN)||LA23_1==26||(LA23_1>=29 && LA23_1<=30)||LA23_1==57||LA23_1==64||LA23_1==71||(LA23_1>=109 && LA23_1<=110)) ) {
                    alt23=1;
                }
                else if ( (LA23_1==28) ) {
                    alt23=2;
                }
            }
            switch (alt23) {
                case 1 :
                    // InternalSCTX.g:667:3: (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' )
                    {
                    // InternalSCTX.g:667:3: (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' )
                    // InternalSCTX.g:667:5: otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')'
                    {
                    otherlv_1=(Token)match(input,26,FollowSets000.FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getScopeCallAccess().getLeftParenthesisKeyword_1_0_0());
                          
                    }
                    // InternalSCTX.g:671:1: ( (lv_parameters_2_0= ruleParameter ) )
                    // InternalSCTX.g:672:1: (lv_parameters_2_0= ruleParameter )
                    {
                    // InternalSCTX.g:672:1: (lv_parameters_2_0= ruleParameter )
                    // InternalSCTX.g:673:3: lv_parameters_2_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getScopeCallAccess().getParametersParameterParserRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_24);
                    lv_parameters_2_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getScopeCallRule());
                      	        }
                             		add(
                             			current, 
                             			"parameters",
                              		lv_parameters_2_0, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:689:2: (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )*
                    loop22:
                    do {
                        int alt22=2;
                        int LA22_0 = input.LA(1);

                        if ( (LA22_0==27) ) {
                            alt22=1;
                        }


                        switch (alt22) {
                    	case 1 :
                    	    // InternalSCTX.g:689:4: otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) )
                    	    {
                    	    otherlv_3=(Token)match(input,27,FollowSets000.FOLLOW_23); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getScopeCallAccess().getCommaKeyword_1_0_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:693:1: ( (lv_parameters_4_0= ruleParameter ) )
                    	    // InternalSCTX.g:694:1: (lv_parameters_4_0= ruleParameter )
                    	    {
                    	    // InternalSCTX.g:694:1: (lv_parameters_4_0= ruleParameter )
                    	    // InternalSCTX.g:695:3: lv_parameters_4_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getScopeCallAccess().getParametersParameterParserRuleCall_1_0_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_24);
                    	    lv_parameters_4_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getScopeCallRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"parameters",
                    	              		lv_parameters_4_0, 
                    	              		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop22;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getScopeCallAccess().getRightParenthesisKeyword_1_0_3());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:716:6: (otherlv_6= '(' otherlv_7= ')' )
                    {
                    // InternalSCTX.g:716:6: (otherlv_6= '(' otherlv_7= ')' )
                    // InternalSCTX.g:716:8: otherlv_6= '(' otherlv_7= ')'
                    {
                    otherlv_6=(Token)match(input,26,FollowSets000.FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getScopeCallAccess().getLeftParenthesisKeyword_1_1_0());
                          
                    }
                    otherlv_7=(Token)match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getScopeCallAccess().getRightParenthesisKeyword_1_1_1());
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScopeCall"


    // $ANTLR start "entryRuleParameter"
    // InternalSCTX.g:732:1: entryRuleParameter returns [EObject current=null] : iv_ruleParameter= ruleParameter EOF ;
    public final EObject entryRuleParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameter = null;


        try {
            // InternalSCTX.g:733:2: (iv_ruleParameter= ruleParameter EOF )
            // InternalSCTX.g:734:2: iv_ruleParameter= ruleParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleParameter=ruleParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameter"


    // $ANTLR start "ruleParameter"
    // InternalSCTX.g:741:1: ruleParameter returns [EObject current=null] : ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? ) ;
    public final EObject ruleParameter() throws RecognitionException {
        EObject current = null;

        Token lv_pureOutput_0_0=null;
        Token lv_callByReference_1_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_expression_2_0 = null;

        EObject lv_explicitBindingIndices_6_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:744:28: ( ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? ) )
            // InternalSCTX.g:745:1: ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? )
            {
            // InternalSCTX.g:745:1: ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? )
            // InternalSCTX.g:745:2: ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )?
            {
            // InternalSCTX.g:745:2: ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==29) ) {
                int LA25_1 = input.LA(2);

                if ( (LA25_1==30) ) {
                    alt25=1;
                }
            }
            else if ( (LA25_0==30) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // InternalSCTX.g:745:3: ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) )
                    {
                    // InternalSCTX.g:745:3: ( (lv_pureOutput_0_0= '!' ) )?
                    int alt24=2;
                    int LA24_0 = input.LA(1);

                    if ( (LA24_0==29) ) {
                        alt24=1;
                    }
                    switch (alt24) {
                        case 1 :
                            // InternalSCTX.g:746:1: (lv_pureOutput_0_0= '!' )
                            {
                            // InternalSCTX.g:746:1: (lv_pureOutput_0_0= '!' )
                            // InternalSCTX.g:747:3: lv_pureOutput_0_0= '!'
                            {
                            lv_pureOutput_0_0=(Token)match(input,29,FollowSets000.FOLLOW_26); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_pureOutput_0_0, grammarAccess.getParameterAccess().getPureOutputExclamationMarkKeyword_0_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getParameterRule());
                              	        }
                                     		setWithLastConsumed(current, "pureOutput", true, "!");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:760:3: ( (lv_callByReference_1_0= '&' ) )
                    // InternalSCTX.g:761:1: (lv_callByReference_1_0= '&' )
                    {
                    // InternalSCTX.g:761:1: (lv_callByReference_1_0= '&' )
                    // InternalSCTX.g:762:3: lv_callByReference_1_0= '&'
                    {
                    lv_callByReference_1_0=(Token)match(input,30,FollowSets000.FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_callByReference_1_0, grammarAccess.getParameterAccess().getCallByReferenceAmpersandKeyword_0_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getParameterRule());
                      	        }
                             		setWithLastConsumed(current, "callByReference", true, "&");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:775:4: ( (lv_expression_2_0= ruleExpression ) )
            // InternalSCTX.g:776:1: (lv_expression_2_0= ruleExpression )
            {
            // InternalSCTX.g:776:1: (lv_expression_2_0= ruleExpression )
            // InternalSCTX.g:777:3: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParameterAccess().getExpressionExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_27);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParameterRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:793:2: (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==31) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // InternalSCTX.g:793:4: otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )*
                    {
                    otherlv_3=(Token)match(input,31,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getParameterAccess().getToKeyword_2_0());
                          
                    }
                    // InternalSCTX.g:797:1: ( (otherlv_4= RULE_ID ) )
                    // InternalSCTX.g:798:1: (otherlv_4= RULE_ID )
                    {
                    // InternalSCTX.g:798:1: (otherlv_4= RULE_ID )
                    // InternalSCTX.g:799:3: otherlv_4= RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       
                      		  /* */ 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getParameterRule());
                      	        }
                              
                    }
                    otherlv_4=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_4, grammarAccess.getParameterAccess().getExplicitBindingValuedObjectCrossReference_2_1_0()); 
                      	
                    }

                    }


                    }

                    // InternalSCTX.g:813:2: (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )*
                    loop26:
                    do {
                        int alt26=2;
                        int LA26_0 = input.LA(1);

                        if ( (LA26_0==32) ) {
                            alt26=1;
                        }


                        switch (alt26) {
                    	case 1 :
                    	    // InternalSCTX.g:813:4: otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']'
                    	    {
                    	    otherlv_5=(Token)match(input,32,FollowSets000.FOLLOW_23); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_5, grammarAccess.getParameterAccess().getLeftSquareBracketKeyword_2_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:817:1: ( (lv_explicitBindingIndices_6_0= ruleExpression ) )
                    	    // InternalSCTX.g:818:1: (lv_explicitBindingIndices_6_0= ruleExpression )
                    	    {
                    	    // InternalSCTX.g:818:1: (lv_explicitBindingIndices_6_0= ruleExpression )
                    	    // InternalSCTX.g:819:3: lv_explicitBindingIndices_6_0= ruleExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getParameterAccess().getExplicitBindingIndicesExpressionParserRuleCall_2_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_29);
                    	    lv_explicitBindingIndices_6_0=ruleExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getParameterRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"explicitBindingIndices",
                    	              		lv_explicitBindingIndices_6_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }

                    	    otherlv_7=(Token)match(input,33,FollowSets000.FOLLOW_28); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_7, grammarAccess.getParameterAccess().getRightSquareBracketKeyword_2_2_2());
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop26;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameter"


    // $ANTLR start "entryRuleTransition"
    // InternalSCTX.g:847:1: entryRuleTransition returns [EObject current=null] : iv_ruleTransition= ruleTransition EOF ;
    public final EObject entryRuleTransition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTransition = null;


        try {
            // InternalSCTX.g:848:2: (iv_ruleTransition= ruleTransition EOF )
            // InternalSCTX.g:849:2: iv_ruleTransition= ruleTransition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTransitionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTransition=ruleTransition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTransition; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTransition"


    // $ANTLR start "ruleTransition"
    // InternalSCTX.g:856:1: ruleTransition returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleRestrictedTypeAnnotation ) )* ( ( (lv_preemption_1_1= rulePreemptionType | lv_preemption_1_2= rulePreemptionTypeLegacy ) ) ) ( (otherlv_2= RULE_ID ) ) ( (lv_delay_3_0= ruleDelayType ) )? ( (lv_deferred_4_0= 'deferred' ) )? ( (lv_history_5_0= ruleHistoryType ) )? (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( ( (lv_trigger_8_0= ruleBoolExpression ) ) | ( (lv_trigger_9_0= ruleAtomicExpression ) ) ) )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )? (otherlv_14= 'label' ( (lv_label_15_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleTransition() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_deferred_4_0=null;
        Token otherlv_6=null;
        Token lv_triggerDelay_7_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token lv_label_15_0=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_preemption_1_1 = null;

        Enumerator lv_preemption_1_2 = null;

        Enumerator lv_delay_3_0 = null;

        Enumerator lv_history_5_0 = null;

        EObject lv_trigger_8_0 = null;

        EObject lv_trigger_9_0 = null;

        EObject lv_effects_11_0 = null;

        EObject lv_effects_13_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:859:28: ( ( ( (lv_annotations_0_0= ruleRestrictedTypeAnnotation ) )* ( ( (lv_preemption_1_1= rulePreemptionType | lv_preemption_1_2= rulePreemptionTypeLegacy ) ) ) ( (otherlv_2= RULE_ID ) ) ( (lv_delay_3_0= ruleDelayType ) )? ( (lv_deferred_4_0= 'deferred' ) )? ( (lv_history_5_0= ruleHistoryType ) )? (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( ( (lv_trigger_8_0= ruleBoolExpression ) ) | ( (lv_trigger_9_0= ruleAtomicExpression ) ) ) )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )? (otherlv_14= 'label' ( (lv_label_15_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:860:1: ( ( (lv_annotations_0_0= ruleRestrictedTypeAnnotation ) )* ( ( (lv_preemption_1_1= rulePreemptionType | lv_preemption_1_2= rulePreemptionTypeLegacy ) ) ) ( (otherlv_2= RULE_ID ) ) ( (lv_delay_3_0= ruleDelayType ) )? ( (lv_deferred_4_0= 'deferred' ) )? ( (lv_history_5_0= ruleHistoryType ) )? (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( ( (lv_trigger_8_0= ruleBoolExpression ) ) | ( (lv_trigger_9_0= ruleAtomicExpression ) ) ) )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )? (otherlv_14= 'label' ( (lv_label_15_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:860:1: ( ( (lv_annotations_0_0= ruleRestrictedTypeAnnotation ) )* ( ( (lv_preemption_1_1= rulePreemptionType | lv_preemption_1_2= rulePreemptionTypeLegacy ) ) ) ( (otherlv_2= RULE_ID ) ) ( (lv_delay_3_0= ruleDelayType ) )? ( (lv_deferred_4_0= 'deferred' ) )? ( (lv_history_5_0= ruleHistoryType ) )? (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( ( (lv_trigger_8_0= ruleBoolExpression ) ) | ( (lv_trigger_9_0= ruleAtomicExpression ) ) ) )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )? (otherlv_14= 'label' ( (lv_label_15_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:860:2: ( (lv_annotations_0_0= ruleRestrictedTypeAnnotation ) )* ( ( (lv_preemption_1_1= rulePreemptionType | lv_preemption_1_2= rulePreemptionTypeLegacy ) ) ) ( (otherlv_2= RULE_ID ) ) ( (lv_delay_3_0= ruleDelayType ) )? ( (lv_deferred_4_0= 'deferred' ) )? ( (lv_history_5_0= ruleHistoryType ) )? (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( ( (lv_trigger_8_0= ruleBoolExpression ) ) | ( (lv_trigger_9_0= ruleAtomicExpression ) ) ) )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )? (otherlv_14= 'label' ( (lv_label_15_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:860:2: ( (lv_annotations_0_0= ruleRestrictedTypeAnnotation ) )*
            loop28:
            do {
                int alt28=2;
                int LA28_0 = input.LA(1);

                if ( (LA28_0==RULE_COMMENT_ANNOTATION||LA28_0==76) ) {
                    alt28=1;
                }


                switch (alt28) {
            	case 1 :
            	    // InternalSCTX.g:861:1: (lv_annotations_0_0= ruleRestrictedTypeAnnotation )
            	    {
            	    // InternalSCTX.g:861:1: (lv_annotations_0_0= ruleRestrictedTypeAnnotation )
            	    // InternalSCTX.g:862:3: lv_annotations_0_0= ruleRestrictedTypeAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getTransitionAccess().getAnnotationsRestrictedTypeAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_30);
            	    lv_annotations_0_0=ruleRestrictedTypeAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTransitionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.RestrictedTypeAnnotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop28;
                }
            } while (true);

            // InternalSCTX.g:878:3: ( ( (lv_preemption_1_1= rulePreemptionType | lv_preemption_1_2= rulePreemptionTypeLegacy ) ) )
            // InternalSCTX.g:879:1: ( (lv_preemption_1_1= rulePreemptionType | lv_preemption_1_2= rulePreemptionTypeLegacy ) )
            {
            // InternalSCTX.g:879:1: ( (lv_preemption_1_1= rulePreemptionType | lv_preemption_1_2= rulePreemptionTypeLegacy ) )
            // InternalSCTX.g:880:1: (lv_preemption_1_1= rulePreemptionType | lv_preemption_1_2= rulePreemptionTypeLegacy )
            {
            // InternalSCTX.g:880:1: (lv_preemption_1_1= rulePreemptionType | lv_preemption_1_2= rulePreemptionTypeLegacy )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( ((LA29_0>=78 && LA29_0<=80)) ) {
                alt29=1;
            }
            else if ( ((LA29_0>=81 && LA29_0<=83)) ) {
                alt29=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // InternalSCTX.g:881:3: lv_preemption_1_1= rulePreemptionType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTransitionAccess().getPreemptionPreemptionTypeEnumRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_6);
                    lv_preemption_1_1=rulePreemptionType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTransitionRule());
                      	        }
                             		set(
                             			current, 
                             			"preemption",
                              		lv_preemption_1_1, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.PreemptionType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:896:8: lv_preemption_1_2= rulePreemptionTypeLegacy
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTransitionAccess().getPreemptionPreemptionTypeLegacyEnumRuleCall_1_0_1()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_6);
                    lv_preemption_1_2=rulePreemptionTypeLegacy();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTransitionRule());
                      	        }
                             		set(
                             			current, 
                             			"preemption",
                              		lv_preemption_1_2, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.PreemptionTypeLegacy");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }
                    break;

            }


            }


            }

            // InternalSCTX.g:914:2: ( (otherlv_2= RULE_ID ) )
            // InternalSCTX.g:915:1: (otherlv_2= RULE_ID )
            {
            // InternalSCTX.g:915:1: (otherlv_2= RULE_ID )
            // InternalSCTX.g:916:3: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getTransitionRule());
              	        }
                      
            }
            otherlv_2=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_2, grammarAccess.getTransitionAccess().getTargetStateStateCrossReference_2_0()); 
              	
            }

            }


            }

            // InternalSCTX.g:930:2: ( (lv_delay_3_0= ruleDelayType ) )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( ((LA30_0>=84 && LA30_0<=87)) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // InternalSCTX.g:931:1: (lv_delay_3_0= ruleDelayType )
                    {
                    // InternalSCTX.g:931:1: (lv_delay_3_0= ruleDelayType )
                    // InternalSCTX.g:932:3: lv_delay_3_0= ruleDelayType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTransitionAccess().getDelayDelayTypeEnumRuleCall_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_32);
                    lv_delay_3_0=ruleDelayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTransitionRule());
                      	        }
                             		set(
                             			current, 
                             			"delay",
                              		lv_delay_3_0, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.DelayType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:948:3: ( (lv_deferred_4_0= 'deferred' ) )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==34) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // InternalSCTX.g:949:1: (lv_deferred_4_0= 'deferred' )
                    {
                    // InternalSCTX.g:949:1: (lv_deferred_4_0= 'deferred' )
                    // InternalSCTX.g:950:3: lv_deferred_4_0= 'deferred'
                    {
                    lv_deferred_4_0=(Token)match(input,34,FollowSets000.FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_deferred_4_0, grammarAccess.getTransitionAccess().getDeferredDeferredKeyword_4_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getTransitionRule());
                      	        }
                             		setWithLastConsumed(current, "deferred", true, "deferred");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:963:3: ( (lv_history_5_0= ruleHistoryType ) )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( ((LA32_0>=88 && LA32_0<=90)) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    // InternalSCTX.g:964:1: (lv_history_5_0= ruleHistoryType )
                    {
                    // InternalSCTX.g:964:1: (lv_history_5_0= ruleHistoryType )
                    // InternalSCTX.g:965:3: lv_history_5_0= ruleHistoryType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTransitionAccess().getHistoryHistoryTypeEnumRuleCall_5_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_34);
                    lv_history_5_0=ruleHistoryType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTransitionRule());
                      	        }
                             		set(
                             			current, 
                             			"history",
                              		lv_history_5_0, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.HistoryType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:981:3: (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( ( (lv_trigger_8_0= ruleBoolExpression ) ) | ( (lv_trigger_9_0= ruleAtomicExpression ) ) ) )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==35) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // InternalSCTX.g:981:5: otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( ( (lv_trigger_8_0= ruleBoolExpression ) ) | ( (lv_trigger_9_0= ruleAtomicExpression ) ) )
                    {
                    otherlv_6=(Token)match(input,35,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getTransitionAccess().getIfKeyword_6_0());
                          
                    }
                    // InternalSCTX.g:985:1: ( (lv_triggerDelay_7_0= RULE_INT ) )?
                    int alt33=2;
                    alt33 = dfa33.predict(input);
                    switch (alt33) {
                        case 1 :
                            // InternalSCTX.g:986:1: (lv_triggerDelay_7_0= RULE_INT )
                            {
                            // InternalSCTX.g:986:1: (lv_triggerDelay_7_0= RULE_INT )
                            // InternalSCTX.g:987:3: lv_triggerDelay_7_0= RULE_INT
                            {
                            lv_triggerDelay_7_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_35); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_triggerDelay_7_0, grammarAccess.getTransitionAccess().getTriggerDelayINTTerminalRuleCall_6_1_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getTransitionRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"triggerDelay",
                                      		lv_triggerDelay_7_0, 
                                      		"de.cau.cs.kieler.annotations.Annotations.INT");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:1003:3: ( ( (lv_trigger_8_0= ruleBoolExpression ) ) | ( (lv_trigger_9_0= ruleAtomicExpression ) ) )
                    int alt34=2;
                    alt34 = dfa34.predict(input);
                    switch (alt34) {
                        case 1 :
                            // InternalSCTX.g:1003:4: ( (lv_trigger_8_0= ruleBoolExpression ) )
                            {
                            // InternalSCTX.g:1003:4: ( (lv_trigger_8_0= ruleBoolExpression ) )
                            // InternalSCTX.g:1004:1: (lv_trigger_8_0= ruleBoolExpression )
                            {
                            // InternalSCTX.g:1004:1: (lv_trigger_8_0= ruleBoolExpression )
                            // InternalSCTX.g:1005:3: lv_trigger_8_0= ruleBoolExpression
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTransitionAccess().getTriggerBoolExpressionParserRuleCall_6_2_0_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_36);
                            lv_trigger_8_0=ruleBoolExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTransitionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"trigger",
                                      		lv_trigger_8_0, 
                                      		"de.cau.cs.kieler.kexpressions.KExpressions.BoolExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:1022:6: ( (lv_trigger_9_0= ruleAtomicExpression ) )
                            {
                            // InternalSCTX.g:1022:6: ( (lv_trigger_9_0= ruleAtomicExpression ) )
                            // InternalSCTX.g:1023:1: (lv_trigger_9_0= ruleAtomicExpression )
                            {
                            // InternalSCTX.g:1023:1: (lv_trigger_9_0= ruleAtomicExpression )
                            // InternalSCTX.g:1024:3: lv_trigger_9_0= ruleAtomicExpression
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTransitionAccess().getTriggerAtomicExpressionParserRuleCall_6_2_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_36);
                            lv_trigger_9_0=ruleAtomicExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTransitionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"trigger",
                                      		lv_trigger_9_0, 
                                      		"de.cau.cs.kieler.kexpressions.KExpressions.AtomicExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalSCTX.g:1040:5: (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==36) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // InternalSCTX.g:1040:7: otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )*
                    {
                    otherlv_10=(Token)match(input,36,FollowSets000.FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getTransitionAccess().getDoKeyword_7_0());
                          
                    }
                    // InternalSCTX.g:1044:1: ( (lv_effects_11_0= ruleEffect ) )
                    // InternalSCTX.g:1045:1: (lv_effects_11_0= ruleEffect )
                    {
                    // InternalSCTX.g:1045:1: (lv_effects_11_0= ruleEffect )
                    // InternalSCTX.g:1046:3: lv_effects_11_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTransitionAccess().getEffectsEffectParserRuleCall_7_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_38);
                    lv_effects_11_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTransitionRule());
                      	        }
                             		add(
                             			current, 
                             			"effects",
                              		lv_effects_11_0, 
                              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:1062:2: (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )*
                    loop36:
                    do {
                        int alt36=2;
                        int LA36_0 = input.LA(1);

                        if ( (LA36_0==37) ) {
                            alt36=1;
                        }


                        switch (alt36) {
                    	case 1 :
                    	    // InternalSCTX.g:1062:4: otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) )
                    	    {
                    	    otherlv_12=(Token)match(input,37,FollowSets000.FOLLOW_37); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_12, grammarAccess.getTransitionAccess().getSemicolonKeyword_7_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:1066:1: ( (lv_effects_13_0= ruleEffect ) )
                    	    // InternalSCTX.g:1067:1: (lv_effects_13_0= ruleEffect )
                    	    {
                    	    // InternalSCTX.g:1067:1: (lv_effects_13_0= ruleEffect )
                    	    // InternalSCTX.g:1068:3: lv_effects_13_0= ruleEffect
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getTransitionAccess().getEffectsEffectParserRuleCall_7_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_38);
                    	    lv_effects_13_0=ruleEffect();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTransitionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"effects",
                    	              		lv_effects_13_0, 
                    	              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop36;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:1084:6: (otherlv_14= 'label' ( (lv_label_15_0= RULE_STRING ) ) )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==38) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // InternalSCTX.g:1084:8: otherlv_14= 'label' ( (lv_label_15_0= RULE_STRING ) )
                    {
                    otherlv_14=(Token)match(input,38,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_14, grammarAccess.getTransitionAccess().getLabelKeyword_8_0());
                          
                    }
                    // InternalSCTX.g:1088:1: ( (lv_label_15_0= RULE_STRING ) )
                    // InternalSCTX.g:1089:1: (lv_label_15_0= RULE_STRING )
                    {
                    // InternalSCTX.g:1089:1: (lv_label_15_0= RULE_STRING )
                    // InternalSCTX.g:1090:3: lv_label_15_0= RULE_STRING
                    {
                    lv_label_15_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_label_15_0, grammarAccess.getTransitionAccess().getLabelSTRINGTerminalRuleCall_8_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getTransitionRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"label",
                              		lv_label_15_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTransition"


    // $ANTLR start "entryRuleRegion"
    // InternalSCTX.g:1114:1: entryRuleRegion returns [EObject current=null] : iv_ruleRegion= ruleRegion EOF ;
    public final EObject entryRuleRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRegion = null;


        try {
            // InternalSCTX.g:1115:2: (iv_ruleRegion= ruleRegion EOF )
            // InternalSCTX.g:1116:2: iv_ruleRegion= ruleRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRegionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRegion=ruleRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRegion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRegion"


    // $ANTLR start "ruleRegion"
    // InternalSCTX.g:1123:1: ruleRegion returns [EObject current=null] : (this_ControlflowRegion_0= ruleControlflowRegion | this_NestedControlflowRegion_1= ruleNestedControlflowRegion | this_DataflowRegion_2= ruleDataflowRegion ) ;
    public final EObject ruleRegion() throws RecognitionException {
        EObject current = null;

        EObject this_ControlflowRegion_0 = null;

        EObject this_NestedControlflowRegion_1 = null;

        EObject this_DataflowRegion_2 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:1126:28: ( (this_ControlflowRegion_0= ruleControlflowRegion | this_NestedControlflowRegion_1= ruleNestedControlflowRegion | this_DataflowRegion_2= ruleDataflowRegion ) )
            // InternalSCTX.g:1127:1: (this_ControlflowRegion_0= ruleControlflowRegion | this_NestedControlflowRegion_1= ruleNestedControlflowRegion | this_DataflowRegion_2= ruleDataflowRegion )
            {
            // InternalSCTX.g:1127:1: (this_ControlflowRegion_0= ruleControlflowRegion | this_NestedControlflowRegion_1= ruleNestedControlflowRegion | this_DataflowRegion_2= ruleDataflowRegion )
            int alt39=3;
            alt39 = dfa39.predict(input);
            switch (alt39) {
                case 1 :
                    // InternalSCTX.g:1128:2: this_ControlflowRegion_0= ruleControlflowRegion
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRegionAccess().getControlflowRegionParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ControlflowRegion_0=ruleControlflowRegion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ControlflowRegion_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:1141:2: this_NestedControlflowRegion_1= ruleNestedControlflowRegion
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRegionAccess().getNestedControlflowRegionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NestedControlflowRegion_1=ruleNestedControlflowRegion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_NestedControlflowRegion_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:1154:2: this_DataflowRegion_2= ruleDataflowRegion
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRegionAccess().getDataflowRegionParserRuleCall_2()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DataflowRegion_2=ruleDataflowRegion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_DataflowRegion_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRegion"


    // $ANTLR start "entryRuleImplicitControlflowRegion"
    // InternalSCTX.g:1173:1: entryRuleImplicitControlflowRegion returns [EObject current=null] : iv_ruleImplicitControlflowRegion= ruleImplicitControlflowRegion EOF ;
    public final EObject entryRuleImplicitControlflowRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImplicitControlflowRegion = null;


        try {
            // InternalSCTX.g:1174:2: (iv_ruleImplicitControlflowRegion= ruleImplicitControlflowRegion EOF )
            // InternalSCTX.g:1175:2: iv_ruleImplicitControlflowRegion= ruleImplicitControlflowRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImplicitControlflowRegionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleImplicitControlflowRegion=ruleImplicitControlflowRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImplicitControlflowRegion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImplicitControlflowRegion"


    // $ANTLR start "ruleImplicitControlflowRegion"
    // InternalSCTX.g:1182:1: ruleImplicitControlflowRegion returns [EObject current=null] : ( () ( (lv_states_1_0= ruleState ) )+ ) ;
    public final EObject ruleImplicitControlflowRegion() throws RecognitionException {
        EObject current = null;

        EObject lv_states_1_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:1185:28: ( ( () ( (lv_states_1_0= ruleState ) )+ ) )
            // InternalSCTX.g:1186:1: ( () ( (lv_states_1_0= ruleState ) )+ )
            {
            // InternalSCTX.g:1186:1: ( () ( (lv_states_1_0= ruleState ) )+ )
            // InternalSCTX.g:1186:2: () ( (lv_states_1_0= ruleState ) )+
            {
            // InternalSCTX.g:1186:2: ()
            // InternalSCTX.g:1187:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getImplicitControlflowRegionAccess().getControlflowRegionAction_0(),
                          current);
                  
            }

            }

            // InternalSCTX.g:1195:2: ( (lv_states_1_0= ruleState ) )+
            int cnt40=0;
            loop40:
            do {
                int alt40=2;
                int LA40_0 = input.LA(1);

                if ( (LA40_0==RULE_COMMENT_ANNOTATION||(LA40_0>=20 && LA40_0<=24)||LA40_0==76) ) {
                    alt40=1;
                }


                switch (alt40) {
            	case 1 :
            	    // InternalSCTX.g:1196:1: (lv_states_1_0= ruleState )
            	    {
            	    // InternalSCTX.g:1196:1: (lv_states_1_0= ruleState )
            	    // InternalSCTX.g:1197:3: lv_states_1_0= ruleState
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getImplicitControlflowRegionAccess().getStatesStateParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_40);
            	    lv_states_1_0=ruleState();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getImplicitControlflowRegionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"states",
            	              		lv_states_1_0, 
            	              		"de.cau.cs.kieler.sccharts.text.SCTX.State");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt40 >= 1 ) break loop40;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(40, input);
                        throw eee;
                }
                cnt40++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImplicitControlflowRegion"


    // $ANTLR start "entryRuleImplicitDataflowRegion"
    // InternalSCTX.g:1221:1: entryRuleImplicitDataflowRegion returns [EObject current=null] : iv_ruleImplicitDataflowRegion= ruleImplicitDataflowRegion EOF ;
    public final EObject entryRuleImplicitDataflowRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImplicitDataflowRegion = null;


        try {
            // InternalSCTX.g:1222:2: (iv_ruleImplicitDataflowRegion= ruleImplicitDataflowRegion EOF )
            // InternalSCTX.g:1223:2: iv_ruleImplicitDataflowRegion= ruleImplicitDataflowRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImplicitDataflowRegionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleImplicitDataflowRegion=ruleImplicitDataflowRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImplicitDataflowRegion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImplicitDataflowRegion"


    // $ANTLR start "ruleImplicitDataflowRegion"
    // InternalSCTX.g:1230:1: ruleImplicitDataflowRegion returns [EObject current=null] : ( () ( (lv_equations_1_0= ruleEquation ) )+ ) ;
    public final EObject ruleImplicitDataflowRegion() throws RecognitionException {
        EObject current = null;

        EObject lv_equations_1_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:1233:28: ( ( () ( (lv_equations_1_0= ruleEquation ) )+ ) )
            // InternalSCTX.g:1234:1: ( () ( (lv_equations_1_0= ruleEquation ) )+ )
            {
            // InternalSCTX.g:1234:1: ( () ( (lv_equations_1_0= ruleEquation ) )+ )
            // InternalSCTX.g:1234:2: () ( (lv_equations_1_0= ruleEquation ) )+
            {
            // InternalSCTX.g:1234:2: ()
            // InternalSCTX.g:1235:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getImplicitDataflowRegionAccess().getDataflowRegionAction_0(),
                          current);
                  
            }

            }

            // InternalSCTX.g:1243:2: ( (lv_equations_1_0= ruleEquation ) )+
            int cnt41=0;
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==RULE_ID||LA41_0==RULE_COMMENT_ANNOTATION||LA41_0==76) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // InternalSCTX.g:1244:1: (lv_equations_1_0= ruleEquation )
            	    {
            	    // InternalSCTX.g:1244:1: (lv_equations_1_0= ruleEquation )
            	    // InternalSCTX.g:1245:3: lv_equations_1_0= ruleEquation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getImplicitDataflowRegionAccess().getEquationsEquationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_41);
            	    lv_equations_1_0=ruleEquation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getImplicitDataflowRegionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"equations",
            	              		lv_equations_1_0, 
            	              		"de.cau.cs.kieler.sccharts.text.SCTX.Equation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt41 >= 1 ) break loop41;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(41, input);
                        throw eee;
                }
                cnt41++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImplicitDataflowRegion"


    // $ANTLR start "entryRuleControlflowRegion"
    // InternalSCTX.g:1269:1: entryRuleControlflowRegion returns [EObject current=null] : iv_ruleControlflowRegion= ruleControlflowRegion EOF ;
    public final EObject entryRuleControlflowRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleControlflowRegion = null;


        try {
            // InternalSCTX.g:1270:2: (iv_ruleControlflowRegion= ruleControlflowRegion EOF )
            // InternalSCTX.g:1271:2: iv_ruleControlflowRegion= ruleControlflowRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getControlflowRegionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleControlflowRegion=ruleControlflowRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleControlflowRegion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleControlflowRegion"


    // $ANTLR start "ruleControlflowRegion"
    // InternalSCTX.g:1278:1: ruleControlflowRegion returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'region' ( (lv_name_3_0= ruleExtendedID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= ':' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( (lv_states_7_0= ruleState ) )+ ) ;
    public final EObject ruleControlflowRegion() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        EObject lv_annotations_1_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_declarations_6_0 = null;

        EObject lv_states_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:1281:28: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'region' ( (lv_name_3_0= ruleExtendedID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= ':' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( (lv_states_7_0= ruleState ) )+ ) )
            // InternalSCTX.g:1282:1: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'region' ( (lv_name_3_0= ruleExtendedID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= ':' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( (lv_states_7_0= ruleState ) )+ )
            {
            // InternalSCTX.g:1282:1: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'region' ( (lv_name_3_0= ruleExtendedID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= ':' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( (lv_states_7_0= ruleState ) )+ )
            // InternalSCTX.g:1282:2: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'region' ( (lv_name_3_0= ruleExtendedID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= ':' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( (lv_states_7_0= ruleState ) )+
            {
            // InternalSCTX.g:1282:2: ()
            // InternalSCTX.g:1283:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getControlflowRegionAccess().getControlflowRegionAction_0(),
                          current);
                  
            }

            }

            // InternalSCTX.g:1291:2: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( (LA42_0==RULE_COMMENT_ANNOTATION||LA42_0==76) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // InternalSCTX.g:1292:1: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:1292:1: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:1293:3: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getControlflowRegionAccess().getAnnotationsAnnotationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_42);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_1_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

            otherlv_2=(Token)match(input,39,FollowSets000.FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getControlflowRegionAccess().getRegionKeyword_2());
                  
            }
            // InternalSCTX.g:1313:1: ( (lv_name_3_0= ruleExtendedID ) )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==RULE_ID) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // InternalSCTX.g:1314:1: (lv_name_3_0= ruleExtendedID )
                    {
                    // InternalSCTX.g:1314:1: (lv_name_3_0= ruleExtendedID )
                    // InternalSCTX.g:1315:3: lv_name_3_0= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getControlflowRegionAccess().getNameExtendedIDParserRuleCall_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_44);
                    lv_name_3_0=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_3_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:1331:3: ( (lv_label_4_0= RULE_STRING ) )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==RULE_STRING) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalSCTX.g:1332:1: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalSCTX.g:1332:1: (lv_label_4_0= RULE_STRING )
                    // InternalSCTX.g:1333:3: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_label_4_0, grammarAccess.getControlflowRegionAccess().getLabelSTRINGTerminalRuleCall_4_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getControlflowRegionRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"label",
                              		lv_label_4_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.STRING");
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,40,FollowSets000.FOLLOW_46); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getControlflowRegionAccess().getColonKeyword_5());
                  
            }
            // InternalSCTX.g:1353:1: ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )*
            loop45:
            do {
                int alt45=2;
                alt45 = dfa45.predict(input);
                switch (alt45) {
            	case 1 :
            	    // InternalSCTX.g:1354:1: (lv_declarations_6_0= ruleDeclarationWOSemicolon )
            	    {
            	    // InternalSCTX.g:1354:1: (lv_declarations_6_0= ruleDeclarationWOSemicolon )
            	    // InternalSCTX.g:1355:3: lv_declarations_6_0= ruleDeclarationWOSemicolon
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getControlflowRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_6_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_46);
            	    lv_declarations_6_0=ruleDeclarationWOSemicolon();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declarations",
            	              		lv_declarations_6_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);

            // InternalSCTX.g:1371:3: ( (lv_states_7_0= ruleState ) )+
            int cnt46=0;
            loop46:
            do {
                int alt46=2;
                alt46 = dfa46.predict(input);
                switch (alt46) {
            	case 1 :
            	    // InternalSCTX.g:1372:1: (lv_states_7_0= ruleState )
            	    {
            	    // InternalSCTX.g:1372:1: (lv_states_7_0= ruleState )
            	    // InternalSCTX.g:1373:3: lv_states_7_0= ruleState
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getControlflowRegionAccess().getStatesStateParserRuleCall_7_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_40);
            	    lv_states_7_0=ruleState();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"states",
            	              		lv_states_7_0, 
            	              		"de.cau.cs.kieler.sccharts.text.SCTX.State");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt46 >= 1 ) break loop46;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(46, input);
                        throw eee;
                }
                cnt46++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleControlflowRegion"


    // $ANTLR start "entryRuleNestedControlflowRegion"
    // InternalSCTX.g:1397:1: entryRuleNestedControlflowRegion returns [EObject current=null] : iv_ruleNestedControlflowRegion= ruleNestedControlflowRegion EOF ;
    public final EObject entryRuleNestedControlflowRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNestedControlflowRegion = null;


        try {
            // InternalSCTX.g:1398:2: (iv_ruleNestedControlflowRegion= ruleNestedControlflowRegion EOF )
            // InternalSCTX.g:1399:2: iv_ruleNestedControlflowRegion= ruleNestedControlflowRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNestedControlflowRegionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNestedControlflowRegion=ruleNestedControlflowRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNestedControlflowRegion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNestedControlflowRegion"


    // $ANTLR start "ruleNestedControlflowRegion"
    // InternalSCTX.g:1406:1: ruleNestedControlflowRegion returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'region' ( (lv_name_3_0= ruleExtendedID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= '{' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( ( (lv_states_7_0= ruleImplicitState ) ) | ( (lv_states_8_0= ruleState ) )+ ) otherlv_9= '}' ) ;
    public final EObject ruleNestedControlflowRegion() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        Token otherlv_9=null;
        EObject lv_annotations_1_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_declarations_6_0 = null;

        EObject lv_states_7_0 = null;

        EObject lv_states_8_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:1409:28: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'region' ( (lv_name_3_0= ruleExtendedID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= '{' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( ( (lv_states_7_0= ruleImplicitState ) ) | ( (lv_states_8_0= ruleState ) )+ ) otherlv_9= '}' ) )
            // InternalSCTX.g:1410:1: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'region' ( (lv_name_3_0= ruleExtendedID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= '{' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( ( (lv_states_7_0= ruleImplicitState ) ) | ( (lv_states_8_0= ruleState ) )+ ) otherlv_9= '}' )
            {
            // InternalSCTX.g:1410:1: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'region' ( (lv_name_3_0= ruleExtendedID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= '{' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( ( (lv_states_7_0= ruleImplicitState ) ) | ( (lv_states_8_0= ruleState ) )+ ) otherlv_9= '}' )
            // InternalSCTX.g:1410:2: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'region' ( (lv_name_3_0= ruleExtendedID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= '{' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( ( (lv_states_7_0= ruleImplicitState ) ) | ( (lv_states_8_0= ruleState ) )+ ) otherlv_9= '}'
            {
            // InternalSCTX.g:1410:2: ()
            // InternalSCTX.g:1411:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getNestedControlflowRegionAccess().getControlflowRegionAction_0(),
                          current);
                  
            }

            }

            // InternalSCTX.g:1419:2: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( (LA47_0==RULE_COMMENT_ANNOTATION||LA47_0==76) ) {
                    alt47=1;
                }


                switch (alt47) {
            	case 1 :
            	    // InternalSCTX.g:1420:1: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:1420:1: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:1421:3: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getNestedControlflowRegionAccess().getAnnotationsAnnotationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_42);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getNestedControlflowRegionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_1_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);

            otherlv_2=(Token)match(input,39,FollowSets000.FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getNestedControlflowRegionAccess().getRegionKeyword_2());
                  
            }
            // InternalSCTX.g:1441:1: ( (lv_name_3_0= ruleExtendedID ) )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==RULE_ID) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalSCTX.g:1442:1: (lv_name_3_0= ruleExtendedID )
                    {
                    // InternalSCTX.g:1442:1: (lv_name_3_0= ruleExtendedID )
                    // InternalSCTX.g:1443:3: lv_name_3_0= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getNestedControlflowRegionAccess().getNameExtendedIDParserRuleCall_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_7);
                    lv_name_3_0=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNestedControlflowRegionRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_3_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:1459:3: ( (lv_label_4_0= RULE_STRING ) )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==RULE_STRING) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalSCTX.g:1460:1: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalSCTX.g:1460:1: (lv_label_4_0= RULE_STRING )
                    // InternalSCTX.g:1461:3: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_label_4_0, grammarAccess.getNestedControlflowRegionAccess().getLabelSTRINGTerminalRuleCall_4_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getNestedControlflowRegionRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"label",
                              		lv_label_4_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.STRING");
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,18,FollowSets000.FOLLOW_48); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getNestedControlflowRegionAccess().getLeftCurlyBracketKeyword_5());
                  
            }
            // InternalSCTX.g:1481:1: ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )*
            loop50:
            do {
                int alt50=2;
                alt50 = dfa50.predict(input);
                switch (alt50) {
            	case 1 :
            	    // InternalSCTX.g:1482:1: (lv_declarations_6_0= ruleDeclarationWOSemicolon )
            	    {
            	    // InternalSCTX.g:1482:1: (lv_declarations_6_0= ruleDeclarationWOSemicolon )
            	    // InternalSCTX.g:1483:3: lv_declarations_6_0= ruleDeclarationWOSemicolon
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getNestedControlflowRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_6_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_48);
            	    lv_declarations_6_0=ruleDeclarationWOSemicolon();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getNestedControlflowRegionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declarations",
            	              		lv_declarations_6_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);

            // InternalSCTX.g:1499:3: ( ( (lv_states_7_0= ruleImplicitState ) ) | ( (lv_states_8_0= ruleState ) )+ )
            int alt52=2;
            alt52 = dfa52.predict(input);
            switch (alt52) {
                case 1 :
                    // InternalSCTX.g:1499:4: ( (lv_states_7_0= ruleImplicitState ) )
                    {
                    // InternalSCTX.g:1499:4: ( (lv_states_7_0= ruleImplicitState ) )
                    // InternalSCTX.g:1500:1: (lv_states_7_0= ruleImplicitState )
                    {
                    // InternalSCTX.g:1500:1: (lv_states_7_0= ruleImplicitState )
                    // InternalSCTX.g:1501:3: lv_states_7_0= ruleImplicitState
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getNestedControlflowRegionAccess().getStatesImplicitStateParserRuleCall_7_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_states_7_0=ruleImplicitState();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNestedControlflowRegionRule());
                      	        }
                             		add(
                             			current, 
                             			"states",
                              		lv_states_7_0, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.ImplicitState");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:1518:6: ( (lv_states_8_0= ruleState ) )+
                    {
                    // InternalSCTX.g:1518:6: ( (lv_states_8_0= ruleState ) )+
                    int cnt51=0;
                    loop51:
                    do {
                        int alt51=2;
                        int LA51_0 = input.LA(1);

                        if ( (LA51_0==RULE_COMMENT_ANNOTATION||(LA51_0>=20 && LA51_0<=24)||LA51_0==76) ) {
                            alt51=1;
                        }


                        switch (alt51) {
                    	case 1 :
                    	    // InternalSCTX.g:1519:1: (lv_states_8_0= ruleState )
                    	    {
                    	    // InternalSCTX.g:1519:1: (lv_states_8_0= ruleState )
                    	    // InternalSCTX.g:1520:3: lv_states_8_0= ruleState
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getNestedControlflowRegionAccess().getStatesStateParserRuleCall_7_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_49);
                    	    lv_states_8_0=ruleState();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getNestedControlflowRegionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"states",
                    	              		lv_states_8_0, 
                    	              		"de.cau.cs.kieler.sccharts.text.SCTX.State");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt51 >= 1 ) break loop51;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(51, input);
                                throw eee;
                        }
                        cnt51++;
                    } while (true);


                    }
                    break;

            }

            otherlv_9=(Token)match(input,19,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getNestedControlflowRegionAccess().getRightCurlyBracketKeyword_8());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNestedControlflowRegion"


    // $ANTLR start "entryRuleDataflowRegion"
    // InternalSCTX.g:1548:1: entryRuleDataflowRegion returns [EObject current=null] : iv_ruleDataflowRegion= ruleDataflowRegion EOF ;
    public final EObject entryRuleDataflowRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDataflowRegion = null;


        try {
            // InternalSCTX.g:1549:2: (iv_ruleDataflowRegion= ruleDataflowRegion EOF )
            // InternalSCTX.g:1550:2: iv_ruleDataflowRegion= ruleDataflowRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDataflowRegionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDataflowRegion=ruleDataflowRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDataflowRegion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDataflowRegion"


    // $ANTLR start "ruleDataflowRegion"
    // InternalSCTX.g:1557:1: ruleDataflowRegion returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'dataflow' ( (lv_name_3_0= ruleExtendedID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= ':' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_7_0= ruleEquation ) )+ ) ;
    public final EObject ruleDataflowRegion() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        EObject lv_annotations_1_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_declarations_6_0 = null;

        EObject lv_equations_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:1560:28: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'dataflow' ( (lv_name_3_0= ruleExtendedID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= ':' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_7_0= ruleEquation ) )+ ) )
            // InternalSCTX.g:1561:1: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'dataflow' ( (lv_name_3_0= ruleExtendedID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= ':' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_7_0= ruleEquation ) )+ )
            {
            // InternalSCTX.g:1561:1: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'dataflow' ( (lv_name_3_0= ruleExtendedID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= ':' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_7_0= ruleEquation ) )+ )
            // InternalSCTX.g:1561:2: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'dataflow' ( (lv_name_3_0= ruleExtendedID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= ':' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_7_0= ruleEquation ) )+
            {
            // InternalSCTX.g:1561:2: ()
            // InternalSCTX.g:1562:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getDataflowRegionAccess().getDataflowRegionAction_0(),
                          current);
                  
            }

            }

            // InternalSCTX.g:1570:2: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==RULE_COMMENT_ANNOTATION||LA53_0==76) ) {
                    alt53=1;
                }


                switch (alt53) {
            	case 1 :
            	    // InternalSCTX.g:1571:1: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:1571:1: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:1572:3: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getDataflowRegionAccess().getAnnotationsAnnotationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_50);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_1_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

            otherlv_2=(Token)match(input,41,FollowSets000.FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getDataflowRegionAccess().getDataflowKeyword_2());
                  
            }
            // InternalSCTX.g:1592:1: ( (lv_name_3_0= ruleExtendedID ) )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==RULE_ID) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalSCTX.g:1593:1: (lv_name_3_0= ruleExtendedID )
                    {
                    // InternalSCTX.g:1593:1: (lv_name_3_0= ruleExtendedID )
                    // InternalSCTX.g:1594:3: lv_name_3_0= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDataflowRegionAccess().getNameExtendedIDParserRuleCall_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_44);
                    lv_name_3_0=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_3_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:1610:3: ( (lv_label_4_0= RULE_STRING ) )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==RULE_STRING) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // InternalSCTX.g:1611:1: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalSCTX.g:1611:1: (lv_label_4_0= RULE_STRING )
                    // InternalSCTX.g:1612:3: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_label_4_0, grammarAccess.getDataflowRegionAccess().getLabelSTRINGTerminalRuleCall_4_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDataflowRegionRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"label",
                              		lv_label_4_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.STRING");
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,40,FollowSets000.FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getDataflowRegionAccess().getColonKeyword_5());
                  
            }
            // InternalSCTX.g:1632:1: ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )*
            loop56:
            do {
                int alt56=2;
                alt56 = dfa56.predict(input);
                switch (alt56) {
            	case 1 :
            	    // InternalSCTX.g:1633:1: (lv_declarations_6_0= ruleDeclarationWOSemicolon )
            	    {
            	    // InternalSCTX.g:1633:1: (lv_declarations_6_0= ruleDeclarationWOSemicolon )
            	    // InternalSCTX.g:1634:3: lv_declarations_6_0= ruleDeclarationWOSemicolon
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getDataflowRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_6_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_51);
            	    lv_declarations_6_0=ruleDeclarationWOSemicolon();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declarations",
            	              		lv_declarations_6_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

            // InternalSCTX.g:1650:3: ( (lv_equations_7_0= ruleEquation ) )+
            int cnt57=0;
            loop57:
            do {
                int alt57=2;
                alt57 = dfa57.predict(input);
                switch (alt57) {
            	case 1 :
            	    // InternalSCTX.g:1651:1: (lv_equations_7_0= ruleEquation )
            	    {
            	    // InternalSCTX.g:1651:1: (lv_equations_7_0= ruleEquation )
            	    // InternalSCTX.g:1652:3: lv_equations_7_0= ruleEquation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getDataflowRegionAccess().getEquationsEquationParserRuleCall_7_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_41);
            	    lv_equations_7_0=ruleEquation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"equations",
            	              		lv_equations_7_0, 
            	              		"de.cau.cs.kieler.sccharts.text.SCTX.Equation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt57 >= 1 ) break loop57;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(57, input);
                        throw eee;
                }
                cnt57++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDataflowRegion"


    // $ANTLR start "entryRuleLocalAction"
    // InternalSCTX.g:1676:1: entryRuleLocalAction returns [EObject current=null] : iv_ruleLocalAction= ruleLocalAction EOF ;
    public final EObject entryRuleLocalAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLocalAction = null;


        try {
            // InternalSCTX.g:1677:2: (iv_ruleLocalAction= ruleLocalAction EOF )
            // InternalSCTX.g:1678:2: iv_ruleLocalAction= ruleLocalAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocalActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLocalAction=ruleLocalAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocalAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLocalAction"


    // $ANTLR start "ruleLocalAction"
    // InternalSCTX.g:1685:1: ruleLocalAction returns [EObject current=null] : (this_EntryAction_0= ruleEntryAction | this_DuringAction_1= ruleDuringAction | this_ExitAction_2= ruleExitAction | this_SuspendAction_3= ruleSuspendAction | this_PrecedingAction_4= rulePrecedingAction | this_SucceedingAction_5= ruleSucceedingAction ) ;
    public final EObject ruleLocalAction() throws RecognitionException {
        EObject current = null;

        EObject this_EntryAction_0 = null;

        EObject this_DuringAction_1 = null;

        EObject this_ExitAction_2 = null;

        EObject this_SuspendAction_3 = null;

        EObject this_PrecedingAction_4 = null;

        EObject this_SucceedingAction_5 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:1688:28: ( (this_EntryAction_0= ruleEntryAction | this_DuringAction_1= ruleDuringAction | this_ExitAction_2= ruleExitAction | this_SuspendAction_3= ruleSuspendAction | this_PrecedingAction_4= rulePrecedingAction | this_SucceedingAction_5= ruleSucceedingAction ) )
            // InternalSCTX.g:1689:1: (this_EntryAction_0= ruleEntryAction | this_DuringAction_1= ruleDuringAction | this_ExitAction_2= ruleExitAction | this_SuspendAction_3= ruleSuspendAction | this_PrecedingAction_4= rulePrecedingAction | this_SucceedingAction_5= ruleSucceedingAction )
            {
            // InternalSCTX.g:1689:1: (this_EntryAction_0= ruleEntryAction | this_DuringAction_1= ruleDuringAction | this_ExitAction_2= ruleExitAction | this_SuspendAction_3= ruleSuspendAction | this_PrecedingAction_4= rulePrecedingAction | this_SucceedingAction_5= ruleSucceedingAction )
            int alt58=6;
            alt58 = dfa58.predict(input);
            switch (alt58) {
                case 1 :
                    // InternalSCTX.g:1690:2: this_EntryAction_0= ruleEntryAction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLocalActionAccess().getEntryActionParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EntryAction_0=ruleEntryAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_EntryAction_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:1703:2: this_DuringAction_1= ruleDuringAction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLocalActionAccess().getDuringActionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DuringAction_1=ruleDuringAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_DuringAction_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:1716:2: this_ExitAction_2= ruleExitAction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLocalActionAccess().getExitActionParserRuleCall_2()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExitAction_2=ruleExitAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ExitAction_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:1729:2: this_SuspendAction_3= ruleSuspendAction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLocalActionAccess().getSuspendActionParserRuleCall_3()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SuspendAction_3=ruleSuspendAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_SuspendAction_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalSCTX.g:1742:2: this_PrecedingAction_4= rulePrecedingAction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLocalActionAccess().getPrecedingActionParserRuleCall_4()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrecedingAction_4=rulePrecedingAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_PrecedingAction_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalSCTX.g:1755:2: this_SucceedingAction_5= ruleSucceedingAction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLocalActionAccess().getSucceedingActionParserRuleCall_5()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SucceedingAction_5=ruleSucceedingAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_SucceedingAction_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocalAction"


    // $ANTLR start "entryRuleEntryAction"
    // InternalSCTX.g:1774:1: entryRuleEntryAction returns [EObject current=null] : iv_ruleEntryAction= ruleEntryAction EOF ;
    public final EObject entryRuleEntryAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEntryAction = null;


        try {
            // InternalSCTX.g:1775:2: (iv_ruleEntryAction= ruleEntryAction EOF )
            // InternalSCTX.g:1776:2: iv_ruleEntryAction= ruleEntryAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEntryActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEntryAction=ruleEntryAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEntryAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEntryAction"


    // $ANTLR start "ruleEntryAction"
    // InternalSCTX.g:1783:1: ruleEntryAction returns [EObject current=null] : ( () otherlv_1= 'entry' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? (otherlv_8= 'label' ( (lv_label_9_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleEntryAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_label_9_0=null;
        EObject lv_trigger_3_0 = null;

        EObject lv_effects_5_0 = null;

        EObject lv_effects_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:1786:28: ( ( () otherlv_1= 'entry' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? (otherlv_8= 'label' ( (lv_label_9_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:1787:1: ( () otherlv_1= 'entry' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? (otherlv_8= 'label' ( (lv_label_9_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:1787:1: ( () otherlv_1= 'entry' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? (otherlv_8= 'label' ( (lv_label_9_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:1787:2: () otherlv_1= 'entry' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? (otherlv_8= 'label' ( (lv_label_9_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:1787:2: ()
            // InternalSCTX.g:1788:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getEntryActionAccess().getEntryActionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,42,FollowSets000.FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getEntryActionAccess().getEntryKeyword_1());
                  
            }
            // InternalSCTX.g:1800:1: (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==35) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // InternalSCTX.g:1800:3: otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) )
                    {
                    otherlv_2=(Token)match(input,35,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getEntryActionAccess().getIfKeyword_2_0());
                          
                    }
                    // InternalSCTX.g:1804:1: ( (lv_trigger_3_0= ruleBoolExpression ) )
                    // InternalSCTX.g:1805:1: (lv_trigger_3_0= ruleBoolExpression )
                    {
                    // InternalSCTX.g:1805:1: (lv_trigger_3_0= ruleBoolExpression )
                    // InternalSCTX.g:1806:3: lv_trigger_3_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getEntryActionAccess().getTriggerBoolExpressionParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_36);
                    lv_trigger_3_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getEntryActionRule());
                      	        }
                             		set(
                             			current, 
                             			"trigger",
                              		lv_trigger_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.BoolExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:1822:4: (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==36) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalSCTX.g:1822:6: otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )*
                    {
                    otherlv_4=(Token)match(input,36,FollowSets000.FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getEntryActionAccess().getDoKeyword_3_0());
                          
                    }
                    // InternalSCTX.g:1826:1: ( (lv_effects_5_0= ruleEffect ) )
                    // InternalSCTX.g:1827:1: (lv_effects_5_0= ruleEffect )
                    {
                    // InternalSCTX.g:1827:1: (lv_effects_5_0= ruleEffect )
                    // InternalSCTX.g:1828:3: lv_effects_5_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getEntryActionAccess().getEffectsEffectParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_38);
                    lv_effects_5_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getEntryActionRule());
                      	        }
                             		add(
                             			current, 
                             			"effects",
                              		lv_effects_5_0, 
                              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:1844:2: (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )*
                    loop60:
                    do {
                        int alt60=2;
                        int LA60_0 = input.LA(1);

                        if ( (LA60_0==37) ) {
                            alt60=1;
                        }


                        switch (alt60) {
                    	case 1 :
                    	    // InternalSCTX.g:1844:4: otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) )
                    	    {
                    	    otherlv_6=(Token)match(input,37,FollowSets000.FOLLOW_37); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getEntryActionAccess().getSemicolonKeyword_3_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:1848:1: ( (lv_effects_7_0= ruleEffect ) )
                    	    // InternalSCTX.g:1849:1: (lv_effects_7_0= ruleEffect )
                    	    {
                    	    // InternalSCTX.g:1849:1: (lv_effects_7_0= ruleEffect )
                    	    // InternalSCTX.g:1850:3: lv_effects_7_0= ruleEffect
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getEntryActionAccess().getEffectsEffectParserRuleCall_3_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_38);
                    	    lv_effects_7_0=ruleEffect();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getEntryActionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"effects",
                    	              		lv_effects_7_0, 
                    	              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop60;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:1866:6: (otherlv_8= 'label' ( (lv_label_9_0= RULE_STRING ) ) )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==38) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // InternalSCTX.g:1866:8: otherlv_8= 'label' ( (lv_label_9_0= RULE_STRING ) )
                    {
                    otherlv_8=(Token)match(input,38,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getEntryActionAccess().getLabelKeyword_4_0());
                          
                    }
                    // InternalSCTX.g:1870:1: ( (lv_label_9_0= RULE_STRING ) )
                    // InternalSCTX.g:1871:1: (lv_label_9_0= RULE_STRING )
                    {
                    // InternalSCTX.g:1871:1: (lv_label_9_0= RULE_STRING )
                    // InternalSCTX.g:1872:3: lv_label_9_0= RULE_STRING
                    {
                    lv_label_9_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_label_9_0, grammarAccess.getEntryActionAccess().getLabelSTRINGTerminalRuleCall_4_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getEntryActionRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"label",
                              		lv_label_9_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEntryAction"


    // $ANTLR start "entryRuleDuringAction"
    // InternalSCTX.g:1896:1: entryRuleDuringAction returns [EObject current=null] : iv_ruleDuringAction= ruleDuringAction EOF ;
    public final EObject entryRuleDuringAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDuringAction = null;


        try {
            // InternalSCTX.g:1897:2: (iv_ruleDuringAction= ruleDuringAction EOF )
            // InternalSCTX.g:1898:2: iv_ruleDuringAction= ruleDuringAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDuringActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDuringAction=ruleDuringAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDuringAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDuringAction"


    // $ANTLR start "ruleDuringAction"
    // InternalSCTX.g:1905:1: ruleDuringAction returns [EObject current=null] : ( () ( (lv_delay_1_0= ruleDelayType ) )? otherlv_2= 'during' (otherlv_3= 'if' ( (lv_trigger_4_0= ruleBoolExpression ) ) )? (otherlv_5= 'do' ( (lv_effects_6_0= ruleEffect ) ) (otherlv_7= ';' ( (lv_effects_8_0= ruleEffect ) ) )* )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleDuringAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token lv_label_10_0=null;
        Enumerator lv_delay_1_0 = null;

        EObject lv_trigger_4_0 = null;

        EObject lv_effects_6_0 = null;

        EObject lv_effects_8_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:1908:28: ( ( () ( (lv_delay_1_0= ruleDelayType ) )? otherlv_2= 'during' (otherlv_3= 'if' ( (lv_trigger_4_0= ruleBoolExpression ) ) )? (otherlv_5= 'do' ( (lv_effects_6_0= ruleEffect ) ) (otherlv_7= ';' ( (lv_effects_8_0= ruleEffect ) ) )* )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:1909:1: ( () ( (lv_delay_1_0= ruleDelayType ) )? otherlv_2= 'during' (otherlv_3= 'if' ( (lv_trigger_4_0= ruleBoolExpression ) ) )? (otherlv_5= 'do' ( (lv_effects_6_0= ruleEffect ) ) (otherlv_7= ';' ( (lv_effects_8_0= ruleEffect ) ) )* )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:1909:1: ( () ( (lv_delay_1_0= ruleDelayType ) )? otherlv_2= 'during' (otherlv_3= 'if' ( (lv_trigger_4_0= ruleBoolExpression ) ) )? (otherlv_5= 'do' ( (lv_effects_6_0= ruleEffect ) ) (otherlv_7= ';' ( (lv_effects_8_0= ruleEffect ) ) )* )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:1909:2: () ( (lv_delay_1_0= ruleDelayType ) )? otherlv_2= 'during' (otherlv_3= 'if' ( (lv_trigger_4_0= ruleBoolExpression ) ) )? (otherlv_5= 'do' ( (lv_effects_6_0= ruleEffect ) ) (otherlv_7= ';' ( (lv_effects_8_0= ruleEffect ) ) )* )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:1909:2: ()
            // InternalSCTX.g:1910:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getDuringActionAccess().getDuringActionAction_0(),
                          current);
                  
            }

            }

            // InternalSCTX.g:1918:2: ( (lv_delay_1_0= ruleDelayType ) )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( ((LA63_0>=84 && LA63_0<=87)) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalSCTX.g:1919:1: (lv_delay_1_0= ruleDelayType )
                    {
                    // InternalSCTX.g:1919:1: (lv_delay_1_0= ruleDelayType )
                    // InternalSCTX.g:1920:3: lv_delay_1_0= ruleDelayType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDuringActionAccess().getDelayDelayTypeEnumRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_52);
                    lv_delay_1_0=ruleDelayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDuringActionRule());
                      	        }
                             		set(
                             			current, 
                             			"delay",
                              		lv_delay_1_0, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.DelayType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,43,FollowSets000.FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getDuringActionAccess().getDuringKeyword_2());
                  
            }
            // InternalSCTX.g:1940:1: (otherlv_3= 'if' ( (lv_trigger_4_0= ruleBoolExpression ) ) )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==35) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalSCTX.g:1940:3: otherlv_3= 'if' ( (lv_trigger_4_0= ruleBoolExpression ) )
                    {
                    otherlv_3=(Token)match(input,35,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getDuringActionAccess().getIfKeyword_3_0());
                          
                    }
                    // InternalSCTX.g:1944:1: ( (lv_trigger_4_0= ruleBoolExpression ) )
                    // InternalSCTX.g:1945:1: (lv_trigger_4_0= ruleBoolExpression )
                    {
                    // InternalSCTX.g:1945:1: (lv_trigger_4_0= ruleBoolExpression )
                    // InternalSCTX.g:1946:3: lv_trigger_4_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDuringActionAccess().getTriggerBoolExpressionParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_36);
                    lv_trigger_4_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDuringActionRule());
                      	        }
                             		set(
                             			current, 
                             			"trigger",
                              		lv_trigger_4_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.BoolExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:1962:4: (otherlv_5= 'do' ( (lv_effects_6_0= ruleEffect ) ) (otherlv_7= ';' ( (lv_effects_8_0= ruleEffect ) ) )* )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==36) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalSCTX.g:1962:6: otherlv_5= 'do' ( (lv_effects_6_0= ruleEffect ) ) (otherlv_7= ';' ( (lv_effects_8_0= ruleEffect ) ) )*
                    {
                    otherlv_5=(Token)match(input,36,FollowSets000.FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getDuringActionAccess().getDoKeyword_4_0());
                          
                    }
                    // InternalSCTX.g:1966:1: ( (lv_effects_6_0= ruleEffect ) )
                    // InternalSCTX.g:1967:1: (lv_effects_6_0= ruleEffect )
                    {
                    // InternalSCTX.g:1967:1: (lv_effects_6_0= ruleEffect )
                    // InternalSCTX.g:1968:3: lv_effects_6_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDuringActionAccess().getEffectsEffectParserRuleCall_4_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_38);
                    lv_effects_6_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDuringActionRule());
                      	        }
                             		add(
                             			current, 
                             			"effects",
                              		lv_effects_6_0, 
                              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:1984:2: (otherlv_7= ';' ( (lv_effects_8_0= ruleEffect ) ) )*
                    loop65:
                    do {
                        int alt65=2;
                        int LA65_0 = input.LA(1);

                        if ( (LA65_0==37) ) {
                            alt65=1;
                        }


                        switch (alt65) {
                    	case 1 :
                    	    // InternalSCTX.g:1984:4: otherlv_7= ';' ( (lv_effects_8_0= ruleEffect ) )
                    	    {
                    	    otherlv_7=(Token)match(input,37,FollowSets000.FOLLOW_37); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_7, grammarAccess.getDuringActionAccess().getSemicolonKeyword_4_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:1988:1: ( (lv_effects_8_0= ruleEffect ) )
                    	    // InternalSCTX.g:1989:1: (lv_effects_8_0= ruleEffect )
                    	    {
                    	    // InternalSCTX.g:1989:1: (lv_effects_8_0= ruleEffect )
                    	    // InternalSCTX.g:1990:3: lv_effects_8_0= ruleEffect
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getDuringActionAccess().getEffectsEffectParserRuleCall_4_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_38);
                    	    lv_effects_8_0=ruleEffect();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getDuringActionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"effects",
                    	              		lv_effects_8_0, 
                    	              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop65;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:2006:6: (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==38) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalSCTX.g:2006:8: otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) )
                    {
                    otherlv_9=(Token)match(input,38,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getDuringActionAccess().getLabelKeyword_5_0());
                          
                    }
                    // InternalSCTX.g:2010:1: ( (lv_label_10_0= RULE_STRING ) )
                    // InternalSCTX.g:2011:1: (lv_label_10_0= RULE_STRING )
                    {
                    // InternalSCTX.g:2011:1: (lv_label_10_0= RULE_STRING )
                    // InternalSCTX.g:2012:3: lv_label_10_0= RULE_STRING
                    {
                    lv_label_10_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_label_10_0, grammarAccess.getDuringActionAccess().getLabelSTRINGTerminalRuleCall_5_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDuringActionRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"label",
                              		lv_label_10_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDuringAction"


    // $ANTLR start "entryRuleExitAction"
    // InternalSCTX.g:2036:1: entryRuleExitAction returns [EObject current=null] : iv_ruleExitAction= ruleExitAction EOF ;
    public final EObject entryRuleExitAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExitAction = null;


        try {
            // InternalSCTX.g:2037:2: (iv_ruleExitAction= ruleExitAction EOF )
            // InternalSCTX.g:2038:2: iv_ruleExitAction= ruleExitAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExitActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExitAction=ruleExitAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExitAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExitAction"


    // $ANTLR start "ruleExitAction"
    // InternalSCTX.g:2045:1: ruleExitAction returns [EObject current=null] : ( () otherlv_1= 'exit' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? (otherlv_8= 'label' ( (lv_label_9_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleExitAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_label_9_0=null;
        EObject lv_trigger_3_0 = null;

        EObject lv_effects_5_0 = null;

        EObject lv_effects_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:2048:28: ( ( () otherlv_1= 'exit' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? (otherlv_8= 'label' ( (lv_label_9_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:2049:1: ( () otherlv_1= 'exit' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? (otherlv_8= 'label' ( (lv_label_9_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:2049:1: ( () otherlv_1= 'exit' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? (otherlv_8= 'label' ( (lv_label_9_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:2049:2: () otherlv_1= 'exit' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? (otherlv_8= 'label' ( (lv_label_9_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:2049:2: ()
            // InternalSCTX.g:2050:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getExitActionAccess().getExitActionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,44,FollowSets000.FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getExitActionAccess().getExitKeyword_1());
                  
            }
            // InternalSCTX.g:2062:1: (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==35) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // InternalSCTX.g:2062:3: otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) )
                    {
                    otherlv_2=(Token)match(input,35,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getExitActionAccess().getIfKeyword_2_0());
                          
                    }
                    // InternalSCTX.g:2066:1: ( (lv_trigger_3_0= ruleBoolExpression ) )
                    // InternalSCTX.g:2067:1: (lv_trigger_3_0= ruleBoolExpression )
                    {
                    // InternalSCTX.g:2067:1: (lv_trigger_3_0= ruleBoolExpression )
                    // InternalSCTX.g:2068:3: lv_trigger_3_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExitActionAccess().getTriggerBoolExpressionParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_36);
                    lv_trigger_3_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExitActionRule());
                      	        }
                             		set(
                             			current, 
                             			"trigger",
                              		lv_trigger_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.BoolExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:2084:4: (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==36) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalSCTX.g:2084:6: otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )*
                    {
                    otherlv_4=(Token)match(input,36,FollowSets000.FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getExitActionAccess().getDoKeyword_3_0());
                          
                    }
                    // InternalSCTX.g:2088:1: ( (lv_effects_5_0= ruleEffect ) )
                    // InternalSCTX.g:2089:1: (lv_effects_5_0= ruleEffect )
                    {
                    // InternalSCTX.g:2089:1: (lv_effects_5_0= ruleEffect )
                    // InternalSCTX.g:2090:3: lv_effects_5_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExitActionAccess().getEffectsEffectParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_38);
                    lv_effects_5_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExitActionRule());
                      	        }
                             		add(
                             			current, 
                             			"effects",
                              		lv_effects_5_0, 
                              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:2106:2: (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )*
                    loop69:
                    do {
                        int alt69=2;
                        int LA69_0 = input.LA(1);

                        if ( (LA69_0==37) ) {
                            alt69=1;
                        }


                        switch (alt69) {
                    	case 1 :
                    	    // InternalSCTX.g:2106:4: otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) )
                    	    {
                    	    otherlv_6=(Token)match(input,37,FollowSets000.FOLLOW_37); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getExitActionAccess().getSemicolonKeyword_3_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:2110:1: ( (lv_effects_7_0= ruleEffect ) )
                    	    // InternalSCTX.g:2111:1: (lv_effects_7_0= ruleEffect )
                    	    {
                    	    // InternalSCTX.g:2111:1: (lv_effects_7_0= ruleEffect )
                    	    // InternalSCTX.g:2112:3: lv_effects_7_0= ruleEffect
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getExitActionAccess().getEffectsEffectParserRuleCall_3_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_38);
                    	    lv_effects_7_0=ruleEffect();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getExitActionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"effects",
                    	              		lv_effects_7_0, 
                    	              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop69;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:2128:6: (otherlv_8= 'label' ( (lv_label_9_0= RULE_STRING ) ) )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==38) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalSCTX.g:2128:8: otherlv_8= 'label' ( (lv_label_9_0= RULE_STRING ) )
                    {
                    otherlv_8=(Token)match(input,38,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getExitActionAccess().getLabelKeyword_4_0());
                          
                    }
                    // InternalSCTX.g:2132:1: ( (lv_label_9_0= RULE_STRING ) )
                    // InternalSCTX.g:2133:1: (lv_label_9_0= RULE_STRING )
                    {
                    // InternalSCTX.g:2133:1: (lv_label_9_0= RULE_STRING )
                    // InternalSCTX.g:2134:3: lv_label_9_0= RULE_STRING
                    {
                    lv_label_9_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_label_9_0, grammarAccess.getExitActionAccess().getLabelSTRINGTerminalRuleCall_4_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getExitActionRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"label",
                              		lv_label_9_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExitAction"


    // $ANTLR start "entryRuleSuspendAction"
    // InternalSCTX.g:2158:1: entryRuleSuspendAction returns [EObject current=null] : iv_ruleSuspendAction= ruleSuspendAction EOF ;
    public final EObject entryRuleSuspendAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSuspendAction = null;


        try {
            // InternalSCTX.g:2159:2: (iv_ruleSuspendAction= ruleSuspendAction EOF )
            // InternalSCTX.g:2160:2: iv_ruleSuspendAction= ruleSuspendAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSuspendActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSuspendAction=ruleSuspendAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSuspendAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSuspendAction"


    // $ANTLR start "ruleSuspendAction"
    // InternalSCTX.g:2167:1: ruleSuspendAction returns [EObject current=null] : ( () ( (lv_delay_1_0= ruleDelayType ) )? ( (lv_weak_2_0= 'weak' ) )? otherlv_3= 'suspend' (otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolExpression ) ) )? (otherlv_6= 'label' ( (lv_label_7_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleSuspendAction() throws RecognitionException {
        EObject current = null;

        Token lv_weak_2_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token lv_label_7_0=null;
        Enumerator lv_delay_1_0 = null;

        EObject lv_trigger_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:2170:28: ( ( () ( (lv_delay_1_0= ruleDelayType ) )? ( (lv_weak_2_0= 'weak' ) )? otherlv_3= 'suspend' (otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolExpression ) ) )? (otherlv_6= 'label' ( (lv_label_7_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:2171:1: ( () ( (lv_delay_1_0= ruleDelayType ) )? ( (lv_weak_2_0= 'weak' ) )? otherlv_3= 'suspend' (otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolExpression ) ) )? (otherlv_6= 'label' ( (lv_label_7_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:2171:1: ( () ( (lv_delay_1_0= ruleDelayType ) )? ( (lv_weak_2_0= 'weak' ) )? otherlv_3= 'suspend' (otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolExpression ) ) )? (otherlv_6= 'label' ( (lv_label_7_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:2171:2: () ( (lv_delay_1_0= ruleDelayType ) )? ( (lv_weak_2_0= 'weak' ) )? otherlv_3= 'suspend' (otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolExpression ) ) )? (otherlv_6= 'label' ( (lv_label_7_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:2171:2: ()
            // InternalSCTX.g:2172:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getSuspendActionAccess().getSuspendActionAction_0(),
                          current);
                  
            }

            }

            // InternalSCTX.g:2180:2: ( (lv_delay_1_0= ruleDelayType ) )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( ((LA72_0>=84 && LA72_0<=87)) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalSCTX.g:2181:1: (lv_delay_1_0= ruleDelayType )
                    {
                    // InternalSCTX.g:2181:1: (lv_delay_1_0= ruleDelayType )
                    // InternalSCTX.g:2182:3: lv_delay_1_0= ruleDelayType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSuspendActionAccess().getDelayDelayTypeEnumRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_53);
                    lv_delay_1_0=ruleDelayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSuspendActionRule());
                      	        }
                             		set(
                             			current, 
                             			"delay",
                              		lv_delay_1_0, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.DelayType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2198:3: ( (lv_weak_2_0= 'weak' ) )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==45) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalSCTX.g:2199:1: (lv_weak_2_0= 'weak' )
                    {
                    // InternalSCTX.g:2199:1: (lv_weak_2_0= 'weak' )
                    // InternalSCTX.g:2200:3: lv_weak_2_0= 'weak'
                    {
                    lv_weak_2_0=(Token)match(input,45,FollowSets000.FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_weak_2_0, grammarAccess.getSuspendActionAccess().getWeakWeakKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getSuspendActionRule());
                      	        }
                             		setWithLastConsumed(current, "weak", true, "weak");
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,46,FollowSets000.FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getSuspendActionAccess().getSuspendKeyword_3());
                  
            }
            // InternalSCTX.g:2217:1: (otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolExpression ) ) )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==35) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // InternalSCTX.g:2217:3: otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolExpression ) )
                    {
                    otherlv_4=(Token)match(input,35,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getSuspendActionAccess().getIfKeyword_4_0());
                          
                    }
                    // InternalSCTX.g:2221:1: ( (lv_trigger_5_0= ruleBoolExpression ) )
                    // InternalSCTX.g:2222:1: (lv_trigger_5_0= ruleBoolExpression )
                    {
                    // InternalSCTX.g:2222:1: (lv_trigger_5_0= ruleBoolExpression )
                    // InternalSCTX.g:2223:3: lv_trigger_5_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSuspendActionAccess().getTriggerBoolExpressionParserRuleCall_4_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_56);
                    lv_trigger_5_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSuspendActionRule());
                      	        }
                             		set(
                             			current, 
                             			"trigger",
                              		lv_trigger_5_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.BoolExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:2239:4: (otherlv_6= 'label' ( (lv_label_7_0= RULE_STRING ) ) )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==38) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // InternalSCTX.g:2239:6: otherlv_6= 'label' ( (lv_label_7_0= RULE_STRING ) )
                    {
                    otherlv_6=(Token)match(input,38,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getSuspendActionAccess().getLabelKeyword_5_0());
                          
                    }
                    // InternalSCTX.g:2243:1: ( (lv_label_7_0= RULE_STRING ) )
                    // InternalSCTX.g:2244:1: (lv_label_7_0= RULE_STRING )
                    {
                    // InternalSCTX.g:2244:1: (lv_label_7_0= RULE_STRING )
                    // InternalSCTX.g:2245:3: lv_label_7_0= RULE_STRING
                    {
                    lv_label_7_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_label_7_0, grammarAccess.getSuspendActionAccess().getLabelSTRINGTerminalRuleCall_5_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getSuspendActionRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"label",
                              		lv_label_7_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSuspendAction"


    // $ANTLR start "entryRulePrecedingAction"
    // InternalSCTX.g:2269:1: entryRulePrecedingAction returns [EObject current=null] : iv_rulePrecedingAction= rulePrecedingAction EOF ;
    public final EObject entryRulePrecedingAction() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrecedingAction = null;


        try {
            // InternalSCTX.g:2270:2: (iv_rulePrecedingAction= rulePrecedingAction EOF )
            // InternalSCTX.g:2271:2: iv_rulePrecedingAction= rulePrecedingAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrecedingActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrecedingAction=rulePrecedingAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrecedingAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrecedingAction"


    // $ANTLR start "rulePrecedingAction"
    // InternalSCTX.g:2278:1: rulePrecedingAction returns [EObject current=null] : ( () otherlv_1= 'preceding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? (otherlv_8= 'label' ( (lv_label_9_0= RULE_STRING ) ) )? ) ;
    public final EObject rulePrecedingAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_label_9_0=null;
        EObject lv_trigger_3_0 = null;

        EObject lv_effects_5_0 = null;

        EObject lv_effects_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:2281:28: ( ( () otherlv_1= 'preceding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? (otherlv_8= 'label' ( (lv_label_9_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:2282:1: ( () otherlv_1= 'preceding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? (otherlv_8= 'label' ( (lv_label_9_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:2282:1: ( () otherlv_1= 'preceding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? (otherlv_8= 'label' ( (lv_label_9_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:2282:2: () otherlv_1= 'preceding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? (otherlv_8= 'label' ( (lv_label_9_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:2282:2: ()
            // InternalSCTX.g:2283:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPrecedingActionAccess().getPrecedingActionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,47,FollowSets000.FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPrecedingActionAccess().getPrecedingKeyword_1());
                  
            }
            // InternalSCTX.g:2295:1: (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==35) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalSCTX.g:2295:3: otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) )
                    {
                    otherlv_2=(Token)match(input,35,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getPrecedingActionAccess().getIfKeyword_2_0());
                          
                    }
                    // InternalSCTX.g:2299:1: ( (lv_trigger_3_0= ruleBoolExpression ) )
                    // InternalSCTX.g:2300:1: (lv_trigger_3_0= ruleBoolExpression )
                    {
                    // InternalSCTX.g:2300:1: (lv_trigger_3_0= ruleBoolExpression )
                    // InternalSCTX.g:2301:3: lv_trigger_3_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPrecedingActionAccess().getTriggerBoolExpressionParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_36);
                    lv_trigger_3_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPrecedingActionRule());
                      	        }
                             		set(
                             			current, 
                             			"trigger",
                              		lv_trigger_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.BoolExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:2317:4: (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==36) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalSCTX.g:2317:6: otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )*
                    {
                    otherlv_4=(Token)match(input,36,FollowSets000.FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getPrecedingActionAccess().getDoKeyword_3_0());
                          
                    }
                    // InternalSCTX.g:2321:1: ( (lv_effects_5_0= ruleEffect ) )
                    // InternalSCTX.g:2322:1: (lv_effects_5_0= ruleEffect )
                    {
                    // InternalSCTX.g:2322:1: (lv_effects_5_0= ruleEffect )
                    // InternalSCTX.g:2323:3: lv_effects_5_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPrecedingActionAccess().getEffectsEffectParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_38);
                    lv_effects_5_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPrecedingActionRule());
                      	        }
                             		add(
                             			current, 
                             			"effects",
                              		lv_effects_5_0, 
                              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:2339:2: (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )*
                    loop77:
                    do {
                        int alt77=2;
                        int LA77_0 = input.LA(1);

                        if ( (LA77_0==37) ) {
                            alt77=1;
                        }


                        switch (alt77) {
                    	case 1 :
                    	    // InternalSCTX.g:2339:4: otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) )
                    	    {
                    	    otherlv_6=(Token)match(input,37,FollowSets000.FOLLOW_37); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getPrecedingActionAccess().getSemicolonKeyword_3_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:2343:1: ( (lv_effects_7_0= ruleEffect ) )
                    	    // InternalSCTX.g:2344:1: (lv_effects_7_0= ruleEffect )
                    	    {
                    	    // InternalSCTX.g:2344:1: (lv_effects_7_0= ruleEffect )
                    	    // InternalSCTX.g:2345:3: lv_effects_7_0= ruleEffect
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPrecedingActionAccess().getEffectsEffectParserRuleCall_3_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_38);
                    	    lv_effects_7_0=ruleEffect();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPrecedingActionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"effects",
                    	              		lv_effects_7_0, 
                    	              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop77;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:2361:6: (otherlv_8= 'label' ( (lv_label_9_0= RULE_STRING ) ) )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==38) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalSCTX.g:2361:8: otherlv_8= 'label' ( (lv_label_9_0= RULE_STRING ) )
                    {
                    otherlv_8=(Token)match(input,38,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getPrecedingActionAccess().getLabelKeyword_4_0());
                          
                    }
                    // InternalSCTX.g:2365:1: ( (lv_label_9_0= RULE_STRING ) )
                    // InternalSCTX.g:2366:1: (lv_label_9_0= RULE_STRING )
                    {
                    // InternalSCTX.g:2366:1: (lv_label_9_0= RULE_STRING )
                    // InternalSCTX.g:2367:3: lv_label_9_0= RULE_STRING
                    {
                    lv_label_9_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_label_9_0, grammarAccess.getPrecedingActionAccess().getLabelSTRINGTerminalRuleCall_4_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPrecedingActionRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"label",
                              		lv_label_9_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrecedingAction"


    // $ANTLR start "entryRuleSucceedingAction"
    // InternalSCTX.g:2391:1: entryRuleSucceedingAction returns [EObject current=null] : iv_ruleSucceedingAction= ruleSucceedingAction EOF ;
    public final EObject entryRuleSucceedingAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSucceedingAction = null;


        try {
            // InternalSCTX.g:2392:2: (iv_ruleSucceedingAction= ruleSucceedingAction EOF )
            // InternalSCTX.g:2393:2: iv_ruleSucceedingAction= ruleSucceedingAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSucceedingActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSucceedingAction=ruleSucceedingAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSucceedingAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSucceedingAction"


    // $ANTLR start "ruleSucceedingAction"
    // InternalSCTX.g:2400:1: ruleSucceedingAction returns [EObject current=null] : ( () otherlv_1= 'succeeding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? (otherlv_8= 'label' ( (lv_label_9_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleSucceedingAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_label_9_0=null;
        EObject lv_trigger_3_0 = null;

        EObject lv_effects_5_0 = null;

        EObject lv_effects_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:2403:28: ( ( () otherlv_1= 'succeeding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? (otherlv_8= 'label' ( (lv_label_9_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:2404:1: ( () otherlv_1= 'succeeding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? (otherlv_8= 'label' ( (lv_label_9_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:2404:1: ( () otherlv_1= 'succeeding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? (otherlv_8= 'label' ( (lv_label_9_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:2404:2: () otherlv_1= 'succeeding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? (otherlv_8= 'label' ( (lv_label_9_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:2404:2: ()
            // InternalSCTX.g:2405:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getSucceedingActionAccess().getSucceedingActionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,48,FollowSets000.FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getSucceedingActionAccess().getSucceedingKeyword_1());
                  
            }
            // InternalSCTX.g:2417:1: (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==35) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalSCTX.g:2417:3: otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) )
                    {
                    otherlv_2=(Token)match(input,35,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getSucceedingActionAccess().getIfKeyword_2_0());
                          
                    }
                    // InternalSCTX.g:2421:1: ( (lv_trigger_3_0= ruleBoolExpression ) )
                    // InternalSCTX.g:2422:1: (lv_trigger_3_0= ruleBoolExpression )
                    {
                    // InternalSCTX.g:2422:1: (lv_trigger_3_0= ruleBoolExpression )
                    // InternalSCTX.g:2423:3: lv_trigger_3_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSucceedingActionAccess().getTriggerBoolExpressionParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_36);
                    lv_trigger_3_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSucceedingActionRule());
                      	        }
                             		set(
                             			current, 
                             			"trigger",
                              		lv_trigger_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.BoolExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:2439:4: (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==36) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalSCTX.g:2439:6: otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )*
                    {
                    otherlv_4=(Token)match(input,36,FollowSets000.FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getSucceedingActionAccess().getDoKeyword_3_0());
                          
                    }
                    // InternalSCTX.g:2443:1: ( (lv_effects_5_0= ruleEffect ) )
                    // InternalSCTX.g:2444:1: (lv_effects_5_0= ruleEffect )
                    {
                    // InternalSCTX.g:2444:1: (lv_effects_5_0= ruleEffect )
                    // InternalSCTX.g:2445:3: lv_effects_5_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSucceedingActionAccess().getEffectsEffectParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_38);
                    lv_effects_5_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSucceedingActionRule());
                      	        }
                             		add(
                             			current, 
                             			"effects",
                              		lv_effects_5_0, 
                              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:2461:2: (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )*
                    loop81:
                    do {
                        int alt81=2;
                        int LA81_0 = input.LA(1);

                        if ( (LA81_0==37) ) {
                            alt81=1;
                        }


                        switch (alt81) {
                    	case 1 :
                    	    // InternalSCTX.g:2461:4: otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) )
                    	    {
                    	    otherlv_6=(Token)match(input,37,FollowSets000.FOLLOW_37); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getSucceedingActionAccess().getSemicolonKeyword_3_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:2465:1: ( (lv_effects_7_0= ruleEffect ) )
                    	    // InternalSCTX.g:2466:1: (lv_effects_7_0= ruleEffect )
                    	    {
                    	    // InternalSCTX.g:2466:1: (lv_effects_7_0= ruleEffect )
                    	    // InternalSCTX.g:2467:3: lv_effects_7_0= ruleEffect
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getSucceedingActionAccess().getEffectsEffectParserRuleCall_3_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_38);
                    	    lv_effects_7_0=ruleEffect();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getSucceedingActionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"effects",
                    	              		lv_effects_7_0, 
                    	              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop81;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:2483:6: (otherlv_8= 'label' ( (lv_label_9_0= RULE_STRING ) ) )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==38) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalSCTX.g:2483:8: otherlv_8= 'label' ( (lv_label_9_0= RULE_STRING ) )
                    {
                    otherlv_8=(Token)match(input,38,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getSucceedingActionAccess().getLabelKeyword_4_0());
                          
                    }
                    // InternalSCTX.g:2487:1: ( (lv_label_9_0= RULE_STRING ) )
                    // InternalSCTX.g:2488:1: (lv_label_9_0= RULE_STRING )
                    {
                    // InternalSCTX.g:2488:1: (lv_label_9_0= RULE_STRING )
                    // InternalSCTX.g:2489:3: lv_label_9_0= RULE_STRING
                    {
                    lv_label_9_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_label_9_0, grammarAccess.getSucceedingActionAccess().getLabelSTRINGTerminalRuleCall_4_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getSucceedingActionRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"label",
                              		lv_label_9_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSucceedingAction"


    // $ANTLR start "entryRuleEquation"
    // InternalSCTX.g:2515:1: entryRuleEquation returns [EObject current=null] : iv_ruleEquation= ruleEquation EOF ;
    public final EObject entryRuleEquation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEquation = null;


        try {
            // InternalSCTX.g:2516:2: (iv_ruleEquation= ruleEquation EOF )
            // InternalSCTX.g:2517:2: iv_ruleEquation= ruleEquation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEquationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEquation=ruleEquation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEquation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEquation"


    // $ANTLR start "ruleEquation"
    // InternalSCTX.g:2524:1: ruleEquation returns [EObject current=null] : this_SubReferenceAssignment_0= ruleSubReferenceAssignment ;
    public final EObject ruleEquation() throws RecognitionException {
        EObject current = null;

        EObject this_SubReferenceAssignment_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:2527:28: (this_SubReferenceAssignment_0= ruleSubReferenceAssignment )
            // InternalSCTX.g:2529:2: this_SubReferenceAssignment_0= ruleSubReferenceAssignment
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getEquationAccess().getSubReferenceAssignmentParserRuleCall()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_SubReferenceAssignment_0=ruleSubReferenceAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_SubReferenceAssignment_0; 
                      afterParserOrEnumRuleCall();
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEquation"


    // $ANTLR start "entryRuleRootScope"
    // InternalSCTX.g:2552:1: entryRuleRootScope returns [EObject current=null] : iv_ruleRootScope= ruleRootScope EOF ;
    public final EObject entryRuleRootScope() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRootScope = null;


        try {
            // InternalSCTX.g:2553:2: (iv_ruleRootScope= ruleRootScope EOF )
            // InternalSCTX.g:2554:2: iv_ruleRootScope= ruleRootScope EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRootScopeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRootScope=ruleRootScope();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRootScope; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRootScope"


    // $ANTLR start "ruleRootScope"
    // InternalSCTX.g:2561:1: ruleRootScope returns [EObject current=null] : ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* ) ;
    public final EObject ruleRootScope() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        EObject lv_declarations_1_0 = null;

        EObject lv_entities_2_0 = null;

        EObject lv_scopes_4_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:2564:28: ( ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* ) )
            // InternalSCTX.g:2565:1: ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* )
            {
            // InternalSCTX.g:2565:1: ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* )
            // InternalSCTX.g:2565:2: () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )*
            {
            // InternalSCTX.g:2565:2: ()
            // InternalSCTX.g:2566:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getRootScopeAccess().getKExtScopeAction_0(),
                          current);
                  
            }

            }

            // InternalSCTX.g:2574:2: ( (lv_declarations_1_0= ruleDeclaration ) )*
            loop84:
            do {
                int alt84=2;
                alt84 = dfa84.predict(input);
                switch (alt84) {
            	case 1 :
            	    // InternalSCTX.g:2575:1: (lv_declarations_1_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:2575:1: (lv_declarations_1_0= ruleDeclaration )
            	    // InternalSCTX.g:2576:3: lv_declarations_1_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRootScopeAccess().getDeclarationsDeclarationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_57);
            	    lv_declarations_1_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declarations",
            	              		lv_declarations_1_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.Declaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop84;
                }
            } while (true);

            // InternalSCTX.g:2592:3: ( (lv_entities_2_0= ruleTestEntity ) )*
            loop85:
            do {
                int alt85=2;
                int LA85_0 = input.LA(1);

                if ( (LA85_0==RULE_ID||LA85_0==RULE_HOSTCODE||LA85_0==RULE_COMMENT_ANNOTATION||LA85_0==50||LA85_0==57||LA85_0==64||LA85_0==66||LA85_0==76) ) {
                    alt85=1;
                }


                switch (alt85) {
            	case 1 :
            	    // InternalSCTX.g:2593:1: (lv_entities_2_0= ruleTestEntity )
            	    {
            	    // InternalSCTX.g:2593:1: (lv_entities_2_0= ruleTestEntity )
            	    // InternalSCTX.g:2594:3: lv_entities_2_0= ruleTestEntity
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRootScopeAccess().getEntitiesTestEntityParserRuleCall_2_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_58);
            	    lv_entities_2_0=ruleTestEntity();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"entities",
            	              		lv_entities_2_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.TestEntity");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop85;
                }
            } while (true);

            // InternalSCTX.g:2610:3: (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )*
            loop86:
            do {
                int alt86=2;
                int LA86_0 = input.LA(1);

                if ( (LA86_0==49) ) {
                    alt86=1;
                }


                switch (alt86) {
            	case 1 :
            	    // InternalSCTX.g:2610:5: otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) )
            	    {
            	    otherlv_3=(Token)match(input,49,FollowSets000.FOLLOW_59); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getRootScopeAccess().getScopeKeyword_3_0());
            	          
            	    }
            	    // InternalSCTX.g:2614:1: ( (lv_scopes_4_0= ruleScope ) )
            	    // InternalSCTX.g:2615:1: (lv_scopes_4_0= ruleScope )
            	    {
            	    // InternalSCTX.g:2615:1: (lv_scopes_4_0= ruleScope )
            	    // InternalSCTX.g:2616:3: lv_scopes_4_0= ruleScope
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRootScopeAccess().getScopesScopeParserRuleCall_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_60);
            	    lv_scopes_4_0=ruleScope();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"scopes",
            	              		lv_scopes_4_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.Scope");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop86;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRootScope"


    // $ANTLR start "entryRuleScope"
    // InternalSCTX.g:2640:1: entryRuleScope returns [EObject current=null] : iv_ruleScope= ruleScope EOF ;
    public final EObject entryRuleScope() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScope = null;


        try {
            // InternalSCTX.g:2641:2: (iv_ruleScope= ruleScope EOF )
            // InternalSCTX.g:2642:2: iv_ruleScope= ruleScope EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScopeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScope=ruleScope();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScope; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScope"


    // $ANTLR start "ruleScope"
    // InternalSCTX.g:2649:1: ruleScope returns [EObject current=null] : ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' ) ;
    public final EObject ruleScope() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_declarations_3_0 = null;

        EObject lv_entities_4_0 = null;

        EObject lv_scopes_6_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:2652:28: ( ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' ) )
            // InternalSCTX.g:2653:1: ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' )
            {
            // InternalSCTX.g:2653:1: ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' )
            // InternalSCTX.g:2653:2: () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}'
            {
            // InternalSCTX.g:2653:2: ()
            // InternalSCTX.g:2654:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getScopeAccess().getKExtScopeAction_0(),
                          current);
                  
            }

            }

            // InternalSCTX.g:2662:2: ( (lv_name_1_0= RULE_ID ) )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==RULE_ID) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalSCTX.g:2663:1: (lv_name_1_0= RULE_ID )
                    {
                    // InternalSCTX.g:2663:1: (lv_name_1_0= RULE_ID )
                    // InternalSCTX.g:2664:3: lv_name_1_0= RULE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_1_0, grammarAccess.getScopeAccess().getNameIDTerminalRuleCall_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getScopeRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_1_0, 
                              		"org.eclipse.xtext.common.Terminals.ID");
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_61); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getScopeAccess().getLeftCurlyBracketKeyword_2());
                  
            }
            // InternalSCTX.g:2684:1: ( (lv_declarations_3_0= ruleDeclaration ) )*
            loop88:
            do {
                int alt88=2;
                alt88 = dfa88.predict(input);
                switch (alt88) {
            	case 1 :
            	    // InternalSCTX.g:2685:1: (lv_declarations_3_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:2685:1: (lv_declarations_3_0= ruleDeclaration )
            	    // InternalSCTX.g:2686:3: lv_declarations_3_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getScopeAccess().getDeclarationsDeclarationParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_61);
            	    lv_declarations_3_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getScopeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declarations",
            	              		lv_declarations_3_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.Declaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);

            // InternalSCTX.g:2702:3: ( (lv_entities_4_0= ruleTestEntity ) )*
            loop89:
            do {
                int alt89=2;
                int LA89_0 = input.LA(1);

                if ( (LA89_0==RULE_ID||LA89_0==RULE_HOSTCODE||LA89_0==RULE_COMMENT_ANNOTATION||LA89_0==50||LA89_0==57||LA89_0==64||LA89_0==66||LA89_0==76) ) {
                    alt89=1;
                }


                switch (alt89) {
            	case 1 :
            	    // InternalSCTX.g:2703:1: (lv_entities_4_0= ruleTestEntity )
            	    {
            	    // InternalSCTX.g:2703:1: (lv_entities_4_0= ruleTestEntity )
            	    // InternalSCTX.g:2704:3: lv_entities_4_0= ruleTestEntity
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getScopeAccess().getEntitiesTestEntityParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_62);
            	    lv_entities_4_0=ruleTestEntity();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getScopeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"entities",
            	              		lv_entities_4_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.TestEntity");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop89;
                }
            } while (true);

            // InternalSCTX.g:2720:3: (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )*
            loop90:
            do {
                int alt90=2;
                int LA90_0 = input.LA(1);

                if ( (LA90_0==49) ) {
                    alt90=1;
                }


                switch (alt90) {
            	case 1 :
            	    // InternalSCTX.g:2720:5: otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) )
            	    {
            	    otherlv_5=(Token)match(input,49,FollowSets000.FOLLOW_59); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_5, grammarAccess.getScopeAccess().getScopeKeyword_5_0());
            	          
            	    }
            	    // InternalSCTX.g:2724:1: ( (lv_scopes_6_0= ruleScope ) )
            	    // InternalSCTX.g:2725:1: (lv_scopes_6_0= ruleScope )
            	    {
            	    // InternalSCTX.g:2725:1: (lv_scopes_6_0= ruleScope )
            	    // InternalSCTX.g:2726:3: lv_scopes_6_0= ruleScope
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getScopeAccess().getScopesScopeParserRuleCall_5_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_63);
            	    lv_scopes_6_0=ruleScope();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getScopeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"scopes",
            	              		lv_scopes_6_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.Scope");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop90;
                }
            } while (true);

            otherlv_7=(Token)match(input,19,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getScopeAccess().getRightCurlyBracketKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScope"


    // $ANTLR start "entryRuleTestEntity"
    // InternalSCTX.g:2754:1: entryRuleTestEntity returns [EObject current=null] : iv_ruleTestEntity= ruleTestEntity EOF ;
    public final EObject entryRuleTestEntity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTestEntity = null;


        try {
            // InternalSCTX.g:2755:2: (iv_ruleTestEntity= ruleTestEntity EOF )
            // InternalSCTX.g:2756:2: iv_ruleTestEntity= ruleTestEntity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTestEntityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTestEntity=ruleTestEntity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTestEntity; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTestEntity"


    // $ANTLR start "ruleTestEntity"
    // InternalSCTX.g:2763:1: ruleTestEntity returns [EObject current=null] : ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) ) ;
    public final EObject ruleTestEntity() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;

        EObject lv_effect_1_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:2766:28: ( ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) ) )
            // InternalSCTX.g:2767:1: ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) )
            {
            // InternalSCTX.g:2767:1: ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) )
            int alt91=2;
            alt91 = dfa91.predict(input);
            switch (alt91) {
                case 1 :
                    // InternalSCTX.g:2767:2: ( (lv_expression_0_0= ruleAnnotatedExpression ) )
                    {
                    // InternalSCTX.g:2767:2: ( (lv_expression_0_0= ruleAnnotatedExpression ) )
                    // InternalSCTX.g:2768:1: (lv_expression_0_0= ruleAnnotatedExpression )
                    {
                    // InternalSCTX.g:2768:1: (lv_expression_0_0= ruleAnnotatedExpression )
                    // InternalSCTX.g:2769:3: lv_expression_0_0= ruleAnnotatedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTestEntityAccess().getExpressionAnnotatedExpressionParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expression_0_0=ruleAnnotatedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTestEntityRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_0_0, 
                              		"de.cau.cs.kieler.kexpressions.kext.KExt.AnnotatedExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:2786:6: ( (lv_effect_1_0= ruleEffect ) )
                    {
                    // InternalSCTX.g:2786:6: ( (lv_effect_1_0= ruleEffect ) )
                    // InternalSCTX.g:2787:1: (lv_effect_1_0= ruleEffect )
                    {
                    // InternalSCTX.g:2787:1: (lv_effect_1_0= ruleEffect )
                    // InternalSCTX.g:2788:3: lv_effect_1_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTestEntityAccess().getEffectEffectParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_effect_1_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTestEntityRule());
                      	        }
                             		set(
                             			current, 
                             			"effect",
                              		lv_effect_1_0, 
                              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTestEntity"


    // $ANTLR start "entryRuleAnnotatedExpression"
    // InternalSCTX.g:2812:1: entryRuleAnnotatedExpression returns [EObject current=null] : iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF ;
    public final EObject entryRuleAnnotatedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedExpression = null;


        try {
            // InternalSCTX.g:2813:2: (iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF )
            // InternalSCTX.g:2814:2: iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotatedExpression=ruleAnnotatedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotatedExpression"


    // $ANTLR start "ruleAnnotatedExpression"
    // InternalSCTX.g:2821:1: ruleAnnotatedExpression returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) ) ;
    public final EObject ruleAnnotatedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:2824:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) ) )
            // InternalSCTX.g:2825:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) )
            {
            // InternalSCTX.g:2825:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) )
            // InternalSCTX.g:2825:2: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) )
            {
            // InternalSCTX.g:2825:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop92:
            do {
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==RULE_COMMENT_ANNOTATION||LA92_0==76) ) {
                    alt92=1;
                }


                switch (alt92) {
            	case 1 :
            	    // InternalSCTX.g:2826:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:2826:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:2827:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_64);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAnnotatedExpressionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop92;
                }
            } while (true);

            otherlv_1=(Token)match(input,50,FollowSets000.FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAnnotatedExpressionAccess().getExpressionKeyword_1());
                  
            }
            // InternalSCTX.g:2847:1: ( (lv_expression_2_0= ruleExpression ) )
            // InternalSCTX.g:2848:1: (lv_expression_2_0= ruleExpression )
            {
            // InternalSCTX.g:2848:1: (lv_expression_2_0= ruleExpression )
            // InternalSCTX.g:2849:3: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getExpressionExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAnnotatedExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotatedExpression"


    // $ANTLR start "entryRuleDeclaration"
    // InternalSCTX.g:2873:1: entryRuleDeclaration returns [EObject current=null] : iv_ruleDeclaration= ruleDeclaration EOF ;
    public final EObject entryRuleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclaration = null;


        try {
            // InternalSCTX.g:2874:2: (iv_ruleDeclaration= ruleDeclaration EOF )
            // InternalSCTX.g:2875:2: iv_ruleDeclaration= ruleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclaration=ruleDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclaration"


    // $ANTLR start "ruleDeclaration"
    // InternalSCTX.g:2882:1: ruleDeclaration returns [EObject current=null] : (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration ) ;
    public final EObject ruleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclaration_0 = null;

        EObject this_ReferenceDeclaration_1 = null;

        EObject this_ScheduleDeclaration_2 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:2885:28: ( (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration ) )
            // InternalSCTX.g:2886:1: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration )
            {
            // InternalSCTX.g:2886:1: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration )
            int alt93=3;
            alt93 = dfa93.predict(input);
            switch (alt93) {
                case 1 :
                    // InternalSCTX.g:2887:2: this_VariableDeclaration_0= ruleVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDeclarationAccess().getVariableDeclarationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_VariableDeclaration_0=ruleVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_VariableDeclaration_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:2900:2: this_ReferenceDeclaration_1= ruleReferenceDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDeclarationAccess().getReferenceDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceDeclaration_1=ruleReferenceDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ReferenceDeclaration_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:2913:2: this_ScheduleDeclaration_2= ruleScheduleDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDeclarationAccess().getScheduleDeclarationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ScheduleDeclaration_2=ruleScheduleDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ScheduleDeclaration_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclaration"


    // $ANTLR start "entryRuleDeclarationWOSemicolon"
    // InternalSCTX.g:2932:1: entryRuleDeclarationWOSemicolon returns [EObject current=null] : iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF ;
    public final EObject entryRuleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclarationWOSemicolon = null;


        try {
            // InternalSCTX.g:2933:2: (iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF )
            // InternalSCTX.g:2934:2: iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclarationWOSemicolon=ruleDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclarationWOSemicolon"


    // $ANTLR start "ruleDeclarationWOSemicolon"
    // InternalSCTX.g:2941:1: ruleDeclarationWOSemicolon returns [EObject current=null] : (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon ) ;
    public final EObject ruleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationWOSemicolon_0 = null;

        EObject this_ReferenceDeclarationWOSemicolon_1 = null;

        EObject this_ScheduleDeclarationWOSemicolon_2 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:2944:28: ( (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon ) )
            // InternalSCTX.g:2945:1: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon )
            {
            // InternalSCTX.g:2945:1: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon )
            int alt94=3;
            alt94 = dfa94.predict(input);
            switch (alt94) {
                case 1 :
                    // InternalSCTX.g:2946:2: this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getVariableDeclarationWOSemicolonParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_VariableDeclarationWOSemicolon_0=ruleVariableDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_VariableDeclarationWOSemicolon_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:2959:2: this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getReferenceDeclarationWOSemicolonParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceDeclarationWOSemicolon_1=ruleReferenceDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ReferenceDeclarationWOSemicolon_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:2972:2: this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getScheduleDeclarationWOSemicolonParserRuleCall_2()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ScheduleDeclarationWOSemicolon_2=ruleScheduleDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ScheduleDeclarationWOSemicolon_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclarationWOSemicolon"


    // $ANTLR start "entryRuleVariableDeclaration"
    // InternalSCTX.g:2991:1: entryRuleVariableDeclaration returns [EObject current=null] : iv_ruleVariableDeclaration= ruleVariableDeclaration EOF ;
    public final EObject entryRuleVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableDeclaration = null;


        try {
            // InternalSCTX.g:2992:2: (iv_ruleVariableDeclaration= ruleVariableDeclaration EOF )
            // InternalSCTX.g:2993:2: iv_ruleVariableDeclaration= ruleVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVariableDeclaration=ruleVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableDeclaration"


    // $ANTLR start "ruleVariableDeclaration"
    // InternalSCTX.g:3000:1: ruleVariableDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_const_1_0= 'const' ) )? ( (lv_input_2_0= 'input' ) )? ( (lv_output_3_0= 'output' ) )? ( (lv_static_4_0= 'static' ) )? ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_const_1_0=null;
        Token lv_input_2_0=null;
        Token lv_output_3_0=null;
        Token lv_static_4_0=null;
        Token lv_signal_5_0=null;
        Token lv_signal_7_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_type_6_0 = null;

        EObject lv_valuedObjects_8_0 = null;

        EObject lv_valuedObjects_10_0 = null;

        EObject lv_annotations_12_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:3003:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_const_1_0= 'const' ) )? ( (lv_input_2_0= 'input' ) )? ( (lv_output_3_0= 'output' ) )? ( (lv_static_4_0= 'static' ) )? ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:3004:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_const_1_0= 'const' ) )? ( (lv_input_2_0= 'input' ) )? ( (lv_output_3_0= 'output' ) )? ( (lv_static_4_0= 'static' ) )? ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:3004:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_const_1_0= 'const' ) )? ( (lv_input_2_0= 'input' ) )? ( (lv_output_3_0= 'output' ) )? ( (lv_static_4_0= 'static' ) )? ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:3004:2: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_const_1_0= 'const' ) )? ( (lv_input_2_0= 'input' ) )? ( (lv_output_3_0= 'output' ) )? ( (lv_static_4_0= 'static' ) )? ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:3004:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop95:
            do {
                int alt95=2;
                int LA95_0 = input.LA(1);

                if ( (LA95_0==RULE_COMMENT_ANNOTATION||LA95_0==76) ) {
                    alt95=1;
                }


                switch (alt95) {
            	case 1 :
            	    // InternalSCTX.g:3005:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:3005:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:3006:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_65);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop95;
                }
            } while (true);

            // InternalSCTX.g:3022:3: ( (lv_const_1_0= 'const' ) )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==51) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // InternalSCTX.g:3023:1: (lv_const_1_0= 'const' )
                    {
                    // InternalSCTX.g:3023:1: (lv_const_1_0= 'const' )
                    // InternalSCTX.g:3024:3: lv_const_1_0= 'const'
                    {
                    lv_const_1_0=(Token)match(input,51,FollowSets000.FOLLOW_66); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_const_1_0, grammarAccess.getVariableDeclarationAccess().getConstConstKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "const", true, "const");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3037:3: ( (lv_input_2_0= 'input' ) )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==52) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // InternalSCTX.g:3038:1: (lv_input_2_0= 'input' )
                    {
                    // InternalSCTX.g:3038:1: (lv_input_2_0= 'input' )
                    // InternalSCTX.g:3039:3: lv_input_2_0= 'input'
                    {
                    lv_input_2_0=(Token)match(input,52,FollowSets000.FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_input_2_0, grammarAccess.getVariableDeclarationAccess().getInputInputKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "input", true, "input");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3052:3: ( (lv_output_3_0= 'output' ) )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==53) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalSCTX.g:3053:1: (lv_output_3_0= 'output' )
                    {
                    // InternalSCTX.g:3053:1: (lv_output_3_0= 'output' )
                    // InternalSCTX.g:3054:3: lv_output_3_0= 'output'
                    {
                    lv_output_3_0=(Token)match(input,53,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_output_3_0, grammarAccess.getVariableDeclarationAccess().getOutputOutputKeyword_3_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "output", true, "output");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3067:3: ( (lv_static_4_0= 'static' ) )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==54) ) {
                alt99=1;
            }
            switch (alt99) {
                case 1 :
                    // InternalSCTX.g:3068:1: (lv_static_4_0= 'static' )
                    {
                    // InternalSCTX.g:3068:1: (lv_static_4_0= 'static' )
                    // InternalSCTX.g:3069:3: lv_static_4_0= 'static'
                    {
                    lv_static_4_0=(Token)match(input,54,FollowSets000.FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_static_4_0, grammarAccess.getVariableDeclarationAccess().getStaticStaticKeyword_4_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "static", true, "static");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3082:3: ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) )
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==55) ) {
                int LA101_1 = input.LA(2);

                if ( ((LA101_1>=111 && LA101_1<=117)) ) {
                    alt101=1;
                }
                else if ( (LA101_1==RULE_ID||LA101_1==RULE_COMMENT_ANNOTATION||LA101_1==76) ) {
                    alt101=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 101, 1, input);

                    throw nvae;
                }
            }
            else if ( ((LA101_0>=111 && LA101_0<=117)) ) {
                alt101=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 101, 0, input);

                throw nvae;
            }
            switch (alt101) {
                case 1 :
                    // InternalSCTX.g:3082:4: ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) )
                    {
                    // InternalSCTX.g:3082:4: ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) )
                    // InternalSCTX.g:3082:5: ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) )
                    {
                    // InternalSCTX.g:3082:5: ( (lv_signal_5_0= 'signal' ) )?
                    int alt100=2;
                    int LA100_0 = input.LA(1);

                    if ( (LA100_0==55) ) {
                        alt100=1;
                    }
                    switch (alt100) {
                        case 1 :
                            // InternalSCTX.g:3083:1: (lv_signal_5_0= 'signal' )
                            {
                            // InternalSCTX.g:3083:1: (lv_signal_5_0= 'signal' )
                            // InternalSCTX.g:3084:3: lv_signal_5_0= 'signal'
                            {
                            lv_signal_5_0=(Token)match(input,55,FollowSets000.FOLLOW_69); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_signal_5_0, grammarAccess.getVariableDeclarationAccess().getSignalSignalKeyword_5_0_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getVariableDeclarationRule());
                              	        }
                                     		setWithLastConsumed(current, "signal", true, "signal");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:3097:3: ( (lv_type_6_0= ruleValueType ) )
                    // InternalSCTX.g:3098:1: (lv_type_6_0= ruleValueType )
                    {
                    // InternalSCTX.g:3098:1: (lv_type_6_0= ruleValueType )
                    // InternalSCTX.g:3099:3: lv_type_6_0= ruleValueType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationAccess().getTypeValueTypeEnumRuleCall_5_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_70);
                    lv_type_6_0=ruleValueType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"type",
                              		lv_type_6_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.ValueType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:3116:6: ( (lv_signal_7_0= 'signal' ) )
                    {
                    // InternalSCTX.g:3116:6: ( (lv_signal_7_0= 'signal' ) )
                    // InternalSCTX.g:3117:1: (lv_signal_7_0= 'signal' )
                    {
                    // InternalSCTX.g:3117:1: (lv_signal_7_0= 'signal' )
                    // InternalSCTX.g:3118:3: lv_signal_7_0= 'signal'
                    {
                    lv_signal_7_0=(Token)match(input,55,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_signal_7_0, grammarAccess.getVariableDeclarationAccess().getSignalSignalKeyword_5_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "signal", true, "signal");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:3131:3: ( (lv_valuedObjects_8_0= ruleValuedObject ) )
            // InternalSCTX.g:3132:1: (lv_valuedObjects_8_0= ruleValuedObject )
            {
            // InternalSCTX.g:3132:1: (lv_valuedObjects_8_0= ruleValuedObject )
            // InternalSCTX.g:3133:3: lv_valuedObjects_8_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_6_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_71);
            lv_valuedObjects_8_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
              	        }
                     		add(
                     			current, 
                     			"valuedObjects",
                      		lv_valuedObjects_8_0, 
                      		"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:3149:2: (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )*
            loop102:
            do {
                int alt102=2;
                int LA102_0 = input.LA(1);

                if ( (LA102_0==27) ) {
                    alt102=1;
                }


                switch (alt102) {
            	case 1 :
            	    // InternalSCTX.g:3149:4: otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    {
            	    otherlv_9=(Token)match(input,27,FollowSets000.FOLLOW_70); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_9, grammarAccess.getVariableDeclarationAccess().getCommaKeyword_7_0());
            	          
            	    }
            	    // InternalSCTX.g:3153:1: ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    // InternalSCTX.g:3154:1: (lv_valuedObjects_10_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:3154:1: (lv_valuedObjects_10_0= ruleValuedObject )
            	    // InternalSCTX.g:3155:3: lv_valuedObjects_10_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_7_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_71);
            	    lv_valuedObjects_10_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"valuedObjects",
            	              		lv_valuedObjects_10_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop102;
                }
            } while (true);

            otherlv_11=(Token)match(input,37,FollowSets000.FOLLOW_72); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_11, grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_8());
                  
            }
            // InternalSCTX.g:3175:1: ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalSCTX.g:3176:1: (lv_annotations_12_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:3176:1: (lv_annotations_12_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:3177:3: lv_annotations_12_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_9_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_12_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
                      	        }
                             		add(
                             			current, 
                             			"annotations",
                              		lv_annotations_12_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableDeclaration"


    // $ANTLR start "entryRuleVariableDeclarationWOSemicolon"
    // InternalSCTX.g:3201:1: entryRuleVariableDeclarationWOSemicolon returns [EObject current=null] : iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF ;
    public final EObject entryRuleVariableDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableDeclarationWOSemicolon = null;


        try {
            // InternalSCTX.g:3202:2: (iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF )
            // InternalSCTX.g:3203:2: iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVariableDeclarationWOSemicolon=ruleVariableDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableDeclarationWOSemicolon"


    // $ANTLR start "ruleVariableDeclarationWOSemicolon"
    // InternalSCTX.g:3210:1: ruleVariableDeclarationWOSemicolon returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_const_1_0= 'const' ) )? ( (lv_input_2_0= 'input' ) )? ( (lv_output_3_0= 'output' ) )? ( (lv_static_4_0= 'static' ) )? ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleVariableDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token lv_const_1_0=null;
        Token lv_input_2_0=null;
        Token lv_output_3_0=null;
        Token lv_static_4_0=null;
        Token lv_signal_5_0=null;
        Token lv_signal_7_0=null;
        Token otherlv_9=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_type_6_0 = null;

        EObject lv_valuedObjects_8_0 = null;

        EObject lv_valuedObjects_10_0 = null;

        EObject lv_annotations_11_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:3213:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_const_1_0= 'const' ) )? ( (lv_input_2_0= 'input' ) )? ( (lv_output_3_0= 'output' ) )? ( (lv_static_4_0= 'static' ) )? ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:3214:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_const_1_0= 'const' ) )? ( (lv_input_2_0= 'input' ) )? ( (lv_output_3_0= 'output' ) )? ( (lv_static_4_0= 'static' ) )? ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:3214:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_const_1_0= 'const' ) )? ( (lv_input_2_0= 'input' ) )? ( (lv_output_3_0= 'output' ) )? ( (lv_static_4_0= 'static' ) )? ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:3214:2: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_const_1_0= 'const' ) )? ( (lv_input_2_0= 'input' ) )? ( (lv_output_3_0= 'output' ) )? ( (lv_static_4_0= 'static' ) )? ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:3214:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop104:
            do {
                int alt104=2;
                int LA104_0 = input.LA(1);

                if ( (LA104_0==RULE_COMMENT_ANNOTATION||LA104_0==76) ) {
                    alt104=1;
                }


                switch (alt104) {
            	case 1 :
            	    // InternalSCTX.g:3215:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:3215:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:3216:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_65);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop104;
                }
            } while (true);

            // InternalSCTX.g:3232:3: ( (lv_const_1_0= 'const' ) )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==51) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // InternalSCTX.g:3233:1: (lv_const_1_0= 'const' )
                    {
                    // InternalSCTX.g:3233:1: (lv_const_1_0= 'const' )
                    // InternalSCTX.g:3234:3: lv_const_1_0= 'const'
                    {
                    lv_const_1_0=(Token)match(input,51,FollowSets000.FOLLOW_66); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_const_1_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getConstConstKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      	        }
                             		setWithLastConsumed(current, "const", true, "const");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3247:3: ( (lv_input_2_0= 'input' ) )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==52) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // InternalSCTX.g:3248:1: (lv_input_2_0= 'input' )
                    {
                    // InternalSCTX.g:3248:1: (lv_input_2_0= 'input' )
                    // InternalSCTX.g:3249:3: lv_input_2_0= 'input'
                    {
                    lv_input_2_0=(Token)match(input,52,FollowSets000.FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_input_2_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getInputInputKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      	        }
                             		setWithLastConsumed(current, "input", true, "input");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3262:3: ( (lv_output_3_0= 'output' ) )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==53) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalSCTX.g:3263:1: (lv_output_3_0= 'output' )
                    {
                    // InternalSCTX.g:3263:1: (lv_output_3_0= 'output' )
                    // InternalSCTX.g:3264:3: lv_output_3_0= 'output'
                    {
                    lv_output_3_0=(Token)match(input,53,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_output_3_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getOutputOutputKeyword_3_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      	        }
                             		setWithLastConsumed(current, "output", true, "output");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3277:3: ( (lv_static_4_0= 'static' ) )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==54) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalSCTX.g:3278:1: (lv_static_4_0= 'static' )
                    {
                    // InternalSCTX.g:3278:1: (lv_static_4_0= 'static' )
                    // InternalSCTX.g:3279:3: lv_static_4_0= 'static'
                    {
                    lv_static_4_0=(Token)match(input,54,FollowSets000.FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_static_4_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getStaticStaticKeyword_4_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      	        }
                             		setWithLastConsumed(current, "static", true, "static");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3292:3: ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) )
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==55) ) {
                int LA110_1 = input.LA(2);

                if ( (LA110_1==RULE_ID||LA110_1==RULE_COMMENT_ANNOTATION||LA110_1==76) ) {
                    alt110=2;
                }
                else if ( ((LA110_1>=111 && LA110_1<=117)) ) {
                    alt110=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 110, 1, input);

                    throw nvae;
                }
            }
            else if ( ((LA110_0>=111 && LA110_0<=117)) ) {
                alt110=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 110, 0, input);

                throw nvae;
            }
            switch (alt110) {
                case 1 :
                    // InternalSCTX.g:3292:4: ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) )
                    {
                    // InternalSCTX.g:3292:4: ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) )
                    // InternalSCTX.g:3292:5: ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) )
                    {
                    // InternalSCTX.g:3292:5: ( (lv_signal_5_0= 'signal' ) )?
                    int alt109=2;
                    int LA109_0 = input.LA(1);

                    if ( (LA109_0==55) ) {
                        alt109=1;
                    }
                    switch (alt109) {
                        case 1 :
                            // InternalSCTX.g:3293:1: (lv_signal_5_0= 'signal' )
                            {
                            // InternalSCTX.g:3293:1: (lv_signal_5_0= 'signal' )
                            // InternalSCTX.g:3294:3: lv_signal_5_0= 'signal'
                            {
                            lv_signal_5_0=(Token)match(input,55,FollowSets000.FOLLOW_69); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_signal_5_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalSignalKeyword_5_0_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                              	        }
                                     		setWithLastConsumed(current, "signal", true, "signal");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:3307:3: ( (lv_type_6_0= ruleValueType ) )
                    // InternalSCTX.g:3308:1: (lv_type_6_0= ruleValueType )
                    {
                    // InternalSCTX.g:3308:1: (lv_type_6_0= ruleValueType )
                    // InternalSCTX.g:3309:3: lv_type_6_0= ruleValueType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getTypeValueTypeEnumRuleCall_5_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_70);
                    lv_type_6_0=ruleValueType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      	        }
                             		set(
                             			current, 
                             			"type",
                              		lv_type_6_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.ValueType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:3326:6: ( (lv_signal_7_0= 'signal' ) )
                    {
                    // InternalSCTX.g:3326:6: ( (lv_signal_7_0= 'signal' ) )
                    // InternalSCTX.g:3327:1: (lv_signal_7_0= 'signal' )
                    {
                    // InternalSCTX.g:3327:1: (lv_signal_7_0= 'signal' )
                    // InternalSCTX.g:3328:3: lv_signal_7_0= 'signal'
                    {
                    lv_signal_7_0=(Token)match(input,55,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_signal_7_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalSignalKeyword_5_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      	        }
                             		setWithLastConsumed(current, "signal", true, "signal");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:3341:3: ( (lv_valuedObjects_8_0= ruleValuedObject ) )
            // InternalSCTX.g:3342:1: (lv_valuedObjects_8_0= ruleValuedObject )
            {
            // InternalSCTX.g:3342:1: (lv_valuedObjects_8_0= ruleValuedObject )
            // InternalSCTX.g:3343:3: lv_valuedObjects_8_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_6_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_73);
            lv_valuedObjects_8_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
              	        }
                     		add(
                     			current, 
                     			"valuedObjects",
                      		lv_valuedObjects_8_0, 
                      		"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:3359:2: (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )*
            loop111:
            do {
                int alt111=2;
                int LA111_0 = input.LA(1);

                if ( (LA111_0==27) ) {
                    alt111=1;
                }


                switch (alt111) {
            	case 1 :
            	    // InternalSCTX.g:3359:4: otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    {
            	    otherlv_9=(Token)match(input,27,FollowSets000.FOLLOW_70); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_9, grammarAccess.getVariableDeclarationWOSemicolonAccess().getCommaKeyword_7_0());
            	          
            	    }
            	    // InternalSCTX.g:3363:1: ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    // InternalSCTX.g:3364:1: (lv_valuedObjects_10_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:3364:1: (lv_valuedObjects_10_0= ruleValuedObject )
            	    // InternalSCTX.g:3365:3: lv_valuedObjects_10_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_7_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_73);
            	    lv_valuedObjects_10_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"valuedObjects",
            	              		lv_valuedObjects_10_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop111;
                }
            } while (true);

            // InternalSCTX.g:3381:4: ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // InternalSCTX.g:3382:1: (lv_annotations_11_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:3382:1: (lv_annotations_11_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:3383:3: lv_annotations_11_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_8_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_11_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      	        }
                             		add(
                             			current, 
                             			"annotations",
                              		lv_annotations_11_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableDeclarationWOSemicolon"


    // $ANTLR start "entryRuleNamespaceID"
    // InternalSCTX.g:3407:1: entryRuleNamespaceID returns [String current=null] : iv_ruleNamespaceID= ruleNamespaceID EOF ;
    public final String entryRuleNamespaceID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNamespaceID = null;


        try {
            // InternalSCTX.g:3408:2: (iv_ruleNamespaceID= ruleNamespaceID EOF )
            // InternalSCTX.g:3409:2: iv_ruleNamespaceID= ruleNamespaceID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNamespaceID=ruleNamespaceID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespaceID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamespaceID"


    // $ANTLR start "ruleNamespaceID"
    // InternalSCTX.g:3416:1: ruleNamespaceID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (kw= ':' this_PrimeID_2= rulePrimeID )* ) ;
    public final AntlrDatatypeRuleToken ruleNamespaceID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;
        AntlrDatatypeRuleToken this_PrimeID_2 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:3419:28: ( (this_ID_0= RULE_ID (kw= ':' this_PrimeID_2= rulePrimeID )* ) )
            // InternalSCTX.g:3420:1: (this_ID_0= RULE_ID (kw= ':' this_PrimeID_2= rulePrimeID )* )
            {
            // InternalSCTX.g:3420:1: (this_ID_0= RULE_ID (kw= ':' this_PrimeID_2= rulePrimeID )* )
            // InternalSCTX.g:3420:6: this_ID_0= RULE_ID (kw= ':' this_PrimeID_2= rulePrimeID )*
            {
            this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_74); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ID_0, grammarAccess.getNamespaceIDAccess().getIDTerminalRuleCall_0()); 
                  
            }
            // InternalSCTX.g:3427:1: (kw= ':' this_PrimeID_2= rulePrimeID )*
            loop113:
            do {
                int alt113=2;
                int LA113_0 = input.LA(1);

                if ( (LA113_0==40) ) {
                    alt113=1;
                }


                switch (alt113) {
            	case 1 :
            	    // InternalSCTX.g:3428:2: kw= ':' this_PrimeID_2= rulePrimeID
            	    {
            	    kw=(Token)match(input,40,FollowSets000.FOLLOW_70); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              current.merge(kw);
            	              newLeafNode(kw, grammarAccess.getNamespaceIDAccess().getColonKeyword_1_0()); 
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	              newCompositeNode(grammarAccess.getNamespaceIDAccess().getPrimeIDParserRuleCall_1_1()); 
            	          
            	    }
            	    pushFollow(FollowSets000.FOLLOW_74);
            	    this_PrimeID_2=rulePrimeID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_PrimeID_2);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	              afterParserOrEnumRuleCall();
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop113;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceID"


    // $ANTLR start "entryRuleReferenceDeclaration"
    // InternalSCTX.g:3452:1: entryRuleReferenceDeclaration returns [EObject current=null] : iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF ;
    public final EObject entryRuleReferenceDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceDeclaration = null;


        try {
            // InternalSCTX.g:3453:2: (iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF )
            // InternalSCTX.g:3454:2: iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceDeclaration=ruleReferenceDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceDeclaration"


    // $ANTLR start "ruleReferenceDeclaration"
    // InternalSCTX.g:3461:1: ruleReferenceDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* otherlv_8= ';' ( (lv_annotations_9_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleReferenceDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_extern_4_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_valuedObjects_5_0 = null;

        EObject lv_valuedObjects_7_0 = null;

        EObject lv_annotations_9_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:3464:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* otherlv_8= ';' ( (lv_annotations_9_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:3465:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* otherlv_8= ';' ( (lv_annotations_9_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:3465:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* otherlv_8= ';' ( (lv_annotations_9_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:3465:2: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* otherlv_8= ';' ( (lv_annotations_9_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:3465:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop114:
            do {
                int alt114=2;
                int LA114_0 = input.LA(1);

                if ( (LA114_0==RULE_COMMENT_ANNOTATION||LA114_0==76) ) {
                    alt114=1;
                }


                switch (alt114) {
            	case 1 :
            	    // InternalSCTX.g:3466:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:3466:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:3467:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_75);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop114;
                }
            } while (true);

            // InternalSCTX.g:3483:3: ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) )
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==56) ) {
                alt115=1;
            }
            else if ( (LA115_0==57) ) {
                alt115=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 115, 0, input);

                throw nvae;
            }
            switch (alt115) {
                case 1 :
                    // InternalSCTX.g:3483:4: (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) )
                    {
                    // InternalSCTX.g:3483:4: (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) )
                    // InternalSCTX.g:3483:6: otherlv_1= 'ref' ( ( ruleNamespaceID ) )
                    {
                    otherlv_1=(Token)match(input,56,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getReferenceDeclarationAccess().getRefKeyword_1_0_0());
                          
                    }
                    // InternalSCTX.g:3487:1: ( ( ruleNamespaceID ) )
                    // InternalSCTX.g:3488:1: ( ruleNamespaceID )
                    {
                    // InternalSCTX.g:3488:1: ( ruleNamespaceID )
                    // InternalSCTX.g:3489:3: ruleNamespaceID
                    {
                    if ( state.backtracking==0 ) {
                       
                      		  /* */ 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getReferenceDeclarationRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getReferenceNamedObjectCrossReference_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_70);
                    ruleNamespaceID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:3506:6: (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) )
                    {
                    // InternalSCTX.g:3506:6: (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) )
                    // InternalSCTX.g:3506:8: otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,57,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getReferenceDeclarationAccess().getExternKeyword_1_1_0());
                          
                    }
                    // InternalSCTX.g:3510:1: ( (lv_extern_4_0= RULE_STRING ) )
                    // InternalSCTX.g:3511:1: (lv_extern_4_0= RULE_STRING )
                    {
                    // InternalSCTX.g:3511:1: (lv_extern_4_0= RULE_STRING )
                    // InternalSCTX.g:3512:3: lv_extern_4_0= RULE_STRING
                    {
                    lv_extern_4_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_extern_4_0, grammarAccess.getReferenceDeclarationAccess().getExternSTRINGTerminalRuleCall_1_1_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getReferenceDeclarationRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"extern",
                              		lv_extern_4_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.STRING");
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:3528:4: ( (lv_valuedObjects_5_0= ruleValuedObject ) )
            // InternalSCTX.g:3529:1: (lv_valuedObjects_5_0= ruleValuedObject )
            {
            // InternalSCTX.g:3529:1: (lv_valuedObjects_5_0= ruleValuedObject )
            // InternalSCTX.g:3530:3: lv_valuedObjects_5_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_71);
            lv_valuedObjects_5_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
              	        }
                     		add(
                     			current, 
                     			"valuedObjects",
                      		lv_valuedObjects_5_0, 
                      		"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:3546:2: (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )*
            loop116:
            do {
                int alt116=2;
                int LA116_0 = input.LA(1);

                if ( (LA116_0==27) ) {
                    alt116=1;
                }


                switch (alt116) {
            	case 1 :
            	    // InternalSCTX.g:3546:4: otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) )
            	    {
            	    otherlv_6=(Token)match(input,27,FollowSets000.FOLLOW_70); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_6, grammarAccess.getReferenceDeclarationAccess().getCommaKeyword_3_0());
            	          
            	    }
            	    // InternalSCTX.g:3550:1: ( (lv_valuedObjects_7_0= ruleValuedObject ) )
            	    // InternalSCTX.g:3551:1: (lv_valuedObjects_7_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:3551:1: (lv_valuedObjects_7_0= ruleValuedObject )
            	    // InternalSCTX.g:3552:3: lv_valuedObjects_7_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_71);
            	    lv_valuedObjects_7_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"valuedObjects",
            	              		lv_valuedObjects_7_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop116;
                }
            } while (true);

            otherlv_8=(Token)match(input,37,FollowSets000.FOLLOW_72); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getReferenceDeclarationAccess().getSemicolonKeyword_4());
                  
            }
            // InternalSCTX.g:3572:1: ( (lv_annotations_9_0= ruleCommentAnnotatonSL ) )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalSCTX.g:3573:1: (lv_annotations_9_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:3573:1: (lv_annotations_9_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:3574:3: lv_annotations_9_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_5_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_9_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                      	        }
                             		add(
                             			current, 
                             			"annotations",
                              		lv_annotations_9_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceDeclaration"


    // $ANTLR start "entryRuleReferenceDeclarationWOSemicolon"
    // InternalSCTX.g:3598:1: entryRuleReferenceDeclarationWOSemicolon returns [EObject current=null] : iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF ;
    public final EObject entryRuleReferenceDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceDeclarationWOSemicolon = null;


        try {
            // InternalSCTX.g:3599:2: (iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF )
            // InternalSCTX.g:3600:2: iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceDeclarationWOSemicolon=ruleReferenceDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceDeclarationWOSemicolon"


    // $ANTLR start "ruleReferenceDeclarationWOSemicolon"
    // InternalSCTX.g:3607:1: ruleReferenceDeclarationWOSemicolon returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* ( (lv_annotations_8_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleReferenceDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_extern_4_0=null;
        Token otherlv_6=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_valuedObjects_5_0 = null;

        EObject lv_valuedObjects_7_0 = null;

        EObject lv_annotations_8_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:3610:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* ( (lv_annotations_8_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:3611:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* ( (lv_annotations_8_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:3611:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* ( (lv_annotations_8_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:3611:2: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* ( (lv_annotations_8_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:3611:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop118:
            do {
                int alt118=2;
                int LA118_0 = input.LA(1);

                if ( (LA118_0==RULE_COMMENT_ANNOTATION||LA118_0==76) ) {
                    alt118=1;
                }


                switch (alt118) {
            	case 1 :
            	    // InternalSCTX.g:3612:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:3612:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:3613:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_75);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop118;
                }
            } while (true);

            // InternalSCTX.g:3629:3: ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) )
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==56) ) {
                alt119=1;
            }
            else if ( (LA119_0==57) ) {
                alt119=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 119, 0, input);

                throw nvae;
            }
            switch (alt119) {
                case 1 :
                    // InternalSCTX.g:3629:4: (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) )
                    {
                    // InternalSCTX.g:3629:4: (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) )
                    // InternalSCTX.g:3629:6: otherlv_1= 'ref' ( ( ruleNamespaceID ) )
                    {
                    otherlv_1=(Token)match(input,56,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getRefKeyword_1_0_0());
                          
                    }
                    // InternalSCTX.g:3633:1: ( ( ruleNamespaceID ) )
                    // InternalSCTX.g:3634:1: ( ruleNamespaceID )
                    {
                    // InternalSCTX.g:3634:1: ( ruleNamespaceID )
                    // InternalSCTX.g:3635:3: ruleNamespaceID
                    {
                    if ( state.backtracking==0 ) {
                       
                      		  /* */ 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getReferenceNamedObjectCrossReference_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_70);
                    ruleNamespaceID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:3652:6: (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) )
                    {
                    // InternalSCTX.g:3652:6: (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) )
                    // InternalSCTX.g:3652:8: otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,57,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternKeyword_1_1_0());
                          
                    }
                    // InternalSCTX.g:3656:1: ( (lv_extern_4_0= RULE_STRING ) )
                    // InternalSCTX.g:3657:1: (lv_extern_4_0= RULE_STRING )
                    {
                    // InternalSCTX.g:3657:1: (lv_extern_4_0= RULE_STRING )
                    // InternalSCTX.g:3658:3: lv_extern_4_0= RULE_STRING
                    {
                    lv_extern_4_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_extern_4_0, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternSTRINGTerminalRuleCall_1_1_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"extern",
                              		lv_extern_4_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.STRING");
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:3674:4: ( (lv_valuedObjects_5_0= ruleValuedObject ) )
            // InternalSCTX.g:3675:1: (lv_valuedObjects_5_0= ruleValuedObject )
            {
            // InternalSCTX.g:3675:1: (lv_valuedObjects_5_0= ruleValuedObject )
            // InternalSCTX.g:3676:3: lv_valuedObjects_5_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_73);
            lv_valuedObjects_5_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
              	        }
                     		add(
                     			current, 
                     			"valuedObjects",
                      		lv_valuedObjects_5_0, 
                      		"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:3692:2: (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )*
            loop120:
            do {
                int alt120=2;
                int LA120_0 = input.LA(1);

                if ( (LA120_0==27) ) {
                    alt120=1;
                }


                switch (alt120) {
            	case 1 :
            	    // InternalSCTX.g:3692:4: otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) )
            	    {
            	    otherlv_6=(Token)match(input,27,FollowSets000.FOLLOW_70); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_6, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getCommaKeyword_3_0());
            	          
            	    }
            	    // InternalSCTX.g:3696:1: ( (lv_valuedObjects_7_0= ruleValuedObject ) )
            	    // InternalSCTX.g:3697:1: (lv_valuedObjects_7_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:3697:1: (lv_valuedObjects_7_0= ruleValuedObject )
            	    // InternalSCTX.g:3698:3: lv_valuedObjects_7_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_73);
            	    lv_valuedObjects_7_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"valuedObjects",
            	              		lv_valuedObjects_7_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop120;
                }
            } while (true);

            // InternalSCTX.g:3714:4: ( (lv_annotations_8_0= ruleCommentAnnotatonSL ) )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // InternalSCTX.g:3715:1: (lv_annotations_8_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:3715:1: (lv_annotations_8_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:3716:3: lv_annotations_8_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_4_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_8_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      	        }
                             		add(
                             			current, 
                             			"annotations",
                              		lv_annotations_8_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceDeclarationWOSemicolon"


    // $ANTLR start "entryRuleScheduleDeclaration"
    // InternalSCTX.g:3740:1: entryRuleScheduleDeclaration returns [EObject current=null] : iv_ruleScheduleDeclaration= ruleScheduleDeclaration EOF ;
    public final EObject entryRuleScheduleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScheduleDeclaration = null;


        try {
            // InternalSCTX.g:3741:2: (iv_ruleScheduleDeclaration= ruleScheduleDeclaration EOF )
            // InternalSCTX.g:3742:2: iv_ruleScheduleDeclaration= ruleScheduleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScheduleDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScheduleDeclaration=ruleScheduleDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScheduleDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScheduleDeclaration"


    // $ANTLR start "ruleScheduleDeclaration"
    // InternalSCTX.g:3749:1: ruleScheduleDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'schedule' ( (lv_name_2_0= rulePrimeID ) ) ( (lv_global_3_0= ruleSchedulePriorityType ) )? ( (lv_priorities_4_0= ruleSchedulePriority ) )* ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* otherlv_8= ';' ( (lv_annotations_9_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleScheduleDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        Enumerator lv_global_3_0 = null;

        EObject lv_priorities_4_0 = null;

        EObject lv_valuedObjects_5_0 = null;

        EObject lv_valuedObjects_7_0 = null;

        EObject lv_annotations_9_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:3752:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'schedule' ( (lv_name_2_0= rulePrimeID ) ) ( (lv_global_3_0= ruleSchedulePriorityType ) )? ( (lv_priorities_4_0= ruleSchedulePriority ) )* ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* otherlv_8= ';' ( (lv_annotations_9_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:3753:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'schedule' ( (lv_name_2_0= rulePrimeID ) ) ( (lv_global_3_0= ruleSchedulePriorityType ) )? ( (lv_priorities_4_0= ruleSchedulePriority ) )* ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* otherlv_8= ';' ( (lv_annotations_9_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:3753:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'schedule' ( (lv_name_2_0= rulePrimeID ) ) ( (lv_global_3_0= ruleSchedulePriorityType ) )? ( (lv_priorities_4_0= ruleSchedulePriority ) )* ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* otherlv_8= ';' ( (lv_annotations_9_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:3753:2: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'schedule' ( (lv_name_2_0= rulePrimeID ) ) ( (lv_global_3_0= ruleSchedulePriorityType ) )? ( (lv_priorities_4_0= ruleSchedulePriority ) )* ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* otherlv_8= ';' ( (lv_annotations_9_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:3753:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop122:
            do {
                int alt122=2;
                int LA122_0 = input.LA(1);

                if ( (LA122_0==RULE_COMMENT_ANNOTATION||LA122_0==76) ) {
                    alt122=1;
                }


                switch (alt122) {
            	case 1 :
            	    // InternalSCTX.g:3754:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:3754:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:3755:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_76);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop122;
                }
            } while (true);

            otherlv_1=(Token)match(input,58,FollowSets000.FOLLOW_70); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getScheduleDeclarationAccess().getScheduleKeyword_1());
                  
            }
            // InternalSCTX.g:3775:1: ( (lv_name_2_0= rulePrimeID ) )
            // InternalSCTX.g:3776:1: (lv_name_2_0= rulePrimeID )
            {
            // InternalSCTX.g:3776:1: (lv_name_2_0= rulePrimeID )
            // InternalSCTX.g:3777:3: lv_name_2_0= rulePrimeID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getNamePrimeIDParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_77);
            lv_name_2_0=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:3793:2: ( (lv_global_3_0= ruleSchedulePriorityType ) )?
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( ((LA123_0>=91 && LA123_0<=92)) ) {
                alt123=1;
            }
            switch (alt123) {
                case 1 :
                    // InternalSCTX.g:3794:1: (lv_global_3_0= ruleSchedulePriorityType )
                    {
                    // InternalSCTX.g:3794:1: (lv_global_3_0= ruleSchedulePriorityType )
                    // InternalSCTX.g:3795:3: lv_global_3_0= ruleSchedulePriorityType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getGlobalSchedulePriorityTypeEnumRuleCall_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_78);
                    lv_global_3_0=ruleSchedulePriorityType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"global",
                              		lv_global_3_0, 
                              		"de.cau.cs.kieler.kexpressions.kext.KExt.SchedulePriorityType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3811:3: ( (lv_priorities_4_0= ruleSchedulePriority ) )*
            loop124:
            do {
                int alt124=2;
                int LA124_0 = input.LA(1);

                if ( (LA124_0==59) ) {
                    alt124=1;
                }


                switch (alt124) {
            	case 1 :
            	    // InternalSCTX.g:3812:1: (lv_priorities_4_0= ruleSchedulePriority )
            	    {
            	    // InternalSCTX.g:3812:1: (lv_priorities_4_0= ruleSchedulePriority )
            	    // InternalSCTX.g:3813:3: lv_priorities_4_0= ruleSchedulePriority
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getPrioritiesSchedulePriorityParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_78);
            	    lv_priorities_4_0=ruleSchedulePriority();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"priorities",
            	              		lv_priorities_4_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.SchedulePriority");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop124;
                }
            } while (true);

            // InternalSCTX.g:3829:3: ( (lv_valuedObjects_5_0= ruleValuedObject ) )
            // InternalSCTX.g:3830:1: (lv_valuedObjects_5_0= ruleValuedObject )
            {
            // InternalSCTX.g:3830:1: (lv_valuedObjects_5_0= ruleValuedObject )
            // InternalSCTX.g:3831:3: lv_valuedObjects_5_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_71);
            lv_valuedObjects_5_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
              	        }
                     		add(
                     			current, 
                     			"valuedObjects",
                      		lv_valuedObjects_5_0, 
                      		"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:3847:2: (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )*
            loop125:
            do {
                int alt125=2;
                int LA125_0 = input.LA(1);

                if ( (LA125_0==27) ) {
                    alt125=1;
                }


                switch (alt125) {
            	case 1 :
            	    // InternalSCTX.g:3847:4: otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) )
            	    {
            	    otherlv_6=(Token)match(input,27,FollowSets000.FOLLOW_70); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_6, grammarAccess.getScheduleDeclarationAccess().getCommaKeyword_6_0());
            	          
            	    }
            	    // InternalSCTX.g:3851:1: ( (lv_valuedObjects_7_0= ruleValuedObject ) )
            	    // InternalSCTX.g:3852:1: (lv_valuedObjects_7_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:3852:1: (lv_valuedObjects_7_0= ruleValuedObject )
            	    // InternalSCTX.g:3853:3: lv_valuedObjects_7_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_6_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_71);
            	    lv_valuedObjects_7_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"valuedObjects",
            	              		lv_valuedObjects_7_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop125;
                }
            } while (true);

            otherlv_8=(Token)match(input,37,FollowSets000.FOLLOW_72); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getScheduleDeclarationAccess().getSemicolonKeyword_7());
                  
            }
            // InternalSCTX.g:3873:1: ( (lv_annotations_9_0= ruleCommentAnnotatonSL ) )?
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt126=1;
            }
            switch (alt126) {
                case 1 :
                    // InternalSCTX.g:3874:1: (lv_annotations_9_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:3874:1: (lv_annotations_9_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:3875:3: lv_annotations_9_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_8_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_9_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      	        }
                             		add(
                             			current, 
                             			"annotations",
                              		lv_annotations_9_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScheduleDeclaration"


    // $ANTLR start "entryRuleScheduleDeclarationWOSemicolon"
    // InternalSCTX.g:3899:1: entryRuleScheduleDeclarationWOSemicolon returns [EObject current=null] : iv_ruleScheduleDeclarationWOSemicolon= ruleScheduleDeclarationWOSemicolon EOF ;
    public final EObject entryRuleScheduleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScheduleDeclarationWOSemicolon = null;


        try {
            // InternalSCTX.g:3900:2: (iv_ruleScheduleDeclarationWOSemicolon= ruleScheduleDeclarationWOSemicolon EOF )
            // InternalSCTX.g:3901:2: iv_ruleScheduleDeclarationWOSemicolon= ruleScheduleDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScheduleDeclarationWOSemicolon=ruleScheduleDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScheduleDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScheduleDeclarationWOSemicolon"


    // $ANTLR start "ruleScheduleDeclarationWOSemicolon"
    // InternalSCTX.g:3908:1: ruleScheduleDeclarationWOSemicolon returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'schedule' ( (lv_name_2_0= rulePrimeID ) ) ( (lv_global_3_0= ruleSchedulePriorityType ) )? ( (lv_priorities_4_0= ruleSchedulePriority ) )* ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* ( (lv_annotations_8_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleScheduleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_6=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        Enumerator lv_global_3_0 = null;

        EObject lv_priorities_4_0 = null;

        EObject lv_valuedObjects_5_0 = null;

        EObject lv_valuedObjects_7_0 = null;

        EObject lv_annotations_8_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:3911:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'schedule' ( (lv_name_2_0= rulePrimeID ) ) ( (lv_global_3_0= ruleSchedulePriorityType ) )? ( (lv_priorities_4_0= ruleSchedulePriority ) )* ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* ( (lv_annotations_8_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:3912:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'schedule' ( (lv_name_2_0= rulePrimeID ) ) ( (lv_global_3_0= ruleSchedulePriorityType ) )? ( (lv_priorities_4_0= ruleSchedulePriority ) )* ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* ( (lv_annotations_8_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:3912:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'schedule' ( (lv_name_2_0= rulePrimeID ) ) ( (lv_global_3_0= ruleSchedulePriorityType ) )? ( (lv_priorities_4_0= ruleSchedulePriority ) )* ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* ( (lv_annotations_8_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:3912:2: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'schedule' ( (lv_name_2_0= rulePrimeID ) ) ( (lv_global_3_0= ruleSchedulePriorityType ) )? ( (lv_priorities_4_0= ruleSchedulePriority ) )* ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* ( (lv_annotations_8_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:3912:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop127:
            do {
                int alt127=2;
                int LA127_0 = input.LA(1);

                if ( (LA127_0==RULE_COMMENT_ANNOTATION||LA127_0==76) ) {
                    alt127=1;
                }


                switch (alt127) {
            	case 1 :
            	    // InternalSCTX.g:3913:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:3913:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:3914:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_76);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop127;
                }
            } while (true);

            otherlv_1=(Token)match(input,58,FollowSets000.FOLLOW_70); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getScheduleKeyword_1());
                  
            }
            // InternalSCTX.g:3934:1: ( (lv_name_2_0= rulePrimeID ) )
            // InternalSCTX.g:3935:1: (lv_name_2_0= rulePrimeID )
            {
            // InternalSCTX.g:3935:1: (lv_name_2_0= rulePrimeID )
            // InternalSCTX.g:3936:3: lv_name_2_0= rulePrimeID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getNamePrimeIDParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_77);
            lv_name_2_0=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:3952:2: ( (lv_global_3_0= ruleSchedulePriorityType ) )?
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( ((LA128_0>=91 && LA128_0<=92)) ) {
                alt128=1;
            }
            switch (alt128) {
                case 1 :
                    // InternalSCTX.g:3953:1: (lv_global_3_0= ruleSchedulePriorityType )
                    {
                    // InternalSCTX.g:3953:1: (lv_global_3_0= ruleSchedulePriorityType )
                    // InternalSCTX.g:3954:3: lv_global_3_0= ruleSchedulePriorityType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getGlobalSchedulePriorityTypeEnumRuleCall_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_78);
                    lv_global_3_0=ruleSchedulePriorityType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      	        }
                             		set(
                             			current, 
                             			"global",
                              		lv_global_3_0, 
                              		"de.cau.cs.kieler.kexpressions.kext.KExt.SchedulePriorityType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3970:3: ( (lv_priorities_4_0= ruleSchedulePriority ) )*
            loop129:
            do {
                int alt129=2;
                int LA129_0 = input.LA(1);

                if ( (LA129_0==59) ) {
                    alt129=1;
                }


                switch (alt129) {
            	case 1 :
            	    // InternalSCTX.g:3971:1: (lv_priorities_4_0= ruleSchedulePriority )
            	    {
            	    // InternalSCTX.g:3971:1: (lv_priorities_4_0= ruleSchedulePriority )
            	    // InternalSCTX.g:3972:3: lv_priorities_4_0= ruleSchedulePriority
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getPrioritiesSchedulePriorityParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_78);
            	    lv_priorities_4_0=ruleSchedulePriority();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"priorities",
            	              		lv_priorities_4_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.SchedulePriority");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop129;
                }
            } while (true);

            // InternalSCTX.g:3988:3: ( (lv_valuedObjects_5_0= ruleValuedObject ) )
            // InternalSCTX.g:3989:1: (lv_valuedObjects_5_0= ruleValuedObject )
            {
            // InternalSCTX.g:3989:1: (lv_valuedObjects_5_0= ruleValuedObject )
            // InternalSCTX.g:3990:3: lv_valuedObjects_5_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_73);
            lv_valuedObjects_5_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
              	        }
                     		add(
                     			current, 
                     			"valuedObjects",
                      		lv_valuedObjects_5_0, 
                      		"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:4006:2: (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )*
            loop130:
            do {
                int alt130=2;
                int LA130_0 = input.LA(1);

                if ( (LA130_0==27) ) {
                    alt130=1;
                }


                switch (alt130) {
            	case 1 :
            	    // InternalSCTX.g:4006:4: otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) )
            	    {
            	    otherlv_6=(Token)match(input,27,FollowSets000.FOLLOW_70); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_6, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getCommaKeyword_6_0());
            	          
            	    }
            	    // InternalSCTX.g:4010:1: ( (lv_valuedObjects_7_0= ruleValuedObject ) )
            	    // InternalSCTX.g:4011:1: (lv_valuedObjects_7_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:4011:1: (lv_valuedObjects_7_0= ruleValuedObject )
            	    // InternalSCTX.g:4012:3: lv_valuedObjects_7_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_6_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_73);
            	    lv_valuedObjects_7_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"valuedObjects",
            	              		lv_valuedObjects_7_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop130;
                }
            } while (true);

            // InternalSCTX.g:4028:4: ( (lv_annotations_8_0= ruleCommentAnnotatonSL ) )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // InternalSCTX.g:4029:1: (lv_annotations_8_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:4029:1: (lv_annotations_8_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:4030:3: lv_annotations_8_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_7_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_8_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      	        }
                             		add(
                             			current, 
                             			"annotations",
                              		lv_annotations_8_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScheduleDeclarationWOSemicolon"


    // $ANTLR start "entryRuleSchedulePriority"
    // InternalSCTX.g:4054:1: entryRuleSchedulePriority returns [EObject current=null] : iv_ruleSchedulePriority= ruleSchedulePriority EOF ;
    public final EObject entryRuleSchedulePriority() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSchedulePriority = null;


        try {
            // InternalSCTX.g:4055:2: (iv_ruleSchedulePriority= ruleSchedulePriority EOF )
            // InternalSCTX.g:4056:2: iv_ruleSchedulePriority= ruleSchedulePriority EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSchedulePriorityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSchedulePriority=ruleSchedulePriority();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSchedulePriority; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSchedulePriority"


    // $ANTLR start "ruleSchedulePriority"
    // InternalSCTX.g:4063:1: ruleSchedulePriority returns [EObject current=null] : (otherlv_0= 'prio' ( (lv_priority_1_0= RULE_INT ) ) ( (lv_type_2_0= ruleSchedulePriorityType ) ) ) ;
    public final EObject ruleSchedulePriority() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_priority_1_0=null;
        Enumerator lv_type_2_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:4066:28: ( (otherlv_0= 'prio' ( (lv_priority_1_0= RULE_INT ) ) ( (lv_type_2_0= ruleSchedulePriorityType ) ) ) )
            // InternalSCTX.g:4067:1: (otherlv_0= 'prio' ( (lv_priority_1_0= RULE_INT ) ) ( (lv_type_2_0= ruleSchedulePriorityType ) ) )
            {
            // InternalSCTX.g:4067:1: (otherlv_0= 'prio' ( (lv_priority_1_0= RULE_INT ) ) ( (lv_type_2_0= ruleSchedulePriorityType ) ) )
            // InternalSCTX.g:4067:3: otherlv_0= 'prio' ( (lv_priority_1_0= RULE_INT ) ) ( (lv_type_2_0= ruleSchedulePriorityType ) )
            {
            otherlv_0=(Token)match(input,59,FollowSets000.FOLLOW_79); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getSchedulePriorityAccess().getPrioKeyword_0());
                  
            }
            // InternalSCTX.g:4071:1: ( (lv_priority_1_0= RULE_INT ) )
            // InternalSCTX.g:4072:1: (lv_priority_1_0= RULE_INT )
            {
            // InternalSCTX.g:4072:1: (lv_priority_1_0= RULE_INT )
            // InternalSCTX.g:4073:3: lv_priority_1_0= RULE_INT
            {
            lv_priority_1_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_80); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_priority_1_0, grammarAccess.getSchedulePriorityAccess().getPriorityINTTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getSchedulePriorityRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"priority",
                      		lv_priority_1_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.INT");
              	    
            }

            }


            }

            // InternalSCTX.g:4089:2: ( (lv_type_2_0= ruleSchedulePriorityType ) )
            // InternalSCTX.g:4090:1: (lv_type_2_0= ruleSchedulePriorityType )
            {
            // InternalSCTX.g:4090:1: (lv_type_2_0= ruleSchedulePriorityType )
            // InternalSCTX.g:4091:3: lv_type_2_0= ruleSchedulePriorityType
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSchedulePriorityAccess().getTypeSchedulePriorityTypeEnumRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_type_2_0=ruleSchedulePriorityType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSchedulePriorityRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_2_0, 
                      		"de.cau.cs.kieler.kexpressions.kext.KExt.SchedulePriorityType");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSchedulePriority"


    // $ANTLR start "entryRuleValuedObject"
    // InternalSCTX.g:4115:1: entryRuleValuedObject returns [EObject current=null] : iv_ruleValuedObject= ruleValuedObject EOF ;
    public final EObject entryRuleValuedObject() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObject = null;


        try {
            // InternalSCTX.g:4116:2: (iv_ruleValuedObject= ruleValuedObject EOF )
            // InternalSCTX.g:4117:2: iv_ruleValuedObject= ruleValuedObject EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObject=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObject; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObject"


    // $ANTLR start "ruleValuedObject"
    // InternalSCTX.g:4124:1: ruleValuedObject returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? ) ;
    public final EObject ruleValuedObject() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_cardinalities_3_0 = null;

        EObject lv_initialValue_6_0 = null;

        Enumerator lv_combineOperator_8_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:4127:28: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? ) )
            // InternalSCTX.g:4128:1: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? )
            {
            // InternalSCTX.g:4128:1: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? )
            // InternalSCTX.g:4128:2: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )?
            {
            // InternalSCTX.g:4128:2: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop132:
            do {
                int alt132=2;
                int LA132_0 = input.LA(1);

                if ( (LA132_0==RULE_COMMENT_ANNOTATION||LA132_0==76) ) {
                    alt132=1;
                }


                switch (alt132) {
            	case 1 :
            	    // InternalSCTX.g:4129:1: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalSCTX.g:4129:1: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalSCTX.g:4130:3: lv_annotations_0_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getValuedObjectAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_70);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getValuedObjectRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.QuotedStringAnnotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop132;
                }
            } while (true);

            // InternalSCTX.g:4146:3: ( (lv_name_1_0= rulePrimeID ) )
            // InternalSCTX.g:4147:1: (lv_name_1_0= rulePrimeID )
            {
            // InternalSCTX.g:4147:1: (lv_name_1_0= rulePrimeID )
            // InternalSCTX.g:4148:3: lv_name_1_0= rulePrimeID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getValuedObjectAccess().getNamePrimeIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_81);
            lv_name_1_0=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getValuedObjectRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:4164:2: (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )*
            loop133:
            do {
                int alt133=2;
                int LA133_0 = input.LA(1);

                if ( (LA133_0==32) ) {
                    alt133=1;
                }


                switch (alt133) {
            	case 1 :
            	    // InternalSCTX.g:4164:4: otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']'
            	    {
            	    otherlv_2=(Token)match(input,32,FollowSets000.FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getValuedObjectAccess().getLeftSquareBracketKeyword_2_0());
            	          
            	    }
            	    // InternalSCTX.g:4168:1: ( (lv_cardinalities_3_0= ruleExpression ) )
            	    // InternalSCTX.g:4169:1: (lv_cardinalities_3_0= ruleExpression )
            	    {
            	    // InternalSCTX.g:4169:1: (lv_cardinalities_3_0= ruleExpression )
            	    // InternalSCTX.g:4170:3: lv_cardinalities_3_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getValuedObjectAccess().getCardinalitiesExpressionParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_29);
            	    lv_cardinalities_3_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getValuedObjectRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"cardinalities",
            	              		lv_cardinalities_3_0, 
            	              		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,33,FollowSets000.FOLLOW_81); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_4, grammarAccess.getValuedObjectAccess().getRightSquareBracketKeyword_2_2());
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop133;
                }
            } while (true);

            // InternalSCTX.g:4190:3: (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==60) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // InternalSCTX.g:4190:5: otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) )
                    {
                    otherlv_5=(Token)match(input,60,FollowSets000.FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getValuedObjectAccess().getEqualsSignKeyword_3_0());
                          
                    }
                    // InternalSCTX.g:4194:1: ( (lv_initialValue_6_0= ruleExpression ) )
                    // InternalSCTX.g:4195:1: (lv_initialValue_6_0= ruleExpression )
                    {
                    // InternalSCTX.g:4195:1: (lv_initialValue_6_0= ruleExpression )
                    // InternalSCTX.g:4196:3: lv_initialValue_6_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getValuedObjectAccess().getInitialValueExpressionParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_82);
                    lv_initialValue_6_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getValuedObjectRule());
                      	        }
                             		set(
                             			current, 
                             			"initialValue",
                              		lv_initialValue_6_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:4212:4: (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==61) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // InternalSCTX.g:4212:6: otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) )
                    {
                    otherlv_7=(Token)match(input,61,FollowSets000.FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getValuedObjectAccess().getCombineKeyword_4_0());
                          
                    }
                    // InternalSCTX.g:4216:1: ( (lv_combineOperator_8_0= ruleCombineOperator ) )
                    // InternalSCTX.g:4217:1: (lv_combineOperator_8_0= ruleCombineOperator )
                    {
                    // InternalSCTX.g:4217:1: (lv_combineOperator_8_0= ruleCombineOperator )
                    // InternalSCTX.g:4218:3: lv_combineOperator_8_0= ruleCombineOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getValuedObjectAccess().getCombineOperatorCombineOperatorEnumRuleCall_4_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_combineOperator_8_0=ruleCombineOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getValuedObjectRule());
                      	        }
                             		set(
                             			current, 
                             			"combineOperator",
                              		lv_combineOperator_8_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.CombineOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObject"


    // $ANTLR start "entryRuleEffect"
    // InternalSCTX.g:4242:1: entryRuleEffect returns [EObject current=null] : iv_ruleEffect= ruleEffect EOF ;
    public final EObject entryRuleEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEffect = null;


        try {
            // InternalSCTX.g:4243:2: (iv_ruleEffect= ruleEffect EOF )
            // InternalSCTX.g:4244:2: iv_ruleEffect= ruleEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEffect=ruleEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEffect"


    // $ANTLR start "ruleEffect"
    // InternalSCTX.g:4251:1: ruleEffect returns [EObject current=null] : (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_Emission_2= ruleEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect ) ;
    public final EObject ruleEffect() throws RecognitionException {
        EObject current = null;

        EObject this_Assignment_0 = null;

        EObject this_PostfixEffect_1 = null;

        EObject this_Emission_2 = null;

        EObject this_HostcodeEffect_3 = null;

        EObject this_ReferenceCallEffect_4 = null;

        EObject this_FunctionCallEffect_5 = null;

        EObject this_PrintCallEffect_6 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:4254:28: ( (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_Emission_2= ruleEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect ) )
            // InternalSCTX.g:4255:1: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_Emission_2= ruleEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect )
            {
            // InternalSCTX.g:4255:1: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_Emission_2= ruleEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect )
            int alt136=7;
            alt136 = dfa136.predict(input);
            switch (alt136) {
                case 1 :
                    // InternalSCTX.g:4256:2: this_Assignment_0= ruleAssignment
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEffectAccess().getAssignmentParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Assignment_0=ruleAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Assignment_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:4269:2: this_PostfixEffect_1= rulePostfixEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEffectAccess().getPostfixEffectParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PostfixEffect_1=rulePostfixEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_PostfixEffect_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:4282:2: this_Emission_2= ruleEmission
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEffectAccess().getEmissionParserRuleCall_2()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Emission_2=ruleEmission();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Emission_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:4295:2: this_HostcodeEffect_3= ruleHostcodeEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEffectAccess().getHostcodeEffectParserRuleCall_3()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_HostcodeEffect_3=ruleHostcodeEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_HostcodeEffect_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalSCTX.g:4308:2: this_ReferenceCallEffect_4= ruleReferenceCallEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEffectAccess().getReferenceCallEffectParserRuleCall_4()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceCallEffect_4=ruleReferenceCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ReferenceCallEffect_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalSCTX.g:4321:2: this_FunctionCallEffect_5= ruleFunctionCallEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEffectAccess().getFunctionCallEffectParserRuleCall_5()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FunctionCallEffect_5=ruleFunctionCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_FunctionCallEffect_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    // InternalSCTX.g:4334:2: this_PrintCallEffect_6= rulePrintCallEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEffectAccess().getPrintCallEffectParserRuleCall_6()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrintCallEffect_6=rulePrintCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_PrintCallEffect_6; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEffect"


    // $ANTLR start "entryRuleEmission"
    // InternalSCTX.g:4353:1: entryRuleEmission returns [EObject current=null] : iv_ruleEmission= ruleEmission EOF ;
    public final EObject entryRuleEmission() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmission = null;


        try {
            // InternalSCTX.g:4354:2: (iv_ruleEmission= ruleEmission EOF )
            // InternalSCTX.g:4355:2: iv_ruleEmission= ruleEmission EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmissionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEmission=ruleEmission();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmission; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmission"


    // $ANTLR start "ruleEmission"
    // InternalSCTX.g:4362:1: ruleEmission returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' )? (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject ruleEmission() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_newValue_3_0 = null;

        EObject lv_schedule_6_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:4365:28: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' )? (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:4366:1: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' )? (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:4366:1: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' )? (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:4366:2: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' )? (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:4366:2: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop137:
            do {
                int alt137=2;
                int LA137_0 = input.LA(1);

                if ( (LA137_0==RULE_COMMENT_ANNOTATION||LA137_0==76) ) {
                    alt137=1;
                }


                switch (alt137) {
            	case 1 :
            	    // InternalSCTX.g:4367:1: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalSCTX.g:4367:1: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalSCTX.g:4368:3: lv_annotations_0_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEmissionAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_70);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEmissionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.QuotedStringAnnotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop137;
                }
            } while (true);

            // InternalSCTX.g:4384:3: ( ( rulePrimeID ) )
            // InternalSCTX.g:4385:1: ( rulePrimeID )
            {
            // InternalSCTX.g:4385:1: ( rulePrimeID )
            // InternalSCTX.g:4386:3: rulePrimeID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getEmissionRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getEmissionAccess().getValuedObjectValuedObjectCrossReference_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_84);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:4402:2: (otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' )?
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==26) ) {
                alt138=1;
            }
            switch (alt138) {
                case 1 :
                    // InternalSCTX.g:4402:4: otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,26,FollowSets000.FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getEmissionAccess().getLeftParenthesisKeyword_2_0());
                          
                    }
                    // InternalSCTX.g:4406:1: ( (lv_newValue_3_0= ruleExpression ) )
                    // InternalSCTX.g:4407:1: (lv_newValue_3_0= ruleExpression )
                    {
                    // InternalSCTX.g:4407:1: (lv_newValue_3_0= ruleExpression )
                    // InternalSCTX.g:4408:3: lv_newValue_3_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getEmissionAccess().getNewValueExpressionParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_25);
                    lv_newValue_3_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getEmissionRule());
                      	        }
                             		set(
                             			current, 
                             			"newValue",
                              		lv_newValue_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,28,FollowSets000.FOLLOW_85); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getEmissionAccess().getRightParenthesisKeyword_2_2());
                          
                    }

                    }
                    break;

            }

            // InternalSCTX.g:4428:3: (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )?
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( (LA140_0==58) ) {
                alt140=1;
            }
            switch (alt140) {
                case 1 :
                    // InternalSCTX.g:4428:5: otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_5=(Token)match(input,58,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getEmissionAccess().getScheduleKeyword_3_0());
                          
                    }
                    // InternalSCTX.g:4432:1: ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+
                    int cnt139=0;
                    loop139:
                    do {
                        int alt139=2;
                        alt139 = dfa139.predict(input);
                        switch (alt139) {
                    	case 1 :
                    	    // InternalSCTX.g:4433:1: (lv_schedule_6_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:4433:1: (lv_schedule_6_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:4434:3: lv_schedule_6_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getEmissionAccess().getScheduleScheduleObjectReferenceParserRuleCall_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_41);
                    	    lv_schedule_6_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getEmissionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"schedule",
                    	              		lv_schedule_6_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt139 >= 1 ) break loop139;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(139, input);
                                throw eee;
                        }
                        cnt139++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmission"


    // $ANTLR start "entryRuleAssignment"
    // InternalSCTX.g:4458:1: entryRuleAssignment returns [EObject current=null] : iv_ruleAssignment= ruleAssignment EOF ;
    public final EObject entryRuleAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssignment = null;


        try {
            // InternalSCTX.g:4459:2: (iv_ruleAssignment= ruleAssignment EOF )
            // InternalSCTX.g:4460:2: iv_ruleAssignment= ruleAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignmentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAssignment=ruleAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssignment; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssignment"


    // $ANTLR start "ruleAssignment"
    // InternalSCTX.g:4467:1: ruleAssignment returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* ( (lv_operator_5_0= ruleAssignOperator ) ) ( (lv_expression_6_0= ruleExpression ) ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject ruleAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_7=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_indices_3_0 = null;

        Enumerator lv_operator_5_0 = null;

        EObject lv_expression_6_0 = null;

        EObject lv_schedule_8_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:4470:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* ( (lv_operator_5_0= ruleAssignOperator ) ) ( (lv_expression_6_0= ruleExpression ) ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:4471:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* ( (lv_operator_5_0= ruleAssignOperator ) ) ( (lv_expression_6_0= ruleExpression ) ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:4471:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* ( (lv_operator_5_0= ruleAssignOperator ) ) ( (lv_expression_6_0= ruleExpression ) ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:4471:2: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* ( (lv_operator_5_0= ruleAssignOperator ) ) ( (lv_expression_6_0= ruleExpression ) ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:4471:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop141:
            do {
                int alt141=2;
                int LA141_0 = input.LA(1);

                if ( (LA141_0==RULE_COMMENT_ANNOTATION||LA141_0==76) ) {
                    alt141=1;
                }


                switch (alt141) {
            	case 1 :
            	    // InternalSCTX.g:4472:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:4472:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:4473:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_70);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAssignmentRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop141;
                }
            } while (true);

            // InternalSCTX.g:4489:3: ( ( rulePrimeID ) )
            // InternalSCTX.g:4490:1: ( rulePrimeID )
            {
            // InternalSCTX.g:4490:1: ( rulePrimeID )
            // InternalSCTX.g:4491:3: rulePrimeID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getAssignmentRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAssignmentAccess().getValuedObjectValuedObjectCrossReference_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_86);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:4507:2: (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )*
            loop142:
            do {
                int alt142=2;
                int LA142_0 = input.LA(1);

                if ( (LA142_0==32) ) {
                    alt142=1;
                }


                switch (alt142) {
            	case 1 :
            	    // InternalSCTX.g:4507:4: otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']'
            	    {
            	    otherlv_2=(Token)match(input,32,FollowSets000.FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getAssignmentAccess().getLeftSquareBracketKeyword_2_0());
            	          
            	    }
            	    // InternalSCTX.g:4511:1: ( (lv_indices_3_0= ruleExpression ) )
            	    // InternalSCTX.g:4512:1: (lv_indices_3_0= ruleExpression )
            	    {
            	    // InternalSCTX.g:4512:1: (lv_indices_3_0= ruleExpression )
            	    // InternalSCTX.g:4513:3: lv_indices_3_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAssignmentAccess().getIndicesExpressionParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_29);
            	    lv_indices_3_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAssignmentRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"indices",
            	              		lv_indices_3_0, 
            	              		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,33,FollowSets000.FOLLOW_86); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_4, grammarAccess.getAssignmentAccess().getRightSquareBracketKeyword_2_2());
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop142;
                }
            } while (true);

            // InternalSCTX.g:4533:3: ( (lv_operator_5_0= ruleAssignOperator ) )
            // InternalSCTX.g:4534:1: (lv_operator_5_0= ruleAssignOperator )
            {
            // InternalSCTX.g:4534:1: (lv_operator_5_0= ruleAssignOperator )
            // InternalSCTX.g:4535:3: lv_operator_5_0= ruleAssignOperator
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_3_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_23);
            lv_operator_5_0=ruleAssignOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAssignmentRule());
              	        }
                     		set(
                     			current, 
                     			"operator",
                      		lv_operator_5_0, 
                      		"de.cau.cs.kieler.kexpressions.keffects.KEffects.AssignOperator");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:4551:2: ( (lv_expression_6_0= ruleExpression ) )
            // InternalSCTX.g:4552:1: (lv_expression_6_0= ruleExpression )
            {
            // InternalSCTX.g:4552:1: (lv_expression_6_0= ruleExpression )
            // InternalSCTX.g:4553:3: lv_expression_6_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_85);
            lv_expression_6_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAssignmentRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_6_0, 
                      		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:4569:2: (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )?
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( (LA144_0==58) ) {
                alt144=1;
            }
            switch (alt144) {
                case 1 :
                    // InternalSCTX.g:4569:4: otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_7=(Token)match(input,58,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getAssignmentAccess().getScheduleKeyword_5_0());
                          
                    }
                    // InternalSCTX.g:4573:1: ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+
                    int cnt143=0;
                    loop143:
                    do {
                        int alt143=2;
                        alt143 = dfa143.predict(input);
                        switch (alt143) {
                    	case 1 :
                    	    // InternalSCTX.g:4574:1: (lv_schedule_8_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:4574:1: (lv_schedule_8_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:4575:3: lv_schedule_8_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAssignmentAccess().getScheduleScheduleObjectReferenceParserRuleCall_5_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_41);
                    	    lv_schedule_8_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAssignmentRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"schedule",
                    	              		lv_schedule_8_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt143 >= 1 ) break loop143;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(143, input);
                                throw eee;
                        }
                        cnt143++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssignment"


    // $ANTLR start "entryRuleSubReferenceAssignment"
    // InternalSCTX.g:4599:1: entryRuleSubReferenceAssignment returns [EObject current=null] : iv_ruleSubReferenceAssignment= ruleSubReferenceAssignment EOF ;
    public final EObject entryRuleSubReferenceAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSubReferenceAssignment = null;


        try {
            // InternalSCTX.g:4600:2: (iv_ruleSubReferenceAssignment= ruleSubReferenceAssignment EOF )
            // InternalSCTX.g:4601:2: iv_ruleSubReferenceAssignment= ruleSubReferenceAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSubReferenceAssignmentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSubReferenceAssignment=ruleSubReferenceAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSubReferenceAssignment; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSubReferenceAssignment"


    // $ANTLR start "ruleSubReferenceAssignment"
    // InternalSCTX.g:4608:1: ruleSubReferenceAssignment returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (lv_operator_7_0= ruleAssignOperator ) ) ( (lv_expression_8_0= ruleExpression ) ) (otherlv_9= 'schedule' ( (lv_schedule_10_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject ruleSubReferenceAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_9=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_indices_3_0 = null;

        EObject lv_subReference_6_0 = null;

        Enumerator lv_operator_7_0 = null;

        EObject lv_expression_8_0 = null;

        EObject lv_schedule_10_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:4611:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (lv_operator_7_0= ruleAssignOperator ) ) ( (lv_expression_8_0= ruleExpression ) ) (otherlv_9= 'schedule' ( (lv_schedule_10_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:4612:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (lv_operator_7_0= ruleAssignOperator ) ) ( (lv_expression_8_0= ruleExpression ) ) (otherlv_9= 'schedule' ( (lv_schedule_10_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:4612:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (lv_operator_7_0= ruleAssignOperator ) ) ( (lv_expression_8_0= ruleExpression ) ) (otherlv_9= 'schedule' ( (lv_schedule_10_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:4612:2: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (lv_operator_7_0= ruleAssignOperator ) ) ( (lv_expression_8_0= ruleExpression ) ) (otherlv_9= 'schedule' ( (lv_schedule_10_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:4612:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop145:
            do {
                int alt145=2;
                int LA145_0 = input.LA(1);

                if ( (LA145_0==RULE_COMMENT_ANNOTATION||LA145_0==76) ) {
                    alt145=1;
                }


                switch (alt145) {
            	case 1 :
            	    // InternalSCTX.g:4613:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:4613:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:4614:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSubReferenceAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_70);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSubReferenceAssignmentRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop145;
                }
            } while (true);

            // InternalSCTX.g:4630:3: ( ( rulePrimeID ) )
            // InternalSCTX.g:4631:1: ( rulePrimeID )
            {
            // InternalSCTX.g:4631:1: ( rulePrimeID )
            // InternalSCTX.g:4632:3: rulePrimeID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getSubReferenceAssignmentRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSubReferenceAssignmentAccess().getValuedObjectValuedObjectCrossReference_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_87);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:4648:2: (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )*
            loop146:
            do {
                int alt146=2;
                int LA146_0 = input.LA(1);

                if ( (LA146_0==32) ) {
                    alt146=1;
                }


                switch (alt146) {
            	case 1 :
            	    // InternalSCTX.g:4648:4: otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']'
            	    {
            	    otherlv_2=(Token)match(input,32,FollowSets000.FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getSubReferenceAssignmentAccess().getLeftSquareBracketKeyword_2_0());
            	          
            	    }
            	    // InternalSCTX.g:4652:1: ( (lv_indices_3_0= ruleExpression ) )
            	    // InternalSCTX.g:4653:1: (lv_indices_3_0= ruleExpression )
            	    {
            	    // InternalSCTX.g:4653:1: (lv_indices_3_0= ruleExpression )
            	    // InternalSCTX.g:4654:3: lv_indices_3_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSubReferenceAssignmentAccess().getIndicesExpressionParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_29);
            	    lv_indices_3_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSubReferenceAssignmentRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"indices",
            	              		lv_indices_3_0, 
            	              		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,33,FollowSets000.FOLLOW_87); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_4, grammarAccess.getSubReferenceAssignmentAccess().getRightSquareBracketKeyword_2_2());
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop146;
                }
            } while (true);

            // InternalSCTX.g:4674:3: (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )?
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( (LA147_0==62) ) {
                alt147=1;
            }
            switch (alt147) {
                case 1 :
                    // InternalSCTX.g:4674:5: otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) )
                    {
                    otherlv_5=(Token)match(input,62,FollowSets000.FOLLOW_88); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getSubReferenceAssignmentAccess().getFullStopKeyword_3_0());
                          
                    }
                    // InternalSCTX.g:4678:1: ( (lv_subReference_6_0= ruleValuedObjectReference ) )
                    // InternalSCTX.g:4679:1: (lv_subReference_6_0= ruleValuedObjectReference )
                    {
                    // InternalSCTX.g:4679:1: (lv_subReference_6_0= ruleValuedObjectReference )
                    // InternalSCTX.g:4680:3: lv_subReference_6_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSubReferenceAssignmentAccess().getSubReferenceValuedObjectReferenceParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_86);
                    lv_subReference_6_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSubReferenceAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"subReference",
                              		lv_subReference_6_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:4696:4: ( (lv_operator_7_0= ruleAssignOperator ) )
            // InternalSCTX.g:4697:1: (lv_operator_7_0= ruleAssignOperator )
            {
            // InternalSCTX.g:4697:1: (lv_operator_7_0= ruleAssignOperator )
            // InternalSCTX.g:4698:3: lv_operator_7_0= ruleAssignOperator
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSubReferenceAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_4_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_23);
            lv_operator_7_0=ruleAssignOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSubReferenceAssignmentRule());
              	        }
                     		set(
                     			current, 
                     			"operator",
                      		lv_operator_7_0, 
                      		"de.cau.cs.kieler.kexpressions.keffects.KEffects.AssignOperator");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:4714:2: ( (lv_expression_8_0= ruleExpression ) )
            // InternalSCTX.g:4715:1: (lv_expression_8_0= ruleExpression )
            {
            // InternalSCTX.g:4715:1: (lv_expression_8_0= ruleExpression )
            // InternalSCTX.g:4716:3: lv_expression_8_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSubReferenceAssignmentAccess().getExpressionExpressionParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_85);
            lv_expression_8_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSubReferenceAssignmentRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_8_0, 
                      		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:4732:2: (otherlv_9= 'schedule' ( (lv_schedule_10_0= ruleScheduleObjectReference ) )+ )?
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( (LA149_0==58) ) {
                alt149=1;
            }
            switch (alt149) {
                case 1 :
                    // InternalSCTX.g:4732:4: otherlv_9= 'schedule' ( (lv_schedule_10_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_9=(Token)match(input,58,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getSubReferenceAssignmentAccess().getScheduleKeyword_6_0());
                          
                    }
                    // InternalSCTX.g:4736:1: ( (lv_schedule_10_0= ruleScheduleObjectReference ) )+
                    int cnt148=0;
                    loop148:
                    do {
                        int alt148=2;
                        alt148 = dfa148.predict(input);
                        switch (alt148) {
                    	case 1 :
                    	    // InternalSCTX.g:4737:1: (lv_schedule_10_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:4737:1: (lv_schedule_10_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:4738:3: lv_schedule_10_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getSubReferenceAssignmentAccess().getScheduleScheduleObjectReferenceParserRuleCall_6_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_41);
                    	    lv_schedule_10_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getSubReferenceAssignmentRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"schedule",
                    	              		lv_schedule_10_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt148 >= 1 ) break loop148;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(148, input);
                                throw eee;
                        }
                        cnt148++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubReferenceAssignment"


    // $ANTLR start "entryRulePostfixEffect"
    // InternalSCTX.g:4762:1: entryRulePostfixEffect returns [EObject current=null] : iv_rulePostfixEffect= rulePostfixEffect EOF ;
    public final EObject entryRulePostfixEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePostfixEffect = null;


        try {
            // InternalSCTX.g:4763:2: (iv_rulePostfixEffect= rulePostfixEffect EOF )
            // InternalSCTX.g:4764:2: iv_rulePostfixEffect= rulePostfixEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPostfixEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePostfixEffect=rulePostfixEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePostfixEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePostfixEffect"


    // $ANTLR start "rulePostfixEffect"
    // InternalSCTX.g:4771:1: rulePostfixEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* ( (lv_operator_5_0= rulePostfixOperator ) ) (otherlv_6= 'schedule' ( (lv_schedule_7_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject rulePostfixEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_indices_3_0 = null;

        Enumerator lv_operator_5_0 = null;

        EObject lv_schedule_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:4774:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* ( (lv_operator_5_0= rulePostfixOperator ) ) (otherlv_6= 'schedule' ( (lv_schedule_7_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:4775:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* ( (lv_operator_5_0= rulePostfixOperator ) ) (otherlv_6= 'schedule' ( (lv_schedule_7_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:4775:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* ( (lv_operator_5_0= rulePostfixOperator ) ) (otherlv_6= 'schedule' ( (lv_schedule_7_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:4775:2: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* ( (lv_operator_5_0= rulePostfixOperator ) ) (otherlv_6= 'schedule' ( (lv_schedule_7_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:4775:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop150:
            do {
                int alt150=2;
                int LA150_0 = input.LA(1);

                if ( (LA150_0==RULE_COMMENT_ANNOTATION||LA150_0==76) ) {
                    alt150=1;
                }


                switch (alt150) {
            	case 1 :
            	    // InternalSCTX.g:4776:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:4776:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:4777:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPostfixEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_70);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop150;
                }
            } while (true);

            // InternalSCTX.g:4793:3: ( ( rulePrimeID ) )
            // InternalSCTX.g:4794:1: ( rulePrimeID )
            {
            // InternalSCTX.g:4794:1: ( rulePrimeID )
            // InternalSCTX.g:4795:3: rulePrimeID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getPostfixEffectRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPostfixEffectAccess().getValuedObjectValuedObjectCrossReference_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_89);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:4811:2: (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )*
            loop151:
            do {
                int alt151=2;
                int LA151_0 = input.LA(1);

                if ( (LA151_0==32) ) {
                    alt151=1;
                }


                switch (alt151) {
            	case 1 :
            	    // InternalSCTX.g:4811:4: otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']'
            	    {
            	    otherlv_2=(Token)match(input,32,FollowSets000.FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getPostfixEffectAccess().getLeftSquareBracketKeyword_2_0());
            	          
            	    }
            	    // InternalSCTX.g:4815:1: ( (lv_indices_3_0= ruleExpression ) )
            	    // InternalSCTX.g:4816:1: (lv_indices_3_0= ruleExpression )
            	    {
            	    // InternalSCTX.g:4816:1: (lv_indices_3_0= ruleExpression )
            	    // InternalSCTX.g:4817:3: lv_indices_3_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPostfixEffectAccess().getIndicesExpressionParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_29);
            	    lv_indices_3_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"indices",
            	              		lv_indices_3_0, 
            	              		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,33,FollowSets000.FOLLOW_89); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_4, grammarAccess.getPostfixEffectAccess().getRightSquareBracketKeyword_2_2());
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop151;
                }
            } while (true);

            // InternalSCTX.g:4837:3: ( (lv_operator_5_0= rulePostfixOperator ) )
            // InternalSCTX.g:4838:1: (lv_operator_5_0= rulePostfixOperator )
            {
            // InternalSCTX.g:4838:1: (lv_operator_5_0= rulePostfixOperator )
            // InternalSCTX.g:4839:3: lv_operator_5_0= rulePostfixOperator
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPostfixEffectAccess().getOperatorPostfixOperatorEnumRuleCall_3_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_85);
            lv_operator_5_0=rulePostfixOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
              	        }
                     		set(
                     			current, 
                     			"operator",
                      		lv_operator_5_0, 
                      		"de.cau.cs.kieler.kexpressions.keffects.KEffects.PostfixOperator");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:4855:2: (otherlv_6= 'schedule' ( (lv_schedule_7_0= ruleScheduleObjectReference ) )+ )?
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( (LA153_0==58) ) {
                alt153=1;
            }
            switch (alt153) {
                case 1 :
                    // InternalSCTX.g:4855:4: otherlv_6= 'schedule' ( (lv_schedule_7_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_6=(Token)match(input,58,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getPostfixEffectAccess().getScheduleKeyword_4_0());
                          
                    }
                    // InternalSCTX.g:4859:1: ( (lv_schedule_7_0= ruleScheduleObjectReference ) )+
                    int cnt152=0;
                    loop152:
                    do {
                        int alt152=2;
                        alt152 = dfa152.predict(input);
                        switch (alt152) {
                    	case 1 :
                    	    // InternalSCTX.g:4860:1: (lv_schedule_7_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:4860:1: (lv_schedule_7_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:4861:3: lv_schedule_7_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPostfixEffectAccess().getScheduleScheduleObjectReferenceParserRuleCall_4_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_41);
                    	    lv_schedule_7_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"schedule",
                    	              		lv_schedule_7_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt152 >= 1 ) break loop152;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(152, input);
                                throw eee;
                        }
                        cnt152++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePostfixEffect"


    // $ANTLR start "entryRuleHostcodeEffect"
    // InternalSCTX.g:4885:1: entryRuleHostcodeEffect returns [EObject current=null] : iv_ruleHostcodeEffect= ruleHostcodeEffect EOF ;
    public final EObject entryRuleHostcodeEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHostcodeEffect = null;


        try {
            // InternalSCTX.g:4886:2: (iv_ruleHostcodeEffect= ruleHostcodeEffect EOF )
            // InternalSCTX.g:4887:2: iv_ruleHostcodeEffect= ruleHostcodeEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHostcodeEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleHostcodeEffect=ruleHostcodeEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHostcodeEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHostcodeEffect"


    // $ANTLR start "ruleHostcodeEffect"
    // InternalSCTX.g:4894:1: ruleHostcodeEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) ;
    public final EObject ruleHostcodeEffect() throws RecognitionException {
        EObject current = null;

        Token lv_text_1_0=null;
        EObject lv_annotations_0_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:4897:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) )
            // InternalSCTX.g:4898:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            {
            // InternalSCTX.g:4898:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            // InternalSCTX.g:4898:2: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) )
            {
            // InternalSCTX.g:4898:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop154:
            do {
                int alt154=2;
                int LA154_0 = input.LA(1);

                if ( (LA154_0==RULE_COMMENT_ANNOTATION||LA154_0==76) ) {
                    alt154=1;
                }


                switch (alt154) {
            	case 1 :
            	    // InternalSCTX.g:4899:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:4899:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:4900:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getHostcodeEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_90);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getHostcodeEffectRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop154;
                }
            } while (true);

            // InternalSCTX.g:4916:3: ( (lv_text_1_0= RULE_HOSTCODE ) )
            // InternalSCTX.g:4917:1: (lv_text_1_0= RULE_HOSTCODE )
            {
            // InternalSCTX.g:4917:1: (lv_text_1_0= RULE_HOSTCODE )
            // InternalSCTX.g:4918:3: lv_text_1_0= RULE_HOSTCODE
            {
            lv_text_1_0=(Token)match(input,RULE_HOSTCODE,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_text_1_0, grammarAccess.getHostcodeEffectAccess().getTextHOSTCODETerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getHostcodeEffectRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"text",
                      		lv_text_1_0, 
                      		"de.cau.cs.kieler.kexpressions.KExpressions.HOSTCODE");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHostcodeEffect"


    // $ANTLR start "entryRuleReferenceCallEffect"
    // InternalSCTX.g:4942:1: entryRuleReferenceCallEffect returns [EObject current=null] : iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF ;
    public final EObject entryRuleReferenceCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceCallEffect = null;


        try {
            // InternalSCTX.g:4943:2: (iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF )
            // InternalSCTX.g:4944:2: iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceCallEffect=ruleReferenceCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceCallEffect"


    // $ANTLR start "ruleReferenceCallEffect"
    // InternalSCTX.g:4951:1: ruleReferenceCallEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) ;
    public final EObject ruleReferenceCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:4954:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) )
            // InternalSCTX.g:4955:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) )
            {
            // InternalSCTX.g:4955:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) )
            // InternalSCTX.g:4955:2: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' )
            {
            // InternalSCTX.g:4955:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop155:
            do {
                int alt155=2;
                int LA155_0 = input.LA(1);

                if ( (LA155_0==RULE_COMMENT_ANNOTATION||LA155_0==76) ) {
                    alt155=1;
                }


                switch (alt155) {
            	case 1 :
            	    // InternalSCTX.g:4956:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:4956:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:4957:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_70);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop155;
                }
            } while (true);

            // InternalSCTX.g:4973:3: ( ( rulePrimeID ) )
            // InternalSCTX.g:4974:1: ( rulePrimeID )
            {
            // InternalSCTX.g:4974:1: ( rulePrimeID )
            // InternalSCTX.g:4975:3: rulePrimeID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getReferenceCallEffectRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getValuedObjectValuedObjectCrossReference_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_91);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:4991:2: ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' )
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==26) ) {
                alt157=1;
            }
            else if ( (LA157_0==63) ) {
                alt157=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 157, 0, input);

                throw nvae;
            }
            switch (alt157) {
                case 1 :
                    // InternalSCTX.g:4991:3: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
                    {
                    // InternalSCTX.g:4991:3: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
                    // InternalSCTX.g:4991:5: otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')'
                    {
                    otherlv_2=(Token)match(input,26,FollowSets000.FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getReferenceCallEffectAccess().getLeftParenthesisKeyword_2_0_0());
                          
                    }
                    // InternalSCTX.g:4995:1: ( (lv_parameters_3_0= ruleParameter ) )
                    // InternalSCTX.g:4996:1: (lv_parameters_3_0= ruleParameter )
                    {
                    // InternalSCTX.g:4996:1: (lv_parameters_3_0= ruleParameter )
                    // InternalSCTX.g:4997:3: lv_parameters_3_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getParametersParameterParserRuleCall_2_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_24);
                    lv_parameters_3_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                      	        }
                             		add(
                             			current, 
                             			"parameters",
                              		lv_parameters_3_0, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:5013:2: (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )*
                    loop156:
                    do {
                        int alt156=2;
                        int LA156_0 = input.LA(1);

                        if ( (LA156_0==27) ) {
                            alt156=1;
                        }


                        switch (alt156) {
                    	case 1 :
                    	    // InternalSCTX.g:5013:4: otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) )
                    	    {
                    	    otherlv_4=(Token)match(input,27,FollowSets000.FOLLOW_23); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getReferenceCallEffectAccess().getCommaKeyword_2_0_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:5017:1: ( (lv_parameters_5_0= ruleParameter ) )
                    	    // InternalSCTX.g:5018:1: (lv_parameters_5_0= ruleParameter )
                    	    {
                    	    // InternalSCTX.g:5018:1: (lv_parameters_5_0= ruleParameter )
                    	    // InternalSCTX.g:5019:3: lv_parameters_5_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getParametersParameterParserRuleCall_2_0_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_24);
                    	    lv_parameters_5_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"parameters",
                    	              		lv_parameters_5_0, 
                    	              		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop156;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getReferenceCallEffectAccess().getRightParenthesisKeyword_2_0_3());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:5040:7: otherlv_7= '()'
                    {
                    otherlv_7=(Token)match(input,63,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getReferenceCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_2_1());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceCallEffect"


    // $ANTLR start "entryRuleFunctionCallEffect"
    // InternalSCTX.g:5052:1: entryRuleFunctionCallEffect returns [EObject current=null] : iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF ;
    public final EObject entryRuleFunctionCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionCallEffect = null;


        try {
            // InternalSCTX.g:5053:2: (iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF )
            // InternalSCTX.g:5054:2: iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunctionCallEffect=ruleFunctionCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionCallEffect"


    // $ANTLR start "ruleFunctionCallEffect"
    // InternalSCTX.g:5061:1: ruleFunctionCallEffect returns [EObject current=null] : ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ) | (otherlv_9= '<' ( (lv_functionName_10_0= RULE_ID ) ) ( (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' ) | otherlv_16= '()' ) otherlv_17= '>' ) ) ;
    public final EObject ruleFunctionCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_functionName_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token lv_functionName_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parameters_4_0 = null;

        EObject lv_parameters_6_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_parameters_14_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5064:28: ( ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ) | (otherlv_9= '<' ( (lv_functionName_10_0= RULE_ID ) ) ( (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' ) | otherlv_16= '()' ) otherlv_17= '>' ) ) )
            // InternalSCTX.g:5065:1: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ) | (otherlv_9= '<' ( (lv_functionName_10_0= RULE_ID ) ) ( (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' ) | otherlv_16= '()' ) otherlv_17= '>' ) )
            {
            // InternalSCTX.g:5065:1: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ) | (otherlv_9= '<' ( (lv_functionName_10_0= RULE_ID ) ) ( (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' ) | otherlv_16= '()' ) otherlv_17= '>' ) )
            int alt163=2;
            int LA163_0 = input.LA(1);

            if ( (LA163_0==RULE_COMMENT_ANNOTATION||LA163_0==57||LA163_0==76) ) {
                alt163=1;
            }
            else if ( (LA163_0==64) ) {
                alt163=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 163, 0, input);

                throw nvae;
            }
            switch (alt163) {
                case 1 :
                    // InternalSCTX.g:5065:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
                    {
                    // InternalSCTX.g:5065:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
                    // InternalSCTX.g:5065:3: ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
                    {
                    // InternalSCTX.g:5065:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
                    loop158:
                    do {
                        int alt158=2;
                        int LA158_0 = input.LA(1);

                        if ( (LA158_0==RULE_COMMENT_ANNOTATION||LA158_0==76) ) {
                            alt158=1;
                        }


                        switch (alt158) {
                    	case 1 :
                    	    // InternalSCTX.g:5066:1: (lv_annotations_0_0= ruleAnnotation )
                    	    {
                    	    // InternalSCTX.g:5066:1: (lv_annotations_0_0= ruleAnnotation )
                    	    // InternalSCTX.g:5067:3: lv_annotations_0_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_92);
                    	    lv_annotations_0_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"annotations",
                    	              		lv_annotations_0_0, 
                    	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop158;
                        }
                    } while (true);

                    // InternalSCTX.g:5083:3: (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
                    // InternalSCTX.g:5083:5: otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
                    {
                    otherlv_1=(Token)match(input,57,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getFunctionCallEffectAccess().getExternKeyword_0_1_0());
                          
                    }
                    // InternalSCTX.g:5087:1: ( (lv_functionName_2_0= RULE_ID ) )
                    // InternalSCTX.g:5088:1: (lv_functionName_2_0= RULE_ID )
                    {
                    // InternalSCTX.g:5088:1: (lv_functionName_2_0= RULE_ID )
                    // InternalSCTX.g:5089:3: lv_functionName_2_0= RULE_ID
                    {
                    lv_functionName_2_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_functionName_2_0, grammarAccess.getFunctionCallEffectAccess().getFunctionNameIDTerminalRuleCall_0_1_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getFunctionCallEffectRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"functionName",
                              		lv_functionName_2_0, 
                              		"org.eclipse.xtext.common.Terminals.ID");
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:5105:2: ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
                    int alt160=2;
                    int LA160_0 = input.LA(1);

                    if ( (LA160_0==26) ) {
                        alt160=1;
                    }
                    else if ( (LA160_0==63) ) {
                        alt160=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 160, 0, input);

                        throw nvae;
                    }
                    switch (alt160) {
                        case 1 :
                            // InternalSCTX.g:5105:3: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                            {
                            // InternalSCTX.g:5105:3: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                            // InternalSCTX.g:5105:5: otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')'
                            {
                            otherlv_3=(Token)match(input,26,FollowSets000.FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_3, grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisKeyword_0_1_2_0_0());
                                  
                            }
                            // InternalSCTX.g:5109:1: ( (lv_parameters_4_0= ruleParameter ) )
                            // InternalSCTX.g:5110:1: (lv_parameters_4_0= ruleParameter )
                            {
                            // InternalSCTX.g:5110:1: (lv_parameters_4_0= ruleParameter )
                            // InternalSCTX.g:5111:3: lv_parameters_4_0= ruleParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_0_1_2_0_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_24);
                            lv_parameters_4_0=ruleParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"parameters",
                                      		lv_parameters_4_0, 
                                      		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalSCTX.g:5127:2: (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )*
                            loop159:
                            do {
                                int alt159=2;
                                int LA159_0 = input.LA(1);

                                if ( (LA159_0==27) ) {
                                    alt159=1;
                                }


                                switch (alt159) {
                            	case 1 :
                            	    // InternalSCTX.g:5127:4: otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) )
                            	    {
                            	    otherlv_5=(Token)match(input,27,FollowSets000.FOLLOW_23); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_5, grammarAccess.getFunctionCallEffectAccess().getCommaKeyword_0_1_2_0_2_0());
                            	          
                            	    }
                            	    // InternalSCTX.g:5131:1: ( (lv_parameters_6_0= ruleParameter ) )
                            	    // InternalSCTX.g:5132:1: (lv_parameters_6_0= ruleParameter )
                            	    {
                            	    // InternalSCTX.g:5132:1: (lv_parameters_6_0= ruleParameter )
                            	    // InternalSCTX.g:5133:3: lv_parameters_6_0= ruleParameter
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_0_1_2_0_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_24);
                            	    lv_parameters_6_0=ruleParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"parameters",
                            	              		lv_parameters_6_0, 
                            	              		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop159;
                                }
                            } while (true);

                            otherlv_7=(Token)match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_7, grammarAccess.getFunctionCallEffectAccess().getRightParenthesisKeyword_0_1_2_0_3());
                                  
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:5154:7: otherlv_8= '()'
                            {
                            otherlv_8=(Token)match(input,63,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_8, grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_0_1_2_1());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:5159:6: (otherlv_9= '<' ( (lv_functionName_10_0= RULE_ID ) ) ( (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' ) | otherlv_16= '()' ) otherlv_17= '>' )
                    {
                    // InternalSCTX.g:5159:6: (otherlv_9= '<' ( (lv_functionName_10_0= RULE_ID ) ) ( (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' ) | otherlv_16= '()' ) otherlv_17= '>' )
                    // InternalSCTX.g:5159:8: otherlv_9= '<' ( (lv_functionName_10_0= RULE_ID ) ) ( (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' ) | otherlv_16= '()' ) otherlv_17= '>'
                    {
                    otherlv_9=(Token)match(input,64,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getFunctionCallEffectAccess().getLessThanSignKeyword_1_0());
                          
                    }
                    // InternalSCTX.g:5163:1: ( (lv_functionName_10_0= RULE_ID ) )
                    // InternalSCTX.g:5164:1: (lv_functionName_10_0= RULE_ID )
                    {
                    // InternalSCTX.g:5164:1: (lv_functionName_10_0= RULE_ID )
                    // InternalSCTX.g:5165:3: lv_functionName_10_0= RULE_ID
                    {
                    lv_functionName_10_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_functionName_10_0, grammarAccess.getFunctionCallEffectAccess().getFunctionNameIDTerminalRuleCall_1_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getFunctionCallEffectRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"functionName",
                              		lv_functionName_10_0, 
                              		"org.eclipse.xtext.common.Terminals.ID");
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:5181:2: ( (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' ) | otherlv_16= '()' )
                    int alt162=2;
                    int LA162_0 = input.LA(1);

                    if ( (LA162_0==26) ) {
                        alt162=1;
                    }
                    else if ( (LA162_0==63) ) {
                        alt162=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 162, 0, input);

                        throw nvae;
                    }
                    switch (alt162) {
                        case 1 :
                            // InternalSCTX.g:5181:3: (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' )
                            {
                            // InternalSCTX.g:5181:3: (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' )
                            // InternalSCTX.g:5181:5: otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')'
                            {
                            otherlv_11=(Token)match(input,26,FollowSets000.FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_11, grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisKeyword_1_2_0_0());
                                  
                            }
                            // InternalSCTX.g:5185:1: ( (lv_parameters_12_0= ruleParameter ) )
                            // InternalSCTX.g:5186:1: (lv_parameters_12_0= ruleParameter )
                            {
                            // InternalSCTX.g:5186:1: (lv_parameters_12_0= ruleParameter )
                            // InternalSCTX.g:5187:3: lv_parameters_12_0= ruleParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_1_2_0_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_24);
                            lv_parameters_12_0=ruleParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"parameters",
                                      		lv_parameters_12_0, 
                                      		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalSCTX.g:5203:2: (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )*
                            loop161:
                            do {
                                int alt161=2;
                                int LA161_0 = input.LA(1);

                                if ( (LA161_0==27) ) {
                                    alt161=1;
                                }


                                switch (alt161) {
                            	case 1 :
                            	    // InternalSCTX.g:5203:4: otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) )
                            	    {
                            	    otherlv_13=(Token)match(input,27,FollowSets000.FOLLOW_23); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_13, grammarAccess.getFunctionCallEffectAccess().getCommaKeyword_1_2_0_2_0());
                            	          
                            	    }
                            	    // InternalSCTX.g:5207:1: ( (lv_parameters_14_0= ruleParameter ) )
                            	    // InternalSCTX.g:5208:1: (lv_parameters_14_0= ruleParameter )
                            	    {
                            	    // InternalSCTX.g:5208:1: (lv_parameters_14_0= ruleParameter )
                            	    // InternalSCTX.g:5209:3: lv_parameters_14_0= ruleParameter
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_1_2_0_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_24);
                            	    lv_parameters_14_0=ruleParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"parameters",
                            	              		lv_parameters_14_0, 
                            	              		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop161;
                                }
                            } while (true);

                            otherlv_15=(Token)match(input,28,FollowSets000.FOLLOW_93); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_15, grammarAccess.getFunctionCallEffectAccess().getRightParenthesisKeyword_1_2_0_3());
                                  
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:5230:7: otherlv_16= '()'
                            {
                            otherlv_16=(Token)match(input,63,FollowSets000.FOLLOW_93); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_16, grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_1_2_1());
                                  
                            }

                            }
                            break;

                    }

                    otherlv_17=(Token)match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_17, grammarAccess.getFunctionCallEffectAccess().getGreaterThanSignKeyword_1_3());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionCallEffect"


    // $ANTLR start "entryRulePrintCallEffect"
    // InternalSCTX.g:5246:1: entryRulePrintCallEffect returns [EObject current=null] : iv_rulePrintCallEffect= rulePrintCallEffect EOF ;
    public final EObject entryRulePrintCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrintCallEffect = null;


        try {
            // InternalSCTX.g:5247:2: (iv_rulePrintCallEffect= rulePrintCallEffect EOF )
            // InternalSCTX.g:5248:2: iv_rulePrintCallEffect= rulePrintCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrintCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrintCallEffect=rulePrintCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrintCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrintCallEffect"


    // $ANTLR start "rulePrintCallEffect"
    // InternalSCTX.g:5255:1: rulePrintCallEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* ) ;
    public final EObject rulePrintCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parameters_2_0 = null;

        EObject lv_parameters_4_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5258:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* ) )
            // InternalSCTX.g:5259:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* )
            {
            // InternalSCTX.g:5259:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* )
            // InternalSCTX.g:5259:2: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )*
            {
            // InternalSCTX.g:5259:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop164:
            do {
                int alt164=2;
                int LA164_0 = input.LA(1);

                if ( (LA164_0==RULE_COMMENT_ANNOTATION||LA164_0==76) ) {
                    alt164=1;
                }


                switch (alt164) {
            	case 1 :
            	    // InternalSCTX.g:5260:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:5260:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:5261:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPrintCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_94);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop164;
                }
            } while (true);

            otherlv_1=(Token)match(input,66,FollowSets000.FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPrintCallEffectAccess().getPrintKeyword_1());
                  
            }
            // InternalSCTX.g:5281:1: ( (lv_parameters_2_0= ruleParameter ) )
            // InternalSCTX.g:5282:1: (lv_parameters_2_0= ruleParameter )
            {
            // InternalSCTX.g:5282:1: (lv_parameters_2_0= ruleParameter )
            // InternalSCTX.g:5283:3: lv_parameters_2_0= ruleParameter
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPrintCallEffectAccess().getParametersParameterParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_95);
            lv_parameters_2_0=ruleParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
              	        }
                     		add(
                     			current, 
                     			"parameters",
                      		lv_parameters_2_0, 
                      		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:5299:2: (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )*
            loop165:
            do {
                int alt165=2;
                int LA165_0 = input.LA(1);

                if ( (LA165_0==27) ) {
                    alt165=1;
                }


                switch (alt165) {
            	case 1 :
            	    // InternalSCTX.g:5299:4: otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) )
            	    {
            	    otherlv_3=(Token)match(input,27,FollowSets000.FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getPrintCallEffectAccess().getCommaKeyword_3_0());
            	          
            	    }
            	    // InternalSCTX.g:5303:1: ( (lv_parameters_4_0= ruleParameter ) )
            	    // InternalSCTX.g:5304:1: (lv_parameters_4_0= ruleParameter )
            	    {
            	    // InternalSCTX.g:5304:1: (lv_parameters_4_0= ruleParameter )
            	    // InternalSCTX.g:5305:3: lv_parameters_4_0= ruleParameter
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPrintCallEffectAccess().getParametersParameterParserRuleCall_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_95);
            	    lv_parameters_4_0=ruleParameter();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"parameters",
            	              		lv_parameters_4_0, 
            	              		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop165;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrintCallEffect"


    // $ANTLR start "entryRuleExpression"
    // InternalSCTX.g:5331:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalSCTX.g:5332:2: (iv_ruleExpression= ruleExpression EOF )
            // InternalSCTX.g:5333:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalSCTX.g:5340:1: ruleExpression returns [EObject current=null] : ( (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_BoolExpression_0 = null;

        EObject this_ValuedExpression_1 = null;

        EObject lv_schedule_3_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5343:28: ( ( (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:5344:1: ( (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:5344:1: ( (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:5344:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:5344:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression )
            int alt166=2;
            alt166 = dfa166.predict(input);
            switch (alt166) {
                case 1 :
                    // InternalSCTX.g:5345:2: this_BoolExpression_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExpressionAccess().getBoolExpressionParserRuleCall_0_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_85);
                    this_BoolExpression_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_BoolExpression_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:5358:2: this_ValuedExpression_1= ruleValuedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExpressionAccess().getValuedExpressionParserRuleCall_0_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_85);
                    this_ValuedExpression_1=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ValuedExpression_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            // InternalSCTX.g:5369:2: (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )?
            int alt168=2;
            alt168 = dfa168.predict(input);
            switch (alt168) {
                case 1 :
                    // InternalSCTX.g:5369:4: otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_2=(Token)match(input,58,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getExpressionAccess().getScheduleKeyword_1_0());
                          
                    }
                    // InternalSCTX.g:5373:1: ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+
                    int cnt167=0;
                    loop167:
                    do {
                        int alt167=2;
                        alt167 = dfa167.predict(input);
                        switch (alt167) {
                    	case 1 :
                    	    // InternalSCTX.g:5374:1: (lv_schedule_3_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:5374:1: (lv_schedule_3_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:5375:3: lv_schedule_3_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getExpressionAccess().getScheduleScheduleObjectReferenceParserRuleCall_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_41);
                    	    lv_schedule_3_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"schedule",
                    	              		lv_schedule_3_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt167 >= 1 ) break loop167;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(167, input);
                                throw eee;
                        }
                        cnt167++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleBoolExpression"
    // InternalSCTX.g:5399:1: entryRuleBoolExpression returns [EObject current=null] : iv_ruleBoolExpression= ruleBoolExpression EOF ;
    public final EObject entryRuleBoolExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBoolExpression = null;


        try {
            // InternalSCTX.g:5400:2: (iv_ruleBoolExpression= ruleBoolExpression EOF )
            // InternalSCTX.g:5401:2: iv_ruleBoolExpression= ruleBoolExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBoolExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBoolExpression=ruleBoolExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBoolExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBoolExpression"


    // $ANTLR start "ruleBoolExpression"
    // InternalSCTX.g:5408:1: ruleBoolExpression returns [EObject current=null] : this_LogicalOrExpression_0= ruleLogicalOrExpression ;
    public final EObject ruleBoolExpression() throws RecognitionException {
        EObject current = null;

        EObject this_LogicalOrExpression_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5411:28: (this_LogicalOrExpression_0= ruleLogicalOrExpression )
            // InternalSCTX.g:5413:2: this_LogicalOrExpression_0= ruleLogicalOrExpression
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBoolExpressionAccess().getLogicalOrExpressionParserRuleCall()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_LogicalOrExpression_0=ruleLogicalOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_LogicalOrExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBoolExpression"


    // $ANTLR start "entryRuleLogicalOrExpression"
    // InternalSCTX.g:5432:1: entryRuleLogicalOrExpression returns [EObject current=null] : iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF ;
    public final EObject entryRuleLogicalOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalOrExpression = null;


        try {
            // InternalSCTX.g:5433:2: (iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF )
            // InternalSCTX.g:5434:2: iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLogicalOrExpression=ruleLogicalOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalOrExpression"


    // $ANTLR start "ruleLogicalOrExpression"
    // InternalSCTX.g:5441:1: ruleLogicalOrExpression returns [EObject current=null] : (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? ) ;
    public final EObject ruleLogicalOrExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_LogicalAndExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5444:28: ( (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? ) )
            // InternalSCTX.g:5445:1: (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? )
            {
            // InternalSCTX.g:5445:1: (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? )
            // InternalSCTX.g:5446:2: this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_96);
            this_LogicalAndExpression_0=ruleLogicalAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_LogicalAndExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSCTX.g:5457:1: ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )?
            int alt170=2;
            int LA170_0 = input.LA(1);

            if ( (LA170_0==67) ) {
                alt170=1;
            }
            switch (alt170) {
                case 1 :
                    // InternalSCTX.g:5457:2: () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )*
                    {
                    // InternalSCTX.g:5457:2: ()
                    // InternalSCTX.g:5458:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getLogicalOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:5466:2: ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) )
                    // InternalSCTX.g:5466:3: ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) )
                    {
                    // InternalSCTX.g:5466:3: ( (lv_operator_2_0= ruleLogicalOrOperator ) )
                    // InternalSCTX.g:5467:1: (lv_operator_2_0= ruleLogicalOrOperator )
                    {
                    // InternalSCTX.g:5467:1: (lv_operator_2_0= ruleLogicalOrOperator )
                    // InternalSCTX.g:5468:3: lv_operator_2_0= ruleLogicalOrOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getOperatorLogicalOrOperatorEnumRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_35);
                    lv_operator_2_0=ruleLogicalOrOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.LogicalOrOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:5484:2: ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) )
                    // InternalSCTX.g:5485:1: (lv_subExpressions_3_0= ruleLogicalAndExpression )
                    {
                    // InternalSCTX.g:5485:1: (lv_subExpressions_3_0= ruleLogicalAndExpression )
                    // InternalSCTX.g:5486:3: lv_subExpressions_3_0= ruleLogicalAndExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_96);
                    lv_subExpressions_3_0=ruleLogicalAndExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.LogicalAndExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:5502:3: (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )*
                    loop169:
                    do {
                        int alt169=2;
                        int LA169_0 = input.LA(1);

                        if ( (LA169_0==67) ) {
                            alt169=1;
                        }


                        switch (alt169) {
                    	case 1 :
                    	    // InternalSCTX.g:5502:5: otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,67,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getLogicalOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:5506:1: ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) )
                    	    // InternalSCTX.g:5507:1: (lv_subExpressions_5_0= ruleLogicalAndExpression )
                    	    {
                    	    // InternalSCTX.g:5507:1: (lv_subExpressions_5_0= ruleLogicalAndExpression )
                    	    // InternalSCTX.g:5508:3: lv_subExpressions_5_0= ruleLogicalAndExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_96);
                    	    lv_subExpressions_5_0=ruleLogicalAndExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"subExpressions",
                    	              		lv_subExpressions_5_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.LogicalAndExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop169;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalOrExpression"


    // $ANTLR start "entryRuleLogicalAndExpression"
    // InternalSCTX.g:5532:1: entryRuleLogicalAndExpression returns [EObject current=null] : iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF ;
    public final EObject entryRuleLogicalAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalAndExpression = null;


        try {
            // InternalSCTX.g:5533:2: (iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF )
            // InternalSCTX.g:5534:2: iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalAndExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLogicalAndExpression=ruleLogicalAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalAndExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalAndExpression"


    // $ANTLR start "ruleLogicalAndExpression"
    // InternalSCTX.g:5541:1: ruleLogicalAndExpression returns [EObject current=null] : (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? ) ;
    public final EObject ruleLogicalAndExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_BitwiseOrExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5544:28: ( (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? ) )
            // InternalSCTX.g:5545:1: (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? )
            {
            // InternalSCTX.g:5545:1: (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? )
            // InternalSCTX.g:5546:2: this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getBitwiseOrExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_97);
            this_BitwiseOrExpression_0=ruleBitwiseOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_BitwiseOrExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSCTX.g:5557:1: ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )?
            int alt172=2;
            int LA172_0 = input.LA(1);

            if ( (LA172_0==68) ) {
                alt172=1;
            }
            switch (alt172) {
                case 1 :
                    // InternalSCTX.g:5557:2: () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )*
                    {
                    // InternalSCTX.g:5557:2: ()
                    // InternalSCTX.g:5558:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getLogicalAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:5566:2: ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) )
                    // InternalSCTX.g:5566:3: ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) )
                    {
                    // InternalSCTX.g:5566:3: ( (lv_operator_2_0= ruleLogicalAndOperator ) )
                    // InternalSCTX.g:5567:1: (lv_operator_2_0= ruleLogicalAndOperator )
                    {
                    // InternalSCTX.g:5567:1: (lv_operator_2_0= ruleLogicalAndOperator )
                    // InternalSCTX.g:5568:3: lv_operator_2_0= ruleLogicalAndOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getOperatorLogicalAndOperatorEnumRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_35);
                    lv_operator_2_0=ruleLogicalAndOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.LogicalAndOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:5584:2: ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) )
                    // InternalSCTX.g:5585:1: (lv_subExpressions_3_0= ruleBitwiseOrExpression )
                    {
                    // InternalSCTX.g:5585:1: (lv_subExpressions_3_0= ruleBitwiseOrExpression )
                    // InternalSCTX.g:5586:3: lv_subExpressions_3_0= ruleBitwiseOrExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsBitwiseOrExpressionParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_97);
                    lv_subExpressions_3_0=ruleBitwiseOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseOrExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:5602:3: (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )*
                    loop171:
                    do {
                        int alt171=2;
                        int LA171_0 = input.LA(1);

                        if ( (LA171_0==68) ) {
                            alt171=1;
                        }


                        switch (alt171) {
                    	case 1 :
                    	    // InternalSCTX.g:5602:5: otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,68,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getLogicalAndExpressionAccess().getAmpersandAmpersandKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:5606:1: ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) )
                    	    // InternalSCTX.g:5607:1: (lv_subExpressions_5_0= ruleBitwiseOrExpression )
                    	    {
                    	    // InternalSCTX.g:5607:1: (lv_subExpressions_5_0= ruleBitwiseOrExpression )
                    	    // InternalSCTX.g:5608:3: lv_subExpressions_5_0= ruleBitwiseOrExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsBitwiseOrExpressionParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_97);
                    	    lv_subExpressions_5_0=ruleBitwiseOrExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"subExpressions",
                    	              		lv_subExpressions_5_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseOrExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop171;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalAndExpression"


    // $ANTLR start "entryRuleBitwiseOrExpression"
    // InternalSCTX.g:5632:1: entryRuleBitwiseOrExpression returns [EObject current=null] : iv_ruleBitwiseOrExpression= ruleBitwiseOrExpression EOF ;
    public final EObject entryRuleBitwiseOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseOrExpression = null;


        try {
            // InternalSCTX.g:5633:2: (iv_ruleBitwiseOrExpression= ruleBitwiseOrExpression EOF )
            // InternalSCTX.g:5634:2: iv_ruleBitwiseOrExpression= ruleBitwiseOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseOrExpression=ruleBitwiseOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseOrExpression"


    // $ANTLR start "ruleBitwiseOrExpression"
    // InternalSCTX.g:5641:1: ruleBitwiseOrExpression returns [EObject current=null] : (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? ) ;
    public final EObject ruleBitwiseOrExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_BitwiseAndExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5644:28: ( (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? ) )
            // InternalSCTX.g:5645:1: (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? )
            {
            // InternalSCTX.g:5645:1: (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? )
            // InternalSCTX.g:5646:2: this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getBitwiseAndExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_98);
            this_BitwiseAndExpression_0=ruleBitwiseAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_BitwiseAndExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSCTX.g:5657:1: ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )?
            int alt174=2;
            int LA174_0 = input.LA(1);

            if ( (LA174_0==69) ) {
                alt174=1;
            }
            switch (alt174) {
                case 1 :
                    // InternalSCTX.g:5657:2: () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )*
                    {
                    // InternalSCTX.g:5657:2: ()
                    // InternalSCTX.g:5658:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getBitwiseOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:5666:2: ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) )
                    // InternalSCTX.g:5666:3: ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) )
                    {
                    // InternalSCTX.g:5666:3: ( (lv_operator_2_0= ruleBitwiseOrOperator ) )
                    // InternalSCTX.g:5667:1: (lv_operator_2_0= ruleBitwiseOrOperator )
                    {
                    // InternalSCTX.g:5667:1: (lv_operator_2_0= ruleBitwiseOrOperator )
                    // InternalSCTX.g:5668:3: lv_operator_2_0= ruleBitwiseOrOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getOperatorBitwiseOrOperatorEnumRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_35);
                    lv_operator_2_0=ruleBitwiseOrOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBitwiseOrExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseOrOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:5684:2: ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) )
                    // InternalSCTX.g:5685:1: (lv_subExpressions_3_0= ruleBitwiseAndExpression )
                    {
                    // InternalSCTX.g:5685:1: (lv_subExpressions_3_0= ruleBitwiseAndExpression )
                    // InternalSCTX.g:5686:3: lv_subExpressions_3_0= ruleBitwiseAndExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_98);
                    lv_subExpressions_3_0=ruleBitwiseAndExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBitwiseOrExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:5702:3: (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )*
                    loop173:
                    do {
                        int alt173=2;
                        int LA173_0 = input.LA(1);

                        if ( (LA173_0==69) ) {
                            alt173=1;
                        }


                        switch (alt173) {
                    	case 1 :
                    	    // InternalSCTX.g:5702:5: otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,69,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getBitwiseOrExpressionAccess().getVerticalLineKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:5706:1: ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) )
                    	    // InternalSCTX.g:5707:1: (lv_subExpressions_5_0= ruleBitwiseAndExpression )
                    	    {
                    	    // InternalSCTX.g:5707:1: (lv_subExpressions_5_0= ruleBitwiseAndExpression )
                    	    // InternalSCTX.g:5708:3: lv_subExpressions_5_0= ruleBitwiseAndExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_98);
                    	    lv_subExpressions_5_0=ruleBitwiseAndExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getBitwiseOrExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"subExpressions",
                    	              		lv_subExpressions_5_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop173;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseOrExpression"


    // $ANTLR start "entryRuleBitwiseAndExpression"
    // InternalSCTX.g:5732:1: entryRuleBitwiseAndExpression returns [EObject current=null] : iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF ;
    public final EObject entryRuleBitwiseAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseAndExpression = null;


        try {
            // InternalSCTX.g:5733:2: (iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF )
            // InternalSCTX.g:5734:2: iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseAndExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseAndExpression=ruleBitwiseAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseAndExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseAndExpression"


    // $ANTLR start "ruleBitwiseAndExpression"
    // InternalSCTX.g:5741:1: ruleBitwiseAndExpression returns [EObject current=null] : (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? ) ;
    public final EObject ruleBitwiseAndExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_CompareOperation_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5744:28: ( (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? ) )
            // InternalSCTX.g:5745:1: (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? )
            {
            // InternalSCTX.g:5745:1: (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? )
            // InternalSCTX.g:5746:2: this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getCompareOperationParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_99);
            this_CompareOperation_0=ruleCompareOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_CompareOperation_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSCTX.g:5757:1: ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )?
            int alt176=2;
            int LA176_0 = input.LA(1);

            if ( (LA176_0==30) ) {
                alt176=1;
            }
            switch (alt176) {
                case 1 :
                    // InternalSCTX.g:5757:2: () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )*
                    {
                    // InternalSCTX.g:5757:2: ()
                    // InternalSCTX.g:5758:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getBitwiseAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:5766:2: ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) )
                    // InternalSCTX.g:5766:3: ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) )
                    {
                    // InternalSCTX.g:5766:3: ( (lv_operator_2_0= ruleBitwiseAndOperator ) )
                    // InternalSCTX.g:5767:1: (lv_operator_2_0= ruleBitwiseAndOperator )
                    {
                    // InternalSCTX.g:5767:1: (lv_operator_2_0= ruleBitwiseAndOperator )
                    // InternalSCTX.g:5768:3: lv_operator_2_0= ruleBitwiseAndOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getOperatorBitwiseAndOperatorEnumRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_35);
                    lv_operator_2_0=ruleBitwiseAndOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:5784:2: ( (lv_subExpressions_3_0= ruleCompareOperation ) )
                    // InternalSCTX.g:5785:1: (lv_subExpressions_3_0= ruleCompareOperation )
                    {
                    // InternalSCTX.g:5785:1: (lv_subExpressions_3_0= ruleCompareOperation )
                    // InternalSCTX.g:5786:3: lv_subExpressions_3_0= ruleCompareOperation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_99);
                    lv_subExpressions_3_0=ruleCompareOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperation");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:5802:3: (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )*
                    loop175:
                    do {
                        int alt175=2;
                        int LA175_0 = input.LA(1);

                        if ( (LA175_0==30) ) {
                            alt175=1;
                        }


                        switch (alt175) {
                    	case 1 :
                    	    // InternalSCTX.g:5802:5: otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) )
                    	    {
                    	    otherlv_4=(Token)match(input,30,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getBitwiseAndExpressionAccess().getAmpersandKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:5806:1: ( (lv_subExpressions_5_0= ruleCompareOperation ) )
                    	    // InternalSCTX.g:5807:1: (lv_subExpressions_5_0= ruleCompareOperation )
                    	    {
                    	    // InternalSCTX.g:5807:1: (lv_subExpressions_5_0= ruleCompareOperation )
                    	    // InternalSCTX.g:5808:3: lv_subExpressions_5_0= ruleCompareOperation
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_99);
                    	    lv_subExpressions_5_0=ruleCompareOperation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"subExpressions",
                    	              		lv_subExpressions_5_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperation");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop175;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseAndExpression"


    // $ANTLR start "entryRuleCompareOperation"
    // InternalSCTX.g:5832:1: entryRuleCompareOperation returns [EObject current=null] : iv_ruleCompareOperation= ruleCompareOperation EOF ;
    public final EObject entryRuleCompareOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompareOperation = null;


        try {
            // InternalSCTX.g:5833:2: (iv_ruleCompareOperation= ruleCompareOperation EOF )
            // InternalSCTX.g:5834:2: iv_ruleCompareOperation= ruleCompareOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompareOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCompareOperation=ruleCompareOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCompareOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCompareOperation"


    // $ANTLR start "ruleCompareOperation"
    // InternalSCTX.g:5841:1: ruleCompareOperation returns [EObject current=null] : (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? ) ;
    public final EObject ruleCompareOperation() throws RecognitionException {
        EObject current = null;

        EObject this_NotOrValuedExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5844:28: ( (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? ) )
            // InternalSCTX.g:5845:1: (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? )
            {
            // InternalSCTX.g:5845:1: (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? )
            // InternalSCTX.g:5846:2: this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getCompareOperationAccess().getNotOrValuedExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_100);
            this_NotOrValuedExpression_0=ruleNotOrValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_NotOrValuedExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSCTX.g:5857:1: ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )?
            int alt177=2;
            alt177 = dfa177.predict(input);
            switch (alt177) {
                case 1 :
                    // InternalSCTX.g:5857:2: () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) )
                    {
                    // InternalSCTX.g:5857:2: ()
                    // InternalSCTX.g:5858:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getCompareOperationAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:5866:2: ( (lv_operator_2_0= ruleCompareOperator ) )
                    // InternalSCTX.g:5867:1: (lv_operator_2_0= ruleCompareOperator )
                    {
                    // InternalSCTX.g:5867:1: (lv_operator_2_0= ruleCompareOperator )
                    // InternalSCTX.g:5868:3: lv_operator_2_0= ruleCompareOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCompareOperationAccess().getOperatorCompareOperatorEnumRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_35);
                    lv_operator_2_0=ruleCompareOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCompareOperationRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:5884:2: ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) )
                    // InternalSCTX.g:5885:1: (lv_subExpressions_3_0= ruleNotOrValuedExpression )
                    {
                    // InternalSCTX.g:5885:1: (lv_subExpressions_3_0= ruleNotOrValuedExpression )
                    // InternalSCTX.g:5886:3: lv_subExpressions_3_0= ruleNotOrValuedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCompareOperationAccess().getSubExpressionsNotOrValuedExpressionParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_3_0=ruleNotOrValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCompareOperationRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.NotOrValuedExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompareOperation"


    // $ANTLR start "entryRuleNotOrValuedExpression"
    // InternalSCTX.g:5910:1: entryRuleNotOrValuedExpression returns [EObject current=null] : iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF ;
    public final EObject entryRuleNotOrValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNotOrValuedExpression = null;


        try {
            // InternalSCTX.g:5911:2: (iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF )
            // InternalSCTX.g:5912:2: iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNotOrValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNotOrValuedExpression=ruleNotOrValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNotOrValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNotOrValuedExpression"


    // $ANTLR start "ruleNotOrValuedExpression"
    // InternalSCTX.g:5919:1: ruleNotOrValuedExpression returns [EObject current=null] : (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression ) ;
    public final EObject ruleNotOrValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ValuedExpression_0 = null;

        EObject this_NotExpression_1 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5922:28: ( (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression ) )
            // InternalSCTX.g:5923:1: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )
            {
            // InternalSCTX.g:5923:1: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )
            int alt178=2;
            alt178 = dfa178.predict(input);
            switch (alt178) {
                case 1 :
                    // InternalSCTX.g:5924:2: this_ValuedExpression_0= ruleValuedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNotOrValuedExpressionAccess().getValuedExpressionParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedExpression_0=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ValuedExpression_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:5937:2: this_NotExpression_1= ruleNotExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNotOrValuedExpressionAccess().getNotExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NotExpression_1=ruleNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_NotExpression_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotOrValuedExpression"


    // $ANTLR start "entryRuleNotExpression"
    // InternalSCTX.g:5956:1: entryRuleNotExpression returns [EObject current=null] : iv_ruleNotExpression= ruleNotExpression EOF ;
    public final EObject entryRuleNotExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNotExpression = null;


        try {
            // InternalSCTX.g:5957:2: (iv_ruleNotExpression= ruleNotExpression EOF )
            // InternalSCTX.g:5958:2: iv_ruleNotExpression= ruleNotExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNotExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNotExpression=ruleNotExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNotExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNotExpression"


    // $ANTLR start "ruleNotExpression"
    // InternalSCTX.g:5965:1: ruleNotExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression ) ;
    public final EObject ruleNotExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_AtomicExpression_3 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5968:28: ( ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression ) )
            // InternalSCTX.g:5969:1: ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression )
            {
            // InternalSCTX.g:5969:1: ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression )
            int alt179=2;
            int LA179_0 = input.LA(1);

            if ( (LA179_0==29) ) {
                alt179=1;
            }
            else if ( (LA179_0==RULE_ID||LA179_0==RULE_HOSTCODE||LA179_0==RULE_BOOLEAN||LA179_0==26||LA179_0==57||LA179_0==64||(LA179_0>=109 && LA179_0<=110)) ) {
                alt179=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 179, 0, input);

                throw nvae;
            }
            switch (alt179) {
                case 1 :
                    // InternalSCTX.g:5969:2: ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) )
                    {
                    // InternalSCTX.g:5969:2: ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) )
                    // InternalSCTX.g:5969:3: () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) )
                    {
                    // InternalSCTX.g:5969:3: ()
                    // InternalSCTX.g:5970:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getNotExpressionAccess().getOperatorExpressionAction_0_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:5978:2: ( (lv_operator_1_0= ruleNotOperator ) )
                    // InternalSCTX.g:5979:1: (lv_operator_1_0= ruleNotOperator )
                    {
                    // InternalSCTX.g:5979:1: (lv_operator_1_0= ruleNotOperator )
                    // InternalSCTX.g:5980:3: lv_operator_1_0= ruleNotOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getNotExpressionAccess().getOperatorNotOperatorEnumRuleCall_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_35);
                    lv_operator_1_0=ruleNotOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNotExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_1_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.NotOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:5996:2: ( (lv_subExpressions_2_0= ruleNotExpression ) )
                    // InternalSCTX.g:5997:1: (lv_subExpressions_2_0= ruleNotExpression )
                    {
                    // InternalSCTX.g:5997:1: (lv_subExpressions_2_0= ruleNotExpression )
                    // InternalSCTX.g:5998:3: lv_subExpressions_2_0= ruleNotExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getNotExpressionAccess().getSubExpressionsNotExpressionParserRuleCall_0_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNotExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.NotExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6016:2: this_AtomicExpression_3= ruleAtomicExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNotExpressionAccess().getAtomicExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicExpression_3=ruleAtomicExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_AtomicExpression_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotExpression"


    // $ANTLR start "entryRuleValuedExpression"
    // InternalSCTX.g:6035:1: entryRuleValuedExpression returns [EObject current=null] : iv_ruleValuedExpression= ruleValuedExpression EOF ;
    public final EObject entryRuleValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedExpression = null;


        try {
            // InternalSCTX.g:6036:2: (iv_ruleValuedExpression= ruleValuedExpression EOF )
            // InternalSCTX.g:6037:2: iv_ruleValuedExpression= ruleValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedExpression=ruleValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedExpression"


    // $ANTLR start "ruleValuedExpression"
    // InternalSCTX.g:6044:1: ruleValuedExpression returns [EObject current=null] : this_AddExpression_0= ruleAddExpression ;
    public final EObject ruleValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AddExpression_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:6047:28: (this_AddExpression_0= ruleAddExpression )
            // InternalSCTX.g:6049:2: this_AddExpression_0= ruleAddExpression
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getValuedExpressionAccess().getAddExpressionParserRuleCall()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_AddExpression_0=ruleAddExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_AddExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedExpression"


    // $ANTLR start "entryRuleAddExpression"
    // InternalSCTX.g:6068:1: entryRuleAddExpression returns [EObject current=null] : iv_ruleAddExpression= ruleAddExpression EOF ;
    public final EObject entryRuleAddExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAddExpression = null;


        try {
            // InternalSCTX.g:6069:2: (iv_ruleAddExpression= ruleAddExpression EOF )
            // InternalSCTX.g:6070:2: iv_ruleAddExpression= ruleAddExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAddExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAddExpression=ruleAddExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAddExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAddExpression"


    // $ANTLR start "ruleAddExpression"
    // InternalSCTX.g:6077:1: ruleAddExpression returns [EObject current=null] : (this_SubExpression_0= ruleSubExpression ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )* )? ) ;
    public final EObject ruleAddExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_SubExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:6080:28: ( (this_SubExpression_0= ruleSubExpression ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )* )? ) )
            // InternalSCTX.g:6081:1: (this_SubExpression_0= ruleSubExpression ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )* )? )
            {
            // InternalSCTX.g:6081:1: (this_SubExpression_0= ruleSubExpression ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )* )? )
            // InternalSCTX.g:6082:2: this_SubExpression_0= ruleSubExpression ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAddExpressionAccess().getSubExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_101);
            this_SubExpression_0=ruleSubExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_SubExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSCTX.g:6093:1: ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )* )?
            int alt181=2;
            int LA181_0 = input.LA(1);

            if ( (LA181_0==70) ) {
                alt181=1;
            }
            switch (alt181) {
                case 1 :
                    // InternalSCTX.g:6093:2: () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )*
                    {
                    // InternalSCTX.g:6093:2: ()
                    // InternalSCTX.g:6094:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getAddExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:6102:2: ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) )
                    // InternalSCTX.g:6102:3: ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) )
                    {
                    // InternalSCTX.g:6102:3: ( (lv_operator_2_0= ruleAddOperator ) )
                    // InternalSCTX.g:6103:1: (lv_operator_2_0= ruleAddOperator )
                    {
                    // InternalSCTX.g:6103:1: (lv_operator_2_0= ruleAddOperator )
                    // InternalSCTX.g:6104:3: lv_operator_2_0= ruleAddOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAddExpressionAccess().getOperatorAddOperatorEnumRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_102);
                    lv_operator_2_0=ruleAddOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAddExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.AddOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:6120:2: ( (lv_subExpressions_3_0= ruleSubExpression ) )
                    // InternalSCTX.g:6121:1: (lv_subExpressions_3_0= ruleSubExpression )
                    {
                    // InternalSCTX.g:6121:1: (lv_subExpressions_3_0= ruleSubExpression )
                    // InternalSCTX.g:6122:3: lv_subExpressions_3_0= ruleSubExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAddExpressionAccess().getSubExpressionsSubExpressionParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_101);
                    lv_subExpressions_3_0=ruleSubExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAddExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.SubExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:6138:3: (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )*
                    loop180:
                    do {
                        int alt180=2;
                        int LA180_0 = input.LA(1);

                        if ( (LA180_0==70) ) {
                            alt180=1;
                        }


                        switch (alt180) {
                    	case 1 :
                    	    // InternalSCTX.g:6138:5: otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,70,FollowSets000.FOLLOW_102); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getAddExpressionAccess().getPlusSignKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:6142:1: ( (lv_subExpressions_5_0= ruleSubExpression ) )
                    	    // InternalSCTX.g:6143:1: (lv_subExpressions_5_0= ruleSubExpression )
                    	    {
                    	    // InternalSCTX.g:6143:1: (lv_subExpressions_5_0= ruleSubExpression )
                    	    // InternalSCTX.g:6144:3: lv_subExpressions_5_0= ruleSubExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAddExpressionAccess().getSubExpressionsSubExpressionParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_101);
                    	    lv_subExpressions_5_0=ruleSubExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAddExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"subExpressions",
                    	              		lv_subExpressions_5_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.SubExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop180;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAddExpression"


    // $ANTLR start "entryRuleSubExpression"
    // InternalSCTX.g:6168:1: entryRuleSubExpression returns [EObject current=null] : iv_ruleSubExpression= ruleSubExpression EOF ;
    public final EObject entryRuleSubExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSubExpression = null;


        try {
            // InternalSCTX.g:6169:2: (iv_ruleSubExpression= ruleSubExpression EOF )
            // InternalSCTX.g:6170:2: iv_ruleSubExpression= ruleSubExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSubExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSubExpression=ruleSubExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSubExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSubExpression"


    // $ANTLR start "ruleSubExpression"
    // InternalSCTX.g:6177:1: ruleSubExpression returns [EObject current=null] : (this_MultExpression_0= ruleMultExpression ( () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) ) )* )? ) ;
    public final EObject ruleSubExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_MultExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:6180:28: ( (this_MultExpression_0= ruleMultExpression ( () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) ) )* )? ) )
            // InternalSCTX.g:6181:1: (this_MultExpression_0= ruleMultExpression ( () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) ) )* )? )
            {
            // InternalSCTX.g:6181:1: (this_MultExpression_0= ruleMultExpression ( () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) ) )* )? )
            // InternalSCTX.g:6182:2: this_MultExpression_0= ruleMultExpression ( () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getSubExpressionAccess().getMultExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_103);
            this_MultExpression_0=ruleMultExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_MultExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSCTX.g:6193:1: ( () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) ) )* )?
            int alt183=2;
            int LA183_0 = input.LA(1);

            if ( (LA183_0==71) ) {
                alt183=1;
            }
            switch (alt183) {
                case 1 :
                    // InternalSCTX.g:6193:2: () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) ) )*
                    {
                    // InternalSCTX.g:6193:2: ()
                    // InternalSCTX.g:6194:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getSubExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:6202:2: ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) )
                    // InternalSCTX.g:6202:3: ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) )
                    {
                    // InternalSCTX.g:6202:3: ( (lv_operator_2_0= ruleSubOperator ) )
                    // InternalSCTX.g:6203:1: (lv_operator_2_0= ruleSubOperator )
                    {
                    // InternalSCTX.g:6203:1: (lv_operator_2_0= ruleSubOperator )
                    // InternalSCTX.g:6204:3: lv_operator_2_0= ruleSubOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSubExpressionAccess().getOperatorSubOperatorEnumRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_102);
                    lv_operator_2_0=ruleSubOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSubExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.SubOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:6220:2: ( (lv_subExpressions_3_0= ruleMultExpression ) )
                    // InternalSCTX.g:6221:1: (lv_subExpressions_3_0= ruleMultExpression )
                    {
                    // InternalSCTX.g:6221:1: (lv_subExpressions_3_0= ruleMultExpression )
                    // InternalSCTX.g:6222:3: lv_subExpressions_3_0= ruleMultExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSubExpressionAccess().getSubExpressionsMultExpressionParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_103);
                    lv_subExpressions_3_0=ruleMultExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSubExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.MultExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:6238:3: (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) ) )*
                    loop182:
                    do {
                        int alt182=2;
                        int LA182_0 = input.LA(1);

                        if ( (LA182_0==71) ) {
                            alt182=1;
                        }


                        switch (alt182) {
                    	case 1 :
                    	    // InternalSCTX.g:6238:5: otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,71,FollowSets000.FOLLOW_102); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getSubExpressionAccess().getHyphenMinusKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:6242:1: ( (lv_subExpressions_5_0= ruleMultExpression ) )
                    	    // InternalSCTX.g:6243:1: (lv_subExpressions_5_0= ruleMultExpression )
                    	    {
                    	    // InternalSCTX.g:6243:1: (lv_subExpressions_5_0= ruleMultExpression )
                    	    // InternalSCTX.g:6244:3: lv_subExpressions_5_0= ruleMultExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getSubExpressionAccess().getSubExpressionsMultExpressionParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_103);
                    	    lv_subExpressions_5_0=ruleMultExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getSubExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"subExpressions",
                    	              		lv_subExpressions_5_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.MultExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop182;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubExpression"


    // $ANTLR start "entryRuleMultExpression"
    // InternalSCTX.g:6268:1: entryRuleMultExpression returns [EObject current=null] : iv_ruleMultExpression= ruleMultExpression EOF ;
    public final EObject entryRuleMultExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultExpression = null;


        try {
            // InternalSCTX.g:6269:2: (iv_ruleMultExpression= ruleMultExpression EOF )
            // InternalSCTX.g:6270:2: iv_ruleMultExpression= ruleMultExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMultExpression=ruleMultExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultExpression"


    // $ANTLR start "ruleMultExpression"
    // InternalSCTX.g:6277:1: ruleMultExpression returns [EObject current=null] : (this_DivExpression_0= ruleDivExpression ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) ) )* )? ) ;
    public final EObject ruleMultExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_DivExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:6280:28: ( (this_DivExpression_0= ruleDivExpression ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) ) )* )? ) )
            // InternalSCTX.g:6281:1: (this_DivExpression_0= ruleDivExpression ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) ) )* )? )
            {
            // InternalSCTX.g:6281:1: (this_DivExpression_0= ruleDivExpression ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) ) )* )? )
            // InternalSCTX.g:6282:2: this_DivExpression_0= ruleDivExpression ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getMultExpressionAccess().getDivExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_104);
            this_DivExpression_0=ruleDivExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_DivExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSCTX.g:6293:1: ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) ) )* )?
            int alt185=2;
            int LA185_0 = input.LA(1);

            if ( (LA185_0==72) ) {
                alt185=1;
            }
            switch (alt185) {
                case 1 :
                    // InternalSCTX.g:6293:2: () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) ) )*
                    {
                    // InternalSCTX.g:6293:2: ()
                    // InternalSCTX.g:6294:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getMultExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:6302:2: ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) )
                    // InternalSCTX.g:6302:3: ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) )
                    {
                    // InternalSCTX.g:6302:3: ( (lv_operator_2_0= ruleMultOperator ) )
                    // InternalSCTX.g:6303:1: (lv_operator_2_0= ruleMultOperator )
                    {
                    // InternalSCTX.g:6303:1: (lv_operator_2_0= ruleMultOperator )
                    // InternalSCTX.g:6304:3: lv_operator_2_0= ruleMultOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMultExpressionAccess().getOperatorMultOperatorEnumRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_102);
                    lv_operator_2_0=ruleMultOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMultExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.MultOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:6320:2: ( (lv_subExpressions_3_0= ruleDivExpression ) )
                    // InternalSCTX.g:6321:1: (lv_subExpressions_3_0= ruleDivExpression )
                    {
                    // InternalSCTX.g:6321:1: (lv_subExpressions_3_0= ruleDivExpression )
                    // InternalSCTX.g:6322:3: lv_subExpressions_3_0= ruleDivExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMultExpressionAccess().getSubExpressionsDivExpressionParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_104);
                    lv_subExpressions_3_0=ruleDivExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMultExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.DivExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:6338:3: (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) ) )*
                    loop184:
                    do {
                        int alt184=2;
                        int LA184_0 = input.LA(1);

                        if ( (LA184_0==72) ) {
                            alt184=1;
                        }


                        switch (alt184) {
                    	case 1 :
                    	    // InternalSCTX.g:6338:5: otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,72,FollowSets000.FOLLOW_102); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getMultExpressionAccess().getAsteriskKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:6342:1: ( (lv_subExpressions_5_0= ruleDivExpression ) )
                    	    // InternalSCTX.g:6343:1: (lv_subExpressions_5_0= ruleDivExpression )
                    	    {
                    	    // InternalSCTX.g:6343:1: (lv_subExpressions_5_0= ruleDivExpression )
                    	    // InternalSCTX.g:6344:3: lv_subExpressions_5_0= ruleDivExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMultExpressionAccess().getSubExpressionsDivExpressionParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_104);
                    	    lv_subExpressions_5_0=ruleDivExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMultExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"subExpressions",
                    	              		lv_subExpressions_5_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.DivExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop184;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultExpression"


    // $ANTLR start "entryRuleDivExpression"
    // InternalSCTX.g:6368:1: entryRuleDivExpression returns [EObject current=null] : iv_ruleDivExpression= ruleDivExpression EOF ;
    public final EObject entryRuleDivExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDivExpression = null;


        try {
            // InternalSCTX.g:6369:2: (iv_ruleDivExpression= ruleDivExpression EOF )
            // InternalSCTX.g:6370:2: iv_ruleDivExpression= ruleDivExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDivExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDivExpression=ruleDivExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDivExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDivExpression"


    // $ANTLR start "ruleDivExpression"
    // InternalSCTX.g:6377:1: ruleDivExpression returns [EObject current=null] : (this_ModExpression_0= ruleModExpression ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) ) )* )? ) ;
    public final EObject ruleDivExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_ModExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:6380:28: ( (this_ModExpression_0= ruleModExpression ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) ) )* )? ) )
            // InternalSCTX.g:6381:1: (this_ModExpression_0= ruleModExpression ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) ) )* )? )
            {
            // InternalSCTX.g:6381:1: (this_ModExpression_0= ruleModExpression ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) ) )* )? )
            // InternalSCTX.g:6382:2: this_ModExpression_0= ruleModExpression ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getDivExpressionAccess().getModExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_105);
            this_ModExpression_0=ruleModExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_ModExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSCTX.g:6393:1: ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) ) )* )?
            int alt187=2;
            int LA187_0 = input.LA(1);

            if ( (LA187_0==73) ) {
                alt187=1;
            }
            switch (alt187) {
                case 1 :
                    // InternalSCTX.g:6393:2: () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) ) )*
                    {
                    // InternalSCTX.g:6393:2: ()
                    // InternalSCTX.g:6394:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getDivExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:6402:2: ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) )
                    // InternalSCTX.g:6402:3: ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) )
                    {
                    // InternalSCTX.g:6402:3: ( (lv_operator_2_0= ruleDivOperator ) )
                    // InternalSCTX.g:6403:1: (lv_operator_2_0= ruleDivOperator )
                    {
                    // InternalSCTX.g:6403:1: (lv_operator_2_0= ruleDivOperator )
                    // InternalSCTX.g:6404:3: lv_operator_2_0= ruleDivOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDivExpressionAccess().getOperatorDivOperatorEnumRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_102);
                    lv_operator_2_0=ruleDivOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDivExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.DivOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:6420:2: ( (lv_subExpressions_3_0= ruleModExpression ) )
                    // InternalSCTX.g:6421:1: (lv_subExpressions_3_0= ruleModExpression )
                    {
                    // InternalSCTX.g:6421:1: (lv_subExpressions_3_0= ruleModExpression )
                    // InternalSCTX.g:6422:3: lv_subExpressions_3_0= ruleModExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDivExpressionAccess().getSubExpressionsModExpressionParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_105);
                    lv_subExpressions_3_0=ruleModExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDivExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.ModExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:6438:3: (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) ) )*
                    loop186:
                    do {
                        int alt186=2;
                        int LA186_0 = input.LA(1);

                        if ( (LA186_0==73) ) {
                            alt186=1;
                        }


                        switch (alt186) {
                    	case 1 :
                    	    // InternalSCTX.g:6438:5: otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,73,FollowSets000.FOLLOW_102); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getDivExpressionAccess().getSolidusKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:6442:1: ( (lv_subExpressions_5_0= ruleModExpression ) )
                    	    // InternalSCTX.g:6443:1: (lv_subExpressions_5_0= ruleModExpression )
                    	    {
                    	    // InternalSCTX.g:6443:1: (lv_subExpressions_5_0= ruleModExpression )
                    	    // InternalSCTX.g:6444:3: lv_subExpressions_5_0= ruleModExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getDivExpressionAccess().getSubExpressionsModExpressionParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_105);
                    	    lv_subExpressions_5_0=ruleModExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getDivExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"subExpressions",
                    	              		lv_subExpressions_5_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.ModExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop186;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDivExpression"


    // $ANTLR start "entryRuleModExpression"
    // InternalSCTX.g:6468:1: entryRuleModExpression returns [EObject current=null] : iv_ruleModExpression= ruleModExpression EOF ;
    public final EObject entryRuleModExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModExpression = null;


        try {
            // InternalSCTX.g:6469:2: (iv_ruleModExpression= ruleModExpression EOF )
            // InternalSCTX.g:6470:2: iv_ruleModExpression= ruleModExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleModExpression=ruleModExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModExpression"


    // $ANTLR start "ruleModExpression"
    // InternalSCTX.g:6477:1: ruleModExpression returns [EObject current=null] : (this_NegExpression_0= ruleNegExpression ( () ( ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )? ) ;
    public final EObject ruleModExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_NegExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:6480:28: ( (this_NegExpression_0= ruleNegExpression ( () ( ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )? ) )
            // InternalSCTX.g:6481:1: (this_NegExpression_0= ruleNegExpression ( () ( ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )? )
            {
            // InternalSCTX.g:6481:1: (this_NegExpression_0= ruleNegExpression ( () ( ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )? )
            // InternalSCTX.g:6482:2: this_NegExpression_0= ruleNegExpression ( () ( ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getModExpressionAccess().getNegExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_106);
            this_NegExpression_0=ruleNegExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_NegExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSCTX.g:6493:1: ( () ( ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )?
            int alt189=2;
            int LA189_0 = input.LA(1);

            if ( (LA189_0==74) ) {
                alt189=1;
            }
            switch (alt189) {
                case 1 :
                    // InternalSCTX.g:6493:2: () ( ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )*
                    {
                    // InternalSCTX.g:6493:2: ()
                    // InternalSCTX.g:6494:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getModExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:6502:2: ( ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
                    // InternalSCTX.g:6502:3: ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    {
                    // InternalSCTX.g:6502:3: ( (lv_operator_2_0= ruleModOperator ) )
                    // InternalSCTX.g:6503:1: (lv_operator_2_0= ruleModOperator )
                    {
                    // InternalSCTX.g:6503:1: (lv_operator_2_0= ruleModOperator )
                    // InternalSCTX.g:6504:3: lv_operator_2_0= ruleModOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getModExpressionAccess().getOperatorModOperatorEnumRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_102);
                    lv_operator_2_0=ruleModOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getModExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.ModOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:6520:2: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    // InternalSCTX.g:6521:1: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    {
                    // InternalSCTX.g:6521:1: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    // InternalSCTX.g:6522:3: lv_subExpressions_3_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getModExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_106);
                    lv_subExpressions_3_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getModExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:6538:3: (otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )*
                    loop188:
                    do {
                        int alt188=2;
                        int LA188_0 = input.LA(1);

                        if ( (LA188_0==74) ) {
                            alt188=1;
                        }


                        switch (alt188) {
                    	case 1 :
                    	    // InternalSCTX.g:6538:5: otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,74,FollowSets000.FOLLOW_102); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getModExpressionAccess().getPercentSignKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:6542:1: ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
                    	    // InternalSCTX.g:6543:1: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                    	    {
                    	    // InternalSCTX.g:6543:1: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                    	    // InternalSCTX.g:6544:3: lv_subExpressions_5_0= ruleAtomicValuedExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getModExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_106);
                    	    lv_subExpressions_5_0=ruleAtomicValuedExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getModExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"subExpressions",
                    	              		lv_subExpressions_5_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop188;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModExpression"


    // $ANTLR start "entryRuleNegExpression"
    // InternalSCTX.g:6568:1: entryRuleNegExpression returns [EObject current=null] : iv_ruleNegExpression= ruleNegExpression EOF ;
    public final EObject entryRuleNegExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNegExpression = null;


        try {
            // InternalSCTX.g:6569:2: (iv_ruleNegExpression= ruleNegExpression EOF )
            // InternalSCTX.g:6570:2: iv_ruleNegExpression= ruleNegExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNegExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNegExpression=ruleNegExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNegExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNegExpression"


    // $ANTLR start "ruleNegExpression"
    // InternalSCTX.g:6577:1: ruleNegExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_AtomicValuedExpression_3= ruleAtomicValuedExpression ) ;
    public final EObject ruleNegExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_AtomicValuedExpression_3 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:6580:28: ( ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_AtomicValuedExpression_3= ruleAtomicValuedExpression ) )
            // InternalSCTX.g:6581:1: ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_AtomicValuedExpression_3= ruleAtomicValuedExpression )
            {
            // InternalSCTX.g:6581:1: ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_AtomicValuedExpression_3= ruleAtomicValuedExpression )
            int alt190=2;
            int LA190_0 = input.LA(1);

            if ( (LA190_0==71) ) {
                alt190=1;
            }
            else if ( ((LA190_0>=RULE_STRING && LA190_0<=RULE_BOOLEAN)||LA190_0==26||LA190_0==57||LA190_0==64||(LA190_0>=109 && LA190_0<=110)) ) {
                alt190=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 190, 0, input);

                throw nvae;
            }
            switch (alt190) {
                case 1 :
                    // InternalSCTX.g:6581:2: ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) )
                    {
                    // InternalSCTX.g:6581:2: ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) )
                    // InternalSCTX.g:6581:3: () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) )
                    {
                    // InternalSCTX.g:6581:3: ()
                    // InternalSCTX.g:6582:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getNegExpressionAccess().getOperatorExpressionAction_0_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:6590:2: ( (lv_operator_1_0= ruleSubOperator ) )
                    // InternalSCTX.g:6591:1: (lv_operator_1_0= ruleSubOperator )
                    {
                    // InternalSCTX.g:6591:1: (lv_operator_1_0= ruleSubOperator )
                    // InternalSCTX.g:6592:3: lv_operator_1_0= ruleSubOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getNegExpressionAccess().getOperatorSubOperatorEnumRuleCall_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_102);
                    lv_operator_1_0=ruleSubOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNegExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_1_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.SubOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:6608:2: ( (lv_subExpressions_2_0= ruleNegExpression ) )
                    // InternalSCTX.g:6609:1: (lv_subExpressions_2_0= ruleNegExpression )
                    {
                    // InternalSCTX.g:6609:1: (lv_subExpressions_2_0= ruleNegExpression )
                    // InternalSCTX.g:6610:3: lv_subExpressions_2_0= ruleNegExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getNegExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_0_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleNegExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNegExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.NegExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6628:2: this_AtomicValuedExpression_3= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNegExpressionAccess().getAtomicValuedExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicValuedExpression_3=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_AtomicValuedExpression_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNegExpression"


    // $ANTLR start "entryRuleAtomicExpression"
    // InternalSCTX.g:6647:1: entryRuleAtomicExpression returns [EObject current=null] : iv_ruleAtomicExpression= ruleAtomicExpression EOF ;
    public final EObject entryRuleAtomicExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAtomicExpression = null;


        try {
            // InternalSCTX.g:6648:2: (iv_ruleAtomicExpression= ruleAtomicExpression EOF )
            // InternalSCTX.g:6649:2: iv_ruleAtomicExpression= ruleAtomicExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAtomicExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAtomicExpression=ruleAtomicExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAtomicExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAtomicExpression"


    // $ANTLR start "ruleAtomicExpression"
    // InternalSCTX.g:6656:1: ruleAtomicExpression returns [EObject current=null] : (this_BoolValue_0= ruleBoolValue | this_ValuedObjectTestExpression_1= ruleValuedObjectTestExpression | (otherlv_2= '(' this_BoolExpression_3= ruleBoolExpression otherlv_4= ')' ) | this_ReferenceCall_5= ruleReferenceCall | this_FunctionCall_6= ruleFunctionCall | this_TextExpression_7= ruleTextExpression ) ;
    public final EObject ruleAtomicExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_BoolValue_0 = null;

        EObject this_ValuedObjectTestExpression_1 = null;

        EObject this_BoolExpression_3 = null;

        EObject this_ReferenceCall_5 = null;

        EObject this_FunctionCall_6 = null;

        EObject this_TextExpression_7 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:6659:28: ( (this_BoolValue_0= ruleBoolValue | this_ValuedObjectTestExpression_1= ruleValuedObjectTestExpression | (otherlv_2= '(' this_BoolExpression_3= ruleBoolExpression otherlv_4= ')' ) | this_ReferenceCall_5= ruleReferenceCall | this_FunctionCall_6= ruleFunctionCall | this_TextExpression_7= ruleTextExpression ) )
            // InternalSCTX.g:6660:1: (this_BoolValue_0= ruleBoolValue | this_ValuedObjectTestExpression_1= ruleValuedObjectTestExpression | (otherlv_2= '(' this_BoolExpression_3= ruleBoolExpression otherlv_4= ')' ) | this_ReferenceCall_5= ruleReferenceCall | this_FunctionCall_6= ruleFunctionCall | this_TextExpression_7= ruleTextExpression )
            {
            // InternalSCTX.g:6660:1: (this_BoolValue_0= ruleBoolValue | this_ValuedObjectTestExpression_1= ruleValuedObjectTestExpression | (otherlv_2= '(' this_BoolExpression_3= ruleBoolExpression otherlv_4= ')' ) | this_ReferenceCall_5= ruleReferenceCall | this_FunctionCall_6= ruleFunctionCall | this_TextExpression_7= ruleTextExpression )
            int alt191=6;
            alt191 = dfa191.predict(input);
            switch (alt191) {
                case 1 :
                    // InternalSCTX.g:6661:2: this_BoolValue_0= ruleBoolValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicExpressionAccess().getBoolValueParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolValue_0=ruleBoolValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_BoolValue_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6674:2: this_ValuedObjectTestExpression_1= ruleValuedObjectTestExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicExpressionAccess().getValuedObjectTestExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedObjectTestExpression_1=ruleValuedObjectTestExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ValuedObjectTestExpression_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:6686:6: (otherlv_2= '(' this_BoolExpression_3= ruleBoolExpression otherlv_4= ')' )
                    {
                    // InternalSCTX.g:6686:6: (otherlv_2= '(' this_BoolExpression_3= ruleBoolExpression otherlv_4= ')' )
                    // InternalSCTX.g:6686:8: otherlv_2= '(' this_BoolExpression_3= ruleBoolExpression otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,26,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicExpressionAccess().getBoolExpressionParserRuleCall_2_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_25);
                    this_BoolExpression_3=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_BoolExpression_3; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_4=(Token)match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getAtomicExpressionAccess().getRightParenthesisKeyword_2_2());
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCTX.g:6708:2: this_ReferenceCall_5= ruleReferenceCall
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicExpressionAccess().getReferenceCallParserRuleCall_3()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceCall_5=ruleReferenceCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ReferenceCall_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalSCTX.g:6721:2: this_FunctionCall_6= ruleFunctionCall
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicExpressionAccess().getFunctionCallParserRuleCall_4()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FunctionCall_6=ruleFunctionCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_FunctionCall_6; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalSCTX.g:6734:2: this_TextExpression_7= ruleTextExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicExpressionAccess().getTextExpressionParserRuleCall_5()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TextExpression_7=ruleTextExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TextExpression_7; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAtomicExpression"


    // $ANTLR start "entryRuleAtomicValuedExpression"
    // InternalSCTX.g:6753:1: entryRuleAtomicValuedExpression returns [EObject current=null] : iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF ;
    public final EObject entryRuleAtomicValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAtomicValuedExpression = null;


        try {
            // InternalSCTX.g:6754:2: (iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF )
            // InternalSCTX.g:6755:2: iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAtomicValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAtomicValuedExpression=ruleAtomicValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAtomicValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAtomicValuedExpression"


    // $ANTLR start "ruleAtomicValuedExpression"
    // InternalSCTX.g:6762:1: ruleAtomicValuedExpression returns [EObject current=null] : (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | (otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')' ) | this_AtomicExpression_6= ruleAtomicExpression ) ;
    public final EObject ruleAtomicValuedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject this_IntValue_0 = null;

        EObject this_FloatValue_1 = null;

        EObject this_StringValue_2 = null;

        EObject this_ValuedExpression_4 = null;

        EObject this_AtomicExpression_6 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:6765:28: ( (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | (otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')' ) | this_AtomicExpression_6= ruleAtomicExpression ) )
            // InternalSCTX.g:6766:1: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | (otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')' ) | this_AtomicExpression_6= ruleAtomicExpression )
            {
            // InternalSCTX.g:6766:1: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | (otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')' ) | this_AtomicExpression_6= ruleAtomicExpression )
            int alt192=5;
            alt192 = dfa192.predict(input);
            switch (alt192) {
                case 1 :
                    // InternalSCTX.g:6767:2: this_IntValue_0= ruleIntValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getIntValueParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IntValue_0=ruleIntValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_IntValue_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6780:2: this_FloatValue_1= ruleFloatValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getFloatValueParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FloatValue_1=ruleFloatValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_FloatValue_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:6793:2: this_StringValue_2= ruleStringValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getStringValueParserRuleCall_2()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringValue_2=ruleStringValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_StringValue_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:6805:6: (otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')' )
                    {
                    // InternalSCTX.g:6805:6: (otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')' )
                    // InternalSCTX.g:6805:8: otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')'
                    {
                    otherlv_3=(Token)match(input,26,FollowSets000.FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getAtomicValuedExpressionAccess().getLeftParenthesisKeyword_3_0());
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getValuedExpressionParserRuleCall_3_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_25);
                    this_ValuedExpression_4=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ValuedExpression_4; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_5=(Token)match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getAtomicValuedExpressionAccess().getRightParenthesisKeyword_3_2());
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCTX.g:6827:2: this_AtomicExpression_6= ruleAtomicExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getAtomicExpressionParserRuleCall_4()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicExpression_6=ruleAtomicExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_AtomicExpression_6; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAtomicValuedExpression"


    // $ANTLR start "entryRuleValuedObjectTestExpression"
    // InternalSCTX.g:6846:1: entryRuleValuedObjectTestExpression returns [EObject current=null] : iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF ;
    public final EObject entryRuleValuedObjectTestExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObjectTestExpression = null;


        try {
            // InternalSCTX.g:6847:2: (iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF )
            // InternalSCTX.g:6848:2: iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectTestExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObjectTestExpression=ruleValuedObjectTestExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObjectTestExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObjectTestExpression"


    // $ANTLR start "ruleValuedObjectTestExpression"
    // InternalSCTX.g:6855:1: ruleValuedObjectTestExpression returns [EObject current=null] : ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' ) | this_ValuedObjectReference_5= ruleValuedObjectReference ) ;
    public final EObject ruleValuedObjectTestExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Enumerator lv_operator_1_1 = null;

        Enumerator lv_operator_1_2 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject this_ValuedObjectReference_5 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:6858:28: ( ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' ) | this_ValuedObjectReference_5= ruleValuedObjectReference ) )
            // InternalSCTX.g:6859:1: ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' ) | this_ValuedObjectReference_5= ruleValuedObjectReference )
            {
            // InternalSCTX.g:6859:1: ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' ) | this_ValuedObjectReference_5= ruleValuedObjectReference )
            int alt194=2;
            int LA194_0 = input.LA(1);

            if ( ((LA194_0>=109 && LA194_0<=110)) ) {
                alt194=1;
            }
            else if ( (LA194_0==RULE_ID) ) {
                alt194=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 194, 0, input);

                throw nvae;
            }
            switch (alt194) {
                case 1 :
                    // InternalSCTX.g:6859:2: ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' )
                    {
                    // InternalSCTX.g:6859:2: ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' )
                    // InternalSCTX.g:6859:3: () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')'
                    {
                    // InternalSCTX.g:6859:3: ()
                    // InternalSCTX.g:6860:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getValuedObjectTestExpressionAccess().getOperatorExpressionAction_0_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:6868:2: ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) )
                    // InternalSCTX.g:6869:1: ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) )
                    {
                    // InternalSCTX.g:6869:1: ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) )
                    // InternalSCTX.g:6870:1: (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator )
                    {
                    // InternalSCTX.g:6870:1: (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator )
                    int alt193=2;
                    int LA193_0 = input.LA(1);

                    if ( (LA193_0==109) ) {
                        alt193=1;
                    }
                    else if ( (LA193_0==110) ) {
                        alt193=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 193, 0, input);

                        throw nvae;
                    }
                    switch (alt193) {
                        case 1 :
                            // InternalSCTX.g:6871:3: lv_operator_1_1= rulePreOperator
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorPreOperatorEnumRuleCall_0_1_0_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_107);
                            lv_operator_1_1=rulePreOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"operator",
                                      		lv_operator_1_1, 
                                      		"de.cau.cs.kieler.kexpressions.KExpressions.PreOperator");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:6886:8: lv_operator_1_2= ruleValOperator
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorValOperatorEnumRuleCall_0_1_0_1()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_107);
                            lv_operator_1_2=ruleValOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"operator",
                                      		lv_operator_1_2, 
                                      		"de.cau.cs.kieler.kexpressions.KExpressions.ValOperator");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }

                    otherlv_2=(Token)match(input,26,FollowSets000.FOLLOW_88); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getValuedObjectTestExpressionAccess().getLeftParenthesisKeyword_0_2());
                          
                    }
                    // InternalSCTX.g:6908:1: ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) )
                    // InternalSCTX.g:6909:1: (lv_subExpressions_3_0= ruleValuedObjectTestExpression )
                    {
                    // InternalSCTX.g:6909:1: (lv_subExpressions_3_0= ruleValuedObjectTestExpression )
                    // InternalSCTX.g:6910:3: lv_subExpressions_3_0= ruleValuedObjectTestExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectTestExpressionParserRuleCall_0_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_25);
                    lv_subExpressions_3_0=ruleValuedObjectTestExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectTestExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getValuedObjectTestExpressionAccess().getRightParenthesisKeyword_0_4());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6932:2: this_ValuedObjectReference_5= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getValuedObjectReferenceParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedObjectReference_5=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ValuedObjectReference_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObjectTestExpression"


    // $ANTLR start "entryRulePrimeID"
    // InternalSCTX.g:6951:1: entryRulePrimeID returns [String current=null] : iv_rulePrimeID= rulePrimeID EOF ;
    public final String entryRulePrimeID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePrimeID = null;


        try {
            // InternalSCTX.g:6952:2: (iv_rulePrimeID= rulePrimeID EOF )
            // InternalSCTX.g:6953:2: iv_rulePrimeID= rulePrimeID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimeIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrimeID=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimeID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimeID"


    // $ANTLR start "rulePrimeID"
    // InternalSCTX.g:6960:1: rulePrimeID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (kw= '\\'' )* ) ;
    public final AntlrDatatypeRuleToken rulePrimeID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:6963:28: ( (this_ID_0= RULE_ID (kw= '\\'' )* ) )
            // InternalSCTX.g:6964:1: (this_ID_0= RULE_ID (kw= '\\'' )* )
            {
            // InternalSCTX.g:6964:1: (this_ID_0= RULE_ID (kw= '\\'' )* )
            // InternalSCTX.g:6964:6: this_ID_0= RULE_ID (kw= '\\'' )*
            {
            this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_108); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ID_0, grammarAccess.getPrimeIDAccess().getIDTerminalRuleCall_0()); 
                  
            }
            // InternalSCTX.g:6971:1: (kw= '\\'' )*
            loop195:
            do {
                int alt195=2;
                int LA195_0 = input.LA(1);

                if ( (LA195_0==75) ) {
                    alt195=1;
                }


                switch (alt195) {
            	case 1 :
            	    // InternalSCTX.g:6972:2: kw= '\\''
            	    {
            	    kw=(Token)match(input,75,FollowSets000.FOLLOW_108); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              current.merge(kw);
            	              newLeafNode(kw, grammarAccess.getPrimeIDAccess().getApostropheKeyword_1()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop195;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimeID"


    // $ANTLR start "entryRuleValuedObjectReference"
    // InternalSCTX.g:6985:1: entryRuleValuedObjectReference returns [EObject current=null] : iv_ruleValuedObjectReference= ruleValuedObjectReference EOF ;
    public final EObject entryRuleValuedObjectReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObjectReference = null;


        try {
            // InternalSCTX.g:6986:2: (iv_ruleValuedObjectReference= ruleValuedObjectReference EOF )
            // InternalSCTX.g:6987:2: iv_ruleValuedObjectReference= ruleValuedObjectReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObjectReference=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObjectReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObjectReference"


    // $ANTLR start "ruleValuedObjectReference"
    // InternalSCTX.g:6994:1: ruleValuedObjectReference returns [EObject current=null] : ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ) ;
    public final EObject ruleValuedObjectReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_indices_2_0 = null;

        EObject lv_subReference_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:6997:28: ( ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ) )
            // InternalSCTX.g:6998:1: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? )
            {
            // InternalSCTX.g:6998:1: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? )
            // InternalSCTX.g:6998:2: ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            {
            // InternalSCTX.g:6998:2: ( ( rulePrimeID ) )
            // InternalSCTX.g:6999:1: ( rulePrimeID )
            {
            // InternalSCTX.g:6999:1: ( rulePrimeID )
            // InternalSCTX.g:7000:3: rulePrimeID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getValuedObjectReferenceRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_109);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:7016:2: (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )*
            loop196:
            do {
                int alt196=2;
                int LA196_0 = input.LA(1);

                if ( (LA196_0==32) ) {
                    alt196=1;
                }


                switch (alt196) {
            	case 1 :
            	    // InternalSCTX.g:7016:4: otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']'
            	    {
            	    otherlv_1=(Token)match(input,32,FollowSets000.FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getValuedObjectReferenceAccess().getLeftSquareBracketKeyword_1_0());
            	          
            	    }
            	    // InternalSCTX.g:7020:1: ( (lv_indices_2_0= ruleExpression ) )
            	    // InternalSCTX.g:7021:1: (lv_indices_2_0= ruleExpression )
            	    {
            	    // InternalSCTX.g:7021:1: (lv_indices_2_0= ruleExpression )
            	    // InternalSCTX.g:7022:3: lv_indices_2_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getIndicesExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_29);
            	    lv_indices_2_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getValuedObjectReferenceRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"indices",
            	              		lv_indices_2_0, 
            	              		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,33,FollowSets000.FOLLOW_109); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getValuedObjectReferenceAccess().getRightSquareBracketKeyword_1_2());
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop196;
                }
            } while (true);

            // InternalSCTX.g:7042:3: (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            int alt197=2;
            int LA197_0 = input.LA(1);

            if ( (LA197_0==62) ) {
                alt197=1;
            }
            switch (alt197) {
                case 1 :
                    // InternalSCTX.g:7042:5: otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    {
                    otherlv_4=(Token)match(input,62,FollowSets000.FOLLOW_88); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getValuedObjectReferenceAccess().getFullStopKeyword_2_0());
                          
                    }
                    // InternalSCTX.g:7046:1: ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    // InternalSCTX.g:7047:1: (lv_subReference_5_0= ruleValuedObjectReference )
                    {
                    // InternalSCTX.g:7047:1: (lv_subReference_5_0= ruleValuedObjectReference )
                    // InternalSCTX.g:7048:3: lv_subReference_5_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getSubReferenceValuedObjectReferenceParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subReference_5_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getValuedObjectReferenceRule());
                      	        }
                             		set(
                             			current, 
                             			"subReference",
                              		lv_subReference_5_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObjectReference"


    // $ANTLR start "entryRuleScheduleObjectReference"
    // InternalSCTX.g:7072:1: entryRuleScheduleObjectReference returns [EObject current=null] : iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF ;
    public final EObject entryRuleScheduleObjectReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScheduleObjectReference = null;


        try {
            // InternalSCTX.g:7073:2: (iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF )
            // InternalSCTX.g:7074:2: iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScheduleObjectReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScheduleObjectReference=ruleScheduleObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScheduleObjectReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScheduleObjectReference"


    // $ANTLR start "ruleScheduleObjectReference"
    // InternalSCTX.g:7081:1: ruleScheduleObjectReference returns [EObject current=null] : ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) ) ;
    public final EObject ruleScheduleObjectReference() throws RecognitionException {
        EObject current = null;

        Token lv_priority_1_0=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:7084:28: ( ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) ) )
            // InternalSCTX.g:7085:1: ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) )
            {
            // InternalSCTX.g:7085:1: ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) )
            // InternalSCTX.g:7085:2: ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) )
            {
            // InternalSCTX.g:7085:2: ( ( rulePrimeID ) )
            // InternalSCTX.g:7086:1: ( rulePrimeID )
            {
            // InternalSCTX.g:7086:1: ( rulePrimeID )
            // InternalSCTX.g:7087:3: rulePrimeID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getScheduleObjectReferenceRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getScheduleObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_79);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:7103:2: ( (lv_priority_1_0= RULE_INT ) )
            // InternalSCTX.g:7104:1: (lv_priority_1_0= RULE_INT )
            {
            // InternalSCTX.g:7104:1: (lv_priority_1_0= RULE_INT )
            // InternalSCTX.g:7105:3: lv_priority_1_0= RULE_INT
            {
            lv_priority_1_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_priority_1_0, grammarAccess.getScheduleObjectReferenceAccess().getPriorityINTTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getScheduleObjectReferenceRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"priority",
                      		lv_priority_1_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.INT");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScheduleObjectReference"


    // $ANTLR start "entryRuleReferenceCall"
    // InternalSCTX.g:7129:1: entryRuleReferenceCall returns [EObject current=null] : iv_ruleReferenceCall= ruleReferenceCall EOF ;
    public final EObject entryRuleReferenceCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceCall = null;


        try {
            // InternalSCTX.g:7130:2: (iv_ruleReferenceCall= ruleReferenceCall EOF )
            // InternalSCTX.g:7131:2: iv_ruleReferenceCall= ruleReferenceCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceCall=ruleReferenceCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceCall"


    // $ANTLR start "ruleReferenceCall"
    // InternalSCTX.g:7138:1: ruleReferenceCall returns [EObject current=null] : ( ( ( rulePrimeID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | otherlv_6= '()' ) ) ;
    public final EObject ruleReferenceCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_parameters_2_0 = null;

        EObject lv_parameters_4_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:7141:28: ( ( ( ( rulePrimeID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | otherlv_6= '()' ) ) )
            // InternalSCTX.g:7142:1: ( ( ( rulePrimeID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | otherlv_6= '()' ) )
            {
            // InternalSCTX.g:7142:1: ( ( ( rulePrimeID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | otherlv_6= '()' ) )
            // InternalSCTX.g:7142:2: ( ( rulePrimeID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | otherlv_6= '()' )
            {
            // InternalSCTX.g:7142:2: ( ( rulePrimeID ) )
            // InternalSCTX.g:7143:1: ( rulePrimeID )
            {
            // InternalSCTX.g:7143:1: ( rulePrimeID )
            // InternalSCTX.g:7144:3: rulePrimeID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getReferenceCallRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getReferenceCallAccess().getValuedObjectValuedObjectCrossReference_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_91);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:7160:2: ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | otherlv_6= '()' )
            int alt199=2;
            int LA199_0 = input.LA(1);

            if ( (LA199_0==26) ) {
                alt199=1;
            }
            else if ( (LA199_0==63) ) {
                alt199=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 199, 0, input);

                throw nvae;
            }
            switch (alt199) {
                case 1 :
                    // InternalSCTX.g:7160:3: (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' )
                    {
                    // InternalSCTX.g:7160:3: (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' )
                    // InternalSCTX.g:7160:5: otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')'
                    {
                    otherlv_1=(Token)match(input,26,FollowSets000.FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getReferenceCallAccess().getLeftParenthesisKeyword_1_0_0());
                          
                    }
                    // InternalSCTX.g:7164:1: ( (lv_parameters_2_0= ruleParameter ) )
                    // InternalSCTX.g:7165:1: (lv_parameters_2_0= ruleParameter )
                    {
                    // InternalSCTX.g:7165:1: (lv_parameters_2_0= ruleParameter )
                    // InternalSCTX.g:7166:3: lv_parameters_2_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getReferenceCallAccess().getParametersParameterParserRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_24);
                    lv_parameters_2_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getReferenceCallRule());
                      	        }
                             		add(
                             			current, 
                             			"parameters",
                              		lv_parameters_2_0, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:7182:2: (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )*
                    loop198:
                    do {
                        int alt198=2;
                        int LA198_0 = input.LA(1);

                        if ( (LA198_0==27) ) {
                            alt198=1;
                        }


                        switch (alt198) {
                    	case 1 :
                    	    // InternalSCTX.g:7182:4: otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) )
                    	    {
                    	    otherlv_3=(Token)match(input,27,FollowSets000.FOLLOW_23); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getReferenceCallAccess().getCommaKeyword_1_0_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:7186:1: ( (lv_parameters_4_0= ruleParameter ) )
                    	    // InternalSCTX.g:7187:1: (lv_parameters_4_0= ruleParameter )
                    	    {
                    	    // InternalSCTX.g:7187:1: (lv_parameters_4_0= ruleParameter )
                    	    // InternalSCTX.g:7188:3: lv_parameters_4_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getReferenceCallAccess().getParametersParameterParserRuleCall_1_0_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_24);
                    	    lv_parameters_4_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getReferenceCallRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"parameters",
                    	              		lv_parameters_4_0, 
                    	              		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop198;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getReferenceCallAccess().getRightParenthesisKeyword_1_0_3());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7209:7: otherlv_6= '()'
                    {
                    otherlv_6=(Token)match(input,63,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getReferenceCallAccess().getLeftParenthesisRightParenthesisKeyword_1_1());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceCall"


    // $ANTLR start "entryRuleFunctionCall"
    // InternalSCTX.g:7221:1: entryRuleFunctionCall returns [EObject current=null] : iv_ruleFunctionCall= ruleFunctionCall EOF ;
    public final EObject entryRuleFunctionCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionCall = null;


        try {
            // InternalSCTX.g:7222:2: (iv_ruleFunctionCall= ruleFunctionCall EOF )
            // InternalSCTX.g:7223:2: iv_ruleFunctionCall= ruleFunctionCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunctionCall=ruleFunctionCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionCall"


    // $ANTLR start "ruleFunctionCall"
    // InternalSCTX.g:7230:1: ruleFunctionCall returns [EObject current=null] : ( (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) | (otherlv_8= '<' ( (lv_functionName_9_0= RULE_ID ) ) ( (otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')' ) | otherlv_15= '()' ) otherlv_16= '>' ) ) ;
    public final EObject ruleFunctionCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_functionName_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token lv_functionName_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;

        EObject lv_parameters_11_0 = null;

        EObject lv_parameters_13_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:7233:28: ( ( (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) | (otherlv_8= '<' ( (lv_functionName_9_0= RULE_ID ) ) ( (otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')' ) | otherlv_15= '()' ) otherlv_16= '>' ) ) )
            // InternalSCTX.g:7234:1: ( (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) | (otherlv_8= '<' ( (lv_functionName_9_0= RULE_ID ) ) ( (otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')' ) | otherlv_15= '()' ) otherlv_16= '>' ) )
            {
            // InternalSCTX.g:7234:1: ( (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) | (otherlv_8= '<' ( (lv_functionName_9_0= RULE_ID ) ) ( (otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')' ) | otherlv_15= '()' ) otherlv_16= '>' ) )
            int alt204=2;
            int LA204_0 = input.LA(1);

            if ( (LA204_0==57) ) {
                alt204=1;
            }
            else if ( (LA204_0==64) ) {
                alt204=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 204, 0, input);

                throw nvae;
            }
            switch (alt204) {
                case 1 :
                    // InternalSCTX.g:7234:2: (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) )
                    {
                    // InternalSCTX.g:7234:2: (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) )
                    // InternalSCTX.g:7234:4: otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' )
                    {
                    otherlv_0=(Token)match(input,57,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getFunctionCallAccess().getExternKeyword_0_0());
                          
                    }
                    // InternalSCTX.g:7238:1: ( (lv_functionName_1_0= RULE_ID ) )
                    // InternalSCTX.g:7239:1: (lv_functionName_1_0= RULE_ID )
                    {
                    // InternalSCTX.g:7239:1: (lv_functionName_1_0= RULE_ID )
                    // InternalSCTX.g:7240:3: lv_functionName_1_0= RULE_ID
                    {
                    lv_functionName_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_functionName_1_0, grammarAccess.getFunctionCallAccess().getFunctionNameIDTerminalRuleCall_0_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getFunctionCallRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"functionName",
                              		lv_functionName_1_0, 
                              		"org.eclipse.xtext.common.Terminals.ID");
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:7256:2: ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' )
                    int alt201=2;
                    int LA201_0 = input.LA(1);

                    if ( (LA201_0==26) ) {
                        alt201=1;
                    }
                    else if ( (LA201_0==63) ) {
                        alt201=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 201, 0, input);

                        throw nvae;
                    }
                    switch (alt201) {
                        case 1 :
                            // InternalSCTX.g:7256:3: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
                            {
                            // InternalSCTX.g:7256:3: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
                            // InternalSCTX.g:7256:5: otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')'
                            {
                            otherlv_2=(Token)match(input,26,FollowSets000.FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_2, grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_0_2_0_0());
                                  
                            }
                            // InternalSCTX.g:7260:1: ( (lv_parameters_3_0= ruleParameter ) )
                            // InternalSCTX.g:7261:1: (lv_parameters_3_0= ruleParameter )
                            {
                            // InternalSCTX.g:7261:1: (lv_parameters_3_0= ruleParameter )
                            // InternalSCTX.g:7262:3: lv_parameters_3_0= ruleParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_0_2_0_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_24);
                            lv_parameters_3_0=ruleParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getFunctionCallRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"parameters",
                                      		lv_parameters_3_0, 
                                      		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalSCTX.g:7278:2: (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )*
                            loop200:
                            do {
                                int alt200=2;
                                int LA200_0 = input.LA(1);

                                if ( (LA200_0==27) ) {
                                    alt200=1;
                                }


                                switch (alt200) {
                            	case 1 :
                            	    // InternalSCTX.g:7278:4: otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) )
                            	    {
                            	    otherlv_4=(Token)match(input,27,FollowSets000.FOLLOW_23); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_4, grammarAccess.getFunctionCallAccess().getCommaKeyword_0_2_0_2_0());
                            	          
                            	    }
                            	    // InternalSCTX.g:7282:1: ( (lv_parameters_5_0= ruleParameter ) )
                            	    // InternalSCTX.g:7283:1: (lv_parameters_5_0= ruleParameter )
                            	    {
                            	    // InternalSCTX.g:7283:1: (lv_parameters_5_0= ruleParameter )
                            	    // InternalSCTX.g:7284:3: lv_parameters_5_0= ruleParameter
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_0_2_0_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_24);
                            	    lv_parameters_5_0=ruleParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getFunctionCallRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"parameters",
                            	              		lv_parameters_5_0, 
                            	              		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop200;
                                }
                            } while (true);

                            otherlv_6=(Token)match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_6, grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_0_2_0_3());
                                  
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:7305:7: otherlv_7= '()'
                            {
                            otherlv_7=(Token)match(input,63,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_7, grammarAccess.getFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_0_2_1());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7310:6: (otherlv_8= '<' ( (lv_functionName_9_0= RULE_ID ) ) ( (otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')' ) | otherlv_15= '()' ) otherlv_16= '>' )
                    {
                    // InternalSCTX.g:7310:6: (otherlv_8= '<' ( (lv_functionName_9_0= RULE_ID ) ) ( (otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')' ) | otherlv_15= '()' ) otherlv_16= '>' )
                    // InternalSCTX.g:7310:8: otherlv_8= '<' ( (lv_functionName_9_0= RULE_ID ) ) ( (otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')' ) | otherlv_15= '()' ) otherlv_16= '>'
                    {
                    otherlv_8=(Token)match(input,64,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getFunctionCallAccess().getLessThanSignKeyword_1_0());
                          
                    }
                    // InternalSCTX.g:7314:1: ( (lv_functionName_9_0= RULE_ID ) )
                    // InternalSCTX.g:7315:1: (lv_functionName_9_0= RULE_ID )
                    {
                    // InternalSCTX.g:7315:1: (lv_functionName_9_0= RULE_ID )
                    // InternalSCTX.g:7316:3: lv_functionName_9_0= RULE_ID
                    {
                    lv_functionName_9_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_functionName_9_0, grammarAccess.getFunctionCallAccess().getFunctionNameIDTerminalRuleCall_1_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getFunctionCallRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"functionName",
                              		lv_functionName_9_0, 
                              		"org.eclipse.xtext.common.Terminals.ID");
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:7332:2: ( (otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')' ) | otherlv_15= '()' )
                    int alt203=2;
                    int LA203_0 = input.LA(1);

                    if ( (LA203_0==26) ) {
                        alt203=1;
                    }
                    else if ( (LA203_0==63) ) {
                        alt203=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 203, 0, input);

                        throw nvae;
                    }
                    switch (alt203) {
                        case 1 :
                            // InternalSCTX.g:7332:3: (otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')' )
                            {
                            // InternalSCTX.g:7332:3: (otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')' )
                            // InternalSCTX.g:7332:5: otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')'
                            {
                            otherlv_10=(Token)match(input,26,FollowSets000.FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_10, grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1_2_0_0());
                                  
                            }
                            // InternalSCTX.g:7336:1: ( (lv_parameters_11_0= ruleParameter ) )
                            // InternalSCTX.g:7337:1: (lv_parameters_11_0= ruleParameter )
                            {
                            // InternalSCTX.g:7337:1: (lv_parameters_11_0= ruleParameter )
                            // InternalSCTX.g:7338:3: lv_parameters_11_0= ruleParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_1_2_0_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_24);
                            lv_parameters_11_0=ruleParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getFunctionCallRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"parameters",
                                      		lv_parameters_11_0, 
                                      		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalSCTX.g:7354:2: (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )*
                            loop202:
                            do {
                                int alt202=2;
                                int LA202_0 = input.LA(1);

                                if ( (LA202_0==27) ) {
                                    alt202=1;
                                }


                                switch (alt202) {
                            	case 1 :
                            	    // InternalSCTX.g:7354:4: otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) )
                            	    {
                            	    otherlv_12=(Token)match(input,27,FollowSets000.FOLLOW_23); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_12, grammarAccess.getFunctionCallAccess().getCommaKeyword_1_2_0_2_0());
                            	          
                            	    }
                            	    // InternalSCTX.g:7358:1: ( (lv_parameters_13_0= ruleParameter ) )
                            	    // InternalSCTX.g:7359:1: (lv_parameters_13_0= ruleParameter )
                            	    {
                            	    // InternalSCTX.g:7359:1: (lv_parameters_13_0= ruleParameter )
                            	    // InternalSCTX.g:7360:3: lv_parameters_13_0= ruleParameter
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_1_2_0_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_24);
                            	    lv_parameters_13_0=ruleParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getFunctionCallRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"parameters",
                            	              		lv_parameters_13_0, 
                            	              		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop202;
                                }
                            } while (true);

                            otherlv_14=(Token)match(input,28,FollowSets000.FOLLOW_93); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_14, grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_1_2_0_3());
                                  
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:7381:7: otherlv_15= '()'
                            {
                            otherlv_15=(Token)match(input,63,FollowSets000.FOLLOW_93); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_15, grammarAccess.getFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_1_2_1());
                                  
                            }

                            }
                            break;

                    }

                    otherlv_16=(Token)match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_16, grammarAccess.getFunctionCallAccess().getGreaterThanSignKeyword_1_3());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionCall"


    // $ANTLR start "entryRuleTextExpression"
    // InternalSCTX.g:7397:1: entryRuleTextExpression returns [EObject current=null] : iv_ruleTextExpression= ruleTextExpression EOF ;
    public final EObject entryRuleTextExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTextExpression = null;


        try {
            // InternalSCTX.g:7398:2: (iv_ruleTextExpression= ruleTextExpression EOF )
            // InternalSCTX.g:7399:2: iv_ruleTextExpression= ruleTextExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTextExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTextExpression=ruleTextExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTextExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTextExpression"


    // $ANTLR start "ruleTextExpression"
    // InternalSCTX.g:7406:1: ruleTextExpression returns [EObject current=null] : ( (lv_text_0_0= RULE_HOSTCODE ) ) ;
    public final EObject ruleTextExpression() throws RecognitionException {
        EObject current = null;

        Token lv_text_0_0=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:7409:28: ( ( (lv_text_0_0= RULE_HOSTCODE ) ) )
            // InternalSCTX.g:7410:1: ( (lv_text_0_0= RULE_HOSTCODE ) )
            {
            // InternalSCTX.g:7410:1: ( (lv_text_0_0= RULE_HOSTCODE ) )
            // InternalSCTX.g:7411:1: (lv_text_0_0= RULE_HOSTCODE )
            {
            // InternalSCTX.g:7411:1: (lv_text_0_0= RULE_HOSTCODE )
            // InternalSCTX.g:7412:3: lv_text_0_0= RULE_HOSTCODE
            {
            lv_text_0_0=(Token)match(input,RULE_HOSTCODE,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_text_0_0, grammarAccess.getTextExpressionAccess().getTextHOSTCODETerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getTextExpressionRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"text",
                      		lv_text_0_0, 
                      		"de.cau.cs.kieler.kexpressions.KExpressions.HOSTCODE");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTextExpression"


    // $ANTLR start "entryRuleIntValue"
    // InternalSCTX.g:7436:1: entryRuleIntValue returns [EObject current=null] : iv_ruleIntValue= ruleIntValue EOF ;
    public final EObject entryRuleIntValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntValue = null;


        try {
            // InternalSCTX.g:7437:2: (iv_ruleIntValue= ruleIntValue EOF )
            // InternalSCTX.g:7438:2: iv_ruleIntValue= ruleIntValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIntValue=ruleIntValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntValue"


    // $ANTLR start "ruleIntValue"
    // InternalSCTX.g:7445:1: ruleIntValue returns [EObject current=null] : ( (lv_value_0_0= RULE_INT ) ) ;
    public final EObject ruleIntValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:7448:28: ( ( (lv_value_0_0= RULE_INT ) ) )
            // InternalSCTX.g:7449:1: ( (lv_value_0_0= RULE_INT ) )
            {
            // InternalSCTX.g:7449:1: ( (lv_value_0_0= RULE_INT ) )
            // InternalSCTX.g:7450:1: (lv_value_0_0= RULE_INT )
            {
            // InternalSCTX.g:7450:1: (lv_value_0_0= RULE_INT )
            // InternalSCTX.g:7451:3: lv_value_0_0= RULE_INT
            {
            lv_value_0_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getIntValueRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.INT");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntValue"


    // $ANTLR start "entryRuleFloatValue"
    // InternalSCTX.g:7475:1: entryRuleFloatValue returns [EObject current=null] : iv_ruleFloatValue= ruleFloatValue EOF ;
    public final EObject entryRuleFloatValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFloatValue = null;


        try {
            // InternalSCTX.g:7476:2: (iv_ruleFloatValue= ruleFloatValue EOF )
            // InternalSCTX.g:7477:2: iv_ruleFloatValue= ruleFloatValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFloatValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFloatValue=ruleFloatValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFloatValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFloatValue"


    // $ANTLR start "ruleFloatValue"
    // InternalSCTX.g:7484:1: ruleFloatValue returns [EObject current=null] : ( (lv_value_0_0= RULE_FLOAT ) ) ;
    public final EObject ruleFloatValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:7487:28: ( ( (lv_value_0_0= RULE_FLOAT ) ) )
            // InternalSCTX.g:7488:1: ( (lv_value_0_0= RULE_FLOAT ) )
            {
            // InternalSCTX.g:7488:1: ( (lv_value_0_0= RULE_FLOAT ) )
            // InternalSCTX.g:7489:1: (lv_value_0_0= RULE_FLOAT )
            {
            // InternalSCTX.g:7489:1: (lv_value_0_0= RULE_FLOAT )
            // InternalSCTX.g:7490:3: lv_value_0_0= RULE_FLOAT
            {
            lv_value_0_0=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getFloatValueAccess().getValueFLOATTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getFloatValueRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.FLOAT");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFloatValue"


    // $ANTLR start "entryRuleBoolValue"
    // InternalSCTX.g:7514:1: entryRuleBoolValue returns [EObject current=null] : iv_ruleBoolValue= ruleBoolValue EOF ;
    public final EObject entryRuleBoolValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBoolValue = null;


        try {
            // InternalSCTX.g:7515:2: (iv_ruleBoolValue= ruleBoolValue EOF )
            // InternalSCTX.g:7516:2: iv_ruleBoolValue= ruleBoolValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBoolValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBoolValue=ruleBoolValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBoolValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBoolValue"


    // $ANTLR start "ruleBoolValue"
    // InternalSCTX.g:7523:1: ruleBoolValue returns [EObject current=null] : ( (lv_value_0_0= RULE_BOOLEAN ) ) ;
    public final EObject ruleBoolValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:7526:28: ( ( (lv_value_0_0= RULE_BOOLEAN ) ) )
            // InternalSCTX.g:7527:1: ( (lv_value_0_0= RULE_BOOLEAN ) )
            {
            // InternalSCTX.g:7527:1: ( (lv_value_0_0= RULE_BOOLEAN ) )
            // InternalSCTX.g:7528:1: (lv_value_0_0= RULE_BOOLEAN )
            {
            // InternalSCTX.g:7528:1: (lv_value_0_0= RULE_BOOLEAN )
            // InternalSCTX.g:7529:3: lv_value_0_0= RULE_BOOLEAN
            {
            lv_value_0_0=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getBoolValueAccess().getValueBOOLEANTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getBoolValueRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.BOOLEAN");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBoolValue"


    // $ANTLR start "entryRuleStringValue"
    // InternalSCTX.g:7553:1: entryRuleStringValue returns [EObject current=null] : iv_ruleStringValue= ruleStringValue EOF ;
    public final EObject entryRuleStringValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringValue = null;


        try {
            // InternalSCTX.g:7554:2: (iv_ruleStringValue= ruleStringValue EOF )
            // InternalSCTX.g:7555:2: iv_ruleStringValue= ruleStringValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringValue=ruleStringValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringValue"


    // $ANTLR start "ruleStringValue"
    // InternalSCTX.g:7562:1: ruleStringValue returns [EObject current=null] : ( (lv_value_0_0= RULE_STRING ) ) ;
    public final EObject ruleStringValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:7565:28: ( ( (lv_value_0_0= RULE_STRING ) ) )
            // InternalSCTX.g:7566:1: ( (lv_value_0_0= RULE_STRING ) )
            {
            // InternalSCTX.g:7566:1: ( (lv_value_0_0= RULE_STRING ) )
            // InternalSCTX.g:7567:1: (lv_value_0_0= RULE_STRING )
            {
            // InternalSCTX.g:7567:1: (lv_value_0_0= RULE_STRING )
            // InternalSCTX.g:7568:3: lv_value_0_0= RULE_STRING
            {
            lv_value_0_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getStringValueRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.STRING");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringValue"


    // $ANTLR start "entryRuleAnnotation"
    // InternalSCTX.g:7596:1: entryRuleAnnotation returns [EObject current=null] : iv_ruleAnnotation= ruleAnnotation EOF ;
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotation = null;


        try {
            // InternalSCTX.g:7597:2: (iv_ruleAnnotation= ruleAnnotation EOF )
            // InternalSCTX.g:7598:2: iv_ruleAnnotation= ruleAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotation"


    // $ANTLR start "ruleAnnotation"
    // InternalSCTX.g:7605:1: ruleAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) ;
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_KeyStringValueAnnotation_1 = null;

        EObject this_TypedKeyStringValueAnnotation_2 = null;

        EObject this_TagAnnotation_3 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:7608:28: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) )
            // InternalSCTX.g:7609:1: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            {
            // InternalSCTX.g:7609:1: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            int alt205=4;
            alt205 = dfa205.predict(input);
            switch (alt205) {
                case 1 :
                    // InternalSCTX.g:7610:2: this_CommentAnnotation_0= ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAnnotationAccess().getCommentAnnotationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_CommentAnnotation_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7623:2: this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_KeyStringValueAnnotation_1=ruleKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_KeyStringValueAnnotation_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:7636:2: this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypedKeyStringValueAnnotation_2=ruleTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TypedKeyStringValueAnnotation_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:7649:2: this_TagAnnotation_3= ruleTagAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAnnotationAccess().getTagAnnotationParserRuleCall_3()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TagAnnotation_3=ruleTagAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TagAnnotation_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotation"


    // $ANTLR start "entryRulePragma"
    // InternalSCTX.g:7668:1: entryRulePragma returns [EObject current=null] : iv_rulePragma= rulePragma EOF ;
    public final EObject entryRulePragma() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePragma = null;


        try {
            // InternalSCTX.g:7669:2: (iv_rulePragma= rulePragma EOF )
            // InternalSCTX.g:7670:2: iv_rulePragma= rulePragma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePragma=rulePragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePragma; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePragma"


    // $ANTLR start "rulePragma"
    // InternalSCTX.g:7677:1: rulePragma returns [EObject current=null] : (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag ) ;
    public final EObject rulePragma() throws RecognitionException {
        EObject current = null;

        EObject this_StringPragma_0 = null;

        EObject this_PragmaTag_1 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:7680:28: ( (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag ) )
            // InternalSCTX.g:7681:1: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )
            {
            // InternalSCTX.g:7681:1: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )
            int alt206=2;
            alt206 = dfa206.predict(input);
            switch (alt206) {
                case 1 :
                    // InternalSCTX.g:7682:2: this_StringPragma_0= ruleStringPragma
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPragmaAccess().getStringPragmaParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringPragma_0=ruleStringPragma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_StringPragma_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7695:2: this_PragmaTag_1= rulePragmaTag
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPragmaAccess().getPragmaTagParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PragmaTag_1=rulePragmaTag();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_PragmaTag_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePragma"


    // $ANTLR start "entryRuleRestrictedTypeAnnotation"
    // InternalSCTX.g:7716:1: entryRuleRestrictedTypeAnnotation returns [EObject current=null] : iv_ruleRestrictedTypeAnnotation= ruleRestrictedTypeAnnotation EOF ;
    public final EObject entryRuleRestrictedTypeAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictedTypeAnnotation = null;


        try {
            // InternalSCTX.g:7717:2: (iv_ruleRestrictedTypeAnnotation= ruleRestrictedTypeAnnotation EOF )
            // InternalSCTX.g:7718:2: iv_ruleRestrictedTypeAnnotation= ruleRestrictedTypeAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictedTypeAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRestrictedTypeAnnotation=ruleRestrictedTypeAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictedTypeAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictedTypeAnnotation"


    // $ANTLR start "ruleRestrictedTypeAnnotation"
    // InternalSCTX.g:7725:1: ruleRestrictedTypeAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) ;
    public final EObject ruleRestrictedTypeAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_RestrictedKeyStringValueAnnotation_1 = null;

        EObject this_RestrictedTypedKeyStringValueAnnotation_2 = null;

        EObject this_TagAnnotation_3 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:7728:28: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) )
            // InternalSCTX.g:7729:1: (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            {
            // InternalSCTX.g:7729:1: (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            int alt207=4;
            alt207 = dfa207.predict(input);
            switch (alt207) {
                case 1 :
                    // InternalSCTX.g:7730:2: this_CommentAnnotation_0= ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRestrictedTypeAnnotationAccess().getCommentAnnotationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_CommentAnnotation_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7743:2: this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRestrictedTypeAnnotationAccess().getRestrictedKeyStringValueAnnotationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RestrictedKeyStringValueAnnotation_1=ruleRestrictedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_RestrictedKeyStringValueAnnotation_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:7756:2: this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRestrictedTypeAnnotationAccess().getRestrictedTypedKeyStringValueAnnotationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RestrictedTypedKeyStringValueAnnotation_2=ruleRestrictedTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_RestrictedTypedKeyStringValueAnnotation_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:7769:2: this_TagAnnotation_3= ruleTagAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRestrictedTypeAnnotationAccess().getTagAnnotationParserRuleCall_3()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TagAnnotation_3=ruleTagAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TagAnnotation_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictedTypeAnnotation"


    // $ANTLR start "entryRuleQuotedStringAnnotation"
    // InternalSCTX.g:7788:1: entryRuleQuotedStringAnnotation returns [EObject current=null] : iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF ;
    public final EObject entryRuleQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedStringAnnotation = null;


        try {
            // InternalSCTX.g:7789:2: (iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF )
            // InternalSCTX.g:7790:2: iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedStringAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedStringAnnotation=ruleQuotedStringAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedStringAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedStringAnnotation"


    // $ANTLR start "ruleQuotedStringAnnotation"
    // InternalSCTX.g:7797:1: ruleQuotedStringAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) ;
    public final EObject ruleQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_QuotedKeyStringValueAnnotation_1 = null;

        EObject this_QuotedTypedKeyStringValueAnnotation_2 = null;

        EObject this_TagAnnotation_3 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:7800:28: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) )
            // InternalSCTX.g:7801:1: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            {
            // InternalSCTX.g:7801:1: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            int alt208=4;
            alt208 = dfa208.predict(input);
            switch (alt208) {
                case 1 :
                    // InternalSCTX.g:7802:2: this_CommentAnnotation_0= ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getCommentAnnotationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_CommentAnnotation_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7815:2: this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getQuotedKeyStringValueAnnotationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QuotedKeyStringValueAnnotation_1=ruleQuotedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_QuotedKeyStringValueAnnotation_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:7828:2: this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getQuotedTypedKeyStringValueAnnotationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QuotedTypedKeyStringValueAnnotation_2=ruleQuotedTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_QuotedTypedKeyStringValueAnnotation_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:7841:2: this_TagAnnotation_3= ruleTagAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getTagAnnotationParserRuleCall_3()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TagAnnotation_3=ruleTagAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TagAnnotation_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedStringAnnotation"


    // $ANTLR start "entryRuleCommentAnnotation"
    // InternalSCTX.g:7860:1: entryRuleCommentAnnotation returns [EObject current=null] : iv_ruleCommentAnnotation= ruleCommentAnnotation EOF ;
    public final EObject entryRuleCommentAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommentAnnotation = null;


        try {
            // InternalSCTX.g:7861:2: (iv_ruleCommentAnnotation= ruleCommentAnnotation EOF )
            // InternalSCTX.g:7862:2: iv_ruleCommentAnnotation= ruleCommentAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommentAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCommentAnnotation=ruleCommentAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommentAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommentAnnotation"


    // $ANTLR start "ruleCommentAnnotation"
    // InternalSCTX.g:7869:1: ruleCommentAnnotation returns [EObject current=null] : ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) ) ;
    public final EObject ruleCommentAnnotation() throws RecognitionException {
        EObject current = null;

        Token lv_values_0_0=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:7872:28: ( ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) ) )
            // InternalSCTX.g:7873:1: ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) )
            {
            // InternalSCTX.g:7873:1: ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) )
            // InternalSCTX.g:7874:1: (lv_values_0_0= RULE_COMMENT_ANNOTATION )
            {
            // InternalSCTX.g:7874:1: (lv_values_0_0= RULE_COMMENT_ANNOTATION )
            // InternalSCTX.g:7875:3: lv_values_0_0= RULE_COMMENT_ANNOTATION
            {
            lv_values_0_0=(Token)match(input,RULE_COMMENT_ANNOTATION,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_values_0_0, grammarAccess.getCommentAnnotationAccess().getValuesCOMMENT_ANNOTATIONTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getCommentAnnotationRule());
              	        }
                     		addWithLastConsumed(
                     			current, 
                     			"values",
                      		lv_values_0_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.COMMENT_ANNOTATION");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommentAnnotation"


    // $ANTLR start "entryRuleCommentAnnotatonSL"
    // InternalSCTX.g:7899:1: entryRuleCommentAnnotatonSL returns [EObject current=null] : iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF ;
    public final EObject entryRuleCommentAnnotatonSL() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommentAnnotatonSL = null;


        try {
            // InternalSCTX.g:7900:2: (iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF )
            // InternalSCTX.g:7901:2: iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommentAnnotatonSLRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCommentAnnotatonSL=ruleCommentAnnotatonSL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommentAnnotatonSL; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommentAnnotatonSL"


    // $ANTLR start "ruleCommentAnnotatonSL"
    // InternalSCTX.g:7908:1: ruleCommentAnnotatonSL returns [EObject current=null] : ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) ) ;
    public final EObject ruleCommentAnnotatonSL() throws RecognitionException {
        EObject current = null;

        Token lv_values_0_0=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:7911:28: ( ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) ) )
            // InternalSCTX.g:7912:1: ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) )
            {
            // InternalSCTX.g:7912:1: ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) )
            // InternalSCTX.g:7913:1: (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION )
            {
            // InternalSCTX.g:7913:1: (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION )
            // InternalSCTX.g:7914:3: lv_values_0_0= RULE_SL_COMMENT_ANNOTATION
            {
            lv_values_0_0=(Token)match(input,RULE_SL_COMMENT_ANNOTATION,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_values_0_0, grammarAccess.getCommentAnnotatonSLAccess().getValuesSL_COMMENT_ANNOTATIONTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getCommentAnnotatonSLRule());
              	        }
                     		addWithLastConsumed(
                     			current, 
                     			"values",
                      		lv_values_0_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.SL_COMMENT_ANNOTATION");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommentAnnotatonSL"


    // $ANTLR start "entryRuleTagAnnotation"
    // InternalSCTX.g:7938:1: entryRuleTagAnnotation returns [EObject current=null] : iv_ruleTagAnnotation= ruleTagAnnotation EOF ;
    public final EObject entryRuleTagAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTagAnnotation = null;


        try {
            // InternalSCTX.g:7939:2: (iv_ruleTagAnnotation= ruleTagAnnotation EOF )
            // InternalSCTX.g:7940:2: iv_ruleTagAnnotation= ruleTagAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTagAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTagAnnotation=ruleTagAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTagAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTagAnnotation"


    // $ANTLR start "ruleTagAnnotation"
    // InternalSCTX.g:7947:1: ruleTagAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ) ;
    public final EObject ruleTagAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:7950:28: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ) )
            // InternalSCTX.g:7951:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) )
            {
            // InternalSCTX.g:7951:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) )
            // InternalSCTX.g:7951:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) )
            {
            otherlv_0=(Token)match(input,76,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTagAnnotationAccess().getCommercialAtKeyword_0());
                  
            }
            // InternalSCTX.g:7955:1: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:7956:1: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:7956:1: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:7957:3: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTagAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTagAnnotationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTagAnnotation"


    // $ANTLR start "entryRulePragmaTag"
    // InternalSCTX.g:7981:1: entryRulePragmaTag returns [EObject current=null] : iv_rulePragmaTag= rulePragmaTag EOF ;
    public final EObject entryRulePragmaTag() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePragmaTag = null;


        try {
            // InternalSCTX.g:7982:2: (iv_rulePragmaTag= rulePragmaTag EOF )
            // InternalSCTX.g:7983:2: iv_rulePragmaTag= rulePragmaTag EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPragmaTagRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePragmaTag=rulePragmaTag();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePragmaTag; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePragmaTag"


    // $ANTLR start "rulePragmaTag"
    // InternalSCTX.g:7990:1: rulePragmaTag returns [EObject current=null] : (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ) ;
    public final EObject rulePragmaTag() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:7993:28: ( (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ) )
            // InternalSCTX.g:7994:1: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) )
            {
            // InternalSCTX.g:7994:1: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) )
            // InternalSCTX.g:7994:3: otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) )
            {
            otherlv_0=(Token)match(input,77,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getPragmaTagAccess().getNumberSignKeyword_0());
                  
            }
            // InternalSCTX.g:7998:1: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:7999:1: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:7999:1: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:8000:3: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPragmaTagAccess().getNameExtendedIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPragmaTagRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePragmaTag"


    // $ANTLR start "entryRuleKeyStringValueAnnotation"
    // InternalSCTX.g:8024:1: entryRuleKeyStringValueAnnotation returns [EObject current=null] : iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF ;
    public final EObject entryRuleKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeyStringValueAnnotation = null;


        try {
            // InternalSCTX.g:8025:2: (iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF )
            // InternalSCTX.g:8026:2: iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleKeyStringValueAnnotation=ruleKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeyStringValueAnnotation"


    // $ANTLR start "ruleKeyStringValueAnnotation"
    // InternalSCTX.g:8033:1: ruleKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) ;
    public final EObject ruleKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:8036:28: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) )
            // InternalSCTX.g:8037:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalSCTX.g:8037:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            // InternalSCTX.g:8037:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,76,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
                  
            }
            // InternalSCTX.g:8041:1: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:8042:1: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:8042:1: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:8043:3: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_110);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:8059:2: ( (lv_values_2_0= ruleEStringAllTypes ) )
            // InternalSCTX.g:8060:1: (lv_values_2_0= ruleEStringAllTypes )
            {
            // InternalSCTX.g:8060:1: (lv_values_2_0= ruleEStringAllTypes )
            // InternalSCTX.g:8061:3: lv_values_2_0= ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_95);
            lv_values_2_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
              	        }
                     		add(
                     			current, 
                     			"values",
                      		lv_values_2_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:8077:2: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            loop209:
            do {
                int alt209=2;
                int LA209_0 = input.LA(1);

                if ( (LA209_0==27) ) {
                    alt209=1;
                }


                switch (alt209) {
            	case 1 :
            	    // InternalSCTX.g:8077:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    {
            	    otherlv_3=(Token)match(input,27,FollowSets000.FOLLOW_110); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	          
            	    }
            	    // InternalSCTX.g:8081:1: ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    // InternalSCTX.g:8082:1: (lv_values_4_0= ruleEStringAllTypes )
            	    {
            	    // InternalSCTX.g:8082:1: (lv_values_4_0= ruleEStringAllTypes )
            	    // InternalSCTX.g:8083:3: lv_values_4_0= ruleEStringAllTypes
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_95);
            	    lv_values_4_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"values",
            	              		lv_values_4_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop209;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeyStringValueAnnotation"


    // $ANTLR start "entryRuleRestrictedKeyStringValueAnnotation"
    // InternalSCTX.g:8107:1: entryRuleRestrictedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleRestrictedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictedKeyStringValueAnnotation = null;


        try {
            // InternalSCTX.g:8108:2: (iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:8109:2: iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRestrictedKeyStringValueAnnotation=ruleRestrictedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictedKeyStringValueAnnotation"


    // $ANTLR start "ruleRestrictedKeyStringValueAnnotation"
    // InternalSCTX.g:8116:1: ruleRestrictedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* ) ;
    public final EObject ruleRestrictedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:8119:28: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* ) )
            // InternalSCTX.g:8120:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* )
            {
            // InternalSCTX.g:8120:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* )
            // InternalSCTX.g:8120:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )*
            {
            otherlv_0=(Token)match(input,76,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
                  
            }
            // InternalSCTX.g:8124:1: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:8125:1: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:8125:1: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:8126:3: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_111);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:8142:2: ( (lv_values_2_0= ruleEStringBoolean ) )
            // InternalSCTX.g:8143:1: (lv_values_2_0= ruleEStringBoolean )
            {
            // InternalSCTX.g:8143:1: (lv_values_2_0= ruleEStringBoolean )
            // InternalSCTX.g:8144:3: lv_values_2_0= ruleEStringBoolean
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_95);
            lv_values_2_0=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
              	        }
                     		add(
                     			current, 
                     			"values",
                      		lv_values_2_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:8160:2: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )*
            loop210:
            do {
                int alt210=2;
                int LA210_0 = input.LA(1);

                if ( (LA210_0==27) ) {
                    alt210=1;
                }


                switch (alt210) {
            	case 1 :
            	    // InternalSCTX.g:8160:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) )
            	    {
            	    otherlv_3=(Token)match(input,27,FollowSets000.FOLLOW_111); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	          
            	    }
            	    // InternalSCTX.g:8164:1: ( (lv_values_4_0= ruleEStringBoolean ) )
            	    // InternalSCTX.g:8165:1: (lv_values_4_0= ruleEStringBoolean )
            	    {
            	    // InternalSCTX.g:8165:1: (lv_values_4_0= ruleEStringBoolean )
            	    // InternalSCTX.g:8166:3: lv_values_4_0= ruleEStringBoolean
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_95);
            	    lv_values_4_0=ruleEStringBoolean();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"values",
            	              		lv_values_4_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop210;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleStringPragma"
    // InternalSCTX.g:8190:1: entryRuleStringPragma returns [EObject current=null] : iv_ruleStringPragma= ruleStringPragma EOF ;
    public final EObject entryRuleStringPragma() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringPragma = null;


        try {
            // InternalSCTX.g:8191:2: (iv_ruleStringPragma= ruleStringPragma EOF )
            // InternalSCTX.g:8192:2: iv_ruleStringPragma= ruleStringPragma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringPragma=ruleStringPragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringPragma; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringPragma"


    // $ANTLR start "ruleStringPragma"
    // InternalSCTX.g:8199:1: ruleStringPragma returns [EObject current=null] : (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) ;
    public final EObject ruleStringPragma() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:8202:28: ( (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) )
            // InternalSCTX.g:8203:1: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalSCTX.g:8203:1: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            // InternalSCTX.g:8203:3: otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,77,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getStringPragmaAccess().getNumberSignKeyword_0());
                  
            }
            // InternalSCTX.g:8207:1: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:8208:1: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:8208:1: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:8209:3: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getStringPragmaAccess().getNameExtendedIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_110);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getStringPragmaRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:8225:2: ( (lv_values_2_0= ruleEStringAllTypes ) )
            // InternalSCTX.g:8226:1: (lv_values_2_0= ruleEStringAllTypes )
            {
            // InternalSCTX.g:8226:1: (lv_values_2_0= ruleEStringAllTypes )
            // InternalSCTX.g:8227:3: lv_values_2_0= ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getStringPragmaAccess().getValuesEStringAllTypesParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_95);
            lv_values_2_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getStringPragmaRule());
              	        }
                     		add(
                     			current, 
                     			"values",
                      		lv_values_2_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:8243:2: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            loop211:
            do {
                int alt211=2;
                int LA211_0 = input.LA(1);

                if ( (LA211_0==27) ) {
                    alt211=1;
                }


                switch (alt211) {
            	case 1 :
            	    // InternalSCTX.g:8243:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    {
            	    otherlv_3=(Token)match(input,27,FollowSets000.FOLLOW_110); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getStringPragmaAccess().getCommaKeyword_3_0());
            	          
            	    }
            	    // InternalSCTX.g:8247:1: ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    // InternalSCTX.g:8248:1: (lv_values_4_0= ruleEStringAllTypes )
            	    {
            	    // InternalSCTX.g:8248:1: (lv_values_4_0= ruleEStringAllTypes )
            	    // InternalSCTX.g:8249:3: lv_values_4_0= ruleEStringAllTypes
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getStringPragmaAccess().getValuesEStringAllTypesParserRuleCall_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_95);
            	    lv_values_4_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getStringPragmaRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"values",
            	              		lv_values_4_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop211;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringPragma"


    // $ANTLR start "entryRuleTypedKeyStringValueAnnotation"
    // InternalSCTX.g:8273:1: entryRuleTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypedKeyStringValueAnnotation = null;


        try {
            // InternalSCTX.g:8274:2: (iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:8275:2: iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypedKeyStringValueAnnotation=ruleTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleTypedKeyStringValueAnnotation"
    // InternalSCTX.g:8282:1: ruleTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* ) ;
    public final EObject ruleTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_values_5_0 = null;

        AntlrDatatypeRuleToken lv_values_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:8285:28: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* ) )
            // InternalSCTX.g:8286:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalSCTX.g:8286:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* )
            // InternalSCTX.g:8286:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,76,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
                  
            }
            // InternalSCTX.g:8290:1: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:8291:1: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:8291:1: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:8292:3: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_112);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,32,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
                  
            }
            // InternalSCTX.g:8312:1: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalSCTX.g:8313:1: (lv_type_3_0= ruleExtendedID )
            {
            // InternalSCTX.g:8313:1: (lv_type_3_0= ruleExtendedID )
            // InternalSCTX.g:8314:3: lv_type_3_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_29);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_3_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,33,FollowSets000.FOLLOW_110); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
                  
            }
            // InternalSCTX.g:8334:1: ( (lv_values_5_0= ruleEStringAllTypes ) )
            // InternalSCTX.g:8335:1: (lv_values_5_0= ruleEStringAllTypes )
            {
            // InternalSCTX.g:8335:1: (lv_values_5_0= ruleEStringAllTypes )
            // InternalSCTX.g:8336:3: lv_values_5_0= ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_95);
            lv_values_5_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              	        }
                     		add(
                     			current, 
                     			"values",
                      		lv_values_5_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:8352:2: (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )*
            loop212:
            do {
                int alt212=2;
                int LA212_0 = input.LA(1);

                if ( (LA212_0==27) ) {
                    alt212=1;
                }


                switch (alt212) {
            	case 1 :
            	    // InternalSCTX.g:8352:4: otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) )
            	    {
            	    otherlv_6=(Token)match(input,27,FollowSets000.FOLLOW_110); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_6, grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	          
            	    }
            	    // InternalSCTX.g:8356:1: ( (lv_values_7_0= ruleEStringAllTypes ) )
            	    // InternalSCTX.g:8357:1: (lv_values_7_0= ruleEStringAllTypes )
            	    {
            	    // InternalSCTX.g:8357:1: (lv_values_7_0= ruleEStringAllTypes )
            	    // InternalSCTX.g:8358:3: lv_values_7_0= ruleEStringAllTypes
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_6_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_95);
            	    lv_values_7_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"values",
            	              		lv_values_7_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop212;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleRestrictedTypedKeyStringValueAnnotation"
    // InternalSCTX.g:8382:1: entryRuleRestrictedTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleRestrictedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictedTypedKeyStringValueAnnotation = null;


        try {
            // InternalSCTX.g:8383:2: (iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:8384:2: iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRestrictedTypedKeyStringValueAnnotation=ruleRestrictedTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictedTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictedTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleRestrictedTypedKeyStringValueAnnotation"
    // InternalSCTX.g:8391:1: ruleRestrictedTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* ) ;
    public final EObject ruleRestrictedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_values_5_0 = null;

        AntlrDatatypeRuleToken lv_values_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:8394:28: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* ) )
            // InternalSCTX.g:8395:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* )
            {
            // InternalSCTX.g:8395:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* )
            // InternalSCTX.g:8395:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )*
            {
            otherlv_0=(Token)match(input,76,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
                  
            }
            // InternalSCTX.g:8399:1: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:8400:1: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:8400:1: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:8401:3: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_112);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,32,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
                  
            }
            // InternalSCTX.g:8421:1: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalSCTX.g:8422:1: (lv_type_3_0= ruleExtendedID )
            {
            // InternalSCTX.g:8422:1: (lv_type_3_0= ruleExtendedID )
            // InternalSCTX.g:8423:3: lv_type_3_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_29);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_3_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,33,FollowSets000.FOLLOW_111); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
                  
            }
            // InternalSCTX.g:8443:1: ( (lv_values_5_0= ruleEStringBoolean ) )
            // InternalSCTX.g:8444:1: (lv_values_5_0= ruleEStringBoolean )
            {
            // InternalSCTX.g:8444:1: (lv_values_5_0= ruleEStringBoolean )
            // InternalSCTX.g:8445:3: lv_values_5_0= ruleEStringBoolean
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_95);
            lv_values_5_0=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              	        }
                     		add(
                     			current, 
                     			"values",
                      		lv_values_5_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:8461:2: (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )*
            loop213:
            do {
                int alt213=2;
                int LA213_0 = input.LA(1);

                if ( (LA213_0==27) ) {
                    alt213=1;
                }


                switch (alt213) {
            	case 1 :
            	    // InternalSCTX.g:8461:4: otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) )
            	    {
            	    otherlv_6=(Token)match(input,27,FollowSets000.FOLLOW_111); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_6, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	          
            	    }
            	    // InternalSCTX.g:8465:1: ( (lv_values_7_0= ruleEStringBoolean ) )
            	    // InternalSCTX.g:8466:1: (lv_values_7_0= ruleEStringBoolean )
            	    {
            	    // InternalSCTX.g:8466:1: (lv_values_7_0= ruleEStringBoolean )
            	    // InternalSCTX.g:8467:3: lv_values_7_0= ruleEStringBoolean
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_6_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_95);
            	    lv_values_7_0=ruleEStringBoolean();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"values",
            	              		lv_values_7_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop213;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictedTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleQuotedKeyStringValueAnnotation"
    // InternalSCTX.g:8491:1: entryRuleQuotedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleQuotedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedKeyStringValueAnnotation = null;


        try {
            // InternalSCTX.g:8492:2: (iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:8493:2: iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedKeyStringValueAnnotation=ruleQuotedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedKeyStringValueAnnotation"


    // $ANTLR start "ruleQuotedKeyStringValueAnnotation"
    // InternalSCTX.g:8500:1: ruleQuotedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* ) ;
    public final EObject ruleQuotedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_values_2_0=null;
        Token otherlv_3=null;
        Token lv_values_4_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:8503:28: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* ) )
            // InternalSCTX.g:8504:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* )
            {
            // InternalSCTX.g:8504:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* )
            // InternalSCTX.g:8504:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )*
            {
            otherlv_0=(Token)match(input,76,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
                  
            }
            // InternalSCTX.g:8508:1: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:8509:1: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:8509:1: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:8510:3: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_39);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getQuotedKeyStringValueAnnotationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:8526:2: ( (lv_values_2_0= RULE_STRING ) )
            // InternalSCTX.g:8527:1: (lv_values_2_0= RULE_STRING )
            {
            // InternalSCTX.g:8527:1: (lv_values_2_0= RULE_STRING )
            // InternalSCTX.g:8528:3: lv_values_2_0= RULE_STRING
            {
            lv_values_2_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_values_2_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getQuotedKeyStringValueAnnotationRule());
              	        }
                     		addWithLastConsumed(
                     			current, 
                     			"values",
                      		lv_values_2_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.STRING");
              	    
            }

            }


            }

            // InternalSCTX.g:8544:2: (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )*
            loop214:
            do {
                int alt214=2;
                int LA214_0 = input.LA(1);

                if ( (LA214_0==27) ) {
                    alt214=1;
                }


                switch (alt214) {
            	case 1 :
            	    // InternalSCTX.g:8544:4: otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) )
            	    {
            	    otherlv_3=(Token)match(input,27,FollowSets000.FOLLOW_39); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	          
            	    }
            	    // InternalSCTX.g:8548:1: ( (lv_values_4_0= RULE_STRING ) )
            	    // InternalSCTX.g:8549:1: (lv_values_4_0= RULE_STRING )
            	    {
            	    // InternalSCTX.g:8549:1: (lv_values_4_0= RULE_STRING )
            	    // InternalSCTX.g:8550:3: lv_values_4_0= RULE_STRING
            	    {
            	    lv_values_4_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_95); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			newLeafNode(lv_values_4_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_3_1_0()); 
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getQuotedKeyStringValueAnnotationRule());
            	      	        }
            	             		addWithLastConsumed(
            	             			current, 
            	             			"values",
            	              		lv_values_4_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.STRING");
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop214;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleQuotedTypedKeyStringValueAnnotation"
    // InternalSCTX.g:8574:1: entryRuleQuotedTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleQuotedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedTypedKeyStringValueAnnotation = null;


        try {
            // InternalSCTX.g:8575:2: (iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:8576:2: iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedTypedKeyStringValueAnnotation=ruleQuotedTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleQuotedTypedKeyStringValueAnnotation"
    // InternalSCTX.g:8583:1: ruleQuotedTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* ) ;
    public final EObject ruleQuotedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_values_5_0=null;
        Token otherlv_6=null;
        Token lv_values_7_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:8586:28: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* ) )
            // InternalSCTX.g:8587:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* )
            {
            // InternalSCTX.g:8587:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* )
            // InternalSCTX.g:8587:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )*
            {
            otherlv_0=(Token)match(input,76,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
                  
            }
            // InternalSCTX.g:8591:1: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:8592:1: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:8592:1: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:8593:3: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_112);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,32,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
                  
            }
            // InternalSCTX.g:8613:1: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalSCTX.g:8614:1: (lv_type_3_0= ruleExtendedID )
            {
            // InternalSCTX.g:8614:1: (lv_type_3_0= ruleExtendedID )
            // InternalSCTX.g:8615:3: lv_type_3_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_29);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_3_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,33,FollowSets000.FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
                  
            }
            // InternalSCTX.g:8635:1: ( (lv_values_5_0= RULE_STRING ) )
            // InternalSCTX.g:8636:1: (lv_values_5_0= RULE_STRING )
            {
            // InternalSCTX.g:8636:1: (lv_values_5_0= RULE_STRING )
            // InternalSCTX.g:8637:3: lv_values_5_0= RULE_STRING
            {
            lv_values_5_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_values_5_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_5_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              	        }
                     		addWithLastConsumed(
                     			current, 
                     			"values",
                      		lv_values_5_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.STRING");
              	    
            }

            }


            }

            // InternalSCTX.g:8653:2: (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )*
            loop215:
            do {
                int alt215=2;
                int LA215_0 = input.LA(1);

                if ( (LA215_0==27) ) {
                    alt215=1;
                }


                switch (alt215) {
            	case 1 :
            	    // InternalSCTX.g:8653:4: otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) )
            	    {
            	    otherlv_6=(Token)match(input,27,FollowSets000.FOLLOW_39); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_6, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	          
            	    }
            	    // InternalSCTX.g:8657:1: ( (lv_values_7_0= RULE_STRING ) )
            	    // InternalSCTX.g:8658:1: (lv_values_7_0= RULE_STRING )
            	    {
            	    // InternalSCTX.g:8658:1: (lv_values_7_0= RULE_STRING )
            	    // InternalSCTX.g:8659:3: lv_values_7_0= RULE_STRING
            	    {
            	    lv_values_7_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_95); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			newLeafNode(lv_values_7_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_6_1_0()); 
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
            	      	        }
            	             		addWithLastConsumed(
            	             			current, 
            	             			"values",
            	              		lv_values_7_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.STRING");
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop215;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleEStringBoolean"
    // InternalSCTX.g:8685:1: entryRuleEStringBoolean returns [String current=null] : iv_ruleEStringBoolean= ruleEStringBoolean EOF ;
    public final String entryRuleEStringBoolean() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEStringBoolean = null;


        try {
            // InternalSCTX.g:8686:2: (iv_ruleEStringBoolean= ruleEStringBoolean EOF )
            // InternalSCTX.g:8687:2: iv_ruleEStringBoolean= ruleEStringBoolean EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEStringBooleanRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEStringBoolean=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEStringBoolean.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEStringBoolean"


    // $ANTLR start "ruleEStringBoolean"
    // InternalSCTX.g:8694:1: ruleEStringBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN ) ;
    public final AntlrDatatypeRuleToken ruleEStringBoolean() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_BOOLEAN_2=null;
        AntlrDatatypeRuleToken this_ExtendedID_1 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:8697:28: ( (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN ) )
            // InternalSCTX.g:8698:1: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN )
            {
            // InternalSCTX.g:8698:1: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN )
            int alt216=3;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt216=1;
                }
                break;
            case RULE_ID:
                {
                alt216=2;
                }
                break;
            case RULE_BOOLEAN:
                {
                alt216=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 216, 0, input);

                throw nvae;
            }

            switch (alt216) {
                case 1 :
                    // InternalSCTX.g:8698:6: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_STRING_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STRING_0, grammarAccess.getEStringBooleanAccess().getSTRINGTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8707:5: this_ExtendedID_1= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEStringBooleanAccess().getExtendedIDParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExtendedID_1=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ExtendedID_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:8718:10: this_BOOLEAN_2= RULE_BOOLEAN
                    {
                    this_BOOLEAN_2=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_BOOLEAN_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_BOOLEAN_2, grammarAccess.getEStringBooleanAccess().getBOOLEANTerminalRuleCall_2()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEStringBoolean"


    // $ANTLR start "entryRuleEStringAllTypes"
    // InternalSCTX.g:8733:1: entryRuleEStringAllTypes returns [String current=null] : iv_ruleEStringAllTypes= ruleEStringAllTypes EOF ;
    public final String entryRuleEStringAllTypes() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEStringAllTypes = null;


        try {
            // InternalSCTX.g:8734:2: (iv_ruleEStringAllTypes= ruleEStringAllTypes EOF )
            // InternalSCTX.g:8735:2: iv_ruleEStringAllTypes= ruleEStringAllTypes EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEStringAllTypesRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEStringAllTypes=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEStringAllTypes.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEStringAllTypes"


    // $ANTLR start "ruleEStringAllTypes"
    // InternalSCTX.g:8742:1: ruleEStringAllTypes returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger ) ;
    public final AntlrDatatypeRuleToken ruleEStringAllTypes() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_BOOLEAN_2=null;
        AntlrDatatypeRuleToken this_ExtendedID_1 = null;

        AntlrDatatypeRuleToken this_Integer_3 = null;

        AntlrDatatypeRuleToken this_Floateger_4 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:8745:28: ( (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger ) )
            // InternalSCTX.g:8746:1: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger )
            {
            // InternalSCTX.g:8746:1: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger )
            int alt217=5;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt217=1;
                }
                break;
            case RULE_ID:
                {
                alt217=2;
                }
                break;
            case RULE_BOOLEAN:
                {
                alt217=3;
                }
                break;
            case 71:
                {
                int LA217_4 = input.LA(2);

                if ( (LA217_4==RULE_FLOAT) ) {
                    alt217=5;
                }
                else if ( (LA217_4==RULE_INT) ) {
                    alt217=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 217, 4, input);

                    throw nvae;
                }
                }
                break;
            case RULE_INT:
                {
                alt217=4;
                }
                break;
            case RULE_FLOAT:
                {
                alt217=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 217, 0, input);

                throw nvae;
            }

            switch (alt217) {
                case 1 :
                    // InternalSCTX.g:8746:6: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_STRING_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STRING_0, grammarAccess.getEStringAllTypesAccess().getSTRINGTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8755:5: this_ExtendedID_1= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEStringAllTypesAccess().getExtendedIDParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExtendedID_1=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ExtendedID_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:8766:10: this_BOOLEAN_2= RULE_BOOLEAN
                    {
                    this_BOOLEAN_2=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_BOOLEAN_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_BOOLEAN_2, grammarAccess.getEStringAllTypesAccess().getBOOLEANTerminalRuleCall_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:8775:5: this_Integer_3= ruleInteger
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEStringAllTypesAccess().getIntegerParserRuleCall_3()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Integer_3=ruleInteger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_Integer_3);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalSCTX.g:8787:5: this_Floateger_4= ruleFloateger
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEStringAllTypesAccess().getFloategerParserRuleCall_4()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Floateger_4=ruleFloateger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_Floateger_4);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEStringAllTypes"


    // $ANTLR start "entryRuleExtendedID"
    // InternalSCTX.g:8805:1: entryRuleExtendedID returns [String current=null] : iv_ruleExtendedID= ruleExtendedID EOF ;
    public final String entryRuleExtendedID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleExtendedID = null;


        try {
            // InternalSCTX.g:8806:2: (iv_ruleExtendedID= ruleExtendedID EOF )
            // InternalSCTX.g:8807:2: iv_ruleExtendedID= ruleExtendedID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendedIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExtendedID=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExtendedID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExtendedID"


    // $ANTLR start "ruleExtendedID"
    // InternalSCTX.g:8814:1: ruleExtendedID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? ) ;
    public final AntlrDatatypeRuleToken ruleExtendedID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;
        Token this_ID_3=null;
        Token this_INT_5=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:8817:28: ( (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? ) )
            // InternalSCTX.g:8818:1: (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? )
            {
            // InternalSCTX.g:8818:1: (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? )
            // InternalSCTX.g:8818:6: this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )?
            {
            this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_113); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ID_0, grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_0()); 
                  
            }
            // InternalSCTX.g:8825:1: ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )*
            loop219:
            do {
                int alt219=2;
                int LA219_0 = input.LA(1);

                if ( (LA219_0==71) ) {
                    int LA219_2 = input.LA(2);

                    if ( (LA219_2==RULE_ID) ) {
                        alt219=1;
                    }


                }
                else if ( (LA219_0==62) ) {
                    alt219=1;
                }


                switch (alt219) {
            	case 1 :
            	    // InternalSCTX.g:8825:2: (kw= '.' | kw= '-' ) this_ID_3= RULE_ID
            	    {
            	    // InternalSCTX.g:8825:2: (kw= '.' | kw= '-' )
            	    int alt218=2;
            	    int LA218_0 = input.LA(1);

            	    if ( (LA218_0==62) ) {
            	        alt218=1;
            	    }
            	    else if ( (LA218_0==71) ) {
            	        alt218=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 218, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt218) {
            	        case 1 :
            	            // InternalSCTX.g:8826:2: kw= '.'
            	            {
            	            kw=(Token)match(input,62,FollowSets000.FOLLOW_6); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      current.merge(kw);
            	                      newLeafNode(kw, grammarAccess.getExtendedIDAccess().getFullStopKeyword_1_0_0()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalSCTX.g:8833:2: kw= '-'
            	            {
            	            kw=(Token)match(input,71,FollowSets000.FOLLOW_6); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      current.merge(kw);
            	                      newLeafNode(kw, grammarAccess.getExtendedIDAccess().getHyphenMinusKeyword_1_0_1()); 
            	                  
            	            }

            	            }
            	            break;

            	    }

            	    this_ID_3=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_113); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_ID_3);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_ID_3, grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_1_1()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop219;
                }
            } while (true);

            // InternalSCTX.g:8845:3: (kw= '#' this_INT_5= RULE_INT )?
            int alt220=2;
            int LA220_0 = input.LA(1);

            if ( (LA220_0==77) ) {
                int LA220_1 = input.LA(2);

                if ( (LA220_1==RULE_INT) ) {
                    alt220=1;
                }
            }
            switch (alt220) {
                case 1 :
                    // InternalSCTX.g:8846:2: kw= '#' this_INT_5= RULE_INT
                    {
                    kw=(Token)match(input,77,FollowSets000.FOLLOW_79); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getExtendedIDAccess().getNumberSignKeyword_2_0()); 
                          
                    }
                    this_INT_5=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_INT_5);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_INT_5, grammarAccess.getExtendedIDAccess().getINTTerminalRuleCall_2_1()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExtendedID"


    // $ANTLR start "entryRuleInteger"
    // InternalSCTX.g:8868:1: entryRuleInteger returns [String current=null] : iv_ruleInteger= ruleInteger EOF ;
    public final String entryRuleInteger() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleInteger = null;


        try {
            // InternalSCTX.g:8869:2: (iv_ruleInteger= ruleInteger EOF )
            // InternalSCTX.g:8870:2: iv_ruleInteger= ruleInteger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInteger=ruleInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInteger.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInteger"


    // $ANTLR start "ruleInteger"
    // InternalSCTX.g:8877:1: ruleInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_INT_1= RULE_INT ) ;
    public final AntlrDatatypeRuleToken ruleInteger() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_1=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:8880:28: ( ( (kw= '-' )? this_INT_1= RULE_INT ) )
            // InternalSCTX.g:8881:1: ( (kw= '-' )? this_INT_1= RULE_INT )
            {
            // InternalSCTX.g:8881:1: ( (kw= '-' )? this_INT_1= RULE_INT )
            // InternalSCTX.g:8881:2: (kw= '-' )? this_INT_1= RULE_INT
            {
            // InternalSCTX.g:8881:2: (kw= '-' )?
            int alt221=2;
            int LA221_0 = input.LA(1);

            if ( (LA221_0==71) ) {
                alt221=1;
            }
            switch (alt221) {
                case 1 :
                    // InternalSCTX.g:8882:2: kw= '-'
                    {
                    kw=(Token)match(input,71,FollowSets000.FOLLOW_79); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getIntegerAccess().getHyphenMinusKeyword_0()); 
                          
                    }

                    }
                    break;

            }

            this_INT_1=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_INT_1);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_INT_1, grammarAccess.getIntegerAccess().getINTTerminalRuleCall_1()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInteger"


    // $ANTLR start "entryRuleFloateger"
    // InternalSCTX.g:8902:1: entryRuleFloateger returns [String current=null] : iv_ruleFloateger= ruleFloateger EOF ;
    public final String entryRuleFloateger() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFloateger = null;


        try {
            // InternalSCTX.g:8903:2: (iv_ruleFloateger= ruleFloateger EOF )
            // InternalSCTX.g:8904:2: iv_ruleFloateger= ruleFloateger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFloategerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFloateger=ruleFloateger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFloateger.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFloateger"


    // $ANTLR start "ruleFloateger"
    // InternalSCTX.g:8911:1: ruleFloateger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT ) ;
    public final AntlrDatatypeRuleToken ruleFloateger() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_FLOAT_1=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:8914:28: ( ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT ) )
            // InternalSCTX.g:8915:1: ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT )
            {
            // InternalSCTX.g:8915:1: ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT )
            // InternalSCTX.g:8915:2: (kw= '-' )? this_FLOAT_1= RULE_FLOAT
            {
            // InternalSCTX.g:8915:2: (kw= '-' )?
            int alt222=2;
            int LA222_0 = input.LA(1);

            if ( (LA222_0==71) ) {
                alt222=1;
            }
            switch (alt222) {
                case 1 :
                    // InternalSCTX.g:8916:2: kw= '-'
                    {
                    kw=(Token)match(input,71,FollowSets000.FOLLOW_114); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getFloategerAccess().getHyphenMinusKeyword_0()); 
                          
                    }

                    }
                    break;

            }

            this_FLOAT_1=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_FLOAT_1);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_FLOAT_1, grammarAccess.getFloategerAccess().getFLOATTerminalRuleCall_1()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFloateger"


    // $ANTLR start "rulePreemptionType"
    // InternalSCTX.g:8936:1: rulePreemptionType returns [Enumerator current=null] : ( (enumLiteral_0= 'go to' ) | (enumLiteral_1= 'abort to' ) | (enumLiteral_2= 'join to' ) ) ;
    public final Enumerator rulePreemptionType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8938:28: ( ( (enumLiteral_0= 'go to' ) | (enumLiteral_1= 'abort to' ) | (enumLiteral_2= 'join to' ) ) )
            // InternalSCTX.g:8939:1: ( (enumLiteral_0= 'go to' ) | (enumLiteral_1= 'abort to' ) | (enumLiteral_2= 'join to' ) )
            {
            // InternalSCTX.g:8939:1: ( (enumLiteral_0= 'go to' ) | (enumLiteral_1= 'abort to' ) | (enumLiteral_2= 'join to' ) )
            int alt223=3;
            switch ( input.LA(1) ) {
            case 78:
                {
                alt223=1;
                }
                break;
            case 79:
                {
                alt223=2;
                }
                break;
            case 80:
                {
                alt223=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 223, 0, input);

                throw nvae;
            }

            switch (alt223) {
                case 1 :
                    // InternalSCTX.g:8939:2: (enumLiteral_0= 'go to' )
                    {
                    // InternalSCTX.g:8939:2: (enumLiteral_0= 'go to' )
                    // InternalSCTX.g:8939:4: enumLiteral_0= 'go to'
                    {
                    enumLiteral_0=(Token)match(input,78,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getPreemptionTypeAccess().getWEAKABORTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getPreemptionTypeAccess().getWEAKABORTEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8945:6: (enumLiteral_1= 'abort to' )
                    {
                    // InternalSCTX.g:8945:6: (enumLiteral_1= 'abort to' )
                    // InternalSCTX.g:8945:8: enumLiteral_1= 'abort to'
                    {
                    enumLiteral_1=(Token)match(input,79,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getPreemptionTypeAccess().getSTRONGABORTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getPreemptionTypeAccess().getSTRONGABORTEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:8951:6: (enumLiteral_2= 'join to' )
                    {
                    // InternalSCTX.g:8951:6: (enumLiteral_2= 'join to' )
                    // InternalSCTX.g:8951:8: enumLiteral_2= 'join to'
                    {
                    enumLiteral_2=(Token)match(input,80,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getPreemptionTypeAccess().getTERMINATIONEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getPreemptionTypeAccess().getTERMINATIONEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePreemptionType"


    // $ANTLR start "rulePreemptionTypeLegacy"
    // InternalSCTX.g:8961:1: rulePreemptionTypeLegacy returns [Enumerator current=null] : ( (enumLiteral_0= '-->' ) | (enumLiteral_1= 'o->' ) | (enumLiteral_2= '>->' ) ) ;
    public final Enumerator rulePreemptionTypeLegacy() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8963:28: ( ( (enumLiteral_0= '-->' ) | (enumLiteral_1= 'o->' ) | (enumLiteral_2= '>->' ) ) )
            // InternalSCTX.g:8964:1: ( (enumLiteral_0= '-->' ) | (enumLiteral_1= 'o->' ) | (enumLiteral_2= '>->' ) )
            {
            // InternalSCTX.g:8964:1: ( (enumLiteral_0= '-->' ) | (enumLiteral_1= 'o->' ) | (enumLiteral_2= '>->' ) )
            int alt224=3;
            switch ( input.LA(1) ) {
            case 81:
                {
                alt224=1;
                }
                break;
            case 82:
                {
                alt224=2;
                }
                break;
            case 83:
                {
                alt224=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 224, 0, input);

                throw nvae;
            }

            switch (alt224) {
                case 1 :
                    // InternalSCTX.g:8964:2: (enumLiteral_0= '-->' )
                    {
                    // InternalSCTX.g:8964:2: (enumLiteral_0= '-->' )
                    // InternalSCTX.g:8964:4: enumLiteral_0= '-->'
                    {
                    enumLiteral_0=(Token)match(input,81,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getPreemptionTypeLegacyAccess().getWEAKABORTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getPreemptionTypeLegacyAccess().getWEAKABORTEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8970:6: (enumLiteral_1= 'o->' )
                    {
                    // InternalSCTX.g:8970:6: (enumLiteral_1= 'o->' )
                    // InternalSCTX.g:8970:8: enumLiteral_1= 'o->'
                    {
                    enumLiteral_1=(Token)match(input,82,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getPreemptionTypeLegacyAccess().getSTRONGABORTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getPreemptionTypeLegacyAccess().getSTRONGABORTEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:8976:6: (enumLiteral_2= '>->' )
                    {
                    // InternalSCTX.g:8976:6: (enumLiteral_2= '>->' )
                    // InternalSCTX.g:8976:8: enumLiteral_2= '>->'
                    {
                    enumLiteral_2=(Token)match(input,83,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getPreemptionTypeLegacyAccess().getTERMINATIONEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getPreemptionTypeLegacyAccess().getTERMINATIONEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePreemptionTypeLegacy"


    // $ANTLR start "ruleDelayType"
    // InternalSCTX.g:8986:1: ruleDelayType returns [Enumerator current=null] : ( (enumLiteral_0= 'undefined' ) | (enumLiteral_1= 'delayed' ) | (enumLiteral_2= 'immediate' ) | (enumLiteral_3= 'auto' ) ) ;
    public final Enumerator ruleDelayType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8988:28: ( ( (enumLiteral_0= 'undefined' ) | (enumLiteral_1= 'delayed' ) | (enumLiteral_2= 'immediate' ) | (enumLiteral_3= 'auto' ) ) )
            // InternalSCTX.g:8989:1: ( (enumLiteral_0= 'undefined' ) | (enumLiteral_1= 'delayed' ) | (enumLiteral_2= 'immediate' ) | (enumLiteral_3= 'auto' ) )
            {
            // InternalSCTX.g:8989:1: ( (enumLiteral_0= 'undefined' ) | (enumLiteral_1= 'delayed' ) | (enumLiteral_2= 'immediate' ) | (enumLiteral_3= 'auto' ) )
            int alt225=4;
            switch ( input.LA(1) ) {
            case 84:
                {
                alt225=1;
                }
                break;
            case 85:
                {
                alt225=2;
                }
                break;
            case 86:
                {
                alt225=3;
                }
                break;
            case 87:
                {
                alt225=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 225, 0, input);

                throw nvae;
            }

            switch (alt225) {
                case 1 :
                    // InternalSCTX.g:8989:2: (enumLiteral_0= 'undefined' )
                    {
                    // InternalSCTX.g:8989:2: (enumLiteral_0= 'undefined' )
                    // InternalSCTX.g:8989:4: enumLiteral_0= 'undefined'
                    {
                    enumLiteral_0=(Token)match(input,84,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getDelayTypeAccess().getUNDEFINEDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getDelayTypeAccess().getUNDEFINEDEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8995:6: (enumLiteral_1= 'delayed' )
                    {
                    // InternalSCTX.g:8995:6: (enumLiteral_1= 'delayed' )
                    // InternalSCTX.g:8995:8: enumLiteral_1= 'delayed'
                    {
                    enumLiteral_1=(Token)match(input,85,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getDelayTypeAccess().getDELAYEDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getDelayTypeAccess().getDELAYEDEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:9001:6: (enumLiteral_2= 'immediate' )
                    {
                    // InternalSCTX.g:9001:6: (enumLiteral_2= 'immediate' )
                    // InternalSCTX.g:9001:8: enumLiteral_2= 'immediate'
                    {
                    enumLiteral_2=(Token)match(input,86,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getDelayTypeAccess().getIMMEDIATEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getDelayTypeAccess().getIMMEDIATEEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCTX.g:9007:6: (enumLiteral_3= 'auto' )
                    {
                    // InternalSCTX.g:9007:6: (enumLiteral_3= 'auto' )
                    // InternalSCTX.g:9007:8: enumLiteral_3= 'auto'
                    {
                    enumLiteral_3=(Token)match(input,87,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getDelayTypeAccess().getAUTOMATICEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_3, grammarAccess.getDelayTypeAccess().getAUTOMATICEnumLiteralDeclaration_3()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDelayType"


    // $ANTLR start "ruleHistoryType"
    // InternalSCTX.g:9017:1: ruleHistoryType returns [Enumerator current=null] : ( (enumLiteral_0= 'reset' ) | (enumLiteral_1= 'shallow history' ) | (enumLiteral_2= 'history' ) ) ;
    public final Enumerator ruleHistoryType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;

         enterRule(); 
        try {
            // InternalSCTX.g:9019:28: ( ( (enumLiteral_0= 'reset' ) | (enumLiteral_1= 'shallow history' ) | (enumLiteral_2= 'history' ) ) )
            // InternalSCTX.g:9020:1: ( (enumLiteral_0= 'reset' ) | (enumLiteral_1= 'shallow history' ) | (enumLiteral_2= 'history' ) )
            {
            // InternalSCTX.g:9020:1: ( (enumLiteral_0= 'reset' ) | (enumLiteral_1= 'shallow history' ) | (enumLiteral_2= 'history' ) )
            int alt226=3;
            switch ( input.LA(1) ) {
            case 88:
                {
                alt226=1;
                }
                break;
            case 89:
                {
                alt226=2;
                }
                break;
            case 90:
                {
                alt226=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 226, 0, input);

                throw nvae;
            }

            switch (alt226) {
                case 1 :
                    // InternalSCTX.g:9020:2: (enumLiteral_0= 'reset' )
                    {
                    // InternalSCTX.g:9020:2: (enumLiteral_0= 'reset' )
                    // InternalSCTX.g:9020:4: enumLiteral_0= 'reset'
                    {
                    enumLiteral_0=(Token)match(input,88,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getHistoryTypeAccess().getRESETEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getHistoryTypeAccess().getRESETEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:9026:6: (enumLiteral_1= 'shallow history' )
                    {
                    // InternalSCTX.g:9026:6: (enumLiteral_1= 'shallow history' )
                    // InternalSCTX.g:9026:8: enumLiteral_1= 'shallow history'
                    {
                    enumLiteral_1=(Token)match(input,89,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getHistoryTypeAccess().getSHALLOWEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getHistoryTypeAccess().getSHALLOWEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:9032:6: (enumLiteral_2= 'history' )
                    {
                    // InternalSCTX.g:9032:6: (enumLiteral_2= 'history' )
                    // InternalSCTX.g:9032:8: enumLiteral_2= 'history'
                    {
                    enumLiteral_2=(Token)match(input,90,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getHistoryTypeAccess().getDEEPEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getHistoryTypeAccess().getDEEPEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHistoryType"


    // $ANTLR start "ruleSchedulePriorityType"
    // InternalSCTX.g:9042:1: ruleSchedulePriorityType returns [Enumerator current=null] : ( (enumLiteral_0= 'conflict' ) | (enumLiteral_1= 'confluent' ) ) ;
    public final Enumerator ruleSchedulePriorityType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;

         enterRule(); 
        try {
            // InternalSCTX.g:9044:28: ( ( (enumLiteral_0= 'conflict' ) | (enumLiteral_1= 'confluent' ) ) )
            // InternalSCTX.g:9045:1: ( (enumLiteral_0= 'conflict' ) | (enumLiteral_1= 'confluent' ) )
            {
            // InternalSCTX.g:9045:1: ( (enumLiteral_0= 'conflict' ) | (enumLiteral_1= 'confluent' ) )
            int alt227=2;
            int LA227_0 = input.LA(1);

            if ( (LA227_0==91) ) {
                alt227=1;
            }
            else if ( (LA227_0==92) ) {
                alt227=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 227, 0, input);

                throw nvae;
            }
            switch (alt227) {
                case 1 :
                    // InternalSCTX.g:9045:2: (enumLiteral_0= 'conflict' )
                    {
                    // InternalSCTX.g:9045:2: (enumLiteral_0= 'conflict' )
                    // InternalSCTX.g:9045:4: enumLiteral_0= 'conflict'
                    {
                    enumLiteral_0=(Token)match(input,91,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getSchedulePriorityTypeAccess().getCONFLICTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getSchedulePriorityTypeAccess().getCONFLICTEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:9051:6: (enumLiteral_1= 'confluent' )
                    {
                    // InternalSCTX.g:9051:6: (enumLiteral_1= 'confluent' )
                    // InternalSCTX.g:9051:8: enumLiteral_1= 'confluent'
                    {
                    enumLiteral_1=(Token)match(input,92,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getSchedulePriorityTypeAccess().getCONFLUENTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getSchedulePriorityTypeAccess().getCONFLUENTEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSchedulePriorityType"


    // $ANTLR start "ruleAssignOperator"
    // InternalSCTX.g:9061:1: ruleAssignOperator returns [Enumerator current=null] : ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= 'min=' ) | (enumLiteral_10= 'max=' ) ) ;
    public final Enumerator ruleAssignOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;
        Token enumLiteral_8=null;
        Token enumLiteral_9=null;
        Token enumLiteral_10=null;

         enterRule(); 
        try {
            // InternalSCTX.g:9063:28: ( ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= 'min=' ) | (enumLiteral_10= 'max=' ) ) )
            // InternalSCTX.g:9064:1: ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= 'min=' ) | (enumLiteral_10= 'max=' ) )
            {
            // InternalSCTX.g:9064:1: ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= 'min=' ) | (enumLiteral_10= 'max=' ) )
            int alt228=11;
            switch ( input.LA(1) ) {
            case 60:
                {
                alt228=1;
                }
                break;
            case 93:
                {
                alt228=2;
                }
                break;
            case 94:
                {
                alt228=3;
                }
                break;
            case 95:
                {
                alt228=4;
                }
                break;
            case 96:
                {
                alt228=5;
                }
                break;
            case 97:
                {
                alt228=6;
                }
                break;
            case 98:
                {
                alt228=7;
                }
                break;
            case 99:
                {
                alt228=8;
                }
                break;
            case 100:
                {
                alt228=9;
                }
                break;
            case 101:
                {
                alt228=10;
                }
                break;
            case 102:
                {
                alt228=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 228, 0, input);

                throw nvae;
            }

            switch (alt228) {
                case 1 :
                    // InternalSCTX.g:9064:2: (enumLiteral_0= '=' )
                    {
                    // InternalSCTX.g:9064:2: (enumLiteral_0= '=' )
                    // InternalSCTX.g:9064:4: enumLiteral_0= '='
                    {
                    enumLiteral_0=(Token)match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getAssignOperatorAccess().getASSIGNEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:9070:6: (enumLiteral_1= '+=' )
                    {
                    // InternalSCTX.g:9070:6: (enumLiteral_1= '+=' )
                    // InternalSCTX.g:9070:8: enumLiteral_1= '+='
                    {
                    enumLiteral_1=(Token)match(input,93,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNADDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getAssignOperatorAccess().getASSIGNADDEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:9076:6: (enumLiteral_2= '-=' )
                    {
                    // InternalSCTX.g:9076:6: (enumLiteral_2= '-=' )
                    // InternalSCTX.g:9076:8: enumLiteral_2= '-='
                    {
                    enumLiteral_2=(Token)match(input,94,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNSUBEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getAssignOperatorAccess().getASSIGNSUBEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCTX.g:9082:6: (enumLiteral_3= '*=' )
                    {
                    // InternalSCTX.g:9082:6: (enumLiteral_3= '*=' )
                    // InternalSCTX.g:9082:8: enumLiteral_3= '*='
                    {
                    enumLiteral_3=(Token)match(input,95,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNMULEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_3, grammarAccess.getAssignOperatorAccess().getASSIGNMULEnumLiteralDeclaration_3()); 
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCTX.g:9088:6: (enumLiteral_4= '/=' )
                    {
                    // InternalSCTX.g:9088:6: (enumLiteral_4= '/=' )
                    // InternalSCTX.g:9088:8: enumLiteral_4= '/='
                    {
                    enumLiteral_4=(Token)match(input,96,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNDIVEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_4, grammarAccess.getAssignOperatorAccess().getASSIGNDIVEnumLiteralDeclaration_4()); 
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSCTX.g:9094:6: (enumLiteral_5= '%=' )
                    {
                    // InternalSCTX.g:9094:6: (enumLiteral_5= '%=' )
                    // InternalSCTX.g:9094:8: enumLiteral_5= '%='
                    {
                    enumLiteral_5=(Token)match(input,97,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNMODEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_5, grammarAccess.getAssignOperatorAccess().getASSIGNMODEnumLiteralDeclaration_5()); 
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSCTX.g:9100:6: (enumLiteral_6= '&=' )
                    {
                    // InternalSCTX.g:9100:6: (enumLiteral_6= '&=' )
                    // InternalSCTX.g:9100:8: enumLiteral_6= '&='
                    {
                    enumLiteral_6=(Token)match(input,98,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNANDEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_6, grammarAccess.getAssignOperatorAccess().getASSIGNANDEnumLiteralDeclaration_6()); 
                          
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSCTX.g:9106:6: (enumLiteral_7= '|=' )
                    {
                    // InternalSCTX.g:9106:6: (enumLiteral_7= '|=' )
                    // InternalSCTX.g:9106:8: enumLiteral_7= '|='
                    {
                    enumLiteral_7=(Token)match(input,99,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNOREnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_7, grammarAccess.getAssignOperatorAccess().getASSIGNOREnumLiteralDeclaration_7()); 
                          
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSCTX.g:9112:6: (enumLiteral_8= '^=' )
                    {
                    // InternalSCTX.g:9112:6: (enumLiteral_8= '^=' )
                    // InternalSCTX.g:9112:8: enumLiteral_8= '^='
                    {
                    enumLiteral_8=(Token)match(input,100,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNXOREnumLiteralDeclaration_8().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_8, grammarAccess.getAssignOperatorAccess().getASSIGNXOREnumLiteralDeclaration_8()); 
                          
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSCTX.g:9118:6: (enumLiteral_9= 'min=' )
                    {
                    // InternalSCTX.g:9118:6: (enumLiteral_9= 'min=' )
                    // InternalSCTX.g:9118:8: enumLiteral_9= 'min='
                    {
                    enumLiteral_9=(Token)match(input,101,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNMINEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_9, grammarAccess.getAssignOperatorAccess().getASSIGNMINEnumLiteralDeclaration_9()); 
                          
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalSCTX.g:9124:6: (enumLiteral_10= 'max=' )
                    {
                    // InternalSCTX.g:9124:6: (enumLiteral_10= 'max=' )
                    // InternalSCTX.g:9124:8: enumLiteral_10= 'max='
                    {
                    enumLiteral_10=(Token)match(input,102,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNMAXEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_10, grammarAccess.getAssignOperatorAccess().getASSIGNMAXEnumLiteralDeclaration_10()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssignOperator"


    // $ANTLR start "rulePostfixOperator"
    // InternalSCTX.g:9134:1: rulePostfixOperator returns [Enumerator current=null] : ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) ) ;
    public final Enumerator rulePostfixOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;

         enterRule(); 
        try {
            // InternalSCTX.g:9136:28: ( ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) ) )
            // InternalSCTX.g:9137:1: ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) )
            {
            // InternalSCTX.g:9137:1: ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) )
            int alt229=2;
            int LA229_0 = input.LA(1);

            if ( (LA229_0==103) ) {
                alt229=1;
            }
            else if ( (LA229_0==104) ) {
                alt229=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 229, 0, input);

                throw nvae;
            }
            switch (alt229) {
                case 1 :
                    // InternalSCTX.g:9137:2: (enumLiteral_0= '++' )
                    {
                    // InternalSCTX.g:9137:2: (enumLiteral_0= '++' )
                    // InternalSCTX.g:9137:4: enumLiteral_0= '++'
                    {
                    enumLiteral_0=(Token)match(input,103,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getPostfixOperatorAccess().getPOSTFIXADDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getPostfixOperatorAccess().getPOSTFIXADDEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:9143:6: (enumLiteral_1= '--' )
                    {
                    // InternalSCTX.g:9143:6: (enumLiteral_1= '--' )
                    // InternalSCTX.g:9143:8: enumLiteral_1= '--'
                    {
                    enumLiteral_1=(Token)match(input,104,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getPostfixOperatorAccess().getPOSTFIXSUBEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getPostfixOperatorAccess().getPOSTFIXSUBEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePostfixOperator"


    // $ANTLR start "ruleCompareOperator"
    // InternalSCTX.g:9153:1: ruleCompareOperator returns [Enumerator current=null] : ( (enumLiteral_0= '==' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '!=' ) ) ;
    public final Enumerator ruleCompareOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;

         enterRule(); 
        try {
            // InternalSCTX.g:9155:28: ( ( (enumLiteral_0= '==' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '!=' ) ) )
            // InternalSCTX.g:9156:1: ( (enumLiteral_0= '==' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '!=' ) )
            {
            // InternalSCTX.g:9156:1: ( (enumLiteral_0= '==' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '!=' ) )
            int alt230=6;
            switch ( input.LA(1) ) {
            case 105:
                {
                alt230=1;
                }
                break;
            case 64:
                {
                alt230=2;
                }
                break;
            case 106:
                {
                alt230=3;
                }
                break;
            case 65:
                {
                alt230=4;
                }
                break;
            case 107:
                {
                alt230=5;
                }
                break;
            case 108:
                {
                alt230=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 230, 0, input);

                throw nvae;
            }

            switch (alt230) {
                case 1 :
                    // InternalSCTX.g:9156:2: (enumLiteral_0= '==' )
                    {
                    // InternalSCTX.g:9156:2: (enumLiteral_0= '==' )
                    // InternalSCTX.g:9156:4: enumLiteral_0= '=='
                    {
                    enumLiteral_0=(Token)match(input,105,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:9162:6: (enumLiteral_1= '<' )
                    {
                    // InternalSCTX.g:9162:6: (enumLiteral_1= '<' )
                    // InternalSCTX.g:9162:8: enumLiteral_1= '<'
                    {
                    enumLiteral_1=(Token)match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:9168:6: (enumLiteral_2= '<=' )
                    {
                    // InternalSCTX.g:9168:6: (enumLiteral_2= '<=' )
                    // InternalSCTX.g:9168:8: enumLiteral_2= '<='
                    {
                    enumLiteral_2=(Token)match(input,106,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCTX.g:9174:6: (enumLiteral_3= '>' )
                    {
                    // InternalSCTX.g:9174:6: (enumLiteral_3= '>' )
                    // InternalSCTX.g:9174:8: enumLiteral_3= '>'
                    {
                    enumLiteral_3=(Token)match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_3, grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3()); 
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCTX.g:9180:6: (enumLiteral_4= '>=' )
                    {
                    // InternalSCTX.g:9180:6: (enumLiteral_4= '>=' )
                    // InternalSCTX.g:9180:8: enumLiteral_4= '>='
                    {
                    enumLiteral_4=(Token)match(input,107,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_4, grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4()); 
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSCTX.g:9186:6: (enumLiteral_5= '!=' )
                    {
                    // InternalSCTX.g:9186:6: (enumLiteral_5= '!=' )
                    // InternalSCTX.g:9186:8: enumLiteral_5= '!='
                    {
                    enumLiteral_5=(Token)match(input,108,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_5, grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompareOperator"


    // $ANTLR start "rulePreOperator"
    // InternalSCTX.g:9196:1: rulePreOperator returns [Enumerator current=null] : (enumLiteral_0= 'pre' ) ;
    public final Enumerator rulePreOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:9198:28: ( (enumLiteral_0= 'pre' ) )
            // InternalSCTX.g:9199:1: (enumLiteral_0= 'pre' )
            {
            // InternalSCTX.g:9199:1: (enumLiteral_0= 'pre' )
            // InternalSCTX.g:9199:3: enumLiteral_0= 'pre'
            {
            enumLiteral_0=(Token)match(input,109,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePreOperator"


    // $ANTLR start "ruleBitwiseOrOperator"
    // InternalSCTX.g:9209:1: ruleBitwiseOrOperator returns [Enumerator current=null] : (enumLiteral_0= '|' ) ;
    public final Enumerator ruleBitwiseOrOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:9211:28: ( (enumLiteral_0= '|' ) )
            // InternalSCTX.g:9212:1: (enumLiteral_0= '|' )
            {
            // InternalSCTX.g:9212:1: (enumLiteral_0= '|' )
            // InternalSCTX.g:9212:3: enumLiteral_0= '|'
            {
            enumLiteral_0=(Token)match(input,69,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getBitwiseOrOperatorAccess().getBITWISE_OREnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getBitwiseOrOperatorAccess().getBITWISE_OREnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseOrOperator"


    // $ANTLR start "ruleBitwiseAndOperator"
    // InternalSCTX.g:9222:1: ruleBitwiseAndOperator returns [Enumerator current=null] : (enumLiteral_0= '&' ) ;
    public final Enumerator ruleBitwiseAndOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:9224:28: ( (enumLiteral_0= '&' ) )
            // InternalSCTX.g:9225:1: (enumLiteral_0= '&' )
            {
            // InternalSCTX.g:9225:1: (enumLiteral_0= '&' )
            // InternalSCTX.g:9225:3: enumLiteral_0= '&'
            {
            enumLiteral_0=(Token)match(input,30,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getBitwiseAndOperatorAccess().getBITWISE_ANDEnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getBitwiseAndOperatorAccess().getBITWISE_ANDEnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseAndOperator"


    // $ANTLR start "ruleNotOperator"
    // InternalSCTX.g:9235:1: ruleNotOperator returns [Enumerator current=null] : (enumLiteral_0= '!' ) ;
    public final Enumerator ruleNotOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:9237:28: ( (enumLiteral_0= '!' ) )
            // InternalSCTX.g:9238:1: (enumLiteral_0= '!' )
            {
            // InternalSCTX.g:9238:1: (enumLiteral_0= '!' )
            // InternalSCTX.g:9238:3: enumLiteral_0= '!'
            {
            enumLiteral_0=(Token)match(input,29,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getNotOperatorAccess().getNOTEnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getNotOperatorAccess().getNOTEnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotOperator"


    // $ANTLR start "ruleAddOperator"
    // InternalSCTX.g:9248:1: ruleAddOperator returns [Enumerator current=null] : (enumLiteral_0= '+' ) ;
    public final Enumerator ruleAddOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:9250:28: ( (enumLiteral_0= '+' ) )
            // InternalSCTX.g:9251:1: (enumLiteral_0= '+' )
            {
            // InternalSCTX.g:9251:1: (enumLiteral_0= '+' )
            // InternalSCTX.g:9251:3: enumLiteral_0= '+'
            {
            enumLiteral_0=(Token)match(input,70,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getAddOperatorAccess().getADDEnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getAddOperatorAccess().getADDEnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAddOperator"


    // $ANTLR start "ruleSubOperator"
    // InternalSCTX.g:9261:1: ruleSubOperator returns [Enumerator current=null] : (enumLiteral_0= '-' ) ;
    public final Enumerator ruleSubOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:9263:28: ( (enumLiteral_0= '-' ) )
            // InternalSCTX.g:9264:1: (enumLiteral_0= '-' )
            {
            // InternalSCTX.g:9264:1: (enumLiteral_0= '-' )
            // InternalSCTX.g:9264:3: enumLiteral_0= '-'
            {
            enumLiteral_0=(Token)match(input,71,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getSubOperatorAccess().getSUBEnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getSubOperatorAccess().getSUBEnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubOperator"


    // $ANTLR start "ruleMultOperator"
    // InternalSCTX.g:9274:1: ruleMultOperator returns [Enumerator current=null] : (enumLiteral_0= '*' ) ;
    public final Enumerator ruleMultOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:9276:28: ( (enumLiteral_0= '*' ) )
            // InternalSCTX.g:9277:1: (enumLiteral_0= '*' )
            {
            // InternalSCTX.g:9277:1: (enumLiteral_0= '*' )
            // InternalSCTX.g:9277:3: enumLiteral_0= '*'
            {
            enumLiteral_0=(Token)match(input,72,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultOperator"


    // $ANTLR start "ruleModOperator"
    // InternalSCTX.g:9287:1: ruleModOperator returns [Enumerator current=null] : (enumLiteral_0= '%' ) ;
    public final Enumerator ruleModOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:9289:28: ( (enumLiteral_0= '%' ) )
            // InternalSCTX.g:9290:1: (enumLiteral_0= '%' )
            {
            // InternalSCTX.g:9290:1: (enumLiteral_0= '%' )
            // InternalSCTX.g:9290:3: enumLiteral_0= '%'
            {
            enumLiteral_0=(Token)match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getModOperatorAccess().getMODEnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getModOperatorAccess().getMODEnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModOperator"


    // $ANTLR start "ruleDivOperator"
    // InternalSCTX.g:9300:1: ruleDivOperator returns [Enumerator current=null] : (enumLiteral_0= '/' ) ;
    public final Enumerator ruleDivOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:9302:28: ( (enumLiteral_0= '/' ) )
            // InternalSCTX.g:9303:1: (enumLiteral_0= '/' )
            {
            // InternalSCTX.g:9303:1: (enumLiteral_0= '/' )
            // InternalSCTX.g:9303:3: enumLiteral_0= '/'
            {
            enumLiteral_0=(Token)match(input,73,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDivOperator"


    // $ANTLR start "ruleValOperator"
    // InternalSCTX.g:9313:1: ruleValOperator returns [Enumerator current=null] : (enumLiteral_0= 'val' ) ;
    public final Enumerator ruleValOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:9315:28: ( (enumLiteral_0= 'val' ) )
            // InternalSCTX.g:9316:1: (enumLiteral_0= 'val' )
            {
            // InternalSCTX.g:9316:1: (enumLiteral_0= 'val' )
            // InternalSCTX.g:9316:3: enumLiteral_0= 'val'
            {
            enumLiteral_0=(Token)match(input,110,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getValOperatorAccess().getVALEnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getValOperatorAccess().getVALEnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValOperator"


    // $ANTLR start "ruleLogicalOrOperator"
    // InternalSCTX.g:9326:1: ruleLogicalOrOperator returns [Enumerator current=null] : (enumLiteral_0= '||' ) ;
    public final Enumerator ruleLogicalOrOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:9328:28: ( (enumLiteral_0= '||' ) )
            // InternalSCTX.g:9329:1: (enumLiteral_0= '||' )
            {
            // InternalSCTX.g:9329:1: (enumLiteral_0= '||' )
            // InternalSCTX.g:9329:3: enumLiteral_0= '||'
            {
            enumLiteral_0=(Token)match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getLogicalOrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getLogicalOrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalOrOperator"


    // $ANTLR start "ruleLogicalAndOperator"
    // InternalSCTX.g:9339:1: ruleLogicalAndOperator returns [Enumerator current=null] : (enumLiteral_0= '&&' ) ;
    public final Enumerator ruleLogicalAndOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:9341:28: ( (enumLiteral_0= '&&' ) )
            // InternalSCTX.g:9342:1: (enumLiteral_0= '&&' )
            {
            // InternalSCTX.g:9342:1: (enumLiteral_0= '&&' )
            // InternalSCTX.g:9342:3: enumLiteral_0= '&&'
            {
            enumLiteral_0=(Token)match(input,68,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getLogicalAndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getLogicalAndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalAndOperator"


    // $ANTLR start "ruleValueType"
    // InternalSCTX.g:9356:1: ruleValueType returns [Enumerator current=null] : ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'unsigned' ) | (enumLiteral_3= 'int' ) | (enumLiteral_4= 'float' ) | (enumLiteral_5= 'string' ) | (enumLiteral_6= 'host' ) ) ;
    public final Enumerator ruleValueType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;

         enterRule(); 
        try {
            // InternalSCTX.g:9358:28: ( ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'unsigned' ) | (enumLiteral_3= 'int' ) | (enumLiteral_4= 'float' ) | (enumLiteral_5= 'string' ) | (enumLiteral_6= 'host' ) ) )
            // InternalSCTX.g:9359:1: ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'unsigned' ) | (enumLiteral_3= 'int' ) | (enumLiteral_4= 'float' ) | (enumLiteral_5= 'string' ) | (enumLiteral_6= 'host' ) )
            {
            // InternalSCTX.g:9359:1: ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'unsigned' ) | (enumLiteral_3= 'int' ) | (enumLiteral_4= 'float' ) | (enumLiteral_5= 'string' ) | (enumLiteral_6= 'host' ) )
            int alt231=7;
            switch ( input.LA(1) ) {
            case 111:
                {
                alt231=1;
                }
                break;
            case 112:
                {
                alt231=2;
                }
                break;
            case 113:
                {
                alt231=3;
                }
                break;
            case 114:
                {
                alt231=4;
                }
                break;
            case 115:
                {
                alt231=5;
                }
                break;
            case 116:
                {
                alt231=6;
                }
                break;
            case 117:
                {
                alt231=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 231, 0, input);

                throw nvae;
            }

            switch (alt231) {
                case 1 :
                    // InternalSCTX.g:9359:2: (enumLiteral_0= 'pure' )
                    {
                    // InternalSCTX.g:9359:2: (enumLiteral_0= 'pure' )
                    // InternalSCTX.g:9359:4: enumLiteral_0= 'pure'
                    {
                    enumLiteral_0=(Token)match(input,111,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getValueTypeAccess().getPUREEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getValueTypeAccess().getPUREEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:9365:6: (enumLiteral_1= 'bool' )
                    {
                    // InternalSCTX.g:9365:6: (enumLiteral_1= 'bool' )
                    // InternalSCTX.g:9365:8: enumLiteral_1= 'bool'
                    {
                    enumLiteral_1=(Token)match(input,112,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:9371:6: (enumLiteral_2= 'unsigned' )
                    {
                    // InternalSCTX.g:9371:6: (enumLiteral_2= 'unsigned' )
                    // InternalSCTX.g:9371:8: enumLiteral_2= 'unsigned'
                    {
                    enumLiteral_2=(Token)match(input,113,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getValueTypeAccess().getUNSIGNEDEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getValueTypeAccess().getUNSIGNEDEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCTX.g:9377:6: (enumLiteral_3= 'int' )
                    {
                    // InternalSCTX.g:9377:6: (enumLiteral_3= 'int' )
                    // InternalSCTX.g:9377:8: enumLiteral_3= 'int'
                    {
                    enumLiteral_3=(Token)match(input,114,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_3, grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_3()); 
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCTX.g:9383:6: (enumLiteral_4= 'float' )
                    {
                    // InternalSCTX.g:9383:6: (enumLiteral_4= 'float' )
                    // InternalSCTX.g:9383:8: enumLiteral_4= 'float'
                    {
                    enumLiteral_4=(Token)match(input,115,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_4, grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_4()); 
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSCTX.g:9389:6: (enumLiteral_5= 'string' )
                    {
                    // InternalSCTX.g:9389:6: (enumLiteral_5= 'string' )
                    // InternalSCTX.g:9389:8: enumLiteral_5= 'string'
                    {
                    enumLiteral_5=(Token)match(input,116,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_5, grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_5()); 
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSCTX.g:9395:6: (enumLiteral_6= 'host' )
                    {
                    // InternalSCTX.g:9395:6: (enumLiteral_6= 'host' )
                    // InternalSCTX.g:9395:8: enumLiteral_6= 'host'
                    {
                    enumLiteral_6=(Token)match(input,117,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getValueTypeAccess().getHOSTEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_6, grammarAccess.getValueTypeAccess().getHOSTEnumLiteralDeclaration_6()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueType"


    // $ANTLR start "ruleCombineOperator"
    // InternalSCTX.g:9407:1: ruleCombineOperator returns [Enumerator current=null] : ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) ) ;
    public final Enumerator ruleCombineOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;

         enterRule(); 
        try {
            // InternalSCTX.g:9409:28: ( ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) ) )
            // InternalSCTX.g:9410:1: ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) )
            {
            // InternalSCTX.g:9410:1: ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) )
            int alt232=8;
            switch ( input.LA(1) ) {
            case 118:
                {
                alt232=1;
                }
                break;
            case 70:
                {
                alt232=2;
                }
                break;
            case 72:
                {
                alt232=3;
                }
                break;
            case 119:
                {
                alt232=4;
                }
                break;
            case 120:
                {
                alt232=5;
                }
                break;
            case 69:
                {
                alt232=6;
                }
                break;
            case 30:
                {
                alt232=7;
                }
                break;
            case 117:
                {
                alt232=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 232, 0, input);

                throw nvae;
            }

            switch (alt232) {
                case 1 :
                    // InternalSCTX.g:9410:2: (enumLiteral_0= 'none' )
                    {
                    // InternalSCTX.g:9410:2: (enumLiteral_0= 'none' )
                    // InternalSCTX.g:9410:4: enumLiteral_0= 'none'
                    {
                    enumLiteral_0=(Token)match(input,118,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:9416:6: (enumLiteral_1= '+' )
                    {
                    // InternalSCTX.g:9416:6: (enumLiteral_1= '+' )
                    // InternalSCTX.g:9416:8: enumLiteral_1= '+'
                    {
                    enumLiteral_1=(Token)match(input,70,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:9422:6: (enumLiteral_2= '*' )
                    {
                    // InternalSCTX.g:9422:6: (enumLiteral_2= '*' )
                    // InternalSCTX.g:9422:8: enumLiteral_2= '*'
                    {
                    enumLiteral_2=(Token)match(input,72,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCTX.g:9428:6: (enumLiteral_3= 'max' )
                    {
                    // InternalSCTX.g:9428:6: (enumLiteral_3= 'max' )
                    // InternalSCTX.g:9428:8: enumLiteral_3= 'max'
                    {
                    enumLiteral_3=(Token)match(input,119,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_3, grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3()); 
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCTX.g:9434:6: (enumLiteral_4= 'min' )
                    {
                    // InternalSCTX.g:9434:6: (enumLiteral_4= 'min' )
                    // InternalSCTX.g:9434:8: enumLiteral_4= 'min'
                    {
                    enumLiteral_4=(Token)match(input,120,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_4, grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4()); 
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSCTX.g:9440:6: (enumLiteral_5= '|' )
                    {
                    // InternalSCTX.g:9440:6: (enumLiteral_5= '|' )
                    // InternalSCTX.g:9440:8: enumLiteral_5= '|'
                    {
                    enumLiteral_5=(Token)match(input,69,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_5, grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5()); 
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSCTX.g:9446:6: (enumLiteral_6= '&' )
                    {
                    // InternalSCTX.g:9446:6: (enumLiteral_6= '&' )
                    // InternalSCTX.g:9446:8: enumLiteral_6= '&'
                    {
                    enumLiteral_6=(Token)match(input,30,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_6, grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6()); 
                          
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSCTX.g:9452:6: (enumLiteral_7= 'host' )
                    {
                    // InternalSCTX.g:9452:6: (enumLiteral_7= 'host' )
                    // InternalSCTX.g:9452:8: enumLiteral_7= 'host'
                    {
                    enumLiteral_7=(Token)match(input,117,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_7, grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCombineOperator"

    // $ANTLR start synpred5_InternalSCTX
    public final void synpred5_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_5_0 = null;


        // InternalSCTX.g:207:1: ( (lv_declarations_5_0= ruleDeclarationWOSemicolon ) )
        // InternalSCTX.g:207:1: (lv_declarations_5_0= ruleDeclarationWOSemicolon )
        {
        // InternalSCTX.g:207:1: (lv_declarations_5_0= ruleDeclarationWOSemicolon )
        // InternalSCTX.g:208:3: lv_declarations_5_0= ruleDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getRootStateAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_5_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_5_0=ruleDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_InternalSCTX

    // $ANTLR start synpred7_InternalSCTX
    public final void synpred7_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_regions_7_0 = null;


        // InternalSCTX.g:242:4: ( ( (lv_regions_7_0= ruleImplicitControlflowRegion ) ) )
        // InternalSCTX.g:242:4: ( (lv_regions_7_0= ruleImplicitControlflowRegion ) )
        {
        // InternalSCTX.g:242:4: ( (lv_regions_7_0= ruleImplicitControlflowRegion ) )
        // InternalSCTX.g:243:1: (lv_regions_7_0= ruleImplicitControlflowRegion )
        {
        // InternalSCTX.g:243:1: (lv_regions_7_0= ruleImplicitControlflowRegion )
        // InternalSCTX.g:244:3: lv_regions_7_0= ruleImplicitControlflowRegion
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getRootStateAccess().getRegionsImplicitControlflowRegionParserRuleCall_7_0_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_regions_7_0=ruleImplicitControlflowRegion();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred7_InternalSCTX

    // $ANTLR start synpred8_InternalSCTX
    public final void synpred8_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_regions_8_0 = null;


        // InternalSCTX.g:261:6: ( ( (lv_regions_8_0= ruleImplicitDataflowRegion ) ) )
        // InternalSCTX.g:261:6: ( (lv_regions_8_0= ruleImplicitDataflowRegion ) )
        {
        // InternalSCTX.g:261:6: ( (lv_regions_8_0= ruleImplicitDataflowRegion ) )
        // InternalSCTX.g:262:1: (lv_regions_8_0= ruleImplicitDataflowRegion )
        {
        // InternalSCTX.g:262:1: (lv_regions_8_0= ruleImplicitDataflowRegion )
        // InternalSCTX.g:263:3: lv_regions_8_0= ruleImplicitDataflowRegion
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getRootStateAccess().getRegionsImplicitDataflowRegionParserRuleCall_7_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_regions_8_0=ruleImplicitDataflowRegion();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred8_InternalSCTX

    // $ANTLR start synpred17_InternalSCTX
    public final void synpred17_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_11_0 = null;


        // InternalSCTX.g:469:1: ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )
        // InternalSCTX.g:469:1: (lv_declarations_11_0= ruleDeclarationWOSemicolon )
        {
        // InternalSCTX.g:469:1: (lv_declarations_11_0= ruleDeclarationWOSemicolon )
        // InternalSCTX.g:470:3: lv_declarations_11_0= ruleDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getStateAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_8_1_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_11_0=ruleDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred17_InternalSCTX

    // $ANTLR start synpred19_InternalSCTX
    public final void synpred19_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_regions_13_0 = null;


        // InternalSCTX.g:504:4: ( ( (lv_regions_13_0= ruleImplicitControlflowRegion ) ) )
        // InternalSCTX.g:504:4: ( (lv_regions_13_0= ruleImplicitControlflowRegion ) )
        {
        // InternalSCTX.g:504:4: ( (lv_regions_13_0= ruleImplicitControlflowRegion ) )
        // InternalSCTX.g:505:1: (lv_regions_13_0= ruleImplicitControlflowRegion )
        {
        // InternalSCTX.g:505:1: (lv_regions_13_0= ruleImplicitControlflowRegion )
        // InternalSCTX.g:506:3: lv_regions_13_0= ruleImplicitControlflowRegion
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getStateAccess().getRegionsImplicitControlflowRegionParserRuleCall_8_1_3_0_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_regions_13_0=ruleImplicitControlflowRegion();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred19_InternalSCTX

    // $ANTLR start synpred20_InternalSCTX
    public final void synpred20_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_regions_14_0 = null;


        // InternalSCTX.g:523:6: ( ( (lv_regions_14_0= ruleImplicitDataflowRegion ) ) )
        // InternalSCTX.g:523:6: ( (lv_regions_14_0= ruleImplicitDataflowRegion ) )
        {
        // InternalSCTX.g:523:6: ( (lv_regions_14_0= ruleImplicitDataflowRegion ) )
        // InternalSCTX.g:524:1: (lv_regions_14_0= ruleImplicitDataflowRegion )
        {
        // InternalSCTX.g:524:1: (lv_regions_14_0= ruleImplicitDataflowRegion )
        // InternalSCTX.g:525:3: lv_regions_14_0= ruleImplicitDataflowRegion
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getStateAccess().getRegionsImplicitDataflowRegionParserRuleCall_8_1_3_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_regions_14_0=ruleImplicitDataflowRegion();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred20_InternalSCTX

    // $ANTLR start synpred37_InternalSCTX
    public final void synpred37_InternalSCTX_fragment() throws RecognitionException {   
        Token lv_triggerDelay_7_0=null;

        // InternalSCTX.g:986:1: ( (lv_triggerDelay_7_0= RULE_INT ) )
        // InternalSCTX.g:986:1: (lv_triggerDelay_7_0= RULE_INT )
        {
        // InternalSCTX.g:986:1: (lv_triggerDelay_7_0= RULE_INT )
        // InternalSCTX.g:987:3: lv_triggerDelay_7_0= RULE_INT
        {
        lv_triggerDelay_7_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred37_InternalSCTX

    // $ANTLR start synpred38_InternalSCTX
    public final void synpred38_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_trigger_8_0 = null;


        // InternalSCTX.g:1003:4: ( ( (lv_trigger_8_0= ruleBoolExpression ) ) )
        // InternalSCTX.g:1003:4: ( (lv_trigger_8_0= ruleBoolExpression ) )
        {
        // InternalSCTX.g:1003:4: ( (lv_trigger_8_0= ruleBoolExpression ) )
        // InternalSCTX.g:1004:1: (lv_trigger_8_0= ruleBoolExpression )
        {
        // InternalSCTX.g:1004:1: (lv_trigger_8_0= ruleBoolExpression )
        // InternalSCTX.g:1005:3: lv_trigger_8_0= ruleBoolExpression
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getTransitionAccess().getTriggerBoolExpressionParserRuleCall_6_2_0_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_trigger_8_0=ruleBoolExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred38_InternalSCTX

    // $ANTLR start synpred61_InternalSCTX
    public final void synpred61_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_6_0 = null;


        // InternalSCTX.g:1633:1: ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )
        // InternalSCTX.g:1633:1: (lv_declarations_6_0= ruleDeclarationWOSemicolon )
        {
        // InternalSCTX.g:1633:1: (lv_declarations_6_0= ruleDeclarationWOSemicolon )
        // InternalSCTX.g:1634:3: lv_declarations_6_0= ruleDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getDataflowRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_6_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_6_0=ruleDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred61_InternalSCTX

    // $ANTLR start synpred62_InternalSCTX
    public final void synpred62_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_equations_7_0 = null;


        // InternalSCTX.g:1651:1: ( (lv_equations_7_0= ruleEquation ) )
        // InternalSCTX.g:1651:1: (lv_equations_7_0= ruleEquation )
        {
        // InternalSCTX.g:1651:1: (lv_equations_7_0= ruleEquation )
        // InternalSCTX.g:1652:3: lv_equations_7_0= ruleEquation
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getDataflowRegionAccess().getEquationsEquationParserRuleCall_7_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_equations_7_0=ruleEquation();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred62_InternalSCTX

    // $ANTLR start synpred100_InternalSCTX
    public final void synpred100_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_expression_0_0 = null;


        // InternalSCTX.g:2767:2: ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) )
        // InternalSCTX.g:2767:2: ( (lv_expression_0_0= ruleAnnotatedExpression ) )
        {
        // InternalSCTX.g:2767:2: ( (lv_expression_0_0= ruleAnnotatedExpression ) )
        // InternalSCTX.g:2768:1: (lv_expression_0_0= ruleAnnotatedExpression )
        {
        // InternalSCTX.g:2768:1: (lv_expression_0_0= ruleAnnotatedExpression )
        // InternalSCTX.g:2769:3: lv_expression_0_0= ruleAnnotatedExpression
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getTestEntityAccess().getExpressionAnnotatedExpressionParserRuleCall_0_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_expression_0_0=ruleAnnotatedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred100_InternalSCTX

    // $ANTLR start synpred147_InternalSCTX
    public final void synpred147_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Assignment_0 = null;


        // InternalSCTX.g:4256:2: (this_Assignment_0= ruleAssignment )
        // InternalSCTX.g:4256:2: this_Assignment_0= ruleAssignment
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Assignment_0=ruleAssignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred147_InternalSCTX

    // $ANTLR start synpred148_InternalSCTX
    public final void synpred148_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_PostfixEffect_1 = null;


        // InternalSCTX.g:4269:2: (this_PostfixEffect_1= rulePostfixEffect )
        // InternalSCTX.g:4269:2: this_PostfixEffect_1= rulePostfixEffect
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_PostfixEffect_1=rulePostfixEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred148_InternalSCTX

    // $ANTLR start synpred149_InternalSCTX
    public final void synpred149_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Emission_2 = null;


        // InternalSCTX.g:4282:2: (this_Emission_2= ruleEmission )
        // InternalSCTX.g:4282:2: this_Emission_2= ruleEmission
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Emission_2=ruleEmission();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred149_InternalSCTX

    // $ANTLR start synpred150_InternalSCTX
    public final void synpred150_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_HostcodeEffect_3 = null;


        // InternalSCTX.g:4295:2: (this_HostcodeEffect_3= ruleHostcodeEffect )
        // InternalSCTX.g:4295:2: this_HostcodeEffect_3= ruleHostcodeEffect
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_HostcodeEffect_3=ruleHostcodeEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred150_InternalSCTX

    // $ANTLR start synpred151_InternalSCTX
    public final void synpred151_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ReferenceCallEffect_4 = null;


        // InternalSCTX.g:4308:2: (this_ReferenceCallEffect_4= ruleReferenceCallEffect )
        // InternalSCTX.g:4308:2: this_ReferenceCallEffect_4= ruleReferenceCallEffect
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ReferenceCallEffect_4=ruleReferenceCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred151_InternalSCTX

    // $ANTLR start synpred152_InternalSCTX
    public final void synpred152_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_FunctionCallEffect_5 = null;


        // InternalSCTX.g:4321:2: (this_FunctionCallEffect_5= ruleFunctionCallEffect )
        // InternalSCTX.g:4321:2: this_FunctionCallEffect_5= ruleFunctionCallEffect
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_FunctionCallEffect_5=ruleFunctionCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred152_InternalSCTX

    // $ANTLR start synpred182_InternalSCTX
    public final void synpred182_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_BoolExpression_0 = null;


        // InternalSCTX.g:5345:2: (this_BoolExpression_0= ruleBoolExpression )
        // InternalSCTX.g:5345:2: this_BoolExpression_0= ruleBoolExpression
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_BoolExpression_0=ruleBoolExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred182_InternalSCTX

    // $ANTLR start synpred184_InternalSCTX
    public final void synpred184_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_schedule_3_0 = null;


        // InternalSCTX.g:5369:4: (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )
        // InternalSCTX.g:5369:4: otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+
        {
        otherlv_2=(Token)match(input,58,FollowSets000.FOLLOW_70); if (state.failed) return ;
        // InternalSCTX.g:5373:1: ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+
        int cnt260=0;
        loop260:
        do {
            int alt260=2;
            int LA260_0 = input.LA(1);

            if ( (LA260_0==RULE_ID) ) {
                alt260=1;
            }


            switch (alt260) {
        	case 1 :
        	    // InternalSCTX.g:5374:1: (lv_schedule_3_0= ruleScheduleObjectReference )
        	    {
        	    // InternalSCTX.g:5374:1: (lv_schedule_3_0= ruleScheduleObjectReference )
        	    // InternalSCTX.g:5375:3: lv_schedule_3_0= ruleScheduleObjectReference
        	    {
        	    if ( state.backtracking==0 ) {
        	       
        	      	        newCompositeNode(grammarAccess.getExpressionAccess().getScheduleScheduleObjectReferenceParserRuleCall_1_1_0()); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_41);
        	    lv_schedule_3_0=ruleScheduleObjectReference();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    if ( cnt260 >= 1 ) break loop260;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(260, input);
                    throw eee;
            }
            cnt260++;
        } while (true);


        }
    }
    // $ANTLR end synpred184_InternalSCTX

    // $ANTLR start synpred193_InternalSCTX
    public final void synpred193_InternalSCTX_fragment() throws RecognitionException {   
        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;


        // InternalSCTX.g:5857:2: ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )
        // InternalSCTX.g:5857:2: () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) )
        {
        // InternalSCTX.g:5857:2: ()
        // InternalSCTX.g:5858:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        // InternalSCTX.g:5866:2: ( (lv_operator_2_0= ruleCompareOperator ) )
        // InternalSCTX.g:5867:1: (lv_operator_2_0= ruleCompareOperator )
        {
        // InternalSCTX.g:5867:1: (lv_operator_2_0= ruleCompareOperator )
        // InternalSCTX.g:5868:3: lv_operator_2_0= ruleCompareOperator
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getCompareOperationAccess().getOperatorCompareOperatorEnumRuleCall_1_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_35);
        lv_operator_2_0=ruleCompareOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCTX.g:5884:2: ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) )
        // InternalSCTX.g:5885:1: (lv_subExpressions_3_0= ruleNotOrValuedExpression )
        {
        // InternalSCTX.g:5885:1: (lv_subExpressions_3_0= ruleNotOrValuedExpression )
        // InternalSCTX.g:5886:3: lv_subExpressions_3_0= ruleNotOrValuedExpression
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getCompareOperationAccess().getSubExpressionsNotOrValuedExpressionParserRuleCall_1_2_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_3_0=ruleNotOrValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred193_InternalSCTX

    // $ANTLR start synpred194_InternalSCTX
    public final void synpred194_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ValuedExpression_0 = null;


        // InternalSCTX.g:5924:2: (this_ValuedExpression_0= ruleValuedExpression )
        // InternalSCTX.g:5924:2: this_ValuedExpression_0= ruleValuedExpression
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedExpression_0=ruleValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred194_InternalSCTX

    // $ANTLR start synpred215_InternalSCTX
    public final void synpred215_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject this_ValuedExpression_4 = null;


        // InternalSCTX.g:6805:6: ( (otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')' ) )
        // InternalSCTX.g:6805:6: (otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')' )
        {
        // InternalSCTX.g:6805:6: (otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')' )
        // InternalSCTX.g:6805:8: otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')'
        {
        otherlv_3=(Token)match(input,26,FollowSets000.FOLLOW_102); if (state.failed) return ;
        pushFollow(FollowSets000.FOLLOW_25);
        this_ValuedExpression_4=ruleValuedExpression();

        state._fsp--;
        if (state.failed) return ;
        otherlv_5=(Token)match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred215_InternalSCTX

    // $ANTLR start synpred229_InternalSCTX
    public final void synpred229_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_KeyStringValueAnnotation_1 = null;


        // InternalSCTX.g:7623:2: (this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation )
        // InternalSCTX.g:7623:2: this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_KeyStringValueAnnotation_1=ruleKeyStringValueAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred229_InternalSCTX

    // Delegated rules

    public final boolean synpred182_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred182_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred184_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred184_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred61_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred61_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred37_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred194_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred194_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred193_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred193_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred229_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred229_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred150_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred150_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred147_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred147_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred151_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred151_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred149_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred149_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred148_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred148_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred152_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred152_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred215_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred215_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred100_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred100_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA5 dfa5 = new DFA5(this);
    protected DFA8 dfa8 = new DFA8(this);
    protected DFA15 dfa15 = new DFA15(this);
    protected DFA18 dfa18 = new DFA18(this);
    protected DFA20 dfa20 = new DFA20(this);
    protected DFA33 dfa33 = new DFA33(this);
    protected DFA34 dfa34 = new DFA34(this);
    protected DFA39 dfa39 = new DFA39(this);
    protected DFA45 dfa45 = new DFA45(this);
    protected DFA46 dfa46 = new DFA46(this);
    protected DFA50 dfa50 = new DFA50(this);
    protected DFA52 dfa52 = new DFA52(this);
    protected DFA56 dfa56 = new DFA56(this);
    protected DFA57 dfa57 = new DFA57(this);
    protected DFA58 dfa58 = new DFA58(this);
    protected DFA84 dfa84 = new DFA84(this);
    protected DFA88 dfa88 = new DFA88(this);
    protected DFA91 dfa91 = new DFA91(this);
    protected DFA93 dfa93 = new DFA93(this);
    protected DFA94 dfa94 = new DFA94(this);
    protected DFA136 dfa136 = new DFA136(this);
    protected DFA139 dfa139 = new DFA139(this);
    protected DFA143 dfa143 = new DFA143(this);
    protected DFA148 dfa148 = new DFA148(this);
    protected DFA152 dfa152 = new DFA152(this);
    protected DFA166 dfa166 = new DFA166(this);
    protected DFA168 dfa168 = new DFA168(this);
    protected DFA167 dfa167 = new DFA167(this);
    protected DFA177 dfa177 = new DFA177(this);
    protected DFA178 dfa178 = new DFA178(this);
    protected DFA191 dfa191 = new DFA191(this);
    protected DFA192 dfa192 = new DFA192(this);
    protected DFA205 dfa205 = new DFA205(this);
    protected DFA206 dfa206 = new DFA206(this);
    protected DFA207 dfa207 = new DFA207(this);
    protected DFA208 dfa208 = new DFA208(this);
    static final String dfa_1s = "\114\uffff";
    static final String dfa_2s = "\1\5\1\uffff\2\5\1\uffff\1\4\2\5\1\6\6\5\3\4\2\5\1\6\1\41\1\6\3\5\1\6\7\5\1\6\1\4\2\5\1\6\2\5\2\41\3\5\1\6\5\5\1\4\2\5\1\6\4\5\1\6\7\5\1\6\6\5\1\0";
    static final String dfa_3s = "\1\165\1\uffff\1\165\1\5\1\uffff\1\165\1\5\1\10\1\6\5\165\1\5\2\165\1\107\2\5\1\6\1\115\1\10\3\165\1\10\5\165\2\5\1\6\1\107\2\5\1\6\2\5\1\115\1\41\3\165\1\10\5\165\1\107\2\5\1\6\1\5\3\165\1\10\5\165\2\5\1\6\1\5\3\165\1\5\1\165\1\0";
    static final String dfa_4s = "\1\uffff\1\2\2\uffff\1\1\107\uffff";
    static final String dfa_5s = "\113\uffff\1\0}>";
    static final String[] dfa_6s = {
            "\1\1\4\uffff\1\2\10\uffff\6\1\16\uffff\1\1\1\uffff\10\1\2\uffff\10\4\21\uffff\1\3\7\uffff\4\1\27\uffff\7\4",
            "",
            "\1\1\4\uffff\1\2\11\uffff\5\1\16\uffff\1\1\1\uffff\1\1\11\uffff\10\4\21\uffff\1\3\42\uffff\7\4",
            "\1\5",
            "",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\2\11\uffff\5\1\7\uffff\1\16\6\uffff\1\1\1\uffff\1\1\11\uffff\10\4\3\uffff\1\6\10\uffff\1\7\4\uffff\1\3\1\10\41\uffff\7\4",
            "\1\17",
            "\1\17\1\14\1\uffff\1\15",
            "\1\20",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\13\uffff\1\1\1\uffff\1\1\11\uffff\10\4\21\uffff\1\3\42\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\4\uffff\1\1\6\uffff\1\1\1\uffff\1\1\11\uffff\10\4\1\uffff\1\1\1\uffff\1\22\10\uffff\1\23\3\uffff\1\1\1\3\1\24\17\uffff\12\1\10\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\13\uffff\1\1\1\uffff\1\1\11\uffff\10\4\21\uffff\1\3\42\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\13\uffff\1\1\1\uffff\1\1\11\uffff\10\4\21\uffff\1\3\42\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\13\uffff\1\1\1\uffff\1\1\11\uffff\10\4\21\uffff\1\3\42\uffff\7\4",
            "\1\25",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\2\11\uffff\5\1\7\uffff\1\16\6\uffff\1\1\1\uffff\1\1\11\uffff\10\4\3\uffff\1\6\10\uffff\1\7\4\uffff\1\3\1\10\41\uffff\7\4",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\2\11\uffff\5\1\7\uffff\1\16\6\uffff\1\1\1\uffff\1\1\11\uffff\10\4\14\uffff\1\26\4\uffff\1\3\42\uffff\7\4",
            "\1\27\1\30\1\33\1\uffff\1\34\1\31\75\uffff\1\32",
            "\1\35",
            "\1\36",
            "\1\37",
            "\1\43\34\uffff\1\40\10\uffff\1\41\5\uffff\1\42",
            "\1\14\1\uffff\1\15",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\13\uffff\1\1\1\uffff\1\1\11\uffff\10\4\21\uffff\1\3\42\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\13\uffff\1\1\1\uffff\1\1\11\uffff\10\4\3\uffff\1\44\10\uffff\1\45\4\uffff\1\3\1\46\41\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\13\uffff\1\1\1\uffff\1\1\11\uffff\10\4\21\uffff\1\3\42\uffff\7\4",
            "\1\33\1\uffff\1\34",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\13\uffff\1\1\1\uffff\1\1\11\uffff\10\4\21\uffff\1\3\42\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\13\uffff\1\1\1\uffff\1\1\11\uffff\10\4\21\uffff\1\3\42\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\4\uffff\1\1\6\uffff\1\1\1\uffff\1\1\11\uffff\10\4\1\uffff\1\1\1\uffff\1\47\10\uffff\1\23\3\uffff\1\1\1\3\1\24\17\uffff\12\1\10\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\13\uffff\1\1\1\uffff\1\1\11\uffff\10\4\3\uffff\1\50\10\uffff\1\23\4\uffff\1\3\1\24\41\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\13\uffff\1\1\1\uffff\1\1\11\uffff\10\4\21\uffff\1\3\42\uffff\7\4",
            "\1\51",
            "\1\51",
            "\1\52",
            "\1\53\1\54\1\57\1\uffff\1\60\1\55\75\uffff\1\56",
            "\1\61",
            "\1\61",
            "\1\62",
            "\1\63",
            "\1\36",
            "\1\43\34\uffff\1\40\10\uffff\1\41\5\uffff\1\42",
            "\1\43",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\64\13\uffff\1\1\1\uffff\1\1\11\uffff\10\4\21\uffff\1\3\42\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\64\13\uffff\1\1\1\uffff\1\1\11\uffff\10\4\3\uffff\1\65\10\uffff\1\66\4\uffff\1\3\1\67\41\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\64\13\uffff\1\1\1\uffff\1\1\11\uffff\10\4\21\uffff\1\3\42\uffff\7\4",
            "\1\57\1\uffff\1\60",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\64\13\uffff\1\1\1\uffff\1\1\11\uffff\10\4\21\uffff\1\3\42\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\64\13\uffff\1\1\1\uffff\1\1\11\uffff\10\4\21\uffff\1\3\42\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\13\uffff\1\1\1\uffff\1\1\11\uffff\10\4\3\uffff\1\44\10\uffff\1\45\4\uffff\1\3\1\46\41\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\13\uffff\1\1\1\uffff\1\1\11\uffff\10\4\21\uffff\1\3\42\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\4\uffff\1\1\6\uffff\1\1\1\uffff\1\1\11\uffff\10\4\1\uffff\1\1\1\uffff\1\70\10\uffff\1\23\3\uffff\1\1\1\3\1\24\17\uffff\12\1\10\uffff\7\4",
            "\1\71\1\72\1\75\1\uffff\1\76\1\73\75\uffff\1\74",
            "\1\77",
            "\1\77",
            "\1\100",
            "\1\101",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\64\13\uffff\1\1\1\uffff\1\1\11\uffff\10\4\21\uffff\1\3\42\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\64\13\uffff\1\1\1\uffff\1\1\11\uffff\10\4\3\uffff\1\102\10\uffff\1\103\4\uffff\1\3\1\104\41\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\64\13\uffff\1\1\1\uffff\1\1\11\uffff\10\4\21\uffff\1\3\42\uffff\7\4",
            "\1\75\1\uffff\1\76",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\64\13\uffff\1\1\1\uffff\1\1\11\uffff\10\4\21\uffff\1\3\42\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\64\13\uffff\1\1\1\uffff\1\1\11\uffff\10\4\21\uffff\1\3\42\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\64\13\uffff\1\1\1\uffff\1\1\11\uffff\10\4\3\uffff\1\65\10\uffff\1\66\4\uffff\1\3\1\67\41\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\64\13\uffff\1\1\1\uffff\1\1\11\uffff\10\4\21\uffff\1\3\42\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\4\uffff\1\1\6\uffff\1\1\1\uffff\1\1\11\uffff\10\4\1\uffff\1\1\1\uffff\1\105\10\uffff\1\23\3\uffff\1\1\1\3\1\24\17\uffff\12\1\10\uffff\7\4",
            "\1\106",
            "\1\106",
            "\1\107",
            "\1\110",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\64\13\uffff\1\1\1\uffff\1\1\11\uffff\10\4\3\uffff\1\102\10\uffff\1\103\4\uffff\1\3\1\104\41\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\64\13\uffff\1\1\1\uffff\1\1\11\uffff\10\4\21\uffff\1\3\42\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\4\uffff\1\1\6\uffff\1\1\1\uffff\1\1\11\uffff\10\4\1\uffff\1\1\1\uffff\1\111\10\uffff\1\23\3\uffff\1\1\1\3\1\24\17\uffff\12\1\10\uffff\7\4",
            "\1\112",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\4\uffff\1\1\6\uffff\1\1\1\uffff\1\1\11\uffff\10\4\1\uffff\1\1\1\uffff\1\113\10\uffff\1\23\3\uffff\1\1\1\3\1\24\17\uffff\12\1\10\uffff\7\4",
            "\1\uffff"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA5 extends DFA {

        public DFA5(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 5;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "()* loopback of 206:1: ( (lv_declarations_5_0= ruleDeclarationWOSemicolon ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA5_75 = input.LA(1);

                         
                        int index5_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalSCTX()) ) {s = 4;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index5_75);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 5, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_7s = "\115\uffff";
    static final String dfa_8s = "\3\5\3\uffff\1\4\2\5\1\6\6\5\3\4\2\5\1\6\1\41\1\6\3\5\1\6\7\5\1\6\1\4\2\5\1\6\2\5\2\41\3\5\1\6\5\5\1\4\2\5\1\6\4\5\1\6\7\5\1\6\6\5\1\0";
    static final String dfa_9s = "\2\114\1\5\3\uffff\1\115\1\5\1\10\1\6\1\114\1\146\3\114\1\5\1\115\1\114\1\107\2\5\1\6\1\115\1\10\1\114\1\115\1\114\1\10\2\114\1\146\1\115\1\114\2\5\1\6\1\107\2\5\1\6\2\5\1\115\1\41\1\114\1\115\1\114\1\10\2\114\1\115\1\114\1\146\1\107\2\5\1\6\1\5\1\114\1\115\1\114\1\10\2\114\1\115\1\114\1\146\2\5\1\6\1\5\1\115\1\114\1\146\1\5\1\146\1\0";
    static final String dfa_10s = "\3\uffff\1\1\1\2\1\3\107\uffff";
    static final String dfa_11s = "\114\uffff\1\0}>";
    static final String[] dfa_12s = {
            "\1\4\4\uffff\1\1\10\uffff\1\5\5\3\16\uffff\1\5\1\uffff\1\5\42\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\16\uffff\1\5\1\uffff\1\5\42\uffff\1\2",
            "\1\6",
            "",
            "",
            "",
            "\1\12\1\13\1\15\1\uffff\1\16\1\14\1\1\11\uffff\5\3\7\uffff\1\17\6\uffff\1\5\1\uffff\1\5\24\uffff\1\7\10\uffff\1\10\4\uffff\1\2\1\11",
            "\1\20",
            "\1\20\1\15\1\uffff\1\16",
            "\1\21",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\13\uffff\1\5\1\uffff\1\5\42\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\4\uffff\1\4\6\uffff\1\5\1\uffff\1\5\22\uffff\1\4\1\uffff\1\23\10\uffff\1\24\3\uffff\1\4\1\2\1\25\17\uffff\12\4",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\13\uffff\1\5\1\uffff\1\5\42\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\13\uffff\1\5\1\uffff\1\5\42\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\13\uffff\1\5\1\uffff\1\5\42\uffff\1\2",
            "\1\26",
            "\1\12\1\13\1\15\1\uffff\1\16\1\14\1\1\11\uffff\5\3\7\uffff\1\17\6\uffff\1\5\1\uffff\1\5\24\uffff\1\7\10\uffff\1\10\4\uffff\1\2\1\11",
            "\1\12\1\13\1\15\1\uffff\1\16\1\14\1\1\11\uffff\5\3\7\uffff\1\17\6\uffff\1\5\1\uffff\1\5\35\uffff\1\27\4\uffff\1\2",
            "\1\30\1\31\1\34\1\uffff\1\35\1\32\75\uffff\1\33",
            "\1\36",
            "\1\37",
            "\1\40",
            "\1\44\34\uffff\1\41\10\uffff\1\42\5\uffff\1\43",
            "\1\15\1\uffff\1\16",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\13\uffff\1\5\1\uffff\1\5\42\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\13\uffff\1\5\1\uffff\1\5\24\uffff\1\45\10\uffff\1\46\4\uffff\1\2\1\47",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\13\uffff\1\5\1\uffff\1\5\42\uffff\1\2",
            "\1\34\1\uffff\1\35",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\13\uffff\1\5\1\uffff\1\5\42\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\13\uffff\1\5\1\uffff\1\5\42\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\4\uffff\1\4\6\uffff\1\5\1\uffff\1\5\22\uffff\1\4\1\uffff\1\50\10\uffff\1\24\3\uffff\1\4\1\2\1\25\17\uffff\12\4",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\13\uffff\1\5\1\uffff\1\5\24\uffff\1\51\10\uffff\1\24\4\uffff\1\2\1\25",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\13\uffff\1\5\1\uffff\1\5\42\uffff\1\2",
            "\1\52",
            "\1\52",
            "\1\53",
            "\1\54\1\55\1\60\1\uffff\1\61\1\56\75\uffff\1\57",
            "\1\62",
            "\1\62",
            "\1\63",
            "\1\64",
            "\1\37",
            "\1\44\34\uffff\1\41\10\uffff\1\42\5\uffff\1\43",
            "\1\44",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\65\13\uffff\1\5\1\uffff\1\5\42\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\65\13\uffff\1\5\1\uffff\1\5\24\uffff\1\66\10\uffff\1\67\4\uffff\1\2\1\70",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\65\13\uffff\1\5\1\uffff\1\5\42\uffff\1\2",
            "\1\60\1\uffff\1\61",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\65\13\uffff\1\5\1\uffff\1\5\42\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\65\13\uffff\1\5\1\uffff\1\5\42\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\13\uffff\1\5\1\uffff\1\5\24\uffff\1\45\10\uffff\1\46\4\uffff\1\2\1\47",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\13\uffff\1\5\1\uffff\1\5\42\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\4\uffff\1\4\6\uffff\1\5\1\uffff\1\5\22\uffff\1\4\1\uffff\1\71\10\uffff\1\24\3\uffff\1\4\1\2\1\25\17\uffff\12\4",
            "\1\72\1\73\1\76\1\uffff\1\77\1\74\75\uffff\1\75",
            "\1\100",
            "\1\100",
            "\1\101",
            "\1\102",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\65\13\uffff\1\5\1\uffff\1\5\42\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\65\13\uffff\1\5\1\uffff\1\5\24\uffff\1\103\10\uffff\1\104\4\uffff\1\2\1\105",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\65\13\uffff\1\5\1\uffff\1\5\42\uffff\1\2",
            "\1\76\1\uffff\1\77",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\65\13\uffff\1\5\1\uffff\1\5\42\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\65\13\uffff\1\5\1\uffff\1\5\42\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\65\13\uffff\1\5\1\uffff\1\5\24\uffff\1\66\10\uffff\1\67\4\uffff\1\2\1\70",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\65\13\uffff\1\5\1\uffff\1\5\42\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\4\uffff\1\4\6\uffff\1\5\1\uffff\1\5\22\uffff\1\4\1\uffff\1\106\10\uffff\1\24\3\uffff\1\4\1\2\1\25\17\uffff\12\4",
            "\1\107",
            "\1\107",
            "\1\110",
            "\1\111",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\65\13\uffff\1\5\1\uffff\1\5\24\uffff\1\103\10\uffff\1\104\4\uffff\1\2\1\105",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\65\13\uffff\1\5\1\uffff\1\5\42\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\4\uffff\1\4\6\uffff\1\5\1\uffff\1\5\22\uffff\1\4\1\uffff\1\112\10\uffff\1\24\3\uffff\1\4\1\2\1\25\17\uffff\12\4",
            "\1\113",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\4\uffff\1\4\6\uffff\1\5\1\uffff\1\5\22\uffff\1\4\1\uffff\1\114\10\uffff\1\24\3\uffff\1\4\1\2\1\25\17\uffff\12\4",
            "\1\uffff"
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA8 extends DFA {

        public DFA8(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 8;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "242:3: ( ( (lv_regions_7_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_8_0= ruleImplicitDataflowRegion ) ) | ( (lv_regions_9_0= ruleRegion ) )* )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA8_76 = input.LA(1);

                         
                        int index8_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalSCTX()) ) {s = 3;}

                        else if ( (synpred8_InternalSCTX()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index8_76);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 8, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA15 extends DFA {

        public DFA15(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 15;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "()* loopback of 468:1: ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA15_75 = input.LA(1);

                         
                        int index15_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalSCTX()) ) {s = 4;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index15_75);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 15, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA18 extends DFA {

        public DFA18(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 18;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "504:3: ( ( (lv_regions_13_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_14_0= ruleImplicitDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA18_76 = input.LA(1);

                         
                        int index18_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalSCTX()) ) {s = 3;}

                        else if ( (synpred20_InternalSCTX()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index18_76);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 18, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_13s = "\65\uffff";
    static final String dfa_14s = "\1\1\64\uffff";
    static final String dfa_15s = "\1\12\1\uffff\1\12\1\5\1\uffff\1\4\2\5\1\6\3\12\1\5\3\4\2\5\1\6\1\41\5\12\2\5\1\6\1\4\2\5\1\6\2\41\5\12\1\4\2\5\1\6\5\12\2\5\1\6\2\12";
    static final String dfa_16s = "\1\123\1\uffff\1\123\1\5\1\uffff\1\123\1\5\1\10\1\6\3\123\1\5\2\123\1\107\2\5\1\6\1\115\5\123\2\5\1\6\1\107\2\5\1\6\1\115\1\41\5\123\1\107\2\5\1\6\5\123\2\5\1\6\2\123";
    static final String dfa_17s = "\1\uffff\1\2\2\uffff\1\1\60\uffff";
    static final String dfa_18s = "\65\uffff}>";
    static final String[] dfa_19s = {
            "\1\2\10\uffff\6\1\16\uffff\1\1\1\uffff\1\1\42\uffff\1\3\1\uffff\6\4",
            "",
            "\1\2\11\uffff\5\1\16\uffff\1\1\1\uffff\1\1\42\uffff\1\3\1\uffff\6\4",
            "\1\5",
            "",
            "\1\11\1\12\1\1\1\uffff\1\1\1\13\1\2\11\uffff\5\1\7\uffff\1\14\6\uffff\1\1\1\uffff\1\1\24\uffff\1\6\10\uffff\1\7\4\uffff\1\3\1\10\6\4",
            "\1\15",
            "\1\15\1\1\1\uffff\1\1",
            "\1\16",
            "\1\2\11\uffff\5\1\2\uffff\1\17\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3\1\uffff\6\4",
            "\1\2\11\uffff\5\1\2\uffff\1\17\13\uffff\1\1\1\uffff\1\1\24\uffff\1\20\10\uffff\1\21\4\uffff\1\3\1\22\6\4",
            "\1\2\11\uffff\5\1\2\uffff\1\17\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3\1\uffff\6\4",
            "\1\23",
            "\1\11\1\12\1\1\1\uffff\1\1\1\13\1\2\11\uffff\5\1\7\uffff\1\14\6\uffff\1\1\1\uffff\1\1\24\uffff\1\6\10\uffff\1\7\4\uffff\1\3\1\10\6\4",
            "\1\11\1\12\1\1\1\uffff\1\1\1\13\1\2\11\uffff\5\1\7\uffff\1\14\6\uffff\1\1\1\uffff\1\1\35\uffff\1\1\4\uffff\1\3\1\uffff\6\4",
            "\1\24\1\25\1\1\1\uffff\1\1\1\26\75\uffff\1\1",
            "\1\27",
            "\1\27",
            "\1\30",
            "\1\34\34\uffff\1\31\10\uffff\1\32\5\uffff\1\33",
            "\1\2\11\uffff\5\1\2\uffff\1\17\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3\1\uffff\6\4",
            "\1\2\11\uffff\5\1\2\uffff\1\17\13\uffff\1\1\1\uffff\1\1\24\uffff\1\35\10\uffff\1\36\4\uffff\1\3\1\37\6\4",
            "\1\2\11\uffff\5\1\2\uffff\1\17\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3\1\uffff\6\4",
            "\1\2\11\uffff\5\1\2\uffff\1\17\13\uffff\1\1\1\uffff\1\1\24\uffff\1\20\10\uffff\1\21\4\uffff\1\3\1\22\6\4",
            "\1\2\11\uffff\5\1\2\uffff\1\17\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3\1\uffff\6\4",
            "\1\40",
            "\1\40",
            "\1\41",
            "\1\42\1\43\1\1\1\uffff\1\1\1\44\75\uffff\1\1",
            "\1\45",
            "\1\45",
            "\1\46",
            "\1\34\34\uffff\1\31\10\uffff\1\32\5\uffff\1\33",
            "\1\34",
            "\1\2\11\uffff\5\1\2\uffff\1\47\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3\1\uffff\6\4",
            "\1\2\11\uffff\5\1\2\uffff\1\47\13\uffff\1\1\1\uffff\1\1\24\uffff\1\50\10\uffff\1\51\4\uffff\1\3\1\52\6\4",
            "\1\2\11\uffff\5\1\2\uffff\1\47\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3\1\uffff\6\4",
            "\1\2\11\uffff\5\1\2\uffff\1\17\13\uffff\1\1\1\uffff\1\1\24\uffff\1\35\10\uffff\1\36\4\uffff\1\3\1\37\6\4",
            "\1\2\11\uffff\5\1\2\uffff\1\17\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3\1\uffff\6\4",
            "\1\53\1\54\1\1\1\uffff\1\1\1\55\75\uffff\1\1",
            "\1\56",
            "\1\56",
            "\1\57",
            "\1\2\11\uffff\5\1\2\uffff\1\47\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3\1\uffff\6\4",
            "\1\2\11\uffff\5\1\2\uffff\1\47\13\uffff\1\1\1\uffff\1\1\24\uffff\1\60\10\uffff\1\61\4\uffff\1\3\1\62\6\4",
            "\1\2\11\uffff\5\1\2\uffff\1\47\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3\1\uffff\6\4",
            "\1\2\11\uffff\5\1\2\uffff\1\47\13\uffff\1\1\1\uffff\1\1\24\uffff\1\50\10\uffff\1\51\4\uffff\1\3\1\52\6\4",
            "\1\2\11\uffff\5\1\2\uffff\1\47\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3\1\uffff\6\4",
            "\1\63",
            "\1\63",
            "\1\64",
            "\1\2\11\uffff\5\1\2\uffff\1\47\13\uffff\1\1\1\uffff\1\1\24\uffff\1\60\10\uffff\1\61\4\uffff\1\3\1\62\6\4",
            "\1\2\11\uffff\5\1\2\uffff\1\47\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3\1\uffff\6\4"
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA20 extends DFA {

        public DFA20(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 20;
            this.eot = dfa_13;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "()* loopback of 564:4: ( (lv_outgoingTransitions_17_0= ruleTransition ) )*";
        }
    }
    static final String dfa_20s = "\17\uffff";
    static final String dfa_21s = "\1\4\1\0\15\uffff";
    static final String dfa_22s = "\1\156\1\0\15\uffff";
    static final String dfa_23s = "\2\uffff\1\2\13\uffff\1\1";
    static final String dfa_24s = "\1\uffff\1\0\15\uffff}>";
    static final String[] dfa_25s = {
            "\2\2\1\1\3\2\20\uffff\1\2\2\uffff\1\2\33\uffff\1\2\6\uffff\1\2\6\uffff\1\2\45\uffff\2\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[][] dfa_25 = unpackEncodedStringArray(dfa_25s);

    class DFA33 extends DFA {

        public DFA33(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 33;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "985:1: ( (lv_triggerDelay_7_0= RULE_INT ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA33_1 = input.LA(1);

                         
                        int index33_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalSCTX()) ) {s = 14;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index33_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 33, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_26s = "\1\4\4\uffff\10\0\2\uffff";
    static final String dfa_27s = "\1\156\4\uffff\10\0\2\uffff";
    static final String dfa_28s = "\1\uffff\1\1\14\uffff\1\2";
    static final String dfa_29s = "\5\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\2\uffff}>";
    static final String[] dfa_30s = {
            "\1\1\1\11\1\1\1\14\1\1\1\6\20\uffff\1\5\2\uffff\1\1\33\uffff\1\12\6\uffff\1\13\6\uffff\1\1\45\uffff\1\7\1\10",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_26 = DFA.unpackEncodedStringToUnsignedChars(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[][] dfa_30 = unpackEncodedStringArray(dfa_30s);

    class DFA34 extends DFA {

        public DFA34(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 34;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_26;
            this.max = dfa_27;
            this.accept = dfa_28;
            this.special = dfa_29;
            this.transition = dfa_30;
        }
        public String getDescription() {
            return "1003:3: ( ( (lv_trigger_8_0= ruleBoolExpression ) ) | ( (lv_trigger_9_0= ruleAtomicExpression ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA34_5 = input.LA(1);

                         
                        int index34_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred38_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index34_5);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA34_6 = input.LA(1);

                         
                        int index34_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred38_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index34_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA34_7 = input.LA(1);

                         
                        int index34_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred38_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index34_7);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA34_8 = input.LA(1);

                         
                        int index34_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred38_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index34_8);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA34_9 = input.LA(1);

                         
                        int index34_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred38_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index34_9);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA34_10 = input.LA(1);

                         
                        int index34_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred38_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index34_10);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA34_11 = input.LA(1);

                         
                        int index34_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred38_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index34_11);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA34_12 = input.LA(1);

                         
                        int index34_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred38_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index34_12);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 34, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_31s = "\112\uffff";
    static final String dfa_32s = "\2\12\1\5\1\4\1\uffff\2\4\1\22\2\uffff\2\5\1\6\5\12\3\5\1\6\3\4\2\5\1\6\1\41\2\4\1\6\3\12\1\6\4\12\2\5\1\6\1\4\2\5\1\6\2\41\3\12\1\6\4\12\1\4\2\5\1\6\3\12\1\6\4\12\2\5\1\6\2\12";
    static final String dfa_33s = "\2\114\1\5\1\50\1\uffff\2\115\1\50\2\uffff\1\5\1\10\1\6\1\114\1\115\3\114\3\5\1\6\1\115\1\114\1\107\2\5\1\6\2\115\1\50\1\10\1\114\1\115\1\114\1\10\2\114\1\115\1\114\2\5\1\6\1\107\2\5\1\6\1\115\1\41\1\114\1\115\1\114\1\10\2\114\1\115\1\114\1\107\2\5\1\6\1\114\1\115\1\114\1\10\2\114\1\115\1\114\2\5\1\6\1\115\1\114";
    static final String dfa_34s = "\4\uffff\1\3\3\uffff\1\2\1\1\100\uffff";
    static final String dfa_35s = "\112\uffff}>";
    static final String[] dfa_36s = {
            "\1\1\34\uffff\1\3\1\uffff\1\4\42\uffff\1\2",
            "\1\1\34\uffff\1\3\1\uffff\1\4\42\uffff\1\2",
            "\1\5",
            "\1\7\1\6\14\uffff\1\10\25\uffff\1\11",
            "",
            "\1\15\1\16\1\20\1\uffff\1\21\1\17\1\1\25\uffff\1\22\6\uffff\1\3\1\uffff\1\4\24\uffff\1\12\10\uffff\1\13\4\uffff\1\2\1\14",
            "\1\7\15\uffff\1\10\25\uffff\1\11\25\uffff\1\23\10\uffff\1\24\5\uffff\1\25",
            "\1\10\25\uffff\1\11",
            "",
            "",
            "\1\26",
            "\1\26\1\20\1\uffff\1\21",
            "\1\27",
            "\1\1\20\uffff\1\30\13\uffff\1\3\1\uffff\1\4\42\uffff\1\2",
            "\1\1\20\uffff\1\30\13\uffff\1\3\1\uffff\1\4\24\uffff\1\31\10\uffff\1\32\4\uffff\1\2\1\33",
            "\1\1\20\uffff\1\30\13\uffff\1\3\1\uffff\1\4\42\uffff\1\2",
            "\1\1\20\uffff\1\30\13\uffff\1\3\1\uffff\1\4\42\uffff\1\2",
            "\1\1\20\uffff\1\30\13\uffff\1\3\1\uffff\1\4\42\uffff\1\2",
            "\1\34",
            "\1\35",
            "\1\35",
            "\1\36",
            "\1\15\1\16\1\20\1\uffff\1\21\1\17\1\1\25\uffff\1\22\6\uffff\1\3\1\uffff\1\4\24\uffff\1\12\10\uffff\1\13\4\uffff\1\2\1\14",
            "\1\15\1\16\1\20\1\uffff\1\21\1\17\1\1\25\uffff\1\22\6\uffff\1\3\1\uffff\1\4\35\uffff\1\37\4\uffff\1\2",
            "\1\40\1\41\1\44\1\uffff\1\45\1\42\75\uffff\1\43",
            "\1\46",
            "\1\46",
            "\1\47",
            "\1\53\34\uffff\1\50\10\uffff\1\51\5\uffff\1\52",
            "\1\7\15\uffff\1\10\25\uffff\1\11\25\uffff\1\23\10\uffff\1\24\5\uffff\1\25",
            "\1\7\15\uffff\1\10\25\uffff\1\11",
            "\1\20\1\uffff\1\21",
            "\1\1\20\uffff\1\30\13\uffff\1\3\1\uffff\1\4\42\uffff\1\2",
            "\1\1\20\uffff\1\30\13\uffff\1\3\1\uffff\1\4\24\uffff\1\54\10\uffff\1\55\4\uffff\1\2\1\56",
            "\1\1\20\uffff\1\30\13\uffff\1\3\1\uffff\1\4\42\uffff\1\2",
            "\1\44\1\uffff\1\45",
            "\1\1\20\uffff\1\30\13\uffff\1\3\1\uffff\1\4\42\uffff\1\2",
            "\1\1\20\uffff\1\30\13\uffff\1\3\1\uffff\1\4\42\uffff\1\2",
            "\1\1\20\uffff\1\30\13\uffff\1\3\1\uffff\1\4\24\uffff\1\31\10\uffff\1\32\4\uffff\1\2\1\33",
            "\1\1\20\uffff\1\30\13\uffff\1\3\1\uffff\1\4\42\uffff\1\2",
            "\1\57",
            "\1\57",
            "\1\60",
            "\1\61\1\62\1\65\1\uffff\1\66\1\63\75\uffff\1\64",
            "\1\67",
            "\1\67",
            "\1\70",
            "\1\53\34\uffff\1\50\10\uffff\1\51\5\uffff\1\52",
            "\1\53",
            "\1\1\20\uffff\1\71\13\uffff\1\3\1\uffff\1\4\42\uffff\1\2",
            "\1\1\20\uffff\1\71\13\uffff\1\3\1\uffff\1\4\24\uffff\1\72\10\uffff\1\73\4\uffff\1\2\1\74",
            "\1\1\20\uffff\1\71\13\uffff\1\3\1\uffff\1\4\42\uffff\1\2",
            "\1\65\1\uffff\1\66",
            "\1\1\20\uffff\1\71\13\uffff\1\3\1\uffff\1\4\42\uffff\1\2",
            "\1\1\20\uffff\1\71\13\uffff\1\3\1\uffff\1\4\42\uffff\1\2",
            "\1\1\20\uffff\1\30\13\uffff\1\3\1\uffff\1\4\24\uffff\1\54\10\uffff\1\55\4\uffff\1\2\1\56",
            "\1\1\20\uffff\1\30\13\uffff\1\3\1\uffff\1\4\42\uffff\1\2",
            "\1\75\1\76\1\101\1\uffff\1\102\1\77\75\uffff\1\100",
            "\1\103",
            "\1\103",
            "\1\104",
            "\1\1\20\uffff\1\71\13\uffff\1\3\1\uffff\1\4\42\uffff\1\2",
            "\1\1\20\uffff\1\71\13\uffff\1\3\1\uffff\1\4\24\uffff\1\105\10\uffff\1\106\4\uffff\1\2\1\107",
            "\1\1\20\uffff\1\71\13\uffff\1\3\1\uffff\1\4\42\uffff\1\2",
            "\1\101\1\uffff\1\102",
            "\1\1\20\uffff\1\71\13\uffff\1\3\1\uffff\1\4\42\uffff\1\2",
            "\1\1\20\uffff\1\71\13\uffff\1\3\1\uffff\1\4\42\uffff\1\2",
            "\1\1\20\uffff\1\71\13\uffff\1\3\1\uffff\1\4\24\uffff\1\72\10\uffff\1\73\4\uffff\1\2\1\74",
            "\1\1\20\uffff\1\71\13\uffff\1\3\1\uffff\1\4\42\uffff\1\2",
            "\1\110",
            "\1\110",
            "\1\111",
            "\1\1\20\uffff\1\71\13\uffff\1\3\1\uffff\1\4\24\uffff\1\105\10\uffff\1\106\4\uffff\1\2\1\107",
            "\1\1\20\uffff\1\71\13\uffff\1\3\1\uffff\1\4\42\uffff\1\2"
    };

    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final char[] dfa_32 = DFA.unpackEncodedStringToUnsignedChars(dfa_32s);
    static final char[] dfa_33 = DFA.unpackEncodedStringToUnsignedChars(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final short[][] dfa_36 = unpackEncodedStringArray(dfa_36s);

    class DFA39 extends DFA {

        public DFA39(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 39;
            this.eot = dfa_31;
            this.eof = dfa_31;
            this.min = dfa_32;
            this.max = dfa_33;
            this.accept = dfa_34;
            this.special = dfa_35;
            this.transition = dfa_36;
        }
        public String getDescription() {
            return "1127:1: (this_ControlflowRegion_0= ruleControlflowRegion | this_NestedControlflowRegion_1= ruleNestedControlflowRegion | this_DataflowRegion_2= ruleDataflowRegion )";
        }
    }
    static final String dfa_37s = "\101\uffff";
    static final String dfa_38s = "\2\12\1\5\2\uffff\1\4\2\5\1\6\1\5\5\12\2\4\1\41\1\4\2\5\2\6\2\5\1\6\1\4\3\12\1\6\4\12\2\41\3\12\1\6\2\12\2\5\1\6\1\4\2\5\1\6\5\12\1\6\4\12\2\5\1\6\2\12";
    static final String dfa_39s = "\2\165\1\5\2\uffff\1\165\1\5\1\10\1\6\1\5\7\165\1\115\1\107\2\5\1\6\1\10\2\5\1\6\1\107\3\165\1\10\4\165\1\115\1\41\3\165\1\10\2\165\2\5\1\6\1\107\2\5\1\6\5\165\1\10\4\165\2\5\1\6\2\165";
    static final String dfa_40s = "\3\uffff\1\2\1\1\74\uffff";
    static final String dfa_41s = "\101\uffff}>";
    static final String[] dfa_42s = {
            "\1\1\11\uffff\5\3\32\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\32\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\5",
            "",
            "",
            "\1\12\1\13\1\15\1\uffff\1\16\1\14\1\1\11\uffff\5\3\7\uffff\1\11\22\uffff\10\4\3\uffff\1\6\10\uffff\1\7\4\uffff\1\2\1\10\41\uffff\7\4",
            "\1\17",
            "\1\17\1\15\1\uffff\1\16",
            "\1\20",
            "\1\21",
            "\1\1\11\uffff\5\3\2\uffff\1\22\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\22\27\uffff\10\4\3\uffff\1\23\10\uffff\1\24\4\uffff\1\2\1\25\41\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\22\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\22\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\22\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\12\1\13\1\15\1\uffff\1\16\1\14\1\1\11\uffff\5\3\7\uffff\1\11\22\uffff\10\4\3\uffff\1\6\10\uffff\1\7\4\uffff\1\2\1\10\41\uffff\7\4",
            "\1\12\1\13\1\15\1\uffff\1\16\1\14\1\1\11\uffff\5\3\7\uffff\1\11\22\uffff\10\4\14\uffff\1\26\4\uffff\1\2\42\uffff\7\4",
            "\1\32\34\uffff\1\27\10\uffff\1\30\5\uffff\1\31",
            "\1\33\1\34\1\37\1\uffff\1\40\1\35\75\uffff\1\36",
            "\1\41",
            "\1\41",
            "\1\42",
            "\1\15\1\uffff\1\16",
            "\1\43",
            "\1\43",
            "\1\44",
            "\1\45\1\46\1\51\1\uffff\1\52\1\47\75\uffff\1\50",
            "\1\1\11\uffff\5\3\2\uffff\1\22\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\22\27\uffff\10\4\3\uffff\1\53\10\uffff\1\54\4\uffff\1\2\1\55\41\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\22\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\37\1\uffff\1\40",
            "\1\1\11\uffff\5\3\2\uffff\1\22\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\22\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\22\27\uffff\10\4\3\uffff\1\23\10\uffff\1\24\4\uffff\1\2\1\25\41\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\22\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\32\34\uffff\1\27\10\uffff\1\30\5\uffff\1\31",
            "\1\32",
            "\1\1\11\uffff\5\3\2\uffff\1\56\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\56\27\uffff\10\4\3\uffff\1\57\10\uffff\1\60\4\uffff\1\2\1\61\41\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\56\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\51\1\uffff\1\52",
            "\1\1\11\uffff\5\3\2\uffff\1\56\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\56\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\62",
            "\1\62",
            "\1\63",
            "\1\64\1\65\1\70\1\uffff\1\71\1\66\75\uffff\1\67",
            "\1\72",
            "\1\72",
            "\1\73",
            "\1\1\11\uffff\5\3\2\uffff\1\22\27\uffff\10\4\3\uffff\1\53\10\uffff\1\54\4\uffff\1\2\1\55\41\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\22\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\56\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\56\27\uffff\10\4\3\uffff\1\74\10\uffff\1\75\4\uffff\1\2\1\76\41\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\56\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\70\1\uffff\1\71",
            "\1\1\11\uffff\5\3\2\uffff\1\56\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\56\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\56\27\uffff\10\4\3\uffff\1\57\10\uffff\1\60\4\uffff\1\2\1\61\41\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\56\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\77",
            "\1\77",
            "\1\100",
            "\1\1\11\uffff\5\3\2\uffff\1\56\27\uffff\10\4\3\uffff\1\74\10\uffff\1\75\4\uffff\1\2\1\76\41\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\56\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4"
    };

    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final char[] dfa_38 = DFA.unpackEncodedStringToUnsignedChars(dfa_38s);
    static final char[] dfa_39 = DFA.unpackEncodedStringToUnsignedChars(dfa_39s);
    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[][] dfa_42 = unpackEncodedStringArray(dfa_42s);

    class DFA45 extends DFA {

        public DFA45(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 45;
            this.eot = dfa_37;
            this.eof = dfa_37;
            this.min = dfa_38;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_42;
        }
        public String getDescription() {
            return "()* loopback of 1353:1: ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )*";
        }
    }
    static final String dfa_43s = "\1\1\100\uffff";
    static final String dfa_44s = "\1\12\1\uffff\1\12\1\5\1\uffff\1\4\2\5\1\6\5\12\1\5\3\4\2\5\1\6\1\41\1\6\3\12\1\6\4\12\2\5\1\6\1\4\2\5\1\6\2\41\3\12\1\6\4\12\1\4\2\5\1\6\3\12\1\6\4\12\2\5\1\6\2\12";
    static final String dfa_45s = "\1\114\1\uffff\1\114\1\5\1\uffff\1\115\1\5\1\10\1\6\1\114\1\115\3\114\1\5\1\115\1\114\1\107\2\5\1\6\1\115\1\10\1\114\1\115\1\114\1\10\2\114\1\115\1\114\2\5\1\6\1\107\2\5\1\6\1\115\1\41\1\114\1\115\1\114\1\10\2\114\1\115\1\114\1\107\2\5\1\6\1\114\1\115\1\114\1\10\2\114\1\115\1\114\2\5\1\6\1\115\1\114";
    static final String dfa_46s = "\1\uffff\1\2\2\uffff\1\1\74\uffff";
    static final String[] dfa_47s = {
            "\1\2\10\uffff\1\1\5\4\16\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "",
            "\1\2\11\uffff\5\4\16\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\5",
            "",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\2\11\uffff\5\4\7\uffff\1\16\6\uffff\1\1\1\uffff\1\1\24\uffff\1\6\10\uffff\1\7\4\uffff\1\3\1\10",
            "\1\17",
            "\1\17\1\14\1\uffff\1\15",
            "\1\20",
            "\1\2\11\uffff\5\4\2\uffff\1\21\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\2\11\uffff\5\4\2\uffff\1\21\13\uffff\1\1\1\uffff\1\1\24\uffff\1\22\10\uffff\1\23\4\uffff\1\3\1\24",
            "\1\2\11\uffff\5\4\2\uffff\1\21\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\2\11\uffff\5\4\2\uffff\1\21\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\2\11\uffff\5\4\2\uffff\1\21\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\25",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\2\11\uffff\5\4\7\uffff\1\16\6\uffff\1\1\1\uffff\1\1\24\uffff\1\6\10\uffff\1\7\4\uffff\1\3\1\10",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\2\11\uffff\5\4\7\uffff\1\16\6\uffff\1\1\1\uffff\1\1\35\uffff\1\26\4\uffff\1\3",
            "\1\27\1\30\1\33\1\uffff\1\34\1\31\75\uffff\1\32",
            "\1\35",
            "\1\35",
            "\1\36",
            "\1\42\34\uffff\1\37\10\uffff\1\40\5\uffff\1\41",
            "\1\14\1\uffff\1\15",
            "\1\2\11\uffff\5\4\2\uffff\1\21\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\2\11\uffff\5\4\2\uffff\1\21\13\uffff\1\1\1\uffff\1\1\24\uffff\1\43\10\uffff\1\44\4\uffff\1\3\1\45",
            "\1\2\11\uffff\5\4\2\uffff\1\21\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\33\1\uffff\1\34",
            "\1\2\11\uffff\5\4\2\uffff\1\21\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\2\11\uffff\5\4\2\uffff\1\21\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\2\11\uffff\5\4\2\uffff\1\21\13\uffff\1\1\1\uffff\1\1\24\uffff\1\22\10\uffff\1\23\4\uffff\1\3\1\24",
            "\1\2\11\uffff\5\4\2\uffff\1\21\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\46",
            "\1\46",
            "\1\47",
            "\1\50\1\51\1\54\1\uffff\1\55\1\52\75\uffff\1\53",
            "\1\56",
            "\1\56",
            "\1\57",
            "\1\42\34\uffff\1\37\10\uffff\1\40\5\uffff\1\41",
            "\1\42",
            "\1\2\11\uffff\5\4\2\uffff\1\60\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\2\11\uffff\5\4\2\uffff\1\60\13\uffff\1\1\1\uffff\1\1\24\uffff\1\61\10\uffff\1\62\4\uffff\1\3\1\63",
            "\1\2\11\uffff\5\4\2\uffff\1\60\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\54\1\uffff\1\55",
            "\1\2\11\uffff\5\4\2\uffff\1\60\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\2\11\uffff\5\4\2\uffff\1\60\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\2\11\uffff\5\4\2\uffff\1\21\13\uffff\1\1\1\uffff\1\1\24\uffff\1\43\10\uffff\1\44\4\uffff\1\3\1\45",
            "\1\2\11\uffff\5\4\2\uffff\1\21\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\64\1\65\1\70\1\uffff\1\71\1\66\75\uffff\1\67",
            "\1\72",
            "\1\72",
            "\1\73",
            "\1\2\11\uffff\5\4\2\uffff\1\60\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\2\11\uffff\5\4\2\uffff\1\60\13\uffff\1\1\1\uffff\1\1\24\uffff\1\74\10\uffff\1\75\4\uffff\1\3\1\76",
            "\1\2\11\uffff\5\4\2\uffff\1\60\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\70\1\uffff\1\71",
            "\1\2\11\uffff\5\4\2\uffff\1\60\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\2\11\uffff\5\4\2\uffff\1\60\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\2\11\uffff\5\4\2\uffff\1\60\13\uffff\1\1\1\uffff\1\1\24\uffff\1\61\10\uffff\1\62\4\uffff\1\3\1\63",
            "\1\2\11\uffff\5\4\2\uffff\1\60\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\77",
            "\1\77",
            "\1\100",
            "\1\2\11\uffff\5\4\2\uffff\1\60\13\uffff\1\1\1\uffff\1\1\24\uffff\1\74\10\uffff\1\75\4\uffff\1\3\1\76",
            "\1\2\11\uffff\5\4\2\uffff\1\60\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3"
    };
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final char[] dfa_44 = DFA.unpackEncodedStringToUnsignedChars(dfa_44s);
    static final char[] dfa_45 = DFA.unpackEncodedStringToUnsignedChars(dfa_45s);
    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final short[][] dfa_47 = unpackEncodedStringArray(dfa_47s);

    class DFA46 extends DFA {

        public DFA46(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 46;
            this.eot = dfa_37;
            this.eof = dfa_43;
            this.min = dfa_44;
            this.max = dfa_45;
            this.accept = dfa_46;
            this.special = dfa_41;
            this.transition = dfa_47;
        }
        public String getDescription() {
            return "()+ loopback of 1371:3: ( (lv_states_7_0= ruleState ) )+";
        }
    }
    static final String dfa_48s = "\2\12\1\5\2\uffff\1\4\2\5\1\6\5\12\1\5\3\4\2\5\1\6\1\41\1\6\3\12\1\6\4\12\2\5\1\6\1\4\2\5\1\6\2\41\3\12\1\6\4\12\1\4\2\5\1\6\3\12\1\6\4\12\2\5\1\6\2\12";
    static final String dfa_49s = "\2\165\1\5\2\uffff\1\165\1\5\1\10\1\6\5\165\1\5\2\165\1\107\2\5\1\6\1\115\1\10\3\165\1\10\4\165\2\5\1\6\1\107\2\5\1\6\1\115\1\41\3\165\1\10\4\165\1\107\2\5\1\6\3\165\1\10\4\165\2\5\1\6\2\165";
    static final String[] dfa_50s = {
            "\1\1\11\uffff\5\3\16\uffff\1\3\1\uffff\1\3\11\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\16\uffff\1\3\1\uffff\1\3\11\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\5",
            "",
            "",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\1\11\uffff\5\3\7\uffff\1\16\6\uffff\1\3\1\uffff\1\3\11\uffff\10\4\3\uffff\1\6\10\uffff\1\7\4\uffff\1\2\1\10\41\uffff\7\4",
            "\1\17",
            "\1\17\1\14\1\uffff\1\15",
            "\1\20",
            "\1\1\11\uffff\5\3\2\uffff\1\21\13\uffff\1\3\1\uffff\1\3\11\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\21\13\uffff\1\3\1\uffff\1\3\11\uffff\10\4\3\uffff\1\22\10\uffff\1\23\4\uffff\1\2\1\24\41\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\21\13\uffff\1\3\1\uffff\1\3\11\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\21\13\uffff\1\3\1\uffff\1\3\11\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\21\13\uffff\1\3\1\uffff\1\3\11\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\25",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\1\11\uffff\5\3\7\uffff\1\16\6\uffff\1\3\1\uffff\1\3\11\uffff\10\4\3\uffff\1\6\10\uffff\1\7\4\uffff\1\2\1\10\41\uffff\7\4",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\1\11\uffff\5\3\7\uffff\1\16\6\uffff\1\3\1\uffff\1\3\11\uffff\10\4\14\uffff\1\26\4\uffff\1\2\42\uffff\7\4",
            "\1\27\1\30\1\33\1\uffff\1\34\1\31\75\uffff\1\32",
            "\1\35",
            "\1\35",
            "\1\36",
            "\1\42\34\uffff\1\37\10\uffff\1\40\5\uffff\1\41",
            "\1\14\1\uffff\1\15",
            "\1\1\11\uffff\5\3\2\uffff\1\21\13\uffff\1\3\1\uffff\1\3\11\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\21\13\uffff\1\3\1\uffff\1\3\11\uffff\10\4\3\uffff\1\43\10\uffff\1\44\4\uffff\1\2\1\45\41\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\21\13\uffff\1\3\1\uffff\1\3\11\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\33\1\uffff\1\34",
            "\1\1\11\uffff\5\3\2\uffff\1\21\13\uffff\1\3\1\uffff\1\3\11\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\21\13\uffff\1\3\1\uffff\1\3\11\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\21\13\uffff\1\3\1\uffff\1\3\11\uffff\10\4\3\uffff\1\22\10\uffff\1\23\4\uffff\1\2\1\24\41\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\21\13\uffff\1\3\1\uffff\1\3\11\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\46",
            "\1\46",
            "\1\47",
            "\1\50\1\51\1\54\1\uffff\1\55\1\52\75\uffff\1\53",
            "\1\56",
            "\1\56",
            "\1\57",
            "\1\42\34\uffff\1\37\10\uffff\1\40\5\uffff\1\41",
            "\1\42",
            "\1\1\11\uffff\5\3\2\uffff\1\60\13\uffff\1\3\1\uffff\1\3\11\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\60\13\uffff\1\3\1\uffff\1\3\11\uffff\10\4\3\uffff\1\61\10\uffff\1\62\4\uffff\1\2\1\63\41\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\60\13\uffff\1\3\1\uffff\1\3\11\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\54\1\uffff\1\55",
            "\1\1\11\uffff\5\3\2\uffff\1\60\13\uffff\1\3\1\uffff\1\3\11\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\60\13\uffff\1\3\1\uffff\1\3\11\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\21\13\uffff\1\3\1\uffff\1\3\11\uffff\10\4\3\uffff\1\43\10\uffff\1\44\4\uffff\1\2\1\45\41\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\21\13\uffff\1\3\1\uffff\1\3\11\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\64\1\65\1\70\1\uffff\1\71\1\66\75\uffff\1\67",
            "\1\72",
            "\1\72",
            "\1\73",
            "\1\1\11\uffff\5\3\2\uffff\1\60\13\uffff\1\3\1\uffff\1\3\11\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\60\13\uffff\1\3\1\uffff\1\3\11\uffff\10\4\3\uffff\1\74\10\uffff\1\75\4\uffff\1\2\1\76\41\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\60\13\uffff\1\3\1\uffff\1\3\11\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\70\1\uffff\1\71",
            "\1\1\11\uffff\5\3\2\uffff\1\60\13\uffff\1\3\1\uffff\1\3\11\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\60\13\uffff\1\3\1\uffff\1\3\11\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\60\13\uffff\1\3\1\uffff\1\3\11\uffff\10\4\3\uffff\1\61\10\uffff\1\62\4\uffff\1\2\1\63\41\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\60\13\uffff\1\3\1\uffff\1\3\11\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\77",
            "\1\77",
            "\1\100",
            "\1\1\11\uffff\5\3\2\uffff\1\60\13\uffff\1\3\1\uffff\1\3\11\uffff\10\4\3\uffff\1\74\10\uffff\1\75\4\uffff\1\2\1\76\41\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\60\13\uffff\1\3\1\uffff\1\3\11\uffff\10\4\21\uffff\1\2\42\uffff\7\4"
    };
    static final char[] dfa_48 = DFA.unpackEncodedStringToUnsignedChars(dfa_48s);
    static final char[] dfa_49 = DFA.unpackEncodedStringToUnsignedChars(dfa_49s);
    static final short[][] dfa_50 = unpackEncodedStringArray(dfa_50s);

    class DFA50 extends DFA {

        public DFA50(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 50;
            this.eot = dfa_37;
            this.eof = dfa_37;
            this.min = dfa_48;
            this.max = dfa_49;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_50;
        }
        public String getDescription() {
            return "()* loopback of 1481:1: ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )*";
        }
    }
    static final String dfa_51s = "\2\114\1\5\2\uffff\1\115\1\5\1\10\1\6\1\5\1\114\1\115\3\114\1\115\1\114\1\115\1\107\2\5\1\6\1\10\2\5\1\6\1\107\1\114\1\115\1\114\1\10\2\114\1\115\1\114\1\115\1\41\1\114\1\115\1\114\1\10\2\114\2\5\1\6\1\107\2\5\1\6\1\115\2\114\1\115\1\114\1\10\2\114\1\115\1\114\2\5\1\6\1\115\1\114";
    static final String dfa_52s = "\3\uffff\1\1\1\2\74\uffff";
    static final String[] dfa_53s = {
            "\1\1\11\uffff\5\4\16\uffff\1\3\1\uffff\1\3\42\uffff\1\2",
            "\1\1\11\uffff\5\4\16\uffff\1\3\1\uffff\1\3\42\uffff\1\2",
            "\1\5",
            "",
            "",
            "\1\12\1\13\1\15\1\uffff\1\16\1\14\1\1\11\uffff\5\4\7\uffff\1\11\6\uffff\1\3\1\uffff\1\3\24\uffff\1\6\10\uffff\1\7\4\uffff\1\2\1\10",
            "\1\17",
            "\1\17\1\15\1\uffff\1\16",
            "\1\20",
            "\1\21",
            "\1\1\11\uffff\5\4\2\uffff\1\22\13\uffff\1\3\1\uffff\1\3\42\uffff\1\2",
            "\1\1\11\uffff\5\4\2\uffff\1\22\13\uffff\1\3\1\uffff\1\3\24\uffff\1\23\10\uffff\1\24\4\uffff\1\2\1\25",
            "\1\1\11\uffff\5\4\2\uffff\1\22\13\uffff\1\3\1\uffff\1\3\42\uffff\1\2",
            "\1\1\11\uffff\5\4\2\uffff\1\22\13\uffff\1\3\1\uffff\1\3\42\uffff\1\2",
            "\1\1\11\uffff\5\4\2\uffff\1\22\13\uffff\1\3\1\uffff\1\3\42\uffff\1\2",
            "\1\12\1\13\1\15\1\uffff\1\16\1\14\1\1\11\uffff\5\4\7\uffff\1\11\6\uffff\1\3\1\uffff\1\3\24\uffff\1\6\10\uffff\1\7\4\uffff\1\2\1\10",
            "\1\12\1\13\1\15\1\uffff\1\16\1\14\1\1\11\uffff\5\4\7\uffff\1\11\6\uffff\1\3\1\uffff\1\3\35\uffff\1\26\4\uffff\1\2",
            "\1\32\34\uffff\1\27\10\uffff\1\30\5\uffff\1\31",
            "\1\33\1\34\1\37\1\uffff\1\40\1\35\75\uffff\1\36",
            "\1\41",
            "\1\41",
            "\1\42",
            "\1\15\1\uffff\1\16",
            "\1\43",
            "\1\43",
            "\1\44",
            "\1\45\1\46\1\51\1\uffff\1\52\1\47\75\uffff\1\50",
            "\1\1\11\uffff\5\4\2\uffff\1\22\13\uffff\1\3\1\uffff\1\3\42\uffff\1\2",
            "\1\1\11\uffff\5\4\2\uffff\1\22\13\uffff\1\3\1\uffff\1\3\24\uffff\1\53\10\uffff\1\54\4\uffff\1\2\1\55",
            "\1\1\11\uffff\5\4\2\uffff\1\22\13\uffff\1\3\1\uffff\1\3\42\uffff\1\2",
            "\1\37\1\uffff\1\40",
            "\1\1\11\uffff\5\4\2\uffff\1\22\13\uffff\1\3\1\uffff\1\3\42\uffff\1\2",
            "\1\1\11\uffff\5\4\2\uffff\1\22\13\uffff\1\3\1\uffff\1\3\42\uffff\1\2",
            "\1\1\11\uffff\5\4\2\uffff\1\22\13\uffff\1\3\1\uffff\1\3\24\uffff\1\23\10\uffff\1\24\4\uffff\1\2\1\25",
            "\1\1\11\uffff\5\4\2\uffff\1\22\13\uffff\1\3\1\uffff\1\3\42\uffff\1\2",
            "\1\32\34\uffff\1\27\10\uffff\1\30\5\uffff\1\31",
            "\1\32",
            "\1\1\11\uffff\5\4\2\uffff\1\56\13\uffff\1\3\1\uffff\1\3\42\uffff\1\2",
            "\1\1\11\uffff\5\4\2\uffff\1\56\13\uffff\1\3\1\uffff\1\3\24\uffff\1\57\10\uffff\1\60\4\uffff\1\2\1\61",
            "\1\1\11\uffff\5\4\2\uffff\1\56\13\uffff\1\3\1\uffff\1\3\42\uffff\1\2",
            "\1\51\1\uffff\1\52",
            "\1\1\11\uffff\5\4\2\uffff\1\56\13\uffff\1\3\1\uffff\1\3\42\uffff\1\2",
            "\1\1\11\uffff\5\4\2\uffff\1\56\13\uffff\1\3\1\uffff\1\3\42\uffff\1\2",
            "\1\62",
            "\1\62",
            "\1\63",
            "\1\64\1\65\1\70\1\uffff\1\71\1\66\75\uffff\1\67",
            "\1\72",
            "\1\72",
            "\1\73",
            "\1\1\11\uffff\5\4\2\uffff\1\22\13\uffff\1\3\1\uffff\1\3\24\uffff\1\53\10\uffff\1\54\4\uffff\1\2\1\55",
            "\1\1\11\uffff\5\4\2\uffff\1\22\13\uffff\1\3\1\uffff\1\3\42\uffff\1\2",
            "\1\1\11\uffff\5\4\2\uffff\1\56\13\uffff\1\3\1\uffff\1\3\42\uffff\1\2",
            "\1\1\11\uffff\5\4\2\uffff\1\56\13\uffff\1\3\1\uffff\1\3\24\uffff\1\74\10\uffff\1\75\4\uffff\1\2\1\76",
            "\1\1\11\uffff\5\4\2\uffff\1\56\13\uffff\1\3\1\uffff\1\3\42\uffff\1\2",
            "\1\70\1\uffff\1\71",
            "\1\1\11\uffff\5\4\2\uffff\1\56\13\uffff\1\3\1\uffff\1\3\42\uffff\1\2",
            "\1\1\11\uffff\5\4\2\uffff\1\56\13\uffff\1\3\1\uffff\1\3\42\uffff\1\2",
            "\1\1\11\uffff\5\4\2\uffff\1\56\13\uffff\1\3\1\uffff\1\3\24\uffff\1\57\10\uffff\1\60\4\uffff\1\2\1\61",
            "\1\1\11\uffff\5\4\2\uffff\1\56\13\uffff\1\3\1\uffff\1\3\42\uffff\1\2",
            "\1\77",
            "\1\77",
            "\1\100",
            "\1\1\11\uffff\5\4\2\uffff\1\56\13\uffff\1\3\1\uffff\1\3\24\uffff\1\74\10\uffff\1\75\4\uffff\1\2\1\76",
            "\1\1\11\uffff\5\4\2\uffff\1\56\13\uffff\1\3\1\uffff\1\3\42\uffff\1\2"
    };
    static final char[] dfa_51 = DFA.unpackEncodedStringToUnsignedChars(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final short[][] dfa_53 = unpackEncodedStringArray(dfa_53s);

    class DFA52 extends DFA {

        public DFA52(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 52;
            this.eot = dfa_37;
            this.eof = dfa_37;
            this.min = dfa_38;
            this.max = dfa_51;
            this.accept = dfa_52;
            this.special = dfa_41;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "1499:3: ( ( (lv_states_7_0= ruleImplicitState ) ) | ( (lv_states_8_0= ruleState ) )+ )";
        }
    }
    static final String dfa_54s = "\3\5\2\uffff\1\4\2\5\1\6\6\5\3\4\2\5\1\6\1\41\1\6\3\5\1\6\7\5\1\6\1\4\2\5\1\6\2\5\2\41\3\5\1\6\5\5\1\4\2\5\1\6\4\5\1\6\7\5\1\6\6\5\1\0";
    static final String dfa_55s = "\2\165\1\5\2\uffff\1\165\1\5\1\10\1\6\5\165\1\5\2\165\1\107\2\5\1\6\1\115\1\10\3\165\1\10\5\165\2\5\1\6\1\107\2\5\1\6\2\5\1\115\1\41\3\165\1\10\5\165\1\107\2\5\1\6\1\5\3\165\1\10\5\165\2\5\1\6\1\5\3\165\1\5\1\165\1\0";
    static final String dfa_56s = "\3\uffff\1\2\1\1\107\uffff";
    static final String[] dfa_57s = {
            "\1\3\4\uffff\1\1\50\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\3\4\uffff\1\1\50\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\5",
            "",
            "",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\1\25\uffff\1\16\22\uffff\10\4\3\uffff\1\6\10\uffff\1\7\4\uffff\1\2\1\10\41\uffff\7\4",
            "\1\17",
            "\1\17\1\14\1\uffff\1\15",
            "\1\20",
            "\1\3\4\uffff\1\1\20\uffff\1\21\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\21\4\uffff\1\3\22\uffff\10\4\1\uffff\1\3\1\uffff\1\22\10\uffff\1\23\3\uffff\1\3\1\2\1\24\17\uffff\12\3\10\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\21\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\21\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\21\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\25",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\1\25\uffff\1\16\22\uffff\10\4\3\uffff\1\6\10\uffff\1\7\4\uffff\1\2\1\10\41\uffff\7\4",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\1\25\uffff\1\16\22\uffff\10\4\14\uffff\1\26\4\uffff\1\2\42\uffff\7\4",
            "\1\27\1\30\1\33\1\uffff\1\34\1\31\75\uffff\1\32",
            "\1\35",
            "\1\36",
            "\1\37",
            "\1\43\34\uffff\1\40\10\uffff\1\41\5\uffff\1\42",
            "\1\14\1\uffff\1\15",
            "\1\3\4\uffff\1\1\20\uffff\1\21\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\21\27\uffff\10\4\3\uffff\1\44\10\uffff\1\45\4\uffff\1\2\1\46\41\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\21\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\33\1\uffff\1\34",
            "\1\3\4\uffff\1\1\20\uffff\1\21\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\21\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\21\4\uffff\1\3\22\uffff\10\4\1\uffff\1\3\1\uffff\1\47\10\uffff\1\23\3\uffff\1\3\1\2\1\24\17\uffff\12\3\10\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\21\27\uffff\10\4\3\uffff\1\50\10\uffff\1\23\4\uffff\1\2\1\24\41\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\21\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\51",
            "\1\51",
            "\1\52",
            "\1\53\1\54\1\57\1\uffff\1\60\1\55\75\uffff\1\56",
            "\1\61",
            "\1\61",
            "\1\62",
            "\1\63",
            "\1\36",
            "\1\43\34\uffff\1\40\10\uffff\1\41\5\uffff\1\42",
            "\1\43",
            "\1\3\4\uffff\1\1\20\uffff\1\64\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\64\27\uffff\10\4\3\uffff\1\65\10\uffff\1\66\4\uffff\1\2\1\67\41\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\64\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\57\1\uffff\1\60",
            "\1\3\4\uffff\1\1\20\uffff\1\64\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\64\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\21\27\uffff\10\4\3\uffff\1\44\10\uffff\1\45\4\uffff\1\2\1\46\41\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\21\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\21\4\uffff\1\3\22\uffff\10\4\1\uffff\1\3\1\uffff\1\70\10\uffff\1\23\3\uffff\1\3\1\2\1\24\17\uffff\12\3\10\uffff\7\4",
            "\1\71\1\72\1\75\1\uffff\1\76\1\73\75\uffff\1\74",
            "\1\77",
            "\1\77",
            "\1\100",
            "\1\101",
            "\1\3\4\uffff\1\1\20\uffff\1\64\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\64\27\uffff\10\4\3\uffff\1\102\10\uffff\1\103\4\uffff\1\2\1\104\41\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\64\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\75\1\uffff\1\76",
            "\1\3\4\uffff\1\1\20\uffff\1\64\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\64\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\64\27\uffff\10\4\3\uffff\1\65\10\uffff\1\66\4\uffff\1\2\1\67\41\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\64\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\21\4\uffff\1\3\22\uffff\10\4\1\uffff\1\3\1\uffff\1\105\10\uffff\1\23\3\uffff\1\3\1\2\1\24\17\uffff\12\3\10\uffff\7\4",
            "\1\106",
            "\1\106",
            "\1\107",
            "\1\110",
            "\1\3\4\uffff\1\1\20\uffff\1\64\27\uffff\10\4\3\uffff\1\102\10\uffff\1\103\4\uffff\1\2\1\104\41\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\64\27\uffff\10\4\21\uffff\1\2\42\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\21\4\uffff\1\3\22\uffff\10\4\1\uffff\1\3\1\uffff\1\111\10\uffff\1\23\3\uffff\1\3\1\2\1\24\17\uffff\12\3\10\uffff\7\4",
            "\1\112",
            "\1\3\4\uffff\1\1\20\uffff\1\21\4\uffff\1\3\22\uffff\10\4\1\uffff\1\3\1\uffff\1\113\10\uffff\1\23\3\uffff\1\3\1\2\1\24\17\uffff\12\3\10\uffff\7\4",
            "\1\uffff"
    };
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final char[] dfa_55 = DFA.unpackEncodedStringToUnsignedChars(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[][] dfa_57 = unpackEncodedStringArray(dfa_57s);

    class DFA56 extends DFA {

        public DFA56(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 56;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_54;
            this.max = dfa_55;
            this.accept = dfa_56;
            this.special = dfa_5;
            this.transition = dfa_57;
        }
        public String getDescription() {
            return "()* loopback of 1632:1: ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA56_75 = input.LA(1);

                         
                        int index56_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalSCTX()) ) {s = 4;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index56_75);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 56, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_58s = "\1\1\113\uffff";
    static final String dfa_59s = "\1\114\1\uffff\1\114\1\5\1\uffff\1\115\1\5\1\10\1\6\1\114\1\146\3\114\1\5\1\115\1\114\1\107\2\5\1\6\1\115\1\10\1\114\1\115\1\114\1\10\2\114\1\146\1\115\1\114\2\5\1\6\1\107\2\5\1\6\2\5\1\115\1\41\1\114\1\115\1\114\1\10\2\114\1\115\1\114\1\146\1\107\2\5\1\6\1\5\1\114\1\115\1\114\1\10\2\114\1\115\1\114\1\146\2\5\1\6\1\5\1\115\1\114\1\146\1\5\1\146\1\0";
    static final String[] dfa_60s = {
            "\1\4\4\uffff\1\2\10\uffff\1\1\23\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "",
            "\1\4\4\uffff\1\2\34\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\5",
            "",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\2\25\uffff\1\16\6\uffff\1\1\1\uffff\1\1\24\uffff\1\6\10\uffff\1\7\4\uffff\1\3\1\10",
            "\1\17",
            "\1\17\1\14\1\uffff\1\15",
            "\1\20",
            "\1\4\4\uffff\1\2\20\uffff\1\21\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\4\4\uffff\1\2\20\uffff\1\21\4\uffff\1\4\6\uffff\1\1\1\uffff\1\1\22\uffff\1\4\1\uffff\1\22\10\uffff\1\23\3\uffff\1\4\1\3\1\24\17\uffff\12\4",
            "\1\4\4\uffff\1\2\20\uffff\1\21\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\4\4\uffff\1\2\20\uffff\1\21\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\4\4\uffff\1\2\20\uffff\1\21\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\25",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\2\25\uffff\1\16\6\uffff\1\1\1\uffff\1\1\24\uffff\1\6\10\uffff\1\7\4\uffff\1\3\1\10",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\2\25\uffff\1\16\6\uffff\1\1\1\uffff\1\1\35\uffff\1\26\4\uffff\1\3",
            "\1\27\1\30\1\33\1\uffff\1\34\1\31\75\uffff\1\32",
            "\1\35",
            "\1\36",
            "\1\37",
            "\1\43\34\uffff\1\40\10\uffff\1\41\5\uffff\1\42",
            "\1\14\1\uffff\1\15",
            "\1\4\4\uffff\1\2\20\uffff\1\21\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\4\4\uffff\1\2\20\uffff\1\21\13\uffff\1\1\1\uffff\1\1\24\uffff\1\44\10\uffff\1\45\4\uffff\1\3\1\46",
            "\1\4\4\uffff\1\2\20\uffff\1\21\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\33\1\uffff\1\34",
            "\1\4\4\uffff\1\2\20\uffff\1\21\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\4\4\uffff\1\2\20\uffff\1\21\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\4\4\uffff\1\2\20\uffff\1\21\4\uffff\1\4\6\uffff\1\1\1\uffff\1\1\22\uffff\1\4\1\uffff\1\47\10\uffff\1\23\3\uffff\1\4\1\3\1\24\17\uffff\12\4",
            "\1\4\4\uffff\1\2\20\uffff\1\21\13\uffff\1\1\1\uffff\1\1\24\uffff\1\50\10\uffff\1\23\4\uffff\1\3\1\24",
            "\1\4\4\uffff\1\2\20\uffff\1\21\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\51",
            "\1\51",
            "\1\52",
            "\1\53\1\54\1\57\1\uffff\1\60\1\55\75\uffff\1\56",
            "\1\61",
            "\1\61",
            "\1\62",
            "\1\63",
            "\1\36",
            "\1\43\34\uffff\1\40\10\uffff\1\41\5\uffff\1\42",
            "\1\43",
            "\1\4\4\uffff\1\2\20\uffff\1\64\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\4\4\uffff\1\2\20\uffff\1\64\13\uffff\1\1\1\uffff\1\1\24\uffff\1\65\10\uffff\1\66\4\uffff\1\3\1\67",
            "\1\4\4\uffff\1\2\20\uffff\1\64\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\57\1\uffff\1\60",
            "\1\4\4\uffff\1\2\20\uffff\1\64\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\4\4\uffff\1\2\20\uffff\1\64\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\4\4\uffff\1\2\20\uffff\1\21\13\uffff\1\1\1\uffff\1\1\24\uffff\1\44\10\uffff\1\45\4\uffff\1\3\1\46",
            "\1\4\4\uffff\1\2\20\uffff\1\21\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\4\4\uffff\1\2\20\uffff\1\21\4\uffff\1\4\6\uffff\1\1\1\uffff\1\1\22\uffff\1\4\1\uffff\1\70\10\uffff\1\23\3\uffff\1\4\1\3\1\24\17\uffff\12\4",
            "\1\71\1\72\1\75\1\uffff\1\76\1\73\75\uffff\1\74",
            "\1\77",
            "\1\77",
            "\1\100",
            "\1\101",
            "\1\4\4\uffff\1\2\20\uffff\1\64\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\4\4\uffff\1\2\20\uffff\1\64\13\uffff\1\1\1\uffff\1\1\24\uffff\1\102\10\uffff\1\103\4\uffff\1\3\1\104",
            "\1\4\4\uffff\1\2\20\uffff\1\64\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\75\1\uffff\1\76",
            "\1\4\4\uffff\1\2\20\uffff\1\64\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\4\4\uffff\1\2\20\uffff\1\64\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\4\4\uffff\1\2\20\uffff\1\64\13\uffff\1\1\1\uffff\1\1\24\uffff\1\65\10\uffff\1\66\4\uffff\1\3\1\67",
            "\1\4\4\uffff\1\2\20\uffff\1\64\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\4\4\uffff\1\2\20\uffff\1\21\4\uffff\1\4\6\uffff\1\1\1\uffff\1\1\22\uffff\1\4\1\uffff\1\105\10\uffff\1\23\3\uffff\1\4\1\3\1\24\17\uffff\12\4",
            "\1\106",
            "\1\106",
            "\1\107",
            "\1\110",
            "\1\4\4\uffff\1\2\20\uffff\1\64\13\uffff\1\1\1\uffff\1\1\24\uffff\1\102\10\uffff\1\103\4\uffff\1\3\1\104",
            "\1\4\4\uffff\1\2\20\uffff\1\64\13\uffff\1\1\1\uffff\1\1\42\uffff\1\3",
            "\1\4\4\uffff\1\2\20\uffff\1\21\4\uffff\1\4\6\uffff\1\1\1\uffff\1\1\22\uffff\1\4\1\uffff\1\111\10\uffff\1\23\3\uffff\1\4\1\3\1\24\17\uffff\12\4",
            "\1\112",
            "\1\4\4\uffff\1\2\20\uffff\1\21\4\uffff\1\4\6\uffff\1\1\1\uffff\1\1\22\uffff\1\4\1\uffff\1\113\10\uffff\1\23\3\uffff\1\4\1\3\1\24\17\uffff\12\4",
            "\1\uffff"
    };
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final char[] dfa_59 = DFA.unpackEncodedStringToUnsignedChars(dfa_59s);
    static final short[][] dfa_60 = unpackEncodedStringArray(dfa_60s);

    class DFA57 extends DFA {

        public DFA57(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 57;
            this.eot = dfa_1;
            this.eof = dfa_58;
            this.min = dfa_2;
            this.max = dfa_59;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_60;
        }
        public String getDescription() {
            return "()+ loopback of 1650:3: ( (lv_equations_7_0= ruleEquation ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA57_75 = input.LA(1);

                         
                        int index57_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalSCTX()) ) {s = 4;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index57_75);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 57, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_61s = "\13\uffff";
    static final String dfa_62s = "\1\52\1\uffff\4\53\5\uffff";
    static final String dfa_63s = "\1\127\1\uffff\4\56\5\uffff";
    static final String dfa_64s = "\1\uffff\1\1\4\uffff\1\2\1\3\1\4\1\5\1\6";
    static final String dfa_65s = "\13\uffff}>";
    static final String[] dfa_66s = {
            "\1\1\1\6\1\7\2\10\1\11\1\12\43\uffff\1\2\1\3\1\4\1\5",
            "",
            "\1\6\1\uffff\2\10",
            "\1\6\1\uffff\2\10",
            "\1\6\1\uffff\2\10",
            "\1\6\1\uffff\2\10",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final char[] dfa_63 = DFA.unpackEncodedStringToUnsignedChars(dfa_63s);
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final short[][] dfa_66 = unpackEncodedStringArray(dfa_66s);

    class DFA58 extends DFA {

        public DFA58(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 58;
            this.eot = dfa_61;
            this.eof = dfa_61;
            this.min = dfa_62;
            this.max = dfa_63;
            this.accept = dfa_64;
            this.special = dfa_65;
            this.transition = dfa_66;
        }
        public String getDescription() {
            return "1689:1: (this_EntryAction_0= ruleEntryAction | this_DuringAction_1= ruleDuringAction | this_ExitAction_2= ruleExitAction | this_SuspendAction_3= ruleSuspendAction | this_PrecedingAction_4= rulePrecedingAction | this_SucceedingAction_5= ruleSucceedingAction )";
        }
    }
    static final String dfa_67s = "\134\uffff";
    static final String dfa_68s = "\1\3\11\uffff\1\3\121\uffff";
    static final String dfa_69s = "\3\5\1\uffff\1\4\1\uffff\1\4\2\5\1\6\6\5\2\4\2\5\1\6\1\4\1\5\1\41\1\4\2\5\1\6\5\5\1\6\5\5\1\6\1\4\1\5\1\4\2\5\1\6\1\5\2\41\3\5\1\6\4\5\1\6\5\5\1\4\2\5\1\6\3\4\1\41\3\5\1\6\7\5\1\6\1\4\2\5\1\6\2\41\3\5";
    static final String dfa_70s = "\2\165\1\5\1\uffff\1\5\1\uffff\1\165\1\5\1\10\1\6\1\165\1\5\6\165\2\5\1\6\1\107\1\5\1\115\1\107\1\165\1\5\1\10\5\165\1\10\2\165\1\134\2\5\1\6\1\107\2\165\2\5\1\6\1\134\1\115\1\41\3\165\1\10\2\165\1\5\1\10\1\6\1\165\1\5\3\165\1\107\2\5\1\6\1\107\2\165\1\115\3\165\1\10\5\165\2\5\1\6\1\107\2\5\1\6\1\115\1\41\3\165";
    static final String dfa_71s = "\3\uffff\1\2\1\uffff\1\1\126\uffff";
    static final String dfa_72s = "\134\uffff}>";
    static final String[] dfa_73s = {
            "\1\3\1\uffff\1\3\2\uffff\1\1\46\uffff\2\3\6\5\1\4\1\5\5\uffff\1\3\1\uffff\1\3\11\uffff\1\2\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\1\47\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\2\42\uffff\7\5",
            "\1\6",
            "",
            "\1\5\1\3",
            "",
            "\1\14\1\12\1\16\1\3\1\17\1\15\1\1\25\uffff\1\13\21\uffff\1\3\6\5\1\4\1\5\3\uffff\1\7\3\uffff\1\3\4\uffff\1\10\4\uffff\1\2\1\11\41\uffff\7\5",
            "\1\20",
            "\1\20\1\16\1\uffff\1\17",
            "\1\21",
            "\1\3\1\uffff\1\3\2\uffff\1\1\17\uffff\1\3\1\25\4\uffff\1\3\20\uffff\2\3\6\5\1\4\1\26\1\uffff\1\3\1\uffff\1\22\2\3\1\uffff\1\3\4\uffff\1\23\3\uffff\1\3\1\2\1\24\17\uffff\14\3\6\uffff\7\5",
            "\1\27",
            "\1\3\1\uffff\1\3\2\uffff\1\1\20\uffff\1\30\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\2\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\25\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\25\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\25\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\14\1\12\1\16\1\3\1\17\1\15\1\1\25\uffff\1\13\21\uffff\1\3\6\5\1\4\1\5\3\uffff\1\7\3\uffff\1\3\4\uffff\1\10\4\uffff\1\2\1\11\41\uffff\7\5",
            "\1\14\1\12\1\16\1\3\1\17\1\15\1\1\25\uffff\1\13\21\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\4\uffff\1\33\4\uffff\1\2\42\uffff\7\5",
            "\1\34",
            "\1\34",
            "\1\35",
            "\1\36\1\37\1\42\1\uffff\1\43\1\40\75\uffff\1\41",
            "\1\44",
            "\1\50\34\uffff\1\45\10\uffff\1\46\5\uffff\1\47",
            "\1\51\1\37\1\42\1\uffff\1\43\1\40\75\uffff\1\41",
            "\1\3\1\uffff\1\3\2\uffff\1\31\47\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\52",
            "\1\16\1\uffff\1\17",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\25\26\uffff\1\3\6\5\1\4\1\5\3\uffff\1\22\3\uffff\1\3\4\uffff\1\23\4\uffff\1\32\1\24\41\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\25\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\25\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\25\26\uffff\1\3\6\5\1\4\1\5\3\uffff\1\53\3\uffff\1\3\4\uffff\1\54\4\uffff\1\32\1\55\41\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\25\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\42\1\uffff\1\43",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\25\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\25\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\5\1\3\3\uffff\1\5\60\uffff\1\5\17\uffff\1\56\1\5\16\uffff\2\5",
            "\1\57",
            "\1\57",
            "\1\60",
            "\1\61\1\62\1\65\1\uffff\1\66\1\63\75\uffff\1\64",
            "\1\3\1\uffff\1\3\2\uffff\1\1\20\uffff\1\30\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\2\42\uffff\7\5",
            "\1\74\1\72\1\16\1\3\1\17\1\15\1\31\25\uffff\1\73\21\uffff\1\3\6\5\1\4\1\5\3\uffff\1\67\3\uffff\1\3\4\uffff\1\70\4\uffff\1\32\1\71\41\uffff\7\5",
            "\1\75",
            "\1\75",
            "\1\76",
            "\1\5\1\3\3\uffff\1\5\60\uffff\1\5\17\uffff\1\56\1\5\16\uffff\2\5",
            "\1\50\34\uffff\1\45\10\uffff\1\46\5\uffff\1\47",
            "\1\50",
            "\1\3\1\uffff\1\3\2\uffff\1\1\20\uffff\1\77\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\2\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\103\26\uffff\1\3\6\5\1\4\1\5\3\uffff\1\100\3\uffff\1\3\4\uffff\1\101\4\uffff\1\32\1\102\41\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\103\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\65\1\uffff\1\66",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\103\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\103\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\104",
            "\1\104\1\16\1\uffff\1\17",
            "\1\105",
            "\1\3\1\uffff\1\3\2\uffff\1\31\17\uffff\1\3\1\25\4\uffff\1\3\21\uffff\1\3\6\5\1\4\1\5\1\uffff\1\3\1\uffff\1\22\1\3\2\uffff\1\3\4\uffff\1\23\3\uffff\1\3\1\32\1\24\17\uffff\14\3\6\uffff\7\5",
            "\1\106",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\25\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\25\26\uffff\1\3\6\5\1\4\1\5\3\uffff\1\53\3\uffff\1\3\4\uffff\1\54\4\uffff\1\32\1\55\41\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\25\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\107\1\110\1\113\1\uffff\1\114\1\111\75\uffff\1\112",
            "\1\115",
            "\1\115",
            "\1\116",
            "\1\117\1\110\1\113\1\uffff\1\114\1\111\75\uffff\1\112",
            "\1\74\1\72\1\16\1\3\1\17\1\15\1\31\25\uffff\1\73\21\uffff\1\3\6\5\1\4\1\5\3\uffff\1\67\3\uffff\1\3\4\uffff\1\70\4\uffff\1\32\1\71\41\uffff\7\5",
            "\1\74\1\72\1\16\1\3\1\17\1\15\1\31\25\uffff\1\73\21\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\4\uffff\1\33\4\uffff\1\32\42\uffff\7\5",
            "\1\123\34\uffff\1\120\10\uffff\1\121\5\uffff\1\122",
            "\1\3\1\uffff\1\3\2\uffff\1\1\20\uffff\1\77\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\2\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\103\26\uffff\1\3\6\5\1\4\1\5\3\uffff\1\124\3\uffff\1\3\4\uffff\1\125\4\uffff\1\32\1\126\41\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\103\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\113\1\uffff\1\114",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\103\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\103\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\103\26\uffff\1\3\6\5\1\4\1\5\3\uffff\1\100\3\uffff\1\3\4\uffff\1\101\4\uffff\1\32\1\102\41\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\103\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\103\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\127",
            "\1\127",
            "\1\130",
            "\1\131\1\62\1\65\1\uffff\1\66\1\63\75\uffff\1\64",
            "\1\132",
            "\1\132",
            "\1\133",
            "\1\123\34\uffff\1\120\10\uffff\1\121\5\uffff\1\122",
            "\1\123",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\103\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\103\26\uffff\1\3\6\5\1\4\1\5\3\uffff\1\124\3\uffff\1\3\4\uffff\1\125\4\uffff\1\32\1\126\41\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\103\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5"
    };

    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_68s);
    static final char[] dfa_69 = DFA.unpackEncodedStringToUnsignedChars(dfa_69s);
    static final char[] dfa_70 = DFA.unpackEncodedStringToUnsignedChars(dfa_70s);
    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final short[][] dfa_73 = unpackEncodedStringArray(dfa_73s);

    class DFA84 extends DFA {

        public DFA84(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 84;
            this.eot = dfa_67;
            this.eof = dfa_68;
            this.min = dfa_69;
            this.max = dfa_70;
            this.accept = dfa_71;
            this.special = dfa_72;
            this.transition = dfa_73;
        }
        public String getDescription() {
            return "()* loopback of 2574:2: ( (lv_declarations_1_0= ruleDeclaration ) )*";
        }
    }
    static final String dfa_74s = "\3\5\1\uffff\1\4\1\uffff\1\4\2\5\1\6\6\5\2\4\1\41\1\4\2\5\1\6\1\4\3\5\1\6\2\5\1\6\1\4\3\5\1\6\6\5\1\4\2\41\3\5\1\6\4\5\1\6\3\5\1\6\3\5\1\4\2\5\1\6\1\4\2\5\2\4\1\41\3\5\1\6\7\5\1\6\1\4\2\5\1\6\2\41\3\5";
    static final String dfa_75s = "\2\165\1\5\1\uffff\1\5\1\uffff\1\165\1\5\1\10\1\6\1\5\7\165\1\115\1\107\2\5\1\6\1\107\1\5\1\165\1\5\1\10\2\5\1\6\1\107\3\165\1\10\5\165\1\134\1\165\1\115\1\41\3\165\1\10\2\165\2\5\1\6\1\134\1\5\1\10\1\6\1\5\2\165\1\107\2\5\1\6\1\107\4\165\1\115\3\165\1\10\5\165\2\5\1\6\1\107\2\5\1\6\1\115\1\41\3\165";
    static final String[] dfa_76s = {
            "\1\3\1\uffff\1\3\2\uffff\1\1\10\uffff\1\3\35\uffff\2\3\6\5\1\4\1\5\5\uffff\1\3\1\uffff\1\3\11\uffff\1\2\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\1\47\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\2\42\uffff\7\5",
            "\1\6",
            "",
            "\1\5\1\3",
            "",
            "\1\13\1\14\1\16\1\3\1\17\1\15\1\1\25\uffff\1\12\21\uffff\1\3\6\5\1\4\1\5\3\uffff\1\7\3\uffff\1\3\4\uffff\1\10\4\uffff\1\2\1\11\41\uffff\7\5",
            "\1\20",
            "\1\20\1\16\1\uffff\1\17",
            "\1\21",
            "\1\22",
            "\1\3\1\uffff\1\3\2\uffff\1\1\20\uffff\1\23\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\2\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\1\10\uffff\1\3\6\uffff\1\3\1\27\4\uffff\1\3\20\uffff\2\3\6\5\1\4\1\30\1\uffff\1\3\1\uffff\1\24\2\3\1\uffff\1\3\4\uffff\1\25\3\uffff\1\3\1\2\1\26\17\uffff\14\3\6\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\27\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\27\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\27\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\13\1\14\1\16\1\3\1\17\1\15\1\1\25\uffff\1\12\21\uffff\1\3\6\5\1\4\1\5\3\uffff\1\7\3\uffff\1\3\4\uffff\1\10\4\uffff\1\2\1\11\41\uffff\7\5",
            "\1\13\1\14\1\16\1\3\1\17\1\15\1\1\25\uffff\1\12\21\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\4\uffff\1\33\4\uffff\1\2\42\uffff\7\5",
            "\1\37\34\uffff\1\34\10\uffff\1\35\5\uffff\1\36",
            "\1\40\1\41\1\44\1\uffff\1\45\1\42\75\uffff\1\43",
            "\1\46",
            "\1\46",
            "\1\47",
            "\1\50\1\41\1\44\1\uffff\1\45\1\42\75\uffff\1\43",
            "\1\51",
            "\1\3\1\uffff\1\3\2\uffff\1\31\47\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\52",
            "\1\16\1\uffff\1\17",
            "\1\53",
            "\1\53",
            "\1\54",
            "\1\55\1\56\1\61\1\uffff\1\62\1\57\75\uffff\1\60",
            "\1\3\1\uffff\1\3\2\uffff\1\1\20\uffff\1\23\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\2\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\27\26\uffff\1\3\6\5\1\4\1\5\3\uffff\1\63\3\uffff\1\3\4\uffff\1\64\4\uffff\1\32\1\65\41\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\27\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\44\1\uffff\1\45",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\27\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\27\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\27\26\uffff\1\3\6\5\1\4\1\5\3\uffff\1\24\3\uffff\1\3\4\uffff\1\25\4\uffff\1\32\1\26\41\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\27\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\27\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\5\1\3\3\uffff\1\5\60\uffff\1\5\17\uffff\1\66\1\5\16\uffff\2\5",
            "\1\73\1\74\1\16\1\3\1\17\1\15\1\31\25\uffff\1\72\21\uffff\1\3\6\5\1\4\1\5\3\uffff\1\67\3\uffff\1\3\4\uffff\1\70\4\uffff\1\32\1\71\41\uffff\7\5",
            "\1\37\34\uffff\1\34\10\uffff\1\35\5\uffff\1\36",
            "\1\37",
            "\1\3\1\uffff\1\3\2\uffff\1\1\20\uffff\1\75\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\2\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\101\26\uffff\1\3\6\5\1\4\1\5\3\uffff\1\76\3\uffff\1\3\4\uffff\1\77\4\uffff\1\32\1\100\41\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\101\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\61\1\uffff\1\62",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\101\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\101\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\102",
            "\1\102",
            "\1\103",
            "\1\5\1\3\3\uffff\1\5\60\uffff\1\5\17\uffff\1\66\1\5\16\uffff\2\5",
            "\1\104",
            "\1\104\1\16\1\uffff\1\17",
            "\1\105",
            "\1\106",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\27\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\17\uffff\1\3\1\27\4\uffff\1\3\21\uffff\1\3\6\5\1\4\1\5\1\uffff\1\3\1\uffff\1\24\1\3\2\uffff\1\3\4\uffff\1\25\3\uffff\1\3\1\32\1\26\17\uffff\14\3\6\uffff\7\5",
            "\1\107\1\110\1\113\1\uffff\1\114\1\111\75\uffff\1\112",
            "\1\115",
            "\1\115",
            "\1\116",
            "\1\117\1\110\1\113\1\uffff\1\114\1\111\75\uffff\1\112",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\27\26\uffff\1\3\6\5\1\4\1\5\3\uffff\1\63\3\uffff\1\3\4\uffff\1\64\4\uffff\1\32\1\65\41\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\27\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\73\1\74\1\16\1\3\1\17\1\15\1\31\25\uffff\1\72\21\uffff\1\3\6\5\1\4\1\5\3\uffff\1\67\3\uffff\1\3\4\uffff\1\70\4\uffff\1\32\1\71\41\uffff\7\5",
            "\1\73\1\74\1\16\1\3\1\17\1\15\1\31\25\uffff\1\72\21\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\4\uffff\1\33\4\uffff\1\32\42\uffff\7\5",
            "\1\123\34\uffff\1\120\10\uffff\1\121\5\uffff\1\122",
            "\1\3\1\uffff\1\3\2\uffff\1\1\20\uffff\1\75\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\2\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\101\26\uffff\1\3\6\5\1\4\1\5\3\uffff\1\124\3\uffff\1\3\4\uffff\1\125\4\uffff\1\32\1\126\41\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\101\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\113\1\uffff\1\114",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\101\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\101\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\101\26\uffff\1\3\6\5\1\4\1\5\3\uffff\1\76\3\uffff\1\3\4\uffff\1\77\4\uffff\1\32\1\100\41\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\101\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\101\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\127",
            "\1\127",
            "\1\130",
            "\1\131\1\56\1\61\1\uffff\1\62\1\57\75\uffff\1\60",
            "\1\132",
            "\1\132",
            "\1\133",
            "\1\123\34\uffff\1\120\10\uffff\1\121\5\uffff\1\122",
            "\1\123",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\101\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\101\26\uffff\1\3\6\5\1\4\1\5\3\uffff\1\124\3\uffff\1\3\4\uffff\1\125\4\uffff\1\32\1\126\41\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\31\20\uffff\1\101\26\uffff\1\3\6\5\1\4\1\5\7\uffff\1\3\11\uffff\1\32\42\uffff\7\5"
    };
    static final char[] dfa_74 = DFA.unpackEncodedStringToUnsignedChars(dfa_74s);
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final short[][] dfa_76 = unpackEncodedStringArray(dfa_76s);

    class DFA88 extends DFA {

        public DFA88(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 88;
            this.eot = dfa_67;
            this.eof = dfa_67;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_71;
            this.special = dfa_72;
            this.transition = dfa_76;
        }
        public String getDescription() {
            return "()* loopback of 2684:1: ( (lv_declarations_3_0= ruleDeclaration ) )*";
        }
    }
    static final String dfa_77s = "\130\uffff";
    static final String dfa_78s = "\3\5\2\uffff\1\4\2\5\1\6\1\5\1\0\4\5\4\4\2\5\1\41\1\6\3\5\1\6\3\5\1\4\2\5\1\6\1\4\2\5\1\6\2\5\1\6\3\5\2\41\3\5\1\6\4\5\2\4\2\5\1\6\1\41\1\4\2\5\1\6\1\4\4\5\1\6\1\4\3\5\1\6\5\5\2\41\3\5\1\6\2\5";
    static final String dfa_79s = "\2\114\1\5\2\uffff\1\115\1\5\1\10\1\6\1\114\1\0\3\114\1\5\1\115\1\114\2\107\1\114\1\5\1\115\1\10\1\114\1\115\1\114\1\10\3\114\1\115\2\5\1\6\1\107\2\5\1\6\1\5\1\10\1\6\1\114\1\150\1\5\1\115\1\41\1\114\1\115\1\114\1\10\2\114\1\115\1\114\1\115\1\114\2\5\1\6\1\115\1\107\2\5\1\6\1\107\1\115\1\114\2\5\1\6\1\107\1\114\1\115\1\114\1\10\2\114\1\115\2\114\1\115\1\41\1\114\2\5\1\6\1\115\1\114";
    static final String dfa_80s = "\3\uffff\1\1\1\2\123\uffff";
    static final String dfa_81s = "\12\uffff\1\0\115\uffff}>";
    static final String[] dfa_82s = {
            "\1\4\1\uffff\1\4\2\uffff\1\1\47\uffff\1\3\6\uffff\1\4\6\uffff\1\4\1\uffff\1\4\11\uffff\1\2",
            "\1\4\1\uffff\1\4\2\uffff\1\1\47\uffff\1\3\6\uffff\1\4\10\uffff\1\4\11\uffff\1\2",
            "\1\5",
            "",
            "",
            "\1\11\1\12\1\14\1\4\1\15\1\13\1\1\25\uffff\1\16\21\uffff\1\3\6\uffff\1\4\4\uffff\1\6\3\uffff\1\4\4\uffff\1\7\4\uffff\1\2\1\10",
            "\1\17",
            "\1\17\1\14\1\uffff\1\15",
            "\1\20",
            "\1\4\1\uffff\1\4\2\uffff\1\1\20\uffff\1\21\26\uffff\1\3\6\uffff\1\4\10\uffff\1\4\11\uffff\1\2",
            "\1\uffff",
            "\1\4\1\uffff\1\4\2\uffff\1\23\20\uffff\1\22\26\uffff\1\3\6\uffff\1\4\10\uffff\1\4\11\uffff\1\24",
            "\1\4\1\uffff\1\4\2\uffff\1\23\20\uffff\1\22\26\uffff\1\3\6\uffff\1\4\10\uffff\1\4\11\uffff\1\24",
            "\1\4\1\uffff\1\4\2\uffff\1\23\20\uffff\1\22\26\uffff\1\3\6\uffff\1\4\10\uffff\1\4\11\uffff\1\24",
            "\1\25",
            "\1\11\1\12\1\14\1\4\1\15\1\13\1\1\25\uffff\1\16\21\uffff\1\3\6\uffff\1\4\4\uffff\1\6\3\uffff\1\4\4\uffff\1\7\4\uffff\1\2\1\10",
            "\1\11\1\12\1\14\1\4\1\15\1\13\1\1\25\uffff\1\16\21\uffff\1\3\6\uffff\1\4\10\uffff\1\4\4\uffff\1\26\4\uffff\1\2",
            "\1\27\1\30\1\33\1\uffff\1\34\1\31\75\uffff\1\32",
            "\1\35\1\30\1\33\1\uffff\1\34\1\31\75\uffff\1\32",
            "\1\4\1\uffff\1\4\2\uffff\1\23\47\uffff\1\3\6\uffff\1\4\10\uffff\1\4\11\uffff\1\24",
            "\1\36",
            "\1\42\34\uffff\1\37\10\uffff\1\40\5\uffff\1\41",
            "\1\14\1\uffff\1\15",
            "\1\4\1\uffff\1\4\2\uffff\1\1\20\uffff\1\21\26\uffff\1\3\6\uffff\1\4\10\uffff\1\4\11\uffff\1\2",
            "\1\4\1\uffff\1\4\2\uffff\1\23\20\uffff\1\22\26\uffff\1\3\6\uffff\1\4\4\uffff\1\43\3\uffff\1\4\4\uffff\1\44\4\uffff\1\24\1\45",
            "\1\4\1\uffff\1\4\2\uffff\1\23\20\uffff\1\22\26\uffff\1\3\6\uffff\1\4\10\uffff\1\4\11\uffff\1\24",
            "\1\33\1\uffff\1\34",
            "\1\4\1\uffff\1\4\2\uffff\1\23\20\uffff\1\22\26\uffff\1\3\6\uffff\1\4\10\uffff\1\4\11\uffff\1\24",
            "\1\4\1\uffff\1\4\2\uffff\1\23\20\uffff\1\22\26\uffff\1\3\6\uffff\1\4\10\uffff\1\4\11\uffff\1\24",
            "\1\4\1\uffff\1\4\2\uffff\1\23\20\uffff\1\22\26\uffff\1\3\6\uffff\1\4\10\uffff\1\4\11\uffff\1\24",
            "\1\51\1\52\1\14\1\4\1\15\1\13\1\23\25\uffff\1\53\21\uffff\1\3\6\uffff\1\4\4\uffff\1\46\3\uffff\1\4\4\uffff\1\47\4\uffff\1\24\1\50",
            "\1\54",
            "\1\54",
            "\1\55",
            "\1\56\1\57\1\62\1\uffff\1\63\1\60\75\uffff\1\61",
            "\1\64",
            "\1\64",
            "\1\65",
            "\1\66",
            "\1\66\1\14\1\uffff\1\15",
            "\1\67",
            "\1\4\1\uffff\1\4\2\uffff\1\23\20\uffff\1\22\26\uffff\1\3\6\uffff\1\4\10\uffff\1\4\11\uffff\1\24",
            "\1\4\1\uffff\1\4\2\uffff\1\23\17\uffff\1\4\1\22\4\uffff\1\4\21\uffff\1\3\6\uffff\1\4\2\uffff\1\4\1\uffff\1\70\1\4\2\uffff\1\4\4\uffff\1\71\3\uffff\1\4\1\24\1\72\17\uffff\14\4",
            "\1\73",
            "\1\42\34\uffff\1\37\10\uffff\1\40\5\uffff\1\41",
            "\1\42",
            "\1\4\1\uffff\1\4\2\uffff\1\1\20\uffff\1\74\26\uffff\1\3\6\uffff\1\4\10\uffff\1\4\11\uffff\1\2",
            "\1\4\1\uffff\1\4\2\uffff\1\23\20\uffff\1\100\26\uffff\1\3\6\uffff\1\4\4\uffff\1\75\3\uffff\1\4\4\uffff\1\76\4\uffff\1\24\1\77",
            "\1\4\1\uffff\1\4\2\uffff\1\23\20\uffff\1\100\26\uffff\1\3\6\uffff\1\4\10\uffff\1\4\11\uffff\1\24",
            "\1\62\1\uffff\1\63",
            "\1\4\1\uffff\1\4\2\uffff\1\23\20\uffff\1\100\26\uffff\1\3\6\uffff\1\4\10\uffff\1\4\11\uffff\1\24",
            "\1\4\1\uffff\1\4\2\uffff\1\23\20\uffff\1\100\26\uffff\1\3\6\uffff\1\4\10\uffff\1\4\11\uffff\1\24",
            "\1\4\1\uffff\1\4\2\uffff\1\23\20\uffff\1\22\26\uffff\1\3\6\uffff\1\4\4\uffff\1\43\3\uffff\1\4\4\uffff\1\44\4\uffff\1\24\1\45",
            "\1\4\1\uffff\1\4\2\uffff\1\23\20\uffff\1\22\26\uffff\1\3\6\uffff\1\4\10\uffff\1\4\11\uffff\1\24",
            "\1\51\1\52\1\14\1\4\1\15\1\13\1\23\25\uffff\1\53\21\uffff\1\3\6\uffff\1\4\4\uffff\1\46\3\uffff\1\4\4\uffff\1\47\4\uffff\1\24\1\50",
            "\1\51\1\52\1\14\1\4\1\15\1\13\1\23\25\uffff\1\53\21\uffff\1\3\6\uffff\1\4\10\uffff\1\4\4\uffff\1\26\4\uffff\1\24",
            "\1\101",
            "\1\101",
            "\1\102",
            "\1\106\34\uffff\1\103\10\uffff\1\104\5\uffff\1\105",
            "\1\107\1\110\1\113\1\uffff\1\114\1\111\75\uffff\1\112",
            "\1\115",
            "\1\115",
            "\1\116",
            "\1\117\1\110\1\113\1\uffff\1\114\1\111\75\uffff\1\112",
            "\1\4\1\uffff\1\4\2\uffff\1\23\20\uffff\1\22\26\uffff\1\3\6\uffff\1\4\4\uffff\1\70\3\uffff\1\4\4\uffff\1\71\4\uffff\1\24\1\72",
            "\1\4\1\uffff\1\4\2\uffff\1\23\20\uffff\1\22\26\uffff\1\3\6\uffff\1\4\10\uffff\1\4\11\uffff\1\24",
            "\1\120",
            "\1\120",
            "\1\121",
            "\1\122\1\57\1\62\1\uffff\1\63\1\60\75\uffff\1\61",
            "\1\4\1\uffff\1\4\2\uffff\1\1\20\uffff\1\74\26\uffff\1\3\6\uffff\1\4\10\uffff\1\4\11\uffff\1\2",
            "\1\4\1\uffff\1\4\2\uffff\1\23\20\uffff\1\100\26\uffff\1\3\6\uffff\1\4\4\uffff\1\123\3\uffff\1\4\4\uffff\1\124\4\uffff\1\24\1\125",
            "\1\4\1\uffff\1\4\2\uffff\1\23\20\uffff\1\100\26\uffff\1\3\6\uffff\1\4\10\uffff\1\4\11\uffff\1\24",
            "\1\113\1\uffff\1\114",
            "\1\4\1\uffff\1\4\2\uffff\1\23\20\uffff\1\100\26\uffff\1\3\6\uffff\1\4\10\uffff\1\4\11\uffff\1\24",
            "\1\4\1\uffff\1\4\2\uffff\1\23\20\uffff\1\100\26\uffff\1\3\6\uffff\1\4\10\uffff\1\4\11\uffff\1\24",
            "\1\4\1\uffff\1\4\2\uffff\1\23\20\uffff\1\100\26\uffff\1\3\6\uffff\1\4\4\uffff\1\75\3\uffff\1\4\4\uffff\1\76\4\uffff\1\24\1\77",
            "\1\4\1\uffff\1\4\2\uffff\1\23\20\uffff\1\100\26\uffff\1\3\6\uffff\1\4\10\uffff\1\4\11\uffff\1\24",
            "\1\4\1\uffff\1\4\2\uffff\1\23\20\uffff\1\100\26\uffff\1\3\6\uffff\1\4\10\uffff\1\4\11\uffff\1\24",
            "\1\106\34\uffff\1\103\10\uffff\1\104\5\uffff\1\105",
            "\1\106",
            "\1\4\1\uffff\1\4\2\uffff\1\23\20\uffff\1\100\26\uffff\1\3\6\uffff\1\4\10\uffff\1\4\11\uffff\1\24",
            "\1\126",
            "\1\126",
            "\1\127",
            "\1\4\1\uffff\1\4\2\uffff\1\23\20\uffff\1\100\26\uffff\1\3\6\uffff\1\4\4\uffff\1\123\3\uffff\1\4\4\uffff\1\124\4\uffff\1\24\1\125",
            "\1\4\1\uffff\1\4\2\uffff\1\23\20\uffff\1\100\26\uffff\1\3\6\uffff\1\4\10\uffff\1\4\11\uffff\1\24"
    };

    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final char[] dfa_78 = DFA.unpackEncodedStringToUnsignedChars(dfa_78s);
    static final char[] dfa_79 = DFA.unpackEncodedStringToUnsignedChars(dfa_79s);
    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final short[][] dfa_82 = unpackEncodedStringArray(dfa_82s);

    class DFA91 extends DFA {

        public DFA91(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 91;
            this.eot = dfa_77;
            this.eof = dfa_77;
            this.min = dfa_78;
            this.max = dfa_79;
            this.accept = dfa_80;
            this.special = dfa_81;
            this.transition = dfa_82;
        }
        public String getDescription() {
            return "2767:1: ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA91_10 = input.LA(1);

                         
                        int index91_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index91_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 91, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_83s = "\102\uffff";
    static final String dfa_84s = "\2\12\1\5\3\uffff\1\4\2\5\1\6\5\12\1\5\3\4\2\5\1\6\1\41\1\6\3\12\1\6\4\12\2\5\1\6\1\4\2\5\1\6\2\41\3\12\1\6\4\12\1\4\2\5\1\6\3\12\1\6\4\12\2\5\1\6\2\12";
    static final String dfa_85s = "\2\165\1\5\3\uffff\1\165\1\5\1\10\1\6\5\165\1\5\2\165\1\107\2\5\1\6\1\115\1\10\3\165\1\10\4\165\2\5\1\6\1\107\2\5\1\6\1\115\1\41\3\165\1\10\4\165\1\107\2\5\1\6\3\165\1\10\4\165\2\5\1\6\2\165";
    static final String dfa_86s = "\3\uffff\1\1\1\2\1\3\74\uffff";
    static final String dfa_87s = "\102\uffff}>";
    static final String[] dfa_88s = {
            "\1\1\50\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\1\50\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\6",
            "",
            "",
            "",
            "\1\12\1\13\1\15\1\uffff\1\16\1\14\1\1\25\uffff\1\17\22\uffff\5\3\2\4\1\5\3\uffff\1\7\10\uffff\1\10\4\uffff\1\2\1\11\41\uffff\7\3",
            "\1\20",
            "\1\20\1\15\1\uffff\1\16",
            "\1\21",
            "\1\1\20\uffff\1\22\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\22\27\uffff\5\3\2\4\1\5\3\uffff\1\23\10\uffff\1\24\4\uffff\1\2\1\25\41\uffff\7\3",
            "\1\1\20\uffff\1\22\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\22\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\22\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\26",
            "\1\12\1\13\1\15\1\uffff\1\16\1\14\1\1\25\uffff\1\17\22\uffff\5\3\2\4\1\5\3\uffff\1\7\10\uffff\1\10\4\uffff\1\2\1\11\41\uffff\7\3",
            "\1\12\1\13\1\15\1\uffff\1\16\1\14\1\1\25\uffff\1\17\22\uffff\5\3\2\4\1\5\14\uffff\1\27\4\uffff\1\2\42\uffff\7\3",
            "\1\30\1\31\1\34\1\uffff\1\35\1\32\75\uffff\1\33",
            "\1\36",
            "\1\36",
            "\1\37",
            "\1\43\34\uffff\1\40\10\uffff\1\41\5\uffff\1\42",
            "\1\15\1\uffff\1\16",
            "\1\1\20\uffff\1\22\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\22\27\uffff\5\3\2\4\1\5\3\uffff\1\44\10\uffff\1\45\4\uffff\1\2\1\46\41\uffff\7\3",
            "\1\1\20\uffff\1\22\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\34\1\uffff\1\35",
            "\1\1\20\uffff\1\22\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\22\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\22\27\uffff\5\3\2\4\1\5\3\uffff\1\23\10\uffff\1\24\4\uffff\1\2\1\25\41\uffff\7\3",
            "\1\1\20\uffff\1\22\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\47",
            "\1\47",
            "\1\50",
            "\1\51\1\52\1\55\1\uffff\1\56\1\53\75\uffff\1\54",
            "\1\57",
            "\1\57",
            "\1\60",
            "\1\43\34\uffff\1\40\10\uffff\1\41\5\uffff\1\42",
            "\1\43",
            "\1\1\20\uffff\1\61\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\61\27\uffff\5\3\2\4\1\5\3\uffff\1\62\10\uffff\1\63\4\uffff\1\2\1\64\41\uffff\7\3",
            "\1\1\20\uffff\1\61\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\55\1\uffff\1\56",
            "\1\1\20\uffff\1\61\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\61\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\22\27\uffff\5\3\2\4\1\5\3\uffff\1\44\10\uffff\1\45\4\uffff\1\2\1\46\41\uffff\7\3",
            "\1\1\20\uffff\1\22\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\65\1\66\1\71\1\uffff\1\72\1\67\75\uffff\1\70",
            "\1\73",
            "\1\73",
            "\1\74",
            "\1\1\20\uffff\1\61\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\61\27\uffff\5\3\2\4\1\5\3\uffff\1\75\10\uffff\1\76\4\uffff\1\2\1\77\41\uffff\7\3",
            "\1\1\20\uffff\1\61\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\71\1\uffff\1\72",
            "\1\1\20\uffff\1\61\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\61\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\61\27\uffff\5\3\2\4\1\5\3\uffff\1\62\10\uffff\1\63\4\uffff\1\2\1\64\41\uffff\7\3",
            "\1\1\20\uffff\1\61\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\100",
            "\1\100",
            "\1\101",
            "\1\1\20\uffff\1\61\27\uffff\5\3\2\4\1\5\3\uffff\1\75\10\uffff\1\76\4\uffff\1\2\1\77\41\uffff\7\3",
            "\1\1\20\uffff\1\61\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3"
    };

    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final char[] dfa_84 = DFA.unpackEncodedStringToUnsignedChars(dfa_84s);
    static final char[] dfa_85 = DFA.unpackEncodedStringToUnsignedChars(dfa_85s);
    static final short[] dfa_86 = DFA.unpackEncodedString(dfa_86s);
    static final short[] dfa_87 = DFA.unpackEncodedString(dfa_87s);
    static final short[][] dfa_88 = unpackEncodedStringArray(dfa_88s);

    class DFA93 extends DFA {

        public DFA93(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 93;
            this.eot = dfa_83;
            this.eof = dfa_83;
            this.min = dfa_84;
            this.max = dfa_85;
            this.accept = dfa_86;
            this.special = dfa_87;
            this.transition = dfa_88;
        }
        public String getDescription() {
            return "2886:1: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration )";
        }
    }
    static final String dfa_89s = "\2\12\1\5\3\uffff\1\4\2\5\1\6\1\5\5\12\2\4\1\41\1\4\2\5\2\6\2\5\1\6\1\4\3\12\1\6\4\12\2\41\3\12\1\6\2\12\2\5\1\6\1\4\2\5\1\6\5\12\1\6\4\12\2\5\1\6\2\12";
    static final String dfa_90s = "\2\165\1\5\3\uffff\1\165\1\5\1\10\1\6\1\5\7\165\1\115\1\107\2\5\1\6\1\10\2\5\1\6\1\107\3\165\1\10\4\165\1\115\1\41\3\165\1\10\2\165\2\5\1\6\1\107\2\5\1\6\5\165\1\10\4\165\2\5\1\6\2\165";
    static final String[] dfa_91s = {
            "\1\1\50\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\1\50\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\6",
            "",
            "",
            "",
            "\1\13\1\14\1\16\1\uffff\1\17\1\15\1\1\25\uffff\1\12\22\uffff\5\3\2\4\1\5\3\uffff\1\7\10\uffff\1\10\4\uffff\1\2\1\11\41\uffff\7\3",
            "\1\20",
            "\1\20\1\16\1\uffff\1\17",
            "\1\21",
            "\1\22",
            "\1\1\20\uffff\1\23\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\23\27\uffff\5\3\2\4\1\5\3\uffff\1\24\10\uffff\1\25\4\uffff\1\2\1\26\41\uffff\7\3",
            "\1\1\20\uffff\1\23\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\23\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\23\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\13\1\14\1\16\1\uffff\1\17\1\15\1\1\25\uffff\1\12\22\uffff\5\3\2\4\1\5\3\uffff\1\7\10\uffff\1\10\4\uffff\1\2\1\11\41\uffff\7\3",
            "\1\13\1\14\1\16\1\uffff\1\17\1\15\1\1\25\uffff\1\12\22\uffff\5\3\2\4\1\5\14\uffff\1\27\4\uffff\1\2\42\uffff\7\3",
            "\1\33\34\uffff\1\30\10\uffff\1\31\5\uffff\1\32",
            "\1\34\1\35\1\40\1\uffff\1\41\1\36\75\uffff\1\37",
            "\1\42",
            "\1\42",
            "\1\43",
            "\1\16\1\uffff\1\17",
            "\1\44",
            "\1\44",
            "\1\45",
            "\1\46\1\47\1\52\1\uffff\1\53\1\50\75\uffff\1\51",
            "\1\1\20\uffff\1\23\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\23\27\uffff\5\3\2\4\1\5\3\uffff\1\54\10\uffff\1\55\4\uffff\1\2\1\56\41\uffff\7\3",
            "\1\1\20\uffff\1\23\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\40\1\uffff\1\41",
            "\1\1\20\uffff\1\23\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\23\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\23\27\uffff\5\3\2\4\1\5\3\uffff\1\24\10\uffff\1\25\4\uffff\1\2\1\26\41\uffff\7\3",
            "\1\1\20\uffff\1\23\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\33\34\uffff\1\30\10\uffff\1\31\5\uffff\1\32",
            "\1\33",
            "\1\1\20\uffff\1\57\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\57\27\uffff\5\3\2\4\1\5\3\uffff\1\60\10\uffff\1\61\4\uffff\1\2\1\62\41\uffff\7\3",
            "\1\1\20\uffff\1\57\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\52\1\uffff\1\53",
            "\1\1\20\uffff\1\57\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\57\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\63",
            "\1\63",
            "\1\64",
            "\1\65\1\66\1\71\1\uffff\1\72\1\67\75\uffff\1\70",
            "\1\73",
            "\1\73",
            "\1\74",
            "\1\1\20\uffff\1\23\27\uffff\5\3\2\4\1\5\3\uffff\1\54\10\uffff\1\55\4\uffff\1\2\1\56\41\uffff\7\3",
            "\1\1\20\uffff\1\23\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\57\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\57\27\uffff\5\3\2\4\1\5\3\uffff\1\75\10\uffff\1\76\4\uffff\1\2\1\77\41\uffff\7\3",
            "\1\1\20\uffff\1\57\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\71\1\uffff\1\72",
            "\1\1\20\uffff\1\57\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\57\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\57\27\uffff\5\3\2\4\1\5\3\uffff\1\60\10\uffff\1\61\4\uffff\1\2\1\62\41\uffff\7\3",
            "\1\1\20\uffff\1\57\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3",
            "\1\100",
            "\1\100",
            "\1\101",
            "\1\1\20\uffff\1\57\27\uffff\5\3\2\4\1\5\3\uffff\1\75\10\uffff\1\76\4\uffff\1\2\1\77\41\uffff\7\3",
            "\1\1\20\uffff\1\57\27\uffff\5\3\2\4\1\5\21\uffff\1\2\42\uffff\7\3"
    };
    static final char[] dfa_89 = DFA.unpackEncodedStringToUnsignedChars(dfa_89s);
    static final char[] dfa_90 = DFA.unpackEncodedStringToUnsignedChars(dfa_90s);
    static final short[][] dfa_91 = unpackEncodedStringArray(dfa_91s);

    class DFA94 extends DFA {

        public DFA94(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 94;
            this.eot = dfa_83;
            this.eof = dfa_83;
            this.min = dfa_89;
            this.max = dfa_90;
            this.accept = dfa_86;
            this.special = dfa_87;
            this.transition = dfa_91;
        }
        public String getDescription() {
            return "2945:1: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon )";
        }
    }
    static final String dfa_92s = "\14\uffff";
    static final String dfa_93s = "\1\5\3\0\10\uffff";
    static final String dfa_94s = "\1\114\3\0\10\uffff";
    static final String dfa_95s = "\4\uffff\1\4\1\6\1\uffff\1\7\1\1\1\2\1\3\1\5";
    static final String dfa_96s = "\1\uffff\1\0\1\1\1\2\10\uffff}>";
    static final String[] dfa_97s = {
            "\1\3\1\uffff\1\4\2\uffff\1\1\56\uffff\1\5\6\uffff\1\5\1\uffff\1\7\11\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_92 = DFA.unpackEncodedString(dfa_92s);
    static final char[] dfa_93 = DFA.unpackEncodedStringToUnsignedChars(dfa_93s);
    static final char[] dfa_94 = DFA.unpackEncodedStringToUnsignedChars(dfa_94s);
    static final short[] dfa_95 = DFA.unpackEncodedString(dfa_95s);
    static final short[] dfa_96 = DFA.unpackEncodedString(dfa_96s);
    static final short[][] dfa_97 = unpackEncodedStringArray(dfa_97s);

    class DFA136 extends DFA {

        public DFA136(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 136;
            this.eot = dfa_92;
            this.eof = dfa_92;
            this.min = dfa_93;
            this.max = dfa_94;
            this.accept = dfa_95;
            this.special = dfa_96;
            this.transition = dfa_97;
        }
        public String getDescription() {
            return "4255:1: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_Emission_2= ruleEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA136_1 = input.LA(1);

                         
                        int index136_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalSCTX()) ) {s = 8;}

                        else if ( (synpred148_InternalSCTX()) ) {s = 9;}

                        else if ( (synpred149_InternalSCTX()) ) {s = 10;}

                        else if ( (synpred150_InternalSCTX()) ) {s = 4;}

                        else if ( (synpred151_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred152_InternalSCTX()) ) {s = 5;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index136_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA136_2 = input.LA(1);

                         
                        int index136_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalSCTX()) ) {s = 8;}

                        else if ( (synpred148_InternalSCTX()) ) {s = 9;}

                        else if ( (synpred149_InternalSCTX()) ) {s = 10;}

                        else if ( (synpred150_InternalSCTX()) ) {s = 4;}

                        else if ( (synpred151_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred152_InternalSCTX()) ) {s = 5;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index136_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA136_3 = input.LA(1);

                         
                        int index136_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalSCTX()) ) {s = 8;}

                        else if ( (synpred148_InternalSCTX()) ) {s = 9;}

                        else if ( (synpred149_InternalSCTX()) ) {s = 10;}

                        else if ( (synpred151_InternalSCTX()) ) {s = 11;}

                         
                        input.seek(index136_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 136, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_98s = "\5\uffff";
    static final String dfa_99s = "\1\1\1\uffff\2\1\1\uffff";
    static final String dfa_100s = "\1\5\1\uffff\2\5\1\uffff";
    static final String dfa_101s = "\1\127\1\uffff\2\150\1\uffff";
    static final String dfa_102s = "\1\uffff\1\2\2\uffff\1\1";
    static final String dfa_103s = "\5\uffff}>";
    static final String[] dfa_104s = {
            "\1\2\1\uffff\1\1\2\uffff\1\1\10\uffff\6\1\14\uffff\3\1\1\uffff\12\1\6\uffff\1\1\6\uffff\1\1\1\uffff\1\1\11\uffff\1\1\1\uffff\12\1",
            "",
            "\1\1\1\4\1\1\2\uffff\1\1\10\uffff\1\1\6\uffff\1\1\5\uffff\1\1\20\uffff\2\1\6\uffff\2\1\1\uffff\1\1\1\uffff\3\1\1\uffff\1\1\10\uffff\1\3\1\1\20\uffff\14\1",
            "\1\1\1\4\1\1\2\uffff\1\1\10\uffff\1\1\6\uffff\1\1\5\uffff\1\1\20\uffff\2\1\6\uffff\2\1\1\uffff\1\1\1\uffff\3\1\1\uffff\1\1\10\uffff\1\3\1\1\20\uffff\14\1",
            ""
    };

    static final short[] dfa_98 = DFA.unpackEncodedString(dfa_98s);
    static final short[] dfa_99 = DFA.unpackEncodedString(dfa_99s);
    static final char[] dfa_100 = DFA.unpackEncodedStringToUnsignedChars(dfa_100s);
    static final char[] dfa_101 = DFA.unpackEncodedStringToUnsignedChars(dfa_101s);
    static final short[] dfa_102 = DFA.unpackEncodedString(dfa_102s);
    static final short[] dfa_103 = DFA.unpackEncodedString(dfa_103s);
    static final short[][] dfa_104 = unpackEncodedStringArray(dfa_104s);

    class DFA139 extends DFA {

        public DFA139(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 139;
            this.eot = dfa_98;
            this.eof = dfa_99;
            this.min = dfa_100;
            this.max = dfa_101;
            this.accept = dfa_102;
            this.special = dfa_103;
            this.transition = dfa_104;
        }
        public String getDescription() {
            return "()+ loopback of 4432:1: ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA143 extends DFA {

        public DFA143(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 143;
            this.eot = dfa_98;
            this.eof = dfa_99;
            this.min = dfa_100;
            this.max = dfa_101;
            this.accept = dfa_102;
            this.special = dfa_103;
            this.transition = dfa_104;
        }
        public String getDescription() {
            return "()+ loopback of 4573:1: ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+";
        }
    }
    static final String dfa_105s = "\1\1\4\uffff";
    static final String dfa_106s = "\1\5\1\uffff\2\6\1\uffff";
    static final String dfa_107s = "\1\114\1\uffff\2\146\1\uffff";
    static final String[] dfa_108s = {
            "\1\2\4\uffff\1\1\10\uffff\1\1\23\uffff\1\1\1\uffff\1\1\42\uffff\1\1",
            "",
            "\1\4\31\uffff\1\1\33\uffff\1\1\1\uffff\1\1\14\uffff\1\3\21\uffff\12\1",
            "\1\4\31\uffff\1\1\33\uffff\1\1\1\uffff\1\1\14\uffff\1\3\21\uffff\12\1",
            ""
    };
    static final short[] dfa_105 = DFA.unpackEncodedString(dfa_105s);
    static final char[] dfa_106 = DFA.unpackEncodedStringToUnsignedChars(dfa_106s);
    static final char[] dfa_107 = DFA.unpackEncodedStringToUnsignedChars(dfa_107s);
    static final short[][] dfa_108 = unpackEncodedStringArray(dfa_108s);

    class DFA148 extends DFA {

        public DFA148(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 148;
            this.eot = dfa_98;
            this.eof = dfa_105;
            this.min = dfa_106;
            this.max = dfa_107;
            this.accept = dfa_102;
            this.special = dfa_103;
            this.transition = dfa_108;
        }
        public String getDescription() {
            return "()+ loopback of 4736:1: ( (lv_schedule_10_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA152 extends DFA {

        public DFA152(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 152;
            this.eot = dfa_98;
            this.eof = dfa_99;
            this.min = dfa_100;
            this.max = dfa_101;
            this.accept = dfa_102;
            this.special = dfa_103;
            this.transition = dfa_104;
        }
        public String getDescription() {
            return "()+ loopback of 4859:1: ( (lv_schedule_7_0= ruleScheduleObjectReference ) )+";
        }
    }
    static final String dfa_109s = "\1\4\14\0\2\uffff";
    static final String dfa_110s = "\1\156\14\0\2\uffff";
    static final String dfa_111s = "\15\uffff\1\1\1\2";
    static final String dfa_112s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\2\uffff}>";
    static final String[] dfa_113s = {
            "\1\4\1\11\1\2\1\14\1\3\1\6\20\uffff\1\5\2\uffff\1\15\33\uffff\1\12\6\uffff\1\13\6\uffff\1\1\45\uffff\1\7\1\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_109 = DFA.unpackEncodedStringToUnsignedChars(dfa_109s);
    static final char[] dfa_110 = DFA.unpackEncodedStringToUnsignedChars(dfa_110s);
    static final short[] dfa_111 = DFA.unpackEncodedString(dfa_111s);
    static final short[] dfa_112 = DFA.unpackEncodedString(dfa_112s);
    static final short[][] dfa_113 = unpackEncodedStringArray(dfa_113s);

    class DFA166 extends DFA {

        public DFA166(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 166;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_109;
            this.max = dfa_110;
            this.accept = dfa_111;
            this.special = dfa_112;
            this.transition = dfa_113;
        }
        public String getDescription() {
            return "5344:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA166_1 = input.LA(1);

                         
                        int index166_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred182_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index166_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA166_2 = input.LA(1);

                         
                        int index166_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred182_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index166_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA166_3 = input.LA(1);

                         
                        int index166_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred182_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index166_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA166_4 = input.LA(1);

                         
                        int index166_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred182_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index166_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA166_5 = input.LA(1);

                         
                        int index166_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred182_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index166_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA166_6 = input.LA(1);

                         
                        int index166_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred182_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index166_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA166_7 = input.LA(1);

                         
                        int index166_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred182_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index166_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA166_8 = input.LA(1);

                         
                        int index166_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred182_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index166_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA166_9 = input.LA(1);

                         
                        int index166_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred182_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index166_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA166_10 = input.LA(1);

                         
                        int index166_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred182_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index166_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA166_11 = input.LA(1);

                         
                        int index166_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred182_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index166_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA166_12 = input.LA(1);

                         
                        int index166_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred182_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index166_12);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 166, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_114s = "\7\uffff";
    static final String dfa_115s = "\1\2\6\uffff";
    static final String dfa_116s = "\2\5\1\uffff\2\5\1\0\1\uffff";
    static final String dfa_117s = "\1\165\1\5\1\uffff\2\134\1\0\1\uffff";
    static final String dfa_118s = "\2\uffff\1\2\3\uffff\1\1";
    static final String dfa_119s = "\5\uffff\1\0\1\uffff}>";
    static final String[] dfa_120s = {
            "\1\2\1\uffff\1\2\2\uffff\2\2\7\uffff\6\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\3\uffff\3\2\1\uffff\21\2\1\1\2\uffff\1\2\2\uffff\1\2\1\uffff\1\2\11\uffff\1\2\1\uffff\12\2\27\uffff\7\2",
            "\1\3",
            "",
            "\1\2\1\5\3\uffff\1\2\60\uffff\1\2\17\uffff\1\4\1\2\16\uffff\2\2",
            "\1\2\1\5\3\uffff\1\2\60\uffff\1\2\17\uffff\1\4\1\2\16\uffff\2\2",
            "\1\uffff",
            ""
    };

    static final short[] dfa_114 = DFA.unpackEncodedString(dfa_114s);
    static final short[] dfa_115 = DFA.unpackEncodedString(dfa_115s);
    static final char[] dfa_116 = DFA.unpackEncodedStringToUnsignedChars(dfa_116s);
    static final char[] dfa_117 = DFA.unpackEncodedStringToUnsignedChars(dfa_117s);
    static final short[] dfa_118 = DFA.unpackEncodedString(dfa_118s);
    static final short[] dfa_119 = DFA.unpackEncodedString(dfa_119s);
    static final short[][] dfa_120 = unpackEncodedStringArray(dfa_120s);

    class DFA168 extends DFA {

        public DFA168(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 168;
            this.eot = dfa_114;
            this.eof = dfa_115;
            this.min = dfa_116;
            this.max = dfa_117;
            this.accept = dfa_118;
            this.special = dfa_119;
            this.transition = dfa_120;
        }
        public String getDescription() {
            return "5369:2: (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA168_5 = input.LA(1);

                         
                        int index168_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred184_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index168_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 168, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_121s = "\1\165\1\uffff\2\150\1\uffff";
    static final String[] dfa_122s = {
            "\1\2\1\uffff\1\1\2\uffff\2\1\7\uffff\6\1\2\uffff\2\1\2\uffff\1\1\1\uffff\1\1\3\uffff\3\1\1\uffff\22\1\2\uffff\1\1\2\uffff\1\1\1\uffff\1\1\11\uffff\1\1\1\uffff\12\1\27\uffff\7\1",
            "",
            "\1\1\1\4\1\1\2\uffff\1\1\10\uffff\1\1\6\uffff\1\1\5\uffff\1\1\20\uffff\2\1\6\uffff\2\1\1\uffff\1\1\1\uffff\3\1\1\uffff\1\1\10\uffff\1\3\1\1\20\uffff\14\1",
            "\1\1\1\4\1\1\2\uffff\1\1\10\uffff\1\1\6\uffff\1\1\5\uffff\1\1\20\uffff\2\1\6\uffff\2\1\1\uffff\1\1\1\uffff\3\1\1\uffff\1\1\10\uffff\1\3\1\1\20\uffff\14\1",
            ""
    };
    static final char[] dfa_121 = DFA.unpackEncodedStringToUnsignedChars(dfa_121s);
    static final short[][] dfa_122 = unpackEncodedStringArray(dfa_122s);

    class DFA167 extends DFA {

        public DFA167(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 167;
            this.eot = dfa_98;
            this.eof = dfa_99;
            this.min = dfa_100;
            this.max = dfa_121;
            this.accept = dfa_102;
            this.special = dfa_103;
            this.transition = dfa_122;
        }
        public String getDescription() {
            return "()+ loopback of 5373:1: ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+";
        }
    }
    static final String dfa_123s = "\104\uffff";
    static final String dfa_124s = "\1\7\103\uffff";
    static final String dfa_125s = "\1\5\1\uffff\1\0\101\uffff";
    static final String dfa_126s = "\1\165\1\uffff\1\0\101\uffff";
    static final String dfa_127s = "\1\uffff\1\1\5\uffff\1\2\74\uffff";
    static final String dfa_128s = "\2\uffff\1\0\101\uffff}>";
    static final String[] dfa_129s = {
            "\1\7\1\uffff\1\7\2\uffff\2\7\7\uffff\6\7\2\uffff\2\7\1\uffff\2\7\1\uffff\1\7\2\uffff\4\7\1\uffff\22\7\2\uffff\1\7\2\uffff\1\2\1\1\4\7\6\uffff\1\7\1\uffff\12\7\21\uffff\4\1\2\uffff\7\7",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_123 = DFA.unpackEncodedString(dfa_123s);
    static final short[] dfa_124 = DFA.unpackEncodedString(dfa_124s);
    static final char[] dfa_125 = DFA.unpackEncodedStringToUnsignedChars(dfa_125s);
    static final char[] dfa_126 = DFA.unpackEncodedStringToUnsignedChars(dfa_126s);
    static final short[] dfa_127 = DFA.unpackEncodedString(dfa_127s);
    static final short[] dfa_128 = DFA.unpackEncodedString(dfa_128s);
    static final short[][] dfa_129 = unpackEncodedStringArray(dfa_129s);

    class DFA177 extends DFA {

        public DFA177(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 177;
            this.eot = dfa_123;
            this.eof = dfa_124;
            this.min = dfa_125;
            this.max = dfa_126;
            this.accept = dfa_127;
            this.special = dfa_128;
            this.transition = dfa_129;
        }
        public String getDescription() {
            return "5857:1: ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA177_2 = input.LA(1);

                         
                        int index177_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred193_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index177_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 177, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_130s = "\16\uffff";
    static final String dfa_131s = "\1\4\4\uffff\10\0\1\uffff";
    static final String dfa_132s = "\1\156\4\uffff\10\0\1\uffff";
    static final String dfa_133s = "\1\uffff\1\1\13\uffff\1\2";
    static final String dfa_134s = "\5\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\uffff}>";
    static final String[] dfa_135s = {
            "\1\1\1\11\1\1\1\14\1\1\1\6\20\uffff\1\5\2\uffff\1\15\33\uffff\1\12\6\uffff\1\13\6\uffff\1\1\45\uffff\1\7\1\10",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_130 = DFA.unpackEncodedString(dfa_130s);
    static final char[] dfa_131 = DFA.unpackEncodedStringToUnsignedChars(dfa_131s);
    static final char[] dfa_132 = DFA.unpackEncodedStringToUnsignedChars(dfa_132s);
    static final short[] dfa_133 = DFA.unpackEncodedString(dfa_133s);
    static final short[] dfa_134 = DFA.unpackEncodedString(dfa_134s);
    static final short[][] dfa_135 = unpackEncodedStringArray(dfa_135s);

    class DFA178 extends DFA {

        public DFA178(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 178;
            this.eot = dfa_130;
            this.eof = dfa_130;
            this.min = dfa_131;
            this.max = dfa_132;
            this.accept = dfa_133;
            this.special = dfa_134;
            this.transition = dfa_135;
        }
        public String getDescription() {
            return "5923:1: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA178_5 = input.LA(1);

                         
                        int index178_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred194_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index178_5);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA178_6 = input.LA(1);

                         
                        int index178_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred194_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index178_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA178_7 = input.LA(1);

                         
                        int index178_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred194_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index178_7);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA178_8 = input.LA(1);

                         
                        int index178_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred194_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index178_8);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA178_9 = input.LA(1);

                         
                        int index178_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred194_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index178_9);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA178_10 = input.LA(1);

                         
                        int index178_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred194_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index178_10);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA178_11 = input.LA(1);

                         
                        int index178_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred194_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index178_11);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA178_12 = input.LA(1);

                         
                        int index178_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred194_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index178_12);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 178, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_136s = "\11\uffff";
    static final String dfa_137s = "\3\uffff\1\2\3\uffff\1\2\1\uffff";
    static final String dfa_138s = "\1\5\2\uffff\1\5\3\uffff\1\5\1\uffff";
    static final String dfa_139s = "\1\156\2\uffff\1\165\3\uffff\1\165\1\uffff";
    static final String dfa_140s = "\1\uffff\1\1\1\2\1\uffff\1\3\1\5\1\6\1\uffff\1\4";
    static final String dfa_141s = "\11\uffff}>";
    static final String[] dfa_142s = {
            "\1\3\1\uffff\1\6\1\uffff\1\1\20\uffff\1\4\36\uffff\1\5\6\uffff\1\5\54\uffff\2\2",
            "",
            "",
            "\1\2\1\uffff\1\2\2\uffff\2\2\7\uffff\6\2\1\uffff\1\10\2\2\1\uffff\4\2\2\uffff\4\2\1\uffff\22\2\2\uffff\2\2\1\10\13\2\1\7\1\2\1\uffff\12\2\21\uffff\4\2\2\uffff\7\2",
            "",
            "",
            "",
            "\1\2\1\uffff\1\2\2\uffff\2\2\7\uffff\6\2\1\uffff\1\10\2\2\1\uffff\4\2\2\uffff\4\2\1\uffff\22\2\2\uffff\2\2\1\10\13\2\1\7\1\2\1\uffff\12\2\21\uffff\4\2\2\uffff\7\2",
            ""
    };

    static final short[] dfa_136 = DFA.unpackEncodedString(dfa_136s);
    static final short[] dfa_137 = DFA.unpackEncodedString(dfa_137s);
    static final char[] dfa_138 = DFA.unpackEncodedStringToUnsignedChars(dfa_138s);
    static final char[] dfa_139 = DFA.unpackEncodedStringToUnsignedChars(dfa_139s);
    static final short[] dfa_140 = DFA.unpackEncodedString(dfa_140s);
    static final short[] dfa_141 = DFA.unpackEncodedString(dfa_141s);
    static final short[][] dfa_142 = unpackEncodedStringArray(dfa_142s);

    class DFA191 extends DFA {

        public DFA191(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 191;
            this.eot = dfa_136;
            this.eof = dfa_137;
            this.min = dfa_138;
            this.max = dfa_139;
            this.accept = dfa_140;
            this.special = dfa_141;
            this.transition = dfa_142;
        }
        public String getDescription() {
            return "6660:1: (this_BoolValue_0= ruleBoolValue | this_ValuedObjectTestExpression_1= ruleValuedObjectTestExpression | (otherlv_2= '(' this_BoolExpression_3= ruleBoolExpression otherlv_4= ')' ) | this_ReferenceCall_5= ruleReferenceCall | this_FunctionCall_6= ruleFunctionCall | this_TextExpression_7= ruleTextExpression )";
        }
    }
    static final String dfa_143s = "\15\uffff";
    static final String dfa_144s = "\1\4\3\uffff\1\0\10\uffff";
    static final String dfa_145s = "\1\156\3\uffff\1\0\10\uffff";
    static final String dfa_146s = "\1\uffff\1\1\1\2\1\3\1\uffff\1\5\6\uffff\1\4";
    static final String dfa_147s = "\4\uffff\1\0\10\uffff}>";
    static final String[] dfa_148s = {
            "\1\3\1\5\1\1\1\5\1\2\1\5\20\uffff\1\4\36\uffff\1\5\6\uffff\1\5\54\uffff\2\5",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_143 = DFA.unpackEncodedString(dfa_143s);
    static final char[] dfa_144 = DFA.unpackEncodedStringToUnsignedChars(dfa_144s);
    static final char[] dfa_145 = DFA.unpackEncodedStringToUnsignedChars(dfa_145s);
    static final short[] dfa_146 = DFA.unpackEncodedString(dfa_146s);
    static final short[] dfa_147 = DFA.unpackEncodedString(dfa_147s);
    static final short[][] dfa_148 = unpackEncodedStringArray(dfa_148s);

    class DFA192 extends DFA {

        public DFA192(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 192;
            this.eot = dfa_143;
            this.eof = dfa_143;
            this.min = dfa_144;
            this.max = dfa_145;
            this.accept = dfa_146;
            this.special = dfa_147;
            this.transition = dfa_148;
        }
        public String getDescription() {
            return "6766:1: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | (otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')' ) | this_AtomicExpression_6= ruleAtomicExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA192_4 = input.LA(1);

                         
                        int index192_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred215_InternalSCTX()) ) {s = 12;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index192_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 192, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_149s = "\30\uffff";
    static final String dfa_150s = "\3\uffff\1\11\4\uffff\1\7\2\uffff\2\11\1\uffff\1\7\1\uffff\1\7\1\uffff\1\7\1\uffff\1\7\1\uffff\1\7\1\uffff";
    static final String dfa_151s = "\1\12\1\uffff\1\5\1\4\2\5\1\6\1\uffff\1\5\2\uffff\2\4\12\5\1\0";
    static final String dfa_152s = "\1\114\1\uffff\1\5\1\165\1\5\1\10\1\6\1\uffff\1\165\2\uffff\2\165\1\5\1\165\1\5\1\165\1\5\1\165\1\5\1\165\1\5\1\165\1\0";
    static final String dfa_153s = "\1\uffff\1\1\5\uffff\1\2\1\uffff\1\4\1\3\15\uffff";
    static final String dfa_154s = "\27\uffff\1\0}>";
    static final String[] dfa_155s = {
            "\1\1\101\uffff\1\2",
            "",
            "\1\3",
            "\1\7\1\10\1\7\1\11\2\7\1\11\6\uffff\1\11\2\uffff\5\11\7\uffff\1\12\6\uffff\1\11\1\uffff\1\11\10\uffff\11\11\3\uffff\1\4\3\uffff\1\11\4\uffff\1\5\4\uffff\1\11\1\6\41\uffff\7\11",
            "\1\13",
            "\1\13\1\7\1\uffff\1\7",
            "\1\14",
            "",
            "\1\7\1\uffff\1\7\2\uffff\1\7\6\uffff\1\7\2\uffff\5\7\1\uffff\1\11\1\7\4\uffff\1\11\6\uffff\1\7\1\uffff\1\7\10\uffff\11\7\1\uffff\1\11\1\uffff\1\15\1\11\2\uffff\1\7\4\uffff\1\7\3\uffff\1\11\2\7\17\uffff\14\11\6\uffff\7\7",
            "",
            "",
            "\1\7\1\10\1\7\1\11\2\7\1\11\6\uffff\1\11\2\uffff\5\11\7\uffff\1\12\6\uffff\1\11\1\uffff\1\11\10\uffff\11\11\3\uffff\1\4\3\uffff\1\11\4\uffff\1\5\4\uffff\1\11\1\6\41\uffff\7\11",
            "\1\7\1\10\1\7\1\11\2\7\1\11\6\uffff\1\11\2\uffff\5\11\7\uffff\1\12\6\uffff\1\11\1\uffff\1\11\10\uffff\11\11\7\uffff\1\11\4\uffff\1\7\4\uffff\1\11\42\uffff\7\11",
            "\1\16",
            "\1\7\1\uffff\1\7\2\uffff\1\7\6\uffff\1\7\2\uffff\5\7\2\uffff\1\7\4\uffff\1\11\6\uffff\1\7\1\uffff\1\7\10\uffff\11\7\1\uffff\1\11\1\uffff\1\17\3\uffff\1\7\4\uffff\1\7\3\uffff\1\11\2\7\17\uffff\12\11\10\uffff\7\7",
            "\1\20",
            "\1\7\1\uffff\1\7\2\uffff\1\7\6\uffff\1\7\2\uffff\5\7\2\uffff\1\7\4\uffff\1\11\6\uffff\1\7\1\uffff\1\7\10\uffff\11\7\1\uffff\1\11\1\uffff\1\21\3\uffff\1\7\4\uffff\1\7\3\uffff\1\11\2\7\17\uffff\12\11\10\uffff\7\7",
            "\1\22",
            "\1\7\1\uffff\1\7\2\uffff\1\7\6\uffff\1\7\2\uffff\5\7\2\uffff\1\7\4\uffff\1\11\6\uffff\1\7\1\uffff\1\7\10\uffff\11\7\1\uffff\1\11\1\uffff\1\23\3\uffff\1\7\4\uffff\1\7\3\uffff\1\11\2\7\17\uffff\12\11\10\uffff\7\7",
            "\1\24",
            "\1\7\1\uffff\1\7\2\uffff\1\7\6\uffff\1\7\2\uffff\5\7\2\uffff\1\7\4\uffff\1\11\6\uffff\1\7\1\uffff\1\7\10\uffff\11\7\1\uffff\1\11\1\uffff\1\25\3\uffff\1\7\4\uffff\1\7\3\uffff\1\11\2\7\17\uffff\12\11\10\uffff\7\7",
            "\1\26",
            "\1\7\1\uffff\1\7\2\uffff\1\7\6\uffff\1\7\2\uffff\5\7\2\uffff\1\7\4\uffff\1\11\6\uffff\1\7\1\uffff\1\7\10\uffff\11\7\1\uffff\1\11\1\uffff\1\27\3\uffff\1\7\4\uffff\1\7\3\uffff\1\11\2\7\17\uffff\12\11\10\uffff\7\7",
            "\1\uffff"
    };

    static final short[] dfa_149 = DFA.unpackEncodedString(dfa_149s);
    static final short[] dfa_150 = DFA.unpackEncodedString(dfa_150s);
    static final char[] dfa_151 = DFA.unpackEncodedStringToUnsignedChars(dfa_151s);
    static final char[] dfa_152 = DFA.unpackEncodedStringToUnsignedChars(dfa_152s);
    static final short[] dfa_153 = DFA.unpackEncodedString(dfa_153s);
    static final short[] dfa_154 = DFA.unpackEncodedString(dfa_154s);
    static final short[][] dfa_155 = unpackEncodedStringArray(dfa_155s);

    class DFA205 extends DFA {

        public DFA205(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 205;
            this.eot = dfa_149;
            this.eof = dfa_150;
            this.min = dfa_151;
            this.max = dfa_152;
            this.accept = dfa_153;
            this.special = dfa_154;
            this.transition = dfa_155;
        }
        public String getDescription() {
            return "7609:1: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA205_23 = input.LA(1);

                         
                        int index205_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred229_InternalSCTX()) ) {s = 7;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index205_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 205, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_156s = "\12\uffff";
    static final String dfa_157s = "\2\uffff\1\7\5\uffff\2\7";
    static final String dfa_158s = "\1\115\1\5\1\4\3\5\2\uffff\2\4";
    static final String dfa_159s = "\1\115\1\5\1\115\1\5\1\10\1\6\2\uffff\2\115";
    static final String dfa_160s = "\6\uffff\1\1\1\2\2\uffff";
    static final String dfa_161s = "\12\uffff}>";
    static final String[] dfa_162s = {
            "\1\1",
            "\1\2",
            "\3\6\1\uffff\2\6\1\7\6\uffff\1\7\54\uffff\1\3\10\uffff\1\4\4\uffff\1\7\1\5",
            "\1\10",
            "\1\10\1\6\1\uffff\1\6",
            "\1\7\1\11",
            "",
            "",
            "\3\6\1\uffff\2\6\1\7\6\uffff\1\7\54\uffff\1\3\10\uffff\1\4\4\uffff\1\7\1\5",
            "\3\6\1\uffff\2\6\1\7\6\uffff\1\7\65\uffff\1\6\4\uffff\2\7"
    };

    static final short[] dfa_156 = DFA.unpackEncodedString(dfa_156s);
    static final short[] dfa_157 = DFA.unpackEncodedString(dfa_157s);
    static final char[] dfa_158 = DFA.unpackEncodedStringToUnsignedChars(dfa_158s);
    static final char[] dfa_159 = DFA.unpackEncodedStringToUnsignedChars(dfa_159s);
    static final short[] dfa_160 = DFA.unpackEncodedString(dfa_160s);
    static final short[] dfa_161 = DFA.unpackEncodedString(dfa_161s);
    static final short[][] dfa_162 = unpackEncodedStringArray(dfa_162s);

    class DFA206 extends DFA {

        public DFA206(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 206;
            this.eot = dfa_156;
            this.eof = dfa_157;
            this.min = dfa_158;
            this.max = dfa_159;
            this.accept = dfa_160;
            this.special = dfa_161;
            this.transition = dfa_162;
        }
        public String getDescription() {
            return "7681:1: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )";
        }
    }
    static final String dfa_163s = "\3\uffff\1\10\6\uffff\2\10";
    static final String dfa_164s = "\1\12\1\uffff\1\5\1\4\2\5\1\6\3\uffff\2\4";
    static final String dfa_165s = "\1\114\1\uffff\1\5\1\123\2\5\1\6\3\uffff\2\123";
    static final String dfa_166s = "\1\uffff\1\1\5\uffff\1\3\1\4\1\2\2\uffff";
    static final String dfa_167s = "\14\uffff}>";
    static final String[] dfa_168s = {
            "\1\1\101\uffff\1\2",
            "",
            "\1\3",
            "\2\11\3\uffff\1\11\1\10\25\uffff\1\7\35\uffff\1\4\10\uffff\1\5\4\uffff\1\10\1\6\6\10",
            "\1\12",
            "\1\12",
            "\1\13",
            "",
            "",
            "",
            "\2\11\3\uffff\1\11\1\10\25\uffff\1\7\35\uffff\1\4\10\uffff\1\5\4\uffff\1\10\1\6\6\10",
            "\2\11\3\uffff\1\11\1\10\25\uffff\1\7\53\uffff\1\10\1\uffff\6\10"
    };
    static final short[] dfa_163 = DFA.unpackEncodedString(dfa_163s);
    static final char[] dfa_164 = DFA.unpackEncodedStringToUnsignedChars(dfa_164s);
    static final char[] dfa_165 = DFA.unpackEncodedStringToUnsignedChars(dfa_165s);
    static final short[] dfa_166 = DFA.unpackEncodedString(dfa_166s);
    static final short[] dfa_167 = DFA.unpackEncodedString(dfa_167s);
    static final short[][] dfa_168 = unpackEncodedStringArray(dfa_168s);

    class DFA207 extends DFA {

        public DFA207(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 207;
            this.eot = dfa_92;
            this.eof = dfa_163;
            this.min = dfa_164;
            this.max = dfa_165;
            this.accept = dfa_166;
            this.special = dfa_167;
            this.transition = dfa_168;
        }
        public String getDescription() {
            return "7729:1: (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )";
        }
    }
    static final String dfa_169s = "\3\uffff\1\7\6\uffff\2\7";
    static final String dfa_170s = "\1\114\1\uffff\1\5\1\115\2\5\1\6\3\uffff\1\115\1\114";
    static final String dfa_171s = "\1\uffff\1\1\5\uffff\1\4\1\3\1\2\2\uffff";
    static final String[] dfa_172s = {
            "\1\1\101\uffff\1\2",
            "",
            "\1\3",
            "\1\11\1\7\4\uffff\1\7\25\uffff\1\10\35\uffff\1\4\10\uffff\1\5\4\uffff\1\7\1\6",
            "\1\12",
            "\1\12",
            "\1\13",
            "",
            "",
            "",
            "\1\11\1\7\4\uffff\1\7\25\uffff\1\10\35\uffff\1\4\10\uffff\1\5\4\uffff\1\7\1\6",
            "\1\11\1\7\4\uffff\1\7\25\uffff\1\10\53\uffff\1\7"
    };
    static final short[] dfa_169 = DFA.unpackEncodedString(dfa_169s);
    static final char[] dfa_170 = DFA.unpackEncodedStringToUnsignedChars(dfa_170s);
    static final short[] dfa_171 = DFA.unpackEncodedString(dfa_171s);
    static final short[][] dfa_172 = unpackEncodedStringArray(dfa_172s);

    class DFA208 extends DFA {

        public DFA208(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 208;
            this.eot = dfa_92;
            this.eof = dfa_169;
            this.min = dfa_164;
            this.max = dfa_170;
            this.accept = dfa_171;
            this.special = dfa_167;
            this.transition = dfa_172;
        }
        public String getDescription() {
            return "7801:1: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )";
        }
    }
 

    
    private static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000020402L,0x0000000000003000L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000020402L,0x0000000000001000L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000020400L,0x0000000000001000L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000040010L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000040000L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x07F9FE8001F80420L,0x003F800000F01000L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0001FE8001F80420L,0x0000000000F01000L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000080000L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000028000080400L,0x0000000000001000L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000001F00400L,0x0000000000001000L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000001E00000L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000001C00000L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000001800000L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000001000000L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000002040412L,0x00000000000FD000L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000002040402L,0x00000000000FD000L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000402L,0x00000000000FD000L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000028000000402L,0x0000000000001000L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000004000002L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x02000000640007F0L,0x0000600000001081L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000018000000L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000010000000L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000040000000L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000080000002L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000100000002L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000200000000L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000000400L,0x00000000000FD000L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000005C00000002L,0x0000000007F00000L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000005C00000002L,0x0000000007000000L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000005800000002L,0x0000000007000000L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000005800000002L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x02000000240007F0L,0x0000600000001081L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000005000000002L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x02000000000004A0L,0x0000000000001005L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000006000000002L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000001F00402L,0x0000000000001000L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000422L,0x0000000000001000L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000008000000400L,0x0000000000001000L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000010000000030L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000010000000010L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000010000000000L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x07F8000001F00400L,0x003F800000001000L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000040030L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x07F8028001F00400L,0x003F800000001000L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000001F80400L,0x0000000000001000L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000020000000400L,0x0000000000001000L});
        public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x07F8000000000420L,0x003F800000001000L});
        public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000080000000000L});
        public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000600000000000L});
        public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000400000000000L});
        public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000004800000002L});
        public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000004000000002L});
        public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x07FE0000000004A2L,0x003F800000001005L});
        public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x02060000000004A2L,0x0000000000001005L});
        public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000040020L});
        public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0002000000000002L});
        public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x07FE0000000804A0L,0x003F800000001005L});
        public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x02060000000804A0L,0x0000000000001005L});
        public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0002000000080000L});
        public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0004000000000400L,0x0000000000001000L});
        public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x00F8000000000400L,0x003F800000001000L});
        public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x00F0000000000000L,0x003F800000000000L});
        public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x00E0000000000000L,0x003F800000000000L});
        public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x00C0000000000000L,0x003F800000000000L});
        public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0080000000000000L,0x003F800000000000L});
        public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000420L,0x0000000000001000L});
        public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000002008000000L});
        public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000802L});
        public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000008000802L});
        public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000010000000002L});
        public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0300000000000400L,0x0000000000001000L});
        public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0400000000000400L,0x0000000000001000L});
        public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0800000000000420L,0x0000000018001000L});
        public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0800000000000420L,0x0000000000001000L});
        public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000000L,0x0000000018000000L});
        public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x3000000100000002L});
        public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x2000000000000002L});
        public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000040000000L,0x01E0000000000160L});
        public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0400000004000002L});
        public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0400000000000002L});
        public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x1000000100000000L,0x0000007FE0000000L});
        public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x5000000100000000L,0x0000007FE0000000L});
        public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000420L,0x0000600000001000L});
        public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000100000000L,0x0000018000000000L});
        public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000480L,0x0000000000001000L});
        public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x8000000004000000L});
        public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0200000000000400L,0x0000000000001000L});
        public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
        public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000000400L,0x0000000000001004L});
        public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000008000002L});
        public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000008L});
        public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000010L});
        public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
        public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000040000002L});
        public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000000002L,0x00001E0000000003L});
        public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000040L});
        public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x02000000040007F0L,0x0000600000001081L});
        public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000080L});
        public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
        public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000200L});
        public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
        public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000004000000L});
        public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000800L});
        public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x4000000100000002L});
        public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000000000370L,0x0000000000000080L});
        public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000000000230L});
        public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000100000000L});
        public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x4000000000000002L,0x0000000000002080L});
        public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000000100L});
    }


}