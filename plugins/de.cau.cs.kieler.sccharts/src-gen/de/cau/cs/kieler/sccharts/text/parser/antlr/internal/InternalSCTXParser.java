package de.cau.cs.kieler.sccharts.text.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.cau.cs.kieler.sccharts.text.services.SCTXGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalSCTXParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_STRING", "RULE_ID", "RULE_INT", "RULE_FLOAT", "RULE_HOSTCODE", "RULE_BOOLEAN", "RULE_COMMENT_ANNOTATION", "RULE_SL_COMMENT_ANNOTATION", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_NUMBER", "RULE_WS", "RULE_ANY_OTHER", "'import'", "'scchart'", "'extends'", "','", "'{'", "'}'", "'initial'", "'final'", "'violation'", "'connector'", "'state'", "'is'", "'schedule'", "'super.'", "'('", "')'", "'!'", "'&'", "'to'", "'['", "']'", "'if'", "'Pr='", "'nondeterministic'", "'do'", "';'", "'deferred'", "'label'", "'override'", "'region'", "'for'", "':'", "'dataflow'", "'once'", "'emit'", "'entry'", "'Pr'", "'during'", "'exit'", "'weak'", "'suspend'", "'preceding'", "'succeeding'", "'period'", "'const'", "'input'", "'output'", "'global'", "'static'", "'host'", "'policy'", "'go to'", "'method'", "'()'", "'module'", "'goto'", "'return'", "'else'", "'while'", "'scope'", "'expression'", "'signal'", "'ref'", "'extern'", "'='", "'combine'", "'.'", "'print'", "'randomize'", "'||'", "'&&'", "'|'", "'^'", "'<<'", "'>>'", "'>>>'", "'+'", "'-'", "'*'", "'/'", "'%'", "'\\''", "'random'", "'_'", "'null'", "'#'", "'@'", "'abort to'", "'join to'", "'undefined'", "'delayed'", "'immediate'", "'auto'", "'reset'", "'shallow history'", "'history'", "'pure'", "'bool'", "'int'", "'float'", "'string'", "'clock'", "'conflicting'", "'commuting'", "'+='", "'-='", "'*='", "'/='", "'%='", "'&='", "'|='", "'^='", "'<<='", "'>>='", "'>>>='", "'min='", "'max='", "'++'", "'--'", "'=='", "'<'", "'<='", "'>'", "'>='", "'!='", "'pre'", "'~'", "'val'", "'?'", "'->'", "'struct'", "'class'", "'none'", "'max'", "'min'", "'public'", "'protected'", "'private'", "'void'"
    };
    public static final int T__144=144;
    public static final int T__143=143;
    public static final int T__146=146;
    public static final int T__50=50;
    public static final int T__145=145;
    public static final int T__140=140;
    public static final int T__142=142;
    public static final int T__141=141;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__133=133;
    public static final int T__132=132;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int RULE_ID=5;
    public static final int T__131=131;
    public static final int T__130=130;
    public static final int RULE_INT=6;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=12;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int RULE_COMMENT_ANNOTATION=10;
    public static final int T__37=37;
    public static final int RULE_SL_COMMENT_ANNOTATION=11;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__155=155;
    public static final int T__154=154;
    public static final int T__151=151;
    public static final int T__150=150;
    public static final int T__153=153;
    public static final int T__152=152;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int RULE_FLOAT=7;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__148=148;
    public static final int T__41=41;
    public static final int T__147=147;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__149=149;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int RULE_BOOLEAN=9;
    public static final int T__19=19;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__26=26;
    public static final int RULE_HOSTCODE=8;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__122=122;
    public static final int T__70=70;
    public static final int T__121=121;
    public static final int T__71=71;
    public static final int T__124=124;
    public static final int T__72=72;
    public static final int T__123=123;
    public static final int T__120=120;
    public static final int RULE_STRING=4;
    public static final int RULE_SL_COMMENT=13;
    public static final int T__77=77;
    public static final int T__119=119;
    public static final int T__78=78;
    public static final int T__118=118;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__117=117;
    public static final int T__76=76;
    public static final int T__116=116;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=15;
    public static final int RULE_ANY_OTHER=16;
    public static final int RULE_NUMBER=14;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalSCTXParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSCTXParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSCTXParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSCTX.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private SCTXGrammarAccess grammarAccess;

        public InternalSCTXParser(TokenStream input, SCTXGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "SCCharts";
       	}

       	@Override
       	protected SCTXGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleSCCharts"
    // InternalSCTX.g:71:1: entryRuleSCCharts returns [EObject current=null] : iv_ruleSCCharts= ruleSCCharts EOF ;
    public final EObject entryRuleSCCharts() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSCCharts = null;


        try {
            // InternalSCTX.g:71:49: (iv_ruleSCCharts= ruleSCCharts EOF )
            // InternalSCTX.g:72:2: iv_ruleSCCharts= ruleSCCharts EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSCChartsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSCCharts=ruleSCCharts();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSCCharts; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSCCharts"


    // $ANTLR start "ruleSCCharts"
    // InternalSCTX.g:78:1: ruleSCCharts returns [EObject current=null] : ( ( ( (lv_pragmas_0_0= rulePragma ) ) | (otherlv_1= 'import' ( (lv_imports_2_0= ruleEString ) ) ) )* ( (lv_rootStates_3_0= ruleRootState ) )* ) ;
    public final EObject ruleSCCharts() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pragmas_0_0 = null;

        AntlrDatatypeRuleToken lv_imports_2_0 = null;

        EObject lv_rootStates_3_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:84:2: ( ( ( ( (lv_pragmas_0_0= rulePragma ) ) | (otherlv_1= 'import' ( (lv_imports_2_0= ruleEString ) ) ) )* ( (lv_rootStates_3_0= ruleRootState ) )* ) )
            // InternalSCTX.g:85:2: ( ( ( (lv_pragmas_0_0= rulePragma ) ) | (otherlv_1= 'import' ( (lv_imports_2_0= ruleEString ) ) ) )* ( (lv_rootStates_3_0= ruleRootState ) )* )
            {
            // InternalSCTX.g:85:2: ( ( ( (lv_pragmas_0_0= rulePragma ) ) | (otherlv_1= 'import' ( (lv_imports_2_0= ruleEString ) ) ) )* ( (lv_rootStates_3_0= ruleRootState ) )* )
            // InternalSCTX.g:86:3: ( ( (lv_pragmas_0_0= rulePragma ) ) | (otherlv_1= 'import' ( (lv_imports_2_0= ruleEString ) ) ) )* ( (lv_rootStates_3_0= ruleRootState ) )*
            {
            // InternalSCTX.g:86:3: ( ( (lv_pragmas_0_0= rulePragma ) ) | (otherlv_1= 'import' ( (lv_imports_2_0= ruleEString ) ) ) )*
            loop1:
            do {
                int alt1=3;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==102) ) {
                    alt1=1;
                }
                else if ( (LA1_0==17) ) {
                    alt1=2;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalSCTX.g:87:4: ( (lv_pragmas_0_0= rulePragma ) )
            	    {
            	    // InternalSCTX.g:87:4: ( (lv_pragmas_0_0= rulePragma ) )
            	    // InternalSCTX.g:88:5: (lv_pragmas_0_0= rulePragma )
            	    {
            	    // InternalSCTX.g:88:5: (lv_pragmas_0_0= rulePragma )
            	    // InternalSCTX.g:89:6: lv_pragmas_0_0= rulePragma
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSCChartsAccess().getPragmasPragmaParserRuleCall_0_0_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    lv_pragmas_0_0=rulePragma();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSCChartsRule());
            	      						}
            	      						add(
            	      							current,
            	      							"pragmas",
            	      							lv_pragmas_0_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Pragma");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalSCTX.g:107:4: (otherlv_1= 'import' ( (lv_imports_2_0= ruleEString ) ) )
            	    {
            	    // InternalSCTX.g:107:4: (otherlv_1= 'import' ( (lv_imports_2_0= ruleEString ) ) )
            	    // InternalSCTX.g:108:5: otherlv_1= 'import' ( (lv_imports_2_0= ruleEString ) )
            	    {
            	    otherlv_1=(Token)match(input,17,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_1, grammarAccess.getSCChartsAccess().getImportKeyword_0_1_0());
            	      				
            	    }
            	    // InternalSCTX.g:112:5: ( (lv_imports_2_0= ruleEString ) )
            	    // InternalSCTX.g:113:6: (lv_imports_2_0= ruleEString )
            	    {
            	    // InternalSCTX.g:113:6: (lv_imports_2_0= ruleEString )
            	    // InternalSCTX.g:114:7: lv_imports_2_0= ruleEString
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getSCChartsAccess().getImportsEStringParserRuleCall_0_1_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    lv_imports_2_0=ruleEString();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getSCChartsRule());
            	      							}
            	      							add(
            	      								current,
            	      								"imports",
            	      								lv_imports_2_0,
            	      								"de.cau.cs.kieler.annotations.Annotations.EString");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            // InternalSCTX.g:133:3: ( (lv_rootStates_3_0= ruleRootState ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==RULE_COMMENT_ANNOTATION||LA2_0==18||LA2_0==103) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalSCTX.g:134:4: (lv_rootStates_3_0= ruleRootState )
            	    {
            	    // InternalSCTX.g:134:4: (lv_rootStates_3_0= ruleRootState )
            	    // InternalSCTX.g:135:5: lv_rootStates_3_0= ruleRootState
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSCChartsAccess().getRootStatesRootStateParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_5);
            	    lv_rootStates_3_0=ruleRootState();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSCChartsRule());
            	      					}
            	      					add(
            	      						current,
            	      						"rootStates",
            	      						lv_rootStates_3_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.RootState");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSCCharts"


    // $ANTLR start "entryRuleRootState"
    // InternalSCTX.g:156:1: entryRuleRootState returns [EObject current=null] : iv_ruleRootState= ruleRootState EOF ;
    public final EObject entryRuleRootState() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRootState = null;


        try {
            // InternalSCTX.g:156:50: (iv_ruleRootState= ruleRootState EOF )
            // InternalSCTX.g:157:2: iv_ruleRootState= ruleRootState EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRootStateRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRootState=ruleRootState();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRootState; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRootState"


    // $ANTLR start "ruleRootState"
    // InternalSCTX.g:163:1: ruleRootState returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'scchart' ( (lv_name_2_0= ruleExtendedID ) ) ( (lv_label_3_0= RULE_STRING ) )? (otherlv_4= 'extends' ( (otherlv_5= RULE_ID ) ) (otherlv_6= ',' ( (otherlv_7= RULE_ID ) ) )* )? otherlv_8= '{' ( (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_10_0= ruleLocalAction ) )* ( ( (lv_regions_11_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_12_0= ruleRegion ) )* ) otherlv_13= '}' ) ;
    public final EObject ruleRootState() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_label_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_13=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_declarations_9_0 = null;

        EObject lv_actions_10_0 = null;

        EObject lv_regions_11_0 = null;

        EObject lv_regions_12_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:169:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'scchart' ( (lv_name_2_0= ruleExtendedID ) ) ( (lv_label_3_0= RULE_STRING ) )? (otherlv_4= 'extends' ( (otherlv_5= RULE_ID ) ) (otherlv_6= ',' ( (otherlv_7= RULE_ID ) ) )* )? otherlv_8= '{' ( (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_10_0= ruleLocalAction ) )* ( ( (lv_regions_11_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_12_0= ruleRegion ) )* ) otherlv_13= '}' ) )
            // InternalSCTX.g:170:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'scchart' ( (lv_name_2_0= ruleExtendedID ) ) ( (lv_label_3_0= RULE_STRING ) )? (otherlv_4= 'extends' ( (otherlv_5= RULE_ID ) ) (otherlv_6= ',' ( (otherlv_7= RULE_ID ) ) )* )? otherlv_8= '{' ( (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_10_0= ruleLocalAction ) )* ( ( (lv_regions_11_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_12_0= ruleRegion ) )* ) otherlv_13= '}' )
            {
            // InternalSCTX.g:170:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'scchart' ( (lv_name_2_0= ruleExtendedID ) ) ( (lv_label_3_0= RULE_STRING ) )? (otherlv_4= 'extends' ( (otherlv_5= RULE_ID ) ) (otherlv_6= ',' ( (otherlv_7= RULE_ID ) ) )* )? otherlv_8= '{' ( (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_10_0= ruleLocalAction ) )* ( ( (lv_regions_11_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_12_0= ruleRegion ) )* ) otherlv_13= '}' )
            // InternalSCTX.g:171:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'scchart' ( (lv_name_2_0= ruleExtendedID ) ) ( (lv_label_3_0= RULE_STRING ) )? (otherlv_4= 'extends' ( (otherlv_5= RULE_ID ) ) (otherlv_6= ',' ( (otherlv_7= RULE_ID ) ) )* )? otherlv_8= '{' ( (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_10_0= ruleLocalAction ) )* ( ( (lv_regions_11_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_12_0= ruleRegion ) )* ) otherlv_13= '}'
            {
            // InternalSCTX.g:171:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==RULE_COMMENT_ANNOTATION||LA3_0==103) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // InternalSCTX.g:172:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:172:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:173:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRootStateAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_6);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRootStateRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);

            otherlv_1=(Token)match(input,18,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getRootStateAccess().getScchartKeyword_1());
              		
            }
            // InternalSCTX.g:194:3: ( (lv_name_2_0= ruleExtendedID ) )
            // InternalSCTX.g:195:4: (lv_name_2_0= ruleExtendedID )
            {
            // InternalSCTX.g:195:4: (lv_name_2_0= ruleExtendedID )
            // InternalSCTX.g:196:5: lv_name_2_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRootStateAccess().getNameExtendedIDParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_7);
            lv_name_2_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRootStateRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:213:3: ( (lv_label_3_0= RULE_STRING ) )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==RULE_STRING) ) {
                alt4=1;
            }
            switch (alt4) {
                case 1 :
                    // InternalSCTX.g:214:4: (lv_label_3_0= RULE_STRING )
                    {
                    // InternalSCTX.g:214:4: (lv_label_3_0= RULE_STRING )
                    // InternalSCTX.g:215:5: lv_label_3_0= RULE_STRING
                    {
                    lv_label_3_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_3_0, grammarAccess.getRootStateAccess().getLabelSTRINGTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getRootStateRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_3_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:231:3: (otherlv_4= 'extends' ( (otherlv_5= RULE_ID ) ) (otherlv_6= ',' ( (otherlv_7= RULE_ID ) ) )* )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==19) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // InternalSCTX.g:232:4: otherlv_4= 'extends' ( (otherlv_5= RULE_ID ) ) (otherlv_6= ',' ( (otherlv_7= RULE_ID ) ) )*
                    {
                    otherlv_4=(Token)match(input,19,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getRootStateAccess().getExtendsKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:236:4: ( (otherlv_5= RULE_ID ) )
                    // InternalSCTX.g:237:5: (otherlv_5= RULE_ID )
                    {
                    // InternalSCTX.g:237:5: (otherlv_5= RULE_ID )
                    // InternalSCTX.g:238:6: otherlv_5= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRootStateRule());
                      						}
                      					
                    }
                    otherlv_5=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_5, grammarAccess.getRootStateAccess().getBaseStatesStateCrossReference_4_1_0());
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:252:4: (otherlv_6= ',' ( (otherlv_7= RULE_ID ) ) )*
                    loop5:
                    do {
                        int alt5=2;
                        int LA5_0 = input.LA(1);

                        if ( (LA5_0==20) ) {
                            alt5=1;
                        }


                        switch (alt5) {
                    	case 1 :
                    	    // InternalSCTX.g:253:5: otherlv_6= ',' ( (otherlv_7= RULE_ID ) )
                    	    {
                    	    otherlv_6=(Token)match(input,20,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_6, grammarAccess.getRootStateAccess().getCommaKeyword_4_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:257:5: ( (otherlv_7= RULE_ID ) )
                    	    // InternalSCTX.g:258:6: (otherlv_7= RULE_ID )
                    	    {
                    	    // InternalSCTX.g:258:6: (otherlv_7= RULE_ID )
                    	    // InternalSCTX.g:259:7: otherlv_7= RULE_ID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							/* */
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getRootStateRule());
                    	      							}
                    	      						
                    	    }
                    	    otherlv_7=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_10); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_7, grammarAccess.getRootStateAccess().getBaseStatesStateCrossReference_4_2_1_0());
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop5;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_8=(Token)match(input,21,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getRootStateAccess().getLeftCurlyBracketKeyword_5());
              		
            }
            // InternalSCTX.g:279:3: ( (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )*
            loop7:
            do {
                int alt7=2;
                alt7 = dfa7.predict(input);
                switch (alt7) {
            	case 1 :
            	    // InternalSCTX.g:280:4: (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
            	    {
            	    // InternalSCTX.g:280:4: (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
            	    // InternalSCTX.g:281:5: lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRootStateAccess().getDeclarationsDeclarationOrMethodWithKeywordWOSemicolonParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_11);
            	    lv_declarations_9_0=ruleDeclarationOrMethodWithKeywordWOSemicolon();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRootStateRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_9_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.DeclarationOrMethodWithKeywordWOSemicolon");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop7;
                }
            } while (true);

            // InternalSCTX.g:298:3: ( (lv_actions_10_0= ruleLocalAction ) )*
            loop8:
            do {
                int alt8=2;
                alt8 = dfa8.predict(input);
                switch (alt8) {
            	case 1 :
            	    // InternalSCTX.g:299:4: (lv_actions_10_0= ruleLocalAction )
            	    {
            	    // InternalSCTX.g:299:4: (lv_actions_10_0= ruleLocalAction )
            	    // InternalSCTX.g:300:5: lv_actions_10_0= ruleLocalAction
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRootStateAccess().getActionsLocalActionParserRuleCall_7_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_12);
            	    lv_actions_10_0=ruleLocalAction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRootStateRule());
            	      					}
            	      					add(
            	      						current,
            	      						"actions",
            	      						lv_actions_10_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.LocalAction");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop8;
                }
            } while (true);

            // InternalSCTX.g:317:3: ( ( (lv_regions_11_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_12_0= ruleRegion ) )* )
            int alt10=2;
            alt10 = dfa10.predict(input);
            switch (alt10) {
                case 1 :
                    // InternalSCTX.g:318:4: ( (lv_regions_11_0= ruleImplicitControlflowRegion ) )
                    {
                    // InternalSCTX.g:318:4: ( (lv_regions_11_0= ruleImplicitControlflowRegion ) )
                    // InternalSCTX.g:319:5: (lv_regions_11_0= ruleImplicitControlflowRegion )
                    {
                    // InternalSCTX.g:319:5: (lv_regions_11_0= ruleImplicitControlflowRegion )
                    // InternalSCTX.g:320:6: lv_regions_11_0= ruleImplicitControlflowRegion
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRootStateAccess().getRegionsImplicitControlflowRegionParserRuleCall_8_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_13);
                    lv_regions_11_0=ruleImplicitControlflowRegion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRootStateRule());
                      						}
                      						add(
                      							current,
                      							"regions",
                      							lv_regions_11_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.ImplicitControlflowRegion");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:338:4: ( (lv_regions_12_0= ruleRegion ) )*
                    {
                    // InternalSCTX.g:338:4: ( (lv_regions_12_0= ruleRegion ) )*
                    loop9:
                    do {
                        int alt9=2;
                        int LA9_0 = input.LA(1);

                        if ( (LA9_0==RULE_COMMENT_ANNOTATION||LA9_0==24||(LA9_0>=45 && LA9_0<=46)||LA9_0==49||LA9_0==103) ) {
                            alt9=1;
                        }


                        switch (alt9) {
                    	case 1 :
                    	    // InternalSCTX.g:339:5: (lv_regions_12_0= ruleRegion )
                    	    {
                    	    // InternalSCTX.g:339:5: (lv_regions_12_0= ruleRegion )
                    	    // InternalSCTX.g:340:6: lv_regions_12_0= ruleRegion
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getRootStateAccess().getRegionsRegionParserRuleCall_8_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_14);
                    	    lv_regions_12_0=ruleRegion();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getRootStateRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"regions",
                    	      							lv_regions_12_0,
                    	      							"de.cau.cs.kieler.sccharts.text.SCTX.Region");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop9;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_13=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_13, grammarAccess.getRootStateAccess().getRightCurlyBracketKeyword_9());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRootState"


    // $ANTLR start "entryRuleState"
    // InternalSCTX.g:366:1: entryRuleState returns [EObject current=null] : iv_ruleState= ruleState EOF ;
    public final EObject entryRuleState() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleState = null;


        try {
            // InternalSCTX.g:366:46: (iv_ruleState= ruleState EOF )
            // InternalSCTX.g:367:2: iv_ruleState= ruleState EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStateRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleState=ruleState();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleState; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleState"


    // $ANTLR start "ruleState"
    // InternalSCTX.g:373:1: ruleState returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? ( (lv_final_2_0= 'final' ) )? ( (lv_violation_3_0= 'violation' ) )? ( (lv_connector_4_0= 'connector' ) )? ( ( 'state' )=>otherlv_5= 'state' ) ( (lv_name_6_0= RULE_ID ) ) ( (lv_label_7_0= RULE_STRING ) )? ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )* )? (otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+ )? otherlv_18= '{' ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_20_0= ruleLocalAction ) )* ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* ) otherlv_23= '}' ) )? ( (lv_outgoingTransitions_24_0= ruleTransition ) )* ) ;
    public final EObject ruleState() throws RecognitionException {
        EObject current = null;

        Token lv_initial_1_0=null;
        Token lv_final_2_0=null;
        Token lv_violation_3_0=null;
        Token lv_connector_4_0=null;
        Token otherlv_5=null;
        Token lv_name_6_0=null;
        Token lv_label_7_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_23=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_9_0 = null;

        EObject lv_schedule_11_0 = null;

        EObject lv_schedule_17_0 = null;

        EObject lv_declarations_19_0 = null;

        EObject lv_actions_20_0 = null;

        EObject lv_regions_21_0 = null;

        EObject lv_regions_22_0 = null;

        EObject lv_outgoingTransitions_24_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:379:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? ( (lv_final_2_0= 'final' ) )? ( (lv_violation_3_0= 'violation' ) )? ( (lv_connector_4_0= 'connector' ) )? ( ( 'state' )=>otherlv_5= 'state' ) ( (lv_name_6_0= RULE_ID ) ) ( (lv_label_7_0= RULE_STRING ) )? ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )* )? (otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+ )? otherlv_18= '{' ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_20_0= ruleLocalAction ) )* ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* ) otherlv_23= '}' ) )? ( (lv_outgoingTransitions_24_0= ruleTransition ) )* ) )
            // InternalSCTX.g:380:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? ( (lv_final_2_0= 'final' ) )? ( (lv_violation_3_0= 'violation' ) )? ( (lv_connector_4_0= 'connector' ) )? ( ( 'state' )=>otherlv_5= 'state' ) ( (lv_name_6_0= RULE_ID ) ) ( (lv_label_7_0= RULE_STRING ) )? ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )* )? (otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+ )? otherlv_18= '{' ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_20_0= ruleLocalAction ) )* ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* ) otherlv_23= '}' ) )? ( (lv_outgoingTransitions_24_0= ruleTransition ) )* )
            {
            // InternalSCTX.g:380:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? ( (lv_final_2_0= 'final' ) )? ( (lv_violation_3_0= 'violation' ) )? ( (lv_connector_4_0= 'connector' ) )? ( ( 'state' )=>otherlv_5= 'state' ) ( (lv_name_6_0= RULE_ID ) ) ( (lv_label_7_0= RULE_STRING ) )? ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )* )? (otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+ )? otherlv_18= '{' ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_20_0= ruleLocalAction ) )* ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* ) otherlv_23= '}' ) )? ( (lv_outgoingTransitions_24_0= ruleTransition ) )* )
            // InternalSCTX.g:381:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? ( (lv_final_2_0= 'final' ) )? ( (lv_violation_3_0= 'violation' ) )? ( (lv_connector_4_0= 'connector' ) )? ( ( 'state' )=>otherlv_5= 'state' ) ( (lv_name_6_0= RULE_ID ) ) ( (lv_label_7_0= RULE_STRING ) )? ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )* )? (otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+ )? otherlv_18= '{' ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_20_0= ruleLocalAction ) )* ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* ) otherlv_23= '}' ) )? ( (lv_outgoingTransitions_24_0= ruleTransition ) )*
            {
            // InternalSCTX.g:381:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop11:
            do {
                int alt11=2;
                int LA11_0 = input.LA(1);

                if ( (LA11_0==RULE_COMMENT_ANNOTATION||LA11_0==103) ) {
                    alt11=1;
                }


                switch (alt11) {
            	case 1 :
            	    // InternalSCTX.g:382:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:382:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:383:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getStateAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_15);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getStateRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop11;
                }
            } while (true);

            // InternalSCTX.g:400:3: ( (lv_initial_1_0= 'initial' ) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==23) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalSCTX.g:401:4: (lv_initial_1_0= 'initial' )
                    {
                    // InternalSCTX.g:401:4: (lv_initial_1_0= 'initial' )
                    // InternalSCTX.g:402:5: lv_initial_1_0= 'initial'
                    {
                    lv_initial_1_0=(Token)match(input,23,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_initial_1_0, grammarAccess.getStateAccess().getInitialInitialKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStateRule());
                      					}
                      					setWithLastConsumed(current, "initial", true, "initial");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:414:3: ( (lv_final_2_0= 'final' ) )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==24) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // InternalSCTX.g:415:4: (lv_final_2_0= 'final' )
                    {
                    // InternalSCTX.g:415:4: (lv_final_2_0= 'final' )
                    // InternalSCTX.g:416:5: lv_final_2_0= 'final'
                    {
                    lv_final_2_0=(Token)match(input,24,FollowSets000.FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_final_2_0, grammarAccess.getStateAccess().getFinalFinalKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStateRule());
                      					}
                      					setWithLastConsumed(current, "final", true, "final");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:428:3: ( (lv_violation_3_0= 'violation' ) )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==25) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // InternalSCTX.g:429:4: (lv_violation_3_0= 'violation' )
                    {
                    // InternalSCTX.g:429:4: (lv_violation_3_0= 'violation' )
                    // InternalSCTX.g:430:5: lv_violation_3_0= 'violation'
                    {
                    lv_violation_3_0=(Token)match(input,25,FollowSets000.FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_violation_3_0, grammarAccess.getStateAccess().getViolationViolationKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStateRule());
                      					}
                      					setWithLastConsumed(current, "violation", true, "violation");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:442:3: ( (lv_connector_4_0= 'connector' ) )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==26) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // InternalSCTX.g:443:4: (lv_connector_4_0= 'connector' )
                    {
                    // InternalSCTX.g:443:4: (lv_connector_4_0= 'connector' )
                    // InternalSCTX.g:444:5: lv_connector_4_0= 'connector'
                    {
                    lv_connector_4_0=(Token)match(input,26,FollowSets000.FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_connector_4_0, grammarAccess.getStateAccess().getConnectorConnectorKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStateRule());
                      					}
                      					setWithLastConsumed(current, "connector", true, "connector");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:456:3: ( ( 'state' )=>otherlv_5= 'state' )
            // InternalSCTX.g:457:4: ( 'state' )=>otherlv_5= 'state'
            {
            otherlv_5=(Token)match(input,27,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_5, grammarAccess.getStateAccess().getStateKeyword_5());
              			
            }

            }

            // InternalSCTX.g:463:3: ( (lv_name_6_0= RULE_ID ) )
            // InternalSCTX.g:464:4: (lv_name_6_0= RULE_ID )
            {
            // InternalSCTX.g:464:4: (lv_name_6_0= RULE_ID )
            // InternalSCTX.g:465:5: lv_name_6_0= RULE_ID
            {
            lv_name_6_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_6_0, grammarAccess.getStateAccess().getNameIDTerminalRuleCall_6_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getStateRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_6_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalSCTX.g:481:3: ( (lv_label_7_0= RULE_STRING ) )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==RULE_STRING) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // InternalSCTX.g:482:4: (lv_label_7_0= RULE_STRING )
                    {
                    // InternalSCTX.g:482:4: (lv_label_7_0= RULE_STRING )
                    // InternalSCTX.g:483:5: lv_label_7_0= RULE_STRING
                    {
                    lv_label_7_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_7_0, grammarAccess.getStateAccess().getLabelSTRINGTerminalRuleCall_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStateRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_7_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:499:3: ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )* )? (otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+ )? otherlv_18= '{' ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_20_0= ruleLocalAction ) )* ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* ) otherlv_23= '}' ) )?
            int alt27=3;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==28) ) {
                alt27=1;
            }
            else if ( (LA27_0==19||LA27_0==21||LA27_0==29) ) {
                alt27=2;
            }
            switch (alt27) {
                case 1 :
                    // InternalSCTX.g:500:4: (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )? )
                    {
                    // InternalSCTX.g:500:4: (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )? )
                    // InternalSCTX.g:501:5: otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )?
                    {
                    otherlv_8=(Token)match(input,28,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getStateAccess().getIsKeyword_8_0_0());
                      				
                    }
                    // InternalSCTX.g:505:5: ( (lv_reference_9_0= ruleScopeCall ) )
                    // InternalSCTX.g:506:6: (lv_reference_9_0= ruleScopeCall )
                    {
                    // InternalSCTX.g:506:6: (lv_reference_9_0= ruleScopeCall )
                    // InternalSCTX.g:507:7: lv_reference_9_0= ruleScopeCall
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getStateAccess().getReferenceScopeCallParserRuleCall_8_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_23);
                    lv_reference_9_0=ruleScopeCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getStateRule());
                      							}
                      							set(
                      								current,
                      								"reference",
                      								lv_reference_9_0,
                      								"de.cau.cs.kieler.sccharts.text.SCTX.ScopeCall");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:524:5: (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )?
                    int alt18=2;
                    int LA18_0 = input.LA(1);

                    if ( (LA18_0==29) ) {
                        alt18=1;
                    }
                    switch (alt18) {
                        case 1 :
                            // InternalSCTX.g:525:6: otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+
                            {
                            otherlv_10=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getStateAccess().getScheduleKeyword_8_0_2_0());
                              					
                            }
                            // InternalSCTX.g:529:6: ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+
                            int cnt17=0;
                            loop17:
                            do {
                                int alt17=2;
                                int LA17_0 = input.LA(1);

                                if ( (LA17_0==RULE_ID) ) {
                                    alt17=1;
                                }


                                switch (alt17) {
                            	case 1 :
                            	    // InternalSCTX.g:530:7: (lv_schedule_11_0= ruleScheduleObjectReference )
                            	    {
                            	    // InternalSCTX.g:530:7: (lv_schedule_11_0= ruleScheduleObjectReference )
                            	    // InternalSCTX.g:531:8: lv_schedule_11_0= ruleScheduleObjectReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getStateAccess().getScheduleScheduleObjectReferenceParserRuleCall_8_0_2_1_0());
                            	      							
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_24);
                            	    lv_schedule_11_0=ruleScheduleObjectReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getStateRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"schedule",
                            	      									lv_schedule_11_0,
                            	      									"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt17 >= 1 ) break loop17;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(17, input);
                                        throw eee;
                                }
                                cnt17++;
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:551:4: ( (otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )* )? (otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+ )? otherlv_18= '{' ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_20_0= ruleLocalAction ) )* ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* ) otherlv_23= '}' )
                    {
                    // InternalSCTX.g:551:4: ( (otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )* )? (otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+ )? otherlv_18= '{' ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_20_0= ruleLocalAction ) )* ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* ) otherlv_23= '}' )
                    // InternalSCTX.g:552:5: (otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )* )? (otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+ )? otherlv_18= '{' ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_20_0= ruleLocalAction ) )* ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* ) otherlv_23= '}'
                    {
                    // InternalSCTX.g:552:5: (otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )* )?
                    int alt20=2;
                    int LA20_0 = input.LA(1);

                    if ( (LA20_0==19) ) {
                        alt20=1;
                    }
                    switch (alt20) {
                        case 1 :
                            // InternalSCTX.g:553:6: otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )*
                            {
                            otherlv_12=(Token)match(input,19,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_12, grammarAccess.getStateAccess().getExtendsKeyword_8_1_0_0());
                              					
                            }
                            // InternalSCTX.g:557:6: ( (otherlv_13= RULE_ID ) )
                            // InternalSCTX.g:558:7: (otherlv_13= RULE_ID )
                            {
                            // InternalSCTX.g:558:7: (otherlv_13= RULE_ID )
                            // InternalSCTX.g:559:8: otherlv_13= RULE_ID
                            {
                            if ( state.backtracking==0 ) {

                              								/* */
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getStateRule());
                              								}
                              							
                            }
                            otherlv_13=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(otherlv_13, grammarAccess.getStateAccess().getBaseStatesStateCrossReference_8_1_0_1_0());
                              							
                            }

                            }


                            }

                            // InternalSCTX.g:573:6: (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )*
                            loop19:
                            do {
                                int alt19=2;
                                int LA19_0 = input.LA(1);

                                if ( (LA19_0==20) ) {
                                    alt19=1;
                                }


                                switch (alt19) {
                            	case 1 :
                            	    // InternalSCTX.g:574:7: otherlv_14= ',' ( (otherlv_15= RULE_ID ) )
                            	    {
                            	    otherlv_14=(Token)match(input,20,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_14, grammarAccess.getStateAccess().getCommaKeyword_8_1_0_2_0());
                            	      						
                            	    }
                            	    // InternalSCTX.g:578:7: ( (otherlv_15= RULE_ID ) )
                            	    // InternalSCTX.g:579:8: (otherlv_15= RULE_ID )
                            	    {
                            	    // InternalSCTX.g:579:8: (otherlv_15= RULE_ID )
                            	    // InternalSCTX.g:580:9: otherlv_15= RULE_ID
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									/* */
                            	      								
                            	    }
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElement(grammarAccess.getStateRule());
                            	      									}
                            	      								
                            	    }
                            	    otherlv_15=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_25); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									newLeafNode(otherlv_15, grammarAccess.getStateAccess().getBaseStatesStateCrossReference_8_1_0_2_1_0());
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop19;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalSCTX.g:596:5: (otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+ )?
                    int alt22=2;
                    int LA22_0 = input.LA(1);

                    if ( (LA22_0==29) ) {
                        alt22=1;
                    }
                    switch (alt22) {
                        case 1 :
                            // InternalSCTX.g:597:6: otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+
                            {
                            otherlv_16=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_16, grammarAccess.getStateAccess().getScheduleKeyword_8_1_1_0());
                              					
                            }
                            // InternalSCTX.g:601:6: ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+
                            int cnt21=0;
                            loop21:
                            do {
                                int alt21=2;
                                int LA21_0 = input.LA(1);

                                if ( (LA21_0==RULE_ID) ) {
                                    alt21=1;
                                }


                                switch (alt21) {
                            	case 1 :
                            	    // InternalSCTX.g:602:7: (lv_schedule_17_0= ruleScheduleObjectReference )
                            	    {
                            	    // InternalSCTX.g:602:7: (lv_schedule_17_0= ruleScheduleObjectReference )
                            	    // InternalSCTX.g:603:8: lv_schedule_17_0= ruleScheduleObjectReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getStateAccess().getScheduleScheduleObjectReferenceParserRuleCall_8_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_26);
                            	    lv_schedule_17_0=ruleScheduleObjectReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getStateRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"schedule",
                            	      									lv_schedule_17_0,
                            	      									"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt21 >= 1 ) break loop21;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(21, input);
                                        throw eee;
                                }
                                cnt21++;
                            } while (true);


                            }
                            break;

                    }

                    otherlv_18=(Token)match(input,21,FollowSets000.FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_18, grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_8_1_2());
                      				
                    }
                    // InternalSCTX.g:625:5: ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )*
                    loop23:
                    do {
                        int alt23=2;
                        alt23 = dfa23.predict(input);
                        switch (alt23) {
                    	case 1 :
                    	    // InternalSCTX.g:626:6: (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
                    	    {
                    	    // InternalSCTX.g:626:6: (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
                    	    // InternalSCTX.g:627:7: lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getStateAccess().getDeclarationsDeclarationOrMethodWithKeywordWOSemicolonParserRuleCall_8_1_3_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_11);
                    	    lv_declarations_19_0=ruleDeclarationOrMethodWithKeywordWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getStateRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_19_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.DeclarationOrMethodWithKeywordWOSemicolon");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop23;
                        }
                    } while (true);

                    // InternalSCTX.g:644:5: ( (lv_actions_20_0= ruleLocalAction ) )*
                    loop24:
                    do {
                        int alt24=2;
                        alt24 = dfa24.predict(input);
                        switch (alt24) {
                    	case 1 :
                    	    // InternalSCTX.g:645:6: (lv_actions_20_0= ruleLocalAction )
                    	    {
                    	    // InternalSCTX.g:645:6: (lv_actions_20_0= ruleLocalAction )
                    	    // InternalSCTX.g:646:7: lv_actions_20_0= ruleLocalAction
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getStateAccess().getActionsLocalActionParserRuleCall_8_1_4_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_12);
                    	    lv_actions_20_0=ruleLocalAction();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getStateRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"actions",
                    	      								lv_actions_20_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.LocalAction");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop24;
                        }
                    } while (true);

                    // InternalSCTX.g:663:5: ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* )
                    int alt26=2;
                    alt26 = dfa26.predict(input);
                    switch (alt26) {
                        case 1 :
                            // InternalSCTX.g:664:6: ( (lv_regions_21_0= ruleImplicitControlflowRegion ) )
                            {
                            // InternalSCTX.g:664:6: ( (lv_regions_21_0= ruleImplicitControlflowRegion ) )
                            // InternalSCTX.g:665:7: (lv_regions_21_0= ruleImplicitControlflowRegion )
                            {
                            // InternalSCTX.g:665:7: (lv_regions_21_0= ruleImplicitControlflowRegion )
                            // InternalSCTX.g:666:8: lv_regions_21_0= ruleImplicitControlflowRegion
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getStateAccess().getRegionsImplicitControlflowRegionParserRuleCall_8_1_5_0_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_13);
                            lv_regions_21_0=ruleImplicitControlflowRegion();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getStateRule());
                              								}
                              								add(
                              									current,
                              									"regions",
                              									lv_regions_21_0,
                              									"de.cau.cs.kieler.sccharts.text.SCTX.ImplicitControlflowRegion");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:684:6: ( (lv_regions_22_0= ruleRegion ) )*
                            {
                            // InternalSCTX.g:684:6: ( (lv_regions_22_0= ruleRegion ) )*
                            loop25:
                            do {
                                int alt25=2;
                                int LA25_0 = input.LA(1);

                                if ( (LA25_0==RULE_COMMENT_ANNOTATION||LA25_0==24||(LA25_0>=45 && LA25_0<=46)||LA25_0==49||LA25_0==103) ) {
                                    alt25=1;
                                }


                                switch (alt25) {
                            	case 1 :
                            	    // InternalSCTX.g:685:7: (lv_regions_22_0= ruleRegion )
                            	    {
                            	    // InternalSCTX.g:685:7: (lv_regions_22_0= ruleRegion )
                            	    // InternalSCTX.g:686:8: lv_regions_22_0= ruleRegion
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getStateAccess().getRegionsRegionParserRuleCall_8_1_5_1_0());
                            	      							
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_14);
                            	    lv_regions_22_0=ruleRegion();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getStateRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"regions",
                            	      									lv_regions_22_0,
                            	      									"de.cau.cs.kieler.sccharts.text.SCTX.Region");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop25;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_23=(Token)match(input,22,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_23, grammarAccess.getStateAccess().getRightCurlyBracketKeyword_8_1_6());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:710:3: ( (lv_outgoingTransitions_24_0= ruleTransition ) )*
            loop28:
            do {
                int alt28=2;
                alt28 = dfa28.predict(input);
                switch (alt28) {
            	case 1 :
            	    // InternalSCTX.g:711:4: (lv_outgoingTransitions_24_0= ruleTransition )
            	    {
            	    // InternalSCTX.g:711:4: (lv_outgoingTransitions_24_0= ruleTransition )
            	    // InternalSCTX.g:712:5: lv_outgoingTransitions_24_0= ruleTransition
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getStateAccess().getOutgoingTransitionsTransitionParserRuleCall_9_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_27);
            	    lv_outgoingTransitions_24_0=ruleTransition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getStateRule());
            	      					}
            	      					add(
            	      						current,
            	      						"outgoingTransitions",
            	      						lv_outgoingTransitions_24_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Transition");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop28;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleState"


    // $ANTLR start "entryRuleImplicitState"
    // InternalSCTX.g:733:1: entryRuleImplicitState returns [EObject current=null] : iv_ruleImplicitState= ruleImplicitState EOF ;
    public final EObject entryRuleImplicitState() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImplicitState = null;


        try {
            // InternalSCTX.g:733:54: (iv_ruleImplicitState= ruleImplicitState EOF )
            // InternalSCTX.g:734:2: iv_ruleImplicitState= ruleImplicitState EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImplicitStateRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleImplicitState=ruleImplicitState();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImplicitState; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImplicitState"


    // $ANTLR start "ruleImplicitState"
    // InternalSCTX.g:740:1: ruleImplicitState returns [EObject current=null] : ( () ( (lv_regions_1_0= ruleRegion ) )+ ) ;
    public final EObject ruleImplicitState() throws RecognitionException {
        EObject current = null;

        EObject lv_regions_1_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:746:2: ( ( () ( (lv_regions_1_0= ruleRegion ) )+ ) )
            // InternalSCTX.g:747:2: ( () ( (lv_regions_1_0= ruleRegion ) )+ )
            {
            // InternalSCTX.g:747:2: ( () ( (lv_regions_1_0= ruleRegion ) )+ )
            // InternalSCTX.g:748:3: () ( (lv_regions_1_0= ruleRegion ) )+
            {
            // InternalSCTX.g:748:3: ()
            // InternalSCTX.g:749:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getImplicitStateAccess().getStateAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:758:3: ( (lv_regions_1_0= ruleRegion ) )+
            int cnt29=0;
            loop29:
            do {
                int alt29=2;
                int LA29_0 = input.LA(1);

                if ( (LA29_0==RULE_COMMENT_ANNOTATION||LA29_0==24||(LA29_0>=45 && LA29_0<=46)||LA29_0==49||LA29_0==103) ) {
                    alt29=1;
                }


                switch (alt29) {
            	case 1 :
            	    // InternalSCTX.g:759:4: (lv_regions_1_0= ruleRegion )
            	    {
            	    // InternalSCTX.g:759:4: (lv_regions_1_0= ruleRegion )
            	    // InternalSCTX.g:760:5: lv_regions_1_0= ruleRegion
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getImplicitStateAccess().getRegionsRegionParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_28);
            	    lv_regions_1_0=ruleRegion();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getImplicitStateRule());
            	      					}
            	      					add(
            	      						current,
            	      						"regions",
            	      						lv_regions_1_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Region");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt29 >= 1 ) break loop29;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(29, input);
                        throw eee;
                }
                cnt29++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImplicitState"


    // $ANTLR start "entryRuleScopeCall"
    // InternalSCTX.g:781:1: entryRuleScopeCall returns [EObject current=null] : iv_ruleScopeCall= ruleScopeCall EOF ;
    public final EObject entryRuleScopeCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScopeCall = null;


        try {
            // InternalSCTX.g:781:50: (iv_ruleScopeCall= ruleScopeCall EOF )
            // InternalSCTX.g:782:2: iv_ruleScopeCall= ruleScopeCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScopeCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScopeCall=ruleScopeCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScopeCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScopeCall"


    // $ANTLR start "ruleScopeCall"
    // InternalSCTX.g:788:1: ruleScopeCall returns [EObject current=null] : ( ( (lv_super_0_0= 'super.' ) )? ( (otherlv_1= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleScopeParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) ) )* otherlv_6= ')' ) | (otherlv_7= '(' otherlv_8= ')' ) )? ) ;
    public final EObject ruleScopeCall() throws RecognitionException {
        EObject current = null;

        Token lv_super_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:794:2: ( ( ( (lv_super_0_0= 'super.' ) )? ( (otherlv_1= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleScopeParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) ) )* otherlv_6= ')' ) | (otherlv_7= '(' otherlv_8= ')' ) )? ) )
            // InternalSCTX.g:795:2: ( ( (lv_super_0_0= 'super.' ) )? ( (otherlv_1= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleScopeParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) ) )* otherlv_6= ')' ) | (otherlv_7= '(' otherlv_8= ')' ) )? )
            {
            // InternalSCTX.g:795:2: ( ( (lv_super_0_0= 'super.' ) )? ( (otherlv_1= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleScopeParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) ) )* otherlv_6= ')' ) | (otherlv_7= '(' otherlv_8= ')' ) )? )
            // InternalSCTX.g:796:3: ( (lv_super_0_0= 'super.' ) )? ( (otherlv_1= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleScopeParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) ) )* otherlv_6= ')' ) | (otherlv_7= '(' otherlv_8= ')' ) )?
            {
            // InternalSCTX.g:796:3: ( (lv_super_0_0= 'super.' ) )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==30) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // InternalSCTX.g:797:4: (lv_super_0_0= 'super.' )
                    {
                    // InternalSCTX.g:797:4: (lv_super_0_0= 'super.' )
                    // InternalSCTX.g:798:5: lv_super_0_0= 'super.'
                    {
                    lv_super_0_0=(Token)match(input,30,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_super_0_0, grammarAccess.getScopeCallAccess().getSuperSuperKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getScopeCallRule());
                      					}
                      					setWithLastConsumed(current, "super", true, "super.");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:810:3: ( (otherlv_1= RULE_ID ) )
            // InternalSCTX.g:811:4: (otherlv_1= RULE_ID )
            {
            // InternalSCTX.g:811:4: (otherlv_1= RULE_ID )
            // InternalSCTX.g:812:5: otherlv_1= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getScopeCallRule());
              					}
              				
            }
            otherlv_1=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getScopeCallAccess().getScopeScopeCrossReference_1_0());
              				
            }

            }


            }

            // InternalSCTX.g:826:3: ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleScopeParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) ) )* otherlv_6= ')' ) | (otherlv_7= '(' otherlv_8= ')' ) )?
            int alt32=3;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==31) ) {
                int LA32_1 = input.LA(2);

                if ( ((LA32_1>=RULE_STRING && LA32_1<=RULE_COMMENT_ANNOTATION)||LA32_1==21||LA32_1==31||(LA32_1>=33 && LA32_1<=34)||LA32_1==80||LA32_1==85||LA32_1==94||LA32_1==99||LA32_1==103||(LA32_1>=142 && LA32_1<=144)) ) {
                    alt32=1;
                }
                else if ( (LA32_1==32) ) {
                    alt32=2;
                }
            }
            switch (alt32) {
                case 1 :
                    // InternalSCTX.g:827:4: (otherlv_2= '(' ( (lv_parameters_3_0= ruleScopeParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) ) )* otherlv_6= ')' )
                    {
                    // InternalSCTX.g:827:4: (otherlv_2= '(' ( (lv_parameters_3_0= ruleScopeParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) ) )* otherlv_6= ')' )
                    // InternalSCTX.g:828:5: otherlv_2= '(' ( (lv_parameters_3_0= ruleScopeParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) ) )* otherlv_6= ')'
                    {
                    otherlv_2=(Token)match(input,31,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getScopeCallAccess().getLeftParenthesisKeyword_2_0_0());
                      				
                    }
                    // InternalSCTX.g:832:5: ( (lv_parameters_3_0= ruleScopeParameter ) )
                    // InternalSCTX.g:833:6: (lv_parameters_3_0= ruleScopeParameter )
                    {
                    // InternalSCTX.g:833:6: (lv_parameters_3_0= ruleScopeParameter )
                    // InternalSCTX.g:834:7: lv_parameters_3_0= ruleScopeParameter
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getScopeCallAccess().getParametersScopeParameterParserRuleCall_2_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_parameters_3_0=ruleScopeParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getScopeCallRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_3_0,
                      								"de.cau.cs.kieler.sccharts.text.SCTX.ScopeParameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:851:5: (otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) ) )*
                    loop31:
                    do {
                        int alt31=2;
                        int LA31_0 = input.LA(1);

                        if ( (LA31_0==20) ) {
                            alt31=1;
                        }


                        switch (alt31) {
                    	case 1 :
                    	    // InternalSCTX.g:852:6: otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) )
                    	    {
                    	    otherlv_4=(Token)match(input,20,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getScopeCallAccess().getCommaKeyword_2_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCTX.g:856:6: ( (lv_parameters_5_0= ruleScopeParameter ) )
                    	    // InternalSCTX.g:857:7: (lv_parameters_5_0= ruleScopeParameter )
                    	    {
                    	    // InternalSCTX.g:857:7: (lv_parameters_5_0= ruleScopeParameter )
                    	    // InternalSCTX.g:858:8: lv_parameters_5_0= ruleScopeParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getScopeCallAccess().getParametersScopeParameterParserRuleCall_2_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_31);
                    	    lv_parameters_5_0=ruleScopeParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getScopeCallRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_5_0,
                    	      									"de.cau.cs.kieler.sccharts.text.SCTX.ScopeParameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop31;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getScopeCallAccess().getRightParenthesisKeyword_2_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:882:4: (otherlv_7= '(' otherlv_8= ')' )
                    {
                    // InternalSCTX.g:882:4: (otherlv_7= '(' otherlv_8= ')' )
                    // InternalSCTX.g:883:5: otherlv_7= '(' otherlv_8= ')'
                    {
                    otherlv_7=(Token)match(input,31,FollowSets000.FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getScopeCallAccess().getLeftParenthesisKeyword_2_1_0());
                      				
                    }
                    otherlv_8=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getScopeCallAccess().getRightParenthesisKeyword_2_1_1());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScopeCall"


    // $ANTLR start "entryRuleScopeParameter"
    // InternalSCTX.g:897:1: entryRuleScopeParameter returns [EObject current=null] : iv_ruleScopeParameter= ruleScopeParameter EOF ;
    public final EObject entryRuleScopeParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScopeParameter = null;


        try {
            // InternalSCTX.g:897:55: (iv_ruleScopeParameter= ruleScopeParameter EOF )
            // InternalSCTX.g:898:2: iv_ruleScopeParameter= ruleScopeParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScopeParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScopeParameter=ruleScopeParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScopeParameter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScopeParameter"


    // $ANTLR start "ruleScopeParameter"
    // InternalSCTX.g:904:1: ruleScopeParameter returns [EObject current=null] : ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? ) ;
    public final EObject ruleScopeParameter() throws RecognitionException {
        EObject current = null;

        Token lv_pureOutput_0_0=null;
        Token lv_callByReference_1_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_expression_2_0 = null;

        EObject lv_explicitBindingIndices_6_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:910:2: ( ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? ) )
            // InternalSCTX.g:911:2: ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? )
            {
            // InternalSCTX.g:911:2: ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? )
            // InternalSCTX.g:912:3: ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )?
            {
            // InternalSCTX.g:912:3: ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==33) ) {
                int LA34_1 = input.LA(2);

                if ( (LA34_1==34) ) {
                    alt34=1;
                }
            }
            else if ( (LA34_0==34) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // InternalSCTX.g:913:4: ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) )
                    {
                    // InternalSCTX.g:913:4: ( (lv_pureOutput_0_0= '!' ) )?
                    int alt33=2;
                    int LA33_0 = input.LA(1);

                    if ( (LA33_0==33) ) {
                        alt33=1;
                    }
                    switch (alt33) {
                        case 1 :
                            // InternalSCTX.g:914:5: (lv_pureOutput_0_0= '!' )
                            {
                            // InternalSCTX.g:914:5: (lv_pureOutput_0_0= '!' )
                            // InternalSCTX.g:915:6: lv_pureOutput_0_0= '!'
                            {
                            lv_pureOutput_0_0=(Token)match(input,33,FollowSets000.FOLLOW_33); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_pureOutput_0_0, grammarAccess.getScopeParameterAccess().getPureOutputExclamationMarkKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getScopeParameterRule());
                              						}
                              						setWithLastConsumed(current, "pureOutput", true, "!");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:927:4: ( (lv_callByReference_1_0= '&' ) )
                    // InternalSCTX.g:928:5: (lv_callByReference_1_0= '&' )
                    {
                    // InternalSCTX.g:928:5: (lv_callByReference_1_0= '&' )
                    // InternalSCTX.g:929:6: lv_callByReference_1_0= '&'
                    {
                    lv_callByReference_1_0=(Token)match(input,34,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_callByReference_1_0, grammarAccess.getScopeParameterAccess().getCallByReferenceAmpersandKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getScopeParameterRule());
                      						}
                      						setWithLastConsumed(current, "callByReference", true, "&");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:942:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalSCTX.g:943:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalSCTX.g:943:4: (lv_expression_2_0= ruleExpression )
            // InternalSCTX.g:944:5: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScopeParameterAccess().getExpressionExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_34);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getScopeParameterRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:961:3: (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==35) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalSCTX.g:962:4: otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )*
                    {
                    otherlv_3=(Token)match(input,35,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getScopeParameterAccess().getToKeyword_2_0());
                      			
                    }
                    // InternalSCTX.g:966:4: ( (otherlv_4= RULE_ID ) )
                    // InternalSCTX.g:967:5: (otherlv_4= RULE_ID )
                    {
                    // InternalSCTX.g:967:5: (otherlv_4= RULE_ID )
                    // InternalSCTX.g:968:6: otherlv_4= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getScopeParameterRule());
                      						}
                      					
                    }
                    otherlv_4=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_4, grammarAccess.getScopeParameterAccess().getExplicitBindingValuedObjectCrossReference_2_1_0());
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:982:4: (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )*
                    loop35:
                    do {
                        int alt35=2;
                        int LA35_0 = input.LA(1);

                        if ( (LA35_0==36) ) {
                            alt35=1;
                        }


                        switch (alt35) {
                    	case 1 :
                    	    // InternalSCTX.g:983:5: otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']'
                    	    {
                    	    otherlv_5=(Token)match(input,36,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getScopeParameterAccess().getLeftSquareBracketKeyword_2_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:987:5: ( (lv_explicitBindingIndices_6_0= ruleExpression ) )
                    	    // InternalSCTX.g:988:6: (lv_explicitBindingIndices_6_0= ruleExpression )
                    	    {
                    	    // InternalSCTX.g:988:6: (lv_explicitBindingIndices_6_0= ruleExpression )
                    	    // InternalSCTX.g:989:7: lv_explicitBindingIndices_6_0= ruleExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getScopeParameterAccess().getExplicitBindingIndicesExpressionParserRuleCall_2_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_36);
                    	    lv_explicitBindingIndices_6_0=ruleExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getScopeParameterRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"explicitBindingIndices",
                    	      								lv_explicitBindingIndices_6_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    otherlv_7=(Token)match(input,37,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_7, grammarAccess.getScopeParameterAccess().getRightSquareBracketKeyword_2_2_2());
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop35;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScopeParameter"


    // $ANTLR start "entryRuleBoolScheduleExpression"
    // InternalSCTX.g:1016:1: entryRuleBoolScheduleExpression returns [EObject current=null] : iv_ruleBoolScheduleExpression= ruleBoolScheduleExpression EOF ;
    public final EObject entryRuleBoolScheduleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBoolScheduleExpression = null;


        try {
            // InternalSCTX.g:1016:63: (iv_ruleBoolScheduleExpression= ruleBoolScheduleExpression EOF )
            // InternalSCTX.g:1017:2: iv_ruleBoolScheduleExpression= ruleBoolScheduleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBoolScheduleExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBoolScheduleExpression=ruleBoolScheduleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBoolScheduleExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBoolScheduleExpression"


    // $ANTLR start "ruleBoolScheduleExpression"
    // InternalSCTX.g:1023:1: ruleBoolScheduleExpression returns [EObject current=null] : (this_LogicalOrExpression_0= ruleLogicalOrExpression (otherlv_1= 'schedule' ( (lv_schedule_2_0= ruleScheduleObjectReference ) ) )? ) ;
    public final EObject ruleBoolScheduleExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_LogicalOrExpression_0 = null;

        EObject lv_schedule_2_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:1029:2: ( (this_LogicalOrExpression_0= ruleLogicalOrExpression (otherlv_1= 'schedule' ( (lv_schedule_2_0= ruleScheduleObjectReference ) ) )? ) )
            // InternalSCTX.g:1030:2: (this_LogicalOrExpression_0= ruleLogicalOrExpression (otherlv_1= 'schedule' ( (lv_schedule_2_0= ruleScheduleObjectReference ) ) )? )
            {
            // InternalSCTX.g:1030:2: (this_LogicalOrExpression_0= ruleLogicalOrExpression (otherlv_1= 'schedule' ( (lv_schedule_2_0= ruleScheduleObjectReference ) ) )? )
            // InternalSCTX.g:1031:3: this_LogicalOrExpression_0= ruleLogicalOrExpression (otherlv_1= 'schedule' ( (lv_schedule_2_0= ruleScheduleObjectReference ) ) )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBoolScheduleExpressionAccess().getLogicalOrExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_37);
            this_LogicalOrExpression_0=ruleLogicalOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LogicalOrExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:1042:3: (otherlv_1= 'schedule' ( (lv_schedule_2_0= ruleScheduleObjectReference ) ) )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==29) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // InternalSCTX.g:1043:4: otherlv_1= 'schedule' ( (lv_schedule_2_0= ruleScheduleObjectReference ) )
                    {
                    otherlv_1=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getBoolScheduleExpressionAccess().getScheduleKeyword_1_0());
                      			
                    }
                    // InternalSCTX.g:1047:4: ( (lv_schedule_2_0= ruleScheduleObjectReference ) )
                    // InternalSCTX.g:1048:5: (lv_schedule_2_0= ruleScheduleObjectReference )
                    {
                    // InternalSCTX.g:1048:5: (lv_schedule_2_0= ruleScheduleObjectReference )
                    // InternalSCTX.g:1049:6: lv_schedule_2_0= ruleScheduleObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBoolScheduleExpressionAccess().getScheduleScheduleObjectReferenceParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_schedule_2_0=ruleScheduleObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBoolScheduleExpressionRule());
                      						}
                      						add(
                      							current,
                      							"schedule",
                      							lv_schedule_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBoolScheduleExpression"


    // $ANTLR start "entryRuleTransition"
    // InternalSCTX.g:1071:1: entryRuleTransition returns [EObject current=null] : iv_ruleTransition= ruleTransition EOF ;
    public final EObject entryRuleTransition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTransition = null;


        try {
            // InternalSCTX.g:1071:51: (iv_ruleTransition= ruleTransition EOF )
            // InternalSCTX.g:1072:2: iv_ruleTransition= ruleTransition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTransitionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTransition=ruleTransition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTransition; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTransition"


    // $ANTLR start "ruleTransition"
    // InternalSCTX.g:1078:1: ruleTransition returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? (otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) | ( (lv_trigger_6_0= ruleAtomicExpression ) ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? ( (lv_nondeterministic_9_0= 'nondeterministic' ) )? )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )? ( (lv_preemption_14_0= rulePreemptionType ) ) ( (otherlv_15= RULE_ID ) ) ( (lv_deferred_16_0= 'deferred' ) )? ( (lv_history_17_0= ruleHistoryType ) )? (otherlv_18= 'label' ( (lv_label_19_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleTransition() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token lv_triggerDelay_4_0=null;
        Token otherlv_7=null;
        Token lv_triggerProbability_8_0=null;
        Token lv_nondeterministic_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_15=null;
        Token lv_deferred_16_0=null;
        Token otherlv_18=null;
        Token lv_label_19_0=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_delay_2_0 = null;

        EObject lv_trigger_5_0 = null;

        EObject lv_trigger_6_0 = null;

        EObject lv_effects_11_0 = null;

        EObject lv_effects_13_0 = null;

        Enumerator lv_preemption_14_0 = null;

        Enumerator lv_history_17_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:1084:2: ( ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? (otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) | ( (lv_trigger_6_0= ruleAtomicExpression ) ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? ( (lv_nondeterministic_9_0= 'nondeterministic' ) )? )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )? ( (lv_preemption_14_0= rulePreemptionType ) ) ( (otherlv_15= RULE_ID ) ) ( (lv_deferred_16_0= 'deferred' ) )? ( (lv_history_17_0= ruleHistoryType ) )? (otherlv_18= 'label' ( (lv_label_19_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:1085:2: ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? (otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) | ( (lv_trigger_6_0= ruleAtomicExpression ) ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? ( (lv_nondeterministic_9_0= 'nondeterministic' ) )? )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )? ( (lv_preemption_14_0= rulePreemptionType ) ) ( (otherlv_15= RULE_ID ) ) ( (lv_deferred_16_0= 'deferred' ) )? ( (lv_history_17_0= ruleHistoryType ) )? (otherlv_18= 'label' ( (lv_label_19_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:1085:2: ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? (otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) | ( (lv_trigger_6_0= ruleAtomicExpression ) ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? ( (lv_nondeterministic_9_0= 'nondeterministic' ) )? )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )? ( (lv_preemption_14_0= rulePreemptionType ) ) ( (otherlv_15= RULE_ID ) ) ( (lv_deferred_16_0= 'deferred' ) )? ( (lv_history_17_0= ruleHistoryType ) )? (otherlv_18= 'label' ( (lv_label_19_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:1086:3: () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? (otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) | ( (lv_trigger_6_0= ruleAtomicExpression ) ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? ( (lv_nondeterministic_9_0= 'nondeterministic' ) )? )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )? ( (lv_preemption_14_0= rulePreemptionType ) ) ( (otherlv_15= RULE_ID ) ) ( (lv_deferred_16_0= 'deferred' ) )? ( (lv_history_17_0= ruleHistoryType ) )? (otherlv_18= 'label' ( (lv_label_19_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:1086:3: ()
            // InternalSCTX.g:1087:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getTransitionAccess().getTransitionAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:1096:3: ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==RULE_COMMENT_ANNOTATION||LA38_0==103) ) {
                    alt38=1;
                }


                switch (alt38) {
            	case 1 :
            	    // InternalSCTX.g:1097:4: (lv_annotations_1_0= ruleRestrictedTypeAnnotation )
            	    {
            	    // InternalSCTX.g:1097:4: (lv_annotations_1_0= ruleRestrictedTypeAnnotation )
            	    // InternalSCTX.g:1098:5: lv_annotations_1_0= ruleRestrictedTypeAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getTransitionAccess().getAnnotationsRestrictedTypeAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_38);
            	    lv_annotations_1_0=ruleRestrictedTypeAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getTransitionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.RestrictedTypeAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);

            // InternalSCTX.g:1115:3: ( (lv_delay_2_0= ruleDelayType ) )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( ((LA39_0>=106 && LA39_0<=109)) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalSCTX.g:1116:4: (lv_delay_2_0= ruleDelayType )
                    {
                    // InternalSCTX.g:1116:4: (lv_delay_2_0= ruleDelayType )
                    // InternalSCTX.g:1117:5: lv_delay_2_0= ruleDelayType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTransitionAccess().getDelayDelayTypeEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_38);
                    lv_delay_2_0=ruleDelayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTransitionRule());
                      					}
                      					set(
                      						current,
                      						"delay",
                      						lv_delay_2_0,
                      						"de.cau.cs.kieler.sccharts.text.SCTX.DelayType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:1134:3: (otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) | ( (lv_trigger_6_0= ruleAtomicExpression ) ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? ( (lv_nondeterministic_9_0= 'nondeterministic' ) )? )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==38) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalSCTX.g:1135:4: otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) | ( (lv_trigger_6_0= ruleAtomicExpression ) ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? ( (lv_nondeterministic_9_0= 'nondeterministic' ) )?
                    {
                    otherlv_3=(Token)match(input,38,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getTransitionAccess().getIfKeyword_3_0());
                      			
                    }
                    // InternalSCTX.g:1139:4: ( (lv_triggerDelay_4_0= RULE_INT ) )?
                    int alt40=2;
                    alt40 = dfa40.predict(input);
                    switch (alt40) {
                        case 1 :
                            // InternalSCTX.g:1140:5: (lv_triggerDelay_4_0= RULE_INT )
                            {
                            // InternalSCTX.g:1140:5: (lv_triggerDelay_4_0= RULE_INT )
                            // InternalSCTX.g:1141:6: lv_triggerDelay_4_0= RULE_INT
                            {
                            lv_triggerDelay_4_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_39); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_triggerDelay_4_0, grammarAccess.getTransitionAccess().getTriggerDelayINTTerminalRuleCall_3_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getTransitionRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"triggerDelay",
                              							lv_triggerDelay_4_0,
                              							"de.cau.cs.kieler.annotations.Annotations.INT");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:1157:4: ( ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) | ( (lv_trigger_6_0= ruleAtomicExpression ) ) )
                    int alt41=2;
                    alt41 = dfa41.predict(input);
                    switch (alt41) {
                        case 1 :
                            // InternalSCTX.g:1158:5: ( (lv_trigger_5_0= ruleBoolScheduleExpression ) )
                            {
                            // InternalSCTX.g:1158:5: ( (lv_trigger_5_0= ruleBoolScheduleExpression ) )
                            // InternalSCTX.g:1159:6: (lv_trigger_5_0= ruleBoolScheduleExpression )
                            {
                            // InternalSCTX.g:1159:6: (lv_trigger_5_0= ruleBoolScheduleExpression )
                            // InternalSCTX.g:1160:7: lv_trigger_5_0= ruleBoolScheduleExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getTransitionAccess().getTriggerBoolScheduleExpressionParserRuleCall_3_2_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_40);
                            lv_trigger_5_0=ruleBoolScheduleExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getTransitionRule());
                              							}
                              							set(
                              								current,
                              								"trigger",
                              								lv_trigger_5_0,
                              								"de.cau.cs.kieler.sccharts.text.SCTX.BoolScheduleExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:1178:5: ( (lv_trigger_6_0= ruleAtomicExpression ) )
                            {
                            // InternalSCTX.g:1178:5: ( (lv_trigger_6_0= ruleAtomicExpression ) )
                            // InternalSCTX.g:1179:6: (lv_trigger_6_0= ruleAtomicExpression )
                            {
                            // InternalSCTX.g:1179:6: (lv_trigger_6_0= ruleAtomicExpression )
                            // InternalSCTX.g:1180:7: lv_trigger_6_0= ruleAtomicExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getTransitionAccess().getTriggerAtomicExpressionParserRuleCall_3_2_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_40);
                            lv_trigger_6_0=ruleAtomicExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getTransitionRule());
                              							}
                              							set(
                              								current,
                              								"trigger",
                              								lv_trigger_6_0,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.AtomicExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:1198:4: (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )?
                    int alt42=2;
                    int LA42_0 = input.LA(1);

                    if ( (LA42_0==39) ) {
                        alt42=1;
                    }
                    switch (alt42) {
                        case 1 :
                            // InternalSCTX.g:1199:5: otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) )
                            {
                            otherlv_7=(Token)match(input,39,FollowSets000.FOLLOW_41); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_7, grammarAccess.getTransitionAccess().getPrKeyword_3_3_0());
                              				
                            }
                            // InternalSCTX.g:1203:5: ( (lv_triggerProbability_8_0= RULE_FLOAT ) )
                            // InternalSCTX.g:1204:6: (lv_triggerProbability_8_0= RULE_FLOAT )
                            {
                            // InternalSCTX.g:1204:6: (lv_triggerProbability_8_0= RULE_FLOAT )
                            // InternalSCTX.g:1205:7: lv_triggerProbability_8_0= RULE_FLOAT
                            {
                            lv_triggerProbability_8_0=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_42); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_triggerProbability_8_0, grammarAccess.getTransitionAccess().getTriggerProbabilityFLOATTerminalRuleCall_3_3_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getTransitionRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"triggerProbability",
                              								lv_triggerProbability_8_0,
                              								"de.cau.cs.kieler.annotations.Annotations.FLOAT");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:1222:4: ( (lv_nondeterministic_9_0= 'nondeterministic' ) )?
                    int alt43=2;
                    int LA43_0 = input.LA(1);

                    if ( (LA43_0==40) ) {
                        alt43=1;
                    }
                    switch (alt43) {
                        case 1 :
                            // InternalSCTX.g:1223:5: (lv_nondeterministic_9_0= 'nondeterministic' )
                            {
                            // InternalSCTX.g:1223:5: (lv_nondeterministic_9_0= 'nondeterministic' )
                            // InternalSCTX.g:1224:6: lv_nondeterministic_9_0= 'nondeterministic'
                            {
                            lv_nondeterministic_9_0=(Token)match(input,40,FollowSets000.FOLLOW_38); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_nondeterministic_9_0, grammarAccess.getTransitionAccess().getNondeterministicNondeterministicKeyword_3_4_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getTransitionRule());
                              						}
                              						setWithLastConsumed(current, "nondeterministic", true, "nondeterministic");
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalSCTX.g:1237:3: (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==41) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalSCTX.g:1238:4: otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )*
                    {
                    otherlv_10=(Token)match(input,41,FollowSets000.FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getTransitionAccess().getDoKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:1242:4: ( (lv_effects_11_0= ruleEffect ) )
                    // InternalSCTX.g:1243:5: (lv_effects_11_0= ruleEffect )
                    {
                    // InternalSCTX.g:1243:5: (lv_effects_11_0= ruleEffect )
                    // InternalSCTX.g:1244:6: lv_effects_11_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTransitionAccess().getEffectsEffectParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_44);
                    lv_effects_11_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTransitionRule());
                      						}
                      						add(
                      							current,
                      							"effects",
                      							lv_effects_11_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:1261:4: (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )*
                    loop45:
                    do {
                        int alt45=2;
                        int LA45_0 = input.LA(1);

                        if ( (LA45_0==42) ) {
                            alt45=1;
                        }


                        switch (alt45) {
                    	case 1 :
                    	    // InternalSCTX.g:1262:5: otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) )
                    	    {
                    	    otherlv_12=(Token)match(input,42,FollowSets000.FOLLOW_43); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_12, grammarAccess.getTransitionAccess().getSemicolonKeyword_4_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:1266:5: ( (lv_effects_13_0= ruleEffect ) )
                    	    // InternalSCTX.g:1267:6: (lv_effects_13_0= ruleEffect )
                    	    {
                    	    // InternalSCTX.g:1267:6: (lv_effects_13_0= ruleEffect )
                    	    // InternalSCTX.g:1268:7: lv_effects_13_0= ruleEffect
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTransitionAccess().getEffectsEffectParserRuleCall_4_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_44);
                    	    lv_effects_13_0=ruleEffect();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTransitionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"effects",
                    	      								lv_effects_13_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop45;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:1287:3: ( (lv_preemption_14_0= rulePreemptionType ) )
            // InternalSCTX.g:1288:4: (lv_preemption_14_0= rulePreemptionType )
            {
            // InternalSCTX.g:1288:4: (lv_preemption_14_0= rulePreemptionType )
            // InternalSCTX.g:1289:5: lv_preemption_14_0= rulePreemptionType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTransitionAccess().getPreemptionPreemptionTypeEnumRuleCall_5_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_preemption_14_0=rulePreemptionType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTransitionRule());
              					}
              					set(
              						current,
              						"preemption",
              						lv_preemption_14_0,
              						"de.cau.cs.kieler.sccharts.text.SCTX.PreemptionType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:1306:3: ( (otherlv_15= RULE_ID ) )
            // InternalSCTX.g:1307:4: (otherlv_15= RULE_ID )
            {
            // InternalSCTX.g:1307:4: (otherlv_15= RULE_ID )
            // InternalSCTX.g:1308:5: otherlv_15= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTransitionRule());
              					}
              				
            }
            otherlv_15=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_45); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_15, grammarAccess.getTransitionAccess().getTargetStateStateCrossReference_6_0());
              				
            }

            }


            }

            // InternalSCTX.g:1322:3: ( (lv_deferred_16_0= 'deferred' ) )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==43) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalSCTX.g:1323:4: (lv_deferred_16_0= 'deferred' )
                    {
                    // InternalSCTX.g:1323:4: (lv_deferred_16_0= 'deferred' )
                    // InternalSCTX.g:1324:5: lv_deferred_16_0= 'deferred'
                    {
                    lv_deferred_16_0=(Token)match(input,43,FollowSets000.FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_deferred_16_0, grammarAccess.getTransitionAccess().getDeferredDeferredKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTransitionRule());
                      					}
                      					setWithLastConsumed(current, "deferred", true, "deferred");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:1336:3: ( (lv_history_17_0= ruleHistoryType ) )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( ((LA48_0>=110 && LA48_0<=112)) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalSCTX.g:1337:4: (lv_history_17_0= ruleHistoryType )
                    {
                    // InternalSCTX.g:1337:4: (lv_history_17_0= ruleHistoryType )
                    // InternalSCTX.g:1338:5: lv_history_17_0= ruleHistoryType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTransitionAccess().getHistoryHistoryTypeEnumRuleCall_8_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_47);
                    lv_history_17_0=ruleHistoryType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTransitionRule());
                      					}
                      					set(
                      						current,
                      						"history",
                      						lv_history_17_0,
                      						"de.cau.cs.kieler.sccharts.text.SCTX.HistoryType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:1355:3: (otherlv_18= 'label' ( (lv_label_19_0= RULE_STRING ) ) )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==44) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalSCTX.g:1356:4: otherlv_18= 'label' ( (lv_label_19_0= RULE_STRING ) )
                    {
                    otherlv_18=(Token)match(input,44,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getTransitionAccess().getLabelKeyword_9_0());
                      			
                    }
                    // InternalSCTX.g:1360:4: ( (lv_label_19_0= RULE_STRING ) )
                    // InternalSCTX.g:1361:5: (lv_label_19_0= RULE_STRING )
                    {
                    // InternalSCTX.g:1361:5: (lv_label_19_0= RULE_STRING )
                    // InternalSCTX.g:1362:6: lv_label_19_0= RULE_STRING
                    {
                    lv_label_19_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_19_0, grammarAccess.getTransitionAccess().getLabelSTRINGTerminalRuleCall_9_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getTransitionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_19_0,
                      							"de.cau.cs.kieler.annotations.Annotations.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTransition"


    // $ANTLR start "entryRuleRegion"
    // InternalSCTX.g:1383:1: entryRuleRegion returns [EObject current=null] : iv_ruleRegion= ruleRegion EOF ;
    public final EObject entryRuleRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRegion = null;


        try {
            // InternalSCTX.g:1383:47: (iv_ruleRegion= ruleRegion EOF )
            // InternalSCTX.g:1384:2: iv_ruleRegion= ruleRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRegionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRegion=ruleRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRegion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRegion"


    // $ANTLR start "ruleRegion"
    // InternalSCTX.g:1390:1: ruleRegion returns [EObject current=null] : (this_ControlflowRegion_0= ruleControlflowRegion | this_DataflowRegion_1= ruleDataflowRegion ) ;
    public final EObject ruleRegion() throws RecognitionException {
        EObject current = null;

        EObject this_ControlflowRegion_0 = null;

        EObject this_DataflowRegion_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:1396:2: ( (this_ControlflowRegion_0= ruleControlflowRegion | this_DataflowRegion_1= ruleDataflowRegion ) )
            // InternalSCTX.g:1397:2: (this_ControlflowRegion_0= ruleControlflowRegion | this_DataflowRegion_1= ruleDataflowRegion )
            {
            // InternalSCTX.g:1397:2: (this_ControlflowRegion_0= ruleControlflowRegion | this_DataflowRegion_1= ruleDataflowRegion )
            int alt50=2;
            switch ( input.LA(1) ) {
            case RULE_COMMENT_ANNOTATION:
                {
                int LA50_1 = input.LA(2);

                if ( (synpred54_InternalSCTX()) ) {
                    alt50=1;
                }
                else if ( (true) ) {
                    alt50=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 50, 1, input);

                    throw nvae;
                }
                }
                break;
            case 103:
                {
                int LA50_2 = input.LA(2);

                if ( (synpred54_InternalSCTX()) ) {
                    alt50=1;
                }
                else if ( (true) ) {
                    alt50=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 50, 2, input);

                    throw nvae;
                }
                }
                break;
            case 45:
                {
                int LA50_3 = input.LA(2);

                if ( (synpred54_InternalSCTX()) ) {
                    alt50=1;
                }
                else if ( (true) ) {
                    alt50=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 50, 3, input);

                    throw nvae;
                }
                }
                break;
            case 24:
            case 46:
                {
                alt50=1;
                }
                break;
            case 49:
                {
                alt50=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }

            switch (alt50) {
                case 1 :
                    // InternalSCTX.g:1398:3: this_ControlflowRegion_0= ruleControlflowRegion
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRegionAccess().getControlflowRegionParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ControlflowRegion_0=ruleControlflowRegion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ControlflowRegion_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:1410:3: this_DataflowRegion_1= ruleDataflowRegion
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRegionAccess().getDataflowRegionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DataflowRegion_1=ruleDataflowRegion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DataflowRegion_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRegion"


    // $ANTLR start "entryRuleImplicitControlflowRegion"
    // InternalSCTX.g:1425:1: entryRuleImplicitControlflowRegion returns [EObject current=null] : iv_ruleImplicitControlflowRegion= ruleImplicitControlflowRegion EOF ;
    public final EObject entryRuleImplicitControlflowRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImplicitControlflowRegion = null;


        try {
            // InternalSCTX.g:1425:66: (iv_ruleImplicitControlflowRegion= ruleImplicitControlflowRegion EOF )
            // InternalSCTX.g:1426:2: iv_ruleImplicitControlflowRegion= ruleImplicitControlflowRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImplicitControlflowRegionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleImplicitControlflowRegion=ruleImplicitControlflowRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImplicitControlflowRegion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImplicitControlflowRegion"


    // $ANTLR start "ruleImplicitControlflowRegion"
    // InternalSCTX.g:1432:1: ruleImplicitControlflowRegion returns [EObject current=null] : ( () ( (lv_states_1_0= ruleState ) )+ ) ;
    public final EObject ruleImplicitControlflowRegion() throws RecognitionException {
        EObject current = null;

        EObject lv_states_1_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:1438:2: ( ( () ( (lv_states_1_0= ruleState ) )+ ) )
            // InternalSCTX.g:1439:2: ( () ( (lv_states_1_0= ruleState ) )+ )
            {
            // InternalSCTX.g:1439:2: ( () ( (lv_states_1_0= ruleState ) )+ )
            // InternalSCTX.g:1440:3: () ( (lv_states_1_0= ruleState ) )+
            {
            // InternalSCTX.g:1440:3: ()
            // InternalSCTX.g:1441:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getImplicitControlflowRegionAccess().getControlflowRegionAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:1450:3: ( (lv_states_1_0= ruleState ) )+
            int cnt51=0;
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( (LA51_0==RULE_COMMENT_ANNOTATION||(LA51_0>=23 && LA51_0<=27)||LA51_0==103) ) {
                    alt51=1;
                }


                switch (alt51) {
            	case 1 :
            	    // InternalSCTX.g:1451:4: (lv_states_1_0= ruleState )
            	    {
            	    // InternalSCTX.g:1451:4: (lv_states_1_0= ruleState )
            	    // InternalSCTX.g:1452:5: lv_states_1_0= ruleState
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getImplicitControlflowRegionAccess().getStatesStateParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_49);
            	    lv_states_1_0=ruleState();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getImplicitControlflowRegionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"states",
            	      						lv_states_1_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.State");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt51 >= 1 ) break loop51;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(51, input);
                        throw eee;
                }
                cnt51++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImplicitControlflowRegion"


    // $ANTLR start "entryRuleControlflowRegion"
    // InternalSCTX.g:1473:1: entryRuleControlflowRegion returns [EObject current=null] : iv_ruleControlflowRegion= ruleControlflowRegion EOF ;
    public final EObject entryRuleControlflowRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleControlflowRegion = null;


        try {
            // InternalSCTX.g:1473:58: (iv_ruleControlflowRegion= ruleControlflowRegion EOF )
            // InternalSCTX.g:1474:2: iv_ruleControlflowRegion= ruleControlflowRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getControlflowRegionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleControlflowRegion=ruleControlflowRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleControlflowRegion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleControlflowRegion"


    // $ANTLR start "ruleControlflowRegion"
    // InternalSCTX.g:1480:1: ruleControlflowRegion returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_override_2_0= 'override' ) )? ( (lv_final_3_0= 'final' ) )? otherlv_4= 'region' ( (lv_name_5_0= ruleExtendedID ) )? ( (lv_label_6_0= RULE_STRING ) )? ( (otherlv_7= 'is' ( (lv_reference_8_0= ruleScopeCall ) ) (otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )? )? (otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )? )? (otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+ )? ( (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' ) | (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* ) ) ) ) ) ;
    public final EObject ruleControlflowRegion() throws RecognitionException {
        EObject current = null;

        Token lv_override_2_0=null;
        Token lv_final_3_0=null;
        Token otherlv_4=null;
        Token lv_label_6_0=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token otherlv_30=null;
        Token otherlv_31=null;
        EObject lv_annotations_1_0 = null;

        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_reference_8_0 = null;

        EObject lv_counterVariable_10_0 = null;

        EObject lv_forStart_12_0 = null;

        EObject lv_forEnd_14_0 = null;

        EObject lv_schedule_16_0 = null;

        EObject lv_counterVariable_18_0 = null;

        EObject lv_forStart_20_0 = null;

        EObject lv_forEnd_22_0 = null;

        EObject lv_schedule_24_0 = null;

        EObject lv_declarations_26_0 = null;

        EObject lv_actions_27_0 = null;

        EObject lv_states_28_0 = null;

        EObject lv_states_29_0 = null;

        EObject lv_declarations_32_0 = null;

        EObject lv_actions_33_0 = null;

        EObject lv_states_34_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:1486:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_override_2_0= 'override' ) )? ( (lv_final_3_0= 'final' ) )? otherlv_4= 'region' ( (lv_name_5_0= ruleExtendedID ) )? ( (lv_label_6_0= RULE_STRING ) )? ( (otherlv_7= 'is' ( (lv_reference_8_0= ruleScopeCall ) ) (otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )? )? (otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )? )? (otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+ )? ( (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' ) | (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* ) ) ) ) ) )
            // InternalSCTX.g:1487:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_override_2_0= 'override' ) )? ( (lv_final_3_0= 'final' ) )? otherlv_4= 'region' ( (lv_name_5_0= ruleExtendedID ) )? ( (lv_label_6_0= RULE_STRING ) )? ( (otherlv_7= 'is' ( (lv_reference_8_0= ruleScopeCall ) ) (otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )? )? (otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )? )? (otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+ )? ( (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' ) | (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* ) ) ) ) )
            {
            // InternalSCTX.g:1487:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_override_2_0= 'override' ) )? ( (lv_final_3_0= 'final' ) )? otherlv_4= 'region' ( (lv_name_5_0= ruleExtendedID ) )? ( (lv_label_6_0= RULE_STRING ) )? ( (otherlv_7= 'is' ( (lv_reference_8_0= ruleScopeCall ) ) (otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )? )? (otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )? )? (otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+ )? ( (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' ) | (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* ) ) ) ) )
            // InternalSCTX.g:1488:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_override_2_0= 'override' ) )? ( (lv_final_3_0= 'final' ) )? otherlv_4= 'region' ( (lv_name_5_0= ruleExtendedID ) )? ( (lv_label_6_0= RULE_STRING ) )? ( (otherlv_7= 'is' ( (lv_reference_8_0= ruleScopeCall ) ) (otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )? )? (otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )? )? (otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+ )? ( (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' ) | (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* ) ) ) )
            {
            // InternalSCTX.g:1488:3: ()
            // InternalSCTX.g:1489:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getControlflowRegionAccess().getControlflowRegionAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:1498:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop52:
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( (LA52_0==RULE_COMMENT_ANNOTATION||LA52_0==103) ) {
                    alt52=1;
                }


                switch (alt52) {
            	case 1 :
            	    // InternalSCTX.g:1499:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:1499:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:1500:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getControlflowRegionAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_50);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);

            // InternalSCTX.g:1517:3: ( (lv_override_2_0= 'override' ) )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==45) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalSCTX.g:1518:4: (lv_override_2_0= 'override' )
                    {
                    // InternalSCTX.g:1518:4: (lv_override_2_0= 'override' )
                    // InternalSCTX.g:1519:5: lv_override_2_0= 'override'
                    {
                    lv_override_2_0=(Token)match(input,45,FollowSets000.FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_override_2_0, grammarAccess.getControlflowRegionAccess().getOverrideOverrideKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getControlflowRegionRule());
                      					}
                      					setWithLastConsumed(current, "override", true, "override");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:1531:3: ( (lv_final_3_0= 'final' ) )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==24) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalSCTX.g:1532:4: (lv_final_3_0= 'final' )
                    {
                    // InternalSCTX.g:1532:4: (lv_final_3_0= 'final' )
                    // InternalSCTX.g:1533:5: lv_final_3_0= 'final'
                    {
                    lv_final_3_0=(Token)match(input,24,FollowSets000.FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_final_3_0, grammarAccess.getControlflowRegionAccess().getFinalFinalKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getControlflowRegionRule());
                      					}
                      					setWithLastConsumed(current, "final", true, "final");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,46,FollowSets000.FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getControlflowRegionAccess().getRegionKeyword_4());
              		
            }
            // InternalSCTX.g:1549:3: ( (lv_name_5_0= ruleExtendedID ) )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==RULE_ID) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // InternalSCTX.g:1550:4: (lv_name_5_0= ruleExtendedID )
                    {
                    // InternalSCTX.g:1550:4: (lv_name_5_0= ruleExtendedID )
                    // InternalSCTX.g:1551:5: lv_name_5_0= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getControlflowRegionAccess().getNameExtendedIDParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_54);
                    lv_name_5_0=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_5_0,
                      						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:1568:3: ( (lv_label_6_0= RULE_STRING ) )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==RULE_STRING) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // InternalSCTX.g:1569:4: (lv_label_6_0= RULE_STRING )
                    {
                    // InternalSCTX.g:1569:4: (lv_label_6_0= RULE_STRING )
                    // InternalSCTX.g:1570:5: lv_label_6_0= RULE_STRING
                    {
                    lv_label_6_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_6_0, grammarAccess.getControlflowRegionAccess().getLabelSTRINGTerminalRuleCall_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getControlflowRegionRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_6_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:1586:3: ( (otherlv_7= 'is' ( (lv_reference_8_0= ruleScopeCall ) ) (otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )? )? (otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )? )? (otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+ )? ( (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' ) | (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* ) ) ) )
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==28) ) {
                alt73=1;
            }
            else if ( (LA73_0==21||LA73_0==29||(LA73_0>=47 && LA73_0<=48)) ) {
                alt73=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 73, 0, input);

                throw nvae;
            }
            switch (alt73) {
                case 1 :
                    // InternalSCTX.g:1587:4: (otherlv_7= 'is' ( (lv_reference_8_0= ruleScopeCall ) ) (otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )? )? (otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+ )? )
                    {
                    // InternalSCTX.g:1587:4: (otherlv_7= 'is' ( (lv_reference_8_0= ruleScopeCall ) ) (otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )? )? (otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+ )? )
                    // InternalSCTX.g:1588:5: otherlv_7= 'is' ( (lv_reference_8_0= ruleScopeCall ) ) (otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )? )? (otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+ )?
                    {
                    otherlv_7=(Token)match(input,28,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getControlflowRegionAccess().getIsKeyword_7_0_0());
                      				
                    }
                    // InternalSCTX.g:1592:5: ( (lv_reference_8_0= ruleScopeCall ) )
                    // InternalSCTX.g:1593:6: (lv_reference_8_0= ruleScopeCall )
                    {
                    // InternalSCTX.g:1593:6: (lv_reference_8_0= ruleScopeCall )
                    // InternalSCTX.g:1594:7: lv_reference_8_0= ruleScopeCall
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getControlflowRegionAccess().getReferenceScopeCallParserRuleCall_7_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_56);
                    lv_reference_8_0=ruleScopeCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                      							}
                      							set(
                      								current,
                      								"reference",
                      								lv_reference_8_0,
                      								"de.cau.cs.kieler.sccharts.text.SCTX.ScopeCall");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:1611:5: (otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )? )?
                    int alt58=2;
                    int LA58_0 = input.LA(1);

                    if ( (LA58_0==47) ) {
                        alt58=1;
                    }
                    switch (alt58) {
                        case 1 :
                            // InternalSCTX.g:1612:6: otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )?
                            {
                            otherlv_9=(Token)match(input,47,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_9, grammarAccess.getControlflowRegionAccess().getForKeyword_7_0_2_0());
                              					
                            }
                            // InternalSCTX.g:1616:6: ( (lv_counterVariable_10_0= ruleCounterVariable ) )
                            // InternalSCTX.g:1617:7: (lv_counterVariable_10_0= ruleCounterVariable )
                            {
                            // InternalSCTX.g:1617:7: (lv_counterVariable_10_0= ruleCounterVariable )
                            // InternalSCTX.g:1618:8: lv_counterVariable_10_0= ruleCounterVariable
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getControlflowRegionAccess().getCounterVariableCounterVariableParserRuleCall_7_0_2_1_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_57);
                            lv_counterVariable_10_0=ruleCounterVariable();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                              								}
                              								set(
                              									current,
                              									"counterVariable",
                              									lv_counterVariable_10_0,
                              									"de.cau.cs.kieler.sccharts.text.SCTX.CounterVariable");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_11=(Token)match(input,48,FollowSets000.FOLLOW_58); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_11, grammarAccess.getControlflowRegionAccess().getColonKeyword_7_0_2_2());
                              					
                            }
                            // InternalSCTX.g:1639:6: ( (lv_forStart_12_0= ruleIntOrReference ) )
                            // InternalSCTX.g:1640:7: (lv_forStart_12_0= ruleIntOrReference )
                            {
                            // InternalSCTX.g:1640:7: (lv_forStart_12_0= ruleIntOrReference )
                            // InternalSCTX.g:1641:8: lv_forStart_12_0= ruleIntOrReference
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getControlflowRegionAccess().getForStartIntOrReferenceParserRuleCall_7_0_2_3_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_59);
                            lv_forStart_12_0=ruleIntOrReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                              								}
                              								set(
                              									current,
                              									"forStart",
                              									lv_forStart_12_0,
                              									"de.cau.cs.kieler.sccharts.text.SCTX.IntOrReference");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalSCTX.g:1658:6: (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )?
                            int alt57=2;
                            int LA57_0 = input.LA(1);

                            if ( (LA57_0==35) ) {
                                alt57=1;
                            }
                            switch (alt57) {
                                case 1 :
                                    // InternalSCTX.g:1659:7: otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) )
                                    {
                                    otherlv_13=(Token)match(input,35,FollowSets000.FOLLOW_58); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_13, grammarAccess.getControlflowRegionAccess().getToKeyword_7_0_2_4_0());
                                      						
                                    }
                                    // InternalSCTX.g:1663:7: ( (lv_forEnd_14_0= ruleIntOrReference ) )
                                    // InternalSCTX.g:1664:8: (lv_forEnd_14_0= ruleIntOrReference )
                                    {
                                    // InternalSCTX.g:1664:8: (lv_forEnd_14_0= ruleIntOrReference )
                                    // InternalSCTX.g:1665:9: lv_forEnd_14_0= ruleIntOrReference
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getControlflowRegionAccess().getForEndIntOrReferenceParserRuleCall_7_0_2_4_1_0());
                                      								
                                    }
                                    pushFollow(FollowSets000.FOLLOW_37);
                                    lv_forEnd_14_0=ruleIntOrReference();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                                      									}
                                      									set(
                                      										current,
                                      										"forEnd",
                                      										lv_forEnd_14_0,
                                      										"de.cau.cs.kieler.sccharts.text.SCTX.IntOrReference");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:1684:5: (otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+ )?
                    int alt60=2;
                    int LA60_0 = input.LA(1);

                    if ( (LA60_0==29) ) {
                        alt60=1;
                    }
                    switch (alt60) {
                        case 1 :
                            // InternalSCTX.g:1685:6: otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+
                            {
                            otherlv_15=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_15, grammarAccess.getControlflowRegionAccess().getScheduleKeyword_7_0_3_0());
                              					
                            }
                            // InternalSCTX.g:1689:6: ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+
                            int cnt59=0;
                            loop59:
                            do {
                                int alt59=2;
                                int LA59_0 = input.LA(1);

                                if ( (LA59_0==RULE_ID) ) {
                                    alt59=1;
                                }


                                switch (alt59) {
                            	case 1 :
                            	    // InternalSCTX.g:1690:7: (lv_schedule_16_0= ruleScheduleObjectReference )
                            	    {
                            	    // InternalSCTX.g:1690:7: (lv_schedule_16_0= ruleScheduleObjectReference )
                            	    // InternalSCTX.g:1691:8: lv_schedule_16_0= ruleScheduleObjectReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getControlflowRegionAccess().getScheduleScheduleObjectReferenceParserRuleCall_7_0_3_1_0());
                            	      							
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_60);
                            	    lv_schedule_16_0=ruleScheduleObjectReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"schedule",
                            	      									lv_schedule_16_0,
                            	      									"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt59 >= 1 ) break loop59;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(59, input);
                                        throw eee;
                                }
                                cnt59++;
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:1711:4: ( (otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )? )? (otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+ )? ( (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' ) | (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* ) ) )
                    {
                    // InternalSCTX.g:1711:4: ( (otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )? )? (otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+ )? ( (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' ) | (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* ) ) )
                    // InternalSCTX.g:1712:5: (otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )? )? (otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+ )? ( (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' ) | (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* ) )
                    {
                    // InternalSCTX.g:1712:5: (otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )? )?
                    int alt62=2;
                    int LA62_0 = input.LA(1);

                    if ( (LA62_0==47) ) {
                        alt62=1;
                    }
                    switch (alt62) {
                        case 1 :
                            // InternalSCTX.g:1713:6: otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )?
                            {
                            otherlv_17=(Token)match(input,47,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_17, grammarAccess.getControlflowRegionAccess().getForKeyword_7_1_0_0());
                              					
                            }
                            // InternalSCTX.g:1717:6: ( (lv_counterVariable_18_0= ruleCounterVariable ) )
                            // InternalSCTX.g:1718:7: (lv_counterVariable_18_0= ruleCounterVariable )
                            {
                            // InternalSCTX.g:1718:7: (lv_counterVariable_18_0= ruleCounterVariable )
                            // InternalSCTX.g:1719:8: lv_counterVariable_18_0= ruleCounterVariable
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getControlflowRegionAccess().getCounterVariableCounterVariableParserRuleCall_7_1_0_1_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_57);
                            lv_counterVariable_18_0=ruleCounterVariable();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                              								}
                              								set(
                              									current,
                              									"counterVariable",
                              									lv_counterVariable_18_0,
                              									"de.cau.cs.kieler.sccharts.text.SCTX.CounterVariable");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_19=(Token)match(input,48,FollowSets000.FOLLOW_58); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_19, grammarAccess.getControlflowRegionAccess().getColonKeyword_7_1_0_2());
                              					
                            }
                            // InternalSCTX.g:1740:6: ( (lv_forStart_20_0= ruleIntOrReference ) )
                            // InternalSCTX.g:1741:7: (lv_forStart_20_0= ruleIntOrReference )
                            {
                            // InternalSCTX.g:1741:7: (lv_forStart_20_0= ruleIntOrReference )
                            // InternalSCTX.g:1742:8: lv_forStart_20_0= ruleIntOrReference
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getControlflowRegionAccess().getForStartIntOrReferenceParserRuleCall_7_1_0_3_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_61);
                            lv_forStart_20_0=ruleIntOrReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                              								}
                              								set(
                              									current,
                              									"forStart",
                              									lv_forStart_20_0,
                              									"de.cau.cs.kieler.sccharts.text.SCTX.IntOrReference");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalSCTX.g:1759:6: (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )?
                            int alt61=2;
                            int LA61_0 = input.LA(1);

                            if ( (LA61_0==35) ) {
                                alt61=1;
                            }
                            switch (alt61) {
                                case 1 :
                                    // InternalSCTX.g:1760:7: otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) )
                                    {
                                    otherlv_21=(Token)match(input,35,FollowSets000.FOLLOW_58); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_21, grammarAccess.getControlflowRegionAccess().getToKeyword_7_1_0_4_0());
                                      						
                                    }
                                    // InternalSCTX.g:1764:7: ( (lv_forEnd_22_0= ruleIntOrReference ) )
                                    // InternalSCTX.g:1765:8: (lv_forEnd_22_0= ruleIntOrReference )
                                    {
                                    // InternalSCTX.g:1765:8: (lv_forEnd_22_0= ruleIntOrReference )
                                    // InternalSCTX.g:1766:9: lv_forEnd_22_0= ruleIntOrReference
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getControlflowRegionAccess().getForEndIntOrReferenceParserRuleCall_7_1_0_4_1_0());
                                      								
                                    }
                                    pushFollow(FollowSets000.FOLLOW_62);
                                    lv_forEnd_22_0=ruleIntOrReference();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                                      									}
                                      									set(
                                      										current,
                                      										"forEnd",
                                      										lv_forEnd_22_0,
                                      										"de.cau.cs.kieler.sccharts.text.SCTX.IntOrReference");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:1785:5: (otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+ )?
                    int alt64=2;
                    int LA64_0 = input.LA(1);

                    if ( (LA64_0==29) ) {
                        alt64=1;
                    }
                    switch (alt64) {
                        case 1 :
                            // InternalSCTX.g:1786:6: otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+
                            {
                            otherlv_23=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_23, grammarAccess.getControlflowRegionAccess().getScheduleKeyword_7_1_1_0());
                              					
                            }
                            // InternalSCTX.g:1790:6: ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+
                            int cnt63=0;
                            loop63:
                            do {
                                int alt63=2;
                                int LA63_0 = input.LA(1);

                                if ( (LA63_0==RULE_ID) ) {
                                    alt63=1;
                                }


                                switch (alt63) {
                            	case 1 :
                            	    // InternalSCTX.g:1791:7: (lv_schedule_24_0= ruleScheduleObjectReference )
                            	    {
                            	    // InternalSCTX.g:1791:7: (lv_schedule_24_0= ruleScheduleObjectReference )
                            	    // InternalSCTX.g:1792:8: lv_schedule_24_0= ruleScheduleObjectReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getControlflowRegionAccess().getScheduleScheduleObjectReferenceParserRuleCall_7_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_63);
                            	    lv_schedule_24_0=ruleScheduleObjectReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"schedule",
                            	      									lv_schedule_24_0,
                            	      									"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt63 >= 1 ) break loop63;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(63, input);
                                        throw eee;
                                }
                                cnt63++;
                            } while (true);


                            }
                            break;

                    }

                    // InternalSCTX.g:1810:5: ( (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' ) | (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* ) )
                    int alt72=2;
                    int LA72_0 = input.LA(1);

                    if ( (LA72_0==21) ) {
                        alt72=1;
                    }
                    else if ( (LA72_0==48) ) {
                        alt72=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 72, 0, input);

                        throw nvae;
                    }
                    switch (alt72) {
                        case 1 :
                            // InternalSCTX.g:1811:6: (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' )
                            {
                            // InternalSCTX.g:1811:6: (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' )
                            // InternalSCTX.g:1812:7: otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}'
                            {
                            otherlv_25=(Token)match(input,21,FollowSets000.FOLLOW_64); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_25, grammarAccess.getControlflowRegionAccess().getLeftCurlyBracketKeyword_7_1_2_0_0());
                              						
                            }
                            // InternalSCTX.g:1816:7: ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )*
                            loop65:
                            do {
                                int alt65=2;
                                alt65 = dfa65.predict(input);
                                switch (alt65) {
                            	case 1 :
                            	    // InternalSCTX.g:1817:8: (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
                            	    {
                            	    // InternalSCTX.g:1817:8: (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
                            	    // InternalSCTX.g:1818:9: lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getControlflowRegionAccess().getDeclarationsDeclarationOrMethodWithKeywordWOSemicolonParserRuleCall_7_1_2_0_1_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_64);
                            	    lv_declarations_26_0=ruleDeclarationOrMethodWithKeywordWOSemicolon();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"declarations",
                            	      										lv_declarations_26_0,
                            	      										"de.cau.cs.kieler.sccharts.text.SCTX.DeclarationOrMethodWithKeywordWOSemicolon");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop65;
                                }
                            } while (true);

                            // InternalSCTX.g:1835:7: ( (lv_actions_27_0= ruleLocalAction ) )*
                            loop66:
                            do {
                                int alt66=2;
                                alt66 = dfa66.predict(input);
                                switch (alt66) {
                            	case 1 :
                            	    // InternalSCTX.g:1836:8: (lv_actions_27_0= ruleLocalAction )
                            	    {
                            	    // InternalSCTX.g:1836:8: (lv_actions_27_0= ruleLocalAction )
                            	    // InternalSCTX.g:1837:9: lv_actions_27_0= ruleLocalAction
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getControlflowRegionAccess().getActionsLocalActionParserRuleCall_7_1_2_0_2_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_65);
                            	    lv_actions_27_0=ruleLocalAction();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"actions",
                            	      										lv_actions_27_0,
                            	      										"de.cau.cs.kieler.sccharts.text.SCTX.LocalAction");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop66;
                                }
                            } while (true);

                            // InternalSCTX.g:1854:7: ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ )
                            int alt68=2;
                            alt68 = dfa68.predict(input);
                            switch (alt68) {
                                case 1 :
                                    // InternalSCTX.g:1855:8: ( (lv_states_28_0= ruleImplicitState ) )
                                    {
                                    // InternalSCTX.g:1855:8: ( (lv_states_28_0= ruleImplicitState ) )
                                    // InternalSCTX.g:1856:9: (lv_states_28_0= ruleImplicitState )
                                    {
                                    // InternalSCTX.g:1856:9: (lv_states_28_0= ruleImplicitState )
                                    // InternalSCTX.g:1857:10: lv_states_28_0= ruleImplicitState
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getControlflowRegionAccess().getStatesImplicitStateParserRuleCall_7_1_2_0_3_0_0());
                                      									
                                    }
                                    pushFollow(FollowSets000.FOLLOW_13);
                                    lv_states_28_0=ruleImplicitState();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                                      										}
                                      										add(
                                      											current,
                                      											"states",
                                      											lv_states_28_0,
                                      											"de.cau.cs.kieler.sccharts.text.SCTX.ImplicitState");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalSCTX.g:1875:8: ( (lv_states_29_0= ruleState ) )+
                                    {
                                    // InternalSCTX.g:1875:8: ( (lv_states_29_0= ruleState ) )+
                                    int cnt67=0;
                                    loop67:
                                    do {
                                        int alt67=2;
                                        int LA67_0 = input.LA(1);

                                        if ( (LA67_0==RULE_COMMENT_ANNOTATION||(LA67_0>=23 && LA67_0<=27)||LA67_0==103) ) {
                                            alt67=1;
                                        }


                                        switch (alt67) {
                                    	case 1 :
                                    	    // InternalSCTX.g:1876:9: (lv_states_29_0= ruleState )
                                    	    {
                                    	    // InternalSCTX.g:1876:9: (lv_states_29_0= ruleState )
                                    	    // InternalSCTX.g:1877:10: lv_states_29_0= ruleState
                                    	    {
                                    	    if ( state.backtracking==0 ) {

                                    	      										newCompositeNode(grammarAccess.getControlflowRegionAccess().getStatesStateParserRuleCall_7_1_2_0_3_1_0());
                                    	      									
                                    	    }
                                    	    pushFollow(FollowSets000.FOLLOW_66);
                                    	    lv_states_29_0=ruleState();

                                    	    state._fsp--;
                                    	    if (state.failed) return current;
                                    	    if ( state.backtracking==0 ) {

                                    	      										if (current==null) {
                                    	      											current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                                    	      										}
                                    	      										add(
                                    	      											current,
                                    	      											"states",
                                    	      											lv_states_29_0,
                                    	      											"de.cau.cs.kieler.sccharts.text.SCTX.State");
                                    	      										afterParserOrEnumRuleCall();
                                    	      									
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    if ( cnt67 >= 1 ) break loop67;
                                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                                EarlyExitException eee =
                                                    new EarlyExitException(67, input);
                                                throw eee;
                                        }
                                        cnt67++;
                                    } while (true);


                                    }
                                    break;

                            }

                            otherlv_30=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_30, grammarAccess.getControlflowRegionAccess().getRightCurlyBracketKeyword_7_1_2_0_4());
                              						
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:1901:6: (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* )
                            {
                            // InternalSCTX.g:1901:6: (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* )
                            // InternalSCTX.g:1902:7: otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )*
                            {
                            otherlv_31=(Token)match(input,48,FollowSets000.FOLLOW_67); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_31, grammarAccess.getControlflowRegionAccess().getColonKeyword_7_1_2_1_0());
                              						
                            }
                            // InternalSCTX.g:1906:7: ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )*
                            loop69:
                            do {
                                int alt69=2;
                                alt69 = dfa69.predict(input);
                                switch (alt69) {
                            	case 1 :
                            	    // InternalSCTX.g:1907:8: (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
                            	    {
                            	    // InternalSCTX.g:1907:8: (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
                            	    // InternalSCTX.g:1908:9: lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getControlflowRegionAccess().getDeclarationsDeclarationOrMethodWithKeywordWOSemicolonParserRuleCall_7_1_2_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_67);
                            	    lv_declarations_32_0=ruleDeclarationOrMethodWithKeywordWOSemicolon();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"declarations",
                            	      										lv_declarations_32_0,
                            	      										"de.cau.cs.kieler.sccharts.text.SCTX.DeclarationOrMethodWithKeywordWOSemicolon");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop69;
                                }
                            } while (true);

                            // InternalSCTX.g:1925:7: ( (lv_actions_33_0= ruleLocalAction ) )*
                            loop70:
                            do {
                                int alt70=2;
                                alt70 = dfa70.predict(input);
                                switch (alt70) {
                            	case 1 :
                            	    // InternalSCTX.g:1926:8: (lv_actions_33_0= ruleLocalAction )
                            	    {
                            	    // InternalSCTX.g:1926:8: (lv_actions_33_0= ruleLocalAction )
                            	    // InternalSCTX.g:1927:9: lv_actions_33_0= ruleLocalAction
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getControlflowRegionAccess().getActionsLocalActionParserRuleCall_7_1_2_1_2_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_68);
                            	    lv_actions_33_0=ruleLocalAction();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"actions",
                            	      										lv_actions_33_0,
                            	      										"de.cau.cs.kieler.sccharts.text.SCTX.LocalAction");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop70;
                                }
                            } while (true);

                            // InternalSCTX.g:1944:7: ( (lv_states_34_0= ruleState ) )*
                            loop71:
                            do {
                                int alt71=2;
                                alt71 = dfa71.predict(input);
                                switch (alt71) {
                            	case 1 :
                            	    // InternalSCTX.g:1945:8: (lv_states_34_0= ruleState )
                            	    {
                            	    // InternalSCTX.g:1945:8: (lv_states_34_0= ruleState )
                            	    // InternalSCTX.g:1946:9: lv_states_34_0= ruleState
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getControlflowRegionAccess().getStatesStateParserRuleCall_7_1_2_1_3_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_49);
                            	    lv_states_34_0=ruleState();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"states",
                            	      										lv_states_34_0,
                            	      										"de.cau.cs.kieler.sccharts.text.SCTX.State");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop71;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleControlflowRegion"


    // $ANTLR start "entryRuleDataflowRegion"
    // InternalSCTX.g:1971:1: entryRuleDataflowRegion returns [EObject current=null] : iv_ruleDataflowRegion= ruleDataflowRegion EOF ;
    public final EObject entryRuleDataflowRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDataflowRegion = null;


        try {
            // InternalSCTX.g:1971:55: (iv_ruleDataflowRegion= ruleDataflowRegion EOF )
            // InternalSCTX.g:1972:2: iv_ruleDataflowRegion= ruleDataflowRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDataflowRegionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDataflowRegion=ruleDataflowRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDataflowRegion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDataflowRegion"


    // $ANTLR start "ruleDataflowRegion"
    // InternalSCTX.g:1978:1: ruleDataflowRegion returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_override_2_0= 'override' ) )? otherlv_3= 'dataflow' ( (lv_name_4_0= ruleExtendedID ) )? ( (lv_label_5_0= RULE_STRING ) )? (otherlv_6= 'for' ( (lv_counterVariable_7_0= ruleCounterVariable ) ) otherlv_8= ':' ( (lv_forStart_9_0= ruleIntOrReference ) ) (otherlv_10= 'to' ( (lv_forEnd_11_0= ruleIntOrReference ) ) )? )? (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )? ( (lv_once_14_0= 'once' ) )? ( (otherlv_15= '{' ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )* ( (lv_effects_17_0= ruleDataflowRegionEffects ) )* otherlv_18= '}' ) | (otherlv_19= ':' ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )* ( (lv_effects_21_0= ruleDataflowRegionEffects ) )* ) ) ) ;
    public final EObject ruleDataflowRegion() throws RecognitionException {
        EObject current = null;

        Token lv_override_2_0=null;
        Token otherlv_3=null;
        Token lv_label_5_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token lv_once_14_0=null;
        Token otherlv_15=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        EObject lv_annotations_1_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;

        EObject lv_counterVariable_7_0 = null;

        EObject lv_forStart_9_0 = null;

        EObject lv_forEnd_11_0 = null;

        EObject lv_schedule_13_0 = null;

        EObject lv_declarations_16_0 = null;

        EObject lv_effects_17_0 = null;

        EObject lv_declarations_20_0 = null;

        EObject lv_effects_21_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:1984:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_override_2_0= 'override' ) )? otherlv_3= 'dataflow' ( (lv_name_4_0= ruleExtendedID ) )? ( (lv_label_5_0= RULE_STRING ) )? (otherlv_6= 'for' ( (lv_counterVariable_7_0= ruleCounterVariable ) ) otherlv_8= ':' ( (lv_forStart_9_0= ruleIntOrReference ) ) (otherlv_10= 'to' ( (lv_forEnd_11_0= ruleIntOrReference ) ) )? )? (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )? ( (lv_once_14_0= 'once' ) )? ( (otherlv_15= '{' ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )* ( (lv_effects_17_0= ruleDataflowRegionEffects ) )* otherlv_18= '}' ) | (otherlv_19= ':' ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )* ( (lv_effects_21_0= ruleDataflowRegionEffects ) )* ) ) ) )
            // InternalSCTX.g:1985:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_override_2_0= 'override' ) )? otherlv_3= 'dataflow' ( (lv_name_4_0= ruleExtendedID ) )? ( (lv_label_5_0= RULE_STRING ) )? (otherlv_6= 'for' ( (lv_counterVariable_7_0= ruleCounterVariable ) ) otherlv_8= ':' ( (lv_forStart_9_0= ruleIntOrReference ) ) (otherlv_10= 'to' ( (lv_forEnd_11_0= ruleIntOrReference ) ) )? )? (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )? ( (lv_once_14_0= 'once' ) )? ( (otherlv_15= '{' ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )* ( (lv_effects_17_0= ruleDataflowRegionEffects ) )* otherlv_18= '}' ) | (otherlv_19= ':' ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )* ( (lv_effects_21_0= ruleDataflowRegionEffects ) )* ) ) )
            {
            // InternalSCTX.g:1985:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_override_2_0= 'override' ) )? otherlv_3= 'dataflow' ( (lv_name_4_0= ruleExtendedID ) )? ( (lv_label_5_0= RULE_STRING ) )? (otherlv_6= 'for' ( (lv_counterVariable_7_0= ruleCounterVariable ) ) otherlv_8= ':' ( (lv_forStart_9_0= ruleIntOrReference ) ) (otherlv_10= 'to' ( (lv_forEnd_11_0= ruleIntOrReference ) ) )? )? (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )? ( (lv_once_14_0= 'once' ) )? ( (otherlv_15= '{' ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )* ( (lv_effects_17_0= ruleDataflowRegionEffects ) )* otherlv_18= '}' ) | (otherlv_19= ':' ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )* ( (lv_effects_21_0= ruleDataflowRegionEffects ) )* ) ) )
            // InternalSCTX.g:1986:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_override_2_0= 'override' ) )? otherlv_3= 'dataflow' ( (lv_name_4_0= ruleExtendedID ) )? ( (lv_label_5_0= RULE_STRING ) )? (otherlv_6= 'for' ( (lv_counterVariable_7_0= ruleCounterVariable ) ) otherlv_8= ':' ( (lv_forStart_9_0= ruleIntOrReference ) ) (otherlv_10= 'to' ( (lv_forEnd_11_0= ruleIntOrReference ) ) )? )? (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )? ( (lv_once_14_0= 'once' ) )? ( (otherlv_15= '{' ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )* ( (lv_effects_17_0= ruleDataflowRegionEffects ) )* otherlv_18= '}' ) | (otherlv_19= ':' ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )* ( (lv_effects_21_0= ruleDataflowRegionEffects ) )* ) )
            {
            // InternalSCTX.g:1986:3: ()
            // InternalSCTX.g:1987:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDataflowRegionAccess().getDataflowRegionAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:1996:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==RULE_COMMENT_ANNOTATION||LA74_0==103) ) {
                    alt74=1;
                }


                switch (alt74) {
            	case 1 :
            	    // InternalSCTX.g:1997:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:1997:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:1998:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDataflowRegionAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_69);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);

            // InternalSCTX.g:2015:3: ( (lv_override_2_0= 'override' ) )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==45) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // InternalSCTX.g:2016:4: (lv_override_2_0= 'override' )
                    {
                    // InternalSCTX.g:2016:4: (lv_override_2_0= 'override' )
                    // InternalSCTX.g:2017:5: lv_override_2_0= 'override'
                    {
                    lv_override_2_0=(Token)match(input,45,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_override_2_0, grammarAccess.getDataflowRegionAccess().getOverrideOverrideKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDataflowRegionRule());
                      					}
                      					setWithLastConsumed(current, "override", true, "override");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,49,FollowSets000.FOLLOW_71); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getDataflowRegionAccess().getDataflowKeyword_3());
              		
            }
            // InternalSCTX.g:2033:3: ( (lv_name_4_0= ruleExtendedID ) )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==RULE_ID) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalSCTX.g:2034:4: (lv_name_4_0= ruleExtendedID )
                    {
                    // InternalSCTX.g:2034:4: (lv_name_4_0= ruleExtendedID )
                    // InternalSCTX.g:2035:5: lv_name_4_0= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDataflowRegionAccess().getNameExtendedIDParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_72);
                    lv_name_4_0=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_4_0,
                      						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2052:3: ( (lv_label_5_0= RULE_STRING ) )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==RULE_STRING) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalSCTX.g:2053:4: (lv_label_5_0= RULE_STRING )
                    {
                    // InternalSCTX.g:2053:4: (lv_label_5_0= RULE_STRING )
                    // InternalSCTX.g:2054:5: lv_label_5_0= RULE_STRING
                    {
                    lv_label_5_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_73); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_5_0, grammarAccess.getDataflowRegionAccess().getLabelSTRINGTerminalRuleCall_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDataflowRegionRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_5_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2070:3: (otherlv_6= 'for' ( (lv_counterVariable_7_0= ruleCounterVariable ) ) otherlv_8= ':' ( (lv_forStart_9_0= ruleIntOrReference ) ) (otherlv_10= 'to' ( (lv_forEnd_11_0= ruleIntOrReference ) ) )? )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==47) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalSCTX.g:2071:4: otherlv_6= 'for' ( (lv_counterVariable_7_0= ruleCounterVariable ) ) otherlv_8= ':' ( (lv_forStart_9_0= ruleIntOrReference ) ) (otherlv_10= 'to' ( (lv_forEnd_11_0= ruleIntOrReference ) ) )?
                    {
                    otherlv_6=(Token)match(input,47,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getDataflowRegionAccess().getForKeyword_6_0());
                      			
                    }
                    // InternalSCTX.g:2075:4: ( (lv_counterVariable_7_0= ruleCounterVariable ) )
                    // InternalSCTX.g:2076:5: (lv_counterVariable_7_0= ruleCounterVariable )
                    {
                    // InternalSCTX.g:2076:5: (lv_counterVariable_7_0= ruleCounterVariable )
                    // InternalSCTX.g:2077:6: lv_counterVariable_7_0= ruleCounterVariable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDataflowRegionAccess().getCounterVariableCounterVariableParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_57);
                    lv_counterVariable_7_0=ruleCounterVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
                      						}
                      						set(
                      							current,
                      							"counterVariable",
                      							lv_counterVariable_7_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.CounterVariable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_8=(Token)match(input,48,FollowSets000.FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getDataflowRegionAccess().getColonKeyword_6_2());
                      			
                    }
                    // InternalSCTX.g:2098:4: ( (lv_forStart_9_0= ruleIntOrReference ) )
                    // InternalSCTX.g:2099:5: (lv_forStart_9_0= ruleIntOrReference )
                    {
                    // InternalSCTX.g:2099:5: (lv_forStart_9_0= ruleIntOrReference )
                    // InternalSCTX.g:2100:6: lv_forStart_9_0= ruleIntOrReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDataflowRegionAccess().getForStartIntOrReferenceParserRuleCall_6_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_74);
                    lv_forStart_9_0=ruleIntOrReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
                      						}
                      						set(
                      							current,
                      							"forStart",
                      							lv_forStart_9_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.IntOrReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:2117:4: (otherlv_10= 'to' ( (lv_forEnd_11_0= ruleIntOrReference ) ) )?
                    int alt78=2;
                    int LA78_0 = input.LA(1);

                    if ( (LA78_0==35) ) {
                        alt78=1;
                    }
                    switch (alt78) {
                        case 1 :
                            // InternalSCTX.g:2118:5: otherlv_10= 'to' ( (lv_forEnd_11_0= ruleIntOrReference ) )
                            {
                            otherlv_10=(Token)match(input,35,FollowSets000.FOLLOW_58); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_10, grammarAccess.getDataflowRegionAccess().getToKeyword_6_4_0());
                              				
                            }
                            // InternalSCTX.g:2122:5: ( (lv_forEnd_11_0= ruleIntOrReference ) )
                            // InternalSCTX.g:2123:6: (lv_forEnd_11_0= ruleIntOrReference )
                            {
                            // InternalSCTX.g:2123:6: (lv_forEnd_11_0= ruleIntOrReference )
                            // InternalSCTX.g:2124:7: lv_forEnd_11_0= ruleIntOrReference
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getDataflowRegionAccess().getForEndIntOrReferenceParserRuleCall_6_4_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_75);
                            lv_forEnd_11_0=ruleIntOrReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
                              							}
                              							set(
                              								current,
                              								"forEnd",
                              								lv_forEnd_11_0,
                              								"de.cau.cs.kieler.sccharts.text.SCTX.IntOrReference");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2143:3: (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==29) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalSCTX.g:2144:4: otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_12=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getDataflowRegionAccess().getScheduleKeyword_7_0());
                      			
                    }
                    // InternalSCTX.g:2148:4: ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+
                    int cnt80=0;
                    loop80:
                    do {
                        int alt80=2;
                        int LA80_0 = input.LA(1);

                        if ( (LA80_0==RULE_ID) ) {
                            alt80=1;
                        }


                        switch (alt80) {
                    	case 1 :
                    	    // InternalSCTX.g:2149:5: (lv_schedule_13_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:2149:5: (lv_schedule_13_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:2150:6: lv_schedule_13_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getDataflowRegionAccess().getScheduleScheduleObjectReferenceParserRuleCall_7_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_76);
                    	    lv_schedule_13_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_13_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt80 >= 1 ) break loop80;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(80, input);
                                throw eee;
                        }
                        cnt80++;
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:2168:3: ( (lv_once_14_0= 'once' ) )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==50) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalSCTX.g:2169:4: (lv_once_14_0= 'once' )
                    {
                    // InternalSCTX.g:2169:4: (lv_once_14_0= 'once' )
                    // InternalSCTX.g:2170:5: lv_once_14_0= 'once'
                    {
                    lv_once_14_0=(Token)match(input,50,FollowSets000.FOLLOW_77); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_once_14_0, grammarAccess.getDataflowRegionAccess().getOnceOnceKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDataflowRegionRule());
                      					}
                      					setWithLastConsumed(current, "once", true, "once");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2182:3: ( (otherlv_15= '{' ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )* ( (lv_effects_17_0= ruleDataflowRegionEffects ) )* otherlv_18= '}' ) | (otherlv_19= ':' ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )* ( (lv_effects_21_0= ruleDataflowRegionEffects ) )* ) )
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==21) ) {
                alt87=1;
            }
            else if ( (LA87_0==48) ) {
                alt87=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 87, 0, input);

                throw nvae;
            }
            switch (alt87) {
                case 1 :
                    // InternalSCTX.g:2183:4: (otherlv_15= '{' ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )* ( (lv_effects_17_0= ruleDataflowRegionEffects ) )* otherlv_18= '}' )
                    {
                    // InternalSCTX.g:2183:4: (otherlv_15= '{' ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )* ( (lv_effects_17_0= ruleDataflowRegionEffects ) )* otherlv_18= '}' )
                    // InternalSCTX.g:2184:5: otherlv_15= '{' ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )* ( (lv_effects_17_0= ruleDataflowRegionEffects ) )* otherlv_18= '}'
                    {
                    otherlv_15=(Token)match(input,21,FollowSets000.FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_15, grammarAccess.getDataflowRegionAccess().getLeftCurlyBracketKeyword_9_0_0());
                      				
                    }
                    // InternalSCTX.g:2188:5: ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )*
                    loop83:
                    do {
                        int alt83=2;
                        alt83 = dfa83.predict(input);
                        switch (alt83) {
                    	case 1 :
                    	    // InternalSCTX.g:2189:6: (lv_declarations_16_0= ruleDeclarationWOSemicolon )
                    	    {
                    	    // InternalSCTX.g:2189:6: (lv_declarations_16_0= ruleDeclarationWOSemicolon )
                    	    // InternalSCTX.g:2190:7: lv_declarations_16_0= ruleDeclarationWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDataflowRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_9_0_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_78);
                    	    lv_declarations_16_0=ruleDeclarationWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_16_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop83;
                        }
                    } while (true);

                    // InternalSCTX.g:2207:5: ( (lv_effects_17_0= ruleDataflowRegionEffects ) )*
                    loop84:
                    do {
                        int alt84=2;
                        int LA84_0 = input.LA(1);

                        if ( (LA84_0==RULE_ID||LA84_0==RULE_COMMENT_ANNOTATION||LA84_0==51||LA84_0==103) ) {
                            alt84=1;
                        }


                        switch (alt84) {
                    	case 1 :
                    	    // InternalSCTX.g:2208:6: (lv_effects_17_0= ruleDataflowRegionEffects )
                    	    {
                    	    // InternalSCTX.g:2208:6: (lv_effects_17_0= ruleDataflowRegionEffects )
                    	    // InternalSCTX.g:2209:7: lv_effects_17_0= ruleDataflowRegionEffects
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDataflowRegionAccess().getEffectsDataflowRegionEffectsParserRuleCall_9_0_2_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_79);
                    	    lv_effects_17_0=ruleDataflowRegionEffects();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"effects",
                    	      								lv_effects_17_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.DataflowRegionEffects");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop84;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_18, grammarAccess.getDataflowRegionAccess().getRightCurlyBracketKeyword_9_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:2232:4: (otherlv_19= ':' ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )* ( (lv_effects_21_0= ruleDataflowRegionEffects ) )* )
                    {
                    // InternalSCTX.g:2232:4: (otherlv_19= ':' ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )* ( (lv_effects_21_0= ruleDataflowRegionEffects ) )* )
                    // InternalSCTX.g:2233:5: otherlv_19= ':' ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )* ( (lv_effects_21_0= ruleDataflowRegionEffects ) )*
                    {
                    otherlv_19=(Token)match(input,48,FollowSets000.FOLLOW_80); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_19, grammarAccess.getDataflowRegionAccess().getColonKeyword_9_1_0());
                      				
                    }
                    // InternalSCTX.g:2237:5: ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )*
                    loop85:
                    do {
                        int alt85=2;
                        alt85 = dfa85.predict(input);
                        switch (alt85) {
                    	case 1 :
                    	    // InternalSCTX.g:2238:6: (lv_declarations_20_0= ruleDeclarationWOSemicolon )
                    	    {
                    	    // InternalSCTX.g:2238:6: (lv_declarations_20_0= ruleDeclarationWOSemicolon )
                    	    // InternalSCTX.g:2239:7: lv_declarations_20_0= ruleDeclarationWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDataflowRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_9_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_80);
                    	    lv_declarations_20_0=ruleDeclarationWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_20_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop85;
                        }
                    } while (true);

                    // InternalSCTX.g:2256:5: ( (lv_effects_21_0= ruleDataflowRegionEffects ) )*
                    loop86:
                    do {
                        int alt86=2;
                        alt86 = dfa86.predict(input);
                        switch (alt86) {
                    	case 1 :
                    	    // InternalSCTX.g:2257:6: (lv_effects_21_0= ruleDataflowRegionEffects )
                    	    {
                    	    // InternalSCTX.g:2257:6: (lv_effects_21_0= ruleDataflowRegionEffects )
                    	    // InternalSCTX.g:2258:7: lv_effects_21_0= ruleDataflowRegionEffects
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDataflowRegionAccess().getEffectsDataflowRegionEffectsParserRuleCall_9_1_2_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_81);
                    	    lv_effects_21_0=ruleDataflowRegionEffects();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"effects",
                    	      								lv_effects_21_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.DataflowRegionEffects");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop86;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDataflowRegion"


    // $ANTLR start "entryRuleDataflowRegionEffects"
    // InternalSCTX.g:2281:1: entryRuleDataflowRegionEffects returns [EObject current=null] : iv_ruleDataflowRegionEffects= ruleDataflowRegionEffects EOF ;
    public final EObject entryRuleDataflowRegionEffects() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDataflowRegionEffects = null;


        try {
            // InternalSCTX.g:2281:62: (iv_ruleDataflowRegionEffects= ruleDataflowRegionEffects EOF )
            // InternalSCTX.g:2282:2: iv_ruleDataflowRegionEffects= ruleDataflowRegionEffects EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDataflowRegionEffectsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDataflowRegionEffects=ruleDataflowRegionEffects();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDataflowRegionEffects; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDataflowRegionEffects"


    // $ANTLR start "ruleDataflowRegionEffects"
    // InternalSCTX.g:2288:1: ruleDataflowRegionEffects returns [EObject current=null] : (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | (otherlv_2= 'emit' this_ValuedEmission_3= ruleValuedEmission ) | (otherlv_4= 'emit' this_PureEmission_5= rulePureEmission ) ) ;
    public final EObject ruleDataflowRegionEffects() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_Assignment_0 = null;

        EObject this_PostfixEffect_1 = null;

        EObject this_ValuedEmission_3 = null;

        EObject this_PureEmission_5 = null;



        	enterRule();

        try {
            // InternalSCTX.g:2294:2: ( (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | (otherlv_2= 'emit' this_ValuedEmission_3= ruleValuedEmission ) | (otherlv_4= 'emit' this_PureEmission_5= rulePureEmission ) ) )
            // InternalSCTX.g:2295:2: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | (otherlv_2= 'emit' this_ValuedEmission_3= ruleValuedEmission ) | (otherlv_4= 'emit' this_PureEmission_5= rulePureEmission ) )
            {
            // InternalSCTX.g:2295:2: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | (otherlv_2= 'emit' this_ValuedEmission_3= ruleValuedEmission ) | (otherlv_4= 'emit' this_PureEmission_5= rulePureEmission ) )
            int alt88=4;
            switch ( input.LA(1) ) {
            case RULE_COMMENT_ANNOTATION:
                {
                int LA88_1 = input.LA(2);

                if ( (synpred92_InternalSCTX()) ) {
                    alt88=1;
                }
                else if ( (synpred93_InternalSCTX()) ) {
                    alt88=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 88, 1, input);

                    throw nvae;
                }
                }
                break;
            case 103:
                {
                int LA88_2 = input.LA(2);

                if ( (synpred92_InternalSCTX()) ) {
                    alt88=1;
                }
                else if ( (synpred93_InternalSCTX()) ) {
                    alt88=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 88, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
                {
                int LA88_3 = input.LA(2);

                if ( (synpred92_InternalSCTX()) ) {
                    alt88=1;
                }
                else if ( (synpred93_InternalSCTX()) ) {
                    alt88=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 88, 3, input);

                    throw nvae;
                }
                }
                break;
            case 51:
                {
                int LA88_4 = input.LA(2);

                if ( (synpred94_InternalSCTX()) ) {
                    alt88=3;
                }
                else if ( (true) ) {
                    alt88=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 88, 4, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 88, 0, input);

                throw nvae;
            }

            switch (alt88) {
                case 1 :
                    // InternalSCTX.g:2296:3: this_Assignment_0= ruleAssignment
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDataflowRegionEffectsAccess().getAssignmentParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Assignment_0=ruleAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Assignment_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:2308:3: this_PostfixEffect_1= rulePostfixEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDataflowRegionEffectsAccess().getPostfixEffectParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PostfixEffect_1=rulePostfixEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PostfixEffect_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:2320:3: (otherlv_2= 'emit' this_ValuedEmission_3= ruleValuedEmission )
                    {
                    // InternalSCTX.g:2320:3: (otherlv_2= 'emit' this_ValuedEmission_3= ruleValuedEmission )
                    // InternalSCTX.g:2321:4: otherlv_2= 'emit' this_ValuedEmission_3= ruleValuedEmission
                    {
                    otherlv_2=(Token)match(input,51,FollowSets000.FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getDataflowRegionEffectsAccess().getEmitKeyword_2_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getDataflowRegionEffectsAccess().getValuedEmissionParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedEmission_3=ruleValuedEmission();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ValuedEmission_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCTX.g:2338:3: (otherlv_4= 'emit' this_PureEmission_5= rulePureEmission )
                    {
                    // InternalSCTX.g:2338:3: (otherlv_4= 'emit' this_PureEmission_5= rulePureEmission )
                    // InternalSCTX.g:2339:4: otherlv_4= 'emit' this_PureEmission_5= rulePureEmission
                    {
                    otherlv_4=(Token)match(input,51,FollowSets000.FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getDataflowRegionEffectsAccess().getEmitKeyword_3_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getDataflowRegionEffectsAccess().getPureEmissionParserRuleCall_3_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PureEmission_5=rulePureEmission();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_PureEmission_5;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDataflowRegionEffects"


    // $ANTLR start "entryRuleIntOrReference"
    // InternalSCTX.g:2359:1: entryRuleIntOrReference returns [EObject current=null] : iv_ruleIntOrReference= ruleIntOrReference EOF ;
    public final EObject entryRuleIntOrReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntOrReference = null;


        try {
            // InternalSCTX.g:2359:55: (iv_ruleIntOrReference= ruleIntOrReference EOF )
            // InternalSCTX.g:2360:2: iv_ruleIntOrReference= ruleIntOrReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntOrReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIntOrReference=ruleIntOrReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntOrReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntOrReference"


    // $ANTLR start "ruleIntOrReference"
    // InternalSCTX.g:2366:1: ruleIntOrReference returns [EObject current=null] : (this_IntValue_0= ruleIntValue | this_ValuedObjectReference_1= ruleValuedObjectReference ) ;
    public final EObject ruleIntOrReference() throws RecognitionException {
        EObject current = null;

        EObject this_IntValue_0 = null;

        EObject this_ValuedObjectReference_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:2372:2: ( (this_IntValue_0= ruleIntValue | this_ValuedObjectReference_1= ruleValuedObjectReference ) )
            // InternalSCTX.g:2373:2: (this_IntValue_0= ruleIntValue | this_ValuedObjectReference_1= ruleValuedObjectReference )
            {
            // InternalSCTX.g:2373:2: (this_IntValue_0= ruleIntValue | this_ValuedObjectReference_1= ruleValuedObjectReference )
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==RULE_INT) ) {
                alt89=1;
            }
            else if ( (LA89_0==RULE_ID) ) {
                alt89=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 89, 0, input);

                throw nvae;
            }
            switch (alt89) {
                case 1 :
                    // InternalSCTX.g:2374:3: this_IntValue_0= ruleIntValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getIntOrReferenceAccess().getIntValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IntValue_0=ruleIntValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IntValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:2386:3: this_ValuedObjectReference_1= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getIntOrReferenceAccess().getValuedObjectReferenceParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedObjectReference_1=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedObjectReference_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntOrReference"


    // $ANTLR start "entryRuleCounterVariable"
    // InternalSCTX.g:2401:1: entryRuleCounterVariable returns [EObject current=null] : iv_ruleCounterVariable= ruleCounterVariable EOF ;
    public final EObject entryRuleCounterVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCounterVariable = null;


        try {
            // InternalSCTX.g:2401:56: (iv_ruleCounterVariable= ruleCounterVariable EOF )
            // InternalSCTX.g:2402:2: iv_ruleCounterVariable= ruleCounterVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCounterVariableRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCounterVariable=ruleCounterVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCounterVariable; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCounterVariable"


    // $ANTLR start "ruleCounterVariable"
    // InternalSCTX.g:2408:1: ruleCounterVariable returns [EObject current=null] : ( (lv_name_0_0= rulePrimeID ) ) ;
    public final EObject ruleCounterVariable() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:2414:2: ( ( (lv_name_0_0= rulePrimeID ) ) )
            // InternalSCTX.g:2415:2: ( (lv_name_0_0= rulePrimeID ) )
            {
            // InternalSCTX.g:2415:2: ( (lv_name_0_0= rulePrimeID ) )
            // InternalSCTX.g:2416:3: (lv_name_0_0= rulePrimeID )
            {
            // InternalSCTX.g:2416:3: (lv_name_0_0= rulePrimeID )
            // InternalSCTX.g:2417:4: lv_name_0_0= rulePrimeID
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getCounterVariableAccess().getNamePrimeIDParserRuleCall_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_0_0=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getCounterVariableRule());
              				}
              				set(
              					current,
              					"name",
              					lv_name_0_0,
              					"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCounterVariable"


    // $ANTLR start "entryRuleLocalAction"
    // InternalSCTX.g:2437:1: entryRuleLocalAction returns [EObject current=null] : iv_ruleLocalAction= ruleLocalAction EOF ;
    public final EObject entryRuleLocalAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLocalAction = null;


        try {
            // InternalSCTX.g:2437:52: (iv_ruleLocalAction= ruleLocalAction EOF )
            // InternalSCTX.g:2438:2: iv_ruleLocalAction= ruleLocalAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocalActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLocalAction=ruleLocalAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocalAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLocalAction"


    // $ANTLR start "ruleLocalAction"
    // InternalSCTX.g:2444:1: ruleLocalAction returns [EObject current=null] : (this_EntryAction_0= ruleEntryAction | this_DuringAction_1= ruleDuringAction | this_ExitAction_2= ruleExitAction | this_SuspendAction_3= ruleSuspendAction | this_PrecedingAction_4= rulePrecedingAction | this_SucceedingAction_5= ruleSucceedingAction | this_PeriodAction_6= rulePeriodAction ) ;
    public final EObject ruleLocalAction() throws RecognitionException {
        EObject current = null;

        EObject this_EntryAction_0 = null;

        EObject this_DuringAction_1 = null;

        EObject this_ExitAction_2 = null;

        EObject this_SuspendAction_3 = null;

        EObject this_PrecedingAction_4 = null;

        EObject this_SucceedingAction_5 = null;

        EObject this_PeriodAction_6 = null;



        	enterRule();

        try {
            // InternalSCTX.g:2450:2: ( (this_EntryAction_0= ruleEntryAction | this_DuringAction_1= ruleDuringAction | this_ExitAction_2= ruleExitAction | this_SuspendAction_3= ruleSuspendAction | this_PrecedingAction_4= rulePrecedingAction | this_SucceedingAction_5= ruleSucceedingAction | this_PeriodAction_6= rulePeriodAction ) )
            // InternalSCTX.g:2451:2: (this_EntryAction_0= ruleEntryAction | this_DuringAction_1= ruleDuringAction | this_ExitAction_2= ruleExitAction | this_SuspendAction_3= ruleSuspendAction | this_PrecedingAction_4= rulePrecedingAction | this_SucceedingAction_5= ruleSucceedingAction | this_PeriodAction_6= rulePeriodAction )
            {
            // InternalSCTX.g:2451:2: (this_EntryAction_0= ruleEntryAction | this_DuringAction_1= ruleDuringAction | this_ExitAction_2= ruleExitAction | this_SuspendAction_3= ruleSuspendAction | this_PrecedingAction_4= rulePrecedingAction | this_SucceedingAction_5= ruleSucceedingAction | this_PeriodAction_6= rulePeriodAction )
            int alt90=7;
            alt90 = dfa90.predict(input);
            switch (alt90) {
                case 1 :
                    // InternalSCTX.g:2452:3: this_EntryAction_0= ruleEntryAction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLocalActionAccess().getEntryActionParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EntryAction_0=ruleEntryAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EntryAction_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:2464:3: this_DuringAction_1= ruleDuringAction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLocalActionAccess().getDuringActionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DuringAction_1=ruleDuringAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DuringAction_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:2476:3: this_ExitAction_2= ruleExitAction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLocalActionAccess().getExitActionParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExitAction_2=ruleExitAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExitAction_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:2488:3: this_SuspendAction_3= ruleSuspendAction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLocalActionAccess().getSuspendActionParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SuspendAction_3=ruleSuspendAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SuspendAction_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSCTX.g:2500:3: this_PrecedingAction_4= rulePrecedingAction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLocalActionAccess().getPrecedingActionParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrecedingAction_4=rulePrecedingAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrecedingAction_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalSCTX.g:2512:3: this_SucceedingAction_5= ruleSucceedingAction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLocalActionAccess().getSucceedingActionParserRuleCall_5());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SucceedingAction_5=ruleSucceedingAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SucceedingAction_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalSCTX.g:2524:3: this_PeriodAction_6= rulePeriodAction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLocalActionAccess().getPeriodActionParserRuleCall_6());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PeriodAction_6=rulePeriodAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PeriodAction_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocalAction"


    // $ANTLR start "entryRuleEntryAction"
    // InternalSCTX.g:2539:1: entryRuleEntryAction returns [EObject current=null] : iv_ruleEntryAction= ruleEntryAction EOF ;
    public final EObject entryRuleEntryAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEntryAction = null;


        try {
            // InternalSCTX.g:2539:52: (iv_ruleEntryAction= ruleEntryAction EOF )
            // InternalSCTX.g:2540:2: iv_ruleEntryAction= ruleEntryAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEntryActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEntryAction=ruleEntryAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEntryAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEntryAction"


    // $ANTLR start "ruleEntryAction"
    // InternalSCTX.g:2546:1: ruleEntryAction returns [EObject current=null] : ( () otherlv_1= 'entry' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleEntryAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_triggerProbability_5_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_label_11_0=null;
        EObject lv_trigger_3_0 = null;

        EObject lv_effects_7_0 = null;

        EObject lv_effects_9_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:2552:2: ( ( () otherlv_1= 'entry' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:2553:2: ( () otherlv_1= 'entry' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:2553:2: ( () otherlv_1= 'entry' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:2554:3: () otherlv_1= 'entry' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:2554:3: ()
            // InternalSCTX.g:2555:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getEntryActionAccess().getEntryActionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,52,FollowSets000.FOLLOW_84); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getEntryActionAccess().getEntryKeyword_1());
              		
            }
            // InternalSCTX.g:2568:3: (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==38) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // InternalSCTX.g:2569:4: otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )?
                    {
                    otherlv_2=(Token)match(input,38,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getEntryActionAccess().getIfKeyword_2_0());
                      			
                    }
                    // InternalSCTX.g:2573:4: ( (lv_trigger_3_0= ruleBoolScheduleExpression ) )
                    // InternalSCTX.g:2574:5: (lv_trigger_3_0= ruleBoolScheduleExpression )
                    {
                    // InternalSCTX.g:2574:5: (lv_trigger_3_0= ruleBoolScheduleExpression )
                    // InternalSCTX.g:2575:6: lv_trigger_3_0= ruleBoolScheduleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEntryActionAccess().getTriggerBoolScheduleExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_85);
                    lv_trigger_3_0=ruleBoolScheduleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEntryActionRule());
                      						}
                      						set(
                      							current,
                      							"trigger",
                      							lv_trigger_3_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.BoolScheduleExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:2592:4: (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )?
                    int alt91=2;
                    int LA91_0 = input.LA(1);

                    if ( (LA91_0==53) ) {
                        alt91=1;
                    }
                    switch (alt91) {
                        case 1 :
                            // InternalSCTX.g:2593:5: otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) )
                            {
                            otherlv_4=(Token)match(input,53,FollowSets000.FOLLOW_41); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getEntryActionAccess().getPrKeyword_2_2_0());
                              				
                            }
                            // InternalSCTX.g:2597:5: ( (lv_triggerProbability_5_0= RULE_FLOAT ) )
                            // InternalSCTX.g:2598:6: (lv_triggerProbability_5_0= RULE_FLOAT )
                            {
                            // InternalSCTX.g:2598:6: (lv_triggerProbability_5_0= RULE_FLOAT )
                            // InternalSCTX.g:2599:7: lv_triggerProbability_5_0= RULE_FLOAT
                            {
                            lv_triggerProbability_5_0=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_86); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_triggerProbability_5_0, grammarAccess.getEntryActionAccess().getTriggerProbabilityFLOATTerminalRuleCall_2_2_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getEntryActionRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"triggerProbability",
                              								lv_triggerProbability_5_0,
                              								"de.cau.cs.kieler.annotations.Annotations.FLOAT");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2617:3: (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==41) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // InternalSCTX.g:2618:4: otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )*
                    {
                    otherlv_6=(Token)match(input,41,FollowSets000.FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getEntryActionAccess().getDoKeyword_3_0());
                      			
                    }
                    // InternalSCTX.g:2622:4: ( (lv_effects_7_0= ruleEffect ) )
                    // InternalSCTX.g:2623:5: (lv_effects_7_0= ruleEffect )
                    {
                    // InternalSCTX.g:2623:5: (lv_effects_7_0= ruleEffect )
                    // InternalSCTX.g:2624:6: lv_effects_7_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEntryActionAccess().getEffectsEffectParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_87);
                    lv_effects_7_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEntryActionRule());
                      						}
                      						add(
                      							current,
                      							"effects",
                      							lv_effects_7_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:2641:4: (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )*
                    loop93:
                    do {
                        int alt93=2;
                        int LA93_0 = input.LA(1);

                        if ( (LA93_0==42) ) {
                            alt93=1;
                        }


                        switch (alt93) {
                    	case 1 :
                    	    // InternalSCTX.g:2642:5: otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) )
                    	    {
                    	    otherlv_8=(Token)match(input,42,FollowSets000.FOLLOW_43); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getEntryActionAccess().getSemicolonKeyword_3_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:2646:5: ( (lv_effects_9_0= ruleEffect ) )
                    	    // InternalSCTX.g:2647:6: (lv_effects_9_0= ruleEffect )
                    	    {
                    	    // InternalSCTX.g:2647:6: (lv_effects_9_0= ruleEffect )
                    	    // InternalSCTX.g:2648:7: lv_effects_9_0= ruleEffect
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getEntryActionAccess().getEffectsEffectParserRuleCall_3_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_87);
                    	    lv_effects_9_0=ruleEffect();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getEntryActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"effects",
                    	      								lv_effects_9_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop93;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:2667:3: (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==44) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // InternalSCTX.g:2668:4: otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) )
                    {
                    otherlv_10=(Token)match(input,44,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getEntryActionAccess().getLabelKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:2672:4: ( (lv_label_11_0= RULE_STRING ) )
                    // InternalSCTX.g:2673:5: (lv_label_11_0= RULE_STRING )
                    {
                    // InternalSCTX.g:2673:5: (lv_label_11_0= RULE_STRING )
                    // InternalSCTX.g:2674:6: lv_label_11_0= RULE_STRING
                    {
                    lv_label_11_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_11_0, grammarAccess.getEntryActionAccess().getLabelSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getEntryActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_11_0,
                      							"de.cau.cs.kieler.annotations.Annotations.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEntryAction"


    // $ANTLR start "entryRuleDuringAction"
    // InternalSCTX.g:2695:1: entryRuleDuringAction returns [EObject current=null] : iv_ruleDuringAction= ruleDuringAction EOF ;
    public final EObject entryRuleDuringAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDuringAction = null;


        try {
            // InternalSCTX.g:2695:53: (iv_ruleDuringAction= ruleDuringAction EOF )
            // InternalSCTX.g:2696:2: iv_ruleDuringAction= ruleDuringAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDuringActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDuringAction=ruleDuringAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDuringAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDuringAction"


    // $ANTLR start "ruleDuringAction"
    // InternalSCTX.g:2702:1: ruleDuringAction returns [EObject current=null] : ( () ( (lv_delay_1_0= ruleDelayType ) )? otherlv_2= 'during' (otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) (otherlv_6= 'Pr=' ( (lv_triggerProbability_7_0= RULE_FLOAT ) ) )? )? (otherlv_8= 'do' ( (lv_effects_9_0= ruleEffect ) ) (otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) ) )* )? (otherlv_12= 'label' ( (lv_label_13_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleDuringAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_triggerDelay_4_0=null;
        Token otherlv_6=null;
        Token lv_triggerProbability_7_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token lv_label_13_0=null;
        Enumerator lv_delay_1_0 = null;

        EObject lv_trigger_5_0 = null;

        EObject lv_effects_9_0 = null;

        EObject lv_effects_11_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:2708:2: ( ( () ( (lv_delay_1_0= ruleDelayType ) )? otherlv_2= 'during' (otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) (otherlv_6= 'Pr=' ( (lv_triggerProbability_7_0= RULE_FLOAT ) ) )? )? (otherlv_8= 'do' ( (lv_effects_9_0= ruleEffect ) ) (otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) ) )* )? (otherlv_12= 'label' ( (lv_label_13_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:2709:2: ( () ( (lv_delay_1_0= ruleDelayType ) )? otherlv_2= 'during' (otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) (otherlv_6= 'Pr=' ( (lv_triggerProbability_7_0= RULE_FLOAT ) ) )? )? (otherlv_8= 'do' ( (lv_effects_9_0= ruleEffect ) ) (otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) ) )* )? (otherlv_12= 'label' ( (lv_label_13_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:2709:2: ( () ( (lv_delay_1_0= ruleDelayType ) )? otherlv_2= 'during' (otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) (otherlv_6= 'Pr=' ( (lv_triggerProbability_7_0= RULE_FLOAT ) ) )? )? (otherlv_8= 'do' ( (lv_effects_9_0= ruleEffect ) ) (otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) ) )* )? (otherlv_12= 'label' ( (lv_label_13_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:2710:3: () ( (lv_delay_1_0= ruleDelayType ) )? otherlv_2= 'during' (otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) (otherlv_6= 'Pr=' ( (lv_triggerProbability_7_0= RULE_FLOAT ) ) )? )? (otherlv_8= 'do' ( (lv_effects_9_0= ruleEffect ) ) (otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) ) )* )? (otherlv_12= 'label' ( (lv_label_13_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:2710:3: ()
            // InternalSCTX.g:2711:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDuringActionAccess().getDuringActionAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:2720:3: ( (lv_delay_1_0= ruleDelayType ) )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( ((LA96_0>=106 && LA96_0<=109)) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // InternalSCTX.g:2721:4: (lv_delay_1_0= ruleDelayType )
                    {
                    // InternalSCTX.g:2721:4: (lv_delay_1_0= ruleDelayType )
                    // InternalSCTX.g:2722:5: lv_delay_1_0= ruleDelayType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDuringActionAccess().getDelayDelayTypeEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_88);
                    lv_delay_1_0=ruleDelayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDuringActionRule());
                      					}
                      					set(
                      						current,
                      						"delay",
                      						lv_delay_1_0,
                      						"de.cau.cs.kieler.sccharts.text.SCTX.DelayType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,54,FollowSets000.FOLLOW_84); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDuringActionAccess().getDuringKeyword_2());
              		
            }
            // InternalSCTX.g:2743:3: (otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) (otherlv_6= 'Pr=' ( (lv_triggerProbability_7_0= RULE_FLOAT ) ) )? )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==38) ) {
                alt99=1;
            }
            switch (alt99) {
                case 1 :
                    // InternalSCTX.g:2744:4: otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) (otherlv_6= 'Pr=' ( (lv_triggerProbability_7_0= RULE_FLOAT ) ) )?
                    {
                    otherlv_3=(Token)match(input,38,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getDuringActionAccess().getIfKeyword_3_0());
                      			
                    }
                    // InternalSCTX.g:2748:4: ( (lv_triggerDelay_4_0= RULE_INT ) )?
                    int alt97=2;
                    alt97 = dfa97.predict(input);
                    switch (alt97) {
                        case 1 :
                            // InternalSCTX.g:2749:5: (lv_triggerDelay_4_0= RULE_INT )
                            {
                            // InternalSCTX.g:2749:5: (lv_triggerDelay_4_0= RULE_INT )
                            // InternalSCTX.g:2750:6: lv_triggerDelay_4_0= RULE_INT
                            {
                            lv_triggerDelay_4_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_39); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_triggerDelay_4_0, grammarAccess.getDuringActionAccess().getTriggerDelayINTTerminalRuleCall_3_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getDuringActionRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"triggerDelay",
                              							lv_triggerDelay_4_0,
                              							"de.cau.cs.kieler.annotations.Annotations.INT");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:2766:4: ( (lv_trigger_5_0= ruleBoolScheduleExpression ) )
                    // InternalSCTX.g:2767:5: (lv_trigger_5_0= ruleBoolScheduleExpression )
                    {
                    // InternalSCTX.g:2767:5: (lv_trigger_5_0= ruleBoolScheduleExpression )
                    // InternalSCTX.g:2768:6: lv_trigger_5_0= ruleBoolScheduleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDuringActionAccess().getTriggerBoolScheduleExpressionParserRuleCall_3_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_89);
                    lv_trigger_5_0=ruleBoolScheduleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDuringActionRule());
                      						}
                      						set(
                      							current,
                      							"trigger",
                      							lv_trigger_5_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.BoolScheduleExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:2785:4: (otherlv_6= 'Pr=' ( (lv_triggerProbability_7_0= RULE_FLOAT ) ) )?
                    int alt98=2;
                    int LA98_0 = input.LA(1);

                    if ( (LA98_0==39) ) {
                        alt98=1;
                    }
                    switch (alt98) {
                        case 1 :
                            // InternalSCTX.g:2786:5: otherlv_6= 'Pr=' ( (lv_triggerProbability_7_0= RULE_FLOAT ) )
                            {
                            otherlv_6=(Token)match(input,39,FollowSets000.FOLLOW_41); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_6, grammarAccess.getDuringActionAccess().getPrKeyword_3_3_0());
                              				
                            }
                            // InternalSCTX.g:2790:5: ( (lv_triggerProbability_7_0= RULE_FLOAT ) )
                            // InternalSCTX.g:2791:6: (lv_triggerProbability_7_0= RULE_FLOAT )
                            {
                            // InternalSCTX.g:2791:6: (lv_triggerProbability_7_0= RULE_FLOAT )
                            // InternalSCTX.g:2792:7: lv_triggerProbability_7_0= RULE_FLOAT
                            {
                            lv_triggerProbability_7_0=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_86); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_triggerProbability_7_0, grammarAccess.getDuringActionAccess().getTriggerProbabilityFLOATTerminalRuleCall_3_3_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDuringActionRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"triggerProbability",
                              								lv_triggerProbability_7_0,
                              								"de.cau.cs.kieler.annotations.Annotations.FLOAT");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2810:3: (otherlv_8= 'do' ( (lv_effects_9_0= ruleEffect ) ) (otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) ) )* )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==41) ) {
                alt101=1;
            }
            switch (alt101) {
                case 1 :
                    // InternalSCTX.g:2811:4: otherlv_8= 'do' ( (lv_effects_9_0= ruleEffect ) ) (otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) ) )*
                    {
                    otherlv_8=(Token)match(input,41,FollowSets000.FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getDuringActionAccess().getDoKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:2815:4: ( (lv_effects_9_0= ruleEffect ) )
                    // InternalSCTX.g:2816:5: (lv_effects_9_0= ruleEffect )
                    {
                    // InternalSCTX.g:2816:5: (lv_effects_9_0= ruleEffect )
                    // InternalSCTX.g:2817:6: lv_effects_9_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDuringActionAccess().getEffectsEffectParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_87);
                    lv_effects_9_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDuringActionRule());
                      						}
                      						add(
                      							current,
                      							"effects",
                      							lv_effects_9_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:2834:4: (otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) ) )*
                    loop100:
                    do {
                        int alt100=2;
                        int LA100_0 = input.LA(1);

                        if ( (LA100_0==42) ) {
                            alt100=1;
                        }


                        switch (alt100) {
                    	case 1 :
                    	    // InternalSCTX.g:2835:5: otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) )
                    	    {
                    	    otherlv_10=(Token)match(input,42,FollowSets000.FOLLOW_43); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_10, grammarAccess.getDuringActionAccess().getSemicolonKeyword_4_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:2839:5: ( (lv_effects_11_0= ruleEffect ) )
                    	    // InternalSCTX.g:2840:6: (lv_effects_11_0= ruleEffect )
                    	    {
                    	    // InternalSCTX.g:2840:6: (lv_effects_11_0= ruleEffect )
                    	    // InternalSCTX.g:2841:7: lv_effects_11_0= ruleEffect
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDuringActionAccess().getEffectsEffectParserRuleCall_4_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_87);
                    	    lv_effects_11_0=ruleEffect();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDuringActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"effects",
                    	      								lv_effects_11_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop100;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:2860:3: (otherlv_12= 'label' ( (lv_label_13_0= RULE_STRING ) ) )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==44) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // InternalSCTX.g:2861:4: otherlv_12= 'label' ( (lv_label_13_0= RULE_STRING ) )
                    {
                    otherlv_12=(Token)match(input,44,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getDuringActionAccess().getLabelKeyword_5_0());
                      			
                    }
                    // InternalSCTX.g:2865:4: ( (lv_label_13_0= RULE_STRING ) )
                    // InternalSCTX.g:2866:5: (lv_label_13_0= RULE_STRING )
                    {
                    // InternalSCTX.g:2866:5: (lv_label_13_0= RULE_STRING )
                    // InternalSCTX.g:2867:6: lv_label_13_0= RULE_STRING
                    {
                    lv_label_13_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_13_0, grammarAccess.getDuringActionAccess().getLabelSTRINGTerminalRuleCall_5_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDuringActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_13_0,
                      							"de.cau.cs.kieler.annotations.Annotations.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDuringAction"


    // $ANTLR start "entryRuleExitAction"
    // InternalSCTX.g:2888:1: entryRuleExitAction returns [EObject current=null] : iv_ruleExitAction= ruleExitAction EOF ;
    public final EObject entryRuleExitAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExitAction = null;


        try {
            // InternalSCTX.g:2888:51: (iv_ruleExitAction= ruleExitAction EOF )
            // InternalSCTX.g:2889:2: iv_ruleExitAction= ruleExitAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExitActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExitAction=ruleExitAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExitAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExitAction"


    // $ANTLR start "ruleExitAction"
    // InternalSCTX.g:2895:1: ruleExitAction returns [EObject current=null] : ( () otherlv_1= 'exit' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleExitAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_triggerProbability_5_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_label_11_0=null;
        EObject lv_trigger_3_0 = null;

        EObject lv_effects_7_0 = null;

        EObject lv_effects_9_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:2901:2: ( ( () otherlv_1= 'exit' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:2902:2: ( () otherlv_1= 'exit' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:2902:2: ( () otherlv_1= 'exit' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:2903:3: () otherlv_1= 'exit' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:2903:3: ()
            // InternalSCTX.g:2904:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getExitActionAccess().getExitActionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,55,FollowSets000.FOLLOW_84); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getExitActionAccess().getExitKeyword_1());
              		
            }
            // InternalSCTX.g:2917:3: (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==38) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalSCTX.g:2918:4: otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )?
                    {
                    otherlv_2=(Token)match(input,38,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getExitActionAccess().getIfKeyword_2_0());
                      			
                    }
                    // InternalSCTX.g:2922:4: ( (lv_trigger_3_0= ruleBoolScheduleExpression ) )
                    // InternalSCTX.g:2923:5: (lv_trigger_3_0= ruleBoolScheduleExpression )
                    {
                    // InternalSCTX.g:2923:5: (lv_trigger_3_0= ruleBoolScheduleExpression )
                    // InternalSCTX.g:2924:6: lv_trigger_3_0= ruleBoolScheduleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExitActionAccess().getTriggerBoolScheduleExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_85);
                    lv_trigger_3_0=ruleBoolScheduleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExitActionRule());
                      						}
                      						set(
                      							current,
                      							"trigger",
                      							lv_trigger_3_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.BoolScheduleExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:2941:4: (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )?
                    int alt103=2;
                    int LA103_0 = input.LA(1);

                    if ( (LA103_0==53) ) {
                        alt103=1;
                    }
                    switch (alt103) {
                        case 1 :
                            // InternalSCTX.g:2942:5: otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) )
                            {
                            otherlv_4=(Token)match(input,53,FollowSets000.FOLLOW_41); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getExitActionAccess().getPrKeyword_2_2_0());
                              				
                            }
                            // InternalSCTX.g:2946:5: ( (lv_triggerProbability_5_0= RULE_FLOAT ) )
                            // InternalSCTX.g:2947:6: (lv_triggerProbability_5_0= RULE_FLOAT )
                            {
                            // InternalSCTX.g:2947:6: (lv_triggerProbability_5_0= RULE_FLOAT )
                            // InternalSCTX.g:2948:7: lv_triggerProbability_5_0= RULE_FLOAT
                            {
                            lv_triggerProbability_5_0=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_86); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_triggerProbability_5_0, grammarAccess.getExitActionAccess().getTriggerProbabilityFLOATTerminalRuleCall_2_2_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getExitActionRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"triggerProbability",
                              								lv_triggerProbability_5_0,
                              								"de.cau.cs.kieler.annotations.Annotations.FLOAT");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2966:3: (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==41) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // InternalSCTX.g:2967:4: otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )*
                    {
                    otherlv_6=(Token)match(input,41,FollowSets000.FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getExitActionAccess().getDoKeyword_3_0());
                      			
                    }
                    // InternalSCTX.g:2971:4: ( (lv_effects_7_0= ruleEffect ) )
                    // InternalSCTX.g:2972:5: (lv_effects_7_0= ruleEffect )
                    {
                    // InternalSCTX.g:2972:5: (lv_effects_7_0= ruleEffect )
                    // InternalSCTX.g:2973:6: lv_effects_7_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExitActionAccess().getEffectsEffectParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_87);
                    lv_effects_7_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExitActionRule());
                      						}
                      						add(
                      							current,
                      							"effects",
                      							lv_effects_7_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:2990:4: (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )*
                    loop105:
                    do {
                        int alt105=2;
                        int LA105_0 = input.LA(1);

                        if ( (LA105_0==42) ) {
                            alt105=1;
                        }


                        switch (alt105) {
                    	case 1 :
                    	    // InternalSCTX.g:2991:5: otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) )
                    	    {
                    	    otherlv_8=(Token)match(input,42,FollowSets000.FOLLOW_43); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getExitActionAccess().getSemicolonKeyword_3_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:2995:5: ( (lv_effects_9_0= ruleEffect ) )
                    	    // InternalSCTX.g:2996:6: (lv_effects_9_0= ruleEffect )
                    	    {
                    	    // InternalSCTX.g:2996:6: (lv_effects_9_0= ruleEffect )
                    	    // InternalSCTX.g:2997:7: lv_effects_9_0= ruleEffect
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getExitActionAccess().getEffectsEffectParserRuleCall_3_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_87);
                    	    lv_effects_9_0=ruleEffect();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getExitActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"effects",
                    	      								lv_effects_9_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop105;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:3016:3: (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==44) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalSCTX.g:3017:4: otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) )
                    {
                    otherlv_10=(Token)match(input,44,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getExitActionAccess().getLabelKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:3021:4: ( (lv_label_11_0= RULE_STRING ) )
                    // InternalSCTX.g:3022:5: (lv_label_11_0= RULE_STRING )
                    {
                    // InternalSCTX.g:3022:5: (lv_label_11_0= RULE_STRING )
                    // InternalSCTX.g:3023:6: lv_label_11_0= RULE_STRING
                    {
                    lv_label_11_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_11_0, grammarAccess.getExitActionAccess().getLabelSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getExitActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_11_0,
                      							"de.cau.cs.kieler.annotations.Annotations.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExitAction"


    // $ANTLR start "entryRuleSuspendAction"
    // InternalSCTX.g:3044:1: entryRuleSuspendAction returns [EObject current=null] : iv_ruleSuspendAction= ruleSuspendAction EOF ;
    public final EObject entryRuleSuspendAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSuspendAction = null;


        try {
            // InternalSCTX.g:3044:54: (iv_ruleSuspendAction= ruleSuspendAction EOF )
            // InternalSCTX.g:3045:2: iv_ruleSuspendAction= ruleSuspendAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSuspendActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSuspendAction=ruleSuspendAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSuspendAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSuspendAction"


    // $ANTLR start "ruleSuspendAction"
    // InternalSCTX.g:3051:1: ruleSuspendAction returns [EObject current=null] : ( () ( (lv_delay_1_0= ruleDelayType ) )? ( (lv_weak_2_0= 'weak' ) )? otherlv_3= 'suspend' (otherlv_4= 'if' ( (lv_triggerDelay_5_0= RULE_INT ) )? ( (lv_trigger_6_0= ruleBoolScheduleExpression ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleSuspendAction() throws RecognitionException {
        EObject current = null;

        Token lv_weak_2_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token lv_triggerDelay_5_0=null;
        Token otherlv_7=null;
        Token lv_triggerProbability_8_0=null;
        Token otherlv_9=null;
        Token lv_label_10_0=null;
        Enumerator lv_delay_1_0 = null;

        EObject lv_trigger_6_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:3057:2: ( ( () ( (lv_delay_1_0= ruleDelayType ) )? ( (lv_weak_2_0= 'weak' ) )? otherlv_3= 'suspend' (otherlv_4= 'if' ( (lv_triggerDelay_5_0= RULE_INT ) )? ( (lv_trigger_6_0= ruleBoolScheduleExpression ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:3058:2: ( () ( (lv_delay_1_0= ruleDelayType ) )? ( (lv_weak_2_0= 'weak' ) )? otherlv_3= 'suspend' (otherlv_4= 'if' ( (lv_triggerDelay_5_0= RULE_INT ) )? ( (lv_trigger_6_0= ruleBoolScheduleExpression ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:3058:2: ( () ( (lv_delay_1_0= ruleDelayType ) )? ( (lv_weak_2_0= 'weak' ) )? otherlv_3= 'suspend' (otherlv_4= 'if' ( (lv_triggerDelay_5_0= RULE_INT ) )? ( (lv_trigger_6_0= ruleBoolScheduleExpression ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:3059:3: () ( (lv_delay_1_0= ruleDelayType ) )? ( (lv_weak_2_0= 'weak' ) )? otherlv_3= 'suspend' (otherlv_4= 'if' ( (lv_triggerDelay_5_0= RULE_INT ) )? ( (lv_trigger_6_0= ruleBoolScheduleExpression ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:3059:3: ()
            // InternalSCTX.g:3060:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSuspendActionAccess().getSuspendActionAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:3069:3: ( (lv_delay_1_0= ruleDelayType ) )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( ((LA108_0>=106 && LA108_0<=109)) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalSCTX.g:3070:4: (lv_delay_1_0= ruleDelayType )
                    {
                    // InternalSCTX.g:3070:4: (lv_delay_1_0= ruleDelayType )
                    // InternalSCTX.g:3071:5: lv_delay_1_0= ruleDelayType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSuspendActionAccess().getDelayDelayTypeEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_90);
                    lv_delay_1_0=ruleDelayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSuspendActionRule());
                      					}
                      					set(
                      						current,
                      						"delay",
                      						lv_delay_1_0,
                      						"de.cau.cs.kieler.sccharts.text.SCTX.DelayType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3088:3: ( (lv_weak_2_0= 'weak' ) )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==56) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // InternalSCTX.g:3089:4: (lv_weak_2_0= 'weak' )
                    {
                    // InternalSCTX.g:3089:4: (lv_weak_2_0= 'weak' )
                    // InternalSCTX.g:3090:5: lv_weak_2_0= 'weak'
                    {
                    lv_weak_2_0=(Token)match(input,56,FollowSets000.FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_weak_2_0, grammarAccess.getSuspendActionAccess().getWeakWeakKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSuspendActionRule());
                      					}
                      					setWithLastConsumed(current, "weak", true, "weak");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,57,FollowSets000.FOLLOW_92); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getSuspendActionAccess().getSuspendKeyword_3());
              		
            }
            // InternalSCTX.g:3106:3: (otherlv_4= 'if' ( (lv_triggerDelay_5_0= RULE_INT ) )? ( (lv_trigger_6_0= ruleBoolScheduleExpression ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==38) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // InternalSCTX.g:3107:4: otherlv_4= 'if' ( (lv_triggerDelay_5_0= RULE_INT ) )? ( (lv_trigger_6_0= ruleBoolScheduleExpression ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )?
                    {
                    otherlv_4=(Token)match(input,38,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getSuspendActionAccess().getIfKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:3111:4: ( (lv_triggerDelay_5_0= RULE_INT ) )?
                    int alt110=2;
                    alt110 = dfa110.predict(input);
                    switch (alt110) {
                        case 1 :
                            // InternalSCTX.g:3112:5: (lv_triggerDelay_5_0= RULE_INT )
                            {
                            // InternalSCTX.g:3112:5: (lv_triggerDelay_5_0= RULE_INT )
                            // InternalSCTX.g:3113:6: lv_triggerDelay_5_0= RULE_INT
                            {
                            lv_triggerDelay_5_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_39); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_triggerDelay_5_0, grammarAccess.getSuspendActionAccess().getTriggerDelayINTTerminalRuleCall_4_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getSuspendActionRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"triggerDelay",
                              							lv_triggerDelay_5_0,
                              							"de.cau.cs.kieler.annotations.Annotations.INT");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:3129:4: ( (lv_trigger_6_0= ruleBoolScheduleExpression ) )
                    // InternalSCTX.g:3130:5: (lv_trigger_6_0= ruleBoolScheduleExpression )
                    {
                    // InternalSCTX.g:3130:5: (lv_trigger_6_0= ruleBoolScheduleExpression )
                    // InternalSCTX.g:3131:6: lv_trigger_6_0= ruleBoolScheduleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSuspendActionAccess().getTriggerBoolScheduleExpressionParserRuleCall_4_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_93);
                    lv_trigger_6_0=ruleBoolScheduleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSuspendActionRule());
                      						}
                      						set(
                      							current,
                      							"trigger",
                      							lv_trigger_6_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.BoolScheduleExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:3148:4: (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )?
                    int alt111=2;
                    int LA111_0 = input.LA(1);

                    if ( (LA111_0==39) ) {
                        alt111=1;
                    }
                    switch (alt111) {
                        case 1 :
                            // InternalSCTX.g:3149:5: otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) )
                            {
                            otherlv_7=(Token)match(input,39,FollowSets000.FOLLOW_41); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_7, grammarAccess.getSuspendActionAccess().getPrKeyword_4_3_0());
                              				
                            }
                            // InternalSCTX.g:3153:5: ( (lv_triggerProbability_8_0= RULE_FLOAT ) )
                            // InternalSCTX.g:3154:6: (lv_triggerProbability_8_0= RULE_FLOAT )
                            {
                            // InternalSCTX.g:3154:6: (lv_triggerProbability_8_0= RULE_FLOAT )
                            // InternalSCTX.g:3155:7: lv_triggerProbability_8_0= RULE_FLOAT
                            {
                            lv_triggerProbability_8_0=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_47); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_triggerProbability_8_0, grammarAccess.getSuspendActionAccess().getTriggerProbabilityFLOATTerminalRuleCall_4_3_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSuspendActionRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"triggerProbability",
                              								lv_triggerProbability_8_0,
                              								"de.cau.cs.kieler.annotations.Annotations.FLOAT");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3173:3: (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==44) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalSCTX.g:3174:4: otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) )
                    {
                    otherlv_9=(Token)match(input,44,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getSuspendActionAccess().getLabelKeyword_5_0());
                      			
                    }
                    // InternalSCTX.g:3178:4: ( (lv_label_10_0= RULE_STRING ) )
                    // InternalSCTX.g:3179:5: (lv_label_10_0= RULE_STRING )
                    {
                    // InternalSCTX.g:3179:5: (lv_label_10_0= RULE_STRING )
                    // InternalSCTX.g:3180:6: lv_label_10_0= RULE_STRING
                    {
                    lv_label_10_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_10_0, grammarAccess.getSuspendActionAccess().getLabelSTRINGTerminalRuleCall_5_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSuspendActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_10_0,
                      							"de.cau.cs.kieler.annotations.Annotations.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSuspendAction"


    // $ANTLR start "entryRulePrecedingAction"
    // InternalSCTX.g:3201:1: entryRulePrecedingAction returns [EObject current=null] : iv_rulePrecedingAction= rulePrecedingAction EOF ;
    public final EObject entryRulePrecedingAction() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrecedingAction = null;


        try {
            // InternalSCTX.g:3201:56: (iv_rulePrecedingAction= rulePrecedingAction EOF )
            // InternalSCTX.g:3202:2: iv_rulePrecedingAction= rulePrecedingAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrecedingActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrecedingAction=rulePrecedingAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrecedingAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrecedingAction"


    // $ANTLR start "rulePrecedingAction"
    // InternalSCTX.g:3208:1: rulePrecedingAction returns [EObject current=null] : ( () otherlv_1= 'preceding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? ) ;
    public final EObject rulePrecedingAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_triggerProbability_5_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_label_11_0=null;
        EObject lv_trigger_3_0 = null;

        EObject lv_effects_7_0 = null;

        EObject lv_effects_9_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:3214:2: ( ( () otherlv_1= 'preceding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:3215:2: ( () otherlv_1= 'preceding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:3215:2: ( () otherlv_1= 'preceding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:3216:3: () otherlv_1= 'preceding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:3216:3: ()
            // InternalSCTX.g:3217:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPrecedingActionAccess().getPrecedingActionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,58,FollowSets000.FOLLOW_84); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getPrecedingActionAccess().getPrecedingKeyword_1());
              		
            }
            // InternalSCTX.g:3230:3: (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==38) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // InternalSCTX.g:3231:4: otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )?
                    {
                    otherlv_2=(Token)match(input,38,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPrecedingActionAccess().getIfKeyword_2_0());
                      			
                    }
                    // InternalSCTX.g:3235:4: ( (lv_trigger_3_0= ruleBoolScheduleExpression ) )
                    // InternalSCTX.g:3236:5: (lv_trigger_3_0= ruleBoolScheduleExpression )
                    {
                    // InternalSCTX.g:3236:5: (lv_trigger_3_0= ruleBoolScheduleExpression )
                    // InternalSCTX.g:3237:6: lv_trigger_3_0= ruleBoolScheduleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrecedingActionAccess().getTriggerBoolScheduleExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_85);
                    lv_trigger_3_0=ruleBoolScheduleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrecedingActionRule());
                      						}
                      						set(
                      							current,
                      							"trigger",
                      							lv_trigger_3_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.BoolScheduleExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:3254:4: (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )?
                    int alt114=2;
                    int LA114_0 = input.LA(1);

                    if ( (LA114_0==53) ) {
                        alt114=1;
                    }
                    switch (alt114) {
                        case 1 :
                            // InternalSCTX.g:3255:5: otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) )
                            {
                            otherlv_4=(Token)match(input,53,FollowSets000.FOLLOW_41); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getPrecedingActionAccess().getPrKeyword_2_2_0());
                              				
                            }
                            // InternalSCTX.g:3259:5: ( (lv_triggerProbability_5_0= RULE_FLOAT ) )
                            // InternalSCTX.g:3260:6: (lv_triggerProbability_5_0= RULE_FLOAT )
                            {
                            // InternalSCTX.g:3260:6: (lv_triggerProbability_5_0= RULE_FLOAT )
                            // InternalSCTX.g:3261:7: lv_triggerProbability_5_0= RULE_FLOAT
                            {
                            lv_triggerProbability_5_0=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_86); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_triggerProbability_5_0, grammarAccess.getPrecedingActionAccess().getTriggerProbabilityFLOATTerminalRuleCall_2_2_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getPrecedingActionRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"triggerProbability",
                              								lv_triggerProbability_5_0,
                              								"de.cau.cs.kieler.annotations.Annotations.FLOAT");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3279:3: (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==41) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalSCTX.g:3280:4: otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )*
                    {
                    otherlv_6=(Token)match(input,41,FollowSets000.FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getPrecedingActionAccess().getDoKeyword_3_0());
                      			
                    }
                    // InternalSCTX.g:3284:4: ( (lv_effects_7_0= ruleEffect ) )
                    // InternalSCTX.g:3285:5: (lv_effects_7_0= ruleEffect )
                    {
                    // InternalSCTX.g:3285:5: (lv_effects_7_0= ruleEffect )
                    // InternalSCTX.g:3286:6: lv_effects_7_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrecedingActionAccess().getEffectsEffectParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_87);
                    lv_effects_7_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrecedingActionRule());
                      						}
                      						add(
                      							current,
                      							"effects",
                      							lv_effects_7_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:3303:4: (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )*
                    loop116:
                    do {
                        int alt116=2;
                        int LA116_0 = input.LA(1);

                        if ( (LA116_0==42) ) {
                            alt116=1;
                        }


                        switch (alt116) {
                    	case 1 :
                    	    // InternalSCTX.g:3304:5: otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) )
                    	    {
                    	    otherlv_8=(Token)match(input,42,FollowSets000.FOLLOW_43); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getPrecedingActionAccess().getSemicolonKeyword_3_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:3308:5: ( (lv_effects_9_0= ruleEffect ) )
                    	    // InternalSCTX.g:3309:6: (lv_effects_9_0= ruleEffect )
                    	    {
                    	    // InternalSCTX.g:3309:6: (lv_effects_9_0= ruleEffect )
                    	    // InternalSCTX.g:3310:7: lv_effects_9_0= ruleEffect
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getPrecedingActionAccess().getEffectsEffectParserRuleCall_3_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_87);
                    	    lv_effects_9_0=ruleEffect();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getPrecedingActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"effects",
                    	      								lv_effects_9_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop116;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:3329:3: (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==44) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalSCTX.g:3330:4: otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) )
                    {
                    otherlv_10=(Token)match(input,44,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getPrecedingActionAccess().getLabelKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:3334:4: ( (lv_label_11_0= RULE_STRING ) )
                    // InternalSCTX.g:3335:5: (lv_label_11_0= RULE_STRING )
                    {
                    // InternalSCTX.g:3335:5: (lv_label_11_0= RULE_STRING )
                    // InternalSCTX.g:3336:6: lv_label_11_0= RULE_STRING
                    {
                    lv_label_11_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_11_0, grammarAccess.getPrecedingActionAccess().getLabelSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPrecedingActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_11_0,
                      							"de.cau.cs.kieler.annotations.Annotations.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrecedingAction"


    // $ANTLR start "entryRuleSucceedingAction"
    // InternalSCTX.g:3357:1: entryRuleSucceedingAction returns [EObject current=null] : iv_ruleSucceedingAction= ruleSucceedingAction EOF ;
    public final EObject entryRuleSucceedingAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSucceedingAction = null;


        try {
            // InternalSCTX.g:3357:57: (iv_ruleSucceedingAction= ruleSucceedingAction EOF )
            // InternalSCTX.g:3358:2: iv_ruleSucceedingAction= ruleSucceedingAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSucceedingActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSucceedingAction=ruleSucceedingAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSucceedingAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSucceedingAction"


    // $ANTLR start "ruleSucceedingAction"
    // InternalSCTX.g:3364:1: ruleSucceedingAction returns [EObject current=null] : ( () otherlv_1= 'succeeding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleSucceedingAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_triggerProbability_5_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_label_11_0=null;
        EObject lv_trigger_3_0 = null;

        EObject lv_effects_7_0 = null;

        EObject lv_effects_9_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:3370:2: ( ( () otherlv_1= 'succeeding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:3371:2: ( () otherlv_1= 'succeeding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:3371:2: ( () otherlv_1= 'succeeding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:3372:3: () otherlv_1= 'succeeding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:3372:3: ()
            // InternalSCTX.g:3373:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSucceedingActionAccess().getSucceedingActionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,59,FollowSets000.FOLLOW_84); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSucceedingActionAccess().getSucceedingKeyword_1());
              		
            }
            // InternalSCTX.g:3386:3: (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==38) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // InternalSCTX.g:3387:4: otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )?
                    {
                    otherlv_2=(Token)match(input,38,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getSucceedingActionAccess().getIfKeyword_2_0());
                      			
                    }
                    // InternalSCTX.g:3391:4: ( (lv_trigger_3_0= ruleBoolScheduleExpression ) )
                    // InternalSCTX.g:3392:5: (lv_trigger_3_0= ruleBoolScheduleExpression )
                    {
                    // InternalSCTX.g:3392:5: (lv_trigger_3_0= ruleBoolScheduleExpression )
                    // InternalSCTX.g:3393:6: lv_trigger_3_0= ruleBoolScheduleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSucceedingActionAccess().getTriggerBoolScheduleExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_85);
                    lv_trigger_3_0=ruleBoolScheduleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSucceedingActionRule());
                      						}
                      						set(
                      							current,
                      							"trigger",
                      							lv_trigger_3_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.BoolScheduleExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:3410:4: (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )?
                    int alt119=2;
                    int LA119_0 = input.LA(1);

                    if ( (LA119_0==53) ) {
                        alt119=1;
                    }
                    switch (alt119) {
                        case 1 :
                            // InternalSCTX.g:3411:5: otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) )
                            {
                            otherlv_4=(Token)match(input,53,FollowSets000.FOLLOW_41); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getSucceedingActionAccess().getPrKeyword_2_2_0());
                              				
                            }
                            // InternalSCTX.g:3415:5: ( (lv_triggerProbability_5_0= RULE_FLOAT ) )
                            // InternalSCTX.g:3416:6: (lv_triggerProbability_5_0= RULE_FLOAT )
                            {
                            // InternalSCTX.g:3416:6: (lv_triggerProbability_5_0= RULE_FLOAT )
                            // InternalSCTX.g:3417:7: lv_triggerProbability_5_0= RULE_FLOAT
                            {
                            lv_triggerProbability_5_0=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_86); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_triggerProbability_5_0, grammarAccess.getSucceedingActionAccess().getTriggerProbabilityFLOATTerminalRuleCall_2_2_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSucceedingActionRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"triggerProbability",
                              								lv_triggerProbability_5_0,
                              								"de.cau.cs.kieler.annotations.Annotations.FLOAT");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3435:3: (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==41) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // InternalSCTX.g:3436:4: otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )*
                    {
                    otherlv_6=(Token)match(input,41,FollowSets000.FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getSucceedingActionAccess().getDoKeyword_3_0());
                      			
                    }
                    // InternalSCTX.g:3440:4: ( (lv_effects_7_0= ruleEffect ) )
                    // InternalSCTX.g:3441:5: (lv_effects_7_0= ruleEffect )
                    {
                    // InternalSCTX.g:3441:5: (lv_effects_7_0= ruleEffect )
                    // InternalSCTX.g:3442:6: lv_effects_7_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSucceedingActionAccess().getEffectsEffectParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_87);
                    lv_effects_7_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSucceedingActionRule());
                      						}
                      						add(
                      							current,
                      							"effects",
                      							lv_effects_7_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:3459:4: (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )*
                    loop121:
                    do {
                        int alt121=2;
                        int LA121_0 = input.LA(1);

                        if ( (LA121_0==42) ) {
                            alt121=1;
                        }


                        switch (alt121) {
                    	case 1 :
                    	    // InternalSCTX.g:3460:5: otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) )
                    	    {
                    	    otherlv_8=(Token)match(input,42,FollowSets000.FOLLOW_43); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getSucceedingActionAccess().getSemicolonKeyword_3_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:3464:5: ( (lv_effects_9_0= ruleEffect ) )
                    	    // InternalSCTX.g:3465:6: (lv_effects_9_0= ruleEffect )
                    	    {
                    	    // InternalSCTX.g:3465:6: (lv_effects_9_0= ruleEffect )
                    	    // InternalSCTX.g:3466:7: lv_effects_9_0= ruleEffect
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSucceedingActionAccess().getEffectsEffectParserRuleCall_3_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_87);
                    	    lv_effects_9_0=ruleEffect();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSucceedingActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"effects",
                    	      								lv_effects_9_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop121;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:3485:3: (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )?
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==44) ) {
                alt123=1;
            }
            switch (alt123) {
                case 1 :
                    // InternalSCTX.g:3486:4: otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) )
                    {
                    otherlv_10=(Token)match(input,44,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getSucceedingActionAccess().getLabelKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:3490:4: ( (lv_label_11_0= RULE_STRING ) )
                    // InternalSCTX.g:3491:5: (lv_label_11_0= RULE_STRING )
                    {
                    // InternalSCTX.g:3491:5: (lv_label_11_0= RULE_STRING )
                    // InternalSCTX.g:3492:6: lv_label_11_0= RULE_STRING
                    {
                    lv_label_11_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_11_0, grammarAccess.getSucceedingActionAccess().getLabelSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSucceedingActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_11_0,
                      							"de.cau.cs.kieler.annotations.Annotations.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSucceedingAction"


    // $ANTLR start "entryRulePeriodAction"
    // InternalSCTX.g:3513:1: entryRulePeriodAction returns [EObject current=null] : iv_rulePeriodAction= rulePeriodAction EOF ;
    public final EObject entryRulePeriodAction() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePeriodAction = null;


        try {
            // InternalSCTX.g:3513:53: (iv_rulePeriodAction= rulePeriodAction EOF )
            // InternalSCTX.g:3514:2: iv_rulePeriodAction= rulePeriodAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPeriodActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePeriodAction=rulePeriodAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePeriodAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePeriodAction"


    // $ANTLR start "rulePeriodAction"
    // InternalSCTX.g:3520:1: rulePeriodAction returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? otherlv_3= 'period' ( (lv_trigger_4_0= ruleValuedExpression ) ) (otherlv_5= 'label' ( (lv_label_6_0= RULE_STRING ) ) )? ) ;
    public final EObject rulePeriodAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_label_6_0=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_delay_2_0 = null;

        EObject lv_trigger_4_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:3526:2: ( ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? otherlv_3= 'period' ( (lv_trigger_4_0= ruleValuedExpression ) ) (otherlv_5= 'label' ( (lv_label_6_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:3527:2: ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? otherlv_3= 'period' ( (lv_trigger_4_0= ruleValuedExpression ) ) (otherlv_5= 'label' ( (lv_label_6_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:3527:2: ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? otherlv_3= 'period' ( (lv_trigger_4_0= ruleValuedExpression ) ) (otherlv_5= 'label' ( (lv_label_6_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:3528:3: () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? otherlv_3= 'period' ( (lv_trigger_4_0= ruleValuedExpression ) ) (otherlv_5= 'label' ( (lv_label_6_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:3528:3: ()
            // InternalSCTX.g:3529:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPeriodActionAccess().getPeriodActionAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:3538:3: ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )*
            loop124:
            do {
                int alt124=2;
                int LA124_0 = input.LA(1);

                if ( (LA124_0==RULE_COMMENT_ANNOTATION||LA124_0==103) ) {
                    alt124=1;
                }


                switch (alt124) {
            	case 1 :
            	    // InternalSCTX.g:3539:4: (lv_annotations_1_0= ruleRestrictedTypeAnnotation )
            	    {
            	    // InternalSCTX.g:3539:4: (lv_annotations_1_0= ruleRestrictedTypeAnnotation )
            	    // InternalSCTX.g:3540:5: lv_annotations_1_0= ruleRestrictedTypeAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPeriodActionAccess().getAnnotationsRestrictedTypeAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_94);
            	    lv_annotations_1_0=ruleRestrictedTypeAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPeriodActionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.RestrictedTypeAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop124;
                }
            } while (true);

            // InternalSCTX.g:3557:3: ( (lv_delay_2_0= ruleDelayType ) )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( ((LA125_0>=106 && LA125_0<=109)) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // InternalSCTX.g:3558:4: (lv_delay_2_0= ruleDelayType )
                    {
                    // InternalSCTX.g:3558:4: (lv_delay_2_0= ruleDelayType )
                    // InternalSCTX.g:3559:5: lv_delay_2_0= ruleDelayType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPeriodActionAccess().getDelayDelayTypeEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_95);
                    lv_delay_2_0=ruleDelayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPeriodActionRule());
                      					}
                      					set(
                      						current,
                      						"delay",
                      						lv_delay_2_0,
                      						"de.cau.cs.kieler.sccharts.text.SCTX.DelayType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,60,FollowSets000.FOLLOW_96); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getPeriodActionAccess().getPeriodKeyword_3());
              		
            }
            // InternalSCTX.g:3580:3: ( (lv_trigger_4_0= ruleValuedExpression ) )
            // InternalSCTX.g:3581:4: (lv_trigger_4_0= ruleValuedExpression )
            {
            // InternalSCTX.g:3581:4: (lv_trigger_4_0= ruleValuedExpression )
            // InternalSCTX.g:3582:5: lv_trigger_4_0= ruleValuedExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPeriodActionAccess().getTriggerValuedExpressionParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_47);
            lv_trigger_4_0=ruleValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPeriodActionRule());
              					}
              					set(
              						current,
              						"trigger",
              						lv_trigger_4_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:3599:3: (otherlv_5= 'label' ( (lv_label_6_0= RULE_STRING ) ) )?
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==44) ) {
                alt126=1;
            }
            switch (alt126) {
                case 1 :
                    // InternalSCTX.g:3600:4: otherlv_5= 'label' ( (lv_label_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,44,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getPeriodActionAccess().getLabelKeyword_5_0());
                      			
                    }
                    // InternalSCTX.g:3604:4: ( (lv_label_6_0= RULE_STRING ) )
                    // InternalSCTX.g:3605:5: (lv_label_6_0= RULE_STRING )
                    {
                    // InternalSCTX.g:3605:5: (lv_label_6_0= RULE_STRING )
                    // InternalSCTX.g:3606:6: lv_label_6_0= RULE_STRING
                    {
                    lv_label_6_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_6_0, grammarAccess.getPeriodActionAccess().getLabelSTRINGTerminalRuleCall_5_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPeriodActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_6_0,
                      							"de.cau.cs.kieler.annotations.Annotations.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePeriodAction"


    // $ANTLR start "entryRuleDeclaration"
    // InternalSCTX.g:3627:1: entryRuleDeclaration returns [EObject current=null] : iv_ruleDeclaration= ruleDeclaration EOF ;
    public final EObject entryRuleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclaration = null;


        try {
            // InternalSCTX.g:3627:52: (iv_ruleDeclaration= ruleDeclaration EOF )
            // InternalSCTX.g:3628:2: iv_ruleDeclaration= ruleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclaration=ruleDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclaration"


    // $ANTLR start "ruleDeclaration"
    // InternalSCTX.g:3634:1: ruleDeclaration returns [EObject current=null] : (this_Declaration_0= superDeclaration | this_DeclarationWOSemicolon_1= ruleDeclarationWOSemicolon ) ;
    public final EObject ruleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_Declaration_0 = null;

        EObject this_DeclarationWOSemicolon_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:3640:2: ( (this_Declaration_0= superDeclaration | this_DeclarationWOSemicolon_1= ruleDeclarationWOSemicolon ) )
            // InternalSCTX.g:3641:2: (this_Declaration_0= superDeclaration | this_DeclarationWOSemicolon_1= ruleDeclarationWOSemicolon )
            {
            // InternalSCTX.g:3641:2: (this_Declaration_0= superDeclaration | this_DeclarationWOSemicolon_1= ruleDeclarationWOSemicolon )
            int alt127=2;
            alt127 = dfa127.predict(input);
            switch (alt127) {
                case 1 :
                    // InternalSCTX.g:3642:3: this_Declaration_0= superDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Declaration_0=superDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Declaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:3654:3: this_DeclarationWOSemicolon_1= ruleDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getDeclarationWOSemicolonParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DeclarationWOSemicolon_1=ruleDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DeclarationWOSemicolon_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclaration"


    // $ANTLR start "entryRuleStatement"
    // InternalSCTX.g:3669:1: entryRuleStatement returns [EObject current=null] : iv_ruleStatement= ruleStatement EOF ;
    public final EObject entryRuleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatement = null;


        try {
            // InternalSCTX.g:3669:50: (iv_ruleStatement= ruleStatement EOF )
            // InternalSCTX.g:3670:2: iv_ruleStatement= ruleStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStatement=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatement"


    // $ANTLR start "ruleStatement"
    // InternalSCTX.g:3676:1: ruleStatement returns [EObject current=null] : (this_SclAssignment_0= ruleSclAssignment | this_SclPostfixAssignment_1= ruleSclPostfixAssignment | this_Label_2= ruleLabel | this_Conditional_3= ruleConditional | this_Goto_4= ruleGoto | this_ScopeStatement_5= ruleScopeStatement | this_Return_6= ruleReturn | this_ForLoop_7= ruleForLoop | this_WhileLoop_8= ruleWhileLoop ) ;
    public final EObject ruleStatement() throws RecognitionException {
        EObject current = null;

        EObject this_SclAssignment_0 = null;

        EObject this_SclPostfixAssignment_1 = null;

        EObject this_Label_2 = null;

        EObject this_Conditional_3 = null;

        EObject this_Goto_4 = null;

        EObject this_ScopeStatement_5 = null;

        EObject this_Return_6 = null;

        EObject this_ForLoop_7 = null;

        EObject this_WhileLoop_8 = null;



        	enterRule();

        try {
            // InternalSCTX.g:3682:2: ( (this_SclAssignment_0= ruleSclAssignment | this_SclPostfixAssignment_1= ruleSclPostfixAssignment | this_Label_2= ruleLabel | this_Conditional_3= ruleConditional | this_Goto_4= ruleGoto | this_ScopeStatement_5= ruleScopeStatement | this_Return_6= ruleReturn | this_ForLoop_7= ruleForLoop | this_WhileLoop_8= ruleWhileLoop ) )
            // InternalSCTX.g:3683:2: (this_SclAssignment_0= ruleSclAssignment | this_SclPostfixAssignment_1= ruleSclPostfixAssignment | this_Label_2= ruleLabel | this_Conditional_3= ruleConditional | this_Goto_4= ruleGoto | this_ScopeStatement_5= ruleScopeStatement | this_Return_6= ruleReturn | this_ForLoop_7= ruleForLoop | this_WhileLoop_8= ruleWhileLoop )
            {
            // InternalSCTX.g:3683:2: (this_SclAssignment_0= ruleSclAssignment | this_SclPostfixAssignment_1= ruleSclPostfixAssignment | this_Label_2= ruleLabel | this_Conditional_3= ruleConditional | this_Goto_4= ruleGoto | this_ScopeStatement_5= ruleScopeStatement | this_Return_6= ruleReturn | this_ForLoop_7= ruleForLoop | this_WhileLoop_8= ruleWhileLoop )
            int alt128=9;
            alt128 = dfa128.predict(input);
            switch (alt128) {
                case 1 :
                    // InternalSCTX.g:3684:3: this_SclAssignment_0= ruleSclAssignment
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getSclAssignmentParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SclAssignment_0=ruleSclAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SclAssignment_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:3696:3: this_SclPostfixAssignment_1= ruleSclPostfixAssignment
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getSclPostfixAssignmentParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SclPostfixAssignment_1=ruleSclPostfixAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SclPostfixAssignment_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:3708:3: this_Label_2= ruleLabel
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getLabelParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Label_2=ruleLabel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Label_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:3720:3: this_Conditional_3= ruleConditional
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getConditionalParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Conditional_3=ruleConditional();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Conditional_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSCTX.g:3732:3: this_Goto_4= ruleGoto
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getGotoParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Goto_4=ruleGoto();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Goto_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalSCTX.g:3744:3: this_ScopeStatement_5= ruleScopeStatement
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getScopeStatementParserRuleCall_5());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ScopeStatement_5=ruleScopeStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ScopeStatement_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalSCTX.g:3756:3: this_Return_6= ruleReturn
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getReturnParserRuleCall_6());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Return_6=ruleReturn();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Return_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalSCTX.g:3768:3: this_ForLoop_7= ruleForLoop
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getForLoopParserRuleCall_7());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ForLoop_7=ruleForLoop();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ForLoop_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalSCTX.g:3780:3: this_WhileLoop_8= ruleWhileLoop
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getWhileLoopParserRuleCall_8());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_WhileLoop_8=ruleWhileLoop();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_WhileLoop_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatement"


    // $ANTLR start "entryRuleEffect"
    // InternalSCTX.g:3795:1: entryRuleEffect returns [EObject current=null] : iv_ruleEffect= ruleEffect EOF ;
    public final EObject entryRuleEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEffect = null;


        try {
            // InternalSCTX.g:3795:47: (iv_ruleEffect= ruleEffect EOF )
            // InternalSCTX.g:3796:2: iv_ruleEffect= ruleEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEffect=ruleEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEffect"


    // $ANTLR start "ruleEffect"
    // InternalSCTX.g:3802:1: ruleEffect returns [EObject current=null] : (this_Effect_0= superEffect | this_CodeEffect_1= ruleCodeEffect ) ;
    public final EObject ruleEffect() throws RecognitionException {
        EObject current = null;

        EObject this_Effect_0 = null;

        EObject this_CodeEffect_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:3808:2: ( (this_Effect_0= superEffect | this_CodeEffect_1= ruleCodeEffect ) )
            // InternalSCTX.g:3809:2: (this_Effect_0= superEffect | this_CodeEffect_1= ruleCodeEffect )
            {
            // InternalSCTX.g:3809:2: (this_Effect_0= superEffect | this_CodeEffect_1= ruleCodeEffect )
            int alt129=2;
            switch ( input.LA(1) ) {
            case RULE_COMMENT_ANNOTATION:
                {
                int LA129_1 = input.LA(2);

                if ( (synpred147_InternalSCTX()) ) {
                    alt129=1;
                }
                else if ( (true) ) {
                    alt129=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 129, 1, input);

                    throw nvae;
                }
                }
                break;
            case 103:
                {
                int LA129_2 = input.LA(2);

                if ( (synpred147_InternalSCTX()) ) {
                    alt129=1;
                }
                else if ( (true) ) {
                    alt129=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 129, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
            case RULE_HOSTCODE:
            case 80:
            case 84:
            case 85:
                {
                alt129=1;
                }
                break;
            case 21:
                {
                alt129=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 129, 0, input);

                throw nvae;
            }

            switch (alt129) {
                case 1 :
                    // InternalSCTX.g:3810:3: this_Effect_0= superEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getEffectParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Effect_0=superEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Effect_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:3822:3: this_CodeEffect_1= ruleCodeEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getCodeEffectParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CodeEffect_1=ruleCodeEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CodeEffect_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEffect"


    // $ANTLR start "entryRuleCodeEffect"
    // InternalSCTX.g:3837:1: entryRuleCodeEffect returns [EObject current=null] : iv_ruleCodeEffect= ruleCodeEffect EOF ;
    public final EObject entryRuleCodeEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCodeEffect = null;


        try {
            // InternalSCTX.g:3837:51: (iv_ruleCodeEffect= ruleCodeEffect EOF )
            // InternalSCTX.g:3838:2: iv_ruleCodeEffect= ruleCodeEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCodeEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCodeEffect=ruleCodeEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCodeEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCodeEffect"


    // $ANTLR start "ruleCodeEffect"
    // InternalSCTX.g:3844:1: ruleCodeEffect returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) ;
    public final EObject ruleCodeEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_declarations_3_0 = null;

        EObject lv_statements_4_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:3850:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) )
            // InternalSCTX.g:3851:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
            {
            // InternalSCTX.g:3851:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
            // InternalSCTX.g:3852:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}'
            {
            // InternalSCTX.g:3852:3: ()
            // InternalSCTX.g:3853:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getCodeEffectAccess().getCodeEffectAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:3862:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop130:
            do {
                int alt130=2;
                int LA130_0 = input.LA(1);

                if ( (LA130_0==RULE_COMMENT_ANNOTATION||LA130_0==103) ) {
                    alt130=1;
                }


                switch (alt130) {
            	case 1 :
            	    // InternalSCTX.g:3863:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:3863:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:3864:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getCodeEffectAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_97);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getCodeEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop130;
                }
            } while (true);

            otherlv_2=(Token)match(input,21,FollowSets000.FOLLOW_98); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getCodeEffectAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalSCTX.g:3885:3: ( (lv_declarations_3_0= ruleDeclaration ) )*
            loop131:
            do {
                int alt131=2;
                alt131 = dfa131.predict(input);
                switch (alt131) {
            	case 1 :
            	    // InternalSCTX.g:3886:4: (lv_declarations_3_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:3886:4: (lv_declarations_3_0= ruleDeclaration )
            	    // InternalSCTX.g:3887:5: lv_declarations_3_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getCodeEffectAccess().getDeclarationsDeclarationParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_98);
            	    lv_declarations_3_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getCodeEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_3_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop131;
                }
            } while (true);

            // InternalSCTX.g:3904:3: ( (lv_statements_4_0= ruleStatement ) )*
            loop132:
            do {
                int alt132=2;
                int LA132_0 = input.LA(1);

                if ( (LA132_0==RULE_ID||LA132_0==RULE_COMMENT_ANNOTATION||LA132_0==21||LA132_0==38||LA132_0==47||(LA132_0>=72 && LA132_0<=73)||LA132_0==75||LA132_0==103) ) {
                    alt132=1;
                }


                switch (alt132) {
            	case 1 :
            	    // InternalSCTX.g:3905:4: (lv_statements_4_0= ruleStatement )
            	    {
            	    // InternalSCTX.g:3905:4: (lv_statements_4_0= ruleStatement )
            	    // InternalSCTX.g:3906:5: lv_statements_4_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getCodeEffectAccess().getStatementsStatementParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_99);
            	    lv_statements_4_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getCodeEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_4_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop132;
                }
            } while (true);

            otherlv_5=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getCodeEffectAccess().getRightCurlyBracketKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCodeEffect"


    // $ANTLR start "entryRuleClassDeclarationWOSemicolon"
    // InternalSCTX.g:3931:1: entryRuleClassDeclarationWOSemicolon returns [EObject current=null] : iv_ruleClassDeclarationWOSemicolon= ruleClassDeclarationWOSemicolon EOF ;
    public final EObject entryRuleClassDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassDeclarationWOSemicolon = null;


        try {
            // InternalSCTX.g:3931:68: (iv_ruleClassDeclarationWOSemicolon= ruleClassDeclarationWOSemicolon EOF )
            // InternalSCTX.g:3932:2: iv_ruleClassDeclarationWOSemicolon= ruleClassDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleClassDeclarationWOSemicolon=ruleClassDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassDeclarationWOSemicolon"


    // $ANTLR start "ruleClassDeclarationWOSemicolon"
    // InternalSCTX.g:3938:1: ruleClassDeclarationWOSemicolon returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_policy_12_0= rulePolicyRegion ) )? ( (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_14= '}' ) | ( ( (lv_type_15_0= ruleStructType ) ) ( (lv_name_16_0= RULE_ID ) )? otherlv_17= '{' ( (lv_declarations_18_0= ruleDeclarationWOSemicolon ) )* otherlv_19= '}' ) ) ( ( (lv_valuedObjects_20_0= ruleValuedObject ) ) (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )* )? ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleClassDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token lv_const_3_0=null;
        Token lv_input_4_0=null;
        Token lv_output_5_0=null;
        Token lv_global_6_0=null;
        Token lv_static_7_0=null;
        Token lv_host_8_0=null;
        Token lv_name_10_0=null;
        Token otherlv_11=null;
        Token otherlv_14=null;
        Token lv_name_16_0=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_access_2_0 = null;

        Enumerator lv_type_9_0 = null;

        EObject lv_policy_12_0 = null;

        EObject lv_declarations_13_0 = null;

        Enumerator lv_type_15_0 = null;

        EObject lv_declarations_18_0 = null;

        EObject lv_valuedObjects_20_0 = null;

        EObject lv_valuedObjects_22_0 = null;

        EObject lv_annotations_23_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:3944:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_policy_12_0= rulePolicyRegion ) )? ( (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_14= '}' ) | ( ( (lv_type_15_0= ruleStructType ) ) ( (lv_name_16_0= RULE_ID ) )? otherlv_17= '{' ( (lv_declarations_18_0= ruleDeclarationWOSemicolon ) )* otherlv_19= '}' ) ) ( ( (lv_valuedObjects_20_0= ruleValuedObject ) ) (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )* )? ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:3945:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_policy_12_0= rulePolicyRegion ) )? ( (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_14= '}' ) | ( ( (lv_type_15_0= ruleStructType ) ) ( (lv_name_16_0= RULE_ID ) )? otherlv_17= '{' ( (lv_declarations_18_0= ruleDeclarationWOSemicolon ) )* otherlv_19= '}' ) ) ( ( (lv_valuedObjects_20_0= ruleValuedObject ) ) (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )* )? ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:3945:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_policy_12_0= rulePolicyRegion ) )? ( (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_14= '}' ) | ( ( (lv_type_15_0= ruleStructType ) ) ( (lv_name_16_0= RULE_ID ) )? otherlv_17= '{' ( (lv_declarations_18_0= ruleDeclarationWOSemicolon ) )* otherlv_19= '}' ) ) ( ( (lv_valuedObjects_20_0= ruleValuedObject ) ) (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )* )? ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:3946:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_policy_12_0= rulePolicyRegion ) )? ( (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_14= '}' ) | ( ( (lv_type_15_0= ruleStructType ) ) ( (lv_name_16_0= RULE_ID ) )? otherlv_17= '{' ( (lv_declarations_18_0= ruleDeclarationWOSemicolon ) )* otherlv_19= '}' ) ) ( ( (lv_valuedObjects_20_0= ruleValuedObject ) ) (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )* )? ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:3946:3: ()
            // InternalSCTX.g:3947:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getClassDeclarationWOSemicolonAccess().getPolicyClassDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:3956:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop133:
            do {
                int alt133=2;
                int LA133_0 = input.LA(1);

                if ( (LA133_0==RULE_COMMENT_ANNOTATION||LA133_0==103) ) {
                    alt133=1;
                }


                switch (alt133) {
            	case 1 :
            	    // InternalSCTX.g:3957:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:3957:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:3958:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_100);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop133;
                }
            } while (true);

            // InternalSCTX.g:3975:3: ( (lv_access_2_0= ruleAccessModifier ) )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( ((LA134_0>=152 && LA134_0<=154)) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // InternalSCTX.g:3976:4: (lv_access_2_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:3976:4: (lv_access_2_0= ruleAccessModifier )
                    // InternalSCTX.g:3977:5: lv_access_2_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_100);
                    lv_access_2_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3994:3: ( (lv_const_3_0= 'const' ) )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==61) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // InternalSCTX.g:3995:4: (lv_const_3_0= 'const' )
                    {
                    // InternalSCTX.g:3995:4: (lv_const_3_0= 'const' )
                    // InternalSCTX.g:3996:5: lv_const_3_0= 'const'
                    {
                    lv_const_3_0=(Token)match(input,61,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_const_3_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getConstConstKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "const", true, "const");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:4008:3: ( (lv_input_4_0= 'input' ) )?
            int alt136=2;
            int LA136_0 = input.LA(1);

            if ( (LA136_0==62) ) {
                alt136=1;
            }
            switch (alt136) {
                case 1 :
                    // InternalSCTX.g:4009:4: (lv_input_4_0= 'input' )
                    {
                    // InternalSCTX.g:4009:4: (lv_input_4_0= 'input' )
                    // InternalSCTX.g:4010:5: lv_input_4_0= 'input'
                    {
                    lv_input_4_0=(Token)match(input,62,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_input_4_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getInputInputKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "input", true, "input");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:4022:3: ( (lv_output_5_0= 'output' ) )?
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==63) ) {
                alt137=1;
            }
            switch (alt137) {
                case 1 :
                    // InternalSCTX.g:4023:4: (lv_output_5_0= 'output' )
                    {
                    // InternalSCTX.g:4023:4: (lv_output_5_0= 'output' )
                    // InternalSCTX.g:4024:5: lv_output_5_0= 'output'
                    {
                    lv_output_5_0=(Token)match(input,63,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_output_5_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getOutputOutputKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "output", true, "output");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:4036:3: ( (lv_global_6_0= 'global' ) )?
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==64) ) {
                alt138=1;
            }
            switch (alt138) {
                case 1 :
                    // InternalSCTX.g:4037:4: (lv_global_6_0= 'global' )
                    {
                    // InternalSCTX.g:4037:4: (lv_global_6_0= 'global' )
                    // InternalSCTX.g:4038:5: lv_global_6_0= 'global'
                    {
                    lv_global_6_0=(Token)match(input,64,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_global_6_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getGlobalGlobalKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "global", true, "global");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:4050:3: ( (lv_static_7_0= 'static' ) )?
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==65) ) {
                alt139=1;
            }
            switch (alt139) {
                case 1 :
                    // InternalSCTX.g:4051:4: (lv_static_7_0= 'static' )
                    {
                    // InternalSCTX.g:4051:4: (lv_static_7_0= 'static' )
                    // InternalSCTX.g:4052:5: lv_static_7_0= 'static'
                    {
                    lv_static_7_0=(Token)match(input,65,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_static_7_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getStaticStaticKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "static", true, "static");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:4064:3: ( (lv_host_8_0= 'host' ) )?
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( (LA140_0==66) ) {
                alt140=1;
            }
            switch (alt140) {
                case 1 :
                    // InternalSCTX.g:4065:4: (lv_host_8_0= 'host' )
                    {
                    // InternalSCTX.g:4065:4: (lv_host_8_0= 'host' )
                    // InternalSCTX.g:4066:5: lv_host_8_0= 'host'
                    {
                    lv_host_8_0=(Token)match(input,66,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_host_8_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getHostHostKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "host", true, "host");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:4078:3: ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_policy_12_0= rulePolicyRegion ) )? ( (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_14= '}' ) | ( ( (lv_type_15_0= ruleStructType ) ) ( (lv_name_16_0= RULE_ID ) )? otherlv_17= '{' ( (lv_declarations_18_0= ruleDeclarationWOSemicolon ) )* otherlv_19= '}' ) )
            int alt146=2;
            int LA146_0 = input.LA(1);

            if ( (LA146_0==148) ) {
                alt146=1;
            }
            else if ( (LA146_0==147) ) {
                alt146=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 146, 0, input);

                throw nvae;
            }
            switch (alt146) {
                case 1 :
                    // InternalSCTX.g:4079:4: ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_policy_12_0= rulePolicyRegion ) )? ( (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_14= '}' )
                    {
                    // InternalSCTX.g:4079:4: ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_policy_12_0= rulePolicyRegion ) )? ( (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_14= '}' )
                    // InternalSCTX.g:4080:5: ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_policy_12_0= rulePolicyRegion ) )? ( (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_14= '}'
                    {
                    // InternalSCTX.g:4080:5: ( (lv_type_9_0= ruleClassType ) )
                    // InternalSCTX.g:4081:6: (lv_type_9_0= ruleClassType )
                    {
                    // InternalSCTX.g:4081:6: (lv_type_9_0= ruleClassType )
                    // InternalSCTX.g:4082:7: lv_type_9_0= ruleClassType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getTypeClassTypeEnumRuleCall_9_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_26);
                    lv_type_9_0=ruleClassType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_9_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ClassType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:4099:5: ( (lv_name_10_0= RULE_ID ) )?
                    int alt141=2;
                    int LA141_0 = input.LA(1);

                    if ( (LA141_0==RULE_ID) ) {
                        alt141=1;
                    }
                    switch (alt141) {
                        case 1 :
                            // InternalSCTX.g:4100:6: (lv_name_10_0= RULE_ID )
                            {
                            // InternalSCTX.g:4100:6: (lv_name_10_0= RULE_ID )
                            // InternalSCTX.g:4101:7: lv_name_10_0= RULE_ID
                            {
                            lv_name_10_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_101); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_name_10_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getNameIDTerminalRuleCall_9_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"name",
                              								lv_name_10_0,
                              								"de.cau.cs.kieler.annotations.Annotations.ID");
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_11=(Token)match(input,21,FollowSets000.FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_11, grammarAccess.getClassDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_9_0_2());
                      				
                    }
                    // InternalSCTX.g:4121:5: ( (lv_policy_12_0= rulePolicyRegion ) )?
                    int alt142=2;
                    int LA142_0 = input.LA(1);

                    if ( (LA142_0==67) ) {
                        alt142=1;
                    }
                    switch (alt142) {
                        case 1 :
                            // InternalSCTX.g:4122:6: (lv_policy_12_0= rulePolicyRegion )
                            {
                            // InternalSCTX.g:4122:6: (lv_policy_12_0= rulePolicyRegion )
                            // InternalSCTX.g:4123:7: lv_policy_12_0= rulePolicyRegion
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getPolicyPolicyRegionParserRuleCall_9_0_3_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_103);
                            lv_policy_12_0=rulePolicyRegion();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                              							}
                              							set(
                              								current,
                              								"policy",
                              								lv_policy_12_0,
                              								"de.cau.cs.kieler.sccharts.text.SCTX.PolicyRegion");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:4140:5: ( (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon ) )*
                    loop143:
                    do {
                        int alt143=2;
                        int LA143_0 = input.LA(1);

                        if ( (LA143_0==RULE_ID||LA143_0==RULE_COMMENT_ANNOTATION||LA143_0==29||(LA143_0>=61 && LA143_0<=66)||(LA143_0>=78 && LA143_0<=80)||LA143_0==103||(LA143_0>=113 && LA143_0<=118)||(LA143_0>=147 && LA143_0<=148)||(LA143_0>=152 && LA143_0<=155)) ) {
                            alt143=1;
                        }


                        switch (alt143) {
                    	case 1 :
                    	    // InternalSCTX.g:4141:6: (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon )
                    	    {
                    	    // InternalSCTX.g:4141:6: (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon )
                    	    // InternalSCTX.g:4142:7: lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getDeclarationsDeclarationOrMethodWOSemicolonParserRuleCall_9_0_4_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_103);
                    	    lv_declarations_13_0=ruleDeclarationOrMethodWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_13_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationOrMethodWOSemicolon");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop143;
                        }
                    } while (true);

                    otherlv_14=(Token)match(input,22,FollowSets000.FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_14, grammarAccess.getClassDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_9_0_5());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:4165:4: ( ( (lv_type_15_0= ruleStructType ) ) ( (lv_name_16_0= RULE_ID ) )? otherlv_17= '{' ( (lv_declarations_18_0= ruleDeclarationWOSemicolon ) )* otherlv_19= '}' )
                    {
                    // InternalSCTX.g:4165:4: ( ( (lv_type_15_0= ruleStructType ) ) ( (lv_name_16_0= RULE_ID ) )? otherlv_17= '{' ( (lv_declarations_18_0= ruleDeclarationWOSemicolon ) )* otherlv_19= '}' )
                    // InternalSCTX.g:4166:5: ( (lv_type_15_0= ruleStructType ) ) ( (lv_name_16_0= RULE_ID ) )? otherlv_17= '{' ( (lv_declarations_18_0= ruleDeclarationWOSemicolon ) )* otherlv_19= '}'
                    {
                    // InternalSCTX.g:4166:5: ( (lv_type_15_0= ruleStructType ) )
                    // InternalSCTX.g:4167:6: (lv_type_15_0= ruleStructType )
                    {
                    // InternalSCTX.g:4167:6: (lv_type_15_0= ruleStructType )
                    // InternalSCTX.g:4168:7: lv_type_15_0= ruleStructType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getTypeStructTypeEnumRuleCall_9_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_26);
                    lv_type_15_0=ruleStructType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_15_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.StructType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:4185:5: ( (lv_name_16_0= RULE_ID ) )?
                    int alt144=2;
                    int LA144_0 = input.LA(1);

                    if ( (LA144_0==RULE_ID) ) {
                        alt144=1;
                    }
                    switch (alt144) {
                        case 1 :
                            // InternalSCTX.g:4186:6: (lv_name_16_0= RULE_ID )
                            {
                            // InternalSCTX.g:4186:6: (lv_name_16_0= RULE_ID )
                            // InternalSCTX.g:4187:7: lv_name_16_0= RULE_ID
                            {
                            lv_name_16_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_101); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_name_16_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getNameIDTerminalRuleCall_9_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"name",
                              								lv_name_16_0,
                              								"de.cau.cs.kieler.annotations.Annotations.ID");
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_17=(Token)match(input,21,FollowSets000.FOLLOW_105); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_17, grammarAccess.getClassDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_9_1_2());
                      				
                    }
                    // InternalSCTX.g:4207:5: ( (lv_declarations_18_0= ruleDeclarationWOSemicolon ) )*
                    loop145:
                    do {
                        int alt145=2;
                        int LA145_0 = input.LA(1);

                        if ( (LA145_0==RULE_COMMENT_ANNOTATION||LA145_0==29||(LA145_0>=61 && LA145_0<=66)||(LA145_0>=78 && LA145_0<=80)||LA145_0==103||(LA145_0>=113 && LA145_0<=118)||(LA145_0>=147 && LA145_0<=148)||(LA145_0>=152 && LA145_0<=154)) ) {
                            alt145=1;
                        }


                        switch (alt145) {
                    	case 1 :
                    	    // InternalSCTX.g:4208:6: (lv_declarations_18_0= ruleDeclarationWOSemicolon )
                    	    {
                    	    // InternalSCTX.g:4208:6: (lv_declarations_18_0= ruleDeclarationWOSemicolon )
                    	    // InternalSCTX.g:4209:7: lv_declarations_18_0= ruleDeclarationWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_9_1_3_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_105);
                    	    lv_declarations_18_0=ruleDeclarationWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_18_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop145;
                        }
                    } while (true);

                    otherlv_19=(Token)match(input,22,FollowSets000.FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_19, grammarAccess.getClassDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_9_1_4());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:4232:3: ( ( (lv_valuedObjects_20_0= ruleValuedObject ) ) (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )* )?
            int alt148=2;
            alt148 = dfa148.predict(input);
            switch (alt148) {
                case 1 :
                    // InternalSCTX.g:4233:4: ( (lv_valuedObjects_20_0= ruleValuedObject ) ) (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )*
                    {
                    // InternalSCTX.g:4233:4: ( (lv_valuedObjects_20_0= ruleValuedObject ) )
                    // InternalSCTX.g:4234:5: (lv_valuedObjects_20_0= ruleValuedObject )
                    {
                    // InternalSCTX.g:4234:5: (lv_valuedObjects_20_0= ruleValuedObject )
                    // InternalSCTX.g:4235:6: lv_valuedObjects_20_0= ruleValuedObject
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_10_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_106);
                    lv_valuedObjects_20_0=ruleValuedObject();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                      						}
                      						add(
                      							current,
                      							"valuedObjects",
                      							lv_valuedObjects_20_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:4252:4: (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )*
                    loop147:
                    do {
                        int alt147=2;
                        int LA147_0 = input.LA(1);

                        if ( (LA147_0==20) ) {
                            alt147=1;
                        }


                        switch (alt147) {
                    	case 1 :
                    	    // InternalSCTX.g:4253:5: otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) )
                    	    {
                    	    otherlv_21=(Token)match(input,20,FollowSets000.FOLLOW_107); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_21, grammarAccess.getClassDeclarationWOSemicolonAccess().getCommaKeyword_10_1_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:4257:5: ( (lv_valuedObjects_22_0= ruleValuedObject ) )
                    	    // InternalSCTX.g:4258:6: (lv_valuedObjects_22_0= ruleValuedObject )
                    	    {
                    	    // InternalSCTX.g:4258:6: (lv_valuedObjects_22_0= ruleValuedObject )
                    	    // InternalSCTX.g:4259:7: lv_valuedObjects_22_0= ruleValuedObject
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_10_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_106);
                    	    lv_valuedObjects_22_0=ruleValuedObject();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"valuedObjects",
                    	      								lv_valuedObjects_22_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop147;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:4278:3: ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )?
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( (LA149_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt149=1;
            }
            switch (alt149) {
                case 1 :
                    // InternalSCTX.g:4279:4: (lv_annotations_23_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:4279:4: (lv_annotations_23_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:4280:5: lv_annotations_23_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_11_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_23_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_23_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassDeclarationWOSemicolon"


    // $ANTLR start "entryRulePolicyRegion"
    // InternalSCTX.g:4301:1: entryRulePolicyRegion returns [EObject current=null] : iv_rulePolicyRegion= rulePolicyRegion EOF ;
    public final EObject entryRulePolicyRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePolicyRegion = null;


        try {
            // InternalSCTX.g:4301:53: (iv_rulePolicyRegion= rulePolicyRegion EOF )
            // InternalSCTX.g:4302:2: iv_rulePolicyRegion= rulePolicyRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPolicyRegionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePolicyRegion=rulePolicyRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePolicyRegion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePolicyRegion"


    // $ANTLR start "rulePolicyRegion"
    // InternalSCTX.g:4308:1: rulePolicyRegion returns [EObject current=null] : (otherlv_0= 'policy' ( (lv_name_1_0= RULE_ID ) ) ( (lv_label_2_0= RULE_STRING ) )? otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclarationWOSemicolon ) )* ( (lv_states_5_0= rulePolicyState ) )+ otherlv_6= '}' ) ;
    public final EObject rulePolicyRegion() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token lv_label_2_0=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        EObject lv_declarations_4_0 = null;

        EObject lv_states_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:4314:2: ( (otherlv_0= 'policy' ( (lv_name_1_0= RULE_ID ) ) ( (lv_label_2_0= RULE_STRING ) )? otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclarationWOSemicolon ) )* ( (lv_states_5_0= rulePolicyState ) )+ otherlv_6= '}' ) )
            // InternalSCTX.g:4315:2: (otherlv_0= 'policy' ( (lv_name_1_0= RULE_ID ) ) ( (lv_label_2_0= RULE_STRING ) )? otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclarationWOSemicolon ) )* ( (lv_states_5_0= rulePolicyState ) )+ otherlv_6= '}' )
            {
            // InternalSCTX.g:4315:2: (otherlv_0= 'policy' ( (lv_name_1_0= RULE_ID ) ) ( (lv_label_2_0= RULE_STRING ) )? otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclarationWOSemicolon ) )* ( (lv_states_5_0= rulePolicyState ) )+ otherlv_6= '}' )
            // InternalSCTX.g:4316:3: otherlv_0= 'policy' ( (lv_name_1_0= RULE_ID ) ) ( (lv_label_2_0= RULE_STRING ) )? otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclarationWOSemicolon ) )* ( (lv_states_5_0= rulePolicyState ) )+ otherlv_6= '}'
            {
            otherlv_0=(Token)match(input,67,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPolicyRegionAccess().getPolicyKeyword_0());
              		
            }
            // InternalSCTX.g:4320:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalSCTX.g:4321:4: (lv_name_1_0= RULE_ID )
            {
            // InternalSCTX.g:4321:4: (lv_name_1_0= RULE_ID )
            // InternalSCTX.g:4322:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_108); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getPolicyRegionAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getPolicyRegionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalSCTX.g:4338:3: ( (lv_label_2_0= RULE_STRING ) )?
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( (LA150_0==RULE_STRING) ) {
                alt150=1;
            }
            switch (alt150) {
                case 1 :
                    // InternalSCTX.g:4339:4: (lv_label_2_0= RULE_STRING )
                    {
                    // InternalSCTX.g:4339:4: (lv_label_2_0= RULE_STRING )
                    // InternalSCTX.g:4340:5: lv_label_2_0= RULE_STRING
                    {
                    lv_label_2_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_2_0, grammarAccess.getPolicyRegionAccess().getLabelSTRINGTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getPolicyRegionRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_2_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,21,FollowSets000.FOLLOW_109); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getPolicyRegionAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalSCTX.g:4360:3: ( (lv_declarations_4_0= ruleDeclarationWOSemicolon ) )*
            loop151:
            do {
                int alt151=2;
                alt151 = dfa151.predict(input);
                switch (alt151) {
            	case 1 :
            	    // InternalSCTX.g:4361:4: (lv_declarations_4_0= ruleDeclarationWOSemicolon )
            	    {
            	    // InternalSCTX.g:4361:4: (lv_declarations_4_0= ruleDeclarationWOSemicolon )
            	    // InternalSCTX.g:4362:5: lv_declarations_4_0= ruleDeclarationWOSemicolon
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPolicyRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_109);
            	    lv_declarations_4_0=ruleDeclarationWOSemicolon();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPolicyRegionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_4_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop151;
                }
            } while (true);

            // InternalSCTX.g:4379:3: ( (lv_states_5_0= rulePolicyState ) )+
            int cnt152=0;
            loop152:
            do {
                int alt152=2;
                int LA152_0 = input.LA(1);

                if ( (LA152_0==RULE_COMMENT_ANNOTATION||LA152_0==23||LA152_0==27||LA152_0==103) ) {
                    alt152=1;
                }


                switch (alt152) {
            	case 1 :
            	    // InternalSCTX.g:4380:4: (lv_states_5_0= rulePolicyState )
            	    {
            	    // InternalSCTX.g:4380:4: (lv_states_5_0= rulePolicyState )
            	    // InternalSCTX.g:4381:5: lv_states_5_0= rulePolicyState
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPolicyRegionAccess().getStatesPolicyStateParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_110);
            	    lv_states_5_0=rulePolicyState();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPolicyRegionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"states",
            	      						lv_states_5_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.PolicyState");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt152 >= 1 ) break loop152;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(152, input);
                        throw eee;
                }
                cnt152++;
            } while (true);

            otherlv_6=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getPolicyRegionAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePolicyRegion"


    // $ANTLR start "entryRulePolicyState"
    // InternalSCTX.g:4406:1: entryRulePolicyState returns [EObject current=null] : iv_rulePolicyState= rulePolicyState EOF ;
    public final EObject entryRulePolicyState() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePolicyState = null;


        try {
            // InternalSCTX.g:4406:52: (iv_rulePolicyState= rulePolicyState EOF )
            // InternalSCTX.g:4407:2: iv_rulePolicyState= rulePolicyState EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPolicyStateRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePolicyState=rulePolicyState();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePolicyState; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePolicyState"


    // $ANTLR start "rulePolicyState"
    // InternalSCTX.g:4413:1: rulePolicyState returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? otherlv_2= 'state' ( (lv_name_3_0= RULE_ID ) ) ( (lv_label_4_0= RULE_STRING ) )? ( (lv_outgoingTransitions_5_0= rulePolicyTransition ) )* ) ;
    public final EObject rulePolicyState() throws RecognitionException {
        EObject current = null;

        Token lv_initial_1_0=null;
        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token lv_label_4_0=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_outgoingTransitions_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:4419:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? otherlv_2= 'state' ( (lv_name_3_0= RULE_ID ) ) ( (lv_label_4_0= RULE_STRING ) )? ( (lv_outgoingTransitions_5_0= rulePolicyTransition ) )* ) )
            // InternalSCTX.g:4420:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? otherlv_2= 'state' ( (lv_name_3_0= RULE_ID ) ) ( (lv_label_4_0= RULE_STRING ) )? ( (lv_outgoingTransitions_5_0= rulePolicyTransition ) )* )
            {
            // InternalSCTX.g:4420:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? otherlv_2= 'state' ( (lv_name_3_0= RULE_ID ) ) ( (lv_label_4_0= RULE_STRING ) )? ( (lv_outgoingTransitions_5_0= rulePolicyTransition ) )* )
            // InternalSCTX.g:4421:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? otherlv_2= 'state' ( (lv_name_3_0= RULE_ID ) ) ( (lv_label_4_0= RULE_STRING ) )? ( (lv_outgoingTransitions_5_0= rulePolicyTransition ) )*
            {
            // InternalSCTX.g:4421:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop153:
            do {
                int alt153=2;
                int LA153_0 = input.LA(1);

                if ( (LA153_0==RULE_COMMENT_ANNOTATION||LA153_0==103) ) {
                    alt153=1;
                }


                switch (alt153) {
            	case 1 :
            	    // InternalSCTX.g:4422:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:4422:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:4423:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPolicyStateAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_111);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPolicyStateRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop153;
                }
            } while (true);

            // InternalSCTX.g:4440:3: ( (lv_initial_1_0= 'initial' ) )?
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( (LA154_0==23) ) {
                alt154=1;
            }
            switch (alt154) {
                case 1 :
                    // InternalSCTX.g:4441:4: (lv_initial_1_0= 'initial' )
                    {
                    // InternalSCTX.g:4441:4: (lv_initial_1_0= 'initial' )
                    // InternalSCTX.g:4442:5: lv_initial_1_0= 'initial'
                    {
                    lv_initial_1_0=(Token)match(input,23,FollowSets000.FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_initial_1_0, grammarAccess.getPolicyStateAccess().getInitialInitialKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getPolicyStateRule());
                      					}
                      					setWithLastConsumed(current, "initial", true, "initial");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,27,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getPolicyStateAccess().getStateKeyword_2());
              		
            }
            // InternalSCTX.g:4458:3: ( (lv_name_3_0= RULE_ID ) )
            // InternalSCTX.g:4459:4: (lv_name_3_0= RULE_ID )
            {
            // InternalSCTX.g:4459:4: (lv_name_3_0= RULE_ID )
            // InternalSCTX.g:4460:5: lv_name_3_0= RULE_ID
            {
            lv_name_3_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_112); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_3_0, grammarAccess.getPolicyStateAccess().getNameIDTerminalRuleCall_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getPolicyStateRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_3_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalSCTX.g:4476:3: ( (lv_label_4_0= RULE_STRING ) )?
            int alt155=2;
            int LA155_0 = input.LA(1);

            if ( (LA155_0==RULE_STRING) ) {
                alt155=1;
            }
            switch (alt155) {
                case 1 :
                    // InternalSCTX.g:4477:4: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalSCTX.g:4477:4: (lv_label_4_0= RULE_STRING )
                    // InternalSCTX.g:4478:5: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_113); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_4_0, grammarAccess.getPolicyStateAccess().getLabelSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getPolicyStateRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_4_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:4494:3: ( (lv_outgoingTransitions_5_0= rulePolicyTransition ) )*
            loop156:
            do {
                int alt156=2;
                alt156 = dfa156.predict(input);
                switch (alt156) {
            	case 1 :
            	    // InternalSCTX.g:4495:4: (lv_outgoingTransitions_5_0= rulePolicyTransition )
            	    {
            	    // InternalSCTX.g:4495:4: (lv_outgoingTransitions_5_0= rulePolicyTransition )
            	    // InternalSCTX.g:4496:5: lv_outgoingTransitions_5_0= rulePolicyTransition
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPolicyStateAccess().getOutgoingTransitionsPolicyTransitionParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_113);
            	    lv_outgoingTransitions_5_0=rulePolicyTransition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPolicyStateRule());
            	      					}
            	      					add(
            	      						current,
            	      						"outgoingTransitions",
            	      						lv_outgoingTransitions_5_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.PolicyTransition");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop156;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePolicyState"


    // $ANTLR start "entryRulePolicyTransition"
    // InternalSCTX.g:4517:1: entryRulePolicyTransition returns [EObject current=null] : iv_rulePolicyTransition= rulePolicyTransition EOF ;
    public final EObject entryRulePolicyTransition() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePolicyTransition = null;


        try {
            // InternalSCTX.g:4517:57: (iv_rulePolicyTransition= rulePolicyTransition EOF )
            // InternalSCTX.g:4518:2: iv_rulePolicyTransition= rulePolicyTransition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPolicyTransitionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePolicyTransition=rulePolicyTransition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePolicyTransition; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePolicyTransition"


    // $ANTLR start "rulePolicyTransition"
    // InternalSCTX.g:4524:1: rulePolicyTransition returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* (otherlv_2= 'if' ( ( (lv_trigger_3_0= ruleLogicalOrExpression ) ) | ( (lv_trigger_4_0= ruleValuedObjectReference ) ) ) (otherlv_5= ':' ( (lv_effects_6_0= rulePureEmission ) ) (otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) ) )* )? )? otherlv_9= 'go to' ( (otherlv_10= RULE_ID ) ) (otherlv_11= 'label' ( (lv_label_12_0= RULE_STRING ) ) )? ) ;
    public final EObject rulePolicyTransition() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token lv_label_12_0=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_trigger_3_0 = null;

        EObject lv_trigger_4_0 = null;

        EObject lv_effects_6_0 = null;

        EObject lv_effects_8_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:4530:2: ( ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* (otherlv_2= 'if' ( ( (lv_trigger_3_0= ruleLogicalOrExpression ) ) | ( (lv_trigger_4_0= ruleValuedObjectReference ) ) ) (otherlv_5= ':' ( (lv_effects_6_0= rulePureEmission ) ) (otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) ) )* )? )? otherlv_9= 'go to' ( (otherlv_10= RULE_ID ) ) (otherlv_11= 'label' ( (lv_label_12_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:4531:2: ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* (otherlv_2= 'if' ( ( (lv_trigger_3_0= ruleLogicalOrExpression ) ) | ( (lv_trigger_4_0= ruleValuedObjectReference ) ) ) (otherlv_5= ':' ( (lv_effects_6_0= rulePureEmission ) ) (otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) ) )* )? )? otherlv_9= 'go to' ( (otherlv_10= RULE_ID ) ) (otherlv_11= 'label' ( (lv_label_12_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:4531:2: ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* (otherlv_2= 'if' ( ( (lv_trigger_3_0= ruleLogicalOrExpression ) ) | ( (lv_trigger_4_0= ruleValuedObjectReference ) ) ) (otherlv_5= ':' ( (lv_effects_6_0= rulePureEmission ) ) (otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) ) )* )? )? otherlv_9= 'go to' ( (otherlv_10= RULE_ID ) ) (otherlv_11= 'label' ( (lv_label_12_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:4532:3: () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* (otherlv_2= 'if' ( ( (lv_trigger_3_0= ruleLogicalOrExpression ) ) | ( (lv_trigger_4_0= ruleValuedObjectReference ) ) ) (otherlv_5= ':' ( (lv_effects_6_0= rulePureEmission ) ) (otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) ) )* )? )? otherlv_9= 'go to' ( (otherlv_10= RULE_ID ) ) (otherlv_11= 'label' ( (lv_label_12_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:4532:3: ()
            // InternalSCTX.g:4533:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPolicyTransitionAccess().getTransitionAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:4542:3: ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )*
            loop157:
            do {
                int alt157=2;
                int LA157_0 = input.LA(1);

                if ( (LA157_0==RULE_COMMENT_ANNOTATION||LA157_0==103) ) {
                    alt157=1;
                }


                switch (alt157) {
            	case 1 :
            	    // InternalSCTX.g:4543:4: (lv_annotations_1_0= ruleRestrictedTypeAnnotation )
            	    {
            	    // InternalSCTX.g:4543:4: (lv_annotations_1_0= ruleRestrictedTypeAnnotation )
            	    // InternalSCTX.g:4544:5: lv_annotations_1_0= ruleRestrictedTypeAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPolicyTransitionAccess().getAnnotationsRestrictedTypeAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_114);
            	    lv_annotations_1_0=ruleRestrictedTypeAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPolicyTransitionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.RestrictedTypeAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop157;
                }
            } while (true);

            // InternalSCTX.g:4561:3: (otherlv_2= 'if' ( ( (lv_trigger_3_0= ruleLogicalOrExpression ) ) | ( (lv_trigger_4_0= ruleValuedObjectReference ) ) ) (otherlv_5= ':' ( (lv_effects_6_0= rulePureEmission ) ) (otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) ) )* )? )?
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( (LA161_0==38) ) {
                alt161=1;
            }
            switch (alt161) {
                case 1 :
                    // InternalSCTX.g:4562:4: otherlv_2= 'if' ( ( (lv_trigger_3_0= ruleLogicalOrExpression ) ) | ( (lv_trigger_4_0= ruleValuedObjectReference ) ) ) (otherlv_5= ':' ( (lv_effects_6_0= rulePureEmission ) ) (otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) ) )* )?
                    {
                    otherlv_2=(Token)match(input,38,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPolicyTransitionAccess().getIfKeyword_2_0());
                      			
                    }
                    // InternalSCTX.g:4566:4: ( ( (lv_trigger_3_0= ruleLogicalOrExpression ) ) | ( (lv_trigger_4_0= ruleValuedObjectReference ) ) )
                    int alt158=2;
                    int LA158_0 = input.LA(1);

                    if ( (LA158_0==RULE_STRING||(LA158_0>=RULE_INT && LA158_0<=RULE_COMMENT_ANNOTATION)||LA158_0==21||LA158_0==31||LA158_0==33||LA158_0==80||LA158_0==85||LA158_0==94||LA158_0==99||LA158_0==103||(LA158_0>=142 && LA158_0<=144)) ) {
                        alt158=1;
                    }
                    else if ( (LA158_0==RULE_ID) ) {
                        int LA158_2 = input.LA(2);

                        if ( (synpred176_InternalSCTX()) ) {
                            alt158=1;
                        }
                        else if ( (true) ) {
                            alt158=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 158, 2, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 158, 0, input);

                        throw nvae;
                    }
                    switch (alt158) {
                        case 1 :
                            // InternalSCTX.g:4567:5: ( (lv_trigger_3_0= ruleLogicalOrExpression ) )
                            {
                            // InternalSCTX.g:4567:5: ( (lv_trigger_3_0= ruleLogicalOrExpression ) )
                            // InternalSCTX.g:4568:6: (lv_trigger_3_0= ruleLogicalOrExpression )
                            {
                            // InternalSCTX.g:4568:6: (lv_trigger_3_0= ruleLogicalOrExpression )
                            // InternalSCTX.g:4569:7: lv_trigger_3_0= ruleLogicalOrExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getPolicyTransitionAccess().getTriggerLogicalOrExpressionParserRuleCall_2_1_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_115);
                            lv_trigger_3_0=ruleLogicalOrExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getPolicyTransitionRule());
                              							}
                              							set(
                              								current,
                              								"trigger",
                              								lv_trigger_3_0,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.LogicalOrExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:4587:5: ( (lv_trigger_4_0= ruleValuedObjectReference ) )
                            {
                            // InternalSCTX.g:4587:5: ( (lv_trigger_4_0= ruleValuedObjectReference ) )
                            // InternalSCTX.g:4588:6: (lv_trigger_4_0= ruleValuedObjectReference )
                            {
                            // InternalSCTX.g:4588:6: (lv_trigger_4_0= ruleValuedObjectReference )
                            // InternalSCTX.g:4589:7: lv_trigger_4_0= ruleValuedObjectReference
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getPolicyTransitionAccess().getTriggerValuedObjectReferenceParserRuleCall_2_1_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_115);
                            lv_trigger_4_0=ruleValuedObjectReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getPolicyTransitionRule());
                              							}
                              							set(
                              								current,
                              								"trigger",
                              								lv_trigger_4_0,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:4607:4: (otherlv_5= ':' ( (lv_effects_6_0= rulePureEmission ) ) (otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) ) )* )?
                    int alt160=2;
                    int LA160_0 = input.LA(1);

                    if ( (LA160_0==48) ) {
                        alt160=1;
                    }
                    switch (alt160) {
                        case 1 :
                            // InternalSCTX.g:4608:5: otherlv_5= ':' ( (lv_effects_6_0= rulePureEmission ) ) (otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) ) )*
                            {
                            otherlv_5=(Token)match(input,48,FollowSets000.FOLLOW_83); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_5, grammarAccess.getPolicyTransitionAccess().getColonKeyword_2_2_0());
                              				
                            }
                            // InternalSCTX.g:4612:5: ( (lv_effects_6_0= rulePureEmission ) )
                            // InternalSCTX.g:4613:6: (lv_effects_6_0= rulePureEmission )
                            {
                            // InternalSCTX.g:4613:6: (lv_effects_6_0= rulePureEmission )
                            // InternalSCTX.g:4614:7: lv_effects_6_0= rulePureEmission
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getPolicyTransitionAccess().getEffectsPureEmissionParserRuleCall_2_2_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_116);
                            lv_effects_6_0=rulePureEmission();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getPolicyTransitionRule());
                              							}
                              							add(
                              								current,
                              								"effects",
                              								lv_effects_6_0,
                              								"de.cau.cs.kieler.kexpressions.keffects.KEffects.PureEmission");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalSCTX.g:4631:5: (otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) ) )*
                            loop159:
                            do {
                                int alt159=2;
                                int LA159_0 = input.LA(1);

                                if ( (LA159_0==20) ) {
                                    alt159=1;
                                }


                                switch (alt159) {
                            	case 1 :
                            	    // InternalSCTX.g:4632:6: otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) )
                            	    {
                            	    otherlv_7=(Token)match(input,20,FollowSets000.FOLLOW_83); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_7, grammarAccess.getPolicyTransitionAccess().getCommaKeyword_2_2_2_0());
                            	      					
                            	    }
                            	    // InternalSCTX.g:4636:6: ( (lv_effects_8_0= rulePureEmission ) )
                            	    // InternalSCTX.g:4637:7: (lv_effects_8_0= rulePureEmission )
                            	    {
                            	    // InternalSCTX.g:4637:7: (lv_effects_8_0= rulePureEmission )
                            	    // InternalSCTX.g:4638:8: lv_effects_8_0= rulePureEmission
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getPolicyTransitionAccess().getEffectsPureEmissionParserRuleCall_2_2_2_1_0());
                            	      							
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_116);
                            	    lv_effects_8_0=rulePureEmission();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getPolicyTransitionRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"effects",
                            	      									lv_effects_8_0,
                            	      									"de.cau.cs.kieler.kexpressions.keffects.KEffects.PureEmission");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop159;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,68,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getPolicyTransitionAccess().getGoToKeyword_3());
              		
            }
            // InternalSCTX.g:4662:3: ( (otherlv_10= RULE_ID ) )
            // InternalSCTX.g:4663:4: (otherlv_10= RULE_ID )
            {
            // InternalSCTX.g:4663:4: (otherlv_10= RULE_ID )
            // InternalSCTX.g:4664:5: otherlv_10= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getPolicyTransitionRule());
              					}
              				
            }
            otherlv_10=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_10, grammarAccess.getPolicyTransitionAccess().getTargetStateStateCrossReference_4_0());
              				
            }

            }


            }

            // InternalSCTX.g:4678:3: (otherlv_11= 'label' ( (lv_label_12_0= RULE_STRING ) ) )?
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( (LA162_0==44) ) {
                alt162=1;
            }
            switch (alt162) {
                case 1 :
                    // InternalSCTX.g:4679:4: otherlv_11= 'label' ( (lv_label_12_0= RULE_STRING ) )
                    {
                    otherlv_11=(Token)match(input,44,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getPolicyTransitionAccess().getLabelKeyword_5_0());
                      			
                    }
                    // InternalSCTX.g:4683:4: ( (lv_label_12_0= RULE_STRING ) )
                    // InternalSCTX.g:4684:5: (lv_label_12_0= RULE_STRING )
                    {
                    // InternalSCTX.g:4684:5: (lv_label_12_0= RULE_STRING )
                    // InternalSCTX.g:4685:6: lv_label_12_0= RULE_STRING
                    {
                    lv_label_12_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_12_0, grammarAccess.getPolicyTransitionAccess().getLabelSTRINGTerminalRuleCall_5_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPolicyTransitionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_12_0,
                      							"de.cau.cs.kieler.annotations.Annotations.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePolicyTransition"


    // $ANTLR start "entryRuleDeclarationOrMethodWithKeywordWOSemicolon"
    // InternalSCTX.g:4706:1: entryRuleDeclarationOrMethodWithKeywordWOSemicolon returns [EObject current=null] : iv_ruleDeclarationOrMethodWithKeywordWOSemicolon= ruleDeclarationOrMethodWithKeywordWOSemicolon EOF ;
    public final EObject entryRuleDeclarationOrMethodWithKeywordWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclarationOrMethodWithKeywordWOSemicolon = null;


        try {
            // InternalSCTX.g:4706:82: (iv_ruleDeclarationOrMethodWithKeywordWOSemicolon= ruleDeclarationOrMethodWithKeywordWOSemicolon EOF )
            // InternalSCTX.g:4707:2: iv_ruleDeclarationOrMethodWithKeywordWOSemicolon= ruleDeclarationOrMethodWithKeywordWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationOrMethodWithKeywordWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclarationOrMethodWithKeywordWOSemicolon=ruleDeclarationOrMethodWithKeywordWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclarationOrMethodWithKeywordWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclarationOrMethodWithKeywordWOSemicolon"


    // $ANTLR start "ruleDeclarationOrMethodWithKeywordWOSemicolon"
    // InternalSCTX.g:4713:1: ruleDeclarationOrMethodWithKeywordWOSemicolon returns [EObject current=null] : (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_KeywordMethodDeclarationWOSemicolon_1= ruleKeywordMethodDeclarationWOSemicolon ) ;
    public final EObject ruleDeclarationOrMethodWithKeywordWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject this_DeclarationWOSemicolon_0 = null;

        EObject this_KeywordMethodDeclarationWOSemicolon_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:4719:2: ( (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_KeywordMethodDeclarationWOSemicolon_1= ruleKeywordMethodDeclarationWOSemicolon ) )
            // InternalSCTX.g:4720:2: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_KeywordMethodDeclarationWOSemicolon_1= ruleKeywordMethodDeclarationWOSemicolon )
            {
            // InternalSCTX.g:4720:2: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_KeywordMethodDeclarationWOSemicolon_1= ruleKeywordMethodDeclarationWOSemicolon )
            int alt163=2;
            alt163 = dfa163.predict(input);
            switch (alt163) {
                case 1 :
                    // InternalSCTX.g:4721:3: this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationOrMethodWithKeywordWOSemicolonAccess().getDeclarationWOSemicolonParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DeclarationWOSemicolon_0=ruleDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DeclarationWOSemicolon_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:4733:3: this_KeywordMethodDeclarationWOSemicolon_1= ruleKeywordMethodDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationOrMethodWithKeywordWOSemicolonAccess().getKeywordMethodDeclarationWOSemicolonParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_KeywordMethodDeclarationWOSemicolon_1=ruleKeywordMethodDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_KeywordMethodDeclarationWOSemicolon_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclarationOrMethodWithKeywordWOSemicolon"


    // $ANTLR start "entryRuleKeywordMethodDeclarationWOSemicolon"
    // InternalSCTX.g:4748:1: entryRuleKeywordMethodDeclarationWOSemicolon returns [EObject current=null] : iv_ruleKeywordMethodDeclarationWOSemicolon= ruleKeywordMethodDeclarationWOSemicolon EOF ;
    public final EObject entryRuleKeywordMethodDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeywordMethodDeclarationWOSemicolon = null;


        try {
            // InternalSCTX.g:4748:76: (iv_ruleKeywordMethodDeclarationWOSemicolon= ruleKeywordMethodDeclarationWOSemicolon EOF )
            // InternalSCTX.g:4749:2: iv_ruleKeywordMethodDeclarationWOSemicolon= ruleKeywordMethodDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleKeywordMethodDeclarationWOSemicolon=ruleKeywordMethodDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeywordMethodDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeywordMethodDeclarationWOSemicolon"


    // $ANTLR start "ruleKeywordMethodDeclarationWOSemicolon"
    // InternalSCTX.g:4755:1: ruleKeywordMethodDeclarationWOSemicolon returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? otherlv_3= 'method' ( (lv_returnType_4_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_5_0= ruleSimpleValuedObject ) ) ( (otherlv_6= '(' ( (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )? (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' )? ) ;
    public final EObject ruleKeywordMethodDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_18=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_access_2_0 = null;

        Enumerator lv_returnType_4_0 = null;

        EObject lv_valuedObjects_5_0 = null;

        EObject lv_parameterDeclarations_7_0 = null;

        EObject lv_parameterDeclarations_9_0 = null;

        EObject lv_schedule_13_0 = null;

        EObject lv_annotations_15_0 = null;

        EObject lv_declarations_16_0 = null;

        EObject lv_statements_17_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:4761:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? otherlv_3= 'method' ( (lv_returnType_4_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_5_0= ruleSimpleValuedObject ) ) ( (otherlv_6= '(' ( (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )? (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' )? ) )
            // InternalSCTX.g:4762:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? otherlv_3= 'method' ( (lv_returnType_4_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_5_0= ruleSimpleValuedObject ) ) ( (otherlv_6= '(' ( (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )? (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' )? )
            {
            // InternalSCTX.g:4762:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? otherlv_3= 'method' ( (lv_returnType_4_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_5_0= ruleSimpleValuedObject ) ) ( (otherlv_6= '(' ( (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )? (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' )? )
            // InternalSCTX.g:4763:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? otherlv_3= 'method' ( (lv_returnType_4_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_5_0= ruleSimpleValuedObject ) ) ( (otherlv_6= '(' ( (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )? (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' )?
            {
            // InternalSCTX.g:4763:3: ()
            // InternalSCTX.g:4764:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getMethodImplementationDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:4773:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop164:
            do {
                int alt164=2;
                int LA164_0 = input.LA(1);

                if ( (LA164_0==RULE_COMMENT_ANNOTATION||LA164_0==103) ) {
                    alt164=1;
                }


                switch (alt164) {
            	case 1 :
            	    // InternalSCTX.g:4774:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:4774:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:4775:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_117);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop164;
                }
            } while (true);

            // InternalSCTX.g:4792:3: ( (lv_access_2_0= ruleAccessModifier ) )?
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( ((LA165_0>=152 && LA165_0<=154)) ) {
                alt165=1;
            }
            switch (alt165) {
                case 1 :
                    // InternalSCTX.g:4793:4: (lv_access_2_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:4793:4: (lv_access_2_0= ruleAccessModifier )
                    // InternalSCTX.g:4794:5: lv_access_2_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_118);
                    lv_access_2_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,69,FollowSets000.FOLLOW_119); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getMethodKeyword_3());
              		
            }
            // InternalSCTX.g:4815:3: ( (lv_returnType_4_0= ruleMethodReturnType ) )?
            int alt166=2;
            int LA166_0 = input.LA(1);

            if ( ((LA166_0>=114 && LA166_0<=117)||LA166_0==155) ) {
                alt166=1;
            }
            switch (alt166) {
                case 1 :
                    // InternalSCTX.g:4816:4: (lv_returnType_4_0= ruleMethodReturnType )
                    {
                    // InternalSCTX.g:4816:4: (lv_returnType_4_0= ruleMethodReturnType )
                    // InternalSCTX.g:4817:5: lv_returnType_4_0= ruleMethodReturnType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getReturnTypeMethodReturnTypeEnumRuleCall_4_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_119);
                    lv_returnType_4_0=ruleMethodReturnType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"returnType",
                      						lv_returnType_4_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.MethodReturnType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:4834:3: ( (lv_valuedObjects_5_0= ruleSimpleValuedObject ) )
            // InternalSCTX.g:4835:4: (lv_valuedObjects_5_0= ruleSimpleValuedObject )
            {
            // InternalSCTX.g:4835:4: (lv_valuedObjects_5_0= ruleSimpleValuedObject )
            // InternalSCTX.g:4836:5: lv_valuedObjects_5_0= ruleSimpleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getValuedObjectsSimpleValuedObjectParserRuleCall_5_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_120);
            lv_valuedObjects_5_0=ruleSimpleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_5_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.SimpleValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:4853:3: ( (otherlv_6= '(' ( (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_10= ')' ) | otherlv_11= '()' )
            int alt168=2;
            int LA168_0 = input.LA(1);

            if ( (LA168_0==31) ) {
                alt168=1;
            }
            else if ( (LA168_0==70) ) {
                alt168=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 168, 0, input);

                throw nvae;
            }
            switch (alt168) {
                case 1 :
                    // InternalSCTX.g:4854:4: (otherlv_6= '(' ( (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_10= ')' )
                    {
                    // InternalSCTX.g:4854:4: (otherlv_6= '(' ( (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_10= ')' )
                    // InternalSCTX.g:4855:5: otherlv_6= '(' ( (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_10= ')'
                    {
                    otherlv_6=(Token)match(input,31,FollowSets000.FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getLeftParenthesisKeyword_6_0_0());
                      				
                    }
                    // InternalSCTX.g:4859:5: ( (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon ) )
                    // InternalSCTX.g:4860:6: (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon )
                    {
                    // InternalSCTX.g:4860:6: (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon )
                    // InternalSCTX.g:4861:7: lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_6_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_parameterDeclarations_7_0=ruleVariableDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
                      							}
                      							add(
                      								current,
                      								"parameterDeclarations",
                      								lv_parameterDeclarations_7_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:4878:5: (otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) ) )*
                    loop167:
                    do {
                        int alt167=2;
                        int LA167_0 = input.LA(1);

                        if ( (LA167_0==20) ) {
                            alt167=1;
                        }


                        switch (alt167) {
                    	case 1 :
                    	    // InternalSCTX.g:4879:6: otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) )
                    	    {
                    	    otherlv_8=(Token)match(input,20,FollowSets000.FOLLOW_121); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_8, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getCommaKeyword_6_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCTX.g:4883:6: ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) )
                    	    // InternalSCTX.g:4884:7: (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon )
                    	    {
                    	    // InternalSCTX.g:4884:7: (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon )
                    	    // InternalSCTX.g:4885:8: lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_6_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_31);
                    	    lv_parameterDeclarations_9_0=ruleVariableDeclarationWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameterDeclarations",
                    	      									lv_parameterDeclarations_9_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop167;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,32,FollowSets000.FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_10, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getRightParenthesisKeyword_6_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:4909:4: otherlv_11= '()'
                    {
                    otherlv_11=(Token)match(input,70,FollowSets000.FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getLeftParenthesisRightParenthesisKeyword_6_1());
                      			
                    }

                    }
                    break;

            }

            // InternalSCTX.g:4914:3: (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )?
            int alt170=2;
            alt170 = dfa170.predict(input);
            switch (alt170) {
                case 1 :
                    // InternalSCTX.g:4915:4: otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_12=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getScheduleKeyword_7_0());
                      			
                    }
                    // InternalSCTX.g:4919:4: ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+
                    int cnt169=0;
                    loop169:
                    do {
                        int alt169=2;
                        int LA169_0 = input.LA(1);

                        if ( (LA169_0==RULE_ID) ) {
                            alt169=1;
                        }


                        switch (alt169) {
                    	case 1 :
                    	    // InternalSCTX.g:4920:5: (lv_schedule_13_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:4920:5: (lv_schedule_13_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:4921:6: lv_schedule_13_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getScheduleScheduleObjectReferenceParserRuleCall_7_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_123);
                    	    lv_schedule_13_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_13_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt169 >= 1 ) break loop169;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(169, input);
                                throw eee;
                        }
                        cnt169++;
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:4939:3: (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' )?
            int alt174=2;
            int LA174_0 = input.LA(1);

            if ( (LA174_0==21) ) {
                alt174=1;
            }
            switch (alt174) {
                case 1 :
                    // InternalSCTX.g:4940:4: otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}'
                    {
                    otherlv_14=(Token)match(input,21,FollowSets000.FOLLOW_124); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_8_0());
                      			
                    }
                    // InternalSCTX.g:4944:4: ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
                    int alt171=2;
                    int LA171_0 = input.LA(1);

                    if ( (LA171_0==RULE_SL_COMMENT_ANNOTATION) ) {
                        alt171=1;
                    }
                    switch (alt171) {
                        case 1 :
                            // InternalSCTX.g:4945:5: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                            {
                            // InternalSCTX.g:4945:5: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                            // InternalSCTX.g:4946:6: lv_annotations_15_0= ruleCommentAnnotatonSL
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_8_1_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_98);
                            lv_annotations_15_0=ruleCommentAnnotatonSL();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
                              						}
                              						add(
                              							current,
                              							"annotations",
                              							lv_annotations_15_0,
                              							"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:4963:4: ( (lv_declarations_16_0= ruleDeclaration ) )*
                    loop172:
                    do {
                        int alt172=2;
                        alt172 = dfa172.predict(input);
                        switch (alt172) {
                    	case 1 :
                    	    // InternalSCTX.g:4964:5: (lv_declarations_16_0= ruleDeclaration )
                    	    {
                    	    // InternalSCTX.g:4964:5: (lv_declarations_16_0= ruleDeclaration )
                    	    // InternalSCTX.g:4965:6: lv_declarations_16_0= ruleDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getDeclarationsDeclarationParserRuleCall_8_2_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_98);
                    	    lv_declarations_16_0=ruleDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"declarations",
                    	      							lv_declarations_16_0,
                    	      							"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop172;
                        }
                    } while (true);

                    // InternalSCTX.g:4982:4: ( (lv_statements_17_0= ruleStatement ) )*
                    loop173:
                    do {
                        int alt173=2;
                        int LA173_0 = input.LA(1);

                        if ( (LA173_0==RULE_ID||LA173_0==RULE_COMMENT_ANNOTATION||LA173_0==21||LA173_0==38||LA173_0==47||(LA173_0>=72 && LA173_0<=73)||LA173_0==75||LA173_0==103) ) {
                            alt173=1;
                        }


                        switch (alt173) {
                    	case 1 :
                    	    // InternalSCTX.g:4983:5: (lv_statements_17_0= ruleStatement )
                    	    {
                    	    // InternalSCTX.g:4983:5: (lv_statements_17_0= ruleStatement )
                    	    // InternalSCTX.g:4984:6: lv_statements_17_0= ruleStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getStatementsStatementParserRuleCall_8_3_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_99);
                    	    lv_statements_17_0=ruleStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"statements",
                    	      							lv_statements_17_0,
                    	      							"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop173;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_8_4());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeywordMethodDeclarationWOSemicolon"


    // $ANTLR start "entryRuleModule"
    // InternalSCTX.g:5010:1: entryRuleModule returns [EObject current=null] : iv_ruleModule= ruleModule EOF ;
    public final EObject entryRuleModule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModule = null;


        try {
            // InternalSCTX.g:5010:47: (iv_ruleModule= ruleModule EOF )
            // InternalSCTX.g:5011:2: iv_ruleModule= ruleModule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModuleRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleModule=ruleModule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModule; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModule"


    // $ANTLR start "ruleModule"
    // InternalSCTX.g:5017:1: ruleModule returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'module' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' )? ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* ) ;
    public final EObject ruleModule() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_declarations_4_0 = null;

        EObject lv_statements_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:5023:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'module' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' )? ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* ) )
            // InternalSCTX.g:5024:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'module' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' )? ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* )
            {
            // InternalSCTX.g:5024:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'module' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' )? ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* )
            // InternalSCTX.g:5025:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'module' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' )? ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )*
            {
            // InternalSCTX.g:5025:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop175:
            do {
                int alt175=2;
                int LA175_0 = input.LA(1);

                if ( (LA175_0==RULE_COMMENT_ANNOTATION||LA175_0==103) ) {
                    alt175=1;
                }


                switch (alt175) {
            	case 1 :
            	    // InternalSCTX.g:5026:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:5026:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:5027:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModuleAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_125);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModuleRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop175;
                }
            } while (true);

            otherlv_1=(Token)match(input,71,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getModuleAccess().getModuleKeyword_1());
              		
            }
            // InternalSCTX.g:5048:3: ( (lv_name_2_0= RULE_ID ) )
            // InternalSCTX.g:5049:4: (lv_name_2_0= RULE_ID )
            {
            // InternalSCTX.g:5049:4: (lv_name_2_0= RULE_ID )
            // InternalSCTX.g:5050:5: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_126); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getModuleRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalSCTX.g:5066:3: (otherlv_3= ':' )?
            int alt176=2;
            int LA176_0 = input.LA(1);

            if ( (LA176_0==48) ) {
                alt176=1;
            }
            switch (alt176) {
                case 1 :
                    // InternalSCTX.g:5067:4: otherlv_3= ':'
                    {
                    otherlv_3=(Token)match(input,48,FollowSets000.FOLLOW_127); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getModuleAccess().getColonKeyword_3());
                      			
                    }

                    }
                    break;

            }

            // InternalSCTX.g:5072:3: ( (lv_declarations_4_0= ruleDeclaration ) )*
            loop177:
            do {
                int alt177=2;
                alt177 = dfa177.predict(input);
                switch (alt177) {
            	case 1 :
            	    // InternalSCTX.g:5073:4: (lv_declarations_4_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:5073:4: (lv_declarations_4_0= ruleDeclaration )
            	    // InternalSCTX.g:5074:5: lv_declarations_4_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModuleAccess().getDeclarationsDeclarationParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_127);
            	    lv_declarations_4_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModuleRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_4_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop177;
                }
            } while (true);

            // InternalSCTX.g:5091:3: ( (lv_statements_5_0= ruleStatement ) )*
            loop178:
            do {
                int alt178=2;
                int LA178_0 = input.LA(1);

                if ( (LA178_0==RULE_ID||LA178_0==RULE_COMMENT_ANNOTATION||LA178_0==21||LA178_0==38||LA178_0==47||(LA178_0>=72 && LA178_0<=73)||LA178_0==75||LA178_0==103) ) {
                    alt178=1;
                }


                switch (alt178) {
            	case 1 :
            	    // InternalSCTX.g:5092:4: (lv_statements_5_0= ruleStatement )
            	    {
            	    // InternalSCTX.g:5092:4: (lv_statements_5_0= ruleStatement )
            	    // InternalSCTX.g:5093:5: lv_statements_5_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModuleAccess().getStatementsStatementParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_128);
            	    lv_statements_5_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModuleRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_5_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop178;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModule"


    // $ANTLR start "entryRuleLabel"
    // InternalSCTX.g:5114:1: entryRuleLabel returns [EObject current=null] : iv_ruleLabel= ruleLabel EOF ;
    public final EObject entryRuleLabel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLabel = null;


        try {
            // InternalSCTX.g:5114:46: (iv_ruleLabel= ruleLabel EOF )
            // InternalSCTX.g:5115:2: iv_ruleLabel= ruleLabel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLabelRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLabel=ruleLabel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLabel; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLabel"


    // $ANTLR start "ruleLabel"
    // InternalSCTX.g:5121:1: ruleLabel returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ) ;
    public final EObject ruleLabel() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:5127:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ) )
            // InternalSCTX.g:5128:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' )
            {
            // InternalSCTX.g:5128:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' )
            // InternalSCTX.g:5129:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':'
            {
            // InternalSCTX.g:5129:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop179:
            do {
                int alt179=2;
                int LA179_0 = input.LA(1);

                if ( (LA179_0==RULE_COMMENT_ANNOTATION||LA179_0==103) ) {
                    alt179=1;
                }


                switch (alt179) {
            	case 1 :
            	    // InternalSCTX.g:5130:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:5130:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:5131:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getLabelAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_107);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getLabelRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop179;
                }
            } while (true);

            // InternalSCTX.g:5148:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalSCTX.g:5149:4: (lv_name_1_0= RULE_ID )
            {
            // InternalSCTX.g:5149:4: (lv_name_1_0= RULE_ID )
            // InternalSCTX.g:5150:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getLabelRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getLabelAccess().getColonKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLabel"


    // $ANTLR start "entryRuleGoto"
    // InternalSCTX.g:5174:1: entryRuleGoto returns [EObject current=null] : iv_ruleGoto= ruleGoto EOF ;
    public final EObject entryRuleGoto() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGoto = null;


        try {
            // InternalSCTX.g:5174:45: (iv_ruleGoto= ruleGoto EOF )
            // InternalSCTX.g:5175:2: iv_ruleGoto= ruleGoto EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGotoRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleGoto=ruleGoto();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGoto; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGoto"


    // $ANTLR start "ruleGoto"
    // InternalSCTX.g:5181:1: ruleGoto returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'goto' ( (otherlv_2= RULE_ID ) ) ( (lv_semicolon_3_0= ';' ) )? ) ;
    public final EObject ruleGoto() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_semicolon_3_0=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:5187:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'goto' ( (otherlv_2= RULE_ID ) ) ( (lv_semicolon_3_0= ';' ) )? ) )
            // InternalSCTX.g:5188:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'goto' ( (otherlv_2= RULE_ID ) ) ( (lv_semicolon_3_0= ';' ) )? )
            {
            // InternalSCTX.g:5188:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'goto' ( (otherlv_2= RULE_ID ) ) ( (lv_semicolon_3_0= ';' ) )? )
            // InternalSCTX.g:5189:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'goto' ( (otherlv_2= RULE_ID ) ) ( (lv_semicolon_3_0= ';' ) )?
            {
            // InternalSCTX.g:5189:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop180:
            do {
                int alt180=2;
                int LA180_0 = input.LA(1);

                if ( (LA180_0==RULE_COMMENT_ANNOTATION||LA180_0==103) ) {
                    alt180=1;
                }


                switch (alt180) {
            	case 1 :
            	    // InternalSCTX.g:5190:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:5190:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:5191:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getGotoAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_129);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getGotoRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop180;
                }
            } while (true);

            otherlv_1=(Token)match(input,72,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGotoAccess().getGotoKeyword_1());
              		
            }
            // InternalSCTX.g:5212:3: ( (otherlv_2= RULE_ID ) )
            // InternalSCTX.g:5213:4: (otherlv_2= RULE_ID )
            {
            // InternalSCTX.g:5213:4: (otherlv_2= RULE_ID )
            // InternalSCTX.g:5214:5: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGotoRule());
              					}
              				
            }
            otherlv_2=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_130); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getGotoAccess().getTargetLabelCrossReference_2_0());
              				
            }

            }


            }

            // InternalSCTX.g:5228:3: ( (lv_semicolon_3_0= ';' ) )?
            int alt181=2;
            int LA181_0 = input.LA(1);

            if ( (LA181_0==42) ) {
                alt181=1;
            }
            switch (alt181) {
                case 1 :
                    // InternalSCTX.g:5229:4: (lv_semicolon_3_0= ';' )
                    {
                    // InternalSCTX.g:5229:4: (lv_semicolon_3_0= ';' )
                    // InternalSCTX.g:5230:5: lv_semicolon_3_0= ';'
                    {
                    lv_semicolon_3_0=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_3_0, grammarAccess.getGotoAccess().getSemicolonSemicolonKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getGotoRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGoto"


    // $ANTLR start "entryRuleSclAssignment"
    // InternalSCTX.g:5246:1: entryRuleSclAssignment returns [EObject current=null] : iv_ruleSclAssignment= ruleSclAssignment EOF ;
    public final EObject entryRuleSclAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSclAssignment = null;


        try {
            // InternalSCTX.g:5246:54: (iv_ruleSclAssignment= ruleSclAssignment EOF )
            // InternalSCTX.g:5247:2: iv_ruleSclAssignment= ruleSclAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSclAssignmentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSclAssignment=ruleSclAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSclAssignment; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSclAssignment"


    // $ANTLR start "ruleSclAssignment"
    // InternalSCTX.g:5253:1: ruleSclAssignment returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_6_0= ';' ) )? ) ;
    public final EObject ruleSclAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token lv_semicolon_6_0=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_expression_3_0 = null;

        EObject lv_schedule_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:5259:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_6_0= ';' ) )? ) )
            // InternalSCTX.g:5260:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_6_0= ';' ) )? )
            {
            // InternalSCTX.g:5260:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_6_0= ';' ) )? )
            // InternalSCTX.g:5261:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_6_0= ';' ) )?
            {
            // InternalSCTX.g:5261:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop182:
            do {
                int alt182=2;
                int LA182_0 = input.LA(1);

                if ( (LA182_0==RULE_COMMENT_ANNOTATION||LA182_0==103) ) {
                    alt182=1;
                }


                switch (alt182) {
            	case 1 :
            	    // InternalSCTX.g:5262:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:5262:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:5263:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSclAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_82);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSclAssignmentRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop182;
                }
            } while (true);

            // InternalSCTX.g:5280:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalSCTX.g:5281:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalSCTX.g:5281:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalSCTX.g:5282:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSclAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_131);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSclAssignmentRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:5299:3: ( (lv_operator_2_0= ruleAssignOperator ) )
            // InternalSCTX.g:5300:4: (lv_operator_2_0= ruleAssignOperator )
            {
            // InternalSCTX.g:5300:4: (lv_operator_2_0= ruleAssignOperator )
            // InternalSCTX.g:5301:5: lv_operator_2_0= ruleAssignOperator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSclAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_30);
            lv_operator_2_0=ruleAssignOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSclAssignmentRule());
              					}
              					set(
              						current,
              						"operator",
              						lv_operator_2_0,
              						"de.cau.cs.kieler.kexpressions.keffects.KEffects.AssignOperator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:5318:3: ( (lv_expression_3_0= ruleExpression ) )
            // InternalSCTX.g:5319:4: (lv_expression_3_0= ruleExpression )
            {
            // InternalSCTX.g:5319:4: (lv_expression_3_0= ruleExpression )
            // InternalSCTX.g:5320:5: lv_expression_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSclAssignmentAccess().getExpressionExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_132);
            lv_expression_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSclAssignmentRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_3_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:5337:3: (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )?
            int alt184=2;
            int LA184_0 = input.LA(1);

            if ( (LA184_0==29) ) {
                alt184=1;
            }
            switch (alt184) {
                case 1 :
                    // InternalSCTX.g:5338:4: otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_4=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getSclAssignmentAccess().getScheduleKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:5342:4: ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+
                    int cnt183=0;
                    loop183:
                    do {
                        int alt183=2;
                        alt183 = dfa183.predict(input);
                        switch (alt183) {
                    	case 1 :
                    	    // InternalSCTX.g:5343:5: (lv_schedule_5_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:5343:5: (lv_schedule_5_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:5344:6: lv_schedule_5_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getSclAssignmentAccess().getScheduleScheduleObjectReferenceParserRuleCall_4_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_133);
                    	    lv_schedule_5_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getSclAssignmentRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_5_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt183 >= 1 ) break loop183;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(183, input);
                                throw eee;
                        }
                        cnt183++;
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:5362:3: ( (lv_semicolon_6_0= ';' ) )?
            int alt185=2;
            int LA185_0 = input.LA(1);

            if ( (LA185_0==42) ) {
                alt185=1;
            }
            switch (alt185) {
                case 1 :
                    // InternalSCTX.g:5363:4: (lv_semicolon_6_0= ';' )
                    {
                    // InternalSCTX.g:5363:4: (lv_semicolon_6_0= ';' )
                    // InternalSCTX.g:5364:5: lv_semicolon_6_0= ';'
                    {
                    lv_semicolon_6_0=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_6_0, grammarAccess.getSclAssignmentAccess().getSemicolonSemicolonKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSclAssignmentRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSclAssignment"


    // $ANTLR start "entryRuleSclPostfixAssignment"
    // InternalSCTX.g:5380:1: entryRuleSclPostfixAssignment returns [EObject current=null] : iv_ruleSclPostfixAssignment= ruleSclPostfixAssignment EOF ;
    public final EObject entryRuleSclPostfixAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSclPostfixAssignment = null;


        try {
            // InternalSCTX.g:5380:61: (iv_ruleSclPostfixAssignment= ruleSclPostfixAssignment EOF )
            // InternalSCTX.g:5381:2: iv_ruleSclPostfixAssignment= ruleSclPostfixAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSclPostfixAssignmentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSclPostfixAssignment=ruleSclPostfixAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSclPostfixAssignment; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSclPostfixAssignment"


    // $ANTLR start "ruleSclPostfixAssignment"
    // InternalSCTX.g:5387:1: ruleSclPostfixAssignment returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_5_0= ';' ) )? ) ;
    public final EObject ruleSclPostfixAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token lv_semicolon_5_0=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_schedule_4_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:5393:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_5_0= ';' ) )? ) )
            // InternalSCTX.g:5394:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_5_0= ';' ) )? )
            {
            // InternalSCTX.g:5394:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_5_0= ';' ) )? )
            // InternalSCTX.g:5395:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_5_0= ';' ) )?
            {
            // InternalSCTX.g:5395:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop186:
            do {
                int alt186=2;
                int LA186_0 = input.LA(1);

                if ( (LA186_0==RULE_COMMENT_ANNOTATION||LA186_0==103) ) {
                    alt186=1;
                }


                switch (alt186) {
            	case 1 :
            	    // InternalSCTX.g:5396:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:5396:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:5397:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSclPostfixAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_82);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSclPostfixAssignmentRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop186;
                }
            } while (true);

            // InternalSCTX.g:5414:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalSCTX.g:5415:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalSCTX.g:5415:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalSCTX.g:5416:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSclPostfixAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_134);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSclPostfixAssignmentRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:5433:3: ( (lv_operator_2_0= rulePostfixOperator ) )
            // InternalSCTX.g:5434:4: (lv_operator_2_0= rulePostfixOperator )
            {
            // InternalSCTX.g:5434:4: (lv_operator_2_0= rulePostfixOperator )
            // InternalSCTX.g:5435:5: lv_operator_2_0= rulePostfixOperator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSclPostfixAssignmentAccess().getOperatorPostfixOperatorEnumRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_132);
            lv_operator_2_0=rulePostfixOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSclPostfixAssignmentRule());
              					}
              					set(
              						current,
              						"operator",
              						lv_operator_2_0,
              						"de.cau.cs.kieler.kexpressions.keffects.KEffects.PostfixOperator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:5452:3: (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )?
            int alt188=2;
            int LA188_0 = input.LA(1);

            if ( (LA188_0==29) ) {
                alt188=1;
            }
            switch (alt188) {
                case 1 :
                    // InternalSCTX.g:5453:4: otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_3=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getSclPostfixAssignmentAccess().getScheduleKeyword_3_0());
                      			
                    }
                    // InternalSCTX.g:5457:4: ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+
                    int cnt187=0;
                    loop187:
                    do {
                        int alt187=2;
                        alt187 = dfa187.predict(input);
                        switch (alt187) {
                    	case 1 :
                    	    // InternalSCTX.g:5458:5: (lv_schedule_4_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:5458:5: (lv_schedule_4_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:5459:6: lv_schedule_4_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getSclPostfixAssignmentAccess().getScheduleScheduleObjectReferenceParserRuleCall_3_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_133);
                    	    lv_schedule_4_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getSclPostfixAssignmentRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_4_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt187 >= 1 ) break loop187;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(187, input);
                                throw eee;
                        }
                        cnt187++;
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:5477:3: ( (lv_semicolon_5_0= ';' ) )?
            int alt189=2;
            int LA189_0 = input.LA(1);

            if ( (LA189_0==42) ) {
                alt189=1;
            }
            switch (alt189) {
                case 1 :
                    // InternalSCTX.g:5478:4: (lv_semicolon_5_0= ';' )
                    {
                    // InternalSCTX.g:5478:4: (lv_semicolon_5_0= ';' )
                    // InternalSCTX.g:5479:5: lv_semicolon_5_0= ';'
                    {
                    lv_semicolon_5_0=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_5_0, grammarAccess.getSclPostfixAssignmentAccess().getSemicolonSemicolonKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSclPostfixAssignmentRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSclPostfixAssignment"


    // $ANTLR start "entryRuleReturn"
    // InternalSCTX.g:5495:1: entryRuleReturn returns [EObject current=null] : iv_ruleReturn= ruleReturn EOF ;
    public final EObject entryRuleReturn() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReturn = null;


        try {
            // InternalSCTX.g:5495:47: (iv_ruleReturn= ruleReturn EOF )
            // InternalSCTX.g:5496:2: iv_ruleReturn= ruleReturn EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReturnRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReturn=ruleReturn();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReturn; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReturn"


    // $ANTLR start "ruleReturn"
    // InternalSCTX.g:5502:1: ruleReturn returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'return' ( (lv_expression_2_0= ruleExpression ) ) ) ;
    public final EObject ruleReturn() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:5508:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'return' ( (lv_expression_2_0= ruleExpression ) ) ) )
            // InternalSCTX.g:5509:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'return' ( (lv_expression_2_0= ruleExpression ) ) )
            {
            // InternalSCTX.g:5509:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'return' ( (lv_expression_2_0= ruleExpression ) ) )
            // InternalSCTX.g:5510:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'return' ( (lv_expression_2_0= ruleExpression ) )
            {
            // InternalSCTX.g:5510:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop190:
            do {
                int alt190=2;
                int LA190_0 = input.LA(1);

                if ( (LA190_0==RULE_COMMENT_ANNOTATION||LA190_0==103) ) {
                    alt190=1;
                }


                switch (alt190) {
            	case 1 :
            	    // InternalSCTX.g:5511:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:5511:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:5512:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getReturnAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_135);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getReturnRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop190;
                }
            } while (true);

            otherlv_1=(Token)match(input,73,FollowSets000.FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getReturnAccess().getReturnKeyword_1());
              		
            }
            // InternalSCTX.g:5533:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalSCTX.g:5534:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalSCTX.g:5534:4: (lv_expression_2_0= ruleExpression )
            // InternalSCTX.g:5535:5: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReturnAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getReturnRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReturn"


    // $ANTLR start "entryRuleConditional"
    // InternalSCTX.g:5556:1: entryRuleConditional returns [EObject current=null] : iv_ruleConditional= ruleConditional EOF ;
    public final EObject entryRuleConditional() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConditional = null;


        try {
            // InternalSCTX.g:5556:52: (iv_ruleConditional= ruleConditional EOF )
            // InternalSCTX.g:5557:2: iv_ruleConditional= ruleConditional EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleConditional=ruleConditional();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditional; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditional"


    // $ANTLR start "ruleConditional"
    // InternalSCTX.g:5563:1: ruleConditional returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleAtomicExpression ) ) otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )? ) ;
    public final EObject ruleConditional() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        Token lv_semicolon_8_0=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_2_0 = null;

        EObject lv_declarations_4_0 = null;

        EObject lv_statements_5_0 = null;

        EObject lv_else_7_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:5569:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleAtomicExpression ) ) otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )? ) )
            // InternalSCTX.g:5570:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleAtomicExpression ) ) otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )? )
            {
            // InternalSCTX.g:5570:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleAtomicExpression ) ) otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )? )
            // InternalSCTX.g:5571:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleAtomicExpression ) ) otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )?
            {
            // InternalSCTX.g:5571:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop191:
            do {
                int alt191=2;
                int LA191_0 = input.LA(1);

                if ( (LA191_0==RULE_COMMENT_ANNOTATION||LA191_0==103) ) {
                    alt191=1;
                }


                switch (alt191) {
            	case 1 :
            	    // InternalSCTX.g:5572:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:5572:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:5573:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConditionalAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_136);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConditionalRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop191;
                }
            } while (true);

            otherlv_1=(Token)match(input,38,FollowSets000.FOLLOW_137); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getConditionalAccess().getIfKeyword_1());
              		
            }
            // InternalSCTX.g:5594:3: ( (lv_expression_2_0= ruleAtomicExpression ) )
            // InternalSCTX.g:5595:4: (lv_expression_2_0= ruleAtomicExpression )
            {
            // InternalSCTX.g:5595:4: (lv_expression_2_0= ruleAtomicExpression )
            // InternalSCTX.g:5596:5: lv_expression_2_0= ruleAtomicExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConditionalAccess().getExpressionAtomicExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_101);
            lv_expression_2_0=ruleAtomicExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConditionalRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.AtomicExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,21,FollowSets000.FOLLOW_98); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getConditionalAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalSCTX.g:5617:3: ( (lv_declarations_4_0= ruleDeclaration ) )*
            loop192:
            do {
                int alt192=2;
                alt192 = dfa192.predict(input);
                switch (alt192) {
            	case 1 :
            	    // InternalSCTX.g:5618:4: (lv_declarations_4_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:5618:4: (lv_declarations_4_0= ruleDeclaration )
            	    // InternalSCTX.g:5619:5: lv_declarations_4_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConditionalAccess().getDeclarationsDeclarationParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_98);
            	    lv_declarations_4_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConditionalRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_4_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop192;
                }
            } while (true);

            // InternalSCTX.g:5636:3: ( (lv_statements_5_0= ruleStatement ) )*
            loop193:
            do {
                int alt193=2;
                int LA193_0 = input.LA(1);

                if ( (LA193_0==RULE_ID||LA193_0==RULE_COMMENT_ANNOTATION||LA193_0==21||LA193_0==38||LA193_0==47||(LA193_0>=72 && LA193_0<=73)||LA193_0==75||LA193_0==103) ) {
                    alt193=1;
                }


                switch (alt193) {
            	case 1 :
            	    // InternalSCTX.g:5637:4: (lv_statements_5_0= ruleStatement )
            	    {
            	    // InternalSCTX.g:5637:4: (lv_statements_5_0= ruleStatement )
            	    // InternalSCTX.g:5638:5: lv_statements_5_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConditionalAccess().getStatementsStatementParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_99);
            	    lv_statements_5_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConditionalRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_5_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop193;
                }
            } while (true);

            otherlv_6=(Token)match(input,22,FollowSets000.FOLLOW_138); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getConditionalAccess().getRightCurlyBracketKeyword_6());
              		
            }
            // InternalSCTX.g:5659:3: ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )?
            int alt194=3;
            alt194 = dfa194.predict(input);
            switch (alt194) {
                case 1 :
                    // InternalSCTX.g:5660:4: ( (lv_else_7_0= ruleElseScope ) )
                    {
                    // InternalSCTX.g:5660:4: ( (lv_else_7_0= ruleElseScope ) )
                    // InternalSCTX.g:5661:5: (lv_else_7_0= ruleElseScope )
                    {
                    // InternalSCTX.g:5661:5: (lv_else_7_0= ruleElseScope )
                    // InternalSCTX.g:5662:6: lv_else_7_0= ruleElseScope
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConditionalAccess().getElseElseScopeParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_else_7_0=ruleElseScope();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConditionalRule());
                      						}
                      						set(
                      							current,
                      							"else",
                      							lv_else_7_0,
                      							"de.cau.cs.kieler.scl.SCL.ElseScope");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:5680:4: ( (lv_semicolon_8_0= ';' ) )
                    {
                    // InternalSCTX.g:5680:4: ( (lv_semicolon_8_0= ';' ) )
                    // InternalSCTX.g:5681:5: (lv_semicolon_8_0= ';' )
                    {
                    // InternalSCTX.g:5681:5: (lv_semicolon_8_0= ';' )
                    // InternalSCTX.g:5682:6: lv_semicolon_8_0= ';'
                    {
                    lv_semicolon_8_0=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_semicolon_8_0, grammarAccess.getConditionalAccess().getSemicolonSemicolonKeyword_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConditionalRule());
                      						}
                      						setWithLastConsumed(current, "semicolon", true, ";");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditional"


    // $ANTLR start "entryRuleElseScope"
    // InternalSCTX.g:5699:1: entryRuleElseScope returns [EObject current=null] : iv_ruleElseScope= ruleElseScope EOF ;
    public final EObject entryRuleElseScope() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElseScope = null;


        try {
            // InternalSCTX.g:5699:50: (iv_ruleElseScope= ruleElseScope EOF )
            // InternalSCTX.g:5700:2: iv_ruleElseScope= ruleElseScope EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElseScopeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleElseScope=ruleElseScope();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElseScope; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElseScope"


    // $ANTLR start "ruleElseScope"
    // InternalSCTX.g:5706:1: ruleElseScope returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( (lv_semicolon_7_0= ';' ) )? ) ;
    public final EObject ruleElseScope() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        Token lv_semicolon_7_0=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_declarations_4_0 = null;

        EObject lv_statements_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:5712:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( (lv_semicolon_7_0= ';' ) )? ) )
            // InternalSCTX.g:5713:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( (lv_semicolon_7_0= ';' ) )? )
            {
            // InternalSCTX.g:5713:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( (lv_semicolon_7_0= ';' ) )? )
            // InternalSCTX.g:5714:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( (lv_semicolon_7_0= ';' ) )?
            {
            // InternalSCTX.g:5714:3: ()
            // InternalSCTX.g:5715:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getElseScopeAccess().getElseScopeAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:5724:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop195:
            do {
                int alt195=2;
                int LA195_0 = input.LA(1);

                if ( (LA195_0==RULE_COMMENT_ANNOTATION||LA195_0==103) ) {
                    alt195=1;
                }


                switch (alt195) {
            	case 1 :
            	    // InternalSCTX.g:5725:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:5725:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:5726:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getElseScopeAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_139);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getElseScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop195;
                }
            } while (true);

            otherlv_2=(Token)match(input,74,FollowSets000.FOLLOW_101); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getElseScopeAccess().getElseKeyword_2());
              		
            }
            otherlv_3=(Token)match(input,21,FollowSets000.FOLLOW_98); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getElseScopeAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalSCTX.g:5751:3: ( (lv_declarations_4_0= ruleDeclaration ) )*
            loop196:
            do {
                int alt196=2;
                alt196 = dfa196.predict(input);
                switch (alt196) {
            	case 1 :
            	    // InternalSCTX.g:5752:4: (lv_declarations_4_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:5752:4: (lv_declarations_4_0= ruleDeclaration )
            	    // InternalSCTX.g:5753:5: lv_declarations_4_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getElseScopeAccess().getDeclarationsDeclarationParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_98);
            	    lv_declarations_4_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getElseScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_4_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop196;
                }
            } while (true);

            // InternalSCTX.g:5770:3: ( (lv_statements_5_0= ruleStatement ) )*
            loop197:
            do {
                int alt197=2;
                int LA197_0 = input.LA(1);

                if ( (LA197_0==RULE_ID||LA197_0==RULE_COMMENT_ANNOTATION||LA197_0==21||LA197_0==38||LA197_0==47||(LA197_0>=72 && LA197_0<=73)||LA197_0==75||LA197_0==103) ) {
                    alt197=1;
                }


                switch (alt197) {
            	case 1 :
            	    // InternalSCTX.g:5771:4: (lv_statements_5_0= ruleStatement )
            	    {
            	    // InternalSCTX.g:5771:4: (lv_statements_5_0= ruleStatement )
            	    // InternalSCTX.g:5772:5: lv_statements_5_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getElseScopeAccess().getStatementsStatementParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_99);
            	    lv_statements_5_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getElseScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_5_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop197;
                }
            } while (true);

            otherlv_6=(Token)match(input,22,FollowSets000.FOLLOW_130); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getElseScopeAccess().getRightCurlyBracketKeyword_6());
              		
            }
            // InternalSCTX.g:5793:3: ( (lv_semicolon_7_0= ';' ) )?
            int alt198=2;
            int LA198_0 = input.LA(1);

            if ( (LA198_0==42) ) {
                alt198=1;
            }
            switch (alt198) {
                case 1 :
                    // InternalSCTX.g:5794:4: (lv_semicolon_7_0= ';' )
                    {
                    // InternalSCTX.g:5794:4: (lv_semicolon_7_0= ';' )
                    // InternalSCTX.g:5795:5: lv_semicolon_7_0= ';'
                    {
                    lv_semicolon_7_0=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_7_0, grammarAccess.getElseScopeAccess().getSemicolonSemicolonKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElseScopeRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElseScope"


    // $ANTLR start "entryRuleLegacyElseScope"
    // InternalSCTX.g:5811:1: entryRuleLegacyElseScope returns [EObject current=null] : iv_ruleLegacyElseScope= ruleLegacyElseScope EOF ;
    public final EObject entryRuleLegacyElseScope() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLegacyElseScope = null;


        try {
            // InternalSCTX.g:5811:56: (iv_ruleLegacyElseScope= ruleLegacyElseScope EOF )
            // InternalSCTX.g:5812:2: iv_ruleLegacyElseScope= ruleLegacyElseScope EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLegacyElseScopeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLegacyElseScope=ruleLegacyElseScope();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLegacyElseScope; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLegacyElseScope"


    // $ANTLR start "ruleLegacyElseScope"
    // InternalSCTX.g:5818:1: ruleLegacyElseScope returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' ( (lv_statements_3_0= ruleStatement ) )* ) ;
    public final EObject ruleLegacyElseScope() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_statements_3_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:5824:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' ( (lv_statements_3_0= ruleStatement ) )* ) )
            // InternalSCTX.g:5825:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' ( (lv_statements_3_0= ruleStatement ) )* )
            {
            // InternalSCTX.g:5825:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' ( (lv_statements_3_0= ruleStatement ) )* )
            // InternalSCTX.g:5826:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' ( (lv_statements_3_0= ruleStatement ) )*
            {
            // InternalSCTX.g:5826:3: ()
            // InternalSCTX.g:5827:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLegacyElseScopeAccess().getElseScopeAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:5836:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop199:
            do {
                int alt199=2;
                int LA199_0 = input.LA(1);

                if ( (LA199_0==RULE_COMMENT_ANNOTATION||LA199_0==103) ) {
                    alt199=1;
                }


                switch (alt199) {
            	case 1 :
            	    // InternalSCTX.g:5837:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:5837:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:5838:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getLegacyElseScopeAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_139);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getLegacyElseScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop199;
                }
            } while (true);

            otherlv_2=(Token)match(input,74,FollowSets000.FOLLOW_128); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getLegacyElseScopeAccess().getElseKeyword_2());
              		
            }
            // InternalSCTX.g:5859:3: ( (lv_statements_3_0= ruleStatement ) )*
            loop200:
            do {
                int alt200=2;
                int LA200_0 = input.LA(1);

                if ( (LA200_0==RULE_ID||LA200_0==RULE_COMMENT_ANNOTATION||LA200_0==21||LA200_0==38||LA200_0==47||(LA200_0>=72 && LA200_0<=73)||LA200_0==75||LA200_0==103) ) {
                    alt200=1;
                }


                switch (alt200) {
            	case 1 :
            	    // InternalSCTX.g:5860:4: (lv_statements_3_0= ruleStatement )
            	    {
            	    // InternalSCTX.g:5860:4: (lv_statements_3_0= ruleStatement )
            	    // InternalSCTX.g:5861:5: lv_statements_3_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getLegacyElseScopeAccess().getStatementsStatementParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_128);
            	    lv_statements_3_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getLegacyElseScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_3_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop200;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLegacyElseScope"


    // $ANTLR start "entryRuleThread"
    // InternalSCTX.g:5882:1: entryRuleThread returns [EObject current=null] : iv_ruleThread= ruleThread EOF ;
    public final EObject entryRuleThread() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleThread = null;


        try {
            // InternalSCTX.g:5882:47: (iv_ruleThread= ruleThread EOF )
            // InternalSCTX.g:5883:2: iv_ruleThread= ruleThread EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getThreadRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleThread=ruleThread();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleThread; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleThread"


    // $ANTLR start "ruleThread"
    // InternalSCTX.g:5889:1: ruleThread returns [EObject current=null] : ( () ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* ) ) ;
    public final EObject ruleThread() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_declarations_3_0 = null;

        EObject lv_statements_4_0 = null;

        EObject lv_statements_6_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:5895:2: ( ( () ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* ) ) )
            // InternalSCTX.g:5896:2: ( () ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* ) )
            {
            // InternalSCTX.g:5896:2: ( () ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* ) )
            // InternalSCTX.g:5897:3: () ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* )
            {
            // InternalSCTX.g:5897:3: ()
            // InternalSCTX.g:5898:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getThreadAccess().getThreadAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:5907:3: ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* )
            int alt205=2;
            alt205 = dfa205.predict(input);
            switch (alt205) {
                case 1 :
                    // InternalSCTX.g:5908:4: ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
                    {
                    // InternalSCTX.g:5908:4: ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
                    // InternalSCTX.g:5909:5: ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}'
                    {
                    // InternalSCTX.g:5909:5: ( (lv_annotations_1_0= ruleAnnotation ) )*
                    loop201:
                    do {
                        int alt201=2;
                        int LA201_0 = input.LA(1);

                        if ( (LA201_0==RULE_COMMENT_ANNOTATION||LA201_0==103) ) {
                            alt201=1;
                        }


                        switch (alt201) {
                    	case 1 :
                    	    // InternalSCTX.g:5910:6: (lv_annotations_1_0= ruleAnnotation )
                    	    {
                    	    // InternalSCTX.g:5910:6: (lv_annotations_1_0= ruleAnnotation )
                    	    // InternalSCTX.g:5911:7: lv_annotations_1_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getThreadAccess().getAnnotationsAnnotationParserRuleCall_1_0_0_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_97);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getThreadRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"annotations",
                    	      								lv_annotations_1_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop201;
                        }
                    } while (true);

                    otherlv_2=(Token)match(input,21,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getThreadAccess().getLeftCurlyBracketKeyword_1_0_1());
                      				
                    }
                    // InternalSCTX.g:5932:5: ( (lv_declarations_3_0= ruleDeclaration ) )*
                    loop202:
                    do {
                        int alt202=2;
                        alt202 = dfa202.predict(input);
                        switch (alt202) {
                    	case 1 :
                    	    // InternalSCTX.g:5933:6: (lv_declarations_3_0= ruleDeclaration )
                    	    {
                    	    // InternalSCTX.g:5933:6: (lv_declarations_3_0= ruleDeclaration )
                    	    // InternalSCTX.g:5934:7: lv_declarations_3_0= ruleDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getThreadAccess().getDeclarationsDeclarationParserRuleCall_1_0_2_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_98);
                    	    lv_declarations_3_0=ruleDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getThreadRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_3_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop202;
                        }
                    } while (true);

                    // InternalSCTX.g:5951:5: ( (lv_statements_4_0= ruleStatement ) )*
                    loop203:
                    do {
                        int alt203=2;
                        int LA203_0 = input.LA(1);

                        if ( (LA203_0==RULE_ID||LA203_0==RULE_COMMENT_ANNOTATION||LA203_0==21||LA203_0==38||LA203_0==47||(LA203_0>=72 && LA203_0<=73)||LA203_0==75||LA203_0==103) ) {
                            alt203=1;
                        }


                        switch (alt203) {
                    	case 1 :
                    	    // InternalSCTX.g:5952:6: (lv_statements_4_0= ruleStatement )
                    	    {
                    	    // InternalSCTX.g:5952:6: (lv_statements_4_0= ruleStatement )
                    	    // InternalSCTX.g:5953:7: lv_statements_4_0= ruleStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getThreadAccess().getStatementsStatementParserRuleCall_1_0_3_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_99);
                    	    lv_statements_4_0=ruleStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getThreadRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"statements",
                    	      								lv_statements_4_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop203;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getThreadAccess().getRightCurlyBracketKeyword_1_0_4());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:5976:4: ( (lv_statements_6_0= ruleStatement ) )*
                    {
                    // InternalSCTX.g:5976:4: ( (lv_statements_6_0= ruleStatement ) )*
                    loop204:
                    do {
                        int alt204=2;
                        int LA204_0 = input.LA(1);

                        if ( (LA204_0==RULE_ID||LA204_0==RULE_COMMENT_ANNOTATION||LA204_0==21||LA204_0==38||LA204_0==47||(LA204_0>=72 && LA204_0<=73)||LA204_0==75||LA204_0==103) ) {
                            alt204=1;
                        }


                        switch (alt204) {
                    	case 1 :
                    	    // InternalSCTX.g:5977:5: (lv_statements_6_0= ruleStatement )
                    	    {
                    	    // InternalSCTX.g:5977:5: (lv_statements_6_0= ruleStatement )
                    	    // InternalSCTX.g:5978:6: lv_statements_6_0= ruleStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getThreadAccess().getStatementsStatementParserRuleCall_1_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_128);
                    	    lv_statements_6_0=ruleStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getThreadRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"statements",
                    	      							lv_statements_6_0,
                    	      							"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop204;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleThread"


    // $ANTLR start "entryRuleScopeStatement"
    // InternalSCTX.g:6000:1: entryRuleScopeStatement returns [EObject current=null] : iv_ruleScopeStatement= ruleScopeStatement EOF ;
    public final EObject entryRuleScopeStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScopeStatement = null;


        try {
            // InternalSCTX.g:6000:55: (iv_ruleScopeStatement= ruleScopeStatement EOF )
            // InternalSCTX.g:6001:2: iv_ruleScopeStatement= ruleScopeStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScopeStatementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScopeStatement=ruleScopeStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScopeStatement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScopeStatement"


    // $ANTLR start "ruleScopeStatement"
    // InternalSCTX.g:6007:1: ruleScopeStatement returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) ;
    public final EObject ruleScopeStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_declarations_3_0 = null;

        EObject lv_statements_4_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:6013:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) )
            // InternalSCTX.g:6014:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
            {
            // InternalSCTX.g:6014:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
            // InternalSCTX.g:6015:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}'
            {
            // InternalSCTX.g:6015:3: ()
            // InternalSCTX.g:6016:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getScopeStatementAccess().getScopeStatementAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:6025:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop206:
            do {
                int alt206=2;
                int LA206_0 = input.LA(1);

                if ( (LA206_0==RULE_COMMENT_ANNOTATION||LA206_0==103) ) {
                    alt206=1;
                }


                switch (alt206) {
            	case 1 :
            	    // InternalSCTX.g:6026:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:6026:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:6027:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScopeStatementAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_97);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScopeStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop206;
                }
            } while (true);

            otherlv_2=(Token)match(input,21,FollowSets000.FOLLOW_98); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getScopeStatementAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalSCTX.g:6048:3: ( (lv_declarations_3_0= ruleDeclaration ) )*
            loop207:
            do {
                int alt207=2;
                alt207 = dfa207.predict(input);
                switch (alt207) {
            	case 1 :
            	    // InternalSCTX.g:6049:4: (lv_declarations_3_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:6049:4: (lv_declarations_3_0= ruleDeclaration )
            	    // InternalSCTX.g:6050:5: lv_declarations_3_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScopeStatementAccess().getDeclarationsDeclarationParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_98);
            	    lv_declarations_3_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScopeStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_3_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop207;
                }
            } while (true);

            // InternalSCTX.g:6067:3: ( (lv_statements_4_0= ruleStatement ) )*
            loop208:
            do {
                int alt208=2;
                int LA208_0 = input.LA(1);

                if ( (LA208_0==RULE_ID||LA208_0==RULE_COMMENT_ANNOTATION||LA208_0==21||LA208_0==38||LA208_0==47||(LA208_0>=72 && LA208_0<=73)||LA208_0==75||LA208_0==103) ) {
                    alt208=1;
                }


                switch (alt208) {
            	case 1 :
            	    // InternalSCTX.g:6068:4: (lv_statements_4_0= ruleStatement )
            	    {
            	    // InternalSCTX.g:6068:4: (lv_statements_4_0= ruleStatement )
            	    // InternalSCTX.g:6069:5: lv_statements_4_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScopeStatementAccess().getStatementsStatementParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_99);
            	    lv_statements_4_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScopeStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_4_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop208;
                }
            } while (true);

            otherlv_5=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getScopeStatementAccess().getRightCurlyBracketKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScopeStatement"


    // $ANTLR start "entryRuleForLoop"
    // InternalSCTX.g:6094:1: entryRuleForLoop returns [EObject current=null] : iv_ruleForLoop= ruleForLoop EOF ;
    public final EObject entryRuleForLoop() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForLoop = null;


        try {
            // InternalSCTX.g:6094:48: (iv_ruleForLoop= ruleForLoop EOF )
            // InternalSCTX.g:6095:2: iv_ruleForLoop= ruleForLoop EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForLoopRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleForLoop=ruleForLoop();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleForLoop; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleForLoop"


    // $ANTLR start "ruleForLoop"
    // InternalSCTX.g:6101:1: ruleForLoop returns [EObject current=null] : (otherlv_0= 'for' otherlv_1= '(' ( ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) ) | ( (lv_initialization_3_0= ruleEffectOrAssignment ) ) )? otherlv_4= ';' ( (lv_condition_5_0= ruleBoolExpression ) ) otherlv_6= ';' ( (lv_afterthought_7_0= ruleEffectOrAssignment ) )? otherlv_8= ')' otherlv_9= '{' ( (lv_declarations_10_0= ruleDeclaration ) )* ( (lv_statements_11_0= ruleStatement ) )* otherlv_12= '}' ( (lv_semicolon_13_0= ';' ) )? ) ;
    public final EObject ruleForLoop() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_12=null;
        Token lv_semicolon_13_0=null;
        EObject lv_initializationDeclaration_2_0 = null;

        EObject lv_initialization_3_0 = null;

        EObject lv_condition_5_0 = null;

        EObject lv_afterthought_7_0 = null;

        EObject lv_declarations_10_0 = null;

        EObject lv_statements_11_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:6107:2: ( (otherlv_0= 'for' otherlv_1= '(' ( ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) ) | ( (lv_initialization_3_0= ruleEffectOrAssignment ) ) )? otherlv_4= ';' ( (lv_condition_5_0= ruleBoolExpression ) ) otherlv_6= ';' ( (lv_afterthought_7_0= ruleEffectOrAssignment ) )? otherlv_8= ')' otherlv_9= '{' ( (lv_declarations_10_0= ruleDeclaration ) )* ( (lv_statements_11_0= ruleStatement ) )* otherlv_12= '}' ( (lv_semicolon_13_0= ';' ) )? ) )
            // InternalSCTX.g:6108:2: (otherlv_0= 'for' otherlv_1= '(' ( ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) ) | ( (lv_initialization_3_0= ruleEffectOrAssignment ) ) )? otherlv_4= ';' ( (lv_condition_5_0= ruleBoolExpression ) ) otherlv_6= ';' ( (lv_afterthought_7_0= ruleEffectOrAssignment ) )? otherlv_8= ')' otherlv_9= '{' ( (lv_declarations_10_0= ruleDeclaration ) )* ( (lv_statements_11_0= ruleStatement ) )* otherlv_12= '}' ( (lv_semicolon_13_0= ';' ) )? )
            {
            // InternalSCTX.g:6108:2: (otherlv_0= 'for' otherlv_1= '(' ( ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) ) | ( (lv_initialization_3_0= ruleEffectOrAssignment ) ) )? otherlv_4= ';' ( (lv_condition_5_0= ruleBoolExpression ) ) otherlv_6= ';' ( (lv_afterthought_7_0= ruleEffectOrAssignment ) )? otherlv_8= ')' otherlv_9= '{' ( (lv_declarations_10_0= ruleDeclaration ) )* ( (lv_statements_11_0= ruleStatement ) )* otherlv_12= '}' ( (lv_semicolon_13_0= ';' ) )? )
            // InternalSCTX.g:6109:3: otherlv_0= 'for' otherlv_1= '(' ( ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) ) | ( (lv_initialization_3_0= ruleEffectOrAssignment ) ) )? otherlv_4= ';' ( (lv_condition_5_0= ruleBoolExpression ) ) otherlv_6= ';' ( (lv_afterthought_7_0= ruleEffectOrAssignment ) )? otherlv_8= ')' otherlv_9= '{' ( (lv_declarations_10_0= ruleDeclaration ) )* ( (lv_statements_11_0= ruleStatement ) )* otherlv_12= '}' ( (lv_semicolon_13_0= ';' ) )?
            {
            otherlv_0=(Token)match(input,47,FollowSets000.FOLLOW_140); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getForLoopAccess().getForKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,31,FollowSets000.FOLLOW_141); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getForLoopAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalSCTX.g:6117:3: ( ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) ) | ( (lv_initialization_3_0= ruleEffectOrAssignment ) ) )?
            int alt209=3;
            alt209 = dfa209.predict(input);
            switch (alt209) {
                case 1 :
                    // InternalSCTX.g:6118:4: ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) )
                    {
                    // InternalSCTX.g:6118:4: ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) )
                    // InternalSCTX.g:6119:5: (lv_initializationDeclaration_2_0= ruleLoopDeclaration )
                    {
                    // InternalSCTX.g:6119:5: (lv_initializationDeclaration_2_0= ruleLoopDeclaration )
                    // InternalSCTX.g:6120:6: lv_initializationDeclaration_2_0= ruleLoopDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getForLoopAccess().getInitializationDeclarationLoopDeclarationParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_142);
                    lv_initializationDeclaration_2_0=ruleLoopDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getForLoopRule());
                      						}
                      						set(
                      							current,
                      							"initializationDeclaration",
                      							lv_initializationDeclaration_2_0,
                      							"de.cau.cs.kieler.scl.SCL.LoopDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6138:4: ( (lv_initialization_3_0= ruleEffectOrAssignment ) )
                    {
                    // InternalSCTX.g:6138:4: ( (lv_initialization_3_0= ruleEffectOrAssignment ) )
                    // InternalSCTX.g:6139:5: (lv_initialization_3_0= ruleEffectOrAssignment )
                    {
                    // InternalSCTX.g:6139:5: (lv_initialization_3_0= ruleEffectOrAssignment )
                    // InternalSCTX.g:6140:6: lv_initialization_3_0= ruleEffectOrAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getForLoopAccess().getInitializationEffectOrAssignmentParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_142);
                    lv_initialization_3_0=ruleEffectOrAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getForLoopRule());
                      						}
                      						set(
                      							current,
                      							"initialization",
                      							lv_initialization_3_0,
                      							"de.cau.cs.kieler.scl.SCL.EffectOrAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,42,FollowSets000.FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getForLoopAccess().getSemicolonKeyword_3());
              		
            }
            // InternalSCTX.g:6162:3: ( (lv_condition_5_0= ruleBoolExpression ) )
            // InternalSCTX.g:6163:4: (lv_condition_5_0= ruleBoolExpression )
            {
            // InternalSCTX.g:6163:4: (lv_condition_5_0= ruleBoolExpression )
            // InternalSCTX.g:6164:5: lv_condition_5_0= ruleBoolExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForLoopAccess().getConditionBoolExpressionParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_142);
            lv_condition_5_0=ruleBoolExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForLoopRule());
              					}
              					set(
              						current,
              						"condition",
              						lv_condition_5_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.BoolExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,42,FollowSets000.FOLLOW_143); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getForLoopAccess().getSemicolonKeyword_5());
              		
            }
            // InternalSCTX.g:6185:3: ( (lv_afterthought_7_0= ruleEffectOrAssignment ) )?
            int alt210=2;
            int LA210_0 = input.LA(1);

            if ( ((LA210_0>=RULE_STRING && LA210_0<=RULE_COMMENT_ANNOTATION)||LA210_0==21||LA210_0==31||LA210_0==33||LA210_0==80||LA210_0==85||LA210_0==94||LA210_0==99||LA210_0==103||(LA210_0>=142 && LA210_0<=144)) ) {
                alt210=1;
            }
            switch (alt210) {
                case 1 :
                    // InternalSCTX.g:6186:4: (lv_afterthought_7_0= ruleEffectOrAssignment )
                    {
                    // InternalSCTX.g:6186:4: (lv_afterthought_7_0= ruleEffectOrAssignment )
                    // InternalSCTX.g:6187:5: lv_afterthought_7_0= ruleEffectOrAssignment
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getForLoopAccess().getAfterthoughtEffectOrAssignmentParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_32);
                    lv_afterthought_7_0=ruleEffectOrAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getForLoopRule());
                      					}
                      					set(
                      						current,
                      						"afterthought",
                      						lv_afterthought_7_0,
                      						"de.cau.cs.kieler.scl.SCL.EffectOrAssignment");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,32,FollowSets000.FOLLOW_101); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getForLoopAccess().getRightParenthesisKeyword_7());
              		
            }
            otherlv_9=(Token)match(input,21,FollowSets000.FOLLOW_98); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getForLoopAccess().getLeftCurlyBracketKeyword_8());
              		
            }
            // InternalSCTX.g:6212:3: ( (lv_declarations_10_0= ruleDeclaration ) )*
            loop211:
            do {
                int alt211=2;
                alt211 = dfa211.predict(input);
                switch (alt211) {
            	case 1 :
            	    // InternalSCTX.g:6213:4: (lv_declarations_10_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:6213:4: (lv_declarations_10_0= ruleDeclaration )
            	    // InternalSCTX.g:6214:5: lv_declarations_10_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getForLoopAccess().getDeclarationsDeclarationParserRuleCall_9_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_98);
            	    lv_declarations_10_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getForLoopRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_10_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop211;
                }
            } while (true);

            // InternalSCTX.g:6231:3: ( (lv_statements_11_0= ruleStatement ) )*
            loop212:
            do {
                int alt212=2;
                int LA212_0 = input.LA(1);

                if ( (LA212_0==RULE_ID||LA212_0==RULE_COMMENT_ANNOTATION||LA212_0==21||LA212_0==38||LA212_0==47||(LA212_0>=72 && LA212_0<=73)||LA212_0==75||LA212_0==103) ) {
                    alt212=1;
                }


                switch (alt212) {
            	case 1 :
            	    // InternalSCTX.g:6232:4: (lv_statements_11_0= ruleStatement )
            	    {
            	    // InternalSCTX.g:6232:4: (lv_statements_11_0= ruleStatement )
            	    // InternalSCTX.g:6233:5: lv_statements_11_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getForLoopAccess().getStatementsStatementParserRuleCall_10_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_99);
            	    lv_statements_11_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getForLoopRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_11_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop212;
                }
            } while (true);

            otherlv_12=(Token)match(input,22,FollowSets000.FOLLOW_130); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getForLoopAccess().getRightCurlyBracketKeyword_11());
              		
            }
            // InternalSCTX.g:6254:3: ( (lv_semicolon_13_0= ';' ) )?
            int alt213=2;
            int LA213_0 = input.LA(1);

            if ( (LA213_0==42) ) {
                alt213=1;
            }
            switch (alt213) {
                case 1 :
                    // InternalSCTX.g:6255:4: (lv_semicolon_13_0= ';' )
                    {
                    // InternalSCTX.g:6255:4: (lv_semicolon_13_0= ';' )
                    // InternalSCTX.g:6256:5: lv_semicolon_13_0= ';'
                    {
                    lv_semicolon_13_0=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_13_0, grammarAccess.getForLoopAccess().getSemicolonSemicolonKeyword_12_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getForLoopRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleForLoop"


    // $ANTLR start "entryRuleLoopDeclaration"
    // InternalSCTX.g:6272:1: entryRuleLoopDeclaration returns [EObject current=null] : iv_ruleLoopDeclaration= ruleLoopDeclaration EOF ;
    public final EObject entryRuleLoopDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLoopDeclaration = null;


        try {
            // InternalSCTX.g:6272:56: (iv_ruleLoopDeclaration= ruleLoopDeclaration EOF )
            // InternalSCTX.g:6273:2: iv_ruleLoopDeclaration= ruleLoopDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLoopDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLoopDeclaration=ruleLoopDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLoopDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLoopDeclaration"


    // $ANTLR start "ruleLoopDeclaration"
    // InternalSCTX.g:6279:1: ruleLoopDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_type_1_0= ruleValueType ) ) | ( ( (lv_type_2_0= ruleHostType ) ) ( (lv_hostType_3_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_4_0= ruleValuedObject ) ) ) ;
    public final EObject ruleLoopDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_hostType_3_0=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_type_1_0 = null;

        Enumerator lv_type_2_0 = null;

        EObject lv_valuedObjects_4_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:6285:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_type_1_0= ruleValueType ) ) | ( ( (lv_type_2_0= ruleHostType ) ) ( (lv_hostType_3_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_4_0= ruleValuedObject ) ) ) )
            // InternalSCTX.g:6286:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_type_1_0= ruleValueType ) ) | ( ( (lv_type_2_0= ruleHostType ) ) ( (lv_hostType_3_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_4_0= ruleValuedObject ) ) )
            {
            // InternalSCTX.g:6286:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_type_1_0= ruleValueType ) ) | ( ( (lv_type_2_0= ruleHostType ) ) ( (lv_hostType_3_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_4_0= ruleValuedObject ) ) )
            // InternalSCTX.g:6287:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_type_1_0= ruleValueType ) ) | ( ( (lv_type_2_0= ruleHostType ) ) ( (lv_hostType_3_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_4_0= ruleValuedObject ) )
            {
            // InternalSCTX.g:6287:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop214:
            do {
                int alt214=2;
                int LA214_0 = input.LA(1);

                if ( (LA214_0==RULE_COMMENT_ANNOTATION||LA214_0==103) ) {
                    alt214=1;
                }


                switch (alt214) {
            	case 1 :
            	    // InternalSCTX.g:6288:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:6288:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:6289:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getLoopDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_121);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getLoopDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop214;
                }
            } while (true);

            // InternalSCTX.g:6306:3: ( ( (lv_type_1_0= ruleValueType ) ) | ( ( (lv_type_2_0= ruleHostType ) ) ( (lv_hostType_3_0= RULE_STRING ) ) ) )
            int alt215=2;
            int LA215_0 = input.LA(1);

            if ( ((LA215_0>=113 && LA215_0<=118)) ) {
                alt215=1;
            }
            else if ( (LA215_0==66) ) {
                alt215=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 215, 0, input);

                throw nvae;
            }
            switch (alt215) {
                case 1 :
                    // InternalSCTX.g:6307:4: ( (lv_type_1_0= ruleValueType ) )
                    {
                    // InternalSCTX.g:6307:4: ( (lv_type_1_0= ruleValueType ) )
                    // InternalSCTX.g:6308:5: (lv_type_1_0= ruleValueType )
                    {
                    // InternalSCTX.g:6308:5: (lv_type_1_0= ruleValueType )
                    // InternalSCTX.g:6309:6: lv_type_1_0= ruleValueType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLoopDeclarationAccess().getTypeValueTypeEnumRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_107);
                    lv_type_1_0=ruleValueType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLoopDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_1_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.ValueType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6327:4: ( ( (lv_type_2_0= ruleHostType ) ) ( (lv_hostType_3_0= RULE_STRING ) ) )
                    {
                    // InternalSCTX.g:6327:4: ( ( (lv_type_2_0= ruleHostType ) ) ( (lv_hostType_3_0= RULE_STRING ) ) )
                    // InternalSCTX.g:6328:5: ( (lv_type_2_0= ruleHostType ) ) ( (lv_hostType_3_0= RULE_STRING ) )
                    {
                    // InternalSCTX.g:6328:5: ( (lv_type_2_0= ruleHostType ) )
                    // InternalSCTX.g:6329:6: (lv_type_2_0= ruleHostType )
                    {
                    // InternalSCTX.g:6329:6: (lv_type_2_0= ruleHostType )
                    // InternalSCTX.g:6330:7: lv_type_2_0= ruleHostType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLoopDeclarationAccess().getTypeHostTypeEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_48);
                    lv_type_2_0=ruleHostType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLoopDeclarationRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.HostType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:6347:5: ( (lv_hostType_3_0= RULE_STRING ) )
                    // InternalSCTX.g:6348:6: (lv_hostType_3_0= RULE_STRING )
                    {
                    // InternalSCTX.g:6348:6: (lv_hostType_3_0= RULE_STRING )
                    // InternalSCTX.g:6349:7: lv_hostType_3_0= RULE_STRING
                    {
                    lv_hostType_3_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_107); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_hostType_3_0, grammarAccess.getLoopDeclarationAccess().getHostTypeSTRINGTerminalRuleCall_1_1_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getLoopDeclarationRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"hostType",
                      								lv_hostType_3_0,
                      								"de.cau.cs.kieler.annotations.Annotations.STRING");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:6367:3: ( (lv_valuedObjects_4_0= ruleValuedObject ) )
            // InternalSCTX.g:6368:4: (lv_valuedObjects_4_0= ruleValuedObject )
            {
            // InternalSCTX.g:6368:4: (lv_valuedObjects_4_0= ruleValuedObject )
            // InternalSCTX.g:6369:5: lv_valuedObjects_4_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLoopDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_valuedObjects_4_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLoopDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_4_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLoopDeclaration"


    // $ANTLR start "entryRuleEffectOrAssignment"
    // InternalSCTX.g:6390:1: entryRuleEffectOrAssignment returns [EObject current=null] : iv_ruleEffectOrAssignment= ruleEffectOrAssignment EOF ;
    public final EObject entryRuleEffectOrAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEffectOrAssignment = null;


        try {
            // InternalSCTX.g:6390:59: (iv_ruleEffectOrAssignment= ruleEffectOrAssignment EOF )
            // InternalSCTX.g:6391:2: iv_ruleEffectOrAssignment= ruleEffectOrAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEffectOrAssignmentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEffectOrAssignment=ruleEffectOrAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEffectOrAssignment; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEffectOrAssignment"


    // $ANTLR start "ruleEffectOrAssignment"
    // InternalSCTX.g:6397:1: ruleEffectOrAssignment returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) ) | ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) ) | ( (lv_expression_6_0= ruleExpression ) ) ) ) ;
    public final EObject ruleEffectOrAssignment() throws RecognitionException {
        EObject current = null;

        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_reference_3_0 = null;

        Enumerator lv_operator_4_0 = null;

        EObject lv_expression_5_0 = null;

        EObject lv_expression_6_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:6403:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) ) | ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) ) | ( (lv_expression_6_0= ruleExpression ) ) ) ) )
            // InternalSCTX.g:6404:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) ) | ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) ) | ( (lv_expression_6_0= ruleExpression ) ) ) )
            {
            // InternalSCTX.g:6404:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) ) | ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) ) | ( (lv_expression_6_0= ruleExpression ) ) ) )
            // InternalSCTX.g:6405:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) ) | ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) ) | ( (lv_expression_6_0= ruleExpression ) ) )
            {
            // InternalSCTX.g:6405:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop216:
            do {
                int alt216=2;
                int LA216_0 = input.LA(1);

                if ( (LA216_0==RULE_COMMENT_ANNOTATION) ) {
                    int LA216_2 = input.LA(2);

                    if ( (synpred236_InternalSCTX()) ) {
                        alt216=1;
                    }


                }
                else if ( (LA216_0==103) ) {
                    int LA216_3 = input.LA(2);

                    if ( (LA216_3==RULE_ID) ) {
                        int LA216_5 = input.LA(3);

                        if ( (synpred236_InternalSCTX()) ) {
                            alt216=1;
                        }


                    }


                }


                switch (alt216) {
            	case 1 :
            	    // InternalSCTX.g:6406:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:6406:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:6407:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_30);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEffectOrAssignmentRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop216;
                }
            } while (true);

            // InternalSCTX.g:6424:3: ( ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) ) | ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) ) | ( (lv_expression_6_0= ruleExpression ) ) )
            int alt217=3;
            alt217 = dfa217.predict(input);
            switch (alt217) {
                case 1 :
                    // InternalSCTX.g:6425:4: ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) )
                    {
                    // InternalSCTX.g:6425:4: ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) )
                    // InternalSCTX.g:6426:5: ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) )
                    {
                    // InternalSCTX.g:6426:5: ( (lv_reference_1_0= ruleValuedObjectReference ) )
                    // InternalSCTX.g:6427:6: (lv_reference_1_0= ruleValuedObjectReference )
                    {
                    // InternalSCTX.g:6427:6: (lv_reference_1_0= ruleValuedObjectReference )
                    // InternalSCTX.g:6428:7: lv_reference_1_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_134);
                    lv_reference_1_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getEffectOrAssignmentRule());
                      							}
                      							set(
                      								current,
                      								"reference",
                      								lv_reference_1_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:6445:5: ( (lv_operator_2_0= rulePostfixOperator ) )
                    // InternalSCTX.g:6446:6: (lv_operator_2_0= rulePostfixOperator )
                    {
                    // InternalSCTX.g:6446:6: (lv_operator_2_0= rulePostfixOperator )
                    // InternalSCTX.g:6447:7: lv_operator_2_0= rulePostfixOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getOperatorPostfixOperatorEnumRuleCall_1_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_operator_2_0=rulePostfixOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getEffectOrAssignmentRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.keffects.KEffects.PostfixOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6466:4: ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) )
                    {
                    // InternalSCTX.g:6466:4: ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) )
                    // InternalSCTX.g:6467:5: ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) )
                    {
                    // InternalSCTX.g:6467:5: ( (lv_reference_3_0= ruleValuedObjectReference ) )
                    // InternalSCTX.g:6468:6: (lv_reference_3_0= ruleValuedObjectReference )
                    {
                    // InternalSCTX.g:6468:6: (lv_reference_3_0= ruleValuedObjectReference )
                    // InternalSCTX.g:6469:7: lv_reference_3_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_131);
                    lv_reference_3_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getEffectOrAssignmentRule());
                      							}
                      							set(
                      								current,
                      								"reference",
                      								lv_reference_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:6486:5: ( (lv_operator_4_0= ruleAssignOperator ) )
                    // InternalSCTX.g:6487:6: (lv_operator_4_0= ruleAssignOperator )
                    {
                    // InternalSCTX.g:6487:6: (lv_operator_4_0= ruleAssignOperator )
                    // InternalSCTX.g:6488:7: lv_operator_4_0= ruleAssignOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_30);
                    lv_operator_4_0=ruleAssignOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getEffectOrAssignmentRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_4_0,
                      								"de.cau.cs.kieler.kexpressions.keffects.KEffects.AssignOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:6505:5: ( (lv_expression_5_0= ruleExpression ) )
                    // InternalSCTX.g:6506:6: (lv_expression_5_0= ruleExpression )
                    {
                    // InternalSCTX.g:6506:6: (lv_expression_5_0= ruleExpression )
                    // InternalSCTX.g:6507:7: lv_expression_5_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getExpressionExpressionParserRuleCall_1_1_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expression_5_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getEffectOrAssignmentRule());
                      							}
                      							set(
                      								current,
                      								"expression",
                      								lv_expression_5_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:6526:4: ( (lv_expression_6_0= ruleExpression ) )
                    {
                    // InternalSCTX.g:6526:4: ( (lv_expression_6_0= ruleExpression ) )
                    // InternalSCTX.g:6527:5: (lv_expression_6_0= ruleExpression )
                    {
                    // InternalSCTX.g:6527:5: (lv_expression_6_0= ruleExpression )
                    // InternalSCTX.g:6528:6: lv_expression_6_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getExpressionExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expression_6_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEffectOrAssignmentRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_6_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEffectOrAssignment"


    // $ANTLR start "entryRuleWhileLoop"
    // InternalSCTX.g:6550:1: entryRuleWhileLoop returns [EObject current=null] : iv_ruleWhileLoop= ruleWhileLoop EOF ;
    public final EObject entryRuleWhileLoop() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWhileLoop = null;


        try {
            // InternalSCTX.g:6550:50: (iv_ruleWhileLoop= ruleWhileLoop EOF )
            // InternalSCTX.g:6551:2: iv_ruleWhileLoop= ruleWhileLoop EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWhileLoopRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleWhileLoop=ruleWhileLoop();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWhileLoop; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWhileLoop"


    // $ANTLR start "ruleWhileLoop"
    // InternalSCTX.g:6557:1: ruleWhileLoop returns [EObject current=null] : (otherlv_0= 'while' otherlv_1= '(' ( (lv_condition_2_0= ruleBoolExpression ) ) otherlv_3= ')' otherlv_4= '{' ( (lv_declarations_5_0= ruleDeclaration ) )* ( (lv_statements_6_0= ruleStatement ) )* otherlv_7= '}' ( (lv_semicolon_8_0= ';' ) )? ) ;
    public final EObject ruleWhileLoop() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_7=null;
        Token lv_semicolon_8_0=null;
        EObject lv_condition_2_0 = null;

        EObject lv_declarations_5_0 = null;

        EObject lv_statements_6_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:6563:2: ( (otherlv_0= 'while' otherlv_1= '(' ( (lv_condition_2_0= ruleBoolExpression ) ) otherlv_3= ')' otherlv_4= '{' ( (lv_declarations_5_0= ruleDeclaration ) )* ( (lv_statements_6_0= ruleStatement ) )* otherlv_7= '}' ( (lv_semicolon_8_0= ';' ) )? ) )
            // InternalSCTX.g:6564:2: (otherlv_0= 'while' otherlv_1= '(' ( (lv_condition_2_0= ruleBoolExpression ) ) otherlv_3= ')' otherlv_4= '{' ( (lv_declarations_5_0= ruleDeclaration ) )* ( (lv_statements_6_0= ruleStatement ) )* otherlv_7= '}' ( (lv_semicolon_8_0= ';' ) )? )
            {
            // InternalSCTX.g:6564:2: (otherlv_0= 'while' otherlv_1= '(' ( (lv_condition_2_0= ruleBoolExpression ) ) otherlv_3= ')' otherlv_4= '{' ( (lv_declarations_5_0= ruleDeclaration ) )* ( (lv_statements_6_0= ruleStatement ) )* otherlv_7= '}' ( (lv_semicolon_8_0= ';' ) )? )
            // InternalSCTX.g:6565:3: otherlv_0= 'while' otherlv_1= '(' ( (lv_condition_2_0= ruleBoolExpression ) ) otherlv_3= ')' otherlv_4= '{' ( (lv_declarations_5_0= ruleDeclaration ) )* ( (lv_statements_6_0= ruleStatement ) )* otherlv_7= '}' ( (lv_semicolon_8_0= ';' ) )?
            {
            otherlv_0=(Token)match(input,75,FollowSets000.FOLLOW_140); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getWhileLoopAccess().getWhileKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,31,FollowSets000.FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getWhileLoopAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalSCTX.g:6573:3: ( (lv_condition_2_0= ruleBoolExpression ) )
            // InternalSCTX.g:6574:4: (lv_condition_2_0= ruleBoolExpression )
            {
            // InternalSCTX.g:6574:4: (lv_condition_2_0= ruleBoolExpression )
            // InternalSCTX.g:6575:5: lv_condition_2_0= ruleBoolExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getWhileLoopAccess().getConditionBoolExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_32);
            lv_condition_2_0=ruleBoolExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getWhileLoopRule());
              					}
              					set(
              						current,
              						"condition",
              						lv_condition_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.BoolExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,32,FollowSets000.FOLLOW_101); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getWhileLoopAccess().getRightParenthesisKeyword_3());
              		
            }
            otherlv_4=(Token)match(input,21,FollowSets000.FOLLOW_98); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getWhileLoopAccess().getLeftCurlyBracketKeyword_4());
              		
            }
            // InternalSCTX.g:6600:3: ( (lv_declarations_5_0= ruleDeclaration ) )*
            loop218:
            do {
                int alt218=2;
                alt218 = dfa218.predict(input);
                switch (alt218) {
            	case 1 :
            	    // InternalSCTX.g:6601:4: (lv_declarations_5_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:6601:4: (lv_declarations_5_0= ruleDeclaration )
            	    // InternalSCTX.g:6602:5: lv_declarations_5_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getWhileLoopAccess().getDeclarationsDeclarationParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_98);
            	    lv_declarations_5_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getWhileLoopRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_5_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop218;
                }
            } while (true);

            // InternalSCTX.g:6619:3: ( (lv_statements_6_0= ruleStatement ) )*
            loop219:
            do {
                int alt219=2;
                int LA219_0 = input.LA(1);

                if ( (LA219_0==RULE_ID||LA219_0==RULE_COMMENT_ANNOTATION||LA219_0==21||LA219_0==38||LA219_0==47||(LA219_0>=72 && LA219_0<=73)||LA219_0==75||LA219_0==103) ) {
                    alt219=1;
                }


                switch (alt219) {
            	case 1 :
            	    // InternalSCTX.g:6620:4: (lv_statements_6_0= ruleStatement )
            	    {
            	    // InternalSCTX.g:6620:4: (lv_statements_6_0= ruleStatement )
            	    // InternalSCTX.g:6621:5: lv_statements_6_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getWhileLoopAccess().getStatementsStatementParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_99);
            	    lv_statements_6_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getWhileLoopRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_6_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop219;
                }
            } while (true);

            otherlv_7=(Token)match(input,22,FollowSets000.FOLLOW_130); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getWhileLoopAccess().getRightCurlyBracketKeyword_7());
              		
            }
            // InternalSCTX.g:6642:3: ( (lv_semicolon_8_0= ';' ) )?
            int alt220=2;
            int LA220_0 = input.LA(1);

            if ( (LA220_0==42) ) {
                alt220=1;
            }
            switch (alt220) {
                case 1 :
                    // InternalSCTX.g:6643:4: (lv_semicolon_8_0= ';' )
                    {
                    // InternalSCTX.g:6643:4: (lv_semicolon_8_0= ';' )
                    // InternalSCTX.g:6644:5: lv_semicolon_8_0= ';'
                    {
                    lv_semicolon_8_0=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_8_0, grammarAccess.getWhileLoopAccess().getSemicolonSemicolonKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getWhileLoopRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWhileLoop"


    // $ANTLR start "entryRuleModuleCallParameter"
    // InternalSCTX.g:6660:1: entryRuleModuleCallParameter returns [EObject current=null] : iv_ruleModuleCallParameter= ruleModuleCallParameter EOF ;
    public final EObject entryRuleModuleCallParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModuleCallParameter = null;


        try {
            // InternalSCTX.g:6660:60: (iv_ruleModuleCallParameter= ruleModuleCallParameter EOF )
            // InternalSCTX.g:6661:2: iv_ruleModuleCallParameter= ruleModuleCallParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModuleCallParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleModuleCallParameter=ruleModuleCallParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModuleCallParameter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModuleCallParameter"


    // $ANTLR start "ruleModuleCallParameter"
    // InternalSCTX.g:6667:1: ruleModuleCallParameter returns [EObject current=null] : ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? ) ;
    public final EObject ruleModuleCallParameter() throws RecognitionException {
        EObject current = null;

        Token lv_pureOutput_0_0=null;
        Token lv_callByReference_1_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_expression_2_0 = null;

        EObject lv_explicitBindingIndices_6_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:6673:2: ( ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? ) )
            // InternalSCTX.g:6674:2: ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? )
            {
            // InternalSCTX.g:6674:2: ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? )
            // InternalSCTX.g:6675:3: ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )?
            {
            // InternalSCTX.g:6675:3: ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )?
            int alt222=2;
            int LA222_0 = input.LA(1);

            if ( (LA222_0==33) ) {
                int LA222_1 = input.LA(2);

                if ( (LA222_1==34) ) {
                    alt222=1;
                }
            }
            else if ( (LA222_0==34) ) {
                alt222=1;
            }
            switch (alt222) {
                case 1 :
                    // InternalSCTX.g:6676:4: ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) )
                    {
                    // InternalSCTX.g:6676:4: ( (lv_pureOutput_0_0= '!' ) )?
                    int alt221=2;
                    int LA221_0 = input.LA(1);

                    if ( (LA221_0==33) ) {
                        alt221=1;
                    }
                    switch (alt221) {
                        case 1 :
                            // InternalSCTX.g:6677:5: (lv_pureOutput_0_0= '!' )
                            {
                            // InternalSCTX.g:6677:5: (lv_pureOutput_0_0= '!' )
                            // InternalSCTX.g:6678:6: lv_pureOutput_0_0= '!'
                            {
                            lv_pureOutput_0_0=(Token)match(input,33,FollowSets000.FOLLOW_33); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_pureOutput_0_0, grammarAccess.getModuleCallParameterAccess().getPureOutputExclamationMarkKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getModuleCallParameterRule());
                              						}
                              						setWithLastConsumed(current, "pureOutput", true, "!");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:6690:4: ( (lv_callByReference_1_0= '&' ) )
                    // InternalSCTX.g:6691:5: (lv_callByReference_1_0= '&' )
                    {
                    // InternalSCTX.g:6691:5: (lv_callByReference_1_0= '&' )
                    // InternalSCTX.g:6692:6: lv_callByReference_1_0= '&'
                    {
                    lv_callByReference_1_0=(Token)match(input,34,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_callByReference_1_0, grammarAccess.getModuleCallParameterAccess().getCallByReferenceAmpersandKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getModuleCallParameterRule());
                      						}
                      						setWithLastConsumed(current, "callByReference", true, "&");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:6705:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalSCTX.g:6706:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalSCTX.g:6706:4: (lv_expression_2_0= ruleExpression )
            // InternalSCTX.g:6707:5: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getModuleCallParameterAccess().getExpressionExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_34);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getModuleCallParameterRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:6724:3: (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )?
            int alt224=2;
            int LA224_0 = input.LA(1);

            if ( (LA224_0==35) ) {
                alt224=1;
            }
            switch (alt224) {
                case 1 :
                    // InternalSCTX.g:6725:4: otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )*
                    {
                    otherlv_3=(Token)match(input,35,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getModuleCallParameterAccess().getToKeyword_2_0());
                      			
                    }
                    // InternalSCTX.g:6729:4: ( (otherlv_4= RULE_ID ) )
                    // InternalSCTX.g:6730:5: (otherlv_4= RULE_ID )
                    {
                    // InternalSCTX.g:6730:5: (otherlv_4= RULE_ID )
                    // InternalSCTX.g:6731:6: otherlv_4= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getModuleCallParameterRule());
                      						}
                      					
                    }
                    otherlv_4=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_4, grammarAccess.getModuleCallParameterAccess().getExplicitBindingValuedObjectCrossReference_2_1_0());
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:6745:4: (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )*
                    loop223:
                    do {
                        int alt223=2;
                        int LA223_0 = input.LA(1);

                        if ( (LA223_0==36) ) {
                            alt223=1;
                        }


                        switch (alt223) {
                    	case 1 :
                    	    // InternalSCTX.g:6746:5: otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']'
                    	    {
                    	    otherlv_5=(Token)match(input,36,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getModuleCallParameterAccess().getLeftSquareBracketKeyword_2_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:6750:5: ( (lv_explicitBindingIndices_6_0= ruleExpression ) )
                    	    // InternalSCTX.g:6751:6: (lv_explicitBindingIndices_6_0= ruleExpression )
                    	    {
                    	    // InternalSCTX.g:6751:6: (lv_explicitBindingIndices_6_0= ruleExpression )
                    	    // InternalSCTX.g:6752:7: lv_explicitBindingIndices_6_0= ruleExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getModuleCallParameterAccess().getExplicitBindingIndicesExpressionParserRuleCall_2_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_36);
                    	    lv_explicitBindingIndices_6_0=ruleExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getModuleCallParameterRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"explicitBindingIndices",
                    	      								lv_explicitBindingIndices_6_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    otherlv_7=(Token)match(input,37,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_7, grammarAccess.getModuleCallParameterAccess().getRightSquareBracketKeyword_2_2_2());
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop223;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModuleCallParameter"


    // $ANTLR start "entryRuleMethodDeclaration"
    // InternalSCTX.g:6779:1: entryRuleMethodDeclaration returns [EObject current=null] : iv_ruleMethodDeclaration= ruleMethodDeclaration EOF ;
    public final EObject entryRuleMethodDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethodDeclaration = null;


        try {
            // InternalSCTX.g:6779:58: (iv_ruleMethodDeclaration= ruleMethodDeclaration EOF )
            // InternalSCTX.g:6780:2: iv_ruleMethodDeclaration= ruleMethodDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMethodDeclaration=ruleMethodDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodDeclaration"


    // $ANTLR start "ruleMethodDeclaration"
    // InternalSCTX.g:6786:1: ruleMethodDeclaration returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= ';' | (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' ) ) ( (lv_annotations_19_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleMethodDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_18=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_access_2_0 = null;

        Enumerator lv_returnType_3_0 = null;

        EObject lv_valuedObjects_4_0 = null;

        EObject lv_parameterDeclarations_6_0 = null;

        EObject lv_parameterDeclarations_8_0 = null;

        EObject lv_schedule_12_0 = null;

        EObject lv_annotations_15_0 = null;

        EObject lv_declarations_16_0 = null;

        EObject lv_statements_17_0 = null;

        EObject lv_annotations_19_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:6792:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= ';' | (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' ) ) ( (lv_annotations_19_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:6793:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= ';' | (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' ) ) ( (lv_annotations_19_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:6793:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= ';' | (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' ) ) ( (lv_annotations_19_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:6794:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= ';' | (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' ) ) ( (lv_annotations_19_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:6794:3: ()
            // InternalSCTX.g:6795:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMethodDeclarationAccess().getMethodImplementationDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:6804:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop225:
            do {
                int alt225=2;
                int LA225_0 = input.LA(1);

                if ( (LA225_0==RULE_COMMENT_ANNOTATION) ) {
                    int LA225_2 = input.LA(2);

                    if ( (synpred246_InternalSCTX()) ) {
                        alt225=1;
                    }


                }
                else if ( (LA225_0==103) ) {
                    int LA225_3 = input.LA(2);

                    if ( (LA225_3==RULE_ID) ) {
                        int LA225_5 = input.LA(3);

                        if ( (synpred246_InternalSCTX()) ) {
                            alt225=1;
                        }


                    }


                }


                switch (alt225) {
            	case 1 :
            	    // InternalSCTX.g:6805:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:6805:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:6806:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_119);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop225;
                }
            } while (true);

            // InternalSCTX.g:6823:3: ( (lv_access_2_0= ruleAccessModifier ) )?
            int alt226=2;
            int LA226_0 = input.LA(1);

            if ( ((LA226_0>=152 && LA226_0<=154)) ) {
                alt226=1;
            }
            switch (alt226) {
                case 1 :
                    // InternalSCTX.g:6824:4: (lv_access_2_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:6824:4: (lv_access_2_0= ruleAccessModifier )
                    // InternalSCTX.g:6825:5: lv_access_2_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getAccessAccessModifierEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_119);
                    lv_access_2_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:6842:3: ( (lv_returnType_3_0= ruleMethodReturnType ) )?
            int alt227=2;
            int LA227_0 = input.LA(1);

            if ( ((LA227_0>=114 && LA227_0<=117)||LA227_0==155) ) {
                alt227=1;
            }
            switch (alt227) {
                case 1 :
                    // InternalSCTX.g:6843:4: (lv_returnType_3_0= ruleMethodReturnType )
                    {
                    // InternalSCTX.g:6843:4: (lv_returnType_3_0= ruleMethodReturnType )
                    // InternalSCTX.g:6844:5: lv_returnType_3_0= ruleMethodReturnType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getReturnTypeMethodReturnTypeEnumRuleCall_3_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_119);
                    lv_returnType_3_0=ruleMethodReturnType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"returnType",
                      						lv_returnType_3_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.MethodReturnType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:6861:3: ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) )
            // InternalSCTX.g:6862:4: (lv_valuedObjects_4_0= ruleSimpleValuedObject )
            {
            // InternalSCTX.g:6862:4: (lv_valuedObjects_4_0= ruleSimpleValuedObject )
            // InternalSCTX.g:6863:5: lv_valuedObjects_4_0= ruleSimpleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getValuedObjectsSimpleValuedObjectParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_120);
            lv_valuedObjects_4_0=ruleSimpleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_4_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.SimpleValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:6880:3: ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' )
            int alt229=2;
            int LA229_0 = input.LA(1);

            if ( (LA229_0==31) ) {
                alt229=1;
            }
            else if ( (LA229_0==70) ) {
                alt229=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 229, 0, input);

                throw nvae;
            }
            switch (alt229) {
                case 1 :
                    // InternalSCTX.g:6881:4: (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' )
                    {
                    // InternalSCTX.g:6881:4: (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' )
                    // InternalSCTX.g:6882:5: otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')'
                    {
                    otherlv_5=(Token)match(input,31,FollowSets000.FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getMethodDeclarationAccess().getLeftParenthesisKeyword_5_0_0());
                      				
                    }
                    // InternalSCTX.g:6886:5: ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) )
                    // InternalSCTX.g:6887:6: (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon )
                    {
                    // InternalSCTX.g:6887:6: (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon )
                    // InternalSCTX.g:6888:7: lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getMethodDeclarationAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_5_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_parameterDeclarations_6_0=ruleVariableDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                      							}
                      							add(
                      								current,
                      								"parameterDeclarations",
                      								lv_parameterDeclarations_6_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:6905:5: (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )*
                    loop228:
                    do {
                        int alt228=2;
                        int LA228_0 = input.LA(1);

                        if ( (LA228_0==20) ) {
                            alt228=1;
                        }


                        switch (alt228) {
                    	case 1 :
                    	    // InternalSCTX.g:6906:6: otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) )
                    	    {
                    	    otherlv_7=(Token)match(input,20,FollowSets000.FOLLOW_121); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_7, grammarAccess.getMethodDeclarationAccess().getCommaKeyword_5_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCTX.g:6910:6: ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) )
                    	    // InternalSCTX.g:6911:7: (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon )
                    	    {
                    	    // InternalSCTX.g:6911:7: (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon )
                    	    // InternalSCTX.g:6912:8: lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getMethodDeclarationAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_5_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_31);
                    	    lv_parameterDeclarations_8_0=ruleVariableDeclarationWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameterDeclarations",
                    	      									lv_parameterDeclarations_8_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop228;
                        }
                    } while (true);

                    otherlv_9=(Token)match(input,32,FollowSets000.FOLLOW_144); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getMethodDeclarationAccess().getRightParenthesisKeyword_5_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6936:4: otherlv_10= '()'
                    {
                    otherlv_10=(Token)match(input,70,FollowSets000.FOLLOW_144); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getMethodDeclarationAccess().getLeftParenthesisRightParenthesisKeyword_5_1());
                      			
                    }

                    }
                    break;

            }

            // InternalSCTX.g:6941:3: (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )?
            int alt231=2;
            int LA231_0 = input.LA(1);

            if ( (LA231_0==29) ) {
                alt231=1;
            }
            switch (alt231) {
                case 1 :
                    // InternalSCTX.g:6942:4: otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_11=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getMethodDeclarationAccess().getScheduleKeyword_6_0());
                      			
                    }
                    // InternalSCTX.g:6946:4: ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+
                    int cnt230=0;
                    loop230:
                    do {
                        int alt230=2;
                        int LA230_0 = input.LA(1);

                        if ( (LA230_0==RULE_ID) ) {
                            alt230=1;
                        }


                        switch (alt230) {
                    	case 1 :
                    	    // InternalSCTX.g:6947:5: (lv_schedule_12_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:6947:5: (lv_schedule_12_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:6948:6: lv_schedule_12_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getMethodDeclarationAccess().getScheduleScheduleObjectReferenceParserRuleCall_6_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_145);
                    	    lv_schedule_12_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_12_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt230 >= 1 ) break loop230;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(230, input);
                                throw eee;
                        }
                        cnt230++;
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:6966:3: (otherlv_13= ';' | (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' ) )
            int alt235=2;
            int LA235_0 = input.LA(1);

            if ( (LA235_0==42) ) {
                alt235=1;
            }
            else if ( (LA235_0==21) ) {
                alt235=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 235, 0, input);

                throw nvae;
            }
            switch (alt235) {
                case 1 :
                    // InternalSCTX.g:6967:4: otherlv_13= ';'
                    {
                    otherlv_13=(Token)match(input,42,FollowSets000.FOLLOW_146); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getMethodDeclarationAccess().getSemicolonKeyword_7_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6972:4: (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' )
                    {
                    // InternalSCTX.g:6972:4: (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' )
                    // InternalSCTX.g:6973:5: otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}'
                    {
                    otherlv_14=(Token)match(input,21,FollowSets000.FOLLOW_124); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_14, grammarAccess.getMethodDeclarationAccess().getLeftCurlyBracketKeyword_7_1_0());
                      				
                    }
                    // InternalSCTX.g:6977:5: ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
                    int alt232=2;
                    int LA232_0 = input.LA(1);

                    if ( (LA232_0==RULE_SL_COMMENT_ANNOTATION) ) {
                        alt232=1;
                    }
                    switch (alt232) {
                        case 1 :
                            // InternalSCTX.g:6978:6: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                            {
                            // InternalSCTX.g:6978:6: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                            // InternalSCTX.g:6979:7: lv_annotations_15_0= ruleCommentAnnotatonSL
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getMethodDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_7_1_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_98);
                            lv_annotations_15_0=ruleCommentAnnotatonSL();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                              							}
                              							add(
                              								current,
                              								"annotations",
                              								lv_annotations_15_0,
                              								"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:6996:5: ( (lv_declarations_16_0= ruleDeclaration ) )*
                    loop233:
                    do {
                        int alt233=2;
                        alt233 = dfa233.predict(input);
                        switch (alt233) {
                    	case 1 :
                    	    // InternalSCTX.g:6997:6: (lv_declarations_16_0= ruleDeclaration )
                    	    {
                    	    // InternalSCTX.g:6997:6: (lv_declarations_16_0= ruleDeclaration )
                    	    // InternalSCTX.g:6998:7: lv_declarations_16_0= ruleDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMethodDeclarationAccess().getDeclarationsDeclarationParserRuleCall_7_1_2_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_98);
                    	    lv_declarations_16_0=ruleDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_16_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop233;
                        }
                    } while (true);

                    // InternalSCTX.g:7015:5: ( (lv_statements_17_0= ruleStatement ) )*
                    loop234:
                    do {
                        int alt234=2;
                        int LA234_0 = input.LA(1);

                        if ( (LA234_0==RULE_ID||LA234_0==RULE_COMMENT_ANNOTATION||LA234_0==21||LA234_0==38||LA234_0==47||(LA234_0>=72 && LA234_0<=73)||LA234_0==75||LA234_0==103) ) {
                            alt234=1;
                        }


                        switch (alt234) {
                    	case 1 :
                    	    // InternalSCTX.g:7016:6: (lv_statements_17_0= ruleStatement )
                    	    {
                    	    // InternalSCTX.g:7016:6: (lv_statements_17_0= ruleStatement )
                    	    // InternalSCTX.g:7017:7: lv_statements_17_0= ruleStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMethodDeclarationAccess().getStatementsStatementParserRuleCall_7_1_3_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_99);
                    	    lv_statements_17_0=ruleStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"statements",
                    	      								lv_statements_17_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop234;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,22,FollowSets000.FOLLOW_146); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_18, grammarAccess.getMethodDeclarationAccess().getRightCurlyBracketKeyword_7_1_4());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:7040:3: ( (lv_annotations_19_0= ruleCommentAnnotatonSL ) )?
            int alt236=2;
            int LA236_0 = input.LA(1);

            if ( (LA236_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt236=1;
            }
            switch (alt236) {
                case 1 :
                    // InternalSCTX.g:7041:4: (lv_annotations_19_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:7041:4: (lv_annotations_19_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:7042:5: lv_annotations_19_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_19_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_19_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodDeclaration"


    // $ANTLR start "entryRuleMethodDeclarationWOSemicolon"
    // InternalSCTX.g:7063:1: entryRuleMethodDeclarationWOSemicolon returns [EObject current=null] : iv_ruleMethodDeclarationWOSemicolon= ruleMethodDeclarationWOSemicolon EOF ;
    public final EObject entryRuleMethodDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethodDeclarationWOSemicolon = null;


        try {
            // InternalSCTX.g:7063:69: (iv_ruleMethodDeclarationWOSemicolon= ruleMethodDeclarationWOSemicolon EOF )
            // InternalSCTX.g:7064:2: iv_ruleMethodDeclarationWOSemicolon= ruleMethodDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMethodDeclarationWOSemicolon=ruleMethodDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodDeclarationWOSemicolon"


    // $ANTLR start "ruleMethodDeclarationWOSemicolon"
    // InternalSCTX.g:7070:1: ruleMethodDeclarationWOSemicolon returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= '{' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_15_0= ruleDeclaration ) )* ( (lv_statements_16_0= ruleStatement ) )* otherlv_17= '}' )? ) ;
    public final EObject ruleMethodDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_17=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_access_2_0 = null;

        Enumerator lv_returnType_3_0 = null;

        EObject lv_valuedObjects_4_0 = null;

        EObject lv_parameterDeclarations_6_0 = null;

        EObject lv_parameterDeclarations_8_0 = null;

        EObject lv_schedule_12_0 = null;

        EObject lv_annotations_14_0 = null;

        EObject lv_declarations_15_0 = null;

        EObject lv_statements_16_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:7076:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= '{' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_15_0= ruleDeclaration ) )* ( (lv_statements_16_0= ruleStatement ) )* otherlv_17= '}' )? ) )
            // InternalSCTX.g:7077:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= '{' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_15_0= ruleDeclaration ) )* ( (lv_statements_16_0= ruleStatement ) )* otherlv_17= '}' )? )
            {
            // InternalSCTX.g:7077:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= '{' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_15_0= ruleDeclaration ) )* ( (lv_statements_16_0= ruleStatement ) )* otherlv_17= '}' )? )
            // InternalSCTX.g:7078:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= '{' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_15_0= ruleDeclaration ) )* ( (lv_statements_16_0= ruleStatement ) )* otherlv_17= '}' )?
            {
            // InternalSCTX.g:7078:3: ()
            // InternalSCTX.g:7079:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMethodDeclarationWOSemicolonAccess().getMethodImplementationDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:7088:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop237:
            do {
                int alt237=2;
                int LA237_0 = input.LA(1);

                if ( (LA237_0==RULE_COMMENT_ANNOTATION) ) {
                    int LA237_2 = input.LA(2);

                    if ( (synpred258_InternalSCTX()) ) {
                        alt237=1;
                    }


                }
                else if ( (LA237_0==103) ) {
                    int LA237_3 = input.LA(2);

                    if ( (LA237_3==RULE_ID) ) {
                        int LA237_5 = input.LA(3);

                        if ( (synpred258_InternalSCTX()) ) {
                            alt237=1;
                        }


                    }


                }


                switch (alt237) {
            	case 1 :
            	    // InternalSCTX.g:7089:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:7089:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:7090:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_119);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop237;
                }
            } while (true);

            // InternalSCTX.g:7107:3: ( (lv_access_2_0= ruleAccessModifier ) )?
            int alt238=2;
            int LA238_0 = input.LA(1);

            if ( ((LA238_0>=152 && LA238_0<=154)) ) {
                alt238=1;
            }
            switch (alt238) {
                case 1 :
                    // InternalSCTX.g:7108:4: (lv_access_2_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:7108:4: (lv_access_2_0= ruleAccessModifier )
                    // InternalSCTX.g:7109:5: lv_access_2_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_119);
                    lv_access_2_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:7126:3: ( (lv_returnType_3_0= ruleMethodReturnType ) )?
            int alt239=2;
            int LA239_0 = input.LA(1);

            if ( ((LA239_0>=114 && LA239_0<=117)||LA239_0==155) ) {
                alt239=1;
            }
            switch (alt239) {
                case 1 :
                    // InternalSCTX.g:7127:4: (lv_returnType_3_0= ruleMethodReturnType )
                    {
                    // InternalSCTX.g:7127:4: (lv_returnType_3_0= ruleMethodReturnType )
                    // InternalSCTX.g:7128:5: lv_returnType_3_0= ruleMethodReturnType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getReturnTypeMethodReturnTypeEnumRuleCall_3_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_119);
                    lv_returnType_3_0=ruleMethodReturnType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"returnType",
                      						lv_returnType_3_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.MethodReturnType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:7145:3: ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) )
            // InternalSCTX.g:7146:4: (lv_valuedObjects_4_0= ruleSimpleValuedObject )
            {
            // InternalSCTX.g:7146:4: (lv_valuedObjects_4_0= ruleSimpleValuedObject )
            // InternalSCTX.g:7147:5: lv_valuedObjects_4_0= ruleSimpleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getValuedObjectsSimpleValuedObjectParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_120);
            lv_valuedObjects_4_0=ruleSimpleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_4_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.SimpleValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:7164:3: ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' )
            int alt241=2;
            int LA241_0 = input.LA(1);

            if ( (LA241_0==31) ) {
                alt241=1;
            }
            else if ( (LA241_0==70) ) {
                alt241=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 241, 0, input);

                throw nvae;
            }
            switch (alt241) {
                case 1 :
                    // InternalSCTX.g:7165:4: (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' )
                    {
                    // InternalSCTX.g:7165:4: (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' )
                    // InternalSCTX.g:7166:5: otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')'
                    {
                    otherlv_5=(Token)match(input,31,FollowSets000.FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getMethodDeclarationWOSemicolonAccess().getLeftParenthesisKeyword_5_0_0());
                      				
                    }
                    // InternalSCTX.g:7170:5: ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) )
                    // InternalSCTX.g:7171:6: (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon )
                    {
                    // InternalSCTX.g:7171:6: (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon )
                    // InternalSCTX.g:7172:7: lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_5_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_parameterDeclarations_6_0=ruleVariableDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                      							}
                      							add(
                      								current,
                      								"parameterDeclarations",
                      								lv_parameterDeclarations_6_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:7189:5: (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )*
                    loop240:
                    do {
                        int alt240=2;
                        int LA240_0 = input.LA(1);

                        if ( (LA240_0==20) ) {
                            alt240=1;
                        }


                        switch (alt240) {
                    	case 1 :
                    	    // InternalSCTX.g:7190:6: otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) )
                    	    {
                    	    otherlv_7=(Token)match(input,20,FollowSets000.FOLLOW_121); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_7, grammarAccess.getMethodDeclarationWOSemicolonAccess().getCommaKeyword_5_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCTX.g:7194:6: ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) )
                    	    // InternalSCTX.g:7195:7: (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon )
                    	    {
                    	    // InternalSCTX.g:7195:7: (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon )
                    	    // InternalSCTX.g:7196:8: lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_5_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_31);
                    	    lv_parameterDeclarations_8_0=ruleVariableDeclarationWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameterDeclarations",
                    	      									lv_parameterDeclarations_8_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop240;
                        }
                    } while (true);

                    otherlv_9=(Token)match(input,32,FollowSets000.FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getMethodDeclarationWOSemicolonAccess().getRightParenthesisKeyword_5_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7220:4: otherlv_10= '()'
                    {
                    otherlv_10=(Token)match(input,70,FollowSets000.FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getMethodDeclarationWOSemicolonAccess().getLeftParenthesisRightParenthesisKeyword_5_1());
                      			
                    }

                    }
                    break;

            }

            // InternalSCTX.g:7225:3: (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )?
            int alt243=2;
            alt243 = dfa243.predict(input);
            switch (alt243) {
                case 1 :
                    // InternalSCTX.g:7226:4: otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_11=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getMethodDeclarationWOSemicolonAccess().getScheduleKeyword_6_0());
                      			
                    }
                    // InternalSCTX.g:7230:4: ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+
                    int cnt242=0;
                    loop242:
                    do {
                        int alt242=2;
                        alt242 = dfa242.predict(input);
                        switch (alt242) {
                    	case 1 :
                    	    // InternalSCTX.g:7231:5: (lv_schedule_12_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:7231:5: (lv_schedule_12_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:7232:6: lv_schedule_12_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getScheduleScheduleObjectReferenceParserRuleCall_6_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_123);
                    	    lv_schedule_12_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_12_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt242 >= 1 ) break loop242;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(242, input);
                                throw eee;
                        }
                        cnt242++;
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:7250:3: (otherlv_13= '{' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_15_0= ruleDeclaration ) )* ( (lv_statements_16_0= ruleStatement ) )* otherlv_17= '}' )?
            int alt247=2;
            int LA247_0 = input.LA(1);

            if ( (LA247_0==21) ) {
                alt247=1;
            }
            switch (alt247) {
                case 1 :
                    // InternalSCTX.g:7251:4: otherlv_13= '{' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_15_0= ruleDeclaration ) )* ( (lv_statements_16_0= ruleStatement ) )* otherlv_17= '}'
                    {
                    otherlv_13=(Token)match(input,21,FollowSets000.FOLLOW_124); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getMethodDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_7_0());
                      			
                    }
                    // InternalSCTX.g:7255:4: ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )?
                    int alt244=2;
                    int LA244_0 = input.LA(1);

                    if ( (LA244_0==RULE_SL_COMMENT_ANNOTATION) ) {
                        alt244=1;
                    }
                    switch (alt244) {
                        case 1 :
                            // InternalSCTX.g:7256:5: (lv_annotations_14_0= ruleCommentAnnotatonSL )
                            {
                            // InternalSCTX.g:7256:5: (lv_annotations_14_0= ruleCommentAnnotatonSL )
                            // InternalSCTX.g:7257:6: lv_annotations_14_0= ruleCommentAnnotatonSL
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_7_1_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_98);
                            lv_annotations_14_0=ruleCommentAnnotatonSL();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                              						}
                              						add(
                              							current,
                              							"annotations",
                              							lv_annotations_14_0,
                              							"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:7274:4: ( (lv_declarations_15_0= ruleDeclaration ) )*
                    loop245:
                    do {
                        int alt245=2;
                        alt245 = dfa245.predict(input);
                        switch (alt245) {
                    	case 1 :
                    	    // InternalSCTX.g:7275:5: (lv_declarations_15_0= ruleDeclaration )
                    	    {
                    	    // InternalSCTX.g:7275:5: (lv_declarations_15_0= ruleDeclaration )
                    	    // InternalSCTX.g:7276:6: lv_declarations_15_0= ruleDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getDeclarationsDeclarationParserRuleCall_7_2_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_98);
                    	    lv_declarations_15_0=ruleDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"declarations",
                    	      							lv_declarations_15_0,
                    	      							"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop245;
                        }
                    } while (true);

                    // InternalSCTX.g:7293:4: ( (lv_statements_16_0= ruleStatement ) )*
                    loop246:
                    do {
                        int alt246=2;
                        int LA246_0 = input.LA(1);

                        if ( (LA246_0==RULE_ID||LA246_0==RULE_COMMENT_ANNOTATION||LA246_0==21||LA246_0==38||LA246_0==47||(LA246_0>=72 && LA246_0<=73)||LA246_0==75||LA246_0==103) ) {
                            alt246=1;
                        }


                        switch (alt246) {
                    	case 1 :
                    	    // InternalSCTX.g:7294:5: (lv_statements_16_0= ruleStatement )
                    	    {
                    	    // InternalSCTX.g:7294:5: (lv_statements_16_0= ruleStatement )
                    	    // InternalSCTX.g:7295:6: lv_statements_16_0= ruleStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getStatementsStatementParserRuleCall_7_3_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_99);
                    	    lv_statements_16_0=ruleStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"statements",
                    	      							lv_statements_16_0,
                    	      							"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop246;
                        }
                    } while (true);

                    otherlv_17=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getMethodDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_7_4());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodDeclarationWOSemicolon"


    // $ANTLR start "entryRuleRootScope"
    // InternalSCTX.g:7321:1: entryRuleRootScope returns [EObject current=null] : iv_ruleRootScope= ruleRootScope EOF ;
    public final EObject entryRuleRootScope() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRootScope = null;


        try {
            // InternalSCTX.g:7321:50: (iv_ruleRootScope= ruleRootScope EOF )
            // InternalSCTX.g:7322:2: iv_ruleRootScope= ruleRootScope EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRootScopeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRootScope=ruleRootScope();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRootScope; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRootScope"


    // $ANTLR start "ruleRootScope"
    // InternalSCTX.g:7328:1: ruleRootScope returns [EObject current=null] : ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* ) ;
    public final EObject ruleRootScope() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        EObject lv_declarations_1_0 = null;

        EObject lv_entities_2_0 = null;

        EObject lv_scopes_4_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:7334:2: ( ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* ) )
            // InternalSCTX.g:7335:2: ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* )
            {
            // InternalSCTX.g:7335:2: ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* )
            // InternalSCTX.g:7336:3: () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )*
            {
            // InternalSCTX.g:7336:3: ()
            // InternalSCTX.g:7337:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRootScopeAccess().getKExtScopeAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:7346:3: ( (lv_declarations_1_0= ruleDeclaration ) )*
            loop248:
            do {
                int alt248=2;
                alt248 = dfa248.predict(input);
                switch (alt248) {
            	case 1 :
            	    // InternalSCTX.g:7347:4: (lv_declarations_1_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:7347:4: (lv_declarations_1_0= ruleDeclaration )
            	    // InternalSCTX.g:7348:5: lv_declarations_1_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRootScopeAccess().getDeclarationsDeclarationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_147);
            	    lv_declarations_1_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_1_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop248;
                }
            } while (true);

            // InternalSCTX.g:7365:3: ( (lv_entities_2_0= ruleTestEntity ) )*
            loop249:
            do {
                int alt249=2;
                int LA249_0 = input.LA(1);

                if ( (LA249_0==RULE_ID||LA249_0==RULE_HOSTCODE||LA249_0==RULE_COMMENT_ANNOTATION||LA249_0==21||LA249_0==77||LA249_0==80||(LA249_0>=84 && LA249_0<=85)||LA249_0==103) ) {
                    alt249=1;
                }


                switch (alt249) {
            	case 1 :
            	    // InternalSCTX.g:7366:4: (lv_entities_2_0= ruleTestEntity )
            	    {
            	    // InternalSCTX.g:7366:4: (lv_entities_2_0= ruleTestEntity )
            	    // InternalSCTX.g:7367:5: lv_entities_2_0= ruleTestEntity
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRootScopeAccess().getEntitiesTestEntityParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_148);
            	    lv_entities_2_0=ruleTestEntity();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"entities",
            	      						lv_entities_2_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.TestEntity");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop249;
                }
            } while (true);

            // InternalSCTX.g:7384:3: (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )*
            loop250:
            do {
                int alt250=2;
                int LA250_0 = input.LA(1);

                if ( (LA250_0==76) ) {
                    alt250=1;
                }


                switch (alt250) {
            	case 1 :
            	    // InternalSCTX.g:7385:4: otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) )
            	    {
            	    otherlv_3=(Token)match(input,76,FollowSets000.FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getRootScopeAccess().getScopeKeyword_3_0());
            	      			
            	    }
            	    // InternalSCTX.g:7389:4: ( (lv_scopes_4_0= ruleScope ) )
            	    // InternalSCTX.g:7390:5: (lv_scopes_4_0= ruleScope )
            	    {
            	    // InternalSCTX.g:7390:5: (lv_scopes_4_0= ruleScope )
            	    // InternalSCTX.g:7391:6: lv_scopes_4_0= ruleScope
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRootScopeAccess().getScopesScopeParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_149);
            	    lv_scopes_4_0=ruleScope();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"scopes",
            	      							lv_scopes_4_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.Scope");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop250;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRootScope"


    // $ANTLR start "entryRuleScope"
    // InternalSCTX.g:7413:1: entryRuleScope returns [EObject current=null] : iv_ruleScope= ruleScope EOF ;
    public final EObject entryRuleScope() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScope = null;


        try {
            // InternalSCTX.g:7413:46: (iv_ruleScope= ruleScope EOF )
            // InternalSCTX.g:7414:2: iv_ruleScope= ruleScope EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScopeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScope=ruleScope();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScope; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScope"


    // $ANTLR start "ruleScope"
    // InternalSCTX.g:7420:1: ruleScope returns [EObject current=null] : ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' ) ;
    public final EObject ruleScope() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_declarations_3_0 = null;

        EObject lv_entities_4_0 = null;

        EObject lv_scopes_6_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:7426:2: ( ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' ) )
            // InternalSCTX.g:7427:2: ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' )
            {
            // InternalSCTX.g:7427:2: ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' )
            // InternalSCTX.g:7428:3: () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}'
            {
            // InternalSCTX.g:7428:3: ()
            // InternalSCTX.g:7429:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getScopeAccess().getKExtScopeAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:7438:3: ( (lv_name_1_0= RULE_ID ) )?
            int alt251=2;
            int LA251_0 = input.LA(1);

            if ( (LA251_0==RULE_ID) ) {
                alt251=1;
            }
            switch (alt251) {
                case 1 :
                    // InternalSCTX.g:7439:4: (lv_name_1_0= RULE_ID )
                    {
                    // InternalSCTX.g:7439:4: (lv_name_1_0= RULE_ID )
                    // InternalSCTX.g:7440:5: lv_name_1_0= RULE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_1_0, grammarAccess.getScopeAccess().getNameIDTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getScopeRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"de.cau.cs.kieler.annotations.Annotations.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,21,FollowSets000.FOLLOW_150); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getScopeAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalSCTX.g:7460:3: ( (lv_declarations_3_0= ruleDeclaration ) )*
            loop252:
            do {
                int alt252=2;
                alt252 = dfa252.predict(input);
                switch (alt252) {
            	case 1 :
            	    // InternalSCTX.g:7461:4: (lv_declarations_3_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:7461:4: (lv_declarations_3_0= ruleDeclaration )
            	    // InternalSCTX.g:7462:5: lv_declarations_3_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScopeAccess().getDeclarationsDeclarationParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_150);
            	    lv_declarations_3_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_3_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop252;
                }
            } while (true);

            // InternalSCTX.g:7479:3: ( (lv_entities_4_0= ruleTestEntity ) )*
            loop253:
            do {
                int alt253=2;
                int LA253_0 = input.LA(1);

                if ( (LA253_0==RULE_ID||LA253_0==RULE_HOSTCODE||LA253_0==RULE_COMMENT_ANNOTATION||LA253_0==21||LA253_0==77||LA253_0==80||(LA253_0>=84 && LA253_0<=85)||LA253_0==103) ) {
                    alt253=1;
                }


                switch (alt253) {
            	case 1 :
            	    // InternalSCTX.g:7480:4: (lv_entities_4_0= ruleTestEntity )
            	    {
            	    // InternalSCTX.g:7480:4: (lv_entities_4_0= ruleTestEntity )
            	    // InternalSCTX.g:7481:5: lv_entities_4_0= ruleTestEntity
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScopeAccess().getEntitiesTestEntityParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_151);
            	    lv_entities_4_0=ruleTestEntity();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"entities",
            	      						lv_entities_4_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.TestEntity");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop253;
                }
            } while (true);

            // InternalSCTX.g:7498:3: (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )*
            loop254:
            do {
                int alt254=2;
                int LA254_0 = input.LA(1);

                if ( (LA254_0==76) ) {
                    alt254=1;
                }


                switch (alt254) {
            	case 1 :
            	    // InternalSCTX.g:7499:4: otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) )
            	    {
            	    otherlv_5=(Token)match(input,76,FollowSets000.FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getScopeAccess().getScopeKeyword_5_0());
            	      			
            	    }
            	    // InternalSCTX.g:7503:4: ( (lv_scopes_6_0= ruleScope ) )
            	    // InternalSCTX.g:7504:5: (lv_scopes_6_0= ruleScope )
            	    {
            	    // InternalSCTX.g:7504:5: (lv_scopes_6_0= ruleScope )
            	    // InternalSCTX.g:7505:6: lv_scopes_6_0= ruleScope
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getScopeAccess().getScopesScopeParserRuleCall_5_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_152);
            	    lv_scopes_6_0=ruleScope();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getScopeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"scopes",
            	      							lv_scopes_6_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.Scope");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop254;
                }
            } while (true);

            otherlv_7=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getScopeAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScope"


    // $ANTLR start "entryRuleTestEntity"
    // InternalSCTX.g:7531:1: entryRuleTestEntity returns [EObject current=null] : iv_ruleTestEntity= ruleTestEntity EOF ;
    public final EObject entryRuleTestEntity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTestEntity = null;


        try {
            // InternalSCTX.g:7531:51: (iv_ruleTestEntity= ruleTestEntity EOF )
            // InternalSCTX.g:7532:2: iv_ruleTestEntity= ruleTestEntity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTestEntityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTestEntity=ruleTestEntity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTestEntity; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTestEntity"


    // $ANTLR start "ruleTestEntity"
    // InternalSCTX.g:7538:1: ruleTestEntity returns [EObject current=null] : ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) ) ;
    public final EObject ruleTestEntity() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;

        EObject lv_effect_1_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:7544:2: ( ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) ) )
            // InternalSCTX.g:7545:2: ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) )
            {
            // InternalSCTX.g:7545:2: ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) )
            int alt255=2;
            alt255 = dfa255.predict(input);
            switch (alt255) {
                case 1 :
                    // InternalSCTX.g:7546:3: ( (lv_expression_0_0= ruleAnnotatedExpression ) )
                    {
                    // InternalSCTX.g:7546:3: ( (lv_expression_0_0= ruleAnnotatedExpression ) )
                    // InternalSCTX.g:7547:4: (lv_expression_0_0= ruleAnnotatedExpression )
                    {
                    // InternalSCTX.g:7547:4: (lv_expression_0_0= ruleAnnotatedExpression )
                    // InternalSCTX.g:7548:5: lv_expression_0_0= ruleAnnotatedExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTestEntityAccess().getExpressionAnnotatedExpressionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expression_0_0=ruleAnnotatedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTestEntityRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_0_0,
                      						"de.cau.cs.kieler.kexpressions.kext.KExt.AnnotatedExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7566:3: ( (lv_effect_1_0= ruleEffect ) )
                    {
                    // InternalSCTX.g:7566:3: ( (lv_effect_1_0= ruleEffect ) )
                    // InternalSCTX.g:7567:4: (lv_effect_1_0= ruleEffect )
                    {
                    // InternalSCTX.g:7567:4: (lv_effect_1_0= ruleEffect )
                    // InternalSCTX.g:7568:5: lv_effect_1_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTestEntityAccess().getEffectEffectParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_effect_1_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTestEntityRule());
                      					}
                      					set(
                      						current,
                      						"effect",
                      						lv_effect_1_0,
                      						"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTestEntity"


    // $ANTLR start "entryRuleAnnotatedExpression"
    // InternalSCTX.g:7589:1: entryRuleAnnotatedExpression returns [EObject current=null] : iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF ;
    public final EObject entryRuleAnnotatedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedExpression = null;


        try {
            // InternalSCTX.g:7589:60: (iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF )
            // InternalSCTX.g:7590:2: iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotatedExpression=ruleAnnotatedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotatedExpression"


    // $ANTLR start "ruleAnnotatedExpression"
    // InternalSCTX.g:7596:1: ruleAnnotatedExpression returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) ) ;
    public final EObject ruleAnnotatedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:7602:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) ) )
            // InternalSCTX.g:7603:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) )
            {
            // InternalSCTX.g:7603:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) )
            // InternalSCTX.g:7604:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) )
            {
            // InternalSCTX.g:7604:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop256:
            do {
                int alt256=2;
                int LA256_0 = input.LA(1);

                if ( (LA256_0==RULE_COMMENT_ANNOTATION||LA256_0==103) ) {
                    alt256=1;
                }


                switch (alt256) {
            	case 1 :
            	    // InternalSCTX.g:7605:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:7605:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:7606:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_153);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAnnotatedExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop256;
                }
            } while (true);

            otherlv_1=(Token)match(input,77,FollowSets000.FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAnnotatedExpressionAccess().getExpressionKeyword_1());
              		
            }
            // InternalSCTX.g:7627:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalSCTX.g:7628:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalSCTX.g:7628:4: (lv_expression_2_0= ruleExpression )
            // InternalSCTX.g:7629:5: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAnnotatedExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotatedExpression"


    // $ANTLR start "entrySuperDeclaration"
    // InternalSCTX.g:7650:1: entrySuperDeclaration returns [EObject current=null] : iv_superDeclaration= superDeclaration EOF ;
    public final EObject entrySuperDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_superDeclaration = null;


        try {
            // InternalSCTX.g:7650:53: (iv_superDeclaration= superDeclaration EOF )
            // InternalSCTX.g:7651:2: iv_superDeclaration= superDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKExtDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_superDeclaration=superDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperDeclaration"


    // $ANTLR start "superDeclaration"
    // InternalSCTX.g:7657:1: superDeclaration returns [EObject current=null] : (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_ClassDeclaration_3= ruleClassDeclaration ) ;
    public final EObject superDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclaration_0 = null;

        EObject this_ReferenceDeclaration_1 = null;

        EObject this_ScheduleDeclaration_2 = null;

        EObject this_ClassDeclaration_3 = null;



        	enterRule();

        try {
            // InternalSCTX.g:7663:2: ( (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_ClassDeclaration_3= ruleClassDeclaration ) )
            // InternalSCTX.g:7664:2: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_ClassDeclaration_3= ruleClassDeclaration )
            {
            // InternalSCTX.g:7664:2: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_ClassDeclaration_3= ruleClassDeclaration )
            int alt257=4;
            alt257 = dfa257.predict(input);
            switch (alt257) {
                case 1 :
                    // InternalSCTX.g:7665:3: this_VariableDeclaration_0= ruleVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKExtDeclarationAccess().getVariableDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_VariableDeclaration_0=ruleVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VariableDeclaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7677:3: this_ReferenceDeclaration_1= ruleReferenceDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKExtDeclarationAccess().getReferenceDeclarationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceDeclaration_1=ruleReferenceDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReferenceDeclaration_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:7689:3: this_ScheduleDeclaration_2= ruleScheduleDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKExtDeclarationAccess().getScheduleDeclarationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ScheduleDeclaration_2=ruleScheduleDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ScheduleDeclaration_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:7701:3: this_ClassDeclaration_3= ruleClassDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKExtDeclarationAccess().getClassDeclarationParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ClassDeclaration_3=ruleClassDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ClassDeclaration_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superDeclaration"


    // $ANTLR start "entryRuleDeclarationWOSemicolon"
    // InternalSCTX.g:7716:1: entryRuleDeclarationWOSemicolon returns [EObject current=null] : iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF ;
    public final EObject entryRuleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclarationWOSemicolon = null;


        try {
            // InternalSCTX.g:7716:63: (iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF )
            // InternalSCTX.g:7717:2: iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclarationWOSemicolon=ruleDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclarationWOSemicolon"


    // $ANTLR start "ruleDeclarationWOSemicolon"
    // InternalSCTX.g:7723:1: ruleDeclarationWOSemicolon returns [EObject current=null] : (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_ClassDeclarationWOSemicolon_3= ruleClassDeclarationWOSemicolon ) ;
    public final EObject ruleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationWOSemicolon_0 = null;

        EObject this_ReferenceDeclarationWOSemicolon_1 = null;

        EObject this_ScheduleDeclarationWOSemicolon_2 = null;

        EObject this_ClassDeclarationWOSemicolon_3 = null;



        	enterRule();

        try {
            // InternalSCTX.g:7729:2: ( (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_ClassDeclarationWOSemicolon_3= ruleClassDeclarationWOSemicolon ) )
            // InternalSCTX.g:7730:2: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_ClassDeclarationWOSemicolon_3= ruleClassDeclarationWOSemicolon )
            {
            // InternalSCTX.g:7730:2: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_ClassDeclarationWOSemicolon_3= ruleClassDeclarationWOSemicolon )
            int alt258=4;
            alt258 = dfa258.predict(input);
            switch (alt258) {
                case 1 :
                    // InternalSCTX.g:7731:3: this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getVariableDeclarationWOSemicolonParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_VariableDeclarationWOSemicolon_0=ruleVariableDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VariableDeclarationWOSemicolon_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7743:3: this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getReferenceDeclarationWOSemicolonParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceDeclarationWOSemicolon_1=ruleReferenceDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReferenceDeclarationWOSemicolon_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:7755:3: this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getScheduleDeclarationWOSemicolonParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ScheduleDeclarationWOSemicolon_2=ruleScheduleDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ScheduleDeclarationWOSemicolon_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:7767:3: this_ClassDeclarationWOSemicolon_3= ruleClassDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getClassDeclarationWOSemicolonParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ClassDeclarationWOSemicolon_3=ruleClassDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ClassDeclarationWOSemicolon_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclarationWOSemicolon"


    // $ANTLR start "entryRuleVariableDeclaration"
    // InternalSCTX.g:7782:1: entryRuleVariableDeclaration returns [EObject current=null] : iv_ruleVariableDeclaration= ruleVariableDeclaration EOF ;
    public final EObject entryRuleVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableDeclaration = null;


        try {
            // InternalSCTX.g:7782:60: (iv_ruleVariableDeclaration= ruleVariableDeclaration EOF )
            // InternalSCTX.g:7783:2: iv_ruleVariableDeclaration= ruleVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVariableDeclaration=ruleVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableDeclaration"


    // $ANTLR start "ruleVariableDeclaration"
    // InternalSCTX.g:7789:1: ruleVariableDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_const_2_0=null;
        Token lv_input_3_0=null;
        Token lv_output_4_0=null;
        Token lv_global_5_0=null;
        Token lv_static_6_0=null;
        Token lv_signal_7_0=null;
        Token lv_signal_9_0=null;
        Token lv_hostType_11_0=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        Enumerator lv_type_8_0 = null;

        Enumerator lv_type_10_0 = null;

        EObject lv_valuedObjects_12_0 = null;

        EObject lv_valuedObjects_14_0 = null;

        EObject lv_annotations_16_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:7795:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:7796:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:7796:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:7797:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:7797:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop259:
            do {
                int alt259=2;
                int LA259_0 = input.LA(1);

                if ( (LA259_0==RULE_COMMENT_ANNOTATION||LA259_0==103) ) {
                    alt259=1;
                }


                switch (alt259) {
            	case 1 :
            	    // InternalSCTX.g:7798:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:7798:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:7799:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_121);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop259;
                }
            } while (true);

            // InternalSCTX.g:7816:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt260=2;
            int LA260_0 = input.LA(1);

            if ( ((LA260_0>=152 && LA260_0<=154)) ) {
                alt260=1;
            }
            switch (alt260) {
                case 1 :
                    // InternalSCTX.g:7817:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:7817:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalSCTX.g:7818:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_121);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:7835:3: ( (lv_const_2_0= 'const' ) )?
            int alt261=2;
            int LA261_0 = input.LA(1);

            if ( (LA261_0==61) ) {
                alt261=1;
            }
            switch (alt261) {
                case 1 :
                    // InternalSCTX.g:7836:4: (lv_const_2_0= 'const' )
                    {
                    // InternalSCTX.g:7836:4: (lv_const_2_0= 'const' )
                    // InternalSCTX.g:7837:5: lv_const_2_0= 'const'
                    {
                    lv_const_2_0=(Token)match(input,61,FollowSets000.FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_const_2_0, grammarAccess.getVariableDeclarationAccess().getConstConstKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "const", true, "const");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:7849:3: ( (lv_input_3_0= 'input' ) )?
            int alt262=2;
            int LA262_0 = input.LA(1);

            if ( (LA262_0==62) ) {
                alt262=1;
            }
            switch (alt262) {
                case 1 :
                    // InternalSCTX.g:7850:4: (lv_input_3_0= 'input' )
                    {
                    // InternalSCTX.g:7850:4: (lv_input_3_0= 'input' )
                    // InternalSCTX.g:7851:5: lv_input_3_0= 'input'
                    {
                    lv_input_3_0=(Token)match(input,62,FollowSets000.FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_input_3_0, grammarAccess.getVariableDeclarationAccess().getInputInputKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "input", true, "input");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:7863:3: ( (lv_output_4_0= 'output' ) )?
            int alt263=2;
            int LA263_0 = input.LA(1);

            if ( (LA263_0==63) ) {
                alt263=1;
            }
            switch (alt263) {
                case 1 :
                    // InternalSCTX.g:7864:4: (lv_output_4_0= 'output' )
                    {
                    // InternalSCTX.g:7864:4: (lv_output_4_0= 'output' )
                    // InternalSCTX.g:7865:5: lv_output_4_0= 'output'
                    {
                    lv_output_4_0=(Token)match(input,63,FollowSets000.FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_output_4_0, grammarAccess.getVariableDeclarationAccess().getOutputOutputKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "output", true, "output");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:7877:3: ( (lv_global_5_0= 'global' ) )?
            int alt264=2;
            int LA264_0 = input.LA(1);

            if ( (LA264_0==64) ) {
                alt264=1;
            }
            switch (alt264) {
                case 1 :
                    // InternalSCTX.g:7878:4: (lv_global_5_0= 'global' )
                    {
                    // InternalSCTX.g:7878:4: (lv_global_5_0= 'global' )
                    // InternalSCTX.g:7879:5: lv_global_5_0= 'global'
                    {
                    lv_global_5_0=(Token)match(input,64,FollowSets000.FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_global_5_0, grammarAccess.getVariableDeclarationAccess().getGlobalGlobalKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "global", true, "global");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:7891:3: ( (lv_static_6_0= 'static' ) )?
            int alt265=2;
            int LA265_0 = input.LA(1);

            if ( (LA265_0==65) ) {
                alt265=1;
            }
            switch (alt265) {
                case 1 :
                    // InternalSCTX.g:7892:4: (lv_static_6_0= 'static' )
                    {
                    // InternalSCTX.g:7892:4: (lv_static_6_0= 'static' )
                    // InternalSCTX.g:7893:5: lv_static_6_0= 'static'
                    {
                    lv_static_6_0=(Token)match(input,65,FollowSets000.FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_static_6_0, grammarAccess.getVariableDeclarationAccess().getStaticStaticKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "static", true, "static");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:7905:3: ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) )
            int alt267=3;
            switch ( input.LA(1) ) {
            case 78:
                {
                int LA267_1 = input.LA(2);

                if ( ((LA267_1>=113 && LA267_1<=118)) ) {
                    alt267=1;
                }
                else if ( (LA267_1==RULE_ID||LA267_1==RULE_COMMENT_ANNOTATION||LA267_1==103) ) {
                    alt267=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 267, 1, input);

                    throw nvae;
                }
                }
                break;
            case 113:
            case 114:
            case 115:
            case 116:
            case 117:
            case 118:
                {
                alt267=1;
                }
                break;
            case 66:
                {
                alt267=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 267, 0, input);

                throw nvae;
            }

            switch (alt267) {
                case 1 :
                    // InternalSCTX.g:7906:4: ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) )
                    {
                    // InternalSCTX.g:7906:4: ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) )
                    // InternalSCTX.g:7907:5: ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) )
                    {
                    // InternalSCTX.g:7907:5: ( (lv_signal_7_0= 'signal' ) )?
                    int alt266=2;
                    int LA266_0 = input.LA(1);

                    if ( (LA266_0==78) ) {
                        alt266=1;
                    }
                    switch (alt266) {
                        case 1 :
                            // InternalSCTX.g:7908:6: (lv_signal_7_0= 'signal' )
                            {
                            // InternalSCTX.g:7908:6: (lv_signal_7_0= 'signal' )
                            // InternalSCTX.g:7909:7: lv_signal_7_0= 'signal'
                            {
                            lv_signal_7_0=(Token)match(input,78,FollowSets000.FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_signal_7_0, grammarAccess.getVariableDeclarationAccess().getSignalSignalKeyword_7_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getVariableDeclarationRule());
                              							}
                              							setWithLastConsumed(current, "signal", true, "signal");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:7921:5: ( (lv_type_8_0= ruleValueType ) )
                    // InternalSCTX.g:7922:6: (lv_type_8_0= ruleValueType )
                    {
                    // InternalSCTX.g:7922:6: (lv_type_8_0= ruleValueType )
                    // InternalSCTX.g:7923:7: lv_type_8_0= ruleValueType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVariableDeclarationAccess().getTypeValueTypeEnumRuleCall_7_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_107);
                    lv_type_8_0=ruleValueType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_8_0,
                      								"de.cau.cs.kieler.sccharts.text.SCTX.ValueType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7942:4: ( (lv_signal_9_0= 'signal' ) )
                    {
                    // InternalSCTX.g:7942:4: ( (lv_signal_9_0= 'signal' ) )
                    // InternalSCTX.g:7943:5: (lv_signal_9_0= 'signal' )
                    {
                    // InternalSCTX.g:7943:5: (lv_signal_9_0= 'signal' )
                    // InternalSCTX.g:7944:6: lv_signal_9_0= 'signal'
                    {
                    lv_signal_9_0=(Token)match(input,78,FollowSets000.FOLLOW_107); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_signal_9_0, grammarAccess.getVariableDeclarationAccess().getSignalSignalKeyword_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      						}
                      						setWithLastConsumed(current, "signal", true, "signal");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:7957:4: ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) )
                    {
                    // InternalSCTX.g:7957:4: ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) )
                    // InternalSCTX.g:7958:5: ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) )
                    {
                    // InternalSCTX.g:7958:5: ( (lv_type_10_0= ruleHostType ) )
                    // InternalSCTX.g:7959:6: (lv_type_10_0= ruleHostType )
                    {
                    // InternalSCTX.g:7959:6: (lv_type_10_0= ruleHostType )
                    // InternalSCTX.g:7960:7: lv_type_10_0= ruleHostType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVariableDeclarationAccess().getTypeHostTypeEnumRuleCall_7_2_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_48);
                    lv_type_10_0=ruleHostType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_10_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.HostType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:7977:5: ( (lv_hostType_11_0= RULE_STRING ) )
                    // InternalSCTX.g:7978:6: (lv_hostType_11_0= RULE_STRING )
                    {
                    // InternalSCTX.g:7978:6: (lv_hostType_11_0= RULE_STRING )
                    // InternalSCTX.g:7979:7: lv_hostType_11_0= RULE_STRING
                    {
                    lv_hostType_11_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_107); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_hostType_11_0, grammarAccess.getVariableDeclarationAccess().getHostTypeSTRINGTerminalRuleCall_7_2_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"hostType",
                      								lv_hostType_11_0,
                      								"de.cau.cs.kieler.annotations.Annotations.STRING");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:7997:3: ( (lv_valuedObjects_12_0= ruleValuedObject ) )
            // InternalSCTX.g:7998:4: (lv_valuedObjects_12_0= ruleValuedObject )
            {
            // InternalSCTX.g:7998:4: (lv_valuedObjects_12_0= ruleValuedObject )
            // InternalSCTX.g:7999:5: lv_valuedObjects_12_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_8_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_155);
            lv_valuedObjects_12_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_12_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:8016:3: (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )*
            loop268:
            do {
                int alt268=2;
                int LA268_0 = input.LA(1);

                if ( (LA268_0==20) ) {
                    alt268=1;
                }


                switch (alt268) {
            	case 1 :
            	    // InternalSCTX.g:8017:4: otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) )
            	    {
            	    otherlv_13=(Token)match(input,20,FollowSets000.FOLLOW_107); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_13, grammarAccess.getVariableDeclarationAccess().getCommaKeyword_9_0());
            	      			
            	    }
            	    // InternalSCTX.g:8021:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) )
            	    // InternalSCTX.g:8022:5: (lv_valuedObjects_14_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:8022:5: (lv_valuedObjects_14_0= ruleValuedObject )
            	    // InternalSCTX.g:8023:6: lv_valuedObjects_14_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getVariableDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_9_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_155);
            	    lv_valuedObjects_14_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_14_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop268;
                }
            } while (true);

            otherlv_15=(Token)match(input,42,FollowSets000.FOLLOW_146); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_10());
              		
            }
            // InternalSCTX.g:8045:3: ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )?
            int alt269=2;
            int LA269_0 = input.LA(1);

            if ( (LA269_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt269=1;
            }
            switch (alt269) {
                case 1 :
                    // InternalSCTX.g:8046:4: (lv_annotations_16_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:8046:4: (lv_annotations_16_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:8047:5: lv_annotations_16_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_11_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_16_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_16_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableDeclaration"


    // $ANTLR start "entryRuleVariableDeclarationWOSemicolon"
    // InternalSCTX.g:8068:1: entryRuleVariableDeclarationWOSemicolon returns [EObject current=null] : iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF ;
    public final EObject entryRuleVariableDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableDeclarationWOSemicolon = null;


        try {
            // InternalSCTX.g:8068:71: (iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF )
            // InternalSCTX.g:8069:2: iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVariableDeclarationWOSemicolon=ruleVariableDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableDeclarationWOSemicolon"


    // $ANTLR start "ruleVariableDeclarationWOSemicolon"
    // InternalSCTX.g:8075:1: ruleVariableDeclarationWOSemicolon returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleVariableDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token lv_const_2_0=null;
        Token lv_input_3_0=null;
        Token lv_output_4_0=null;
        Token lv_global_5_0=null;
        Token lv_static_6_0=null;
        Token lv_signal_7_0=null;
        Token lv_signal_9_0=null;
        Token lv_hostType_11_0=null;
        Token otherlv_13=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        Enumerator lv_type_8_0 = null;

        Enumerator lv_type_10_0 = null;

        EObject lv_valuedObjects_12_0 = null;

        EObject lv_valuedObjects_14_0 = null;

        EObject lv_annotations_15_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:8081:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:8082:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:8082:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:8083:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:8083:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop270:
            do {
                int alt270=2;
                int LA270_0 = input.LA(1);

                if ( (LA270_0==RULE_COMMENT_ANNOTATION||LA270_0==103) ) {
                    alt270=1;
                }


                switch (alt270) {
            	case 1 :
            	    // InternalSCTX.g:8084:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:8084:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:8085:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_121);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop270;
                }
            } while (true);

            // InternalSCTX.g:8102:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt271=2;
            int LA271_0 = input.LA(1);

            if ( ((LA271_0>=152 && LA271_0<=154)) ) {
                alt271=1;
            }
            switch (alt271) {
                case 1 :
                    // InternalSCTX.g:8103:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:8103:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalSCTX.g:8104:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_121);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8121:3: ( (lv_const_2_0= 'const' ) )?
            int alt272=2;
            int LA272_0 = input.LA(1);

            if ( (LA272_0==61) ) {
                alt272=1;
            }
            switch (alt272) {
                case 1 :
                    // InternalSCTX.g:8122:4: (lv_const_2_0= 'const' )
                    {
                    // InternalSCTX.g:8122:4: (lv_const_2_0= 'const' )
                    // InternalSCTX.g:8123:5: lv_const_2_0= 'const'
                    {
                    lv_const_2_0=(Token)match(input,61,FollowSets000.FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_const_2_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getConstConstKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "const", true, "const");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8135:3: ( (lv_input_3_0= 'input' ) )?
            int alt273=2;
            int LA273_0 = input.LA(1);

            if ( (LA273_0==62) ) {
                alt273=1;
            }
            switch (alt273) {
                case 1 :
                    // InternalSCTX.g:8136:4: (lv_input_3_0= 'input' )
                    {
                    // InternalSCTX.g:8136:4: (lv_input_3_0= 'input' )
                    // InternalSCTX.g:8137:5: lv_input_3_0= 'input'
                    {
                    lv_input_3_0=(Token)match(input,62,FollowSets000.FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_input_3_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getInputInputKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "input", true, "input");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8149:3: ( (lv_output_4_0= 'output' ) )?
            int alt274=2;
            int LA274_0 = input.LA(1);

            if ( (LA274_0==63) ) {
                alt274=1;
            }
            switch (alt274) {
                case 1 :
                    // InternalSCTX.g:8150:4: (lv_output_4_0= 'output' )
                    {
                    // InternalSCTX.g:8150:4: (lv_output_4_0= 'output' )
                    // InternalSCTX.g:8151:5: lv_output_4_0= 'output'
                    {
                    lv_output_4_0=(Token)match(input,63,FollowSets000.FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_output_4_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getOutputOutputKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "output", true, "output");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8163:3: ( (lv_global_5_0= 'global' ) )?
            int alt275=2;
            int LA275_0 = input.LA(1);

            if ( (LA275_0==64) ) {
                alt275=1;
            }
            switch (alt275) {
                case 1 :
                    // InternalSCTX.g:8164:4: (lv_global_5_0= 'global' )
                    {
                    // InternalSCTX.g:8164:4: (lv_global_5_0= 'global' )
                    // InternalSCTX.g:8165:5: lv_global_5_0= 'global'
                    {
                    lv_global_5_0=(Token)match(input,64,FollowSets000.FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_global_5_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getGlobalGlobalKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "global", true, "global");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8177:3: ( (lv_static_6_0= 'static' ) )?
            int alt276=2;
            int LA276_0 = input.LA(1);

            if ( (LA276_0==65) ) {
                alt276=1;
            }
            switch (alt276) {
                case 1 :
                    // InternalSCTX.g:8178:4: (lv_static_6_0= 'static' )
                    {
                    // InternalSCTX.g:8178:4: (lv_static_6_0= 'static' )
                    // InternalSCTX.g:8179:5: lv_static_6_0= 'static'
                    {
                    lv_static_6_0=(Token)match(input,65,FollowSets000.FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_static_6_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getStaticStaticKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "static", true, "static");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8191:3: ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) )
            int alt278=3;
            switch ( input.LA(1) ) {
            case 78:
                {
                int LA278_1 = input.LA(2);

                if ( (LA278_1==RULE_ID||LA278_1==RULE_COMMENT_ANNOTATION||LA278_1==103) ) {
                    alt278=2;
                }
                else if ( ((LA278_1>=113 && LA278_1<=118)) ) {
                    alt278=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 278, 1, input);

                    throw nvae;
                }
                }
                break;
            case 113:
            case 114:
            case 115:
            case 116:
            case 117:
            case 118:
                {
                alt278=1;
                }
                break;
            case 66:
                {
                alt278=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 278, 0, input);

                throw nvae;
            }

            switch (alt278) {
                case 1 :
                    // InternalSCTX.g:8192:4: ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) )
                    {
                    // InternalSCTX.g:8192:4: ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) )
                    // InternalSCTX.g:8193:5: ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) )
                    {
                    // InternalSCTX.g:8193:5: ( (lv_signal_7_0= 'signal' ) )?
                    int alt277=2;
                    int LA277_0 = input.LA(1);

                    if ( (LA277_0==78) ) {
                        alt277=1;
                    }
                    switch (alt277) {
                        case 1 :
                            // InternalSCTX.g:8194:6: (lv_signal_7_0= 'signal' )
                            {
                            // InternalSCTX.g:8194:6: (lv_signal_7_0= 'signal' )
                            // InternalSCTX.g:8195:7: lv_signal_7_0= 'signal'
                            {
                            lv_signal_7_0=(Token)match(input,78,FollowSets000.FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_signal_7_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalSignalKeyword_7_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                              							}
                              							setWithLastConsumed(current, "signal", true, "signal");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:8207:5: ( (lv_type_8_0= ruleValueType ) )
                    // InternalSCTX.g:8208:6: (lv_type_8_0= ruleValueType )
                    {
                    // InternalSCTX.g:8208:6: (lv_type_8_0= ruleValueType )
                    // InternalSCTX.g:8209:7: lv_type_8_0= ruleValueType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getTypeValueTypeEnumRuleCall_7_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_107);
                    lv_type_8_0=ruleValueType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_8_0,
                      								"de.cau.cs.kieler.sccharts.text.SCTX.ValueType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8228:4: ( (lv_signal_9_0= 'signal' ) )
                    {
                    // InternalSCTX.g:8228:4: ( (lv_signal_9_0= 'signal' ) )
                    // InternalSCTX.g:8229:5: (lv_signal_9_0= 'signal' )
                    {
                    // InternalSCTX.g:8229:5: (lv_signal_9_0= 'signal' )
                    // InternalSCTX.g:8230:6: lv_signal_9_0= 'signal'
                    {
                    lv_signal_9_0=(Token)match(input,78,FollowSets000.FOLLOW_107); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_signal_9_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalSignalKeyword_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      						}
                      						setWithLastConsumed(current, "signal", true, "signal");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:8243:4: ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) )
                    {
                    // InternalSCTX.g:8243:4: ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) )
                    // InternalSCTX.g:8244:5: ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) )
                    {
                    // InternalSCTX.g:8244:5: ( (lv_type_10_0= ruleHostType ) )
                    // InternalSCTX.g:8245:6: (lv_type_10_0= ruleHostType )
                    {
                    // InternalSCTX.g:8245:6: (lv_type_10_0= ruleHostType )
                    // InternalSCTX.g:8246:7: lv_type_10_0= ruleHostType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getTypeHostTypeEnumRuleCall_7_2_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_48);
                    lv_type_10_0=ruleHostType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_10_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.HostType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:8263:5: ( (lv_hostType_11_0= RULE_STRING ) )
                    // InternalSCTX.g:8264:6: (lv_hostType_11_0= RULE_STRING )
                    {
                    // InternalSCTX.g:8264:6: (lv_hostType_11_0= RULE_STRING )
                    // InternalSCTX.g:8265:7: lv_hostType_11_0= RULE_STRING
                    {
                    lv_hostType_11_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_107); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_hostType_11_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getHostTypeSTRINGTerminalRuleCall_7_2_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"hostType",
                      								lv_hostType_11_0,
                      								"de.cau.cs.kieler.annotations.Annotations.STRING");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:8283:3: ( (lv_valuedObjects_12_0= ruleValuedObject ) )
            // InternalSCTX.g:8284:4: (lv_valuedObjects_12_0= ruleValuedObject )
            {
            // InternalSCTX.g:8284:4: (lv_valuedObjects_12_0= ruleValuedObject )
            // InternalSCTX.g:8285:5: lv_valuedObjects_12_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_8_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_106);
            lv_valuedObjects_12_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_12_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:8302:3: (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )*
            loop279:
            do {
                int alt279=2;
                alt279 = dfa279.predict(input);
                switch (alt279) {
            	case 1 :
            	    // InternalSCTX.g:8303:4: otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) )
            	    {
            	    otherlv_13=(Token)match(input,20,FollowSets000.FOLLOW_107); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_13, grammarAccess.getVariableDeclarationWOSemicolonAccess().getCommaKeyword_9_0());
            	      			
            	    }
            	    // InternalSCTX.g:8307:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) )
            	    // InternalSCTX.g:8308:5: (lv_valuedObjects_14_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:8308:5: (lv_valuedObjects_14_0= ruleValuedObject )
            	    // InternalSCTX.g:8309:6: lv_valuedObjects_14_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_9_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_106);
            	    lv_valuedObjects_14_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_14_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop279;
                }
            } while (true);

            // InternalSCTX.g:8327:3: ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
            int alt280=2;
            int LA280_0 = input.LA(1);

            if ( (LA280_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt280=1;
            }
            switch (alt280) {
                case 1 :
                    // InternalSCTX.g:8328:4: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:8328:4: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:8329:5: lv_annotations_15_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_10_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_15_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_15_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableDeclarationWOSemicolon"


    // $ANTLR start "entryRuleClassDeclaration"
    // InternalSCTX.g:8350:1: entryRuleClassDeclaration returns [EObject current=null] : iv_ruleClassDeclaration= ruleClassDeclaration EOF ;
    public final EObject entryRuleClassDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassDeclaration = null;


        try {
            // InternalSCTX.g:8350:57: (iv_ruleClassDeclaration= ruleClassDeclaration EOF )
            // InternalSCTX.g:8351:2: iv_ruleClassDeclaration= ruleClassDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleClassDeclaration=ruleClassDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassDeclaration"


    // $ANTLR start "ruleClassDeclaration"
    // InternalSCTX.g:8357:1: ruleClassDeclaration returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' ) | ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= RULE_ID ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}' ) ) ( ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )? otherlv_22= ';' ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleClassDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_const_3_0=null;
        Token lv_input_4_0=null;
        Token lv_output_5_0=null;
        Token lv_global_6_0=null;
        Token lv_static_7_0=null;
        Token lv_host_8_0=null;
        Token lv_name_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token lv_name_15_0=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_access_2_0 = null;

        Enumerator lv_type_9_0 = null;

        EObject lv_declarations_12_0 = null;

        Enumerator lv_type_14_0 = null;

        EObject lv_declarations_17_0 = null;

        EObject lv_valuedObjects_19_0 = null;

        EObject lv_valuedObjects_21_0 = null;

        EObject lv_annotations_23_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:8363:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' ) | ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= RULE_ID ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}' ) ) ( ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )? otherlv_22= ';' ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:8364:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' ) | ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= RULE_ID ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}' ) ) ( ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )? otherlv_22= ';' ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:8364:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' ) | ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= RULE_ID ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}' ) ) ( ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )? otherlv_22= ';' ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:8365:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' ) | ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= RULE_ID ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}' ) ) ( ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )? otherlv_22= ';' ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:8365:3: ()
            // InternalSCTX.g:8366:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getClassDeclarationAccess().getClassDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:8375:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop281:
            do {
                int alt281=2;
                int LA281_0 = input.LA(1);

                if ( (LA281_0==RULE_COMMENT_ANNOTATION||LA281_0==103) ) {
                    alt281=1;
                }


                switch (alt281) {
            	case 1 :
            	    // InternalSCTX.g:8376:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:8376:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:8377:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getClassDeclarationAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_100);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop281;
                }
            } while (true);

            // InternalSCTX.g:8394:3: ( (lv_access_2_0= ruleAccessModifier ) )?
            int alt282=2;
            int LA282_0 = input.LA(1);

            if ( ((LA282_0>=152 && LA282_0<=154)) ) {
                alt282=1;
            }
            switch (alt282) {
                case 1 :
                    // InternalSCTX.g:8395:4: (lv_access_2_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:8395:4: (lv_access_2_0= ruleAccessModifier )
                    // InternalSCTX.g:8396:5: lv_access_2_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassDeclarationAccess().getAccessAccessModifierEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_100);
                    lv_access_2_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8413:3: ( (lv_const_3_0= 'const' ) )?
            int alt283=2;
            int LA283_0 = input.LA(1);

            if ( (LA283_0==61) ) {
                alt283=1;
            }
            switch (alt283) {
                case 1 :
                    // InternalSCTX.g:8414:4: (lv_const_3_0= 'const' )
                    {
                    // InternalSCTX.g:8414:4: (lv_const_3_0= 'const' )
                    // InternalSCTX.g:8415:5: lv_const_3_0= 'const'
                    {
                    lv_const_3_0=(Token)match(input,61,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_const_3_0, grammarAccess.getClassDeclarationAccess().getConstConstKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "const", true, "const");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8427:3: ( (lv_input_4_0= 'input' ) )?
            int alt284=2;
            int LA284_0 = input.LA(1);

            if ( (LA284_0==62) ) {
                alt284=1;
            }
            switch (alt284) {
                case 1 :
                    // InternalSCTX.g:8428:4: (lv_input_4_0= 'input' )
                    {
                    // InternalSCTX.g:8428:4: (lv_input_4_0= 'input' )
                    // InternalSCTX.g:8429:5: lv_input_4_0= 'input'
                    {
                    lv_input_4_0=(Token)match(input,62,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_input_4_0, grammarAccess.getClassDeclarationAccess().getInputInputKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "input", true, "input");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8441:3: ( (lv_output_5_0= 'output' ) )?
            int alt285=2;
            int LA285_0 = input.LA(1);

            if ( (LA285_0==63) ) {
                alt285=1;
            }
            switch (alt285) {
                case 1 :
                    // InternalSCTX.g:8442:4: (lv_output_5_0= 'output' )
                    {
                    // InternalSCTX.g:8442:4: (lv_output_5_0= 'output' )
                    // InternalSCTX.g:8443:5: lv_output_5_0= 'output'
                    {
                    lv_output_5_0=(Token)match(input,63,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_output_5_0, grammarAccess.getClassDeclarationAccess().getOutputOutputKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "output", true, "output");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8455:3: ( (lv_global_6_0= 'global' ) )?
            int alt286=2;
            int LA286_0 = input.LA(1);

            if ( (LA286_0==64) ) {
                alt286=1;
            }
            switch (alt286) {
                case 1 :
                    // InternalSCTX.g:8456:4: (lv_global_6_0= 'global' )
                    {
                    // InternalSCTX.g:8456:4: (lv_global_6_0= 'global' )
                    // InternalSCTX.g:8457:5: lv_global_6_0= 'global'
                    {
                    lv_global_6_0=(Token)match(input,64,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_global_6_0, grammarAccess.getClassDeclarationAccess().getGlobalGlobalKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "global", true, "global");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8469:3: ( (lv_static_7_0= 'static' ) )?
            int alt287=2;
            int LA287_0 = input.LA(1);

            if ( (LA287_0==65) ) {
                alt287=1;
            }
            switch (alt287) {
                case 1 :
                    // InternalSCTX.g:8470:4: (lv_static_7_0= 'static' )
                    {
                    // InternalSCTX.g:8470:4: (lv_static_7_0= 'static' )
                    // InternalSCTX.g:8471:5: lv_static_7_0= 'static'
                    {
                    lv_static_7_0=(Token)match(input,65,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_static_7_0, grammarAccess.getClassDeclarationAccess().getStaticStaticKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "static", true, "static");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8483:3: ( (lv_host_8_0= 'host' ) )?
            int alt288=2;
            int LA288_0 = input.LA(1);

            if ( (LA288_0==66) ) {
                alt288=1;
            }
            switch (alt288) {
                case 1 :
                    // InternalSCTX.g:8484:4: (lv_host_8_0= 'host' )
                    {
                    // InternalSCTX.g:8484:4: (lv_host_8_0= 'host' )
                    // InternalSCTX.g:8485:5: lv_host_8_0= 'host'
                    {
                    lv_host_8_0=(Token)match(input,66,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_host_8_0, grammarAccess.getClassDeclarationAccess().getHostHostKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "host", true, "host");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8497:3: ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' ) | ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= RULE_ID ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}' ) )
            int alt293=2;
            int LA293_0 = input.LA(1);

            if ( (LA293_0==148) ) {
                alt293=1;
            }
            else if ( (LA293_0==147) ) {
                alt293=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 293, 0, input);

                throw nvae;
            }
            switch (alt293) {
                case 1 :
                    // InternalSCTX.g:8498:4: ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' )
                    {
                    // InternalSCTX.g:8498:4: ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' )
                    // InternalSCTX.g:8499:5: ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}'
                    {
                    // InternalSCTX.g:8499:5: ( (lv_type_9_0= ruleClassType ) )
                    // InternalSCTX.g:8500:6: (lv_type_9_0= ruleClassType )
                    {
                    // InternalSCTX.g:8500:6: (lv_type_9_0= ruleClassType )
                    // InternalSCTX.g:8501:7: lv_type_9_0= ruleClassType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getClassDeclarationAccess().getTypeClassTypeEnumRuleCall_9_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_26);
                    lv_type_9_0=ruleClassType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_9_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ClassType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:8518:5: ( (lv_name_10_0= RULE_ID ) )?
                    int alt289=2;
                    int LA289_0 = input.LA(1);

                    if ( (LA289_0==RULE_ID) ) {
                        alt289=1;
                    }
                    switch (alt289) {
                        case 1 :
                            // InternalSCTX.g:8519:6: (lv_name_10_0= RULE_ID )
                            {
                            // InternalSCTX.g:8519:6: (lv_name_10_0= RULE_ID )
                            // InternalSCTX.g:8520:7: lv_name_10_0= RULE_ID
                            {
                            lv_name_10_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_101); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_name_10_0, grammarAccess.getClassDeclarationAccess().getNameIDTerminalRuleCall_9_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassDeclarationRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"name",
                              								lv_name_10_0,
                              								"de.cau.cs.kieler.annotations.Annotations.ID");
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_11=(Token)match(input,21,FollowSets000.FOLLOW_103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_11, grammarAccess.getClassDeclarationAccess().getLeftCurlyBracketKeyword_9_0_2());
                      				
                    }
                    // InternalSCTX.g:8540:5: ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )*
                    loop290:
                    do {
                        int alt290=2;
                        int LA290_0 = input.LA(1);

                        if ( (LA290_0==RULE_ID||LA290_0==RULE_COMMENT_ANNOTATION||LA290_0==29||(LA290_0>=61 && LA290_0<=66)||(LA290_0>=78 && LA290_0<=80)||LA290_0==103||(LA290_0>=113 && LA290_0<=118)||(LA290_0>=147 && LA290_0<=148)||(LA290_0>=152 && LA290_0<=155)) ) {
                            alt290=1;
                        }


                        switch (alt290) {
                    	case 1 :
                    	    // InternalSCTX.g:8541:6: (lv_declarations_12_0= ruleDeclarationOrMethod )
                    	    {
                    	    // InternalSCTX.g:8541:6: (lv_declarations_12_0= ruleDeclarationOrMethod )
                    	    // InternalSCTX.g:8542:7: lv_declarations_12_0= ruleDeclarationOrMethod
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassDeclarationAccess().getDeclarationsDeclarationOrMethodParserRuleCall_9_0_3_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_103);
                    	    lv_declarations_12_0=ruleDeclarationOrMethod();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_12_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationOrMethod");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop290;
                        }
                    } while (true);

                    otherlv_13=(Token)match(input,22,FollowSets000.FOLLOW_156); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_13, grammarAccess.getClassDeclarationAccess().getRightCurlyBracketKeyword_9_0_4());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8565:4: ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= RULE_ID ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}' )
                    {
                    // InternalSCTX.g:8565:4: ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= RULE_ID ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}' )
                    // InternalSCTX.g:8566:5: ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= RULE_ID ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}'
                    {
                    // InternalSCTX.g:8566:5: ( (lv_type_14_0= ruleStructType ) )
                    // InternalSCTX.g:8567:6: (lv_type_14_0= ruleStructType )
                    {
                    // InternalSCTX.g:8567:6: (lv_type_14_0= ruleStructType )
                    // InternalSCTX.g:8568:7: lv_type_14_0= ruleStructType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getClassDeclarationAccess().getTypeStructTypeEnumRuleCall_9_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_26);
                    lv_type_14_0=ruleStructType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_14_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.StructType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:8585:5: ( (lv_name_15_0= RULE_ID ) )?
                    int alt291=2;
                    int LA291_0 = input.LA(1);

                    if ( (LA291_0==RULE_ID) ) {
                        alt291=1;
                    }
                    switch (alt291) {
                        case 1 :
                            // InternalSCTX.g:8586:6: (lv_name_15_0= RULE_ID )
                            {
                            // InternalSCTX.g:8586:6: (lv_name_15_0= RULE_ID )
                            // InternalSCTX.g:8587:7: lv_name_15_0= RULE_ID
                            {
                            lv_name_15_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_101); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_name_15_0, grammarAccess.getClassDeclarationAccess().getNameIDTerminalRuleCall_9_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassDeclarationRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"name",
                              								lv_name_15_0,
                              								"de.cau.cs.kieler.annotations.Annotations.ID");
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_16=(Token)match(input,21,FollowSets000.FOLLOW_105); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_16, grammarAccess.getClassDeclarationAccess().getLeftCurlyBracketKeyword_9_1_2());
                      				
                    }
                    // InternalSCTX.g:8607:5: ( (lv_declarations_17_0= ruleDeclaration ) )*
                    loop292:
                    do {
                        int alt292=2;
                        int LA292_0 = input.LA(1);

                        if ( (LA292_0==RULE_COMMENT_ANNOTATION||LA292_0==29||(LA292_0>=61 && LA292_0<=66)||(LA292_0>=78 && LA292_0<=80)||LA292_0==103||(LA292_0>=113 && LA292_0<=118)||(LA292_0>=147 && LA292_0<=148)||(LA292_0>=152 && LA292_0<=154)) ) {
                            alt292=1;
                        }


                        switch (alt292) {
                    	case 1 :
                    	    // InternalSCTX.g:8608:6: (lv_declarations_17_0= ruleDeclaration )
                    	    {
                    	    // InternalSCTX.g:8608:6: (lv_declarations_17_0= ruleDeclaration )
                    	    // InternalSCTX.g:8609:7: lv_declarations_17_0= ruleDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassDeclarationAccess().getDeclarationsDeclarationParserRuleCall_9_1_3_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_105);
                    	    lv_declarations_17_0=ruleDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_17_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop292;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,22,FollowSets000.FOLLOW_156); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_18, grammarAccess.getClassDeclarationAccess().getRightCurlyBracketKeyword_9_1_4());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8632:3: ( ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )?
            int alt295=2;
            int LA295_0 = input.LA(1);

            if ( (LA295_0==RULE_ID||LA295_0==RULE_COMMENT_ANNOTATION||LA295_0==103) ) {
                alt295=1;
            }
            switch (alt295) {
                case 1 :
                    // InternalSCTX.g:8633:4: ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )*
                    {
                    // InternalSCTX.g:8633:4: ( (lv_valuedObjects_19_0= ruleValuedObject ) )
                    // InternalSCTX.g:8634:5: (lv_valuedObjects_19_0= ruleValuedObject )
                    {
                    // InternalSCTX.g:8634:5: (lv_valuedObjects_19_0= ruleValuedObject )
                    // InternalSCTX.g:8635:6: lv_valuedObjects_19_0= ruleValuedObject
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_10_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_155);
                    lv_valuedObjects_19_0=ruleValuedObject();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"valuedObjects",
                      							lv_valuedObjects_19_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:8652:4: (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )*
                    loop294:
                    do {
                        int alt294=2;
                        int LA294_0 = input.LA(1);

                        if ( (LA294_0==20) ) {
                            alt294=1;
                        }


                        switch (alt294) {
                    	case 1 :
                    	    // InternalSCTX.g:8653:5: otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) )
                    	    {
                    	    otherlv_20=(Token)match(input,20,FollowSets000.FOLLOW_107); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_20, grammarAccess.getClassDeclarationAccess().getCommaKeyword_10_1_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:8657:5: ( (lv_valuedObjects_21_0= ruleValuedObject ) )
                    	    // InternalSCTX.g:8658:6: (lv_valuedObjects_21_0= ruleValuedObject )
                    	    {
                    	    // InternalSCTX.g:8658:6: (lv_valuedObjects_21_0= ruleValuedObject )
                    	    // InternalSCTX.g:8659:7: lv_valuedObjects_21_0= ruleValuedObject
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_10_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_155);
                    	    lv_valuedObjects_21_0=ruleValuedObject();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"valuedObjects",
                    	      								lv_valuedObjects_21_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop294;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_22=(Token)match(input,42,FollowSets000.FOLLOW_146); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_22, grammarAccess.getClassDeclarationAccess().getSemicolonKeyword_11());
              		
            }
            // InternalSCTX.g:8682:3: ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )?
            int alt296=2;
            int LA296_0 = input.LA(1);

            if ( (LA296_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt296=1;
            }
            switch (alt296) {
                case 1 :
                    // InternalSCTX.g:8683:4: (lv_annotations_23_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:8683:4: (lv_annotations_23_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:8684:5: lv_annotations_23_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_12_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_23_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_23_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassDeclaration"


    // $ANTLR start "entryRuleDeclarationOrMethod"
    // InternalSCTX.g:8705:1: entryRuleDeclarationOrMethod returns [EObject current=null] : iv_ruleDeclarationOrMethod= ruleDeclarationOrMethod EOF ;
    public final EObject entryRuleDeclarationOrMethod() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclarationOrMethod = null;


        try {
            // InternalSCTX.g:8705:60: (iv_ruleDeclarationOrMethod= ruleDeclarationOrMethod EOF )
            // InternalSCTX.g:8706:2: iv_ruleDeclarationOrMethod= ruleDeclarationOrMethod EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationOrMethodRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclarationOrMethod=ruleDeclarationOrMethod();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclarationOrMethod; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclarationOrMethod"


    // $ANTLR start "ruleDeclarationOrMethod"
    // InternalSCTX.g:8712:1: ruleDeclarationOrMethod returns [EObject current=null] : (this_Declaration_0= ruleDeclaration | this_MethodDeclaration_1= ruleMethodDeclaration ) ;
    public final EObject ruleDeclarationOrMethod() throws RecognitionException {
        EObject current = null;

        EObject this_Declaration_0 = null;

        EObject this_MethodDeclaration_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:8718:2: ( (this_Declaration_0= ruleDeclaration | this_MethodDeclaration_1= ruleMethodDeclaration ) )
            // InternalSCTX.g:8719:2: (this_Declaration_0= ruleDeclaration | this_MethodDeclaration_1= ruleMethodDeclaration )
            {
            // InternalSCTX.g:8719:2: (this_Declaration_0= ruleDeclaration | this_MethodDeclaration_1= ruleMethodDeclaration )
            int alt297=2;
            alt297 = dfa297.predict(input);
            switch (alt297) {
                case 1 :
                    // InternalSCTX.g:8720:3: this_Declaration_0= ruleDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationOrMethodAccess().getDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Declaration_0=ruleDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Declaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8732:3: this_MethodDeclaration_1= ruleMethodDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationOrMethodAccess().getMethodDeclarationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MethodDeclaration_1=ruleMethodDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MethodDeclaration_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclarationOrMethod"


    // $ANTLR start "entryRuleDeclarationOrMethodWOSemicolon"
    // InternalSCTX.g:8747:1: entryRuleDeclarationOrMethodWOSemicolon returns [EObject current=null] : iv_ruleDeclarationOrMethodWOSemicolon= ruleDeclarationOrMethodWOSemicolon EOF ;
    public final EObject entryRuleDeclarationOrMethodWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclarationOrMethodWOSemicolon = null;


        try {
            // InternalSCTX.g:8747:71: (iv_ruleDeclarationOrMethodWOSemicolon= ruleDeclarationOrMethodWOSemicolon EOF )
            // InternalSCTX.g:8748:2: iv_ruleDeclarationOrMethodWOSemicolon= ruleDeclarationOrMethodWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationOrMethodWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclarationOrMethodWOSemicolon=ruleDeclarationOrMethodWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclarationOrMethodWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclarationOrMethodWOSemicolon"


    // $ANTLR start "ruleDeclarationOrMethodWOSemicolon"
    // InternalSCTX.g:8754:1: ruleDeclarationOrMethodWOSemicolon returns [EObject current=null] : (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_MethodDeclarationWOSemicolon_1= ruleMethodDeclarationWOSemicolon ) ;
    public final EObject ruleDeclarationOrMethodWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject this_DeclarationWOSemicolon_0 = null;

        EObject this_MethodDeclarationWOSemicolon_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:8760:2: ( (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_MethodDeclarationWOSemicolon_1= ruleMethodDeclarationWOSemicolon ) )
            // InternalSCTX.g:8761:2: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_MethodDeclarationWOSemicolon_1= ruleMethodDeclarationWOSemicolon )
            {
            // InternalSCTX.g:8761:2: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_MethodDeclarationWOSemicolon_1= ruleMethodDeclarationWOSemicolon )
            int alt298=2;
            alt298 = dfa298.predict(input);
            switch (alt298) {
                case 1 :
                    // InternalSCTX.g:8762:3: this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationOrMethodWOSemicolonAccess().getDeclarationWOSemicolonParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DeclarationWOSemicolon_0=ruleDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DeclarationWOSemicolon_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8774:3: this_MethodDeclarationWOSemicolon_1= ruleMethodDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationOrMethodWOSemicolonAccess().getMethodDeclarationWOSemicolonParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MethodDeclarationWOSemicolon_1=ruleMethodDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MethodDeclarationWOSemicolon_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclarationOrMethodWOSemicolon"


    // $ANTLR start "entryRuleNamespaceID"
    // InternalSCTX.g:8789:1: entryRuleNamespaceID returns [String current=null] : iv_ruleNamespaceID= ruleNamespaceID EOF ;
    public final String entryRuleNamespaceID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNamespaceID = null;


        try {
            // InternalSCTX.g:8789:51: (iv_ruleNamespaceID= ruleNamespaceID EOF )
            // InternalSCTX.g:8790:2: iv_ruleNamespaceID= ruleNamespaceID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNamespaceID=ruleNamespaceID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespaceID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamespaceID"


    // $ANTLR start "ruleNamespaceID"
    // InternalSCTX.g:8796:1: ruleNamespaceID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )* ) ;
    public final AntlrDatatypeRuleToken ruleNamespaceID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ExtendedID_0 = null;

        AntlrDatatypeRuleToken this_PrimeID_2 = null;



        	enterRule();

        try {
            // InternalSCTX.g:8802:2: ( (this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )* ) )
            // InternalSCTX.g:8803:2: (this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )* )
            {
            // InternalSCTX.g:8803:2: (this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )* )
            // InternalSCTX.g:8804:3: this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getNamespaceIDAccess().getExtendedIDParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_157);
            this_ExtendedID_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ExtendedID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:8814:3: (kw= ':' this_PrimeID_2= rulePrimeID )*
            loop299:
            do {
                int alt299=2;
                int LA299_0 = input.LA(1);

                if ( (LA299_0==48) ) {
                    alt299=1;
                }


                switch (alt299) {
            	case 1 :
            	    // InternalSCTX.g:8815:4: kw= ':' this_PrimeID_2= rulePrimeID
            	    {
            	    kw=(Token)match(input,48,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getNamespaceIDAccess().getColonKeyword_1_0());
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getNamespaceIDAccess().getPrimeIDParserRuleCall_1_1());
            	      			
            	    }
            	    pushFollow(FollowSets000.FOLLOW_157);
            	    this_PrimeID_2=rulePrimeID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_PrimeID_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop299;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceID"


    // $ANTLR start "entryRuleReferenceDeclaration"
    // InternalSCTX.g:8835:1: entryRuleReferenceDeclaration returns [EObject current=null] : iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF ;
    public final EObject entryRuleReferenceDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceDeclaration = null;


        try {
            // InternalSCTX.g:8835:61: (iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF )
            // InternalSCTX.g:8836:2: iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceDeclaration=ruleReferenceDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceDeclaration"


    // $ANTLR start "ruleReferenceDeclaration"
    // InternalSCTX.g:8842:1: ruleReferenceDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleReferenceDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        EObject lv_extern_5_0 = null;

        EObject lv_extern_7_0 = null;

        EObject lv_valuedObjects_8_0 = null;

        EObject lv_valuedObjects_10_0 = null;

        EObject lv_annotations_12_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:8848:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:8849:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:8849:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:8850:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:8850:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop300:
            do {
                int alt300=2;
                int LA300_0 = input.LA(1);

                if ( (LA300_0==RULE_COMMENT_ANNOTATION||LA300_0==103) ) {
                    alt300=1;
                }


                switch (alt300) {
            	case 1 :
            	    // InternalSCTX.g:8851:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:8851:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:8852:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_158);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop300;
                }
            } while (true);

            // InternalSCTX.g:8869:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt301=2;
            int LA301_0 = input.LA(1);

            if ( ((LA301_0>=152 && LA301_0<=154)) ) {
                alt301=1;
            }
            switch (alt301) {
                case 1 :
                    // InternalSCTX.g:8870:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:8870:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalSCTX.g:8871:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_159);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8888:3: ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) )
            int alt303=2;
            int LA303_0 = input.LA(1);

            if ( (LA303_0==79) ) {
                alt303=1;
            }
            else if ( (LA303_0==80) ) {
                alt303=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 303, 0, input);

                throw nvae;
            }
            switch (alt303) {
                case 1 :
                    // InternalSCTX.g:8889:4: (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) )
                    {
                    // InternalSCTX.g:8889:4: (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) )
                    // InternalSCTX.g:8890:5: otherlv_2= 'ref' ( ( ruleNamespaceID ) )
                    {
                    otherlv_2=(Token)match(input,79,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getReferenceDeclarationAccess().getRefKeyword_2_0_0());
                      				
                    }
                    // InternalSCTX.g:8894:5: ( ( ruleNamespaceID ) )
                    // InternalSCTX.g:8895:6: ( ruleNamespaceID )
                    {
                    // InternalSCTX.g:8895:6: ( ruleNamespaceID )
                    // InternalSCTX.g:8896:7: ruleNamespaceID
                    {
                    if ( state.backtracking==0 ) {

                      							/* */
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getReferenceDeclarationRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getReferenceNamedObjectCrossReference_2_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_107);
                    ruleNamespaceID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8915:4: (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* )
                    {
                    // InternalSCTX.g:8915:4: (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* )
                    // InternalSCTX.g:8916:5: otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )*
                    {
                    otherlv_4=(Token)match(input,80,FollowSets000.FOLLOW_160); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getReferenceDeclarationAccess().getExternKeyword_2_1_0());
                      				
                    }
                    // InternalSCTX.g:8920:5: ( (lv_extern_5_0= ruleExternString ) )
                    // InternalSCTX.g:8921:6: (lv_extern_5_0= ruleExternString )
                    {
                    // InternalSCTX.g:8921:6: (lv_extern_5_0= ruleExternString )
                    // InternalSCTX.g:8922:7: lv_extern_5_0= ruleExternString
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getExternExternStringParserRuleCall_2_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_161);
                    lv_extern_5_0=ruleExternString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                      							}
                      							add(
                      								current,
                      								"extern",
                      								lv_extern_5_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:8939:5: (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )*
                    loop302:
                    do {
                        int alt302=2;
                        int LA302_0 = input.LA(1);

                        if ( (LA302_0==20) ) {
                            alt302=1;
                        }


                        switch (alt302) {
                    	case 1 :
                    	    // InternalSCTX.g:8940:6: otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,20,FollowSets000.FOLLOW_160); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_6, grammarAccess.getReferenceDeclarationAccess().getCommaKeyword_2_1_2_0());
                    	      					
                    	    }
                    	    // InternalSCTX.g:8944:6: ( (lv_extern_7_0= ruleExternString ) )
                    	    // InternalSCTX.g:8945:7: (lv_extern_7_0= ruleExternString )
                    	    {
                    	    // InternalSCTX.g:8945:7: (lv_extern_7_0= ruleExternString )
                    	    // InternalSCTX.g:8946:8: lv_extern_7_0= ruleExternString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getExternExternStringParserRuleCall_2_1_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_161);
                    	    lv_extern_7_0=ruleExternString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"extern",
                    	      									lv_extern_7_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop302;
                        }
                    } while (true);


                    }


                    }
                    break;

            }

            // InternalSCTX.g:8966:3: ( (lv_valuedObjects_8_0= ruleValuedObject ) )
            // InternalSCTX.g:8967:4: (lv_valuedObjects_8_0= ruleValuedObject )
            {
            // InternalSCTX.g:8967:4: (lv_valuedObjects_8_0= ruleValuedObject )
            // InternalSCTX.g:8968:5: lv_valuedObjects_8_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_155);
            lv_valuedObjects_8_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_8_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:8985:3: (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )*
            loop304:
            do {
                int alt304=2;
                int LA304_0 = input.LA(1);

                if ( (LA304_0==20) ) {
                    alt304=1;
                }


                switch (alt304) {
            	case 1 :
            	    // InternalSCTX.g:8986:4: otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    {
            	    otherlv_9=(Token)match(input,20,FollowSets000.FOLLOW_107); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_9, grammarAccess.getReferenceDeclarationAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalSCTX.g:8990:4: ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    // InternalSCTX.g:8991:5: (lv_valuedObjects_10_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:8991:5: (lv_valuedObjects_10_0= ruleValuedObject )
            	    // InternalSCTX.g:8992:6: lv_valuedObjects_10_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_155);
            	    lv_valuedObjects_10_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_10_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop304;
                }
            } while (true);

            otherlv_11=(Token)match(input,42,FollowSets000.FOLLOW_146); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getReferenceDeclarationAccess().getSemicolonKeyword_5());
              		
            }
            // InternalSCTX.g:9014:3: ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )?
            int alt305=2;
            int LA305_0 = input.LA(1);

            if ( (LA305_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt305=1;
            }
            switch (alt305) {
                case 1 :
                    // InternalSCTX.g:9015:4: (lv_annotations_12_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:9015:4: (lv_annotations_12_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:9016:5: lv_annotations_12_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_12_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_12_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceDeclaration"


    // $ANTLR start "entryRuleReferenceDeclarationWOSemicolon"
    // InternalSCTX.g:9037:1: entryRuleReferenceDeclarationWOSemicolon returns [EObject current=null] : iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF ;
    public final EObject entryRuleReferenceDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceDeclarationWOSemicolon = null;


        try {
            // InternalSCTX.g:9037:72: (iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF )
            // InternalSCTX.g:9038:2: iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceDeclarationWOSemicolon=ruleReferenceDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceDeclarationWOSemicolon"


    // $ANTLR start "ruleReferenceDeclarationWOSemicolon"
    // InternalSCTX.g:9044:1: ruleReferenceDeclarationWOSemicolon returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleReferenceDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        EObject lv_extern_5_0 = null;

        EObject lv_extern_7_0 = null;

        EObject lv_valuedObjects_8_0 = null;

        EObject lv_valuedObjects_10_0 = null;

        EObject lv_annotations_11_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:9050:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:9051:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:9051:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:9052:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:9052:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop306:
            do {
                int alt306=2;
                int LA306_0 = input.LA(1);

                if ( (LA306_0==RULE_COMMENT_ANNOTATION||LA306_0==103) ) {
                    alt306=1;
                }


                switch (alt306) {
            	case 1 :
            	    // InternalSCTX.g:9053:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:9053:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:9054:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_158);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop306;
                }
            } while (true);

            // InternalSCTX.g:9071:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt307=2;
            int LA307_0 = input.LA(1);

            if ( ((LA307_0>=152 && LA307_0<=154)) ) {
                alt307=1;
            }
            switch (alt307) {
                case 1 :
                    // InternalSCTX.g:9072:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:9072:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalSCTX.g:9073:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_159);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:9090:3: ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) )
            int alt309=2;
            int LA309_0 = input.LA(1);

            if ( (LA309_0==79) ) {
                alt309=1;
            }
            else if ( (LA309_0==80) ) {
                alt309=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 309, 0, input);

                throw nvae;
            }
            switch (alt309) {
                case 1 :
                    // InternalSCTX.g:9091:4: (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) )
                    {
                    // InternalSCTX.g:9091:4: (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) )
                    // InternalSCTX.g:9092:5: otherlv_2= 'ref' ( ( ruleNamespaceID ) )
                    {
                    otherlv_2=(Token)match(input,79,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getRefKeyword_2_0_0());
                      				
                    }
                    // InternalSCTX.g:9096:5: ( ( ruleNamespaceID ) )
                    // InternalSCTX.g:9097:6: ( ruleNamespaceID )
                    {
                    // InternalSCTX.g:9097:6: ( ruleNamespaceID )
                    // InternalSCTX.g:9098:7: ruleNamespaceID
                    {
                    if ( state.backtracking==0 ) {

                      							/* */
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getReferenceNamedObjectCrossReference_2_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_107);
                    ruleNamespaceID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:9117:4: (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* )
                    {
                    // InternalSCTX.g:9117:4: (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* )
                    // InternalSCTX.g:9118:5: otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )*
                    {
                    otherlv_4=(Token)match(input,80,FollowSets000.FOLLOW_160); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternKeyword_2_1_0());
                      				
                    }
                    // InternalSCTX.g:9122:5: ( (lv_extern_5_0= ruleExternString ) )
                    // InternalSCTX.g:9123:6: (lv_extern_5_0= ruleExternString )
                    {
                    // InternalSCTX.g:9123:6: (lv_extern_5_0= ruleExternString )
                    // InternalSCTX.g:9124:7: lv_extern_5_0= ruleExternString
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternExternStringParserRuleCall_2_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_161);
                    lv_extern_5_0=ruleExternString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      							}
                      							add(
                      								current,
                      								"extern",
                      								lv_extern_5_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:9141:5: (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )*
                    loop308:
                    do {
                        int alt308=2;
                        int LA308_0 = input.LA(1);

                        if ( (LA308_0==20) ) {
                            alt308=1;
                        }


                        switch (alt308) {
                    	case 1 :
                    	    // InternalSCTX.g:9142:6: otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,20,FollowSets000.FOLLOW_160); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_6, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getCommaKeyword_2_1_2_0());
                    	      					
                    	    }
                    	    // InternalSCTX.g:9146:6: ( (lv_extern_7_0= ruleExternString ) )
                    	    // InternalSCTX.g:9147:7: (lv_extern_7_0= ruleExternString )
                    	    {
                    	    // InternalSCTX.g:9147:7: (lv_extern_7_0= ruleExternString )
                    	    // InternalSCTX.g:9148:8: lv_extern_7_0= ruleExternString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternExternStringParserRuleCall_2_1_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_161);
                    	    lv_extern_7_0=ruleExternString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"extern",
                    	      									lv_extern_7_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop308;
                        }
                    } while (true);


                    }


                    }
                    break;

            }

            // InternalSCTX.g:9168:3: ( (lv_valuedObjects_8_0= ruleValuedObject ) )
            // InternalSCTX.g:9169:4: (lv_valuedObjects_8_0= ruleValuedObject )
            {
            // InternalSCTX.g:9169:4: (lv_valuedObjects_8_0= ruleValuedObject )
            // InternalSCTX.g:9170:5: lv_valuedObjects_8_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_106);
            lv_valuedObjects_8_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_8_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:9187:3: (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )*
            loop310:
            do {
                int alt310=2;
                int LA310_0 = input.LA(1);

                if ( (LA310_0==20) ) {
                    alt310=1;
                }


                switch (alt310) {
            	case 1 :
            	    // InternalSCTX.g:9188:4: otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    {
            	    otherlv_9=(Token)match(input,20,FollowSets000.FOLLOW_107); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_9, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalSCTX.g:9192:4: ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    // InternalSCTX.g:9193:5: (lv_valuedObjects_10_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:9193:5: (lv_valuedObjects_10_0= ruleValuedObject )
            	    // InternalSCTX.g:9194:6: lv_valuedObjects_10_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_106);
            	    lv_valuedObjects_10_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_10_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop310;
                }
            } while (true);

            // InternalSCTX.g:9212:3: ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )?
            int alt311=2;
            int LA311_0 = input.LA(1);

            if ( (LA311_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt311=1;
            }
            switch (alt311) {
                case 1 :
                    // InternalSCTX.g:9213:4: (lv_annotations_11_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:9213:4: (lv_annotations_11_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:9214:5: lv_annotations_11_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_11_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_11_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceDeclarationWOSemicolon"


    // $ANTLR start "entryRuleExternString"
    // InternalSCTX.g:9235:1: entryRuleExternString returns [EObject current=null] : iv_ruleExternString= ruleExternString EOF ;
    public final EObject entryRuleExternString() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExternString = null;


        try {
            // InternalSCTX.g:9235:53: (iv_ruleExternString= ruleExternString EOF )
            // InternalSCTX.g:9236:2: iv_ruleExternString= ruleExternString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExternStringRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExternString=ruleExternString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExternString; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExternString"


    // $ANTLR start "ruleExternString"
    // InternalSCTX.g:9242:1: ruleExternString returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleExternString() throws RecognitionException {
        EObject current = null;

        Token lv_code_1_0=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:9248:2: ( ( ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) ) ) )
            // InternalSCTX.g:9249:2: ( ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) ) )
            {
            // InternalSCTX.g:9249:2: ( ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) ) )
            // InternalSCTX.g:9250:3: ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) )
            {
            // InternalSCTX.g:9250:3: ( (lv_annotations_0_0= ruleTagAnnotation ) )*
            loop312:
            do {
                int alt312=2;
                int LA312_0 = input.LA(1);

                if ( (LA312_0==103) ) {
                    alt312=1;
                }


                switch (alt312) {
            	case 1 :
            	    // InternalSCTX.g:9251:4: (lv_annotations_0_0= ruleTagAnnotation )
            	    {
            	    // InternalSCTX.g:9251:4: (lv_annotations_0_0= ruleTagAnnotation )
            	    // InternalSCTX.g:9252:5: lv_annotations_0_0= ruleTagAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getExternStringAccess().getAnnotationsTagAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_160);
            	    lv_annotations_0_0=ruleTagAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getExternStringRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.TagAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop312;
                }
            } while (true);

            // InternalSCTX.g:9269:3: ( (lv_code_1_0= RULE_STRING ) )
            // InternalSCTX.g:9270:4: (lv_code_1_0= RULE_STRING )
            {
            // InternalSCTX.g:9270:4: (lv_code_1_0= RULE_STRING )
            // InternalSCTX.g:9271:5: lv_code_1_0= RULE_STRING
            {
            lv_code_1_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_code_1_0, grammarAccess.getExternStringAccess().getCodeSTRINGTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getExternStringRule());
              					}
              					setWithLastConsumed(
              						current,
              						"code",
              						lv_code_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.STRING");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExternString"


    // $ANTLR start "entryRuleScheduleDeclaration"
    // InternalSCTX.g:9291:1: entryRuleScheduleDeclaration returns [EObject current=null] : iv_ruleScheduleDeclaration= ruleScheduleDeclaration EOF ;
    public final EObject entryRuleScheduleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScheduleDeclaration = null;


        try {
            // InternalSCTX.g:9291:60: (iv_ruleScheduleDeclaration= ruleScheduleDeclaration EOF )
            // InternalSCTX.g:9292:2: iv_ruleScheduleDeclaration= ruleScheduleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScheduleDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScheduleDeclaration=ruleScheduleDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScheduleDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScheduleDeclaration"


    // $ANTLR start "ruleScheduleDeclaration"
    // InternalSCTX.g:9298:1: ruleScheduleDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleScheduleDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        Enumerator lv_global_5_0 = null;

        Enumerator lv_priorities_7_0 = null;

        Enumerator lv_priorities_9_0 = null;

        EObject lv_valuedObjects_11_0 = null;

        EObject lv_valuedObjects_13_0 = null;

        EObject lv_annotations_15_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:9304:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:9305:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:9305:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:9306:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:9306:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop313:
            do {
                int alt313=2;
                int LA313_0 = input.LA(1);

                if ( (LA313_0==RULE_COMMENT_ANNOTATION||LA313_0==103) ) {
                    alt313=1;
                }


                switch (alt313) {
            	case 1 :
            	    // InternalSCTX.g:9307:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:9307:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:9308:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_162);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop313;
                }
            } while (true);

            // InternalSCTX.g:9325:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt314=2;
            int LA314_0 = input.LA(1);

            if ( ((LA314_0>=152 && LA314_0<=154)) ) {
                alt314=1;
            }
            switch (alt314) {
                case 1 :
                    // InternalSCTX.g:9326:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:9326:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalSCTX.g:9327:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_163);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,29,FollowSets000.FOLLOW_164); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getScheduleDeclarationAccess().getScheduleKeyword_2());
              		
            }
            // InternalSCTX.g:9348:3: ( (lv_name_3_0= RULE_STRING ) )?
            int alt315=2;
            int LA315_0 = input.LA(1);

            if ( (LA315_0==RULE_STRING) ) {
                alt315=1;
            }
            switch (alt315) {
                case 1 :
                    // InternalSCTX.g:9349:4: (lv_name_3_0= RULE_STRING )
                    {
                    // InternalSCTX.g:9349:4: (lv_name_3_0= RULE_STRING )
                    // InternalSCTX.g:9350:5: lv_name_3_0= RULE_STRING
                    {
                    lv_name_3_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_165); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_3_0, grammarAccess.getScheduleDeclarationAccess().getNameSTRINGTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getScheduleDeclarationRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_3_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:9366:3: (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )?
            int alt316=2;
            int LA316_0 = input.LA(1);

            if ( (LA316_0==64) ) {
                alt316=1;
            }
            switch (alt316) {
                case 1 :
                    // InternalSCTX.g:9367:4: otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) )
                    {
                    otherlv_4=(Token)match(input,64,FollowSets000.FOLLOW_166); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getScheduleDeclarationAccess().getGlobalKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:9371:4: ( (lv_global_5_0= rulePriorityProtocol ) )
                    // InternalSCTX.g:9372:5: (lv_global_5_0= rulePriorityProtocol )
                    {
                    // InternalSCTX.g:9372:5: (lv_global_5_0= rulePriorityProtocol )
                    // InternalSCTX.g:9373:6: lv_global_5_0= rulePriorityProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getGlobalPriorityProtocolEnumRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_167);
                    lv_global_5_0=rulePriorityProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"global",
                      							lv_global_5_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:9391:3: (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )?
            int alt318=2;
            int LA318_0 = input.LA(1);

            if ( (LA318_0==21) ) {
                alt318=1;
            }
            switch (alt318) {
                case 1 :
                    // InternalSCTX.g:9392:4: otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}'
                    {
                    otherlv_6=(Token)match(input,21,FollowSets000.FOLLOW_166); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getScheduleDeclarationAccess().getLeftCurlyBracketKeyword_5_0());
                      			
                    }
                    // InternalSCTX.g:9396:4: ( (lv_priorities_7_0= rulePriorityProtocol ) )
                    // InternalSCTX.g:9397:5: (lv_priorities_7_0= rulePriorityProtocol )
                    {
                    // InternalSCTX.g:9397:5: (lv_priorities_7_0= rulePriorityProtocol )
                    // InternalSCTX.g:9398:6: lv_priorities_7_0= rulePriorityProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_168);
                    lv_priorities_7_0=rulePriorityProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"priorities",
                      							lv_priorities_7_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:9415:4: (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )*
                    loop317:
                    do {
                        int alt317=2;
                        int LA317_0 = input.LA(1);

                        if ( (LA317_0==20) ) {
                            alt317=1;
                        }


                        switch (alt317) {
                    	case 1 :
                    	    // InternalSCTX.g:9416:5: otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) )
                    	    {
                    	    otherlv_8=(Token)match(input,20,FollowSets000.FOLLOW_166); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getScheduleDeclarationAccess().getCommaKeyword_5_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:9420:5: ( (lv_priorities_9_0= rulePriorityProtocol ) )
                    	    // InternalSCTX.g:9421:6: (lv_priorities_9_0= rulePriorityProtocol )
                    	    {
                    	    // InternalSCTX.g:9421:6: (lv_priorities_9_0= rulePriorityProtocol )
                    	    // InternalSCTX.g:9422:7: lv_priorities_9_0= rulePriorityProtocol
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_168);
                    	    lv_priorities_9_0=rulePriorityProtocol();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"priorities",
                    	      								lv_priorities_9_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop317;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,22,FollowSets000.FOLLOW_107); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getScheduleDeclarationAccess().getRightCurlyBracketKeyword_5_3());
                      			
                    }

                    }
                    break;

            }

            // InternalSCTX.g:9445:3: ( (lv_valuedObjects_11_0= ruleValuedObject ) )
            // InternalSCTX.g:9446:4: (lv_valuedObjects_11_0= ruleValuedObject )
            {
            // InternalSCTX.g:9446:4: (lv_valuedObjects_11_0= ruleValuedObject )
            // InternalSCTX.g:9447:5: lv_valuedObjects_11_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_6_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_155);
            lv_valuedObjects_11_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_11_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:9464:3: (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )*
            loop319:
            do {
                int alt319=2;
                int LA319_0 = input.LA(1);

                if ( (LA319_0==20) ) {
                    alt319=1;
                }


                switch (alt319) {
            	case 1 :
            	    // InternalSCTX.g:9465:4: otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) )
            	    {
            	    otherlv_12=(Token)match(input,20,FollowSets000.FOLLOW_107); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_12, grammarAccess.getScheduleDeclarationAccess().getCommaKeyword_7_0());
            	      			
            	    }
            	    // InternalSCTX.g:9469:4: ( (lv_valuedObjects_13_0= ruleValuedObject ) )
            	    // InternalSCTX.g:9470:5: (lv_valuedObjects_13_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:9470:5: (lv_valuedObjects_13_0= ruleValuedObject )
            	    // InternalSCTX.g:9471:6: lv_valuedObjects_13_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_7_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_155);
            	    lv_valuedObjects_13_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_13_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop319;
                }
            } while (true);

            otherlv_14=(Token)match(input,42,FollowSets000.FOLLOW_146); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_14, grammarAccess.getScheduleDeclarationAccess().getSemicolonKeyword_8());
              		
            }
            // InternalSCTX.g:9493:3: ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
            int alt320=2;
            int LA320_0 = input.LA(1);

            if ( (LA320_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt320=1;
            }
            switch (alt320) {
                case 1 :
                    // InternalSCTX.g:9494:4: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:9494:4: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:9495:5: lv_annotations_15_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_9_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_15_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_15_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScheduleDeclaration"


    // $ANTLR start "entryRuleScheduleDeclarationWOSemicolon"
    // InternalSCTX.g:9516:1: entryRuleScheduleDeclarationWOSemicolon returns [EObject current=null] : iv_ruleScheduleDeclarationWOSemicolon= ruleScheduleDeclarationWOSemicolon EOF ;
    public final EObject entryRuleScheduleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScheduleDeclarationWOSemicolon = null;


        try {
            // InternalSCTX.g:9516:71: (iv_ruleScheduleDeclarationWOSemicolon= ruleScheduleDeclarationWOSemicolon EOF )
            // InternalSCTX.g:9517:2: iv_ruleScheduleDeclarationWOSemicolon= ruleScheduleDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScheduleDeclarationWOSemicolon=ruleScheduleDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScheduleDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScheduleDeclarationWOSemicolon"


    // $ANTLR start "ruleScheduleDeclarationWOSemicolon"
    // InternalSCTX.g:9523:1: ruleScheduleDeclarationWOSemicolon returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleScheduleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        Enumerator lv_global_5_0 = null;

        Enumerator lv_priorities_7_0 = null;

        Enumerator lv_priorities_9_0 = null;

        EObject lv_valuedObjects_11_0 = null;

        EObject lv_valuedObjects_13_0 = null;

        EObject lv_annotations_14_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:9529:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:9530:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:9530:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:9531:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:9531:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop321:
            do {
                int alt321=2;
                int LA321_0 = input.LA(1);

                if ( (LA321_0==RULE_COMMENT_ANNOTATION||LA321_0==103) ) {
                    alt321=1;
                }


                switch (alt321) {
            	case 1 :
            	    // InternalSCTX.g:9532:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:9532:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:9533:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_162);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop321;
                }
            } while (true);

            // InternalSCTX.g:9550:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt322=2;
            int LA322_0 = input.LA(1);

            if ( ((LA322_0>=152 && LA322_0<=154)) ) {
                alt322=1;
            }
            switch (alt322) {
                case 1 :
                    // InternalSCTX.g:9551:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:9551:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalSCTX.g:9552:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_163);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,29,FollowSets000.FOLLOW_164); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getScheduleKeyword_2());
              		
            }
            // InternalSCTX.g:9573:3: ( (lv_name_3_0= RULE_STRING ) )?
            int alt323=2;
            int LA323_0 = input.LA(1);

            if ( (LA323_0==RULE_STRING) ) {
                alt323=1;
            }
            switch (alt323) {
                case 1 :
                    // InternalSCTX.g:9574:4: (lv_name_3_0= RULE_STRING )
                    {
                    // InternalSCTX.g:9574:4: (lv_name_3_0= RULE_STRING )
                    // InternalSCTX.g:9575:5: lv_name_3_0= RULE_STRING
                    {
                    lv_name_3_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_165); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_3_0, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getNameSTRINGTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_3_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:9591:3: (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )?
            int alt324=2;
            int LA324_0 = input.LA(1);

            if ( (LA324_0==64) ) {
                alt324=1;
            }
            switch (alt324) {
                case 1 :
                    // InternalSCTX.g:9592:4: otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) )
                    {
                    otherlv_4=(Token)match(input,64,FollowSets000.FOLLOW_166); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getGlobalKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:9596:4: ( (lv_global_5_0= rulePriorityProtocol ) )
                    // InternalSCTX.g:9597:5: (lv_global_5_0= rulePriorityProtocol )
                    {
                    // InternalSCTX.g:9597:5: (lv_global_5_0= rulePriorityProtocol )
                    // InternalSCTX.g:9598:6: lv_global_5_0= rulePriorityProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getGlobalPriorityProtocolEnumRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_167);
                    lv_global_5_0=rulePriorityProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      						}
                      						set(
                      							current,
                      							"global",
                      							lv_global_5_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:9616:3: (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )?
            int alt326=2;
            int LA326_0 = input.LA(1);

            if ( (LA326_0==21) ) {
                alt326=1;
            }
            switch (alt326) {
                case 1 :
                    // InternalSCTX.g:9617:4: otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}'
                    {
                    otherlv_6=(Token)match(input,21,FollowSets000.FOLLOW_166); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_5_0());
                      			
                    }
                    // InternalSCTX.g:9621:4: ( (lv_priorities_7_0= rulePriorityProtocol ) )
                    // InternalSCTX.g:9622:5: (lv_priorities_7_0= rulePriorityProtocol )
                    {
                    // InternalSCTX.g:9622:5: (lv_priorities_7_0= rulePriorityProtocol )
                    // InternalSCTX.g:9623:6: lv_priorities_7_0= rulePriorityProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_168);
                    lv_priorities_7_0=rulePriorityProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      						}
                      						add(
                      							current,
                      							"priorities",
                      							lv_priorities_7_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:9640:4: (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )*
                    loop325:
                    do {
                        int alt325=2;
                        int LA325_0 = input.LA(1);

                        if ( (LA325_0==20) ) {
                            alt325=1;
                        }


                        switch (alt325) {
                    	case 1 :
                    	    // InternalSCTX.g:9641:5: otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) )
                    	    {
                    	    otherlv_8=(Token)match(input,20,FollowSets000.FOLLOW_166); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getCommaKeyword_5_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:9645:5: ( (lv_priorities_9_0= rulePriorityProtocol ) )
                    	    // InternalSCTX.g:9646:6: (lv_priorities_9_0= rulePriorityProtocol )
                    	    {
                    	    // InternalSCTX.g:9646:6: (lv_priorities_9_0= rulePriorityProtocol )
                    	    // InternalSCTX.g:9647:7: lv_priorities_9_0= rulePriorityProtocol
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_168);
                    	    lv_priorities_9_0=rulePriorityProtocol();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"priorities",
                    	      								lv_priorities_9_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop325;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,22,FollowSets000.FOLLOW_107); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_5_3());
                      			
                    }

                    }
                    break;

            }

            // InternalSCTX.g:9670:3: ( (lv_valuedObjects_11_0= ruleValuedObject ) )
            // InternalSCTX.g:9671:4: (lv_valuedObjects_11_0= ruleValuedObject )
            {
            // InternalSCTX.g:9671:4: (lv_valuedObjects_11_0= ruleValuedObject )
            // InternalSCTX.g:9672:5: lv_valuedObjects_11_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_6_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_106);
            lv_valuedObjects_11_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_11_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:9689:3: (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )*
            loop327:
            do {
                int alt327=2;
                int LA327_0 = input.LA(1);

                if ( (LA327_0==20) ) {
                    alt327=1;
                }


                switch (alt327) {
            	case 1 :
            	    // InternalSCTX.g:9690:4: otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) )
            	    {
            	    otherlv_12=(Token)match(input,20,FollowSets000.FOLLOW_107); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_12, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getCommaKeyword_7_0());
            	      			
            	    }
            	    // InternalSCTX.g:9694:4: ( (lv_valuedObjects_13_0= ruleValuedObject ) )
            	    // InternalSCTX.g:9695:5: (lv_valuedObjects_13_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:9695:5: (lv_valuedObjects_13_0= ruleValuedObject )
            	    // InternalSCTX.g:9696:6: lv_valuedObjects_13_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_7_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_106);
            	    lv_valuedObjects_13_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_13_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop327;
                }
            } while (true);

            // InternalSCTX.g:9714:3: ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )?
            int alt328=2;
            int LA328_0 = input.LA(1);

            if ( (LA328_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt328=1;
            }
            switch (alt328) {
                case 1 :
                    // InternalSCTX.g:9715:4: (lv_annotations_14_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:9715:4: (lv_annotations_14_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:9716:5: lv_annotations_14_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_14_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_14_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScheduleDeclarationWOSemicolon"


    // $ANTLR start "entryRuleValuedObject"
    // InternalSCTX.g:9737:1: entryRuleValuedObject returns [EObject current=null] : iv_ruleValuedObject= ruleValuedObject EOF ;
    public final EObject entryRuleValuedObject() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObject = null;


        try {
            // InternalSCTX.g:9737:53: (iv_ruleValuedObject= ruleValuedObject EOF )
            // InternalSCTX.g:9738:2: iv_ruleValuedObject= ruleValuedObject EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObject=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObject; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObject"


    // $ANTLR start "ruleValuedObject"
    // InternalSCTX.g:9744:1: ruleValuedObject returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleValuedObject() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token lv_label_10_0=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_cardinalities_3_0 = null;

        EObject lv_initialValue_6_0 = null;

        Enumerator lv_combineOperator_8_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:9750:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:9751:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:9751:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:9752:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:9752:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop329:
            do {
                int alt329=2;
                int LA329_0 = input.LA(1);

                if ( (LA329_0==RULE_COMMENT_ANNOTATION||LA329_0==103) ) {
                    alt329=1;
                }


                switch (alt329) {
            	case 1 :
            	    // InternalSCTX.g:9753:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalSCTX.g:9753:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalSCTX.g:9754:5: lv_annotations_0_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getValuedObjectAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_107);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getValuedObjectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop329;
                }
            } while (true);

            // InternalSCTX.g:9771:3: ( (lv_name_1_0= rulePrimeID ) )
            // InternalSCTX.g:9772:4: (lv_name_1_0= rulePrimeID )
            {
            // InternalSCTX.g:9772:4: (lv_name_1_0= rulePrimeID )
            // InternalSCTX.g:9773:5: lv_name_1_0= rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedObjectAccess().getNamePrimeIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_169);
            lv_name_1_0=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValuedObjectRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:9790:3: (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )*
            loop330:
            do {
                int alt330=2;
                int LA330_0 = input.LA(1);

                if ( (LA330_0==36) ) {
                    alt330=1;
                }


                switch (alt330) {
            	case 1 :
            	    // InternalSCTX.g:9791:4: otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']'
            	    {
            	    otherlv_2=(Token)match(input,36,FollowSets000.FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getValuedObjectAccess().getLeftSquareBracketKeyword_2_0());
            	      			
            	    }
            	    // InternalSCTX.g:9795:4: ( (lv_cardinalities_3_0= ruleExpression ) )
            	    // InternalSCTX.g:9796:5: (lv_cardinalities_3_0= ruleExpression )
            	    {
            	    // InternalSCTX.g:9796:5: (lv_cardinalities_3_0= ruleExpression )
            	    // InternalSCTX.g:9797:6: lv_cardinalities_3_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getValuedObjectAccess().getCardinalitiesExpressionParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    lv_cardinalities_3_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getValuedObjectRule());
            	      						}
            	      						add(
            	      							current,
            	      							"cardinalities",
            	      							lv_cardinalities_3_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,37,FollowSets000.FOLLOW_169); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getValuedObjectAccess().getRightSquareBracketKeyword_2_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop330;
                }
            } while (true);

            // InternalSCTX.g:9819:3: (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )?
            int alt331=2;
            int LA331_0 = input.LA(1);

            if ( (LA331_0==81) ) {
                alt331=1;
            }
            switch (alt331) {
                case 1 :
                    // InternalSCTX.g:9820:4: otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) )
                    {
                    otherlv_5=(Token)match(input,81,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getValuedObjectAccess().getEqualsSignKeyword_3_0());
                      			
                    }
                    // InternalSCTX.g:9824:4: ( (lv_initialValue_6_0= ruleExpression ) )
                    // InternalSCTX.g:9825:5: (lv_initialValue_6_0= ruleExpression )
                    {
                    // InternalSCTX.g:9825:5: (lv_initialValue_6_0= ruleExpression )
                    // InternalSCTX.g:9826:6: lv_initialValue_6_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectAccess().getInitialValueExpressionParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_170);
                    lv_initialValue_6_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectRule());
                      						}
                      						set(
                      							current,
                      							"initialValue",
                      							lv_initialValue_6_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:9844:3: (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )?
            int alt332=2;
            int LA332_0 = input.LA(1);

            if ( (LA332_0==82) ) {
                alt332=1;
            }
            switch (alt332) {
                case 1 :
                    // InternalSCTX.g:9845:4: otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) )
                    {
                    otherlv_7=(Token)match(input,82,FollowSets000.FOLLOW_171); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getValuedObjectAccess().getCombineKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:9849:4: ( (lv_combineOperator_8_0= ruleCombineOperator ) )
                    // InternalSCTX.g:9850:5: (lv_combineOperator_8_0= ruleCombineOperator )
                    {
                    // InternalSCTX.g:9850:5: (lv_combineOperator_8_0= ruleCombineOperator )
                    // InternalSCTX.g:9851:6: lv_combineOperator_8_0= ruleCombineOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectAccess().getCombineOperatorCombineOperatorEnumRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_47);
                    lv_combineOperator_8_0=ruleCombineOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectRule());
                      						}
                      						set(
                      							current,
                      							"combineOperator",
                      							lv_combineOperator_8_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.CombineOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:9869:3: (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )?
            int alt333=2;
            int LA333_0 = input.LA(1);

            if ( (LA333_0==44) ) {
                alt333=1;
            }
            switch (alt333) {
                case 1 :
                    // InternalSCTX.g:9870:4: otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) )
                    {
                    otherlv_9=(Token)match(input,44,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getValuedObjectAccess().getLabelKeyword_5_0());
                      			
                    }
                    // InternalSCTX.g:9874:4: ( (lv_label_10_0= RULE_STRING ) )
                    // InternalSCTX.g:9875:5: (lv_label_10_0= RULE_STRING )
                    {
                    // InternalSCTX.g:9875:5: (lv_label_10_0= RULE_STRING )
                    // InternalSCTX.g:9876:6: lv_label_10_0= RULE_STRING
                    {
                    lv_label_10_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_10_0, grammarAccess.getValuedObjectAccess().getLabelSTRINGTerminalRuleCall_5_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getValuedObjectRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_10_0,
                      							"de.cau.cs.kieler.annotations.Annotations.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObject"


    // $ANTLR start "entryRuleSimpleValuedObject"
    // InternalSCTX.g:9897:1: entryRuleSimpleValuedObject returns [EObject current=null] : iv_ruleSimpleValuedObject= ruleSimpleValuedObject EOF ;
    public final EObject entryRuleSimpleValuedObject() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleValuedObject = null;


        try {
            // InternalSCTX.g:9897:59: (iv_ruleSimpleValuedObject= ruleSimpleValuedObject EOF )
            // InternalSCTX.g:9898:2: iv_ruleSimpleValuedObject= ruleSimpleValuedObject EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleValuedObjectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSimpleValuedObject=ruleSimpleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleValuedObject; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleValuedObject"


    // $ANTLR start "ruleSimpleValuedObject"
    // InternalSCTX.g:9904:1: ruleSimpleValuedObject returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) ) ;
    public final EObject ruleSimpleValuedObject() throws RecognitionException {
        EObject current = null;

        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:9910:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) ) )
            // InternalSCTX.g:9911:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) )
            {
            // InternalSCTX.g:9911:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) )
            // InternalSCTX.g:9912:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) )
            {
            // InternalSCTX.g:9912:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop334:
            do {
                int alt334=2;
                int LA334_0 = input.LA(1);

                if ( (LA334_0==RULE_COMMENT_ANNOTATION||LA334_0==103) ) {
                    alt334=1;
                }


                switch (alt334) {
            	case 1 :
            	    // InternalSCTX.g:9913:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalSCTX.g:9913:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalSCTX.g:9914:5: lv_annotations_0_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSimpleValuedObjectAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_107);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSimpleValuedObjectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop334;
                }
            } while (true);

            // InternalSCTX.g:9931:3: ( (lv_name_1_0= rulePrimeID ) )
            // InternalSCTX.g:9932:4: (lv_name_1_0= rulePrimeID )
            {
            // InternalSCTX.g:9932:4: (lv_name_1_0= rulePrimeID )
            // InternalSCTX.g:9933:5: lv_name_1_0= rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimpleValuedObjectAccess().getNamePrimeIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSimpleValuedObjectRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleValuedObject"


    // $ANTLR start "entrySuperEffect"
    // InternalSCTX.g:9954:1: entrySuperEffect returns [EObject current=null] : iv_superEffect= superEffect EOF ;
    public final EObject entrySuperEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_superEffect = null;


        try {
            // InternalSCTX.g:9954:48: (iv_superEffect= superEffect EOF )
            // InternalSCTX.g:9955:2: iv_superEffect= superEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKEffectsEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_superEffect=superEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperEffect"


    // $ANTLR start "superEffect"
    // InternalSCTX.g:9961:1: superEffect returns [EObject current=null] : (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission ) ;
    public final EObject superEffect() throws RecognitionException {
        EObject current = null;

        EObject this_Assignment_0 = null;

        EObject this_PostfixEffect_1 = null;

        EObject this_ValuedEmission_2 = null;

        EObject this_HostcodeEffect_3 = null;

        EObject this_ReferenceCallEffect_4 = null;

        EObject this_FunctionCallEffect_5 = null;

        EObject this_PrintCallEffect_6 = null;

        EObject this_RandomizeCallEffect_7 = null;

        EObject this_PureEmission_8 = null;



        	enterRule();

        try {
            // InternalSCTX.g:9967:2: ( (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission ) )
            // InternalSCTX.g:9968:2: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission )
            {
            // InternalSCTX.g:9968:2: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission )
            int alt335=9;
            alt335 = dfa335.predict(input);
            switch (alt335) {
                case 1 :
                    // InternalSCTX.g:9969:3: this_Assignment_0= ruleAssignment
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getAssignmentParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Assignment_0=ruleAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Assignment_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:9981:3: this_PostfixEffect_1= rulePostfixEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getPostfixEffectParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PostfixEffect_1=rulePostfixEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PostfixEffect_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:9993:3: this_ValuedEmission_2= ruleValuedEmission
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getValuedEmissionParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedEmission_2=ruleValuedEmission();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedEmission_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:10005:3: this_HostcodeEffect_3= ruleHostcodeEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getHostcodeEffectParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_HostcodeEffect_3=ruleHostcodeEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_HostcodeEffect_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSCTX.g:10017:3: this_ReferenceCallEffect_4= ruleReferenceCallEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getReferenceCallEffectParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceCallEffect_4=ruleReferenceCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReferenceCallEffect_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalSCTX.g:10029:3: this_FunctionCallEffect_5= ruleFunctionCallEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getFunctionCallEffectParserRuleCall_5());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FunctionCallEffect_5=ruleFunctionCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionCallEffect_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalSCTX.g:10041:3: this_PrintCallEffect_6= rulePrintCallEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getPrintCallEffectParserRuleCall_6());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrintCallEffect_6=rulePrintCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrintCallEffect_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalSCTX.g:10053:3: this_RandomizeCallEffect_7= ruleRandomizeCallEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getRandomizeCallEffectParserRuleCall_7());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RandomizeCallEffect_7=ruleRandomizeCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RandomizeCallEffect_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalSCTX.g:10065:3: this_PureEmission_8= rulePureEmission
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getPureEmissionParserRuleCall_8());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PureEmission_8=rulePureEmission();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PureEmission_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superEffect"


    // $ANTLR start "entryRulePureEmission"
    // InternalSCTX.g:10080:1: entryRulePureEmission returns [EObject current=null] : iv_rulePureEmission= rulePureEmission EOF ;
    public final EObject entryRulePureEmission() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePureEmission = null;


        try {
            // InternalSCTX.g:10080:53: (iv_rulePureEmission= rulePureEmission EOF )
            // InternalSCTX.g:10081:2: iv_rulePureEmission= rulePureEmission EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPureEmissionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePureEmission=rulePureEmission();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePureEmission; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePureEmission"


    // $ANTLR start "rulePureEmission"
    // InternalSCTX.g:10087:1: rulePureEmission returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject rulePureEmission() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        EObject lv_schedule_3_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:10093:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:10094:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:10094:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:10095:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:10095:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop336:
            do {
                int alt336=2;
                int LA336_0 = input.LA(1);

                if ( (LA336_0==RULE_COMMENT_ANNOTATION||LA336_0==103) ) {
                    alt336=1;
                }


                switch (alt336) {
            	case 1 :
            	    // InternalSCTX.g:10096:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalSCTX.g:10096:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalSCTX.g:10097:5: lv_annotations_0_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPureEmissionAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_82);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPureEmissionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop336;
                }
            } while (true);

            // InternalSCTX.g:10114:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalSCTX.g:10115:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalSCTX.g:10115:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalSCTX.g:10116:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPureEmissionAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_37);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPureEmissionRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:10133:3: (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )?
            int alt338=2;
            int LA338_0 = input.LA(1);

            if ( (LA338_0==29) ) {
                alt338=1;
            }
            switch (alt338) {
                case 1 :
                    // InternalSCTX.g:10134:4: otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_2=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPureEmissionAccess().getScheduleKeyword_2_0());
                      			
                    }
                    // InternalSCTX.g:10138:4: ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+
                    int cnt337=0;
                    loop337:
                    do {
                        int alt337=2;
                        alt337 = dfa337.predict(input);
                        switch (alt337) {
                    	case 1 :
                    	    // InternalSCTX.g:10139:5: (lv_schedule_3_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:10139:5: (lv_schedule_3_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:10140:6: lv_schedule_3_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getPureEmissionAccess().getScheduleScheduleObjectReferenceParserRuleCall_2_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_60);
                    	    lv_schedule_3_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getPureEmissionRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_3_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt337 >= 1 ) break loop337;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(337, input);
                                throw eee;
                        }
                        cnt337++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePureEmission"


    // $ANTLR start "entryRuleValuedEmission"
    // InternalSCTX.g:10162:1: entryRuleValuedEmission returns [EObject current=null] : iv_ruleValuedEmission= ruleValuedEmission EOF ;
    public final EObject entryRuleValuedEmission() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedEmission = null;


        try {
            // InternalSCTX.g:10162:55: (iv_ruleValuedEmission= ruleValuedEmission EOF )
            // InternalSCTX.g:10163:2: iv_ruleValuedEmission= ruleValuedEmission EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedEmissionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedEmission=ruleValuedEmission();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedEmission; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedEmission"


    // $ANTLR start "ruleValuedEmission"
    // InternalSCTX.g:10169:1: ruleValuedEmission returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject ruleValuedEmission() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        EObject lv_newValue_3_0 = null;

        EObject lv_schedule_6_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:10175:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:10176:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:10176:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:10177:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:10177:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop339:
            do {
                int alt339=2;
                int LA339_0 = input.LA(1);

                if ( (LA339_0==RULE_COMMENT_ANNOTATION||LA339_0==103) ) {
                    alt339=1;
                }


                switch (alt339) {
            	case 1 :
            	    // InternalSCTX.g:10178:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalSCTX.g:10178:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalSCTX.g:10179:5: lv_annotations_0_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getValuedEmissionAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_82);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getValuedEmissionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop339;
                }
            } while (true);

            // InternalSCTX.g:10196:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalSCTX.g:10197:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalSCTX.g:10197:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalSCTX.g:10198:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedEmissionAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_140);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValuedEmissionRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,31,FollowSets000.FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getValuedEmissionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalSCTX.g:10219:3: ( (lv_newValue_3_0= ruleExpression ) )
            // InternalSCTX.g:10220:4: (lv_newValue_3_0= ruleExpression )
            {
            // InternalSCTX.g:10220:4: (lv_newValue_3_0= ruleExpression )
            // InternalSCTX.g:10221:5: lv_newValue_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedEmissionAccess().getNewValueExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_32);
            lv_newValue_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValuedEmissionRule());
              					}
              					set(
              						current,
              						"newValue",
              						lv_newValue_3_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,32,FollowSets000.FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getValuedEmissionAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalSCTX.g:10242:3: (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )?
            int alt341=2;
            int LA341_0 = input.LA(1);

            if ( (LA341_0==29) ) {
                alt341=1;
            }
            switch (alt341) {
                case 1 :
                    // InternalSCTX.g:10243:4: otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_5=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getValuedEmissionAccess().getScheduleKeyword_5_0());
                      			
                    }
                    // InternalSCTX.g:10247:4: ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+
                    int cnt340=0;
                    loop340:
                    do {
                        int alt340=2;
                        alt340 = dfa340.predict(input);
                        switch (alt340) {
                    	case 1 :
                    	    // InternalSCTX.g:10248:5: (lv_schedule_6_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:10248:5: (lv_schedule_6_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:10249:6: lv_schedule_6_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getValuedEmissionAccess().getScheduleScheduleObjectReferenceParserRuleCall_5_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_60);
                    	    lv_schedule_6_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getValuedEmissionRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_6_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt340 >= 1 ) break loop340;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(340, input);
                                throw eee;
                        }
                        cnt340++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedEmission"


    // $ANTLR start "entryRuleAssignment"
    // InternalSCTX.g:10271:1: entryRuleAssignment returns [EObject current=null] : iv_ruleAssignment= ruleAssignment EOF ;
    public final EObject entryRuleAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssignment = null;


        try {
            // InternalSCTX.g:10271:51: (iv_ruleAssignment= ruleAssignment EOF )
            // InternalSCTX.g:10272:2: iv_ruleAssignment= ruleAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignmentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAssignment=ruleAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssignment; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssignment"


    // $ANTLR start "ruleAssignment"
    // InternalSCTX.g:10278:1: ruleAssignment returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject ruleAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_expression_3_0 = null;

        EObject lv_schedule_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:10284:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:10285:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:10285:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:10286:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:10286:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop342:
            do {
                int alt342=2;
                int LA342_0 = input.LA(1);

                if ( (LA342_0==RULE_COMMENT_ANNOTATION||LA342_0==103) ) {
                    alt342=1;
                }


                switch (alt342) {
            	case 1 :
            	    // InternalSCTX.g:10287:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:10287:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:10288:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_82);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAssignmentRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop342;
                }
            } while (true);

            // InternalSCTX.g:10305:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalSCTX.g:10306:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalSCTX.g:10306:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalSCTX.g:10307:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_131);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:10324:3: ( (lv_operator_2_0= ruleAssignOperator ) )
            // InternalSCTX.g:10325:4: (lv_operator_2_0= ruleAssignOperator )
            {
            // InternalSCTX.g:10325:4: (lv_operator_2_0= ruleAssignOperator )
            // InternalSCTX.g:10326:5: lv_operator_2_0= ruleAssignOperator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_30);
            lv_operator_2_0=ruleAssignOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"operator",
              						lv_operator_2_0,
              						"de.cau.cs.kieler.kexpressions.keffects.KEffects.AssignOperator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:10343:3: ( (lv_expression_3_0= ruleExpression ) )
            // InternalSCTX.g:10344:4: (lv_expression_3_0= ruleExpression )
            {
            // InternalSCTX.g:10344:4: (lv_expression_3_0= ruleExpression )
            // InternalSCTX.g:10345:5: lv_expression_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_37);
            lv_expression_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_3_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:10362:3: (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )?
            int alt344=2;
            int LA344_0 = input.LA(1);

            if ( (LA344_0==29) ) {
                alt344=1;
            }
            switch (alt344) {
                case 1 :
                    // InternalSCTX.g:10363:4: otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_4=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getAssignmentAccess().getScheduleKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:10367:4: ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+
                    int cnt343=0;
                    loop343:
                    do {
                        int alt343=2;
                        alt343 = dfa343.predict(input);
                        switch (alt343) {
                    	case 1 :
                    	    // InternalSCTX.g:10368:5: (lv_schedule_5_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:10368:5: (lv_schedule_5_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:10369:6: lv_schedule_5_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getAssignmentAccess().getScheduleScheduleObjectReferenceParserRuleCall_4_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_60);
                    	    lv_schedule_5_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getAssignmentRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_5_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt343 >= 1 ) break loop343;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(343, input);
                                throw eee;
                        }
                        cnt343++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssignment"


    // $ANTLR start "entryRulePostfixEffect"
    // InternalSCTX.g:10391:1: entryRulePostfixEffect returns [EObject current=null] : iv_rulePostfixEffect= rulePostfixEffect EOF ;
    public final EObject entryRulePostfixEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePostfixEffect = null;


        try {
            // InternalSCTX.g:10391:54: (iv_rulePostfixEffect= rulePostfixEffect EOF )
            // InternalSCTX.g:10392:2: iv_rulePostfixEffect= rulePostfixEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPostfixEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePostfixEffect=rulePostfixEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePostfixEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePostfixEffect"


    // $ANTLR start "rulePostfixEffect"
    // InternalSCTX.g:10398:1: rulePostfixEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject rulePostfixEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_schedule_4_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:10404:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:10405:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:10405:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:10406:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:10406:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop345:
            do {
                int alt345=2;
                int LA345_0 = input.LA(1);

                if ( (LA345_0==RULE_COMMENT_ANNOTATION||LA345_0==103) ) {
                    alt345=1;
                }


                switch (alt345) {
            	case 1 :
            	    // InternalSCTX.g:10407:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:10407:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:10408:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPostfixEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_82);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop345;
                }
            } while (true);

            // InternalSCTX.g:10425:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalSCTX.g:10426:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalSCTX.g:10426:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalSCTX.g:10427:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPostfixEffectAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_134);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:10444:3: ( (lv_operator_2_0= rulePostfixOperator ) )
            // InternalSCTX.g:10445:4: (lv_operator_2_0= rulePostfixOperator )
            {
            // InternalSCTX.g:10445:4: (lv_operator_2_0= rulePostfixOperator )
            // InternalSCTX.g:10446:5: lv_operator_2_0= rulePostfixOperator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPostfixEffectAccess().getOperatorPostfixOperatorEnumRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_37);
            lv_operator_2_0=rulePostfixOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
              					}
              					set(
              						current,
              						"operator",
              						lv_operator_2_0,
              						"de.cau.cs.kieler.kexpressions.keffects.KEffects.PostfixOperator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:10463:3: (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )?
            int alt347=2;
            int LA347_0 = input.LA(1);

            if ( (LA347_0==29) ) {
                alt347=1;
            }
            switch (alt347) {
                case 1 :
                    // InternalSCTX.g:10464:4: otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_3=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getPostfixEffectAccess().getScheduleKeyword_3_0());
                      			
                    }
                    // InternalSCTX.g:10468:4: ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+
                    int cnt346=0;
                    loop346:
                    do {
                        int alt346=2;
                        alt346 = dfa346.predict(input);
                        switch (alt346) {
                    	case 1 :
                    	    // InternalSCTX.g:10469:5: (lv_schedule_4_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:10469:5: (lv_schedule_4_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:10470:6: lv_schedule_4_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getPostfixEffectAccess().getScheduleScheduleObjectReferenceParserRuleCall_3_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_60);
                    	    lv_schedule_4_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_4_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt346 >= 1 ) break loop346;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(346, input);
                                throw eee;
                        }
                        cnt346++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePostfixEffect"


    // $ANTLR start "entryRuleHostcodeEffect"
    // InternalSCTX.g:10492:1: entryRuleHostcodeEffect returns [EObject current=null] : iv_ruleHostcodeEffect= ruleHostcodeEffect EOF ;
    public final EObject entryRuleHostcodeEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHostcodeEffect = null;


        try {
            // InternalSCTX.g:10492:55: (iv_ruleHostcodeEffect= ruleHostcodeEffect EOF )
            // InternalSCTX.g:10493:2: iv_ruleHostcodeEffect= ruleHostcodeEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHostcodeEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleHostcodeEffect=ruleHostcodeEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHostcodeEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHostcodeEffect"


    // $ANTLR start "ruleHostcodeEffect"
    // InternalSCTX.g:10499:1: ruleHostcodeEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) ;
    public final EObject ruleHostcodeEffect() throws RecognitionException {
        EObject current = null;

        Token lv_text_1_0=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:10505:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) )
            // InternalSCTX.g:10506:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            {
            // InternalSCTX.g:10506:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            // InternalSCTX.g:10507:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) )
            {
            // InternalSCTX.g:10507:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop348:
            do {
                int alt348=2;
                int LA348_0 = input.LA(1);

                if ( (LA348_0==RULE_COMMENT_ANNOTATION||LA348_0==103) ) {
                    alt348=1;
                }


                switch (alt348) {
            	case 1 :
            	    // InternalSCTX.g:10508:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:10508:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:10509:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getHostcodeEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_172);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getHostcodeEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop348;
                }
            } while (true);

            // InternalSCTX.g:10526:3: ( (lv_text_1_0= RULE_HOSTCODE ) )
            // InternalSCTX.g:10527:4: (lv_text_1_0= RULE_HOSTCODE )
            {
            // InternalSCTX.g:10527:4: (lv_text_1_0= RULE_HOSTCODE )
            // InternalSCTX.g:10528:5: lv_text_1_0= RULE_HOSTCODE
            {
            lv_text_1_0=(Token)match(input,RULE_HOSTCODE,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_text_1_0, grammarAccess.getHostcodeEffectAccess().getTextHOSTCODETerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getHostcodeEffectRule());
              					}
              					setWithLastConsumed(
              						current,
              						"text",
              						lv_text_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.HOSTCODE");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHostcodeEffect"


    // $ANTLR start "entryRuleReferenceCallEffect"
    // InternalSCTX.g:10548:1: entryRuleReferenceCallEffect returns [EObject current=null] : iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF ;
    public final EObject entryRuleReferenceCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceCallEffect = null;


        try {
            // InternalSCTX.g:10548:60: (iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF )
            // InternalSCTX.g:10549:2: iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceCallEffect=ruleReferenceCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceCallEffect"


    // $ANTLR start "ruleReferenceCallEffect"
    // InternalSCTX.g:10555:1: ruleReferenceCallEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' ) (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject ruleReferenceCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_indices_3_0 = null;

        EObject lv_subReference_6_0 = null;

        EObject lv_parameters_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_schedule_14_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:10561:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' ) (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:10562:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' ) (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:10562:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' ) (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:10563:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' ) (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:10563:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop349:
            do {
                int alt349=2;
                int LA349_0 = input.LA(1);

                if ( (LA349_0==RULE_COMMENT_ANNOTATION||LA349_0==103) ) {
                    alt349=1;
                }


                switch (alt349) {
            	case 1 :
            	    // InternalSCTX.g:10564:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:10564:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:10565:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_107);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop349;
                }
            } while (true);

            // InternalSCTX.g:10582:3: ( ( rulePrimeID ) )
            // InternalSCTX.g:10583:4: ( rulePrimeID )
            {
            // InternalSCTX.g:10583:4: ( rulePrimeID )
            // InternalSCTX.g:10584:5: rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getReferenceCallEffectRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getValuedObjectValuedObjectCrossReference_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_173);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:10601:3: (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )*
            loop350:
            do {
                int alt350=2;
                int LA350_0 = input.LA(1);

                if ( (LA350_0==36) ) {
                    alt350=1;
                }


                switch (alt350) {
            	case 1 :
            	    // InternalSCTX.g:10602:4: otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']'
            	    {
            	    otherlv_2=(Token)match(input,36,FollowSets000.FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getReferenceCallEffectAccess().getLeftSquareBracketKeyword_2_0());
            	      			
            	    }
            	    // InternalSCTX.g:10606:4: ( (lv_indices_3_0= ruleExpression ) )
            	    // InternalSCTX.g:10607:5: (lv_indices_3_0= ruleExpression )
            	    {
            	    // InternalSCTX.g:10607:5: (lv_indices_3_0= ruleExpression )
            	    // InternalSCTX.g:10608:6: lv_indices_3_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getIndicesExpressionParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    lv_indices_3_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
            	      						}
            	      						add(
            	      							current,
            	      							"indices",
            	      							lv_indices_3_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,37,FollowSets000.FOLLOW_173); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getReferenceCallEffectAccess().getRightSquareBracketKeyword_2_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop350;
                }
            } while (true);

            // InternalSCTX.g:10630:3: (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )?
            int alt351=2;
            int LA351_0 = input.LA(1);

            if ( (LA351_0==83) ) {
                alt351=1;
            }
            switch (alt351) {
                case 1 :
                    // InternalSCTX.g:10631:4: otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) )
                    {
                    otherlv_5=(Token)match(input,83,FollowSets000.FOLLOW_174); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getReferenceCallEffectAccess().getFullStopKeyword_3_0());
                      			
                    }
                    // InternalSCTX.g:10635:4: ( (lv_subReference_6_0= ruleValuedObjectReference ) )
                    // InternalSCTX.g:10636:5: (lv_subReference_6_0= ruleValuedObjectReference )
                    {
                    // InternalSCTX.g:10636:5: (lv_subReference_6_0= ruleValuedObjectReference )
                    // InternalSCTX.g:10637:6: lv_subReference_6_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getSubReferenceValuedObjectReferenceParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_120);
                    lv_subReference_6_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                      						}
                      						set(
                      							current,
                      							"subReference",
                      							lv_subReference_6_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:10655:3: ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' )
            int alt353=2;
            int LA353_0 = input.LA(1);

            if ( (LA353_0==31) ) {
                alt353=1;
            }
            else if ( (LA353_0==70) ) {
                alt353=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 353, 0, input);

                throw nvae;
            }
            switch (alt353) {
                case 1 :
                    // InternalSCTX.g:10656:4: (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' )
                    {
                    // InternalSCTX.g:10656:4: (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' )
                    // InternalSCTX.g:10657:5: otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')'
                    {
                    otherlv_7=(Token)match(input,31,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getReferenceCallEffectAccess().getLeftParenthesisKeyword_4_0_0());
                      				
                    }
                    // InternalSCTX.g:10661:5: ( (lv_parameters_8_0= ruleParameter ) )
                    // InternalSCTX.g:10662:6: (lv_parameters_8_0= ruleParameter )
                    {
                    // InternalSCTX.g:10662:6: (lv_parameters_8_0= ruleParameter )
                    // InternalSCTX.g:10663:7: lv_parameters_8_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getParametersParameterParserRuleCall_4_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_parameters_8_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_8_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:10680:5: (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )*
                    loop352:
                    do {
                        int alt352=2;
                        int LA352_0 = input.LA(1);

                        if ( (LA352_0==20) ) {
                            alt352=1;
                        }


                        switch (alt352) {
                    	case 1 :
                    	    // InternalSCTX.g:10681:6: otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) )
                    	    {
                    	    otherlv_9=(Token)match(input,20,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_9, grammarAccess.getReferenceCallEffectAccess().getCommaKeyword_4_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCTX.g:10685:6: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalSCTX.g:10686:7: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalSCTX.g:10686:7: (lv_parameters_10_0= ruleParameter )
                    	    // InternalSCTX.g:10687:8: lv_parameters_10_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getParametersParameterParserRuleCall_4_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_31);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_10_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop352;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,32,FollowSets000.FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_11, grammarAccess.getReferenceCallEffectAccess().getRightParenthesisKeyword_4_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:10711:4: otherlv_12= '()'
                    {
                    otherlv_12=(Token)match(input,70,FollowSets000.FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getReferenceCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_4_1());
                      			
                    }

                    }
                    break;

            }

            // InternalSCTX.g:10716:3: (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )?
            int alt355=2;
            int LA355_0 = input.LA(1);

            if ( (LA355_0==29) ) {
                alt355=1;
            }
            switch (alt355) {
                case 1 :
                    // InternalSCTX.g:10717:4: otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_13=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getReferenceCallEffectAccess().getScheduleKeyword_5_0());
                      			
                    }
                    // InternalSCTX.g:10721:4: ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+
                    int cnt354=0;
                    loop354:
                    do {
                        int alt354=2;
                        alt354 = dfa354.predict(input);
                        switch (alt354) {
                    	case 1 :
                    	    // InternalSCTX.g:10722:5: (lv_schedule_14_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:10722:5: (lv_schedule_14_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:10723:6: lv_schedule_14_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getScheduleScheduleObjectReferenceParserRuleCall_5_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_60);
                    	    lv_schedule_14_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_14_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt354 >= 1 ) break loop354;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(354, input);
                                throw eee;
                        }
                        cnt354++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceCallEffect"


    // $ANTLR start "entryRuleFunctionCallEffect"
    // InternalSCTX.g:10745:1: entryRuleFunctionCallEffect returns [EObject current=null] : iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF ;
    public final EObject entryRuleFunctionCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionCallEffect = null;


        try {
            // InternalSCTX.g:10745:59: (iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF )
            // InternalSCTX.g:10746:2: iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunctionCallEffect=ruleFunctionCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionCallEffect"


    // $ANTLR start "ruleFunctionCallEffect"
    // InternalSCTX.g:10752:1: ruleFunctionCallEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ) ;
    public final EObject ruleFunctionCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_functionName_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parameters_4_0 = null;

        EObject lv_parameters_6_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:10758:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ) )
            // InternalSCTX.g:10759:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
            {
            // InternalSCTX.g:10759:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
            // InternalSCTX.g:10760:3: ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            {
            // InternalSCTX.g:10760:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop356:
            do {
                int alt356=2;
                int LA356_0 = input.LA(1);

                if ( (LA356_0==RULE_COMMENT_ANNOTATION||LA356_0==103) ) {
                    alt356=1;
                }


                switch (alt356) {
            	case 1 :
            	    // InternalSCTX.g:10761:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:10761:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:10762:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_175);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop356;
                }
            } while (true);

            // InternalSCTX.g:10779:3: (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            // InternalSCTX.g:10780:4: otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            {
            otherlv_1=(Token)match(input,80,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_1, grammarAccess.getFunctionCallEffectAccess().getExternKeyword_1_0());
              			
            }
            // InternalSCTX.g:10784:4: ( (lv_functionName_2_0= RULE_ID ) )
            // InternalSCTX.g:10785:5: (lv_functionName_2_0= RULE_ID )
            {
            // InternalSCTX.g:10785:5: (lv_functionName_2_0= RULE_ID )
            // InternalSCTX.g:10786:6: lv_functionName_2_0= RULE_ID
            {
            lv_functionName_2_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_120); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						newLeafNode(lv_functionName_2_0, grammarAccess.getFunctionCallEffectAccess().getFunctionNameIDTerminalRuleCall_1_1_0());
              					
            }
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElement(grammarAccess.getFunctionCallEffectRule());
              						}
              						setWithLastConsumed(
              							current,
              							"functionName",
              							lv_functionName_2_0,
              							"de.cau.cs.kieler.annotations.Annotations.ID");
              					
            }

            }


            }

            // InternalSCTX.g:10802:4: ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            int alt358=2;
            int LA358_0 = input.LA(1);

            if ( (LA358_0==31) ) {
                alt358=1;
            }
            else if ( (LA358_0==70) ) {
                alt358=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 358, 0, input);

                throw nvae;
            }
            switch (alt358) {
                case 1 :
                    // InternalSCTX.g:10803:5: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    {
                    // InternalSCTX.g:10803:5: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    // InternalSCTX.g:10804:6: otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')'
                    {
                    otherlv_3=(Token)match(input,31,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_3, grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisKeyword_1_2_0_0());
                      					
                    }
                    // InternalSCTX.g:10808:6: ( (lv_parameters_4_0= ruleParameter ) )
                    // InternalSCTX.g:10809:7: (lv_parameters_4_0= ruleParameter )
                    {
                    // InternalSCTX.g:10809:7: (lv_parameters_4_0= ruleParameter )
                    // InternalSCTX.g:10810:8: lv_parameters_4_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_1_2_0_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_parameters_4_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
                      								}
                      								add(
                      									current,
                      									"parameters",
                      									lv_parameters_4_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSCTX.g:10827:6: (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )*
                    loop357:
                    do {
                        int alt357=2;
                        int LA357_0 = input.LA(1);

                        if ( (LA357_0==20) ) {
                            alt357=1;
                        }


                        switch (alt357) {
                    	case 1 :
                    	    // InternalSCTX.g:10828:7: otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) )
                    	    {
                    	    otherlv_5=(Token)match(input,20,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_5, grammarAccess.getFunctionCallEffectAccess().getCommaKeyword_1_2_0_2_0());
                    	      						
                    	    }
                    	    // InternalSCTX.g:10832:7: ( (lv_parameters_6_0= ruleParameter ) )
                    	    // InternalSCTX.g:10833:8: (lv_parameters_6_0= ruleParameter )
                    	    {
                    	    // InternalSCTX.g:10833:8: (lv_parameters_6_0= ruleParameter )
                    	    // InternalSCTX.g:10834:9: lv_parameters_6_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      									newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_1_2_0_2_1_0());
                    	      								
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_31);
                    	    lv_parameters_6_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									if (current==null) {
                    	      										current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
                    	      									}
                    	      									add(
                    	      										current,
                    	      										"parameters",
                    	      										lv_parameters_6_0,
                    	      										"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      									afterParserOrEnumRuleCall();
                    	      								
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop357;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_7, grammarAccess.getFunctionCallEffectAccess().getRightParenthesisKeyword_1_2_0_3());
                      					
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:10858:5: otherlv_8= '()'
                    {
                    otherlv_8=(Token)match(input,70,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_1_2_1());
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionCallEffect"


    // $ANTLR start "entryRulePrintCallEffect"
    // InternalSCTX.g:10868:1: entryRulePrintCallEffect returns [EObject current=null] : iv_rulePrintCallEffect= rulePrintCallEffect EOF ;
    public final EObject entryRulePrintCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrintCallEffect = null;


        try {
            // InternalSCTX.g:10868:56: (iv_rulePrintCallEffect= rulePrintCallEffect EOF )
            // InternalSCTX.g:10869:2: iv_rulePrintCallEffect= rulePrintCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrintCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrintCallEffect=rulePrintCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrintCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrintCallEffect"


    // $ANTLR start "rulePrintCallEffect"
    // InternalSCTX.g:10875:1: rulePrintCallEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject rulePrintCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;

        EObject lv_schedule_8_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:10881:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:10882:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:10882:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:10883:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:10883:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop359:
            do {
                int alt359=2;
                int LA359_0 = input.LA(1);

                if ( (LA359_0==RULE_COMMENT_ANNOTATION||LA359_0==103) ) {
                    alt359=1;
                }


                switch (alt359) {
            	case 1 :
            	    // InternalSCTX.g:10884:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:10884:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:10885:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPrintCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_176);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop359;
                }
            } while (true);

            otherlv_1=(Token)match(input,84,FollowSets000.FOLLOW_140); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getPrintCallEffectAccess().getPrintKeyword_1());
              		
            }
            // InternalSCTX.g:10906:3: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
            // InternalSCTX.g:10907:4: otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')'
            {
            otherlv_2=(Token)match(input,31,FollowSets000.FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_2, grammarAccess.getPrintCallEffectAccess().getLeftParenthesisKeyword_2_0());
              			
            }
            // InternalSCTX.g:10911:4: ( (lv_parameters_3_0= ruleParameter ) )
            // InternalSCTX.g:10912:5: (lv_parameters_3_0= ruleParameter )
            {
            // InternalSCTX.g:10912:5: (lv_parameters_3_0= ruleParameter )
            // InternalSCTX.g:10913:6: lv_parameters_3_0= ruleParameter
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getPrintCallEffectAccess().getParametersParameterParserRuleCall_2_1_0());
              					
            }
            pushFollow(FollowSets000.FOLLOW_31);
            lv_parameters_3_0=ruleParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
              						}
              						add(
              							current,
              							"parameters",
              							lv_parameters_3_0,
              							"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }

            // InternalSCTX.g:10930:4: (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )*
            loop360:
            do {
                int alt360=2;
                int LA360_0 = input.LA(1);

                if ( (LA360_0==20) ) {
                    alt360=1;
                }


                switch (alt360) {
            	case 1 :
            	    // InternalSCTX.g:10931:5: otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) )
            	    {
            	    otherlv_4=(Token)match(input,20,FollowSets000.FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_4, grammarAccess.getPrintCallEffectAccess().getCommaKeyword_2_2_0());
            	      				
            	    }
            	    // InternalSCTX.g:10935:5: ( (lv_parameters_5_0= ruleParameter ) )
            	    // InternalSCTX.g:10936:6: (lv_parameters_5_0= ruleParameter )
            	    {
            	    // InternalSCTX.g:10936:6: (lv_parameters_5_0= ruleParameter )
            	    // InternalSCTX.g:10937:7: lv_parameters_5_0= ruleParameter
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getPrintCallEffectAccess().getParametersParameterParserRuleCall_2_2_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_31);
            	    lv_parameters_5_0=ruleParameter();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
            	      							}
            	      							add(
            	      								current,
            	      								"parameters",
            	      								lv_parameters_5_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop360;
                }
            } while (true);

            otherlv_6=(Token)match(input,32,FollowSets000.FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_6, grammarAccess.getPrintCallEffectAccess().getRightParenthesisKeyword_2_3());
              			
            }

            }

            // InternalSCTX.g:10960:3: (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )?
            int alt362=2;
            int LA362_0 = input.LA(1);

            if ( (LA362_0==29) ) {
                alt362=1;
            }
            switch (alt362) {
                case 1 :
                    // InternalSCTX.g:10961:4: otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_7=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getPrintCallEffectAccess().getScheduleKeyword_3_0());
                      			
                    }
                    // InternalSCTX.g:10965:4: ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+
                    int cnt361=0;
                    loop361:
                    do {
                        int alt361=2;
                        alt361 = dfa361.predict(input);
                        switch (alt361) {
                    	case 1 :
                    	    // InternalSCTX.g:10966:5: (lv_schedule_8_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:10966:5: (lv_schedule_8_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:10967:6: lv_schedule_8_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getPrintCallEffectAccess().getScheduleScheduleObjectReferenceParserRuleCall_3_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_60);
                    	    lv_schedule_8_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_8_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt361 >= 1 ) break loop361;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(361, input);
                                throw eee;
                        }
                        cnt361++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrintCallEffect"


    // $ANTLR start "entryRuleRandomizeCallEffect"
    // InternalSCTX.g:10989:1: entryRuleRandomizeCallEffect returns [EObject current=null] : iv_ruleRandomizeCallEffect= ruleRandomizeCallEffect EOF ;
    public final EObject entryRuleRandomizeCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRandomizeCallEffect = null;


        try {
            // InternalSCTX.g:10989:60: (iv_ruleRandomizeCallEffect= ruleRandomizeCallEffect EOF )
            // InternalSCTX.g:10990:2: iv_ruleRandomizeCallEffect= ruleRandomizeCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRandomizeCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRandomizeCallEffect=ruleRandomizeCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRandomizeCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRandomizeCallEffect"


    // $ANTLR start "ruleRandomizeCallEffect"
    // InternalSCTX.g:10996:1: ruleRandomizeCallEffect returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ;
    public final EObject ruleRandomizeCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_parameters_4_0 = null;

        EObject lv_parameters_6_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:11002:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
            // InternalSCTX.g:11003:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            {
            // InternalSCTX.g:11003:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            // InternalSCTX.g:11004:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            {
            // InternalSCTX.g:11004:3: ()
            // InternalSCTX.g:11005:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRandomizeCallEffectAccess().getRandomizeCallEffectAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:11014:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop363:
            do {
                int alt363=2;
                int LA363_0 = input.LA(1);

                if ( (LA363_0==RULE_COMMENT_ANNOTATION||LA363_0==103) ) {
                    alt363=1;
                }


                switch (alt363) {
            	case 1 :
            	    // InternalSCTX.g:11015:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:11015:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:11016:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRandomizeCallEffectAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_177);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRandomizeCallEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop363;
                }
            } while (true);

            otherlv_2=(Token)match(input,85,FollowSets000.FOLLOW_120); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getRandomizeCallEffectAccess().getRandomizeKeyword_2());
              		
            }
            // InternalSCTX.g:11037:3: ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            int alt365=2;
            int LA365_0 = input.LA(1);

            if ( (LA365_0==31) ) {
                alt365=1;
            }
            else if ( (LA365_0==70) ) {
                alt365=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 365, 0, input);

                throw nvae;
            }
            switch (alt365) {
                case 1 :
                    // InternalSCTX.g:11038:4: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    {
                    // InternalSCTX.g:11038:4: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    // InternalSCTX.g:11039:5: otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')'
                    {
                    otherlv_3=(Token)match(input,31,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getRandomizeCallEffectAccess().getLeftParenthesisKeyword_3_0_0());
                      				
                    }
                    // InternalSCTX.g:11043:5: ( (lv_parameters_4_0= ruleParameter ) )
                    // InternalSCTX.g:11044:6: (lv_parameters_4_0= ruleParameter )
                    {
                    // InternalSCTX.g:11044:6: (lv_parameters_4_0= ruleParameter )
                    // InternalSCTX.g:11045:7: lv_parameters_4_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRandomizeCallEffectAccess().getParametersParameterParserRuleCall_3_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_parameters_4_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRandomizeCallEffectRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_4_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:11062:5: (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )*
                    loop364:
                    do {
                        int alt364=2;
                        int LA364_0 = input.LA(1);

                        if ( (LA364_0==20) ) {
                            alt364=1;
                        }


                        switch (alt364) {
                    	case 1 :
                    	    // InternalSCTX.g:11063:6: otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) )
                    	    {
                    	    otherlv_5=(Token)match(input,20,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_5, grammarAccess.getRandomizeCallEffectAccess().getCommaKeyword_3_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCTX.g:11067:6: ( (lv_parameters_6_0= ruleParameter ) )
                    	    // InternalSCTX.g:11068:7: (lv_parameters_6_0= ruleParameter )
                    	    {
                    	    // InternalSCTX.g:11068:7: (lv_parameters_6_0= ruleParameter )
                    	    // InternalSCTX.g:11069:8: lv_parameters_6_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getRandomizeCallEffectAccess().getParametersParameterParserRuleCall_3_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_31);
                    	    lv_parameters_6_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getRandomizeCallEffectRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_6_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop364;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getRandomizeCallEffectAccess().getRightParenthesisKeyword_3_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:11093:4: otherlv_8= '()'
                    {
                    otherlv_8=(Token)match(input,70,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getRandomizeCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRandomizeCallEffect"


    // $ANTLR start "entryRuleExpression"
    // InternalSCTX.g:11102:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalSCTX.g:11102:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalSCTX.g:11103:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalSCTX.g:11109:1: ruleExpression returns [EObject current=null] : (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression ) ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BoolExpression_0 = null;

        EObject this_ValuedExpression_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:11115:2: ( (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression ) )
            // InternalSCTX.g:11116:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression )
            {
            // InternalSCTX.g:11116:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression )
            int alt366=2;
            alt366 = dfa366.predict(input);
            switch (alt366) {
                case 1 :
                    // InternalSCTX.g:11117:3: this_BoolExpression_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionAccess().getBoolExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolExpression_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoolExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:11129:3: this_ValuedExpression_1= ruleValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionAccess().getValuedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedExpression_1=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleBoolExpression"
    // InternalSCTX.g:11144:1: entryRuleBoolExpression returns [EObject current=null] : iv_ruleBoolExpression= ruleBoolExpression EOF ;
    public final EObject entryRuleBoolExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBoolExpression = null;


        try {
            // InternalSCTX.g:11144:55: (iv_ruleBoolExpression= ruleBoolExpression EOF )
            // InternalSCTX.g:11145:2: iv_ruleBoolExpression= ruleBoolExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBoolExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBoolExpression=ruleBoolExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBoolExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBoolExpression"


    // $ANTLR start "ruleBoolExpression"
    // InternalSCTX.g:11151:1: ruleBoolExpression returns [EObject current=null] : this_LogicalOrExpression_0= ruleLogicalOrExpression ;
    public final EObject ruleBoolExpression() throws RecognitionException {
        EObject current = null;

        EObject this_LogicalOrExpression_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:11157:2: (this_LogicalOrExpression_0= ruleLogicalOrExpression )
            // InternalSCTX.g:11158:2: this_LogicalOrExpression_0= ruleLogicalOrExpression
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getBoolExpressionAccess().getLogicalOrExpressionParserRuleCall());
              	
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_LogicalOrExpression_0=ruleLogicalOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_LogicalOrExpression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBoolExpression"


    // $ANTLR start "entryRuleLogicalOrExpression"
    // InternalSCTX.g:11172:1: entryRuleLogicalOrExpression returns [EObject current=null] : iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF ;
    public final EObject entryRuleLogicalOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalOrExpression = null;


        try {
            // InternalSCTX.g:11172:60: (iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF )
            // InternalSCTX.g:11173:2: iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLogicalOrExpression=ruleLogicalOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalOrExpression"


    // $ANTLR start "ruleLogicalOrExpression"
    // InternalSCTX.g:11179:1: ruleLogicalOrExpression returns [EObject current=null] : (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? ) ;
    public final EObject ruleLogicalOrExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_LogicalAndExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:11185:2: ( (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? ) )
            // InternalSCTX.g:11186:2: (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? )
            {
            // InternalSCTX.g:11186:2: (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? )
            // InternalSCTX.g:11187:3: this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_178);
            this_LogicalAndExpression_0=ruleLogicalAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LogicalAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:11198:3: ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )?
            int alt368=2;
            int LA368_0 = input.LA(1);

            if ( (LA368_0==86) ) {
                alt368=1;
            }
            switch (alt368) {
                case 1 :
                    // InternalSCTX.g:11199:4: () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )*
                    {
                    // InternalSCTX.g:11199:4: ()
                    // InternalSCTX.g:11200:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getLogicalOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:11209:4: ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) )
                    // InternalSCTX.g:11210:5: ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) )
                    {
                    // InternalSCTX.g:11210:5: ( (lv_operator_2_0= ruleLogicalOrOperator ) )
                    // InternalSCTX.g:11211:6: (lv_operator_2_0= ruleLogicalOrOperator )
                    {
                    // InternalSCTX.g:11211:6: (lv_operator_2_0= ruleLogicalOrOperator )
                    // InternalSCTX.g:11212:7: lv_operator_2_0= ruleLogicalOrOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getOperatorLogicalOrOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_39);
                    lv_operator_2_0=ruleLogicalOrOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.LogicalOrOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:11229:5: ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) )
                    // InternalSCTX.g:11230:6: (lv_subExpressions_3_0= ruleLogicalAndExpression )
                    {
                    // InternalSCTX.g:11230:6: (lv_subExpressions_3_0= ruleLogicalAndExpression )
                    // InternalSCTX.g:11231:7: lv_subExpressions_3_0= ruleLogicalAndExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_178);
                    lv_subExpressions_3_0=ruleLogicalAndExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.LogicalAndExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:11249:4: (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )*
                    loop367:
                    do {
                        int alt367=2;
                        int LA367_0 = input.LA(1);

                        if ( (LA367_0==86) ) {
                            alt367=1;
                        }


                        switch (alt367) {
                    	case 1 :
                    	    // InternalSCTX.g:11250:5: otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,86,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getLogicalOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:11254:5: ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) )
                    	    // InternalSCTX.g:11255:6: (lv_subExpressions_5_0= ruleLogicalAndExpression )
                    	    {
                    	    // InternalSCTX.g:11255:6: (lv_subExpressions_5_0= ruleLogicalAndExpression )
                    	    // InternalSCTX.g:11256:7: lv_subExpressions_5_0= ruleLogicalAndExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_178);
                    	    lv_subExpressions_5_0=ruleLogicalAndExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.LogicalAndExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop367;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalOrExpression"


    // $ANTLR start "entryRuleLogicalAndExpression"
    // InternalSCTX.g:11279:1: entryRuleLogicalAndExpression returns [EObject current=null] : iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF ;
    public final EObject entryRuleLogicalAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalAndExpression = null;


        try {
            // InternalSCTX.g:11279:61: (iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF )
            // InternalSCTX.g:11280:2: iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalAndExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLogicalAndExpression=ruleLogicalAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalAndExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalAndExpression"


    // $ANTLR start "ruleLogicalAndExpression"
    // InternalSCTX.g:11286:1: ruleLogicalAndExpression returns [EObject current=null] : (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? ) ;
    public final EObject ruleLogicalAndExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_BitwiseOrExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:11292:2: ( (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? ) )
            // InternalSCTX.g:11293:2: (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? )
            {
            // InternalSCTX.g:11293:2: (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? )
            // InternalSCTX.g:11294:3: this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getBitwiseOrExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_179);
            this_BitwiseOrExpression_0=ruleBitwiseOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BitwiseOrExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:11305:3: ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )?
            int alt370=2;
            int LA370_0 = input.LA(1);

            if ( (LA370_0==87) ) {
                alt370=1;
            }
            switch (alt370) {
                case 1 :
                    // InternalSCTX.g:11306:4: () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )*
                    {
                    // InternalSCTX.g:11306:4: ()
                    // InternalSCTX.g:11307:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getLogicalAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:11316:4: ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) )
                    // InternalSCTX.g:11317:5: ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) )
                    {
                    // InternalSCTX.g:11317:5: ( (lv_operator_2_0= ruleLogicalAndOperator ) )
                    // InternalSCTX.g:11318:6: (lv_operator_2_0= ruleLogicalAndOperator )
                    {
                    // InternalSCTX.g:11318:6: (lv_operator_2_0= ruleLogicalAndOperator )
                    // InternalSCTX.g:11319:7: lv_operator_2_0= ruleLogicalAndOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getOperatorLogicalAndOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_39);
                    lv_operator_2_0=ruleLogicalAndOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.LogicalAndOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:11336:5: ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) )
                    // InternalSCTX.g:11337:6: (lv_subExpressions_3_0= ruleBitwiseOrExpression )
                    {
                    // InternalSCTX.g:11337:6: (lv_subExpressions_3_0= ruleBitwiseOrExpression )
                    // InternalSCTX.g:11338:7: lv_subExpressions_3_0= ruleBitwiseOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsBitwiseOrExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_179);
                    lv_subExpressions_3_0=ruleBitwiseOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseOrExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:11356:4: (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )*
                    loop369:
                    do {
                        int alt369=2;
                        int LA369_0 = input.LA(1);

                        if ( (LA369_0==87) ) {
                            alt369=1;
                        }


                        switch (alt369) {
                    	case 1 :
                    	    // InternalSCTX.g:11357:5: otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,87,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getLogicalAndExpressionAccess().getAmpersandAmpersandKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:11361:5: ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) )
                    	    // InternalSCTX.g:11362:6: (lv_subExpressions_5_0= ruleBitwiseOrExpression )
                    	    {
                    	    // InternalSCTX.g:11362:6: (lv_subExpressions_5_0= ruleBitwiseOrExpression )
                    	    // InternalSCTX.g:11363:7: lv_subExpressions_5_0= ruleBitwiseOrExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsBitwiseOrExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_179);
                    	    lv_subExpressions_5_0=ruleBitwiseOrExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseOrExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop369;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalAndExpression"


    // $ANTLR start "entryRuleBitwiseOrExpression"
    // InternalSCTX.g:11386:1: entryRuleBitwiseOrExpression returns [EObject current=null] : iv_ruleBitwiseOrExpression= ruleBitwiseOrExpression EOF ;
    public final EObject entryRuleBitwiseOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseOrExpression = null;


        try {
            // InternalSCTX.g:11386:60: (iv_ruleBitwiseOrExpression= ruleBitwiseOrExpression EOF )
            // InternalSCTX.g:11387:2: iv_ruleBitwiseOrExpression= ruleBitwiseOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseOrExpression=ruleBitwiseOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseOrExpression"


    // $ANTLR start "ruleBitwiseOrExpression"
    // InternalSCTX.g:11393:1: ruleBitwiseOrExpression returns [EObject current=null] : (this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )? ) ;
    public final EObject ruleBitwiseOrExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_BitwiseXOrExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:11399:2: ( (this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )? ) )
            // InternalSCTX.g:11400:2: (this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )? )
            {
            // InternalSCTX.g:11400:2: (this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )? )
            // InternalSCTX.g:11401:3: this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getBitwiseXOrExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_180);
            this_BitwiseXOrExpression_0=ruleBitwiseXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BitwiseXOrExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:11412:3: ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )?
            int alt372=2;
            int LA372_0 = input.LA(1);

            if ( (LA372_0==88) ) {
                alt372=1;
            }
            switch (alt372) {
                case 1 :
                    // InternalSCTX.g:11413:4: () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )*
                    {
                    // InternalSCTX.g:11413:4: ()
                    // InternalSCTX.g:11414:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getBitwiseOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:11423:4: ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) )
                    // InternalSCTX.g:11424:5: ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) )
                    {
                    // InternalSCTX.g:11424:5: ( (lv_operator_2_0= ruleBitwiseOrOperator ) )
                    // InternalSCTX.g:11425:6: (lv_operator_2_0= ruleBitwiseOrOperator )
                    {
                    // InternalSCTX.g:11425:6: (lv_operator_2_0= ruleBitwiseOrOperator )
                    // InternalSCTX.g:11426:7: lv_operator_2_0= ruleBitwiseOrOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getOperatorBitwiseOrOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_39);
                    lv_operator_2_0=ruleBitwiseOrOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseOrExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseOrOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:11443:5: ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) )
                    // InternalSCTX.g:11444:6: (lv_subExpressions_3_0= ruleBitwiseXOrExpression )
                    {
                    // InternalSCTX.g:11444:6: (lv_subExpressions_3_0= ruleBitwiseXOrExpression )
                    // InternalSCTX.g:11445:7: lv_subExpressions_3_0= ruleBitwiseXOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsBitwiseXOrExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_180);
                    lv_subExpressions_3_0=ruleBitwiseXOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseOrExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseXOrExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:11463:4: (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )*
                    loop371:
                    do {
                        int alt371=2;
                        int LA371_0 = input.LA(1);

                        if ( (LA371_0==88) ) {
                            alt371=1;
                        }


                        switch (alt371) {
                    	case 1 :
                    	    // InternalSCTX.g:11464:5: otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,88,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getBitwiseOrExpressionAccess().getVerticalLineKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:11468:5: ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) )
                    	    // InternalSCTX.g:11469:6: (lv_subExpressions_5_0= ruleBitwiseXOrExpression )
                    	    {
                    	    // InternalSCTX.g:11469:6: (lv_subExpressions_5_0= ruleBitwiseXOrExpression )
                    	    // InternalSCTX.g:11470:7: lv_subExpressions_5_0= ruleBitwiseXOrExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsBitwiseXOrExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_180);
                    	    lv_subExpressions_5_0=ruleBitwiseXOrExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getBitwiseOrExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseXOrExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop371;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseOrExpression"


    // $ANTLR start "entryRuleBitwiseXOrExpression"
    // InternalSCTX.g:11493:1: entryRuleBitwiseXOrExpression returns [EObject current=null] : iv_ruleBitwiseXOrExpression= ruleBitwiseXOrExpression EOF ;
    public final EObject entryRuleBitwiseXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseXOrExpression = null;


        try {
            // InternalSCTX.g:11493:61: (iv_ruleBitwiseXOrExpression= ruleBitwiseXOrExpression EOF )
            // InternalSCTX.g:11494:2: iv_ruleBitwiseXOrExpression= ruleBitwiseXOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseXOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseXOrExpression=ruleBitwiseXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseXOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseXOrExpression"


    // $ANTLR start "ruleBitwiseXOrExpression"
    // InternalSCTX.g:11500:1: ruleBitwiseXOrExpression returns [EObject current=null] : (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? ) ;
    public final EObject ruleBitwiseXOrExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_BitwiseAndExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:11506:2: ( (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? ) )
            // InternalSCTX.g:11507:2: (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? )
            {
            // InternalSCTX.g:11507:2: (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? )
            // InternalSCTX.g:11508:3: this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getBitwiseAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_181);
            this_BitwiseAndExpression_0=ruleBitwiseAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BitwiseAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:11519:3: ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )?
            int alt374=2;
            int LA374_0 = input.LA(1);

            if ( (LA374_0==89) ) {
                alt374=1;
            }
            switch (alt374) {
                case 1 :
                    // InternalSCTX.g:11520:4: () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )*
                    {
                    // InternalSCTX.g:11520:4: ()
                    // InternalSCTX.g:11521:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getBitwiseXOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:11530:4: ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) )
                    // InternalSCTX.g:11531:5: ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) )
                    {
                    // InternalSCTX.g:11531:5: ( (lv_operator_2_0= ruleBitwiseXOrOperator ) )
                    // InternalSCTX.g:11532:6: (lv_operator_2_0= ruleBitwiseXOrOperator )
                    {
                    // InternalSCTX.g:11532:6: (lv_operator_2_0= ruleBitwiseXOrOperator )
                    // InternalSCTX.g:11533:7: lv_operator_2_0= ruleBitwiseXOrOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getOperatorBitwiseXOrOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_39);
                    lv_operator_2_0=ruleBitwiseXOrOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseXOrExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseXOrOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:11550:5: ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) )
                    // InternalSCTX.g:11551:6: (lv_subExpressions_3_0= ruleBitwiseAndExpression )
                    {
                    // InternalSCTX.g:11551:6: (lv_subExpressions_3_0= ruleBitwiseAndExpression )
                    // InternalSCTX.g:11552:7: lv_subExpressions_3_0= ruleBitwiseAndExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_181);
                    lv_subExpressions_3_0=ruleBitwiseAndExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseXOrExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:11570:4: (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )*
                    loop373:
                    do {
                        int alt373=2;
                        int LA373_0 = input.LA(1);

                        if ( (LA373_0==89) ) {
                            alt373=1;
                        }


                        switch (alt373) {
                    	case 1 :
                    	    // InternalSCTX.g:11571:5: otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,89,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getBitwiseXOrExpressionAccess().getCircumflexAccentKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:11575:5: ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) )
                    	    // InternalSCTX.g:11576:6: (lv_subExpressions_5_0= ruleBitwiseAndExpression )
                    	    {
                    	    // InternalSCTX.g:11576:6: (lv_subExpressions_5_0= ruleBitwiseAndExpression )
                    	    // InternalSCTX.g:11577:7: lv_subExpressions_5_0= ruleBitwiseAndExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_181);
                    	    lv_subExpressions_5_0=ruleBitwiseAndExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getBitwiseXOrExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop373;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseXOrExpression"


    // $ANTLR start "entryRuleBitwiseAndExpression"
    // InternalSCTX.g:11600:1: entryRuleBitwiseAndExpression returns [EObject current=null] : iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF ;
    public final EObject entryRuleBitwiseAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseAndExpression = null;


        try {
            // InternalSCTX.g:11600:61: (iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF )
            // InternalSCTX.g:11601:2: iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseAndExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseAndExpression=ruleBitwiseAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseAndExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseAndExpression"


    // $ANTLR start "ruleBitwiseAndExpression"
    // InternalSCTX.g:11607:1: ruleBitwiseAndExpression returns [EObject current=null] : (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? ) ;
    public final EObject ruleBitwiseAndExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_CompareOperation_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:11613:2: ( (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? ) )
            // InternalSCTX.g:11614:2: (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? )
            {
            // InternalSCTX.g:11614:2: (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? )
            // InternalSCTX.g:11615:3: this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getCompareOperationParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_182);
            this_CompareOperation_0=ruleCompareOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_CompareOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:11626:3: ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )?
            int alt376=2;
            int LA376_0 = input.LA(1);

            if ( (LA376_0==34) ) {
                alt376=1;
            }
            switch (alt376) {
                case 1 :
                    // InternalSCTX.g:11627:4: () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )*
                    {
                    // InternalSCTX.g:11627:4: ()
                    // InternalSCTX.g:11628:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getBitwiseAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:11637:4: ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) )
                    // InternalSCTX.g:11638:5: ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) )
                    {
                    // InternalSCTX.g:11638:5: ( (lv_operator_2_0= ruleBitwiseAndOperator ) )
                    // InternalSCTX.g:11639:6: (lv_operator_2_0= ruleBitwiseAndOperator )
                    {
                    // InternalSCTX.g:11639:6: (lv_operator_2_0= ruleBitwiseAndOperator )
                    // InternalSCTX.g:11640:7: lv_operator_2_0= ruleBitwiseAndOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getOperatorBitwiseAndOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_39);
                    lv_operator_2_0=ruleBitwiseAndOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:11657:5: ( (lv_subExpressions_3_0= ruleCompareOperation ) )
                    // InternalSCTX.g:11658:6: (lv_subExpressions_3_0= ruleCompareOperation )
                    {
                    // InternalSCTX.g:11658:6: (lv_subExpressions_3_0= ruleCompareOperation )
                    // InternalSCTX.g:11659:7: lv_subExpressions_3_0= ruleCompareOperation
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_182);
                    lv_subExpressions_3_0=ruleCompareOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperation");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:11677:4: (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )*
                    loop375:
                    do {
                        int alt375=2;
                        int LA375_0 = input.LA(1);

                        if ( (LA375_0==34) ) {
                            alt375=1;
                        }


                        switch (alt375) {
                    	case 1 :
                    	    // InternalSCTX.g:11678:5: otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) )
                    	    {
                    	    otherlv_4=(Token)match(input,34,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getBitwiseAndExpressionAccess().getAmpersandKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:11682:5: ( (lv_subExpressions_5_0= ruleCompareOperation ) )
                    	    // InternalSCTX.g:11683:6: (lv_subExpressions_5_0= ruleCompareOperation )
                    	    {
                    	    // InternalSCTX.g:11683:6: (lv_subExpressions_5_0= ruleCompareOperation )
                    	    // InternalSCTX.g:11684:7: lv_subExpressions_5_0= ruleCompareOperation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_182);
                    	    lv_subExpressions_5_0=ruleCompareOperation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperation");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop375;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseAndExpression"


    // $ANTLR start "entryRuleCompareOperation"
    // InternalSCTX.g:11707:1: entryRuleCompareOperation returns [EObject current=null] : iv_ruleCompareOperation= ruleCompareOperation EOF ;
    public final EObject entryRuleCompareOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompareOperation = null;


        try {
            // InternalSCTX.g:11707:57: (iv_ruleCompareOperation= ruleCompareOperation EOF )
            // InternalSCTX.g:11708:2: iv_ruleCompareOperation= ruleCompareOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompareOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCompareOperation=ruleCompareOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCompareOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCompareOperation"


    // $ANTLR start "ruleCompareOperation"
    // InternalSCTX.g:11714:1: ruleCompareOperation returns [EObject current=null] : (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? ) ;
    public final EObject ruleCompareOperation() throws RecognitionException {
        EObject current = null;

        EObject this_NotOrValuedExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:11720:2: ( (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? ) )
            // InternalSCTX.g:11721:2: (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? )
            {
            // InternalSCTX.g:11721:2: (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? )
            // InternalSCTX.g:11722:3: this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getCompareOperationAccess().getNotOrValuedExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_183);
            this_NotOrValuedExpression_0=ruleNotOrValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NotOrValuedExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:11733:3: ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )?
            int alt377=2;
            int LA377_0 = input.LA(1);

            if ( ((LA377_0>=136 && LA377_0<=141)) ) {
                alt377=1;
            }
            switch (alt377) {
                case 1 :
                    // InternalSCTX.g:11734:4: () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) )
                    {
                    // InternalSCTX.g:11734:4: ()
                    // InternalSCTX.g:11735:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getCompareOperationAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:11744:4: ( (lv_operator_2_0= ruleCompareOperator ) )
                    // InternalSCTX.g:11745:5: (lv_operator_2_0= ruleCompareOperator )
                    {
                    // InternalSCTX.g:11745:5: (lv_operator_2_0= ruleCompareOperator )
                    // InternalSCTX.g:11746:6: lv_operator_2_0= ruleCompareOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCompareOperationAccess().getOperatorCompareOperatorEnumRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_39);
                    lv_operator_2_0=ruleCompareOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCompareOperationRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:11763:4: ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) )
                    // InternalSCTX.g:11764:5: (lv_subExpressions_3_0= ruleNotOrValuedExpression )
                    {
                    // InternalSCTX.g:11764:5: (lv_subExpressions_3_0= ruleNotOrValuedExpression )
                    // InternalSCTX.g:11765:6: lv_subExpressions_3_0= ruleNotOrValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCompareOperationAccess().getSubExpressionsNotOrValuedExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_3_0=ruleNotOrValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCompareOperationRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.NotOrValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompareOperation"


    // $ANTLR start "entryRuleNotOrValuedExpression"
    // InternalSCTX.g:11787:1: entryRuleNotOrValuedExpression returns [EObject current=null] : iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF ;
    public final EObject entryRuleNotOrValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNotOrValuedExpression = null;


        try {
            // InternalSCTX.g:11787:62: (iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF )
            // InternalSCTX.g:11788:2: iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNotOrValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNotOrValuedExpression=ruleNotOrValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNotOrValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNotOrValuedExpression"


    // $ANTLR start "ruleNotOrValuedExpression"
    // InternalSCTX.g:11794:1: ruleNotOrValuedExpression returns [EObject current=null] : (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression ) ;
    public final EObject ruleNotOrValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ValuedExpression_0 = null;

        EObject this_NotExpression_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:11800:2: ( (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression ) )
            // InternalSCTX.g:11801:2: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )
            {
            // InternalSCTX.g:11801:2: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )
            int alt378=2;
            alt378 = dfa378.predict(input);
            switch (alt378) {
                case 1 :
                    // InternalSCTX.g:11802:3: this_ValuedExpression_0= ruleValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNotOrValuedExpressionAccess().getValuedExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedExpression_0=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:11814:3: this_NotExpression_1= ruleNotExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNotOrValuedExpressionAccess().getNotExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NotExpression_1=ruleNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NotExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotOrValuedExpression"


    // $ANTLR start "entryRuleBitwiseNotExpression"
    // InternalSCTX.g:11829:1: entryRuleBitwiseNotExpression returns [EObject current=null] : iv_ruleBitwiseNotExpression= ruleBitwiseNotExpression EOF ;
    public final EObject entryRuleBitwiseNotExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseNotExpression = null;


        try {
            // InternalSCTX.g:11829:61: (iv_ruleBitwiseNotExpression= ruleBitwiseNotExpression EOF )
            // InternalSCTX.g:11830:2: iv_ruleBitwiseNotExpression= ruleBitwiseNotExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseNotExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseNotExpression=ruleBitwiseNotExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseNotExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseNotExpression"


    // $ANTLR start "ruleBitwiseNotExpression"
    // InternalSCTX.g:11836:1: ruleBitwiseNotExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression ) ;
    public final EObject ruleBitwiseNotExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_AtomicExpression_3 = null;



        	enterRule();

        try {
            // InternalSCTX.g:11842:2: ( ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression ) )
            // InternalSCTX.g:11843:2: ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression )
            {
            // InternalSCTX.g:11843:2: ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression )
            int alt379=2;
            int LA379_0 = input.LA(1);

            if ( (LA379_0==143) ) {
                alt379=1;
            }
            else if ( (LA379_0==RULE_ID||(LA379_0>=RULE_HOSTCODE && LA379_0<=RULE_COMMENT_ANNOTATION)||LA379_0==31||LA379_0==80||LA379_0==85||LA379_0==99||LA379_0==103||LA379_0==142||LA379_0==144) ) {
                alt379=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 379, 0, input);

                throw nvae;
            }
            switch (alt379) {
                case 1 :
                    // InternalSCTX.g:11844:3: ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) )
                    {
                    // InternalSCTX.g:11844:3: ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) )
                    // InternalSCTX.g:11845:4: () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) )
                    {
                    // InternalSCTX.g:11845:4: ()
                    // InternalSCTX.g:11846:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getBitwiseNotExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:11855:4: ( (lv_operator_1_0= ruleBitwiseNotOperator ) )
                    // InternalSCTX.g:11856:5: (lv_operator_1_0= ruleBitwiseNotOperator )
                    {
                    // InternalSCTX.g:11856:5: (lv_operator_1_0= ruleBitwiseNotOperator )
                    // InternalSCTX.g:11857:6: lv_operator_1_0= ruleBitwiseNotOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBitwiseNotExpressionAccess().getOperatorBitwiseNotOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_39);
                    lv_operator_1_0=ruleBitwiseNotOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBitwiseNotExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseNotOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:11874:4: ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) )
                    // InternalSCTX.g:11875:5: (lv_subExpressions_2_0= ruleBitwiseNotExpression )
                    {
                    // InternalSCTX.g:11875:5: (lv_subExpressions_2_0= ruleBitwiseNotExpression )
                    // InternalSCTX.g:11876:6: lv_subExpressions_2_0= ruleBitwiseNotExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBitwiseNotExpressionAccess().getSubExpressionsBitwiseNotExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleBitwiseNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBitwiseNotExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseNotExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:11895:3: this_AtomicExpression_3= ruleAtomicExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBitwiseNotExpressionAccess().getAtomicExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicExpression_3=ruleAtomicExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AtomicExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseNotExpression"


    // $ANTLR start "entryRuleNotExpression"
    // InternalSCTX.g:11910:1: entryRuleNotExpression returns [EObject current=null] : iv_ruleNotExpression= ruleNotExpression EOF ;
    public final EObject entryRuleNotExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNotExpression = null;


        try {
            // InternalSCTX.g:11910:54: (iv_ruleNotExpression= ruleNotExpression EOF )
            // InternalSCTX.g:11911:2: iv_ruleNotExpression= ruleNotExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNotExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNotExpression=ruleNotExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNotExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNotExpression"


    // $ANTLR start "ruleNotExpression"
    // InternalSCTX.g:11917:1: ruleNotExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_BitwiseNotExpression_3= ruleBitwiseNotExpression ) ;
    public final EObject ruleNotExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_BitwiseNotExpression_3 = null;



        	enterRule();

        try {
            // InternalSCTX.g:11923:2: ( ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_BitwiseNotExpression_3= ruleBitwiseNotExpression ) )
            // InternalSCTX.g:11924:2: ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_BitwiseNotExpression_3= ruleBitwiseNotExpression )
            {
            // InternalSCTX.g:11924:2: ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_BitwiseNotExpression_3= ruleBitwiseNotExpression )
            int alt380=2;
            int LA380_0 = input.LA(1);

            if ( (LA380_0==33) ) {
                alt380=1;
            }
            else if ( (LA380_0==RULE_ID||(LA380_0>=RULE_HOSTCODE && LA380_0<=RULE_COMMENT_ANNOTATION)||LA380_0==31||LA380_0==80||LA380_0==85||LA380_0==99||LA380_0==103||(LA380_0>=142 && LA380_0<=144)) ) {
                alt380=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 380, 0, input);

                throw nvae;
            }
            switch (alt380) {
                case 1 :
                    // InternalSCTX.g:11925:3: ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) )
                    {
                    // InternalSCTX.g:11925:3: ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) )
                    // InternalSCTX.g:11926:4: () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) )
                    {
                    // InternalSCTX.g:11926:4: ()
                    // InternalSCTX.g:11927:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getNotExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:11936:4: ( (lv_operator_1_0= ruleNotOperator ) )
                    // InternalSCTX.g:11937:5: (lv_operator_1_0= ruleNotOperator )
                    {
                    // InternalSCTX.g:11937:5: (lv_operator_1_0= ruleNotOperator )
                    // InternalSCTX.g:11938:6: lv_operator_1_0= ruleNotOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNotExpressionAccess().getOperatorNotOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_39);
                    lv_operator_1_0=ruleNotOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNotExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.NotOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:11955:4: ( (lv_subExpressions_2_0= ruleNotExpression ) )
                    // InternalSCTX.g:11956:5: (lv_subExpressions_2_0= ruleNotExpression )
                    {
                    // InternalSCTX.g:11956:5: (lv_subExpressions_2_0= ruleNotExpression )
                    // InternalSCTX.g:11957:6: lv_subExpressions_2_0= ruleNotExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNotExpressionAccess().getSubExpressionsNotExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNotExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.NotExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:11976:3: this_BitwiseNotExpression_3= ruleBitwiseNotExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNotExpressionAccess().getBitwiseNotExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BitwiseNotExpression_3=ruleBitwiseNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BitwiseNotExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotExpression"


    // $ANTLR start "entryRuleValuedExpression"
    // InternalSCTX.g:11991:1: entryRuleValuedExpression returns [EObject current=null] : iv_ruleValuedExpression= ruleValuedExpression EOF ;
    public final EObject entryRuleValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedExpression = null;


        try {
            // InternalSCTX.g:11991:57: (iv_ruleValuedExpression= ruleValuedExpression EOF )
            // InternalSCTX.g:11992:2: iv_ruleValuedExpression= ruleValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedExpression=ruleValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedExpression"


    // $ANTLR start "ruleValuedExpression"
    // InternalSCTX.g:11998:1: ruleValuedExpression returns [EObject current=null] : this_ShiftExpressions_0= ruleShiftExpressions ;
    public final EObject ruleValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ShiftExpressions_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:12004:2: (this_ShiftExpressions_0= ruleShiftExpressions )
            // InternalSCTX.g:12005:2: this_ShiftExpressions_0= ruleShiftExpressions
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getValuedExpressionAccess().getShiftExpressionsParserRuleCall());
              	
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_ShiftExpressions_0=ruleShiftExpressions();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_ShiftExpressions_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedExpression"


    // $ANTLR start "entryRuleShiftExpressions"
    // InternalSCTX.g:12019:1: entryRuleShiftExpressions returns [EObject current=null] : iv_ruleShiftExpressions= ruleShiftExpressions EOF ;
    public final EObject entryRuleShiftExpressions() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShiftExpressions = null;


        try {
            // InternalSCTX.g:12019:57: (iv_ruleShiftExpressions= ruleShiftExpressions EOF )
            // InternalSCTX.g:12020:2: iv_ruleShiftExpressions= ruleShiftExpressions EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShiftExpressionsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleShiftExpressions=ruleShiftExpressions();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShiftExpressions; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShiftExpressions"


    // $ANTLR start "ruleShiftExpressions"
    // InternalSCTX.g:12026:1: ruleShiftExpressions returns [EObject current=null] : (this_SumExpression_0= ruleSumExpression ( ( () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )* ) )* ) ;
    public final EObject ruleShiftExpressions() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_9=null;
        Token otherlv_14=null;
        EObject this_SumExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        Enumerator lv_operator_7_0 = null;

        EObject lv_subExpressions_8_0 = null;

        EObject lv_subExpressions_10_0 = null;

        Enumerator lv_operator_12_0 = null;

        EObject lv_subExpressions_13_0 = null;

        EObject lv_subExpressions_15_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:12032:2: ( (this_SumExpression_0= ruleSumExpression ( ( () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )* ) )* ) )
            // InternalSCTX.g:12033:2: (this_SumExpression_0= ruleSumExpression ( ( () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )* ) )* )
            {
            // InternalSCTX.g:12033:2: (this_SumExpression_0= ruleSumExpression ( ( () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )* ) )* )
            // InternalSCTX.g:12034:3: this_SumExpression_0= ruleSumExpression ( ( () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )* ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSumExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_184);
            this_SumExpression_0=ruleSumExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SumExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:12045:3: ( ( () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )* ) )*
            loop384:
            do {
                int alt384=4;
                switch ( input.LA(1) ) {
                case 90:
                    {
                    alt384=1;
                    }
                    break;
                case 91:
                    {
                    alt384=2;
                    }
                    break;
                case 92:
                    {
                    alt384=3;
                    }
                    break;

                }

                switch (alt384) {
            	case 1 :
            	    // InternalSCTX.g:12046:4: ( () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )
            	    {
            	    // InternalSCTX.g:12046:4: ( () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )
            	    // InternalSCTX.g:12047:5: () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )*
            	    {
            	    // InternalSCTX.g:12047:5: ()
            	    // InternalSCTX.g:12048:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getShiftExpressionsAccess().getOperatorExpressionSubExpressionsAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSCTX.g:12057:5: ( (lv_operator_2_0= ruleShiftLeftOperator ) )
            	    // InternalSCTX.g:12058:6: (lv_operator_2_0= ruleShiftLeftOperator )
            	    {
            	    // InternalSCTX.g:12058:6: (lv_operator_2_0= ruleShiftLeftOperator )
            	    // InternalSCTX.g:12059:7: lv_operator_2_0= ruleShiftLeftOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getShiftExpressionsAccess().getOperatorShiftLeftOperatorEnumRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_96);
            	    lv_operator_2_0=ruleShiftLeftOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_2_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftLeftOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSCTX.g:12076:5: ( (lv_subExpressions_3_0= ruleSumExpression ) )
            	    // InternalSCTX.g:12077:6: (lv_subExpressions_3_0= ruleSumExpression )
            	    {
            	    // InternalSCTX.g:12077:6: (lv_subExpressions_3_0= ruleSumExpression )
            	    // InternalSCTX.g:12078:7: lv_subExpressions_3_0= ruleSumExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_184);
            	    lv_subExpressions_3_0=ruleSumExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_3_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSCTX.g:12095:5: (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )*
            	    loop381:
            	    do {
            	        int alt381=2;
            	        alt381 = dfa381.predict(input);
            	        switch (alt381) {
            	    	case 1 :
            	    	    // InternalSCTX.g:12096:6: otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) )
            	    	    {
            	    	    otherlv_4=(Token)match(input,90,FollowSets000.FOLLOW_96); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_4, grammarAccess.getShiftExpressionsAccess().getLessThanSignLessThanSignKeyword_1_0_3_0());
            	    	      					
            	    	    }
            	    	    // InternalSCTX.g:12100:6: ( (lv_subExpressions_5_0= ruleSumExpression ) )
            	    	    // InternalSCTX.g:12101:7: (lv_subExpressions_5_0= ruleSumExpression )
            	    	    {
            	    	    // InternalSCTX.g:12101:7: (lv_subExpressions_5_0= ruleSumExpression )
            	    	    // InternalSCTX.g:12102:8: lv_subExpressions_5_0= ruleSumExpression
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_0_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_184);
            	    	    lv_subExpressions_5_0=ruleSumExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_5_0,
            	    	      									"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop381;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalSCTX.g:12122:4: ( () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )* )
            	    {
            	    // InternalSCTX.g:12122:4: ( () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )* )
            	    // InternalSCTX.g:12123:5: () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )*
            	    {
            	    // InternalSCTX.g:12123:5: ()
            	    // InternalSCTX.g:12124:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getShiftExpressionsAccess().getOperatorExpressionSubExpressionsAction_1_1_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSCTX.g:12133:5: ( (lv_operator_7_0= ruleShiftRightOperator ) )
            	    // InternalSCTX.g:12134:6: (lv_operator_7_0= ruleShiftRightOperator )
            	    {
            	    // InternalSCTX.g:12134:6: (lv_operator_7_0= ruleShiftRightOperator )
            	    // InternalSCTX.g:12135:7: lv_operator_7_0= ruleShiftRightOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getShiftExpressionsAccess().getOperatorShiftRightOperatorEnumRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_96);
            	    lv_operator_7_0=ruleShiftRightOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_7_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSCTX.g:12152:5: ( (lv_subExpressions_8_0= ruleSumExpression ) )
            	    // InternalSCTX.g:12153:6: (lv_subExpressions_8_0= ruleSumExpression )
            	    {
            	    // InternalSCTX.g:12153:6: (lv_subExpressions_8_0= ruleSumExpression )
            	    // InternalSCTX.g:12154:7: lv_subExpressions_8_0= ruleSumExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_1_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_184);
            	    lv_subExpressions_8_0=ruleSumExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_8_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSCTX.g:12171:5: (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )*
            	    loop382:
            	    do {
            	        int alt382=2;
            	        alt382 = dfa382.predict(input);
            	        switch (alt382) {
            	    	case 1 :
            	    	    // InternalSCTX.g:12172:6: otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) )
            	    	    {
            	    	    otherlv_9=(Token)match(input,91,FollowSets000.FOLLOW_96); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_9, grammarAccess.getShiftExpressionsAccess().getGreaterThanSignGreaterThanSignKeyword_1_1_3_0());
            	    	      					
            	    	    }
            	    	    // InternalSCTX.g:12176:6: ( (lv_subExpressions_10_0= ruleSumExpression ) )
            	    	    // InternalSCTX.g:12177:7: (lv_subExpressions_10_0= ruleSumExpression )
            	    	    {
            	    	    // InternalSCTX.g:12177:7: (lv_subExpressions_10_0= ruleSumExpression )
            	    	    // InternalSCTX.g:12178:8: lv_subExpressions_10_0= ruleSumExpression
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_1_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_184);
            	    	    lv_subExpressions_10_0=ruleSumExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_10_0,
            	    	      									"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop382;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalSCTX.g:12198:4: ( () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )* )
            	    {
            	    // InternalSCTX.g:12198:4: ( () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )* )
            	    // InternalSCTX.g:12199:5: () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )*
            	    {
            	    // InternalSCTX.g:12199:5: ()
            	    // InternalSCTX.g:12200:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getShiftExpressionsAccess().getOperatorExpressionSubExpressionsAction_1_2_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSCTX.g:12209:5: ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) )
            	    // InternalSCTX.g:12210:6: (lv_operator_12_0= ruleShiftRightUnsignedOperator )
            	    {
            	    // InternalSCTX.g:12210:6: (lv_operator_12_0= ruleShiftRightUnsignedOperator )
            	    // InternalSCTX.g:12211:7: lv_operator_12_0= ruleShiftRightUnsignedOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getShiftExpressionsAccess().getOperatorShiftRightUnsignedOperatorEnumRuleCall_1_2_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_96);
            	    lv_operator_12_0=ruleShiftRightUnsignedOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_12_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSCTX.g:12228:5: ( (lv_subExpressions_13_0= ruleSumExpression ) )
            	    // InternalSCTX.g:12229:6: (lv_subExpressions_13_0= ruleSumExpression )
            	    {
            	    // InternalSCTX.g:12229:6: (lv_subExpressions_13_0= ruleSumExpression )
            	    // InternalSCTX.g:12230:7: lv_subExpressions_13_0= ruleSumExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_2_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_184);
            	    lv_subExpressions_13_0=ruleSumExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_13_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSCTX.g:12247:5: (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )*
            	    loop383:
            	    do {
            	        int alt383=2;
            	        alt383 = dfa383.predict(input);
            	        switch (alt383) {
            	    	case 1 :
            	    	    // InternalSCTX.g:12248:6: otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) )
            	    	    {
            	    	    otherlv_14=(Token)match(input,92,FollowSets000.FOLLOW_96); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_14, grammarAccess.getShiftExpressionsAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_2_3_0());
            	    	      					
            	    	    }
            	    	    // InternalSCTX.g:12252:6: ( (lv_subExpressions_15_0= ruleSumExpression ) )
            	    	    // InternalSCTX.g:12253:7: (lv_subExpressions_15_0= ruleSumExpression )
            	    	    {
            	    	    // InternalSCTX.g:12253:7: (lv_subExpressions_15_0= ruleSumExpression )
            	    	    // InternalSCTX.g:12254:8: lv_subExpressions_15_0= ruleSumExpression
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_2_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_184);
            	    	    lv_subExpressions_15_0=ruleSumExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_15_0,
            	    	      									"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop383;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;

            	default :
            	    break loop384;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftExpressions"


    // $ANTLR start "entryRuleShiftRightExpression"
    // InternalSCTX.g:12278:1: entryRuleShiftRightExpression returns [EObject current=null] : iv_ruleShiftRightExpression= ruleShiftRightExpression EOF ;
    public final EObject entryRuleShiftRightExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShiftRightExpression = null;


        try {
            // InternalSCTX.g:12278:61: (iv_ruleShiftRightExpression= ruleShiftRightExpression EOF )
            // InternalSCTX.g:12279:2: iv_ruleShiftRightExpression= ruleShiftRightExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShiftRightExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleShiftRightExpression=ruleShiftRightExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShiftRightExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShiftRightExpression"


    // $ANTLR start "ruleShiftRightExpression"
    // InternalSCTX.g:12285:1: ruleShiftRightExpression returns [EObject current=null] : (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? ) ;
    public final EObject ruleShiftRightExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_SumExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:12291:2: ( (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? ) )
            // InternalSCTX.g:12292:2: (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? )
            {
            // InternalSCTX.g:12292:2: (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? )
            // InternalSCTX.g:12293:3: this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getSumExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_185);
            this_SumExpression_0=ruleSumExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SumExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:12304:3: ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )?
            int alt386=2;
            int LA386_0 = input.LA(1);

            if ( (LA386_0==91) ) {
                alt386=1;
            }
            switch (alt386) {
                case 1 :
                    // InternalSCTX.g:12305:4: () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )*
                    {
                    // InternalSCTX.g:12305:4: ()
                    // InternalSCTX.g:12306:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getShiftRightExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:12315:4: ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) )
                    // InternalSCTX.g:12316:5: ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) )
                    {
                    // InternalSCTX.g:12316:5: ( (lv_operator_2_0= ruleShiftRightOperator ) )
                    // InternalSCTX.g:12317:6: (lv_operator_2_0= ruleShiftRightOperator )
                    {
                    // InternalSCTX.g:12317:6: (lv_operator_2_0= ruleShiftRightOperator )
                    // InternalSCTX.g:12318:7: lv_operator_2_0= ruleShiftRightOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getOperatorShiftRightOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_96);
                    lv_operator_2_0=ruleShiftRightOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftRightExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:12335:5: ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) )
                    // InternalSCTX.g:12336:6: (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression )
                    {
                    // InternalSCTX.g:12336:6: (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression )
                    // InternalSCTX.g:12337:7: lv_subExpressions_3_0= ruleShiftRightUnsignedExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getSubExpressionsShiftRightUnsignedExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_185);
                    lv_subExpressions_3_0=ruleShiftRightUnsignedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftRightExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:12355:4: (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )*
                    loop385:
                    do {
                        int alt385=2;
                        int LA385_0 = input.LA(1);

                        if ( (LA385_0==91) ) {
                            alt385=1;
                        }


                        switch (alt385) {
                    	case 1 :
                    	    // InternalSCTX.g:12356:5: otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,91,FollowSets000.FOLLOW_96); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getShiftRightExpressionAccess().getGreaterThanSignGreaterThanSignKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:12360:5: ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) )
                    	    // InternalSCTX.g:12361:6: (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression )
                    	    {
                    	    // InternalSCTX.g:12361:6: (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression )
                    	    // InternalSCTX.g:12362:7: lv_subExpressions_5_0= ruleShiftRightUnsignedExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getSubExpressionsShiftRightUnsignedExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_185);
                    	    lv_subExpressions_5_0=ruleShiftRightUnsignedExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getShiftRightExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop385;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightExpression"


    // $ANTLR start "entryRuleShiftRightUnsignedExpression"
    // InternalSCTX.g:12385:1: entryRuleShiftRightUnsignedExpression returns [EObject current=null] : iv_ruleShiftRightUnsignedExpression= ruleShiftRightUnsignedExpression EOF ;
    public final EObject entryRuleShiftRightUnsignedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShiftRightUnsignedExpression = null;


        try {
            // InternalSCTX.g:12385:69: (iv_ruleShiftRightUnsignedExpression= ruleShiftRightUnsignedExpression EOF )
            // InternalSCTX.g:12386:2: iv_ruleShiftRightUnsignedExpression= ruleShiftRightUnsignedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleShiftRightUnsignedExpression=ruleShiftRightUnsignedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShiftRightUnsignedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShiftRightUnsignedExpression"


    // $ANTLR start "ruleShiftRightUnsignedExpression"
    // InternalSCTX.g:12392:1: ruleShiftRightUnsignedExpression returns [EObject current=null] : (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )? ) ;
    public final EObject ruleShiftRightUnsignedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_SumExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:12398:2: ( (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )? ) )
            // InternalSCTX.g:12399:2: (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )? )
            {
            // InternalSCTX.g:12399:2: (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )? )
            // InternalSCTX.g:12400:3: this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getSumExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_184);
            this_SumExpression_0=ruleSumExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SumExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:12411:3: ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )?
            int alt388=2;
            int LA388_0 = input.LA(1);

            if ( (LA388_0==92) ) {
                alt388=1;
            }
            switch (alt388) {
                case 1 :
                    // InternalSCTX.g:12412:4: () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )*
                    {
                    // InternalSCTX.g:12412:4: ()
                    // InternalSCTX.g:12413:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getShiftRightUnsignedExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:12422:4: ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) )
                    // InternalSCTX.g:12423:5: ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) )
                    {
                    // InternalSCTX.g:12423:5: ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) )
                    // InternalSCTX.g:12424:6: (lv_operator_2_0= ruleShiftRightUnsignedOperator )
                    {
                    // InternalSCTX.g:12424:6: (lv_operator_2_0= ruleShiftRightUnsignedOperator )
                    // InternalSCTX.g:12425:7: lv_operator_2_0= ruleShiftRightUnsignedOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getOperatorShiftRightUnsignedOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_96);
                    lv_operator_2_0=ruleShiftRightUnsignedOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftRightUnsignedExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:12442:5: ( (lv_subExpressions_3_0= ruleSumExpression ) )
                    // InternalSCTX.g:12443:6: (lv_subExpressions_3_0= ruleSumExpression )
                    {
                    // InternalSCTX.g:12443:6: (lv_subExpressions_3_0= ruleSumExpression )
                    // InternalSCTX.g:12444:7: lv_subExpressions_3_0= ruleSumExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getSubExpressionsSumExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_186);
                    lv_subExpressions_3_0=ruleSumExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftRightUnsignedExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:12462:4: (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )*
                    loop387:
                    do {
                        int alt387=2;
                        int LA387_0 = input.LA(1);

                        if ( (LA387_0==92) ) {
                            alt387=1;
                        }


                        switch (alt387) {
                    	case 1 :
                    	    // InternalSCTX.g:12463:5: otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,92,FollowSets000.FOLLOW_96); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getShiftRightUnsignedExpressionAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:12467:5: ( (lv_subExpressions_5_0= ruleSumExpression ) )
                    	    // InternalSCTX.g:12468:6: (lv_subExpressions_5_0= ruleSumExpression )
                    	    {
                    	    // InternalSCTX.g:12468:6: (lv_subExpressions_5_0= ruleSumExpression )
                    	    // InternalSCTX.g:12469:7: lv_subExpressions_5_0= ruleSumExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getSubExpressionsSumExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_186);
                    	    lv_subExpressions_5_0=ruleSumExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getShiftRightUnsignedExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop387;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightUnsignedExpression"


    // $ANTLR start "entryRuleSumExpression"
    // InternalSCTX.g:12492:1: entryRuleSumExpression returns [EObject current=null] : iv_ruleSumExpression= ruleSumExpression EOF ;
    public final EObject entryRuleSumExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSumExpression = null;


        try {
            // InternalSCTX.g:12492:54: (iv_ruleSumExpression= ruleSumExpression EOF )
            // InternalSCTX.g:12493:2: iv_ruleSumExpression= ruleSumExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSumExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSumExpression=ruleSumExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSumExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSumExpression"


    // $ANTLR start "ruleSumExpression"
    // InternalSCTX.g:12499:1: ruleSumExpression returns [EObject current=null] : (this_ProductExpression_0= ruleProductExpression ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )* ) ;
    public final EObject ruleSumExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_9=null;
        EObject this_ProductExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        Enumerator lv_operator_7_0 = null;

        EObject lv_subExpressions_8_0 = null;

        EObject lv_subExpressions_10_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:12505:2: ( (this_ProductExpression_0= ruleProductExpression ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )* ) )
            // InternalSCTX.g:12506:2: (this_ProductExpression_0= ruleProductExpression ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )* )
            {
            // InternalSCTX.g:12506:2: (this_ProductExpression_0= ruleProductExpression ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )* )
            // InternalSCTX.g:12507:3: this_ProductExpression_0= ruleProductExpression ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSumExpressionAccess().getProductExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_187);
            this_ProductExpression_0=ruleProductExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ProductExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:12518:3: ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )*
            loop391:
            do {
                int alt391=3;
                int LA391_0 = input.LA(1);

                if ( (LA391_0==93) ) {
                    alt391=1;
                }
                else if ( (LA391_0==94) ) {
                    alt391=2;
                }


                switch (alt391) {
            	case 1 :
            	    // InternalSCTX.g:12519:4: ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* )
            	    {
            	    // InternalSCTX.g:12519:4: ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* )
            	    // InternalSCTX.g:12520:5: () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )*
            	    {
            	    // InternalSCTX.g:12520:5: ()
            	    // InternalSCTX.g:12521:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getSumExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSCTX.g:12530:5: ( (lv_operator_2_0= ruleAddOperator ) )
            	    // InternalSCTX.g:12531:6: (lv_operator_2_0= ruleAddOperator )
            	    {
            	    // InternalSCTX.g:12531:6: (lv_operator_2_0= ruleAddOperator )
            	    // InternalSCTX.g:12532:7: lv_operator_2_0= ruleAddOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getSumExpressionAccess().getOperatorAddOperatorEnumRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_96);
            	    lv_operator_2_0=ruleAddOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getSumExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_2_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.AddOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSCTX.g:12549:5: ( (lv_subExpressions_3_0= ruleProductExpression ) )
            	    // InternalSCTX.g:12550:6: (lv_subExpressions_3_0= ruleProductExpression )
            	    {
            	    // InternalSCTX.g:12550:6: (lv_subExpressions_3_0= ruleProductExpression )
            	    // InternalSCTX.g:12551:7: lv_subExpressions_3_0= ruleProductExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_187);
            	    lv_subExpressions_3_0=ruleProductExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getSumExpressionRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_3_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.ProductExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSCTX.g:12568:5: (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )*
            	    loop389:
            	    do {
            	        int alt389=2;
            	        alt389 = dfa389.predict(input);
            	        switch (alt389) {
            	    	case 1 :
            	    	    // InternalSCTX.g:12569:6: otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) )
            	    	    {
            	    	    otherlv_4=(Token)match(input,93,FollowSets000.FOLLOW_96); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_4, grammarAccess.getSumExpressionAccess().getPlusSignKeyword_1_0_3_0());
            	    	      					
            	    	    }
            	    	    // InternalSCTX.g:12573:6: ( (lv_subExpressions_5_0= ruleProductExpression ) )
            	    	    // InternalSCTX.g:12574:7: (lv_subExpressions_5_0= ruleProductExpression )
            	    	    {
            	    	    // InternalSCTX.g:12574:7: (lv_subExpressions_5_0= ruleProductExpression )
            	    	    // InternalSCTX.g:12575:8: lv_subExpressions_5_0= ruleProductExpression
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_0_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_187);
            	    	    lv_subExpressions_5_0=ruleProductExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getSumExpressionRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_5_0,
            	    	      									"de.cau.cs.kieler.kexpressions.KExpressions.ProductExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop389;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalSCTX.g:12595:4: ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* )
            	    {
            	    // InternalSCTX.g:12595:4: ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* )
            	    // InternalSCTX.g:12596:5: () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )*
            	    {
            	    // InternalSCTX.g:12596:5: ()
            	    // InternalSCTX.g:12597:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getSumExpressionAccess().getOperatorExpressionSubExpressionsAction_1_1_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSCTX.g:12606:5: ( (lv_operator_7_0= ruleSubOperator ) )
            	    // InternalSCTX.g:12607:6: (lv_operator_7_0= ruleSubOperator )
            	    {
            	    // InternalSCTX.g:12607:6: (lv_operator_7_0= ruleSubOperator )
            	    // InternalSCTX.g:12608:7: lv_operator_7_0= ruleSubOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getSumExpressionAccess().getOperatorSubOperatorEnumRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_96);
            	    lv_operator_7_0=ruleSubOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getSumExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_7_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.SubOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSCTX.g:12625:5: ( (lv_subExpressions_8_0= ruleProductExpression ) )
            	    // InternalSCTX.g:12626:6: (lv_subExpressions_8_0= ruleProductExpression )
            	    {
            	    // InternalSCTX.g:12626:6: (lv_subExpressions_8_0= ruleProductExpression )
            	    // InternalSCTX.g:12627:7: lv_subExpressions_8_0= ruleProductExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_1_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_187);
            	    lv_subExpressions_8_0=ruleProductExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getSumExpressionRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_8_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.ProductExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSCTX.g:12644:5: (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )*
            	    loop390:
            	    do {
            	        int alt390=2;
            	        alt390 = dfa390.predict(input);
            	        switch (alt390) {
            	    	case 1 :
            	    	    // InternalSCTX.g:12645:6: otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) )
            	    	    {
            	    	    otherlv_9=(Token)match(input,94,FollowSets000.FOLLOW_96); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_9, grammarAccess.getSumExpressionAccess().getHyphenMinusKeyword_1_1_3_0());
            	    	      					
            	    	    }
            	    	    // InternalSCTX.g:12649:6: ( (lv_subExpressions_10_0= ruleProductExpression ) )
            	    	    // InternalSCTX.g:12650:7: (lv_subExpressions_10_0= ruleProductExpression )
            	    	    {
            	    	    // InternalSCTX.g:12650:7: (lv_subExpressions_10_0= ruleProductExpression )
            	    	    // InternalSCTX.g:12651:8: lv_subExpressions_10_0= ruleProductExpression
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_1_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_187);
            	    	    lv_subExpressions_10_0=ruleProductExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getSumExpressionRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_10_0,
            	    	      									"de.cau.cs.kieler.kexpressions.KExpressions.ProductExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop390;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;

            	default :
            	    break loop391;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSumExpression"


    // $ANTLR start "entryRuleProductExpression"
    // InternalSCTX.g:12675:1: entryRuleProductExpression returns [EObject current=null] : iv_ruleProductExpression= ruleProductExpression EOF ;
    public final EObject entryRuleProductExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProductExpression = null;


        try {
            // InternalSCTX.g:12675:58: (iv_ruleProductExpression= ruleProductExpression EOF )
            // InternalSCTX.g:12676:2: iv_ruleProductExpression= ruleProductExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getProductExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleProductExpression=ruleProductExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProductExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProductExpression"


    // $ANTLR start "ruleProductExpression"
    // InternalSCTX.g:12682:1: ruleProductExpression returns [EObject current=null] : (this_NegExpression_0= ruleNegExpression ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )* ) )* ) ;
    public final EObject ruleProductExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_9=null;
        Token otherlv_14=null;
        EObject this_NegExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        Enumerator lv_operator_7_0 = null;

        EObject lv_subExpressions_8_0 = null;

        EObject lv_subExpressions_10_0 = null;

        Enumerator lv_operator_12_0 = null;

        EObject lv_subExpressions_13_0 = null;

        EObject lv_subExpressions_15_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:12688:2: ( (this_NegExpression_0= ruleNegExpression ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )* ) )* ) )
            // InternalSCTX.g:12689:2: (this_NegExpression_0= ruleNegExpression ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )* ) )* )
            {
            // InternalSCTX.g:12689:2: (this_NegExpression_0= ruleNegExpression ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )* ) )* )
            // InternalSCTX.g:12690:3: this_NegExpression_0= ruleNegExpression ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )* ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getProductExpressionAccess().getNegExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_188);
            this_NegExpression_0=ruleNegExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NegExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:12701:3: ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )* ) )*
            loop395:
            do {
                int alt395=4;
                switch ( input.LA(1) ) {
                case 95:
                    {
                    alt395=1;
                    }
                    break;
                case 96:
                    {
                    alt395=2;
                    }
                    break;
                case 97:
                    {
                    alt395=3;
                    }
                    break;

                }

                switch (alt395) {
            	case 1 :
            	    // InternalSCTX.g:12702:4: ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )* )
            	    {
            	    // InternalSCTX.g:12702:4: ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )* )
            	    // InternalSCTX.g:12703:5: () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )*
            	    {
            	    // InternalSCTX.g:12703:5: ()
            	    // InternalSCTX.g:12704:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getProductExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSCTX.g:12713:5: ( (lv_operator_2_0= ruleMultOperator ) )
            	    // InternalSCTX.g:12714:6: (lv_operator_2_0= ruleMultOperator )
            	    {
            	    // InternalSCTX.g:12714:6: (lv_operator_2_0= ruleMultOperator )
            	    // InternalSCTX.g:12715:7: lv_operator_2_0= ruleMultOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getProductExpressionAccess().getOperatorMultOperatorEnumRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_96);
            	    lv_operator_2_0=ruleMultOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_2_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.MultOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSCTX.g:12732:5: ( (lv_subExpressions_3_0= ruleNegExpression ) )
            	    // InternalSCTX.g:12733:6: (lv_subExpressions_3_0= ruleNegExpression )
            	    {
            	    // InternalSCTX.g:12733:6: (lv_subExpressions_3_0= ruleNegExpression )
            	    // InternalSCTX.g:12734:7: lv_subExpressions_3_0= ruleNegExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_188);
            	    lv_subExpressions_3_0=ruleNegExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_3_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.NegExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSCTX.g:12751:5: (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )*
            	    loop392:
            	    do {
            	        int alt392=2;
            	        alt392 = dfa392.predict(input);
            	        switch (alt392) {
            	    	case 1 :
            	    	    // InternalSCTX.g:12752:6: otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) )
            	    	    {
            	    	    otherlv_4=(Token)match(input,95,FollowSets000.FOLLOW_96); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_4, grammarAccess.getProductExpressionAccess().getAsteriskKeyword_1_0_3_0());
            	    	      					
            	    	    }
            	    	    // InternalSCTX.g:12756:6: ( (lv_subExpressions_5_0= ruleNegExpression ) )
            	    	    // InternalSCTX.g:12757:7: (lv_subExpressions_5_0= ruleNegExpression )
            	    	    {
            	    	    // InternalSCTX.g:12757:7: (lv_subExpressions_5_0= ruleNegExpression )
            	    	    // InternalSCTX.g:12758:8: lv_subExpressions_5_0= ruleNegExpression
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_0_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_188);
            	    	    lv_subExpressions_5_0=ruleNegExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_5_0,
            	    	      									"de.cau.cs.kieler.kexpressions.KExpressions.NegExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop392;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalSCTX.g:12778:4: ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )* )
            	    {
            	    // InternalSCTX.g:12778:4: ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )* )
            	    // InternalSCTX.g:12779:5: () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )*
            	    {
            	    // InternalSCTX.g:12779:5: ()
            	    // InternalSCTX.g:12780:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getProductExpressionAccess().getOperatorExpressionSubExpressionsAction_1_1_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSCTX.g:12789:5: ( (lv_operator_7_0= ruleDivOperator ) )
            	    // InternalSCTX.g:12790:6: (lv_operator_7_0= ruleDivOperator )
            	    {
            	    // InternalSCTX.g:12790:6: (lv_operator_7_0= ruleDivOperator )
            	    // InternalSCTX.g:12791:7: lv_operator_7_0= ruleDivOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getProductExpressionAccess().getOperatorDivOperatorEnumRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_96);
            	    lv_operator_7_0=ruleDivOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_7_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.DivOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSCTX.g:12808:5: ( (lv_subExpressions_8_0= ruleNegExpression ) )
            	    // InternalSCTX.g:12809:6: (lv_subExpressions_8_0= ruleNegExpression )
            	    {
            	    // InternalSCTX.g:12809:6: (lv_subExpressions_8_0= ruleNegExpression )
            	    // InternalSCTX.g:12810:7: lv_subExpressions_8_0= ruleNegExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_1_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_188);
            	    lv_subExpressions_8_0=ruleNegExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_8_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.NegExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSCTX.g:12827:5: (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )*
            	    loop393:
            	    do {
            	        int alt393=2;
            	        alt393 = dfa393.predict(input);
            	        switch (alt393) {
            	    	case 1 :
            	    	    // InternalSCTX.g:12828:6: otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) )
            	    	    {
            	    	    otherlv_9=(Token)match(input,96,FollowSets000.FOLLOW_96); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_9, grammarAccess.getProductExpressionAccess().getSolidusKeyword_1_1_3_0());
            	    	      					
            	    	    }
            	    	    // InternalSCTX.g:12832:6: ( (lv_subExpressions_10_0= ruleNegExpression ) )
            	    	    // InternalSCTX.g:12833:7: (lv_subExpressions_10_0= ruleNegExpression )
            	    	    {
            	    	    // InternalSCTX.g:12833:7: (lv_subExpressions_10_0= ruleNegExpression )
            	    	    // InternalSCTX.g:12834:8: lv_subExpressions_10_0= ruleNegExpression
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_1_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_188);
            	    	    lv_subExpressions_10_0=ruleNegExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_10_0,
            	    	      									"de.cau.cs.kieler.kexpressions.KExpressions.NegExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop393;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalSCTX.g:12854:4: ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )* )
            	    {
            	    // InternalSCTX.g:12854:4: ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )* )
            	    // InternalSCTX.g:12855:5: () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )*
            	    {
            	    // InternalSCTX.g:12855:5: ()
            	    // InternalSCTX.g:12856:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getProductExpressionAccess().getOperatorExpressionSubExpressionsAction_1_2_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSCTX.g:12865:5: ( (lv_operator_12_0= ruleModOperator ) )
            	    // InternalSCTX.g:12866:6: (lv_operator_12_0= ruleModOperator )
            	    {
            	    // InternalSCTX.g:12866:6: (lv_operator_12_0= ruleModOperator )
            	    // InternalSCTX.g:12867:7: lv_operator_12_0= ruleModOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getProductExpressionAccess().getOperatorModOperatorEnumRuleCall_1_2_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_96);
            	    lv_operator_12_0=ruleModOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_12_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.ModOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSCTX.g:12884:5: ( (lv_subExpressions_13_0= ruleNegExpression ) )
            	    // InternalSCTX.g:12885:6: (lv_subExpressions_13_0= ruleNegExpression )
            	    {
            	    // InternalSCTX.g:12885:6: (lv_subExpressions_13_0= ruleNegExpression )
            	    // InternalSCTX.g:12886:7: lv_subExpressions_13_0= ruleNegExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_2_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_188);
            	    lv_subExpressions_13_0=ruleNegExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_13_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.NegExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSCTX.g:12903:5: (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )*
            	    loop394:
            	    do {
            	        int alt394=2;
            	        alt394 = dfa394.predict(input);
            	        switch (alt394) {
            	    	case 1 :
            	    	    // InternalSCTX.g:12904:6: otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) )
            	    	    {
            	    	    otherlv_14=(Token)match(input,97,FollowSets000.FOLLOW_96); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_14, grammarAccess.getProductExpressionAccess().getPercentSignKeyword_1_2_3_0());
            	    	      					
            	    	    }
            	    	    // InternalSCTX.g:12908:6: ( (lv_subExpressions_15_0= ruleNegExpression ) )
            	    	    // InternalSCTX.g:12909:7: (lv_subExpressions_15_0= ruleNegExpression )
            	    	    {
            	    	    // InternalSCTX.g:12909:7: (lv_subExpressions_15_0= ruleNegExpression )
            	    	    // InternalSCTX.g:12910:8: lv_subExpressions_15_0= ruleNegExpression
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_2_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_188);
            	    	    lv_subExpressions_15_0=ruleNegExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_15_0,
            	    	      									"de.cau.cs.kieler.kexpressions.KExpressions.NegExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop394;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;

            	default :
            	    break loop395;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProductExpression"


    // $ANTLR start "entryRuleNegExpression"
    // InternalSCTX.g:12934:1: entryRuleNegExpression returns [EObject current=null] : iv_ruleNegExpression= ruleNegExpression EOF ;
    public final EObject entryRuleNegExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNegExpression = null;


        try {
            // InternalSCTX.g:12934:54: (iv_ruleNegExpression= ruleNegExpression EOF )
            // InternalSCTX.g:12935:2: iv_ruleNegExpression= ruleNegExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNegExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNegExpression=ruleNegExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNegExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNegExpression"


    // $ANTLR start "ruleNegExpression"
    // InternalSCTX.g:12941:1: ruleNegExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_TernaryOperation_3= ruleTernaryOperation ) ;
    public final EObject ruleNegExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_TernaryOperation_3 = null;



        	enterRule();

        try {
            // InternalSCTX.g:12947:2: ( ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_TernaryOperation_3= ruleTernaryOperation ) )
            // InternalSCTX.g:12948:2: ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_TernaryOperation_3= ruleTernaryOperation )
            {
            // InternalSCTX.g:12948:2: ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_TernaryOperation_3= ruleTernaryOperation )
            int alt396=2;
            int LA396_0 = input.LA(1);

            if ( (LA396_0==94) ) {
                alt396=1;
            }
            else if ( ((LA396_0>=RULE_STRING && LA396_0<=RULE_COMMENT_ANNOTATION)||LA396_0==21||LA396_0==31||LA396_0==80||LA396_0==85||LA396_0==99||LA396_0==103||LA396_0==142||LA396_0==144) ) {
                alt396=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 396, 0, input);

                throw nvae;
            }
            switch (alt396) {
                case 1 :
                    // InternalSCTX.g:12949:3: ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) )
                    {
                    // InternalSCTX.g:12949:3: ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) )
                    // InternalSCTX.g:12950:4: () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) )
                    {
                    // InternalSCTX.g:12950:4: ()
                    // InternalSCTX.g:12951:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getNegExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:12960:4: ( (lv_operator_1_0= ruleSubOperator ) )
                    // InternalSCTX.g:12961:5: (lv_operator_1_0= ruleSubOperator )
                    {
                    // InternalSCTX.g:12961:5: (lv_operator_1_0= ruleSubOperator )
                    // InternalSCTX.g:12962:6: lv_operator_1_0= ruleSubOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNegExpressionAccess().getOperatorSubOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_96);
                    lv_operator_1_0=ruleSubOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNegExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.SubOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:12979:4: ( (lv_subExpressions_2_0= ruleNegExpression ) )
                    // InternalSCTX.g:12980:5: (lv_subExpressions_2_0= ruleNegExpression )
                    {
                    // InternalSCTX.g:12980:5: (lv_subExpressions_2_0= ruleNegExpression )
                    // InternalSCTX.g:12981:6: lv_subExpressions_2_0= ruleNegExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNegExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleNegExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNegExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.NegExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:13000:3: this_TernaryOperation_3= ruleTernaryOperation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNegExpressionAccess().getTernaryOperationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TernaryOperation_3=ruleTernaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TernaryOperation_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNegExpression"


    // $ANTLR start "entryRuleTernaryOperation"
    // InternalSCTX.g:13015:1: entryRuleTernaryOperation returns [EObject current=null] : iv_ruleTernaryOperation= ruleTernaryOperation EOF ;
    public final EObject entryRuleTernaryOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTernaryOperation = null;


        try {
            // InternalSCTX.g:13015:57: (iv_ruleTernaryOperation= ruleTernaryOperation EOF )
            // InternalSCTX.g:13016:2: iv_ruleTernaryOperation= ruleTernaryOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTernaryOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTernaryOperation=ruleTernaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTernaryOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTernaryOperation"


    // $ANTLR start "ruleTernaryOperation"
    // InternalSCTX.g:13022:1: ruleTernaryOperation returns [EObject current=null] : ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? ) | this_InitExpression_6= ruleInitExpression ) ;
    public final EObject ruleTernaryOperation() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject lv_subExpressions_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        EObject this_InitExpression_6 = null;



        	enterRule();

        try {
            // InternalSCTX.g:13028:2: ( ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? ) | this_InitExpression_6= ruleInitExpression ) )
            // InternalSCTX.g:13029:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? ) | this_InitExpression_6= ruleInitExpression )
            {
            // InternalSCTX.g:13029:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? ) | this_InitExpression_6= ruleInitExpression )
            int alt398=2;
            alt398 = dfa398.predict(input);
            switch (alt398) {
                case 1 :
                    // InternalSCTX.g:13030:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? )
                    {
                    // InternalSCTX.g:13030:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? )
                    // InternalSCTX.g:13031:4: () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )?
                    {
                    // InternalSCTX.g:13031:4: ()
                    // InternalSCTX.g:13032:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTernaryOperationAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:13041:4: ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) )
                    // InternalSCTX.g:13042:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
                    {
                    // InternalSCTX.g:13042:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
                    // InternalSCTX.g:13043:6: lv_subExpressions_1_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_189);
                    lv_subExpressions_1_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTernaryOperationRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:13060:4: ( (lv_operator_2_0= ruleConditionalOperator ) )
                    // InternalSCTX.g:13061:5: (lv_operator_2_0= ruleConditionalOperator )
                    {
                    // InternalSCTX.g:13061:5: (lv_operator_2_0= ruleConditionalOperator )
                    // InternalSCTX.g:13062:6: lv_operator_2_0= ruleConditionalOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTernaryOperationAccess().getOperatorConditionalOperatorEnumRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_137);
                    lv_operator_2_0=ruleConditionalOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTernaryOperationRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ConditionalOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:13079:4: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    // InternalSCTX.g:13080:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    {
                    // InternalSCTX.g:13080:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    // InternalSCTX.g:13081:6: lv_subExpressions_3_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_157);
                    lv_subExpressions_3_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTernaryOperationRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:13098:4: (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )?
                    int alt397=2;
                    alt397 = dfa397.predict(input);
                    switch (alt397) {
                        case 1 :
                            // InternalSCTX.g:13099:5: otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
                            {
                            otherlv_4=(Token)match(input,48,FollowSets000.FOLLOW_137); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getTernaryOperationAccess().getColonKeyword_0_4_0());
                              				
                            }
                            // InternalSCTX.g:13103:5: ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
                            // InternalSCTX.g:13104:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                            {
                            // InternalSCTX.g:13104:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                            // InternalSCTX.g:13105:7: lv_subExpressions_5_0= ruleAtomicValuedExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_4_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_subExpressions_5_0=ruleAtomicValuedExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getTernaryOperationRule());
                              							}
                              							add(
                              								current,
                              								"subExpressions",
                              								lv_subExpressions_5_0,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:13125:3: this_InitExpression_6= ruleInitExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTernaryOperationAccess().getInitExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_InitExpression_6=ruleInitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_InitExpression_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTernaryOperation"


    // $ANTLR start "entryRuleInitExpression"
    // InternalSCTX.g:13140:1: entryRuleInitExpression returns [EObject current=null] : iv_ruleInitExpression= ruleInitExpression EOF ;
    public final EObject entryRuleInitExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInitExpression = null;


        try {
            // InternalSCTX.g:13140:55: (iv_ruleInitExpression= ruleInitExpression EOF )
            // InternalSCTX.g:13141:2: iv_ruleInitExpression= ruleInitExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInitExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInitExpression=ruleInitExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInitExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInitExpression"


    // $ANTLR start "ruleInitExpression"
    // InternalSCTX.g:13147:1: ruleInitExpression returns [EObject current=null] : ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_4= ruleAtomicValuedExpression ) ;
    public final EObject ruleInitExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_subExpressions_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject this_AtomicValuedExpression_4 = null;



        	enterRule();

        try {
            // InternalSCTX.g:13153:2: ( ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_4= ruleAtomicValuedExpression ) )
            // InternalSCTX.g:13154:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_4= ruleAtomicValuedExpression )
            {
            // InternalSCTX.g:13154:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_4= ruleAtomicValuedExpression )
            int alt399=2;
            alt399 = dfa399.predict(input);
            switch (alt399) {
                case 1 :
                    // InternalSCTX.g:13155:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
                    {
                    // InternalSCTX.g:13155:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
                    // InternalSCTX.g:13156:4: () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    {
                    // InternalSCTX.g:13156:4: ()
                    // InternalSCTX.g:13157:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getInitExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:13166:4: ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) )
                    // InternalSCTX.g:13167:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
                    {
                    // InternalSCTX.g:13167:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
                    // InternalSCTX.g:13168:6: lv_subExpressions_1_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInitExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_190);
                    lv_subExpressions_1_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInitExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:13185:4: ( (lv_operator_2_0= ruleInitOperator ) )
                    // InternalSCTX.g:13186:5: (lv_operator_2_0= ruleInitOperator )
                    {
                    // InternalSCTX.g:13186:5: (lv_operator_2_0= ruleInitOperator )
                    // InternalSCTX.g:13187:6: lv_operator_2_0= ruleInitOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInitExpressionAccess().getOperatorInitOperatorEnumRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_137);
                    lv_operator_2_0=ruleInitOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInitExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.InitOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:13204:4: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    // InternalSCTX.g:13205:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    {
                    // InternalSCTX.g:13205:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    // InternalSCTX.g:13206:6: lv_subExpressions_3_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInitExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_3_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInitExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:13225:3: this_AtomicValuedExpression_4= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getInitExpressionAccess().getAtomicValuedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicValuedExpression_4=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AtomicValuedExpression_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInitExpression"


    // $ANTLR start "entryRuleAtomicExpression"
    // InternalSCTX.g:13240:1: entryRuleAtomicExpression returns [EObject current=null] : iv_ruleAtomicExpression= ruleAtomicExpression EOF ;
    public final EObject entryRuleAtomicExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAtomicExpression = null;


        try {
            // InternalSCTX.g:13240:57: (iv_ruleAtomicExpression= ruleAtomicExpression EOF )
            // InternalSCTX.g:13241:2: iv_ruleAtomicExpression= ruleAtomicExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAtomicExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAtomicExpression=ruleAtomicExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAtomicExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAtomicExpression"


    // $ANTLR start "ruleAtomicExpression"
    // InternalSCTX.g:13247:1: ruleAtomicExpression returns [EObject current=null] : (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_FunctionCall_5= ruleFunctionCall | this_RandomCall_6= ruleRandomCall | this_RandomizeCall_7= ruleRandomizeCall | this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression | this_TextExpression_9= ruleTextExpression ) ;
    public final EObject ruleAtomicExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_BoolValue_0 = null;

        EObject this_BoolExpression_2 = null;

        EObject this_ReferenceCall_4 = null;

        EObject this_FunctionCall_5 = null;

        EObject this_RandomCall_6 = null;

        EObject this_RandomizeCall_7 = null;

        EObject this_ValuedObjectTestExpression_8 = null;

        EObject this_TextExpression_9 = null;



        	enterRule();

        try {
            // InternalSCTX.g:13253:2: ( (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_FunctionCall_5= ruleFunctionCall | this_RandomCall_6= ruleRandomCall | this_RandomizeCall_7= ruleRandomizeCall | this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression | this_TextExpression_9= ruleTextExpression ) )
            // InternalSCTX.g:13254:2: (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_FunctionCall_5= ruleFunctionCall | this_RandomCall_6= ruleRandomCall | this_RandomizeCall_7= ruleRandomizeCall | this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression | this_TextExpression_9= ruleTextExpression )
            {
            // InternalSCTX.g:13254:2: (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_FunctionCall_5= ruleFunctionCall | this_RandomCall_6= ruleRandomCall | this_RandomizeCall_7= ruleRandomizeCall | this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression | this_TextExpression_9= ruleTextExpression )
            int alt400=8;
            alt400 = dfa400.predict(input);
            switch (alt400) {
                case 1 :
                    // InternalSCTX.g:13255:3: this_BoolValue_0= ruleBoolValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getBoolValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolValue_0=ruleBoolValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoolValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:13267:3: (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' )
                    {
                    // InternalSCTX.g:13267:3: (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' )
                    // InternalSCTX.g:13268:4: otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')'
                    {
                    otherlv_1=(Token)match(input,31,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAtomicExpressionAccess().getBoolExpressionParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_32);
                    this_BoolExpression_2=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_BoolExpression_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_3=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getAtomicExpressionAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:13289:3: this_ReferenceCall_4= ruleReferenceCall
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getReferenceCallParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceCall_4=ruleReferenceCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReferenceCall_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:13301:3: this_FunctionCall_5= ruleFunctionCall
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getFunctionCallParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FunctionCall_5=ruleFunctionCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionCall_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSCTX.g:13313:3: this_RandomCall_6= ruleRandomCall
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getRandomCallParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RandomCall_6=ruleRandomCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RandomCall_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalSCTX.g:13325:3: this_RandomizeCall_7= ruleRandomizeCall
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getRandomizeCallParserRuleCall_5());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RandomizeCall_7=ruleRandomizeCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RandomizeCall_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalSCTX.g:13337:3: this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getValuedObjectTestExpressionParserRuleCall_6());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedObjectTestExpression_8=ruleValuedObjectTestExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedObjectTestExpression_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalSCTX.g:13349:3: this_TextExpression_9= ruleTextExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getTextExpressionParserRuleCall_7());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TextExpression_9=ruleTextExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TextExpression_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAtomicExpression"


    // $ANTLR start "entryRuleAtomicValuedExpression"
    // InternalSCTX.g:13364:1: entryRuleAtomicValuedExpression returns [EObject current=null] : iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF ;
    public final EObject entryRuleAtomicValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAtomicValuedExpression = null;


        try {
            // InternalSCTX.g:13364:63: (iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF )
            // InternalSCTX.g:13365:2: iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAtomicValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAtomicValuedExpression=ruleAtomicValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAtomicValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAtomicValuedExpression"


    // $ANTLR start "ruleAtomicValuedExpression"
    // InternalSCTX.g:13371:1: ruleAtomicValuedExpression returns [EObject current=null] : (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression ) ;
    public final EObject ruleAtomicValuedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject this_IntValue_0 = null;

        EObject this_FloatValue_1 = null;

        EObject this_StringValue_2 = null;

        EObject this_VectorValue_3 = null;

        EObject this_ValuedExpression_5 = null;

        EObject this_AtomicExpression_7 = null;



        	enterRule();

        try {
            // InternalSCTX.g:13377:2: ( (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression ) )
            // InternalSCTX.g:13378:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression )
            {
            // InternalSCTX.g:13378:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression )
            int alt401=6;
            alt401 = dfa401.predict(input);
            switch (alt401) {
                case 1 :
                    // InternalSCTX.g:13379:3: this_IntValue_0= ruleIntValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getIntValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IntValue_0=ruleIntValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IntValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:13391:3: this_FloatValue_1= ruleFloatValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getFloatValueParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FloatValue_1=ruleFloatValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FloatValue_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:13403:3: this_StringValue_2= ruleStringValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getStringValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringValue_2=ruleStringValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:13415:3: this_VectorValue_3= ruleVectorValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getVectorValueParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_VectorValue_3=ruleVectorValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VectorValue_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSCTX.g:13427:3: (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' )
                    {
                    // InternalSCTX.g:13427:3: (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' )
                    // InternalSCTX.g:13428:4: otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')'
                    {
                    otherlv_4=(Token)match(input,31,FollowSets000.FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getAtomicValuedExpressionAccess().getLeftParenthesisKeyword_4_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getValuedExpressionParserRuleCall_4_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_32);
                    this_ValuedExpression_5=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ValuedExpression_5;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_6=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getAtomicValuedExpressionAccess().getRightParenthesisKeyword_4_2());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSCTX.g:13449:3: this_AtomicExpression_7= ruleAtomicExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getAtomicExpressionParserRuleCall_5());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicExpression_7=ruleAtomicExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AtomicExpression_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAtomicValuedExpression"


    // $ANTLR start "entryRuleValuedObjectTestExpression"
    // InternalSCTX.g:13464:1: entryRuleValuedObjectTestExpression returns [EObject current=null] : iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF ;
    public final EObject entryRuleValuedObjectTestExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObjectTestExpression = null;


        try {
            // InternalSCTX.g:13464:67: (iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF )
            // InternalSCTX.g:13465:2: iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectTestExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObjectTestExpression=ruleValuedObjectTestExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObjectTestExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObjectTestExpression"


    // $ANTLR start "ruleValuedObjectTestExpression"
    // InternalSCTX.g:13471:1: ruleValuedObjectTestExpression returns [EObject current=null] : ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' ) | this_ValuedObjectReference_7= ruleValuedObjectReference ) ;
    public final EObject ruleValuedObjectTestExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Enumerator lv_operator_1_1 = null;

        Enumerator lv_operator_1_2 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        EObject this_ValuedObjectReference_7 = null;



        	enterRule();

        try {
            // InternalSCTX.g:13477:2: ( ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' ) | this_ValuedObjectReference_7= ruleValuedObjectReference ) )
            // InternalSCTX.g:13478:2: ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' ) | this_ValuedObjectReference_7= ruleValuedObjectReference )
            {
            // InternalSCTX.g:13478:2: ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' ) | this_ValuedObjectReference_7= ruleValuedObjectReference )
            int alt404=2;
            int LA404_0 = input.LA(1);

            if ( (LA404_0==142||LA404_0==144) ) {
                alt404=1;
            }
            else if ( (LA404_0==RULE_ID) ) {
                alt404=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 404, 0, input);

                throw nvae;
            }
            switch (alt404) {
                case 1 :
                    // InternalSCTX.g:13479:3: ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' )
                    {
                    // InternalSCTX.g:13479:3: ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' )
                    // InternalSCTX.g:13480:4: () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')'
                    {
                    // InternalSCTX.g:13480:4: ()
                    // InternalSCTX.g:13481:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getValuedObjectTestExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:13490:4: ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) )
                    // InternalSCTX.g:13491:5: ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) )
                    {
                    // InternalSCTX.g:13491:5: ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) )
                    // InternalSCTX.g:13492:6: (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator )
                    {
                    // InternalSCTX.g:13492:6: (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator )
                    int alt402=2;
                    int LA402_0 = input.LA(1);

                    if ( (LA402_0==142) ) {
                        alt402=1;
                    }
                    else if ( (LA402_0==144) ) {
                        alt402=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 402, 0, input);

                        throw nvae;
                    }
                    switch (alt402) {
                        case 1 :
                            // InternalSCTX.g:13493:7: lv_operator_1_1= rulePreOperator
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorPreOperatorEnumRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_140);
                            lv_operator_1_1=rulePreOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                              							}
                              							set(
                              								current,
                              								"operator",
                              								lv_operator_1_1,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.PreOperator");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:13509:7: lv_operator_1_2= ruleValOperator
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorValOperatorEnumRuleCall_0_1_0_1());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_140);
                            lv_operator_1_2=ruleValOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                              							}
                              							set(
                              								current,
                              								"operator",
                              								lv_operator_1_2,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.ValOperator");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    otherlv_2=(Token)match(input,31,FollowSets000.FOLLOW_174); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getValuedObjectTestExpressionAccess().getLeftParenthesisKeyword_0_2());
                      			
                    }
                    // InternalSCTX.g:13531:4: ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) )
                    // InternalSCTX.g:13532:5: (lv_subExpressions_3_0= ruleValuedObjectTestExpression )
                    {
                    // InternalSCTX.g:13532:5: (lv_subExpressions_3_0= ruleValuedObjectTestExpression )
                    // InternalSCTX.g:13533:6: lv_subExpressions_3_0= ruleValuedObjectTestExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectTestExpressionParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_subExpressions_3_0=ruleValuedObjectTestExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectTestExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:13550:4: (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )?
                    int alt403=2;
                    int LA403_0 = input.LA(1);

                    if ( (LA403_0==20) ) {
                        alt403=1;
                    }
                    switch (alt403) {
                        case 1 :
                            // InternalSCTX.g:13551:5: otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) )
                            {
                            otherlv_4=(Token)match(input,20,FollowSets000.FOLLOW_174); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getValuedObjectTestExpressionAccess().getCommaKeyword_0_4_0());
                              				
                            }
                            // InternalSCTX.g:13555:5: ( (lv_subExpressions_5_0= ruleValuedObjectReference ) )
                            // InternalSCTX.g:13556:6: (lv_subExpressions_5_0= ruleValuedObjectReference )
                            {
                            // InternalSCTX.g:13556:6: (lv_subExpressions_5_0= ruleValuedObjectReference )
                            // InternalSCTX.g:13557:7: lv_subExpressions_5_0= ruleValuedObjectReference
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectReferenceParserRuleCall_0_4_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_32);
                            lv_subExpressions_5_0=ruleValuedObjectReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                              							}
                              							add(
                              								current,
                              								"subExpressions",
                              								lv_subExpressions_5_0,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getValuedObjectTestExpressionAccess().getRightParenthesisKeyword_0_5());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:13581:3: this_ValuedObjectReference_7= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getValuedObjectReferenceParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedObjectReference_7=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedObjectReference_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObjectTestExpression"


    // $ANTLR start "entryRulePrimeID"
    // InternalSCTX.g:13596:1: entryRulePrimeID returns [String current=null] : iv_rulePrimeID= rulePrimeID EOF ;
    public final String entryRulePrimeID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePrimeID = null;


        try {
            // InternalSCTX.g:13596:47: (iv_rulePrimeID= rulePrimeID EOF )
            // InternalSCTX.g:13597:2: iv_rulePrimeID= rulePrimeID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimeIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrimeID=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimeID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimeID"


    // $ANTLR start "rulePrimeID"
    // InternalSCTX.g:13603:1: rulePrimeID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (kw= '\\'' )* ) ;
    public final AntlrDatatypeRuleToken rulePrimeID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;


        	enterRule();

        try {
            // InternalSCTX.g:13609:2: ( (this_ID_0= RULE_ID (kw= '\\'' )* ) )
            // InternalSCTX.g:13610:2: (this_ID_0= RULE_ID (kw= '\\'' )* )
            {
            // InternalSCTX.g:13610:2: (this_ID_0= RULE_ID (kw= '\\'' )* )
            // InternalSCTX.g:13611:3: this_ID_0= RULE_ID (kw= '\\'' )*
            {
            this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_191); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_ID_0, grammarAccess.getPrimeIDAccess().getIDTerminalRuleCall_0());
              		
            }
            // InternalSCTX.g:13618:3: (kw= '\\'' )*
            loop405:
            do {
                int alt405=2;
                int LA405_0 = input.LA(1);

                if ( (LA405_0==98) ) {
                    alt405=1;
                }


                switch (alt405) {
            	case 1 :
            	    // InternalSCTX.g:13619:4: kw= '\\''
            	    {
            	    kw=(Token)match(input,98,FollowSets000.FOLLOW_191); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getPrimeIDAccess().getApostropheKeyword_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop405;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimeID"


    // $ANTLR start "entryRuleValuedObjectReference"
    // InternalSCTX.g:13629:1: entryRuleValuedObjectReference returns [EObject current=null] : iv_ruleValuedObjectReference= ruleValuedObjectReference EOF ;
    public final EObject entryRuleValuedObjectReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObjectReference = null;


        try {
            // InternalSCTX.g:13629:62: (iv_ruleValuedObjectReference= ruleValuedObjectReference EOF )
            // InternalSCTX.g:13630:2: iv_ruleValuedObjectReference= ruleValuedObjectReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObjectReference=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObjectReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObjectReference"


    // $ANTLR start "ruleValuedObjectReference"
    // InternalSCTX.g:13636:1: ruleValuedObjectReference returns [EObject current=null] : ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ) ;
    public final EObject ruleValuedObjectReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_indices_2_0 = null;

        EObject lv_subReference_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:13642:2: ( ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ) )
            // InternalSCTX.g:13643:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? )
            {
            // InternalSCTX.g:13643:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? )
            // InternalSCTX.g:13644:3: ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            {
            // InternalSCTX.g:13644:3: ( ( rulePrimeID ) )
            // InternalSCTX.g:13645:4: ( rulePrimeID )
            {
            // InternalSCTX.g:13645:4: ( rulePrimeID )
            // InternalSCTX.g:13646:5: rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getValuedObjectReferenceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_192);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:13663:3: (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )*
            loop406:
            do {
                int alt406=2;
                int LA406_0 = input.LA(1);

                if ( (LA406_0==36) ) {
                    alt406=1;
                }


                switch (alt406) {
            	case 1 :
            	    // InternalSCTX.g:13664:4: otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']'
            	    {
            	    otherlv_1=(Token)match(input,36,FollowSets000.FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getValuedObjectReferenceAccess().getLeftSquareBracketKeyword_1_0());
            	      			
            	    }
            	    // InternalSCTX.g:13668:4: ( (lv_indices_2_0= ruleExpression ) )
            	    // InternalSCTX.g:13669:5: (lv_indices_2_0= ruleExpression )
            	    {
            	    // InternalSCTX.g:13669:5: (lv_indices_2_0= ruleExpression )
            	    // InternalSCTX.g:13670:6: lv_indices_2_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getIndicesExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    lv_indices_2_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getValuedObjectReferenceRule());
            	      						}
            	      						add(
            	      							current,
            	      							"indices",
            	      							lv_indices_2_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,37,FollowSets000.FOLLOW_192); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getValuedObjectReferenceAccess().getRightSquareBracketKeyword_1_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop406;
                }
            } while (true);

            // InternalSCTX.g:13692:3: (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            int alt407=2;
            int LA407_0 = input.LA(1);

            if ( (LA407_0==83) ) {
                alt407=1;
            }
            switch (alt407) {
                case 1 :
                    // InternalSCTX.g:13693:4: otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    {
                    otherlv_4=(Token)match(input,83,FollowSets000.FOLLOW_174); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getValuedObjectReferenceAccess().getFullStopKeyword_2_0());
                      			
                    }
                    // InternalSCTX.g:13697:4: ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    // InternalSCTX.g:13698:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    {
                    // InternalSCTX.g:13698:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    // InternalSCTX.g:13699:6: lv_subReference_5_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getSubReferenceValuedObjectReferenceParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subReference_5_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectReferenceRule());
                      						}
                      						set(
                      							current,
                      							"subReference",
                      							lv_subReference_5_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObjectReference"


    // $ANTLR start "entryRuleScheduleObjectReference"
    // InternalSCTX.g:13721:1: entryRuleScheduleObjectReference returns [EObject current=null] : iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF ;
    public final EObject entryRuleScheduleObjectReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScheduleObjectReference = null;


        try {
            // InternalSCTX.g:13721:64: (iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF )
            // InternalSCTX.g:13722:2: iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScheduleObjectReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScheduleObjectReference=ruleScheduleObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScheduleObjectReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScheduleObjectReference"


    // $ANTLR start "ruleScheduleObjectReference"
    // InternalSCTX.g:13728:1: ruleScheduleObjectReference returns [EObject current=null] : ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) ) ;
    public final EObject ruleScheduleObjectReference() throws RecognitionException {
        EObject current = null;

        Token lv_priority_1_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:13734:2: ( ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) ) )
            // InternalSCTX.g:13735:2: ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) )
            {
            // InternalSCTX.g:13735:2: ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) )
            // InternalSCTX.g:13736:3: ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) )
            {
            // InternalSCTX.g:13736:3: ( ( rulePrimeID ) )
            // InternalSCTX.g:13737:4: ( rulePrimeID )
            {
            // InternalSCTX.g:13737:4: ( rulePrimeID )
            // InternalSCTX.g:13738:5: rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getScheduleObjectReferenceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScheduleObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_193);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:13755:3: ( (lv_priority_1_0= RULE_INT ) )
            // InternalSCTX.g:13756:4: (lv_priority_1_0= RULE_INT )
            {
            // InternalSCTX.g:13756:4: (lv_priority_1_0= RULE_INT )
            // InternalSCTX.g:13757:5: lv_priority_1_0= RULE_INT
            {
            lv_priority_1_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_priority_1_0, grammarAccess.getScheduleObjectReferenceAccess().getPriorityINTTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getScheduleObjectReferenceRule());
              					}
              					setWithLastConsumed(
              						current,
              						"priority",
              						lv_priority_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.INT");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScheduleObjectReference"


    // $ANTLR start "entryRuleReferenceCall"
    // InternalSCTX.g:13777:1: entryRuleReferenceCall returns [EObject current=null] : iv_ruleReferenceCall= ruleReferenceCall EOF ;
    public final EObject entryRuleReferenceCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceCall = null;


        try {
            // InternalSCTX.g:13777:54: (iv_ruleReferenceCall= ruleReferenceCall EOF )
            // InternalSCTX.g:13778:2: iv_ruleReferenceCall= ruleReferenceCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceCall=ruleReferenceCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceCall"


    // $ANTLR start "ruleReferenceCall"
    // InternalSCTX.g:13784:1: ruleReferenceCall returns [EObject current=null] : ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) ) ;
    public final EObject ruleReferenceCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        EObject lv_indices_2_0 = null;

        EObject lv_subReference_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_9_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:13790:2: ( ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) ) )
            // InternalSCTX.g:13791:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) )
            {
            // InternalSCTX.g:13791:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) )
            // InternalSCTX.g:13792:3: ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' )
            {
            // InternalSCTX.g:13792:3: ( ( rulePrimeID ) )
            // InternalSCTX.g:13793:4: ( rulePrimeID )
            {
            // InternalSCTX.g:13793:4: ( rulePrimeID )
            // InternalSCTX.g:13794:5: rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getReferenceCallRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferenceCallAccess().getValuedObjectValuedObjectCrossReference_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_173);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:13811:3: (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )*
            loop408:
            do {
                int alt408=2;
                int LA408_0 = input.LA(1);

                if ( (LA408_0==36) ) {
                    alt408=1;
                }


                switch (alt408) {
            	case 1 :
            	    // InternalSCTX.g:13812:4: otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']'
            	    {
            	    otherlv_1=(Token)match(input,36,FollowSets000.FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getReferenceCallAccess().getLeftSquareBracketKeyword_1_0());
            	      			
            	    }
            	    // InternalSCTX.g:13816:4: ( (lv_indices_2_0= ruleExpression ) )
            	    // InternalSCTX.g:13817:5: (lv_indices_2_0= ruleExpression )
            	    {
            	    // InternalSCTX.g:13817:5: (lv_indices_2_0= ruleExpression )
            	    // InternalSCTX.g:13818:6: lv_indices_2_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getReferenceCallAccess().getIndicesExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    lv_indices_2_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getReferenceCallRule());
            	      						}
            	      						add(
            	      							current,
            	      							"indices",
            	      							lv_indices_2_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,37,FollowSets000.FOLLOW_173); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getReferenceCallAccess().getRightSquareBracketKeyword_1_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop408;
                }
            } while (true);

            // InternalSCTX.g:13840:3: (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            int alt409=2;
            int LA409_0 = input.LA(1);

            if ( (LA409_0==83) ) {
                alt409=1;
            }
            switch (alt409) {
                case 1 :
                    // InternalSCTX.g:13841:4: otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    {
                    otherlv_4=(Token)match(input,83,FollowSets000.FOLLOW_174); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getReferenceCallAccess().getFullStopKeyword_2_0());
                      			
                    }
                    // InternalSCTX.g:13845:4: ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    // InternalSCTX.g:13846:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    {
                    // InternalSCTX.g:13846:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    // InternalSCTX.g:13847:6: lv_subReference_5_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getReferenceCallAccess().getSubReferenceValuedObjectReferenceParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_120);
                    lv_subReference_5_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getReferenceCallRule());
                      						}
                      						set(
                      							current,
                      							"subReference",
                      							lv_subReference_5_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:13865:3: ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' )
            int alt411=2;
            int LA411_0 = input.LA(1);

            if ( (LA411_0==31) ) {
                alt411=1;
            }
            else if ( (LA411_0==70) ) {
                alt411=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 411, 0, input);

                throw nvae;
            }
            switch (alt411) {
                case 1 :
                    // InternalSCTX.g:13866:4: (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' )
                    {
                    // InternalSCTX.g:13866:4: (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' )
                    // InternalSCTX.g:13867:5: otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')'
                    {
                    otherlv_6=(Token)match(input,31,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getReferenceCallAccess().getLeftParenthesisKeyword_3_0_0());
                      				
                    }
                    // InternalSCTX.g:13871:5: ( (lv_parameters_7_0= ruleParameter ) )
                    // InternalSCTX.g:13872:6: (lv_parameters_7_0= ruleParameter )
                    {
                    // InternalSCTX.g:13872:6: (lv_parameters_7_0= ruleParameter )
                    // InternalSCTX.g:13873:7: lv_parameters_7_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceCallAccess().getParametersParameterParserRuleCall_3_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_parameters_7_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceCallRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_7_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:13890:5: (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )*
                    loop410:
                    do {
                        int alt410=2;
                        int LA410_0 = input.LA(1);

                        if ( (LA410_0==20) ) {
                            alt410=1;
                        }


                        switch (alt410) {
                    	case 1 :
                    	    // InternalSCTX.g:13891:6: otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) )
                    	    {
                    	    otherlv_8=(Token)match(input,20,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_8, grammarAccess.getReferenceCallAccess().getCommaKeyword_3_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCTX.g:13895:6: ( (lv_parameters_9_0= ruleParameter ) )
                    	    // InternalSCTX.g:13896:7: (lv_parameters_9_0= ruleParameter )
                    	    {
                    	    // InternalSCTX.g:13896:7: (lv_parameters_9_0= ruleParameter )
                    	    // InternalSCTX.g:13897:8: lv_parameters_9_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceCallAccess().getParametersParameterParserRuleCall_3_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_31);
                    	    lv_parameters_9_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceCallRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_9_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop410;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_10, grammarAccess.getReferenceCallAccess().getRightParenthesisKeyword_3_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:13921:4: otherlv_11= '()'
                    {
                    otherlv_11=(Token)match(input,70,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getReferenceCallAccess().getLeftParenthesisRightParenthesisKeyword_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceCall"


    // $ANTLR start "entryRuleRandomCall"
    // InternalSCTX.g:13930:1: entryRuleRandomCall returns [EObject current=null] : iv_ruleRandomCall= ruleRandomCall EOF ;
    public final EObject entryRuleRandomCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRandomCall = null;


        try {
            // InternalSCTX.g:13930:51: (iv_ruleRandomCall= ruleRandomCall EOF )
            // InternalSCTX.g:13931:2: iv_ruleRandomCall= ruleRandomCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRandomCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRandomCall=ruleRandomCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRandomCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRandomCall"


    // $ANTLR start "ruleRandomCall"
    // InternalSCTX.g:13937:1: ruleRandomCall returns [EObject current=null] : ( () otherlv_1= 'random' (otherlv_2= '()' )? ) ;
    public final EObject ruleRandomCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;


        	enterRule();

        try {
            // InternalSCTX.g:13943:2: ( ( () otherlv_1= 'random' (otherlv_2= '()' )? ) )
            // InternalSCTX.g:13944:2: ( () otherlv_1= 'random' (otherlv_2= '()' )? )
            {
            // InternalSCTX.g:13944:2: ( () otherlv_1= 'random' (otherlv_2= '()' )? )
            // InternalSCTX.g:13945:3: () otherlv_1= 'random' (otherlv_2= '()' )?
            {
            // InternalSCTX.g:13945:3: ()
            // InternalSCTX.g:13946:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRandomCallAccess().getRandomCallAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,99,FollowSets000.FOLLOW_194); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getRandomCallAccess().getRandomKeyword_1());
              		
            }
            // InternalSCTX.g:13959:3: (otherlv_2= '()' )?
            int alt412=2;
            int LA412_0 = input.LA(1);

            if ( (LA412_0==70) ) {
                alt412=1;
            }
            switch (alt412) {
                case 1 :
                    // InternalSCTX.g:13960:4: otherlv_2= '()'
                    {
                    otherlv_2=(Token)match(input,70,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getRandomCallAccess().getLeftParenthesisRightParenthesisKeyword_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRandomCall"


    // $ANTLR start "entryRuleRandomizeCall"
    // InternalSCTX.g:13969:1: entryRuleRandomizeCall returns [EObject current=null] : iv_ruleRandomizeCall= ruleRandomizeCall EOF ;
    public final EObject entryRuleRandomizeCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRandomizeCall = null;


        try {
            // InternalSCTX.g:13969:54: (iv_ruleRandomizeCall= ruleRandomizeCall EOF )
            // InternalSCTX.g:13970:2: iv_ruleRandomizeCall= ruleRandomizeCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRandomizeCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRandomizeCall=ruleRandomizeCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRandomizeCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRandomizeCall"


    // $ANTLR start "ruleRandomizeCall"
    // InternalSCTX.g:13976:1: ruleRandomizeCall returns [EObject current=null] : ( () otherlv_1= 'randomize' (otherlv_2= '()' )? ) ;
    public final EObject ruleRandomizeCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;


        	enterRule();

        try {
            // InternalSCTX.g:13982:2: ( ( () otherlv_1= 'randomize' (otherlv_2= '()' )? ) )
            // InternalSCTX.g:13983:2: ( () otherlv_1= 'randomize' (otherlv_2= '()' )? )
            {
            // InternalSCTX.g:13983:2: ( () otherlv_1= 'randomize' (otherlv_2= '()' )? )
            // InternalSCTX.g:13984:3: () otherlv_1= 'randomize' (otherlv_2= '()' )?
            {
            // InternalSCTX.g:13984:3: ()
            // InternalSCTX.g:13985:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRandomizeCallAccess().getRandomizeCallAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,85,FollowSets000.FOLLOW_194); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getRandomizeCallAccess().getRandomizeKeyword_1());
              		
            }
            // InternalSCTX.g:13998:3: (otherlv_2= '()' )?
            int alt413=2;
            int LA413_0 = input.LA(1);

            if ( (LA413_0==70) ) {
                alt413=1;
            }
            switch (alt413) {
                case 1 :
                    // InternalSCTX.g:13999:4: otherlv_2= '()'
                    {
                    otherlv_2=(Token)match(input,70,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getRandomizeCallAccess().getLeftParenthesisRightParenthesisKeyword_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRandomizeCall"


    // $ANTLR start "entryRuleFunctionCall"
    // InternalSCTX.g:14008:1: entryRuleFunctionCall returns [EObject current=null] : iv_ruleFunctionCall= ruleFunctionCall EOF ;
    public final EObject entryRuleFunctionCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionCall = null;


        try {
            // InternalSCTX.g:14008:53: (iv_ruleFunctionCall= ruleFunctionCall EOF )
            // InternalSCTX.g:14009:2: iv_ruleFunctionCall= ruleFunctionCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunctionCall=ruleFunctionCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionCall"


    // $ANTLR start "ruleFunctionCall"
    // InternalSCTX.g:14015:1: ruleFunctionCall returns [EObject current=null] : (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) ;
    public final EObject ruleFunctionCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_functionName_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:14021:2: ( (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) )
            // InternalSCTX.g:14022:2: (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) )
            {
            // InternalSCTX.g:14022:2: (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) )
            // InternalSCTX.g:14023:3: otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' )
            {
            otherlv_0=(Token)match(input,80,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFunctionCallAccess().getExternKeyword_0());
              		
            }
            // InternalSCTX.g:14027:3: ( (lv_functionName_1_0= RULE_ID ) )
            // InternalSCTX.g:14028:4: (lv_functionName_1_0= RULE_ID )
            {
            // InternalSCTX.g:14028:4: (lv_functionName_1_0= RULE_ID )
            // InternalSCTX.g:14029:5: lv_functionName_1_0= RULE_ID
            {
            lv_functionName_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_120); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_functionName_1_0, grammarAccess.getFunctionCallAccess().getFunctionNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getFunctionCallRule());
              					}
              					setWithLastConsumed(
              						current,
              						"functionName",
              						lv_functionName_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalSCTX.g:14045:3: ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' )
            int alt415=2;
            int LA415_0 = input.LA(1);

            if ( (LA415_0==31) ) {
                alt415=1;
            }
            else if ( (LA415_0==70) ) {
                alt415=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 415, 0, input);

                throw nvae;
            }
            switch (alt415) {
                case 1 :
                    // InternalSCTX.g:14046:4: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
                    {
                    // InternalSCTX.g:14046:4: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
                    // InternalSCTX.g:14047:5: otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')'
                    {
                    otherlv_2=(Token)match(input,31,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_2_0_0());
                      				
                    }
                    // InternalSCTX.g:14051:5: ( (lv_parameters_3_0= ruleParameter ) )
                    // InternalSCTX.g:14052:6: (lv_parameters_3_0= ruleParameter )
                    {
                    // InternalSCTX.g:14052:6: (lv_parameters_3_0= ruleParameter )
                    // InternalSCTX.g:14053:7: lv_parameters_3_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_2_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_parameters_3_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFunctionCallRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:14070:5: (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )*
                    loop414:
                    do {
                        int alt414=2;
                        int LA414_0 = input.LA(1);

                        if ( (LA414_0==20) ) {
                            alt414=1;
                        }


                        switch (alt414) {
                    	case 1 :
                    	    // InternalSCTX.g:14071:6: otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) )
                    	    {
                    	    otherlv_4=(Token)match(input,20,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getFunctionCallAccess().getCommaKeyword_2_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCTX.g:14075:6: ( (lv_parameters_5_0= ruleParameter ) )
                    	    // InternalSCTX.g:14076:7: (lv_parameters_5_0= ruleParameter )
                    	    {
                    	    // InternalSCTX.g:14076:7: (lv_parameters_5_0= ruleParameter )
                    	    // InternalSCTX.g:14077:8: lv_parameters_5_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_2_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_31);
                    	    lv_parameters_5_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getFunctionCallRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_5_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop414;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_2_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:14101:4: otherlv_7= '()'
                    {
                    otherlv_7=(Token)match(input,70,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_2_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionCall"


    // $ANTLR start "entryRuleParameter"
    // InternalSCTX.g:14110:1: entryRuleParameter returns [EObject current=null] : iv_ruleParameter= ruleParameter EOF ;
    public final EObject entryRuleParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameter = null;


        try {
            // InternalSCTX.g:14110:50: (iv_ruleParameter= ruleParameter EOF )
            // InternalSCTX.g:14111:2: iv_ruleParameter= ruleParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleParameter=ruleParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameter"


    // $ANTLR start "ruleParameter"
    // InternalSCTX.g:14117:1: ruleParameter returns [EObject current=null] : ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) ) ;
    public final EObject ruleParameter() throws RecognitionException {
        EObject current = null;

        Token lv_pureOutput_0_0=null;
        Token lv_callByReference_1_0=null;
        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:14123:2: ( ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) ) )
            // InternalSCTX.g:14124:2: ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) )
            {
            // InternalSCTX.g:14124:2: ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) )
            // InternalSCTX.g:14125:3: ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) )
            {
            // InternalSCTX.g:14125:3: ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )?
            int alt417=2;
            int LA417_0 = input.LA(1);

            if ( (LA417_0==33) ) {
                int LA417_1 = input.LA(2);

                if ( (LA417_1==34) ) {
                    alt417=1;
                }
            }
            else if ( (LA417_0==34) ) {
                alt417=1;
            }
            switch (alt417) {
                case 1 :
                    // InternalSCTX.g:14126:4: ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) )
                    {
                    // InternalSCTX.g:14126:4: ( (lv_pureOutput_0_0= '!' ) )?
                    int alt416=2;
                    int LA416_0 = input.LA(1);

                    if ( (LA416_0==33) ) {
                        alt416=1;
                    }
                    switch (alt416) {
                        case 1 :
                            // InternalSCTX.g:14127:5: (lv_pureOutput_0_0= '!' )
                            {
                            // InternalSCTX.g:14127:5: (lv_pureOutput_0_0= '!' )
                            // InternalSCTX.g:14128:6: lv_pureOutput_0_0= '!'
                            {
                            lv_pureOutput_0_0=(Token)match(input,33,FollowSets000.FOLLOW_33); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_pureOutput_0_0, grammarAccess.getParameterAccess().getPureOutputExclamationMarkKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getParameterRule());
                              						}
                              						setWithLastConsumed(current, "pureOutput", true, "!");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:14140:4: ( (lv_callByReference_1_0= '&' ) )
                    // InternalSCTX.g:14141:5: (lv_callByReference_1_0= '&' )
                    {
                    // InternalSCTX.g:14141:5: (lv_callByReference_1_0= '&' )
                    // InternalSCTX.g:14142:6: lv_callByReference_1_0= '&'
                    {
                    lv_callByReference_1_0=(Token)match(input,34,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_callByReference_1_0, grammarAccess.getParameterAccess().getCallByReferenceAmpersandKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getParameterRule());
                      						}
                      						setWithLastConsumed(current, "callByReference", true, "&");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:14155:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalSCTX.g:14156:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalSCTX.g:14156:4: (lv_expression_2_0= ruleExpression )
            // InternalSCTX.g:14157:5: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getParameterAccess().getExpressionExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getParameterRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameter"


    // $ANTLR start "entryRuleTextExpression"
    // InternalSCTX.g:14178:1: entryRuleTextExpression returns [EObject current=null] : iv_ruleTextExpression= ruleTextExpression EOF ;
    public final EObject entryRuleTextExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTextExpression = null;


        try {
            // InternalSCTX.g:14178:55: (iv_ruleTextExpression= ruleTextExpression EOF )
            // InternalSCTX.g:14179:2: iv_ruleTextExpression= ruleTextExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTextExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTextExpression=ruleTextExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTextExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTextExpression"


    // $ANTLR start "ruleTextExpression"
    // InternalSCTX.g:14185:1: ruleTextExpression returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) ;
    public final EObject ruleTextExpression() throws RecognitionException {
        EObject current = null;

        Token lv_text_1_0=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:14191:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) )
            // InternalSCTX.g:14192:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            {
            // InternalSCTX.g:14192:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            // InternalSCTX.g:14193:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) )
            {
            // InternalSCTX.g:14193:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop418:
            do {
                int alt418=2;
                int LA418_0 = input.LA(1);

                if ( (LA418_0==RULE_COMMENT_ANNOTATION||LA418_0==103) ) {
                    alt418=1;
                }


                switch (alt418) {
            	case 1 :
            	    // InternalSCTX.g:14194:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:14194:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:14195:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getTextExpressionAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_172);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getTextExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop418;
                }
            } while (true);

            // InternalSCTX.g:14212:3: ( (lv_text_1_0= RULE_HOSTCODE ) )
            // InternalSCTX.g:14213:4: (lv_text_1_0= RULE_HOSTCODE )
            {
            // InternalSCTX.g:14213:4: (lv_text_1_0= RULE_HOSTCODE )
            // InternalSCTX.g:14214:5: lv_text_1_0= RULE_HOSTCODE
            {
            lv_text_1_0=(Token)match(input,RULE_HOSTCODE,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_text_1_0, grammarAccess.getTextExpressionAccess().getTextHOSTCODETerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTextExpressionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"text",
              						lv_text_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.HOSTCODE");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTextExpression"


    // $ANTLR start "entryRuleIntValue"
    // InternalSCTX.g:14234:1: entryRuleIntValue returns [EObject current=null] : iv_ruleIntValue= ruleIntValue EOF ;
    public final EObject entryRuleIntValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntValue = null;


        try {
            // InternalSCTX.g:14234:49: (iv_ruleIntValue= ruleIntValue EOF )
            // InternalSCTX.g:14235:2: iv_ruleIntValue= ruleIntValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIntValue=ruleIntValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntValue"


    // $ANTLR start "ruleIntValue"
    // InternalSCTX.g:14241:1: ruleIntValue returns [EObject current=null] : ( (lv_value_0_0= RULE_INT ) ) ;
    public final EObject ruleIntValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:14247:2: ( ( (lv_value_0_0= RULE_INT ) ) )
            // InternalSCTX.g:14248:2: ( (lv_value_0_0= RULE_INT ) )
            {
            // InternalSCTX.g:14248:2: ( (lv_value_0_0= RULE_INT ) )
            // InternalSCTX.g:14249:3: (lv_value_0_0= RULE_INT )
            {
            // InternalSCTX.g:14249:3: (lv_value_0_0= RULE_INT )
            // InternalSCTX.g:14250:4: lv_value_0_0= RULE_INT
            {
            lv_value_0_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getIntValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.INT");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntValue"


    // $ANTLR start "entryRuleFloatValue"
    // InternalSCTX.g:14269:1: entryRuleFloatValue returns [EObject current=null] : iv_ruleFloatValue= ruleFloatValue EOF ;
    public final EObject entryRuleFloatValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFloatValue = null;


        try {
            // InternalSCTX.g:14269:51: (iv_ruleFloatValue= ruleFloatValue EOF )
            // InternalSCTX.g:14270:2: iv_ruleFloatValue= ruleFloatValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFloatValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFloatValue=ruleFloatValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFloatValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFloatValue"


    // $ANTLR start "ruleFloatValue"
    // InternalSCTX.g:14276:1: ruleFloatValue returns [EObject current=null] : ( (lv_value_0_0= RULE_FLOAT ) ) ;
    public final EObject ruleFloatValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:14282:2: ( ( (lv_value_0_0= RULE_FLOAT ) ) )
            // InternalSCTX.g:14283:2: ( (lv_value_0_0= RULE_FLOAT ) )
            {
            // InternalSCTX.g:14283:2: ( (lv_value_0_0= RULE_FLOAT ) )
            // InternalSCTX.g:14284:3: (lv_value_0_0= RULE_FLOAT )
            {
            // InternalSCTX.g:14284:3: (lv_value_0_0= RULE_FLOAT )
            // InternalSCTX.g:14285:4: lv_value_0_0= RULE_FLOAT
            {
            lv_value_0_0=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getFloatValueAccess().getValueFLOATTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFloatValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.FLOAT");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFloatValue"


    // $ANTLR start "entryRuleBoolValue"
    // InternalSCTX.g:14304:1: entryRuleBoolValue returns [EObject current=null] : iv_ruleBoolValue= ruleBoolValue EOF ;
    public final EObject entryRuleBoolValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBoolValue = null;


        try {
            // InternalSCTX.g:14304:50: (iv_ruleBoolValue= ruleBoolValue EOF )
            // InternalSCTX.g:14305:2: iv_ruleBoolValue= ruleBoolValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBoolValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBoolValue=ruleBoolValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBoolValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBoolValue"


    // $ANTLR start "ruleBoolValue"
    // InternalSCTX.g:14311:1: ruleBoolValue returns [EObject current=null] : ( (lv_value_0_0= RULE_BOOLEAN ) ) ;
    public final EObject ruleBoolValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:14317:2: ( ( (lv_value_0_0= RULE_BOOLEAN ) ) )
            // InternalSCTX.g:14318:2: ( (lv_value_0_0= RULE_BOOLEAN ) )
            {
            // InternalSCTX.g:14318:2: ( (lv_value_0_0= RULE_BOOLEAN ) )
            // InternalSCTX.g:14319:3: (lv_value_0_0= RULE_BOOLEAN )
            {
            // InternalSCTX.g:14319:3: (lv_value_0_0= RULE_BOOLEAN )
            // InternalSCTX.g:14320:4: lv_value_0_0= RULE_BOOLEAN
            {
            lv_value_0_0=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getBoolValueAccess().getValueBOOLEANTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getBoolValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.BOOLEAN");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBoolValue"


    // $ANTLR start "entryRuleStringValue"
    // InternalSCTX.g:14339:1: entryRuleStringValue returns [EObject current=null] : iv_ruleStringValue= ruleStringValue EOF ;
    public final EObject entryRuleStringValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringValue = null;


        try {
            // InternalSCTX.g:14339:52: (iv_ruleStringValue= ruleStringValue EOF )
            // InternalSCTX.g:14340:2: iv_ruleStringValue= ruleStringValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringValue=ruleStringValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringValue"


    // $ANTLR start "ruleStringValue"
    // InternalSCTX.g:14346:1: ruleStringValue returns [EObject current=null] : ( (lv_value_0_0= RULE_STRING ) ) ;
    public final EObject ruleStringValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:14352:2: ( ( (lv_value_0_0= RULE_STRING ) ) )
            // InternalSCTX.g:14353:2: ( (lv_value_0_0= RULE_STRING ) )
            {
            // InternalSCTX.g:14353:2: ( (lv_value_0_0= RULE_STRING ) )
            // InternalSCTX.g:14354:3: (lv_value_0_0= RULE_STRING )
            {
            // InternalSCTX.g:14354:3: (lv_value_0_0= RULE_STRING )
            // InternalSCTX.g:14355:4: lv_value_0_0= RULE_STRING
            {
            lv_value_0_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getStringValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.STRING");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringValue"


    // $ANTLR start "entryRuleVectorValue"
    // InternalSCTX.g:14374:1: entryRuleVectorValue returns [EObject current=null] : iv_ruleVectorValue= ruleVectorValue EOF ;
    public final EObject entryRuleVectorValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVectorValue = null;


        try {
            // InternalSCTX.g:14374:52: (iv_ruleVectorValue= ruleVectorValue EOF )
            // InternalSCTX.g:14375:2: iv_ruleVectorValue= ruleVectorValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVectorValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVectorValue=ruleVectorValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVectorValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVectorValue"


    // $ANTLR start "ruleVectorValue"
    // InternalSCTX.g:14381:1: ruleVectorValue returns [EObject current=null] : (otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}' ) ;
    public final EObject ruleVectorValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_values_1_0 = null;

        EObject lv_values_3_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:14387:2: ( (otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}' ) )
            // InternalSCTX.g:14388:2: (otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}' )
            {
            // InternalSCTX.g:14388:2: (otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}' )
            // InternalSCTX.g:14389:3: otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}'
            {
            otherlv_0=(Token)match(input,21,FollowSets000.FOLLOW_195); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getVectorValueAccess().getLeftCurlyBracketKeyword_0());
              		
            }
            // InternalSCTX.g:14393:3: ( (lv_values_1_0= ruleVectorValueMember ) )
            // InternalSCTX.g:14394:4: (lv_values_1_0= ruleVectorValueMember )
            {
            // InternalSCTX.g:14394:4: (lv_values_1_0= ruleVectorValueMember )
            // InternalSCTX.g:14395:5: lv_values_1_0= ruleVectorValueMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVectorValueAccess().getValuesVectorValueMemberParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_168);
            lv_values_1_0=ruleVectorValueMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVectorValueRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.VectorValueMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:14412:3: (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )*
            loop419:
            do {
                int alt419=2;
                int LA419_0 = input.LA(1);

                if ( (LA419_0==20) ) {
                    alt419=1;
                }


                switch (alt419) {
            	case 1 :
            	    // InternalSCTX.g:14413:4: otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) )
            	    {
            	    otherlv_2=(Token)match(input,20,FollowSets000.FOLLOW_195); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getVectorValueAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalSCTX.g:14417:4: ( (lv_values_3_0= ruleVectorValueMember ) )
            	    // InternalSCTX.g:14418:5: (lv_values_3_0= ruleVectorValueMember )
            	    {
            	    // InternalSCTX.g:14418:5: (lv_values_3_0= ruleVectorValueMember )
            	    // InternalSCTX.g:14419:6: lv_values_3_0= ruleVectorValueMember
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getVectorValueAccess().getValuesVectorValueMemberParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_168);
            	    lv_values_3_0=ruleVectorValueMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getVectorValueRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_3_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.VectorValueMember");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop419;
                }
            } while (true);

            otherlv_4=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getVectorValueAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVectorValue"


    // $ANTLR start "entryRuleVectorValueMember"
    // InternalSCTX.g:14445:1: entryRuleVectorValueMember returns [EObject current=null] : iv_ruleVectorValueMember= ruleVectorValueMember EOF ;
    public final EObject entryRuleVectorValueMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVectorValueMember = null;


        try {
            // InternalSCTX.g:14445:58: (iv_ruleVectorValueMember= ruleVectorValueMember EOF )
            // InternalSCTX.g:14446:2: iv_ruleVectorValueMember= ruleVectorValueMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVectorValueMemberRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVectorValueMember=ruleVectorValueMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVectorValueMember; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVectorValueMember"


    // $ANTLR start "ruleVectorValueMember"
    // InternalSCTX.g:14452:1: ruleVectorValueMember returns [EObject current=null] : (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue ) ;
    public final EObject ruleVectorValueMember() throws RecognitionException {
        EObject current = null;

        EObject this_BoolExpression_0 = null;

        EObject this_ValuedExpression_1 = null;

        EObject this_IgnoreValue_2 = null;



        	enterRule();

        try {
            // InternalSCTX.g:14458:2: ( (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue ) )
            // InternalSCTX.g:14459:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue )
            {
            // InternalSCTX.g:14459:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue )
            int alt420=3;
            alt420 = dfa420.predict(input);
            switch (alt420) {
                case 1 :
                    // InternalSCTX.g:14460:3: this_BoolExpression_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVectorValueMemberAccess().getBoolExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolExpression_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoolExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:14472:3: this_ValuedExpression_1= ruleValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVectorValueMemberAccess().getValuedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedExpression_1=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:14484:3: this_IgnoreValue_2= ruleIgnoreValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVectorValueMemberAccess().getIgnoreValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IgnoreValue_2=ruleIgnoreValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IgnoreValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVectorValueMember"


    // $ANTLR start "entryRuleIgnoreValue"
    // InternalSCTX.g:14499:1: entryRuleIgnoreValue returns [EObject current=null] : iv_ruleIgnoreValue= ruleIgnoreValue EOF ;
    public final EObject entryRuleIgnoreValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIgnoreValue = null;


        try {
            // InternalSCTX.g:14499:52: (iv_ruleIgnoreValue= ruleIgnoreValue EOF )
            // InternalSCTX.g:14500:2: iv_ruleIgnoreValue= ruleIgnoreValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIgnoreValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIgnoreValue=ruleIgnoreValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIgnoreValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIgnoreValue"


    // $ANTLR start "ruleIgnoreValue"
    // InternalSCTX.g:14506:1: ruleIgnoreValue returns [EObject current=null] : ( () otherlv_1= '_' ) ;
    public final EObject ruleIgnoreValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalSCTX.g:14512:2: ( ( () otherlv_1= '_' ) )
            // InternalSCTX.g:14513:2: ( () otherlv_1= '_' )
            {
            // InternalSCTX.g:14513:2: ( () otherlv_1= '_' )
            // InternalSCTX.g:14514:3: () otherlv_1= '_'
            {
            // InternalSCTX.g:14514:3: ()
            // InternalSCTX.g:14515:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getIgnoreValueAccess().getIgnoreValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,100,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getIgnoreValueAccess().get_Keyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIgnoreValue"


    // $ANTLR start "entryRuleAnyValue"
    // InternalSCTX.g:14532:1: entryRuleAnyValue returns [EObject current=null] : iv_ruleAnyValue= ruleAnyValue EOF ;
    public final EObject entryRuleAnyValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnyValue = null;


        try {
            // InternalSCTX.g:14532:49: (iv_ruleAnyValue= ruleAnyValue EOF )
            // InternalSCTX.g:14533:2: iv_ruleAnyValue= ruleAnyValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnyValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnyValue=ruleAnyValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnyValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnyValue"


    // $ANTLR start "ruleAnyValue"
    // InternalSCTX.g:14539:1: ruleAnyValue returns [EObject current=null] : (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue ) ;
    public final EObject ruleAnyValue() throws RecognitionException {
        EObject current = null;

        EObject this_IntValue_0 = null;

        EObject this_FloatValue_1 = null;

        EObject this_BoolValue_2 = null;

        EObject this_StringValue_3 = null;



        	enterRule();

        try {
            // InternalSCTX.g:14545:2: ( (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue ) )
            // InternalSCTX.g:14546:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue )
            {
            // InternalSCTX.g:14546:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue )
            int alt421=4;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt421=1;
                }
                break;
            case RULE_FLOAT:
                {
                alt421=2;
                }
                break;
            case RULE_BOOLEAN:
                {
                alt421=3;
                }
                break;
            case RULE_STRING:
                {
                alt421=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 421, 0, input);

                throw nvae;
            }

            switch (alt421) {
                case 1 :
                    // InternalSCTX.g:14547:3: this_IntValue_0= ruleIntValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnyValueAccess().getIntValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IntValue_0=ruleIntValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IntValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:14559:3: this_FloatValue_1= ruleFloatValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnyValueAccess().getFloatValueParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FloatValue_1=ruleFloatValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FloatValue_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:14571:3: this_BoolValue_2= ruleBoolValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnyValueAccess().getBoolValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolValue_2=ruleBoolValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoolValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:14583:3: this_StringValue_3= ruleStringValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnyValueAccess().getStringValueParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringValue_3=ruleStringValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringValue_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnyValue"


    // $ANTLR start "entryRuleJsonObjectValue"
    // InternalSCTX.g:14598:1: entryRuleJsonObjectValue returns [EObject current=null] : iv_ruleJsonObjectValue= ruleJsonObjectValue EOF ;
    public final EObject entryRuleJsonObjectValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonObjectValue = null;


        try {
            // InternalSCTX.g:14598:56: (iv_ruleJsonObjectValue= ruleJsonObjectValue EOF )
            // InternalSCTX.g:14599:2: iv_ruleJsonObjectValue= ruleJsonObjectValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonObjectValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonObjectValue=ruleJsonObjectValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonObjectValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonObjectValue"


    // $ANTLR start "ruleJsonObjectValue"
    // InternalSCTX.g:14605:1: ruleJsonObjectValue returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleJsonObjectValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_members_2_0 = null;

        EObject lv_members_4_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:14611:2: ( ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' ) )
            // InternalSCTX.g:14612:2: ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' )
            {
            // InternalSCTX.g:14612:2: ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' )
            // InternalSCTX.g:14613:3: () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}'
            {
            // InternalSCTX.g:14613:3: ()
            // InternalSCTX.g:14614:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getJsonObjectValueAccess().getJsonObjectValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,21,FollowSets000.FOLLOW_196); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJsonObjectValueAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalSCTX.g:14627:3: ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )?
            int alt423=2;
            int LA423_0 = input.LA(1);

            if ( (LA423_0==RULE_STRING) ) {
                alt423=1;
            }
            switch (alt423) {
                case 1 :
                    // InternalSCTX.g:14628:4: ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )*
                    {
                    // InternalSCTX.g:14628:4: ( (lv_members_2_0= ruleJsonObjectMember ) )
                    // InternalSCTX.g:14629:5: (lv_members_2_0= ruleJsonObjectMember )
                    {
                    // InternalSCTX.g:14629:5: (lv_members_2_0= ruleJsonObjectMember )
                    // InternalSCTX.g:14630:6: lv_members_2_0= ruleJsonObjectMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJsonObjectValueAccess().getMembersJsonObjectMemberParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_168);
                    lv_members_2_0=ruleJsonObjectMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJsonObjectValueRule());
                      						}
                      						add(
                      							current,
                      							"members",
                      							lv_members_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:14647:4: (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )*
                    loop422:
                    do {
                        int alt422=2;
                        int LA422_0 = input.LA(1);

                        if ( (LA422_0==20) ) {
                            alt422=1;
                        }


                        switch (alt422) {
                    	case 1 :
                    	    // InternalSCTX.g:14648:5: otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) )
                    	    {
                    	    otherlv_3=(Token)match(input,20,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getJsonObjectValueAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:14652:5: ( (lv_members_4_0= ruleJsonObjectMember ) )
                    	    // InternalSCTX.g:14653:6: (lv_members_4_0= ruleJsonObjectMember )
                    	    {
                    	    // InternalSCTX.g:14653:6: (lv_members_4_0= ruleJsonObjectMember )
                    	    // InternalSCTX.g:14654:7: lv_members_4_0= ruleJsonObjectMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJsonObjectValueAccess().getMembersJsonObjectMemberParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_168);
                    	    lv_members_4_0=ruleJsonObjectMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJsonObjectValueRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"members",
                    	      								lv_members_4_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop422;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getJsonObjectValueAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonObjectValue"


    // $ANTLR start "entryRuleJsonObjectMember"
    // InternalSCTX.g:14681:1: entryRuleJsonObjectMember returns [EObject current=null] : iv_ruleJsonObjectMember= ruleJsonObjectMember EOF ;
    public final EObject entryRuleJsonObjectMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonObjectMember = null;


        try {
            // InternalSCTX.g:14681:57: (iv_ruleJsonObjectMember= ruleJsonObjectMember EOF )
            // InternalSCTX.g:14682:2: iv_ruleJsonObjectMember= ruleJsonObjectMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonObjectMemberRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonObjectMember=ruleJsonObjectMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonObjectMember; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonObjectMember"


    // $ANTLR start "ruleJsonObjectMember"
    // InternalSCTX.g:14688:1: ruleJsonObjectMember returns [EObject current=null] : ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) ) ;
    public final EObject ruleJsonObjectMember() throws RecognitionException {
        EObject current = null;

        Token lv_key_0_0=null;
        Token otherlv_1=null;
        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:14694:2: ( ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) ) )
            // InternalSCTX.g:14695:2: ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) )
            {
            // InternalSCTX.g:14695:2: ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) )
            // InternalSCTX.g:14696:3: ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) )
            {
            // InternalSCTX.g:14696:3: ( (lv_key_0_0= RULE_STRING ) )
            // InternalSCTX.g:14697:4: (lv_key_0_0= RULE_STRING )
            {
            // InternalSCTX.g:14697:4: (lv_key_0_0= RULE_STRING )
            // InternalSCTX.g:14698:5: lv_key_0_0= RULE_STRING
            {
            lv_key_0_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_key_0_0, grammarAccess.getJsonObjectMemberAccess().getKeySTRINGTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getJsonObjectMemberRule());
              					}
              					setWithLastConsumed(
              						current,
              						"key",
              						lv_key_0_0,
              						"de.cau.cs.kieler.annotations.Annotations.STRING");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,48,FollowSets000.FOLLOW_197); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJsonObjectMemberAccess().getColonKeyword_1());
              		
            }
            // InternalSCTX.g:14718:3: ( (lv_value_2_0= ruleJsonValue ) )
            // InternalSCTX.g:14719:4: (lv_value_2_0= ruleJsonValue )
            {
            // InternalSCTX.g:14719:4: (lv_value_2_0= ruleJsonValue )
            // InternalSCTX.g:14720:5: lv_value_2_0= ruleJsonValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJsonObjectMemberAccess().getValueJsonValueParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_value_2_0=ruleJsonValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJsonObjectMemberRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.JsonValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonObjectMember"


    // $ANTLR start "entryRuleJsonArrayValue"
    // InternalSCTX.g:14741:1: entryRuleJsonArrayValue returns [EObject current=null] : iv_ruleJsonArrayValue= ruleJsonArrayValue EOF ;
    public final EObject entryRuleJsonArrayValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonArrayValue = null;


        try {
            // InternalSCTX.g:14741:55: (iv_ruleJsonArrayValue= ruleJsonArrayValue EOF )
            // InternalSCTX.g:14742:2: iv_ruleJsonArrayValue= ruleJsonArrayValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonArrayValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonArrayValue=ruleJsonArrayValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonArrayValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonArrayValue"


    // $ANTLR start "ruleJsonArrayValue"
    // InternalSCTX.g:14748:1: ruleJsonArrayValue returns [EObject current=null] : ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' ) ;
    public final EObject ruleJsonArrayValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_4_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:14754:2: ( ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' ) )
            // InternalSCTX.g:14755:2: ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' )
            {
            // InternalSCTX.g:14755:2: ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' )
            // InternalSCTX.g:14756:3: () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']'
            {
            // InternalSCTX.g:14756:3: ()
            // InternalSCTX.g:14757:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getJsonArrayValueAccess().getJsonArrayValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,36,FollowSets000.FOLLOW_198); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJsonArrayValueAccess().getLeftSquareBracketKeyword_1());
              		
            }
            // InternalSCTX.g:14770:3: ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )?
            int alt425=2;
            int LA425_0 = input.LA(1);

            if ( (LA425_0==RULE_STRING||(LA425_0>=RULE_INT && LA425_0<=RULE_FLOAT)||LA425_0==RULE_BOOLEAN||LA425_0==21||LA425_0==36||LA425_0==101) ) {
                alt425=1;
            }
            switch (alt425) {
                case 1 :
                    // InternalSCTX.g:14771:4: ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )*
                    {
                    // InternalSCTX.g:14771:4: ( (lv_elements_2_0= ruleJsonValue ) )
                    // InternalSCTX.g:14772:5: (lv_elements_2_0= ruleJsonValue )
                    {
                    // InternalSCTX.g:14772:5: (lv_elements_2_0= ruleJsonValue )
                    // InternalSCTX.g:14773:6: lv_elements_2_0= ruleJsonValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJsonArrayValueAccess().getElementsJsonValueParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_199);
                    lv_elements_2_0=ruleJsonValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJsonArrayValueRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.JsonValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:14790:4: (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )*
                    loop424:
                    do {
                        int alt424=2;
                        int LA424_0 = input.LA(1);

                        if ( (LA424_0==20) ) {
                            alt424=1;
                        }


                        switch (alt424) {
                    	case 1 :
                    	    // InternalSCTX.g:14791:5: otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) )
                    	    {
                    	    otherlv_3=(Token)match(input,20,FollowSets000.FOLLOW_197); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getJsonArrayValueAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:14795:5: ( (lv_elements_4_0= ruleJsonValue ) )
                    	    // InternalSCTX.g:14796:6: (lv_elements_4_0= ruleJsonValue )
                    	    {
                    	    // InternalSCTX.g:14796:6: (lv_elements_4_0= ruleJsonValue )
                    	    // InternalSCTX.g:14797:7: lv_elements_4_0= ruleJsonValue
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJsonArrayValueAccess().getElementsJsonValueParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_199);
                    	    lv_elements_4_0=ruleJsonValue();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJsonArrayValueRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_4_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.JsonValue");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop424;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getJsonArrayValueAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonArrayValue"


    // $ANTLR start "entryRuleJsonValue"
    // InternalSCTX.g:14824:1: entryRuleJsonValue returns [EObject current=null] : iv_ruleJsonValue= ruleJsonValue EOF ;
    public final EObject entryRuleJsonValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonValue = null;


        try {
            // InternalSCTX.g:14824:50: (iv_ruleJsonValue= ruleJsonValue EOF )
            // InternalSCTX.g:14825:2: iv_ruleJsonValue= ruleJsonValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonValue=ruleJsonValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonValue"


    // $ANTLR start "ruleJsonValue"
    // InternalSCTX.g:14831:1: ruleJsonValue returns [EObject current=null] : (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue ) ;
    public final EObject ruleJsonValue() throws RecognitionException {
        EObject current = null;

        EObject this_JsonObjectValue_0 = null;

        EObject this_JsonArrayValue_1 = null;

        EObject this_NullValue_2 = null;

        EObject this_AnyValue_3 = null;



        	enterRule();

        try {
            // InternalSCTX.g:14837:2: ( (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue ) )
            // InternalSCTX.g:14838:2: (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue )
            {
            // InternalSCTX.g:14838:2: (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue )
            int alt426=4;
            switch ( input.LA(1) ) {
            case 21:
                {
                alt426=1;
                }
                break;
            case 36:
                {
                alt426=2;
                }
                break;
            case 101:
                {
                alt426=3;
                }
                break;
            case RULE_STRING:
            case RULE_INT:
            case RULE_FLOAT:
            case RULE_BOOLEAN:
                {
                alt426=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 426, 0, input);

                throw nvae;
            }

            switch (alt426) {
                case 1 :
                    // InternalSCTX.g:14839:3: this_JsonObjectValue_0= ruleJsonObjectValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJsonValueAccess().getJsonObjectValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JsonObjectValue_0=ruleJsonObjectValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JsonObjectValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:14851:3: this_JsonArrayValue_1= ruleJsonArrayValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJsonValueAccess().getJsonArrayValueParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JsonArrayValue_1=ruleJsonArrayValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JsonArrayValue_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:14863:3: this_NullValue_2= ruleNullValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJsonValueAccess().getNullValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NullValue_2=ruleNullValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NullValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:14875:3: this_AnyValue_3= ruleAnyValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJsonValueAccess().getAnyValueParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AnyValue_3=ruleAnyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AnyValue_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonValue"


    // $ANTLR start "entryRuleNullValue"
    // InternalSCTX.g:14890:1: entryRuleNullValue returns [EObject current=null] : iv_ruleNullValue= ruleNullValue EOF ;
    public final EObject entryRuleNullValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNullValue = null;


        try {
            // InternalSCTX.g:14890:50: (iv_ruleNullValue= ruleNullValue EOF )
            // InternalSCTX.g:14891:2: iv_ruleNullValue= ruleNullValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNullValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNullValue=ruleNullValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNullValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNullValue"


    // $ANTLR start "ruleNullValue"
    // InternalSCTX.g:14897:1: ruleNullValue returns [EObject current=null] : ( () otherlv_1= 'null' ) ;
    public final EObject ruleNullValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalSCTX.g:14903:2: ( ( () otherlv_1= 'null' ) )
            // InternalSCTX.g:14904:2: ( () otherlv_1= 'null' )
            {
            // InternalSCTX.g:14904:2: ( () otherlv_1= 'null' )
            // InternalSCTX.g:14905:3: () otherlv_1= 'null'
            {
            // InternalSCTX.g:14905:3: ()
            // InternalSCTX.g:14906:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getNullValueAccess().getNullValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,101,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getNullValueAccess().getNullKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNullValue"


    // $ANTLR start "entryRuleJsonPragma"
    // InternalSCTX.g:14923:1: entryRuleJsonPragma returns [EObject current=null] : iv_ruleJsonPragma= ruleJsonPragma EOF ;
    public final EObject entryRuleJsonPragma() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonPragma = null;


        try {
            // InternalSCTX.g:14923:51: (iv_ruleJsonPragma= ruleJsonPragma EOF )
            // InternalSCTX.g:14924:2: iv_ruleJsonPragma= ruleJsonPragma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonPragma=ruleJsonPragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonPragma; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonPragma"


    // $ANTLR start "ruleJsonPragma"
    // InternalSCTX.g:14930:1: ruleJsonPragma returns [EObject current=null] : (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) ) ;
    public final EObject ruleJsonPragma() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:14936:2: ( (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) ) )
            // InternalSCTX.g:14937:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) )
            {
            // InternalSCTX.g:14937:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) )
            // InternalSCTX.g:14938:3: otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) )
            {
            otherlv_0=(Token)match(input,102,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJsonPragmaAccess().getNumberSignKeyword_0());
              		
            }
            // InternalSCTX.g:14942:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:14943:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:14943:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:14944:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJsonPragmaAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_101);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJsonPragmaRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:14961:3: ( (lv_value_2_0= ruleJsonObjectValue ) )
            // InternalSCTX.g:14962:4: (lv_value_2_0= ruleJsonObjectValue )
            {
            // InternalSCTX.g:14962:4: (lv_value_2_0= ruleJsonObjectValue )
            // InternalSCTX.g:14963:5: lv_value_2_0= ruleJsonObjectValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJsonPragmaAccess().getValueJsonObjectValueParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_value_2_0=ruleJsonObjectValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJsonPragmaRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonPragma"


    // $ANTLR start "entryRuleJsonAnnotation"
    // InternalSCTX.g:14984:1: entryRuleJsonAnnotation returns [EObject current=null] : iv_ruleJsonAnnotation= ruleJsonAnnotation EOF ;
    public final EObject entryRuleJsonAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonAnnotation = null;


        try {
            // InternalSCTX.g:14984:55: (iv_ruleJsonAnnotation= ruleJsonAnnotation EOF )
            // InternalSCTX.g:14985:2: iv_ruleJsonAnnotation= ruleJsonAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonAnnotation=ruleJsonAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonAnnotation"


    // $ANTLR start "ruleJsonAnnotation"
    // InternalSCTX.g:14991:1: ruleJsonAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) ) ;
    public final EObject ruleJsonAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:14997:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) ) )
            // InternalSCTX.g:14998:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) )
            {
            // InternalSCTX.g:14998:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) )
            // InternalSCTX.g:14999:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) )
            {
            otherlv_0=(Token)match(input,103,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJsonAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSCTX.g:15003:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:15004:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:15004:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:15005:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJsonAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_101);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJsonAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:15022:3: ( (lv_value_2_0= ruleJsonObjectValue ) )
            // InternalSCTX.g:15023:4: (lv_value_2_0= ruleJsonObjectValue )
            {
            // InternalSCTX.g:15023:4: (lv_value_2_0= ruleJsonObjectValue )
            // InternalSCTX.g:15024:5: lv_value_2_0= ruleJsonObjectValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJsonAnnotationAccess().getValueJsonObjectValueParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_value_2_0=ruleJsonObjectValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJsonAnnotationRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonAnnotation"


    // $ANTLR start "entryRulePragma"
    // InternalSCTX.g:15045:1: entryRulePragma returns [EObject current=null] : iv_rulePragma= rulePragma EOF ;
    public final EObject entryRulePragma() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePragma = null;


        try {
            // InternalSCTX.g:15045:47: (iv_rulePragma= rulePragma EOF )
            // InternalSCTX.g:15046:2: iv_rulePragma= rulePragma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePragma=rulePragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePragma; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePragma"


    // $ANTLR start "rulePragma"
    // InternalSCTX.g:15052:1: rulePragma returns [EObject current=null] : (this_Pragma_0= superPragma | this_JsonPragma_1= ruleJsonPragma ) ;
    public final EObject rulePragma() throws RecognitionException {
        EObject current = null;

        EObject this_Pragma_0 = null;

        EObject this_JsonPragma_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:15058:2: ( (this_Pragma_0= superPragma | this_JsonPragma_1= ruleJsonPragma ) )
            // InternalSCTX.g:15059:2: (this_Pragma_0= superPragma | this_JsonPragma_1= ruleJsonPragma )
            {
            // InternalSCTX.g:15059:2: (this_Pragma_0= superPragma | this_JsonPragma_1= ruleJsonPragma )
            int alt427=2;
            alt427 = dfa427.predict(input);
            switch (alt427) {
                case 1 :
                    // InternalSCTX.g:15060:3: this_Pragma_0= superPragma
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPragmaAccess().getPragmaParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Pragma_0=superPragma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Pragma_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:15072:3: this_JsonPragma_1= ruleJsonPragma
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPragmaAccess().getJsonPragmaParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JsonPragma_1=ruleJsonPragma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JsonPragma_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePragma"


    // $ANTLR start "entryRuleAnnotation"
    // InternalSCTX.g:15087:1: entryRuleAnnotation returns [EObject current=null] : iv_ruleAnnotation= ruleAnnotation EOF ;
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotation = null;


        try {
            // InternalSCTX.g:15087:51: (iv_ruleAnnotation= ruleAnnotation EOF )
            // InternalSCTX.g:15088:2: iv_ruleAnnotation= ruleAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotation"


    // $ANTLR start "ruleAnnotation"
    // InternalSCTX.g:15094:1: ruleAnnotation returns [EObject current=null] : (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation ) ;
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_Annotation_0 = null;

        EObject this_JsonAnnotation_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:15100:2: ( (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation ) )
            // InternalSCTX.g:15101:2: (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )
            {
            // InternalSCTX.g:15101:2: (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )
            int alt428=2;
            alt428 = dfa428.predict(input);
            switch (alt428) {
                case 1 :
                    // InternalSCTX.g:15102:3: this_Annotation_0= superAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationAccess().getAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Annotation_0=superAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Annotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:15114:3: this_JsonAnnotation_1= ruleJsonAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationAccess().getJsonAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JsonAnnotation_1=ruleJsonAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JsonAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotation"


    // $ANTLR start "entryRuleQuotedStringAnnotation"
    // InternalSCTX.g:15129:1: entryRuleQuotedStringAnnotation returns [EObject current=null] : iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF ;
    public final EObject entryRuleQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedStringAnnotation = null;


        try {
            // InternalSCTX.g:15129:63: (iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF )
            // InternalSCTX.g:15130:2: iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedStringAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedStringAnnotation=ruleQuotedStringAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedStringAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedStringAnnotation"


    // $ANTLR start "ruleQuotedStringAnnotation"
    // InternalSCTX.g:15136:1: ruleQuotedStringAnnotation returns [EObject current=null] : (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation ) ;
    public final EObject ruleQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_QuotedStringAnnotation_0 = null;

        EObject this_JsonAnnotation_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:15142:2: ( (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation ) )
            // InternalSCTX.g:15143:2: (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )
            {
            // InternalSCTX.g:15143:2: (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )
            int alt429=2;
            alt429 = dfa429.predict(input);
            switch (alt429) {
                case 1 :
                    // InternalSCTX.g:15144:3: this_QuotedStringAnnotation_0= superQuotedStringAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getQuotedStringAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QuotedStringAnnotation_0=superQuotedStringAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_QuotedStringAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:15156:3: this_JsonAnnotation_1= ruleJsonAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getJsonAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JsonAnnotation_1=ruleJsonAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JsonAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedStringAnnotation"


    // $ANTLR start "entrySuperAnnotation"
    // InternalSCTX.g:15171:1: entrySuperAnnotation returns [EObject current=null] : iv_superAnnotation= superAnnotation EOF ;
    public final EObject entrySuperAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_superAnnotation = null;


        try {
            // InternalSCTX.g:15171:52: (iv_superAnnotation= superAnnotation EOF )
            // InternalSCTX.g:15172:2: iv_superAnnotation= superAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationsAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_superAnnotation=superAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperAnnotation"


    // $ANTLR start "superAnnotation"
    // InternalSCTX.g:15178:1: superAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) ;
    public final EObject superAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_KeyStringValueAnnotation_1 = null;

        EObject this_TypedKeyStringValueAnnotation_2 = null;

        EObject this_TagAnnotation_3 = null;



        	enterRule();

        try {
            // InternalSCTX.g:15184:2: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) )
            // InternalSCTX.g:15185:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            {
            // InternalSCTX.g:15185:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            int alt430=4;
            int LA430_0 = input.LA(1);

            if ( (LA430_0==RULE_COMMENT_ANNOTATION) ) {
                alt430=1;
            }
            else if ( (LA430_0==103) ) {
                int LA430_2 = input.LA(2);

                if ( (synpred485_InternalSCTX()) ) {
                    alt430=2;
                }
                else if ( (synpred486_InternalSCTX()) ) {
                    alt430=3;
                }
                else if ( (true) ) {
                    alt430=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 430, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 430, 0, input);

                throw nvae;
            }
            switch (alt430) {
                case 1 :
                    // InternalSCTX.g:15186:3: this_CommentAnnotation_0= ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsAnnotationAccess().getCommentAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CommentAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:15198:3: this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_KeyStringValueAnnotation_1=ruleKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_KeyStringValueAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:15210:3: this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypedKeyStringValueAnnotation_2=ruleTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypedKeyStringValueAnnotation_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:15222:3: this_TagAnnotation_3= ruleTagAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsAnnotationAccess().getTagAnnotationParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TagAnnotation_3=ruleTagAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TagAnnotation_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superAnnotation"


    // $ANTLR start "entrySuperPragma"
    // InternalSCTX.g:15237:1: entrySuperPragma returns [EObject current=null] : iv_superPragma= superPragma EOF ;
    public final EObject entrySuperPragma() throws RecognitionException {
        EObject current = null;

        EObject iv_superPragma = null;


        try {
            // InternalSCTX.g:15237:48: (iv_superPragma= superPragma EOF )
            // InternalSCTX.g:15238:2: iv_superPragma= superPragma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationsPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_superPragma=superPragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superPragma; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperPragma"


    // $ANTLR start "superPragma"
    // InternalSCTX.g:15244:1: superPragma returns [EObject current=null] : (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag ) ;
    public final EObject superPragma() throws RecognitionException {
        EObject current = null;

        EObject this_StringPragma_0 = null;

        EObject this_PragmaTag_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:15250:2: ( (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag ) )
            // InternalSCTX.g:15251:2: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )
            {
            // InternalSCTX.g:15251:2: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )
            int alt431=2;
            alt431 = dfa431.predict(input);
            switch (alt431) {
                case 1 :
                    // InternalSCTX.g:15252:3: this_StringPragma_0= ruleStringPragma
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsPragmaAccess().getStringPragmaParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringPragma_0=ruleStringPragma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringPragma_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:15264:3: this_PragmaTag_1= rulePragmaTag
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsPragmaAccess().getPragmaTagParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PragmaTag_1=rulePragmaTag();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PragmaTag_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superPragma"


    // $ANTLR start "entrySuperValuedAnnotation"
    // InternalSCTX.g:15279:1: entrySuperValuedAnnotation returns [EObject current=null] : iv_superValuedAnnotation= superValuedAnnotation EOF ;
    public final EObject entrySuperValuedAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_superValuedAnnotation = null;


        try {
            // InternalSCTX.g:15279:58: (iv_superValuedAnnotation= superValuedAnnotation EOF )
            // InternalSCTX.g:15280:2: iv_superValuedAnnotation= superValuedAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationsValuedAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_superValuedAnnotation=superValuedAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superValuedAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperValuedAnnotation"


    // $ANTLR start "superValuedAnnotation"
    // InternalSCTX.g:15286:1: superValuedAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation ) ;
    public final EObject superValuedAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_KeyStringValueAnnotation_1 = null;

        EObject this_TypedKeyStringValueAnnotation_2 = null;



        	enterRule();

        try {
            // InternalSCTX.g:15292:2: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation ) )
            // InternalSCTX.g:15293:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation )
            {
            // InternalSCTX.g:15293:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation )
            int alt432=3;
            alt432 = dfa432.predict(input);
            switch (alt432) {
                case 1 :
                    // InternalSCTX.g:15294:3: this_CommentAnnotation_0= ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsValuedAnnotationAccess().getCommentAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CommentAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:15306:3: this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsValuedAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_KeyStringValueAnnotation_1=ruleKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_KeyStringValueAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:15318:3: this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsValuedAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypedKeyStringValueAnnotation_2=ruleTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypedKeyStringValueAnnotation_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superValuedAnnotation"


    // $ANTLR start "entryRuleRestrictedTypeAnnotation"
    // InternalSCTX.g:15333:1: entryRuleRestrictedTypeAnnotation returns [EObject current=null] : iv_ruleRestrictedTypeAnnotation= ruleRestrictedTypeAnnotation EOF ;
    public final EObject entryRuleRestrictedTypeAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictedTypeAnnotation = null;


        try {
            // InternalSCTX.g:15333:65: (iv_ruleRestrictedTypeAnnotation= ruleRestrictedTypeAnnotation EOF )
            // InternalSCTX.g:15334:2: iv_ruleRestrictedTypeAnnotation= ruleRestrictedTypeAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictedTypeAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRestrictedTypeAnnotation=ruleRestrictedTypeAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictedTypeAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictedTypeAnnotation"


    // $ANTLR start "ruleRestrictedTypeAnnotation"
    // InternalSCTX.g:15340:1: ruleRestrictedTypeAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) ;
    public final EObject ruleRestrictedTypeAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_RestrictedKeyStringValueAnnotation_1 = null;

        EObject this_RestrictedTypedKeyStringValueAnnotation_2 = null;

        EObject this_TagAnnotation_3 = null;



        	enterRule();

        try {
            // InternalSCTX.g:15346:2: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) )
            // InternalSCTX.g:15347:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            {
            // InternalSCTX.g:15347:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            int alt433=4;
            alt433 = dfa433.predict(input);
            switch (alt433) {
                case 1 :
                    // InternalSCTX.g:15348:3: this_CommentAnnotation_0= ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRestrictedTypeAnnotationAccess().getCommentAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CommentAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:15360:3: this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRestrictedTypeAnnotationAccess().getRestrictedKeyStringValueAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RestrictedKeyStringValueAnnotation_1=ruleRestrictedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RestrictedKeyStringValueAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:15372:3: this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRestrictedTypeAnnotationAccess().getRestrictedTypedKeyStringValueAnnotationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RestrictedTypedKeyStringValueAnnotation_2=ruleRestrictedTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RestrictedTypedKeyStringValueAnnotation_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:15384:3: this_TagAnnotation_3= ruleTagAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRestrictedTypeAnnotationAccess().getTagAnnotationParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TagAnnotation_3=ruleTagAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TagAnnotation_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictedTypeAnnotation"


    // $ANTLR start "entrySuperQuotedStringAnnotation"
    // InternalSCTX.g:15399:1: entrySuperQuotedStringAnnotation returns [EObject current=null] : iv_superQuotedStringAnnotation= superQuotedStringAnnotation EOF ;
    public final EObject entrySuperQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_superQuotedStringAnnotation = null;


        try {
            // InternalSCTX.g:15399:64: (iv_superQuotedStringAnnotation= superQuotedStringAnnotation EOF )
            // InternalSCTX.g:15400:2: iv_superQuotedStringAnnotation= superQuotedStringAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_superQuotedStringAnnotation=superQuotedStringAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superQuotedStringAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperQuotedStringAnnotation"


    // $ANTLR start "superQuotedStringAnnotation"
    // InternalSCTX.g:15406:1: superQuotedStringAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) ;
    public final EObject superQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_QuotedKeyStringValueAnnotation_1 = null;

        EObject this_QuotedTypedKeyStringValueAnnotation_2 = null;

        EObject this_TagAnnotation_3 = null;



        	enterRule();

        try {
            // InternalSCTX.g:15412:2: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) )
            // InternalSCTX.g:15413:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            {
            // InternalSCTX.g:15413:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            int alt434=4;
            alt434 = dfa434.predict(input);
            switch (alt434) {
                case 1 :
                    // InternalSCTX.g:15414:3: this_CommentAnnotation_0= ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getCommentAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CommentAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:15426:3: this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getQuotedKeyStringValueAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QuotedKeyStringValueAnnotation_1=ruleQuotedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_QuotedKeyStringValueAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:15438:3: this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getQuotedTypedKeyStringValueAnnotationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QuotedTypedKeyStringValueAnnotation_2=ruleQuotedTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_QuotedTypedKeyStringValueAnnotation_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:15450:3: this_TagAnnotation_3= ruleTagAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getTagAnnotationParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TagAnnotation_3=ruleTagAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TagAnnotation_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superQuotedStringAnnotation"


    // $ANTLR start "entryRuleCommentAnnotation"
    // InternalSCTX.g:15465:1: entryRuleCommentAnnotation returns [EObject current=null] : iv_ruleCommentAnnotation= ruleCommentAnnotation EOF ;
    public final EObject entryRuleCommentAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommentAnnotation = null;


        try {
            // InternalSCTX.g:15465:58: (iv_ruleCommentAnnotation= ruleCommentAnnotation EOF )
            // InternalSCTX.g:15466:2: iv_ruleCommentAnnotation= ruleCommentAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommentAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCommentAnnotation=ruleCommentAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommentAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommentAnnotation"


    // $ANTLR start "ruleCommentAnnotation"
    // InternalSCTX.g:15472:1: ruleCommentAnnotation returns [EObject current=null] : ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) ) ;
    public final EObject ruleCommentAnnotation() throws RecognitionException {
        EObject current = null;

        Token lv_values_0_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:15478:2: ( ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) ) )
            // InternalSCTX.g:15479:2: ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) )
            {
            // InternalSCTX.g:15479:2: ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) )
            // InternalSCTX.g:15480:3: (lv_values_0_0= RULE_COMMENT_ANNOTATION )
            {
            // InternalSCTX.g:15480:3: (lv_values_0_0= RULE_COMMENT_ANNOTATION )
            // InternalSCTX.g:15481:4: lv_values_0_0= RULE_COMMENT_ANNOTATION
            {
            lv_values_0_0=(Token)match(input,RULE_COMMENT_ANNOTATION,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_values_0_0, grammarAccess.getCommentAnnotationAccess().getValuesCOMMENT_ANNOTATIONTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getCommentAnnotationRule());
              				}
              				addWithLastConsumed(
              					current,
              					"values",
              					lv_values_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.COMMENT_ANNOTATION");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommentAnnotation"


    // $ANTLR start "entryRuleCommentAnnotatonSL"
    // InternalSCTX.g:15500:1: entryRuleCommentAnnotatonSL returns [EObject current=null] : iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF ;
    public final EObject entryRuleCommentAnnotatonSL() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommentAnnotatonSL = null;


        try {
            // InternalSCTX.g:15500:59: (iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF )
            // InternalSCTX.g:15501:2: iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommentAnnotatonSLRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCommentAnnotatonSL=ruleCommentAnnotatonSL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommentAnnotatonSL; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommentAnnotatonSL"


    // $ANTLR start "ruleCommentAnnotatonSL"
    // InternalSCTX.g:15507:1: ruleCommentAnnotatonSL returns [EObject current=null] : ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) ) ;
    public final EObject ruleCommentAnnotatonSL() throws RecognitionException {
        EObject current = null;

        Token lv_values_0_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:15513:2: ( ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) ) )
            // InternalSCTX.g:15514:2: ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) )
            {
            // InternalSCTX.g:15514:2: ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) )
            // InternalSCTX.g:15515:3: (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION )
            {
            // InternalSCTX.g:15515:3: (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION )
            // InternalSCTX.g:15516:4: lv_values_0_0= RULE_SL_COMMENT_ANNOTATION
            {
            lv_values_0_0=(Token)match(input,RULE_SL_COMMENT_ANNOTATION,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_values_0_0, grammarAccess.getCommentAnnotatonSLAccess().getValuesSL_COMMENT_ANNOTATIONTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getCommentAnnotatonSLRule());
              				}
              				addWithLastConsumed(
              					current,
              					"values",
              					lv_values_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.SL_COMMENT_ANNOTATION");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommentAnnotatonSL"


    // $ANTLR start "entryRuleTagAnnotation"
    // InternalSCTX.g:15535:1: entryRuleTagAnnotation returns [EObject current=null] : iv_ruleTagAnnotation= ruleTagAnnotation EOF ;
    public final EObject entryRuleTagAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTagAnnotation = null;


        try {
            // InternalSCTX.g:15535:54: (iv_ruleTagAnnotation= ruleTagAnnotation EOF )
            // InternalSCTX.g:15536:2: iv_ruleTagAnnotation= ruleTagAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTagAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTagAnnotation=ruleTagAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTagAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTagAnnotation"


    // $ANTLR start "ruleTagAnnotation"
    // InternalSCTX.g:15542:1: ruleTagAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ) ;
    public final EObject ruleTagAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:15548:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ) )
            // InternalSCTX.g:15549:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) )
            {
            // InternalSCTX.g:15549:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) )
            // InternalSCTX.g:15550:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) )
            {
            otherlv_0=(Token)match(input,103,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTagAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSCTX.g:15554:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:15555:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:15555:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:15556:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTagAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTagAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTagAnnotation"


    // $ANTLR start "entryRulePragmaTag"
    // InternalSCTX.g:15577:1: entryRulePragmaTag returns [EObject current=null] : iv_rulePragmaTag= rulePragmaTag EOF ;
    public final EObject entryRulePragmaTag() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePragmaTag = null;


        try {
            // InternalSCTX.g:15577:50: (iv_rulePragmaTag= rulePragmaTag EOF )
            // InternalSCTX.g:15578:2: iv_rulePragmaTag= rulePragmaTag EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPragmaTagRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePragmaTag=rulePragmaTag();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePragmaTag; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePragmaTag"


    // $ANTLR start "rulePragmaTag"
    // InternalSCTX.g:15584:1: rulePragmaTag returns [EObject current=null] : (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ) ;
    public final EObject rulePragmaTag() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:15590:2: ( (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ) )
            // InternalSCTX.g:15591:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) )
            {
            // InternalSCTX.g:15591:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) )
            // InternalSCTX.g:15592:3: otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) )
            {
            otherlv_0=(Token)match(input,102,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPragmaTagAccess().getNumberSignKeyword_0());
              		
            }
            // InternalSCTX.g:15596:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:15597:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:15597:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:15598:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPragmaTagAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPragmaTagRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePragmaTag"


    // $ANTLR start "entryRuleKeyStringValueAnnotation"
    // InternalSCTX.g:15619:1: entryRuleKeyStringValueAnnotation returns [EObject current=null] : iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF ;
    public final EObject entryRuleKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeyStringValueAnnotation = null;


        try {
            // InternalSCTX.g:15619:65: (iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF )
            // InternalSCTX.g:15620:2: iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleKeyStringValueAnnotation=ruleKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeyStringValueAnnotation"


    // $ANTLR start "ruleKeyStringValueAnnotation"
    // InternalSCTX.g:15626:1: ruleKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) ;
    public final EObject ruleKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:15632:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) )
            // InternalSCTX.g:15633:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalSCTX.g:15633:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            // InternalSCTX.g:15634:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,103,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSCTX.g:15638:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:15639:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:15639:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:15640:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_200);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:15657:3: ( (lv_values_2_0= ruleEStringAllTypes ) )
            // InternalSCTX.g:15658:4: (lv_values_2_0= ruleEStringAllTypes )
            {
            // InternalSCTX.g:15658:4: (lv_values_2_0= ruleEStringAllTypes )
            // InternalSCTX.g:15659:5: lv_values_2_0= ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_201);
            lv_values_2_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:15676:3: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            loop435:
            do {
                int alt435=2;
                int LA435_0 = input.LA(1);

                if ( (LA435_0==20) ) {
                    alt435=1;
                }


                switch (alt435) {
            	case 1 :
            	    // InternalSCTX.g:15677:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    {
            	    otherlv_3=(Token)match(input,20,FollowSets000.FOLLOW_200); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalSCTX.g:15681:4: ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    // InternalSCTX.g:15682:5: (lv_values_4_0= ruleEStringAllTypes )
            	    {
            	    // InternalSCTX.g:15682:5: (lv_values_4_0= ruleEStringAllTypes )
            	    // InternalSCTX.g:15683:6: lv_values_4_0= ruleEStringAllTypes
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_201);
            	    lv_values_4_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop435;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeyStringValueAnnotation"


    // $ANTLR start "entryRuleRestrictedKeyStringValueAnnotation"
    // InternalSCTX.g:15705:1: entryRuleRestrictedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleRestrictedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictedKeyStringValueAnnotation = null;


        try {
            // InternalSCTX.g:15705:75: (iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:15706:2: iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRestrictedKeyStringValueAnnotation=ruleRestrictedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictedKeyStringValueAnnotation"


    // $ANTLR start "ruleRestrictedKeyStringValueAnnotation"
    // InternalSCTX.g:15712:1: ruleRestrictedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* ) ;
    public final EObject ruleRestrictedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:15718:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* ) )
            // InternalSCTX.g:15719:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* )
            {
            // InternalSCTX.g:15719:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* )
            // InternalSCTX.g:15720:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )*
            {
            otherlv_0=(Token)match(input,103,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSCTX.g:15724:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:15725:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:15725:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:15726:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_202);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:15743:3: ( (lv_values_2_0= ruleEStringBoolean ) )
            // InternalSCTX.g:15744:4: (lv_values_2_0= ruleEStringBoolean )
            {
            // InternalSCTX.g:15744:4: (lv_values_2_0= ruleEStringBoolean )
            // InternalSCTX.g:15745:5: lv_values_2_0= ruleEStringBoolean
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_201);
            lv_values_2_0=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:15762:3: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )*
            loop436:
            do {
                int alt436=2;
                int LA436_0 = input.LA(1);

                if ( (LA436_0==20) ) {
                    alt436=1;
                }


                switch (alt436) {
            	case 1 :
            	    // InternalSCTX.g:15763:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) )
            	    {
            	    otherlv_3=(Token)match(input,20,FollowSets000.FOLLOW_202); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalSCTX.g:15767:4: ( (lv_values_4_0= ruleEStringBoolean ) )
            	    // InternalSCTX.g:15768:5: (lv_values_4_0= ruleEStringBoolean )
            	    {
            	    // InternalSCTX.g:15768:5: (lv_values_4_0= ruleEStringBoolean )
            	    // InternalSCTX.g:15769:6: lv_values_4_0= ruleEStringBoolean
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_201);
            	    lv_values_4_0=ruleEStringBoolean();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop436;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleStringPragma"
    // InternalSCTX.g:15791:1: entryRuleStringPragma returns [EObject current=null] : iv_ruleStringPragma= ruleStringPragma EOF ;
    public final EObject entryRuleStringPragma() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringPragma = null;


        try {
            // InternalSCTX.g:15791:53: (iv_ruleStringPragma= ruleStringPragma EOF )
            // InternalSCTX.g:15792:2: iv_ruleStringPragma= ruleStringPragma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringPragma=ruleStringPragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringPragma; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringPragma"


    // $ANTLR start "ruleStringPragma"
    // InternalSCTX.g:15798:1: ruleStringPragma returns [EObject current=null] : (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) ;
    public final EObject ruleStringPragma() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:15804:2: ( (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) )
            // InternalSCTX.g:15805:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalSCTX.g:15805:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            // InternalSCTX.g:15806:3: otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,102,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getStringPragmaAccess().getNumberSignKeyword_0());
              		
            }
            // InternalSCTX.g:15810:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:15811:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:15811:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:15812:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStringPragmaAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_200);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStringPragmaRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:15829:3: ( (lv_values_2_0= ruleEStringAllTypes ) )
            // InternalSCTX.g:15830:4: (lv_values_2_0= ruleEStringAllTypes )
            {
            // InternalSCTX.g:15830:4: (lv_values_2_0= ruleEStringAllTypes )
            // InternalSCTX.g:15831:5: lv_values_2_0= ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStringPragmaAccess().getValuesEStringAllTypesParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_201);
            lv_values_2_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStringPragmaRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:15848:3: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            loop437:
            do {
                int alt437=2;
                int LA437_0 = input.LA(1);

                if ( (LA437_0==20) ) {
                    alt437=1;
                }


                switch (alt437) {
            	case 1 :
            	    // InternalSCTX.g:15849:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    {
            	    otherlv_3=(Token)match(input,20,FollowSets000.FOLLOW_200); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getStringPragmaAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalSCTX.g:15853:4: ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    // InternalSCTX.g:15854:5: (lv_values_4_0= ruleEStringAllTypes )
            	    {
            	    // InternalSCTX.g:15854:5: (lv_values_4_0= ruleEStringAllTypes )
            	    // InternalSCTX.g:15855:6: lv_values_4_0= ruleEStringAllTypes
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getStringPragmaAccess().getValuesEStringAllTypesParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_201);
            	    lv_values_4_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getStringPragmaRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop437;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringPragma"


    // $ANTLR start "entryRuleTypedKeyStringValueAnnotation"
    // InternalSCTX.g:15877:1: entryRuleTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypedKeyStringValueAnnotation = null;


        try {
            // InternalSCTX.g:15877:70: (iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:15878:2: iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypedKeyStringValueAnnotation=ruleTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleTypedKeyStringValueAnnotation"
    // InternalSCTX.g:15884:1: ruleTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* ) ;
    public final EObject ruleTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_values_5_0 = null;

        AntlrDatatypeRuleToken lv_values_7_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:15890:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* ) )
            // InternalSCTX.g:15891:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalSCTX.g:15891:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* )
            // InternalSCTX.g:15892:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,103,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSCTX.g:15896:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:15897:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:15897:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:15898:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_203);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,36,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalSCTX.g:15919:3: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalSCTX.g:15920:4: (lv_type_3_0= ruleExtendedID )
            {
            // InternalSCTX.g:15920:4: (lv_type_3_0= ruleExtendedID )
            // InternalSCTX.g:15921:5: lv_type_3_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_36);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_3_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,37,FollowSets000.FOLLOW_200); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
              		
            }
            // InternalSCTX.g:15942:3: ( (lv_values_5_0= ruleEStringAllTypes ) )
            // InternalSCTX.g:15943:4: (lv_values_5_0= ruleEStringAllTypes )
            {
            // InternalSCTX.g:15943:4: (lv_values_5_0= ruleEStringAllTypes )
            // InternalSCTX.g:15944:5: lv_values_5_0= ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_5_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_201);
            lv_values_5_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_5_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:15961:3: (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )*
            loop438:
            do {
                int alt438=2;
                int LA438_0 = input.LA(1);

                if ( (LA438_0==20) ) {
                    alt438=1;
                }


                switch (alt438) {
            	case 1 :
            	    // InternalSCTX.g:15962:4: otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) )
            	    {
            	    otherlv_6=(Token)match(input,20,FollowSets000.FOLLOW_200); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	      			
            	    }
            	    // InternalSCTX.g:15966:4: ( (lv_values_7_0= ruleEStringAllTypes ) )
            	    // InternalSCTX.g:15967:5: (lv_values_7_0= ruleEStringAllTypes )
            	    {
            	    // InternalSCTX.g:15967:5: (lv_values_7_0= ruleEStringAllTypes )
            	    // InternalSCTX.g:15968:6: lv_values_7_0= ruleEStringAllTypes
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_6_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_201);
            	    lv_values_7_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_7_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop438;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleRestrictedTypedKeyStringValueAnnotation"
    // InternalSCTX.g:15990:1: entryRuleRestrictedTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleRestrictedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictedTypedKeyStringValueAnnotation = null;


        try {
            // InternalSCTX.g:15990:80: (iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:15991:2: iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRestrictedTypedKeyStringValueAnnotation=ruleRestrictedTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictedTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictedTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleRestrictedTypedKeyStringValueAnnotation"
    // InternalSCTX.g:15997:1: ruleRestrictedTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* ) ;
    public final EObject ruleRestrictedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_values_5_0 = null;

        AntlrDatatypeRuleToken lv_values_7_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:16003:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* ) )
            // InternalSCTX.g:16004:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* )
            {
            // InternalSCTX.g:16004:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* )
            // InternalSCTX.g:16005:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )*
            {
            otherlv_0=(Token)match(input,103,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSCTX.g:16009:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:16010:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:16010:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:16011:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_203);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,36,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalSCTX.g:16032:3: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalSCTX.g:16033:4: (lv_type_3_0= ruleExtendedID )
            {
            // InternalSCTX.g:16033:4: (lv_type_3_0= ruleExtendedID )
            // InternalSCTX.g:16034:5: lv_type_3_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_36);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_3_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,37,FollowSets000.FOLLOW_202); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
              		
            }
            // InternalSCTX.g:16055:3: ( (lv_values_5_0= ruleEStringBoolean ) )
            // InternalSCTX.g:16056:4: (lv_values_5_0= ruleEStringBoolean )
            {
            // InternalSCTX.g:16056:4: (lv_values_5_0= ruleEStringBoolean )
            // InternalSCTX.g:16057:5: lv_values_5_0= ruleEStringBoolean
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_5_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_201);
            lv_values_5_0=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_5_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:16074:3: (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )*
            loop439:
            do {
                int alt439=2;
                int LA439_0 = input.LA(1);

                if ( (LA439_0==20) ) {
                    alt439=1;
                }


                switch (alt439) {
            	case 1 :
            	    // InternalSCTX.g:16075:4: otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) )
            	    {
            	    otherlv_6=(Token)match(input,20,FollowSets000.FOLLOW_202); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	      			
            	    }
            	    // InternalSCTX.g:16079:4: ( (lv_values_7_0= ruleEStringBoolean ) )
            	    // InternalSCTX.g:16080:5: (lv_values_7_0= ruleEStringBoolean )
            	    {
            	    // InternalSCTX.g:16080:5: (lv_values_7_0= ruleEStringBoolean )
            	    // InternalSCTX.g:16081:6: lv_values_7_0= ruleEStringBoolean
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_6_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_201);
            	    lv_values_7_0=ruleEStringBoolean();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_7_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop439;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictedTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleQuotedKeyStringValueAnnotation"
    // InternalSCTX.g:16103:1: entryRuleQuotedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleQuotedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedKeyStringValueAnnotation = null;


        try {
            // InternalSCTX.g:16103:71: (iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:16104:2: iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedKeyStringValueAnnotation=ruleQuotedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedKeyStringValueAnnotation"


    // $ANTLR start "ruleQuotedKeyStringValueAnnotation"
    // InternalSCTX.g:16110:1: ruleQuotedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* ) ;
    public final EObject ruleQuotedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_values_2_0=null;
        Token otherlv_3=null;
        Token lv_values_4_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:16116:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* ) )
            // InternalSCTX.g:16117:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* )
            {
            // InternalSCTX.g:16117:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* )
            // InternalSCTX.g:16118:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )*
            {
            otherlv_0=(Token)match(input,103,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSCTX.g:16122:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:16123:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:16123:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:16124:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_48);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQuotedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:16141:3: ( (lv_values_2_0= RULE_STRING ) )
            // InternalSCTX.g:16142:4: (lv_values_2_0= RULE_STRING )
            {
            // InternalSCTX.g:16142:4: (lv_values_2_0= RULE_STRING )
            // InternalSCTX.g:16143:5: lv_values_2_0= RULE_STRING
            {
            lv_values_2_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_201); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_values_2_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getQuotedKeyStringValueAnnotationRule());
              					}
              					addWithLastConsumed(
              						current,
              						"values",
              						lv_values_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.STRING");
              				
            }

            }


            }

            // InternalSCTX.g:16159:3: (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )*
            loop440:
            do {
                int alt440=2;
                int LA440_0 = input.LA(1);

                if ( (LA440_0==20) ) {
                    alt440=1;
                }


                switch (alt440) {
            	case 1 :
            	    // InternalSCTX.g:16160:4: otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) )
            	    {
            	    otherlv_3=(Token)match(input,20,FollowSets000.FOLLOW_48); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalSCTX.g:16164:4: ( (lv_values_4_0= RULE_STRING ) )
            	    // InternalSCTX.g:16165:5: (lv_values_4_0= RULE_STRING )
            	    {
            	    // InternalSCTX.g:16165:5: (lv_values_4_0= RULE_STRING )
            	    // InternalSCTX.g:16166:6: lv_values_4_0= RULE_STRING
            	    {
            	    lv_values_4_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_201); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_values_4_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_3_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getQuotedKeyStringValueAnnotationRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.STRING");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop440;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleQuotedTypedKeyStringValueAnnotation"
    // InternalSCTX.g:16187:1: entryRuleQuotedTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleQuotedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedTypedKeyStringValueAnnotation = null;


        try {
            // InternalSCTX.g:16187:76: (iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:16188:2: iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedTypedKeyStringValueAnnotation=ruleQuotedTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleQuotedTypedKeyStringValueAnnotation"
    // InternalSCTX.g:16194:1: ruleQuotedTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* ) ;
    public final EObject ruleQuotedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_values_5_0=null;
        Token otherlv_6=null;
        Token lv_values_7_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:16200:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* ) )
            // InternalSCTX.g:16201:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* )
            {
            // InternalSCTX.g:16201:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* )
            // InternalSCTX.g:16202:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )*
            {
            otherlv_0=(Token)match(input,103,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSCTX.g:16206:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:16207:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:16207:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:16208:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_203);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,36,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalSCTX.g:16229:3: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalSCTX.g:16230:4: (lv_type_3_0= ruleExtendedID )
            {
            // InternalSCTX.g:16230:4: (lv_type_3_0= ruleExtendedID )
            // InternalSCTX.g:16231:5: lv_type_3_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_36);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_3_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,37,FollowSets000.FOLLOW_48); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
              		
            }
            // InternalSCTX.g:16252:3: ( (lv_values_5_0= RULE_STRING ) )
            // InternalSCTX.g:16253:4: (lv_values_5_0= RULE_STRING )
            {
            // InternalSCTX.g:16253:4: (lv_values_5_0= RULE_STRING )
            // InternalSCTX.g:16254:5: lv_values_5_0= RULE_STRING
            {
            lv_values_5_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_201); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_values_5_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_5_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              					}
              					addWithLastConsumed(
              						current,
              						"values",
              						lv_values_5_0,
              						"de.cau.cs.kieler.annotations.Annotations.STRING");
              				
            }

            }


            }

            // InternalSCTX.g:16270:3: (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )*
            loop441:
            do {
                int alt441=2;
                int LA441_0 = input.LA(1);

                if ( (LA441_0==20) ) {
                    alt441=1;
                }


                switch (alt441) {
            	case 1 :
            	    // InternalSCTX.g:16271:4: otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) )
            	    {
            	    otherlv_6=(Token)match(input,20,FollowSets000.FOLLOW_48); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	      			
            	    }
            	    // InternalSCTX.g:16275:4: ( (lv_values_7_0= RULE_STRING ) )
            	    // InternalSCTX.g:16276:5: (lv_values_7_0= RULE_STRING )
            	    {
            	    // InternalSCTX.g:16276:5: (lv_values_7_0= RULE_STRING )
            	    // InternalSCTX.g:16277:6: lv_values_7_0= RULE_STRING
            	    {
            	    lv_values_7_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_201); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_values_7_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_6_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"values",
            	      							lv_values_7_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.STRING");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop441;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleEString"
    // InternalSCTX.g:16298:1: entryRuleEString returns [String current=null] : iv_ruleEString= ruleEString EOF ;
    public final String entryRuleEString() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEString = null;


        try {
            // InternalSCTX.g:16298:47: (iv_ruleEString= ruleEString EOF )
            // InternalSCTX.g:16299:2: iv_ruleEString= ruleEString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEStringRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEString=ruleEString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEString.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEString"


    // $ANTLR start "ruleEString"
    // InternalSCTX.g:16305:1: ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID ) ;
    public final AntlrDatatypeRuleToken ruleEString() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        AntlrDatatypeRuleToken this_ExtendedID_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:16311:2: ( (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID ) )
            // InternalSCTX.g:16312:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID )
            {
            // InternalSCTX.g:16312:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID )
            int alt442=2;
            int LA442_0 = input.LA(1);

            if ( (LA442_0==RULE_STRING) ) {
                alt442=1;
            }
            else if ( (LA442_0==RULE_ID) ) {
                alt442=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 442, 0, input);

                throw nvae;
            }
            switch (alt442) {
                case 1 :
                    // InternalSCTX.g:16313:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:16321:3: this_ExtendedID_1= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringAccess().getExtendedIDParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExtendedID_1=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ExtendedID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEString"


    // $ANTLR start "entryRuleEStringBoolean"
    // InternalSCTX.g:16335:1: entryRuleEStringBoolean returns [String current=null] : iv_ruleEStringBoolean= ruleEStringBoolean EOF ;
    public final String entryRuleEStringBoolean() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEStringBoolean = null;


        try {
            // InternalSCTX.g:16335:54: (iv_ruleEStringBoolean= ruleEStringBoolean EOF )
            // InternalSCTX.g:16336:2: iv_ruleEStringBoolean= ruleEStringBoolean EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEStringBooleanRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEStringBoolean=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEStringBoolean.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEStringBoolean"


    // $ANTLR start "ruleEStringBoolean"
    // InternalSCTX.g:16342:1: ruleEStringBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN ) ;
    public final AntlrDatatypeRuleToken ruleEStringBoolean() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_BOOLEAN_2=null;
        AntlrDatatypeRuleToken this_ExtendedID_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:16348:2: ( (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN ) )
            // InternalSCTX.g:16349:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN )
            {
            // InternalSCTX.g:16349:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN )
            int alt443=3;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt443=1;
                }
                break;
            case RULE_ID:
                {
                alt443=2;
                }
                break;
            case RULE_BOOLEAN:
                {
                alt443=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 443, 0, input);

                throw nvae;
            }

            switch (alt443) {
                case 1 :
                    // InternalSCTX.g:16350:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_0, grammarAccess.getEStringBooleanAccess().getSTRINGTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:16358:3: this_ExtendedID_1= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringBooleanAccess().getExtendedIDParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExtendedID_1=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ExtendedID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:16369:3: this_BOOLEAN_2= RULE_BOOLEAN
                    {
                    this_BOOLEAN_2=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_BOOLEAN_2);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_BOOLEAN_2, grammarAccess.getEStringBooleanAccess().getBOOLEANTerminalRuleCall_2());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEStringBoolean"


    // $ANTLR start "entryRuleEStringAllTypes"
    // InternalSCTX.g:16380:1: entryRuleEStringAllTypes returns [String current=null] : iv_ruleEStringAllTypes= ruleEStringAllTypes EOF ;
    public final String entryRuleEStringAllTypes() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEStringAllTypes = null;


        try {
            // InternalSCTX.g:16380:55: (iv_ruleEStringAllTypes= ruleEStringAllTypes EOF )
            // InternalSCTX.g:16381:2: iv_ruleEStringAllTypes= ruleEStringAllTypes EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEStringAllTypesRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEStringAllTypes=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEStringAllTypes.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEStringAllTypes"


    // $ANTLR start "ruleEStringAllTypes"
    // InternalSCTX.g:16387:1: ruleEStringAllTypes returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger ) ;
    public final AntlrDatatypeRuleToken ruleEStringAllTypes() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_BOOLEAN_2=null;
        AntlrDatatypeRuleToken this_ExtendedID_1 = null;

        AntlrDatatypeRuleToken this_Integer_3 = null;

        AntlrDatatypeRuleToken this_Floateger_4 = null;



        	enterRule();

        try {
            // InternalSCTX.g:16393:2: ( (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger ) )
            // InternalSCTX.g:16394:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger )
            {
            // InternalSCTX.g:16394:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger )
            int alt444=5;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt444=1;
                }
                break;
            case RULE_ID:
                {
                alt444=2;
                }
                break;
            case RULE_BOOLEAN:
                {
                alt444=3;
                }
                break;
            case 94:
                {
                int LA444_4 = input.LA(2);

                if ( (LA444_4==RULE_INT) ) {
                    alt444=4;
                }
                else if ( (LA444_4==RULE_FLOAT) ) {
                    alt444=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 444, 4, input);

                    throw nvae;
                }
                }
                break;
            case RULE_INT:
                {
                alt444=4;
                }
                break;
            case RULE_FLOAT:
                {
                alt444=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 444, 0, input);

                throw nvae;
            }

            switch (alt444) {
                case 1 :
                    // InternalSCTX.g:16395:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_0, grammarAccess.getEStringAllTypesAccess().getSTRINGTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:16403:3: this_ExtendedID_1= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringAllTypesAccess().getExtendedIDParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExtendedID_1=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ExtendedID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:16414:3: this_BOOLEAN_2= RULE_BOOLEAN
                    {
                    this_BOOLEAN_2=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_BOOLEAN_2);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_BOOLEAN_2, grammarAccess.getEStringAllTypesAccess().getBOOLEANTerminalRuleCall_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:16422:3: this_Integer_3= ruleInteger
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringAllTypesAccess().getIntegerParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Integer_3=ruleInteger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_Integer_3);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSCTX.g:16433:3: this_Floateger_4= ruleFloateger
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringAllTypesAccess().getFloategerParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Floateger_4=ruleFloateger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_Floateger_4);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEStringAllTypes"


    // $ANTLR start "entryRuleExtendedID"
    // InternalSCTX.g:16447:1: entryRuleExtendedID returns [String current=null] : iv_ruleExtendedID= ruleExtendedID EOF ;
    public final String entryRuleExtendedID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleExtendedID = null;


        try {
            // InternalSCTX.g:16447:50: (iv_ruleExtendedID= ruleExtendedID EOF )
            // InternalSCTX.g:16448:2: iv_ruleExtendedID= ruleExtendedID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendedIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExtendedID=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExtendedID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExtendedID"


    // $ANTLR start "ruleExtendedID"
    // InternalSCTX.g:16454:1: ruleExtendedID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? ) ;
    public final AntlrDatatypeRuleToken ruleExtendedID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;
        Token this_ID_3=null;
        Token this_INT_5=null;


        	enterRule();

        try {
            // InternalSCTX.g:16460:2: ( (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? ) )
            // InternalSCTX.g:16461:2: (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? )
            {
            // InternalSCTX.g:16461:2: (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? )
            // InternalSCTX.g:16462:3: this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )?
            {
            this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_204); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_ID_0, grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_0());
              		
            }
            // InternalSCTX.g:16469:3: ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )*
            loop446:
            do {
                int alt446=2;
                alt446 = dfa446.predict(input);
                switch (alt446) {
            	case 1 :
            	    // InternalSCTX.g:16470:4: (kw= '.' | kw= '-' ) this_ID_3= RULE_ID
            	    {
            	    // InternalSCTX.g:16470:4: (kw= '.' | kw= '-' )
            	    int alt445=2;
            	    int LA445_0 = input.LA(1);

            	    if ( (LA445_0==83) ) {
            	        alt445=1;
            	    }
            	    else if ( (LA445_0==94) ) {
            	        alt445=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 445, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt445) {
            	        case 1 :
            	            // InternalSCTX.g:16471:5: kw= '.'
            	            {
            	            kw=(Token)match(input,83,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getExtendedIDAccess().getFullStopKeyword_1_0_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalSCTX.g:16477:5: kw= '-'
            	            {
            	            kw=(Token)match(input,94,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getExtendedIDAccess().getHyphenMinusKeyword_1_0_1());
            	              				
            	            }

            	            }
            	            break;

            	    }

            	    this_ID_3=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_204); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_ID_3);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(this_ID_3, grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_1_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop446;
                }
            } while (true);

            // InternalSCTX.g:16491:3: (kw= '#' this_INT_5= RULE_INT )?
            int alt447=2;
            int LA447_0 = input.LA(1);

            if ( (LA447_0==102) ) {
                int LA447_1 = input.LA(2);

                if ( (LA447_1==RULE_INT) ) {
                    alt447=1;
                }
            }
            switch (alt447) {
                case 1 :
                    // InternalSCTX.g:16492:4: kw= '#' this_INT_5= RULE_INT
                    {
                    kw=(Token)match(input,102,FollowSets000.FOLLOW_193); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getExtendedIDAccess().getNumberSignKeyword_2_0());
                      			
                    }
                    this_INT_5=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_INT_5);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_INT_5, grammarAccess.getExtendedIDAccess().getINTTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExtendedID"


    // $ANTLR start "entryRuleInteger"
    // InternalSCTX.g:16509:1: entryRuleInteger returns [String current=null] : iv_ruleInteger= ruleInteger EOF ;
    public final String entryRuleInteger() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleInteger = null;


        try {
            // InternalSCTX.g:16509:47: (iv_ruleInteger= ruleInteger EOF )
            // InternalSCTX.g:16510:2: iv_ruleInteger= ruleInteger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInteger=ruleInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInteger.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInteger"


    // $ANTLR start "ruleInteger"
    // InternalSCTX.g:16516:1: ruleInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_INT_1= RULE_INT ) ;
    public final AntlrDatatypeRuleToken ruleInteger() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_1=null;


        	enterRule();

        try {
            // InternalSCTX.g:16522:2: ( ( (kw= '-' )? this_INT_1= RULE_INT ) )
            // InternalSCTX.g:16523:2: ( (kw= '-' )? this_INT_1= RULE_INT )
            {
            // InternalSCTX.g:16523:2: ( (kw= '-' )? this_INT_1= RULE_INT )
            // InternalSCTX.g:16524:3: (kw= '-' )? this_INT_1= RULE_INT
            {
            // InternalSCTX.g:16524:3: (kw= '-' )?
            int alt448=2;
            int LA448_0 = input.LA(1);

            if ( (LA448_0==94) ) {
                alt448=1;
            }
            switch (alt448) {
                case 1 :
                    // InternalSCTX.g:16525:4: kw= '-'
                    {
                    kw=(Token)match(input,94,FollowSets000.FOLLOW_193); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getIntegerAccess().getHyphenMinusKeyword_0());
                      			
                    }

                    }
                    break;

            }

            this_INT_1=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_INT_1);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_INT_1, grammarAccess.getIntegerAccess().getINTTerminalRuleCall_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInteger"


    // $ANTLR start "entryRuleFloateger"
    // InternalSCTX.g:16542:1: entryRuleFloateger returns [String current=null] : iv_ruleFloateger= ruleFloateger EOF ;
    public final String entryRuleFloateger() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFloateger = null;


        try {
            // InternalSCTX.g:16542:49: (iv_ruleFloateger= ruleFloateger EOF )
            // InternalSCTX.g:16543:2: iv_ruleFloateger= ruleFloateger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFloategerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFloateger=ruleFloateger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFloateger.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFloateger"


    // $ANTLR start "ruleFloateger"
    // InternalSCTX.g:16549:1: ruleFloateger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT ) ;
    public final AntlrDatatypeRuleToken ruleFloateger() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_FLOAT_1=null;


        	enterRule();

        try {
            // InternalSCTX.g:16555:2: ( ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT ) )
            // InternalSCTX.g:16556:2: ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT )
            {
            // InternalSCTX.g:16556:2: ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT )
            // InternalSCTX.g:16557:3: (kw= '-' )? this_FLOAT_1= RULE_FLOAT
            {
            // InternalSCTX.g:16557:3: (kw= '-' )?
            int alt449=2;
            int LA449_0 = input.LA(1);

            if ( (LA449_0==94) ) {
                alt449=1;
            }
            switch (alt449) {
                case 1 :
                    // InternalSCTX.g:16558:4: kw= '-'
                    {
                    kw=(Token)match(input,94,FollowSets000.FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getFloategerAccess().getHyphenMinusKeyword_0());
                      			
                    }

                    }
                    break;

            }

            this_FLOAT_1=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_FLOAT_1);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_FLOAT_1, grammarAccess.getFloategerAccess().getFLOATTerminalRuleCall_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFloateger"


    // $ANTLR start "rulePreemptionType"
    // InternalSCTX.g:16575:1: rulePreemptionType returns [Enumerator current=null] : ( (enumLiteral_0= 'go to' ) | (enumLiteral_1= 'abort to' ) | (enumLiteral_2= 'join to' ) ) ;
    public final Enumerator rulePreemptionType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalSCTX.g:16581:2: ( ( (enumLiteral_0= 'go to' ) | (enumLiteral_1= 'abort to' ) | (enumLiteral_2= 'join to' ) ) )
            // InternalSCTX.g:16582:2: ( (enumLiteral_0= 'go to' ) | (enumLiteral_1= 'abort to' ) | (enumLiteral_2= 'join to' ) )
            {
            // InternalSCTX.g:16582:2: ( (enumLiteral_0= 'go to' ) | (enumLiteral_1= 'abort to' ) | (enumLiteral_2= 'join to' ) )
            int alt450=3;
            switch ( input.LA(1) ) {
            case 68:
                {
                alt450=1;
                }
                break;
            case 104:
                {
                alt450=2;
                }
                break;
            case 105:
                {
                alt450=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 450, 0, input);

                throw nvae;
            }

            switch (alt450) {
                case 1 :
                    // InternalSCTX.g:16583:3: (enumLiteral_0= 'go to' )
                    {
                    // InternalSCTX.g:16583:3: (enumLiteral_0= 'go to' )
                    // InternalSCTX.g:16584:4: enumLiteral_0= 'go to'
                    {
                    enumLiteral_0=(Token)match(input,68,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPreemptionTypeAccess().getWEAKABORTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getPreemptionTypeAccess().getWEAKABORTEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:16591:3: (enumLiteral_1= 'abort to' )
                    {
                    // InternalSCTX.g:16591:3: (enumLiteral_1= 'abort to' )
                    // InternalSCTX.g:16592:4: enumLiteral_1= 'abort to'
                    {
                    enumLiteral_1=(Token)match(input,104,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPreemptionTypeAccess().getSTRONGABORTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getPreemptionTypeAccess().getSTRONGABORTEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:16599:3: (enumLiteral_2= 'join to' )
                    {
                    // InternalSCTX.g:16599:3: (enumLiteral_2= 'join to' )
                    // InternalSCTX.g:16600:4: enumLiteral_2= 'join to'
                    {
                    enumLiteral_2=(Token)match(input,105,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPreemptionTypeAccess().getTERMINATIONEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getPreemptionTypeAccess().getTERMINATIONEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePreemptionType"


    // $ANTLR start "ruleDelayType"
    // InternalSCTX.g:16610:1: ruleDelayType returns [Enumerator current=null] : ( (enumLiteral_0= 'undefined' ) | (enumLiteral_1= 'delayed' ) | (enumLiteral_2= 'immediate' ) | (enumLiteral_3= 'auto' ) ) ;
    public final Enumerator ruleDelayType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;


        	enterRule();

        try {
            // InternalSCTX.g:16616:2: ( ( (enumLiteral_0= 'undefined' ) | (enumLiteral_1= 'delayed' ) | (enumLiteral_2= 'immediate' ) | (enumLiteral_3= 'auto' ) ) )
            // InternalSCTX.g:16617:2: ( (enumLiteral_0= 'undefined' ) | (enumLiteral_1= 'delayed' ) | (enumLiteral_2= 'immediate' ) | (enumLiteral_3= 'auto' ) )
            {
            // InternalSCTX.g:16617:2: ( (enumLiteral_0= 'undefined' ) | (enumLiteral_1= 'delayed' ) | (enumLiteral_2= 'immediate' ) | (enumLiteral_3= 'auto' ) )
            int alt451=4;
            switch ( input.LA(1) ) {
            case 106:
                {
                alt451=1;
                }
                break;
            case 107:
                {
                alt451=2;
                }
                break;
            case 108:
                {
                alt451=3;
                }
                break;
            case 109:
                {
                alt451=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 451, 0, input);

                throw nvae;
            }

            switch (alt451) {
                case 1 :
                    // InternalSCTX.g:16618:3: (enumLiteral_0= 'undefined' )
                    {
                    // InternalSCTX.g:16618:3: (enumLiteral_0= 'undefined' )
                    // InternalSCTX.g:16619:4: enumLiteral_0= 'undefined'
                    {
                    enumLiteral_0=(Token)match(input,106,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDelayTypeAccess().getUNDEFINEDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getDelayTypeAccess().getUNDEFINEDEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:16626:3: (enumLiteral_1= 'delayed' )
                    {
                    // InternalSCTX.g:16626:3: (enumLiteral_1= 'delayed' )
                    // InternalSCTX.g:16627:4: enumLiteral_1= 'delayed'
                    {
                    enumLiteral_1=(Token)match(input,107,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDelayTypeAccess().getDELAYEDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getDelayTypeAccess().getDELAYEDEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:16634:3: (enumLiteral_2= 'immediate' )
                    {
                    // InternalSCTX.g:16634:3: (enumLiteral_2= 'immediate' )
                    // InternalSCTX.g:16635:4: enumLiteral_2= 'immediate'
                    {
                    enumLiteral_2=(Token)match(input,108,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDelayTypeAccess().getIMMEDIATEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getDelayTypeAccess().getIMMEDIATEEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCTX.g:16642:3: (enumLiteral_3= 'auto' )
                    {
                    // InternalSCTX.g:16642:3: (enumLiteral_3= 'auto' )
                    // InternalSCTX.g:16643:4: enumLiteral_3= 'auto'
                    {
                    enumLiteral_3=(Token)match(input,109,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDelayTypeAccess().getAUTOMATICEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getDelayTypeAccess().getAUTOMATICEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDelayType"


    // $ANTLR start "ruleHistoryType"
    // InternalSCTX.g:16653:1: ruleHistoryType returns [Enumerator current=null] : ( (enumLiteral_0= 'reset' ) | (enumLiteral_1= 'shallow history' ) | (enumLiteral_2= 'history' ) ) ;
    public final Enumerator ruleHistoryType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalSCTX.g:16659:2: ( ( (enumLiteral_0= 'reset' ) | (enumLiteral_1= 'shallow history' ) | (enumLiteral_2= 'history' ) ) )
            // InternalSCTX.g:16660:2: ( (enumLiteral_0= 'reset' ) | (enumLiteral_1= 'shallow history' ) | (enumLiteral_2= 'history' ) )
            {
            // InternalSCTX.g:16660:2: ( (enumLiteral_0= 'reset' ) | (enumLiteral_1= 'shallow history' ) | (enumLiteral_2= 'history' ) )
            int alt452=3;
            switch ( input.LA(1) ) {
            case 110:
                {
                alt452=1;
                }
                break;
            case 111:
                {
                alt452=2;
                }
                break;
            case 112:
                {
                alt452=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 452, 0, input);

                throw nvae;
            }

            switch (alt452) {
                case 1 :
                    // InternalSCTX.g:16661:3: (enumLiteral_0= 'reset' )
                    {
                    // InternalSCTX.g:16661:3: (enumLiteral_0= 'reset' )
                    // InternalSCTX.g:16662:4: enumLiteral_0= 'reset'
                    {
                    enumLiteral_0=(Token)match(input,110,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getHistoryTypeAccess().getRESETEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getHistoryTypeAccess().getRESETEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:16669:3: (enumLiteral_1= 'shallow history' )
                    {
                    // InternalSCTX.g:16669:3: (enumLiteral_1= 'shallow history' )
                    // InternalSCTX.g:16670:4: enumLiteral_1= 'shallow history'
                    {
                    enumLiteral_1=(Token)match(input,111,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getHistoryTypeAccess().getSHALLOWEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getHistoryTypeAccess().getSHALLOWEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:16677:3: (enumLiteral_2= 'history' )
                    {
                    // InternalSCTX.g:16677:3: (enumLiteral_2= 'history' )
                    // InternalSCTX.g:16678:4: enumLiteral_2= 'history'
                    {
                    enumLiteral_2=(Token)match(input,112,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getHistoryTypeAccess().getDEEPEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getHistoryTypeAccess().getDEEPEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHistoryType"


    // $ANTLR start "ruleValueType"
    // InternalSCTX.g:16688:1: ruleValueType returns [Enumerator current=null] : ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) | (enumLiteral_5= 'clock' ) ) ;
    public final Enumerator ruleValueType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;


        	enterRule();

        try {
            // InternalSCTX.g:16694:2: ( ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) | (enumLiteral_5= 'clock' ) ) )
            // InternalSCTX.g:16695:2: ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) | (enumLiteral_5= 'clock' ) )
            {
            // InternalSCTX.g:16695:2: ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) | (enumLiteral_5= 'clock' ) )
            int alt453=6;
            switch ( input.LA(1) ) {
            case 113:
                {
                alt453=1;
                }
                break;
            case 114:
                {
                alt453=2;
                }
                break;
            case 115:
                {
                alt453=3;
                }
                break;
            case 116:
                {
                alt453=4;
                }
                break;
            case 117:
                {
                alt453=5;
                }
                break;
            case 118:
                {
                alt453=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 453, 0, input);

                throw nvae;
            }

            switch (alt453) {
                case 1 :
                    // InternalSCTX.g:16696:3: (enumLiteral_0= 'pure' )
                    {
                    // InternalSCTX.g:16696:3: (enumLiteral_0= 'pure' )
                    // InternalSCTX.g:16697:4: enumLiteral_0= 'pure'
                    {
                    enumLiteral_0=(Token)match(input,113,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getPUREEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getValueTypeAccess().getPUREEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:16704:3: (enumLiteral_1= 'bool' )
                    {
                    // InternalSCTX.g:16704:3: (enumLiteral_1= 'bool' )
                    // InternalSCTX.g:16705:4: enumLiteral_1= 'bool'
                    {
                    enumLiteral_1=(Token)match(input,114,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:16712:3: (enumLiteral_2= 'int' )
                    {
                    // InternalSCTX.g:16712:3: (enumLiteral_2= 'int' )
                    // InternalSCTX.g:16713:4: enumLiteral_2= 'int'
                    {
                    enumLiteral_2=(Token)match(input,115,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCTX.g:16720:3: (enumLiteral_3= 'float' )
                    {
                    // InternalSCTX.g:16720:3: (enumLiteral_3= 'float' )
                    // InternalSCTX.g:16721:4: enumLiteral_3= 'float'
                    {
                    enumLiteral_3=(Token)match(input,116,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCTX.g:16728:3: (enumLiteral_4= 'string' )
                    {
                    // InternalSCTX.g:16728:3: (enumLiteral_4= 'string' )
                    // InternalSCTX.g:16729:4: enumLiteral_4= 'string'
                    {
                    enumLiteral_4=(Token)match(input,117,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSCTX.g:16736:3: (enumLiteral_5= 'clock' )
                    {
                    // InternalSCTX.g:16736:3: (enumLiteral_5= 'clock' )
                    // InternalSCTX.g:16737:4: enumLiteral_5= 'clock'
                    {
                    enumLiteral_5=(Token)match(input,118,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getCLOCKEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getValueTypeAccess().getCLOCKEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueType"


    // $ANTLR start "rulePriorityProtocol"
    // InternalSCTX.g:16747:1: rulePriorityProtocol returns [Enumerator current=null] : ( (enumLiteral_0= 'conflicting' ) | (enumLiteral_1= 'commuting' ) ) ;
    public final Enumerator rulePriorityProtocol() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalSCTX.g:16753:2: ( ( (enumLiteral_0= 'conflicting' ) | (enumLiteral_1= 'commuting' ) ) )
            // InternalSCTX.g:16754:2: ( (enumLiteral_0= 'conflicting' ) | (enumLiteral_1= 'commuting' ) )
            {
            // InternalSCTX.g:16754:2: ( (enumLiteral_0= 'conflicting' ) | (enumLiteral_1= 'commuting' ) )
            int alt454=2;
            int LA454_0 = input.LA(1);

            if ( (LA454_0==119) ) {
                alt454=1;
            }
            else if ( (LA454_0==120) ) {
                alt454=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 454, 0, input);

                throw nvae;
            }
            switch (alt454) {
                case 1 :
                    // InternalSCTX.g:16755:3: (enumLiteral_0= 'conflicting' )
                    {
                    // InternalSCTX.g:16755:3: (enumLiteral_0= 'conflicting' )
                    // InternalSCTX.g:16756:4: enumLiteral_0= 'conflicting'
                    {
                    enumLiteral_0=(Token)match(input,119,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPriorityProtocolAccess().getCONFLICTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getPriorityProtocolAccess().getCONFLICTEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:16763:3: (enumLiteral_1= 'commuting' )
                    {
                    // InternalSCTX.g:16763:3: (enumLiteral_1= 'commuting' )
                    // InternalSCTX.g:16764:4: enumLiteral_1= 'commuting'
                    {
                    enumLiteral_1=(Token)match(input,120,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPriorityProtocolAccess().getCONFLUENTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getPriorityProtocolAccess().getCONFLUENTEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePriorityProtocol"


    // $ANTLR start "ruleAssignOperator"
    // InternalSCTX.g:16774:1: ruleAssignOperator returns [Enumerator current=null] : ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= '<<=' ) | (enumLiteral_10= '>>=' ) | (enumLiteral_11= '>>>=' ) | (enumLiteral_12= 'min=' ) | (enumLiteral_13= 'max=' ) ) ;
    public final Enumerator ruleAssignOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;
        Token enumLiteral_8=null;
        Token enumLiteral_9=null;
        Token enumLiteral_10=null;
        Token enumLiteral_11=null;
        Token enumLiteral_12=null;
        Token enumLiteral_13=null;


        	enterRule();

        try {
            // InternalSCTX.g:16780:2: ( ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= '<<=' ) | (enumLiteral_10= '>>=' ) | (enumLiteral_11= '>>>=' ) | (enumLiteral_12= 'min=' ) | (enumLiteral_13= 'max=' ) ) )
            // InternalSCTX.g:16781:2: ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= '<<=' ) | (enumLiteral_10= '>>=' ) | (enumLiteral_11= '>>>=' ) | (enumLiteral_12= 'min=' ) | (enumLiteral_13= 'max=' ) )
            {
            // InternalSCTX.g:16781:2: ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= '<<=' ) | (enumLiteral_10= '>>=' ) | (enumLiteral_11= '>>>=' ) | (enumLiteral_12= 'min=' ) | (enumLiteral_13= 'max=' ) )
            int alt455=14;
            switch ( input.LA(1) ) {
            case 81:
                {
                alt455=1;
                }
                break;
            case 121:
                {
                alt455=2;
                }
                break;
            case 122:
                {
                alt455=3;
                }
                break;
            case 123:
                {
                alt455=4;
                }
                break;
            case 124:
                {
                alt455=5;
                }
                break;
            case 125:
                {
                alt455=6;
                }
                break;
            case 126:
                {
                alt455=7;
                }
                break;
            case 127:
                {
                alt455=8;
                }
                break;
            case 128:
                {
                alt455=9;
                }
                break;
            case 129:
                {
                alt455=10;
                }
                break;
            case 130:
                {
                alt455=11;
                }
                break;
            case 131:
                {
                alt455=12;
                }
                break;
            case 132:
                {
                alt455=13;
                }
                break;
            case 133:
                {
                alt455=14;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 455, 0, input);

                throw nvae;
            }

            switch (alt455) {
                case 1 :
                    // InternalSCTX.g:16782:3: (enumLiteral_0= '=' )
                    {
                    // InternalSCTX.g:16782:3: (enumLiteral_0= '=' )
                    // InternalSCTX.g:16783:4: enumLiteral_0= '='
                    {
                    enumLiteral_0=(Token)match(input,81,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getAssignOperatorAccess().getASSIGNEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:16790:3: (enumLiteral_1= '+=' )
                    {
                    // InternalSCTX.g:16790:3: (enumLiteral_1= '+=' )
                    // InternalSCTX.g:16791:4: enumLiteral_1= '+='
                    {
                    enumLiteral_1=(Token)match(input,121,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNADDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getAssignOperatorAccess().getASSIGNADDEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:16798:3: (enumLiteral_2= '-=' )
                    {
                    // InternalSCTX.g:16798:3: (enumLiteral_2= '-=' )
                    // InternalSCTX.g:16799:4: enumLiteral_2= '-='
                    {
                    enumLiteral_2=(Token)match(input,122,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNSUBEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getAssignOperatorAccess().getASSIGNSUBEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCTX.g:16806:3: (enumLiteral_3= '*=' )
                    {
                    // InternalSCTX.g:16806:3: (enumLiteral_3= '*=' )
                    // InternalSCTX.g:16807:4: enumLiteral_3= '*='
                    {
                    enumLiteral_3=(Token)match(input,123,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNMULEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getAssignOperatorAccess().getASSIGNMULEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCTX.g:16814:3: (enumLiteral_4= '/=' )
                    {
                    // InternalSCTX.g:16814:3: (enumLiteral_4= '/=' )
                    // InternalSCTX.g:16815:4: enumLiteral_4= '/='
                    {
                    enumLiteral_4=(Token)match(input,124,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNDIVEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getAssignOperatorAccess().getASSIGNDIVEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSCTX.g:16822:3: (enumLiteral_5= '%=' )
                    {
                    // InternalSCTX.g:16822:3: (enumLiteral_5= '%=' )
                    // InternalSCTX.g:16823:4: enumLiteral_5= '%='
                    {
                    enumLiteral_5=(Token)match(input,125,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNMODEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getAssignOperatorAccess().getASSIGNMODEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSCTX.g:16830:3: (enumLiteral_6= '&=' )
                    {
                    // InternalSCTX.g:16830:3: (enumLiteral_6= '&=' )
                    // InternalSCTX.g:16831:4: enumLiteral_6= '&='
                    {
                    enumLiteral_6=(Token)match(input,126,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNANDEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getAssignOperatorAccess().getASSIGNANDEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSCTX.g:16838:3: (enumLiteral_7= '|=' )
                    {
                    // InternalSCTX.g:16838:3: (enumLiteral_7= '|=' )
                    // InternalSCTX.g:16839:4: enumLiteral_7= '|='
                    {
                    enumLiteral_7=(Token)match(input,127,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNOREnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_7, grammarAccess.getAssignOperatorAccess().getASSIGNOREnumLiteralDeclaration_7());
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSCTX.g:16846:3: (enumLiteral_8= '^=' )
                    {
                    // InternalSCTX.g:16846:3: (enumLiteral_8= '^=' )
                    // InternalSCTX.g:16847:4: enumLiteral_8= '^='
                    {
                    enumLiteral_8=(Token)match(input,128,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNXOREnumLiteralDeclaration_8().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_8, grammarAccess.getAssignOperatorAccess().getASSIGNXOREnumLiteralDeclaration_8());
                      			
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSCTX.g:16854:3: (enumLiteral_9= '<<=' )
                    {
                    // InternalSCTX.g:16854:3: (enumLiteral_9= '<<=' )
                    // InternalSCTX.g:16855:4: enumLiteral_9= '<<='
                    {
                    enumLiteral_9=(Token)match(input,129,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTLEFTEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_9, grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTLEFTEnumLiteralDeclaration_9());
                      			
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalSCTX.g:16862:3: (enumLiteral_10= '>>=' )
                    {
                    // InternalSCTX.g:16862:3: (enumLiteral_10= '>>=' )
                    // InternalSCTX.g:16863:4: enumLiteral_10= '>>='
                    {
                    enumLiteral_10=(Token)match(input,130,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTRIGHTEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_10, grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTRIGHTEnumLiteralDeclaration_10());
                      			
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalSCTX.g:16870:3: (enumLiteral_11= '>>>=' )
                    {
                    // InternalSCTX.g:16870:3: (enumLiteral_11= '>>>=' )
                    // InternalSCTX.g:16871:4: enumLiteral_11= '>>>='
                    {
                    enumLiteral_11=(Token)match(input,131,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTRIGHTUNSIGNEDEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_11, grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTRIGHTUNSIGNEDEnumLiteralDeclaration_11());
                      			
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalSCTX.g:16878:3: (enumLiteral_12= 'min=' )
                    {
                    // InternalSCTX.g:16878:3: (enumLiteral_12= 'min=' )
                    // InternalSCTX.g:16879:4: enumLiteral_12= 'min='
                    {
                    enumLiteral_12=(Token)match(input,132,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNMINEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_12, grammarAccess.getAssignOperatorAccess().getASSIGNMINEnumLiteralDeclaration_12());
                      			
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalSCTX.g:16886:3: (enumLiteral_13= 'max=' )
                    {
                    // InternalSCTX.g:16886:3: (enumLiteral_13= 'max=' )
                    // InternalSCTX.g:16887:4: enumLiteral_13= 'max='
                    {
                    enumLiteral_13=(Token)match(input,133,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNMAXEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_13, grammarAccess.getAssignOperatorAccess().getASSIGNMAXEnumLiteralDeclaration_13());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssignOperator"


    // $ANTLR start "rulePostfixOperator"
    // InternalSCTX.g:16897:1: rulePostfixOperator returns [Enumerator current=null] : ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) ) ;
    public final Enumerator rulePostfixOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalSCTX.g:16903:2: ( ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) ) )
            // InternalSCTX.g:16904:2: ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) )
            {
            // InternalSCTX.g:16904:2: ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) )
            int alt456=2;
            int LA456_0 = input.LA(1);

            if ( (LA456_0==134) ) {
                alt456=1;
            }
            else if ( (LA456_0==135) ) {
                alt456=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 456, 0, input);

                throw nvae;
            }
            switch (alt456) {
                case 1 :
                    // InternalSCTX.g:16905:3: (enumLiteral_0= '++' )
                    {
                    // InternalSCTX.g:16905:3: (enumLiteral_0= '++' )
                    // InternalSCTX.g:16906:4: enumLiteral_0= '++'
                    {
                    enumLiteral_0=(Token)match(input,134,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPostfixOperatorAccess().getPOSTFIXADDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getPostfixOperatorAccess().getPOSTFIXADDEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:16913:3: (enumLiteral_1= '--' )
                    {
                    // InternalSCTX.g:16913:3: (enumLiteral_1= '--' )
                    // InternalSCTX.g:16914:4: enumLiteral_1= '--'
                    {
                    enumLiteral_1=(Token)match(input,135,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPostfixOperatorAccess().getPOSTFIXSUBEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getPostfixOperatorAccess().getPOSTFIXSUBEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePostfixOperator"


    // $ANTLR start "ruleCompareOperator"
    // InternalSCTX.g:16924:1: ruleCompareOperator returns [Enumerator current=null] : ( (enumLiteral_0= '==' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '!=' ) ) ;
    public final Enumerator ruleCompareOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;


        	enterRule();

        try {
            // InternalSCTX.g:16930:2: ( ( (enumLiteral_0= '==' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '!=' ) ) )
            // InternalSCTX.g:16931:2: ( (enumLiteral_0= '==' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '!=' ) )
            {
            // InternalSCTX.g:16931:2: ( (enumLiteral_0= '==' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '!=' ) )
            int alt457=6;
            switch ( input.LA(1) ) {
            case 136:
                {
                alt457=1;
                }
                break;
            case 137:
                {
                alt457=2;
                }
                break;
            case 138:
                {
                alt457=3;
                }
                break;
            case 139:
                {
                alt457=4;
                }
                break;
            case 140:
                {
                alt457=5;
                }
                break;
            case 141:
                {
                alt457=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 457, 0, input);

                throw nvae;
            }

            switch (alt457) {
                case 1 :
                    // InternalSCTX.g:16932:3: (enumLiteral_0= '==' )
                    {
                    // InternalSCTX.g:16932:3: (enumLiteral_0= '==' )
                    // InternalSCTX.g:16933:4: enumLiteral_0= '=='
                    {
                    enumLiteral_0=(Token)match(input,136,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:16940:3: (enumLiteral_1= '<' )
                    {
                    // InternalSCTX.g:16940:3: (enumLiteral_1= '<' )
                    // InternalSCTX.g:16941:4: enumLiteral_1= '<'
                    {
                    enumLiteral_1=(Token)match(input,137,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:16948:3: (enumLiteral_2= '<=' )
                    {
                    // InternalSCTX.g:16948:3: (enumLiteral_2= '<=' )
                    // InternalSCTX.g:16949:4: enumLiteral_2= '<='
                    {
                    enumLiteral_2=(Token)match(input,138,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCTX.g:16956:3: (enumLiteral_3= '>' )
                    {
                    // InternalSCTX.g:16956:3: (enumLiteral_3= '>' )
                    // InternalSCTX.g:16957:4: enumLiteral_3= '>'
                    {
                    enumLiteral_3=(Token)match(input,139,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCTX.g:16964:3: (enumLiteral_4= '>=' )
                    {
                    // InternalSCTX.g:16964:3: (enumLiteral_4= '>=' )
                    // InternalSCTX.g:16965:4: enumLiteral_4= '>='
                    {
                    enumLiteral_4=(Token)match(input,140,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSCTX.g:16972:3: (enumLiteral_5= '!=' )
                    {
                    // InternalSCTX.g:16972:3: (enumLiteral_5= '!=' )
                    // InternalSCTX.g:16973:4: enumLiteral_5= '!='
                    {
                    enumLiteral_5=(Token)match(input,141,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompareOperator"


    // $ANTLR start "rulePreOperator"
    // InternalSCTX.g:16983:1: rulePreOperator returns [Enumerator current=null] : (enumLiteral_0= 'pre' ) ;
    public final Enumerator rulePreOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:16989:2: ( (enumLiteral_0= 'pre' ) )
            // InternalSCTX.g:16990:2: (enumLiteral_0= 'pre' )
            {
            // InternalSCTX.g:16990:2: (enumLiteral_0= 'pre' )
            // InternalSCTX.g:16991:3: enumLiteral_0= 'pre'
            {
            enumLiteral_0=(Token)match(input,142,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePreOperator"


    // $ANTLR start "ruleBitwiseNotOperator"
    // InternalSCTX.g:17000:1: ruleBitwiseNotOperator returns [Enumerator current=null] : (enumLiteral_0= '~' ) ;
    public final Enumerator ruleBitwiseNotOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17006:2: ( (enumLiteral_0= '~' ) )
            // InternalSCTX.g:17007:2: (enumLiteral_0= '~' )
            {
            // InternalSCTX.g:17007:2: (enumLiteral_0= '~' )
            // InternalSCTX.g:17008:3: enumLiteral_0= '~'
            {
            enumLiteral_0=(Token)match(input,143,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseNotOperatorAccess().getBITWISE_NOTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseNotOperatorAccess().getBITWISE_NOTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseNotOperator"


    // $ANTLR start "ruleBitwiseXOrOperator"
    // InternalSCTX.g:17017:1: ruleBitwiseXOrOperator returns [Enumerator current=null] : (enumLiteral_0= '^' ) ;
    public final Enumerator ruleBitwiseXOrOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17023:2: ( (enumLiteral_0= '^' ) )
            // InternalSCTX.g:17024:2: (enumLiteral_0= '^' )
            {
            // InternalSCTX.g:17024:2: (enumLiteral_0= '^' )
            // InternalSCTX.g:17025:3: enumLiteral_0= '^'
            {
            enumLiteral_0=(Token)match(input,89,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseXOrOperatorAccess().getBITWISE_XOREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseXOrOperatorAccess().getBITWISE_XOREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseXOrOperator"


    // $ANTLR start "ruleBitwiseOrOperator"
    // InternalSCTX.g:17034:1: ruleBitwiseOrOperator returns [Enumerator current=null] : (enumLiteral_0= '|' ) ;
    public final Enumerator ruleBitwiseOrOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17040:2: ( (enumLiteral_0= '|' ) )
            // InternalSCTX.g:17041:2: (enumLiteral_0= '|' )
            {
            // InternalSCTX.g:17041:2: (enumLiteral_0= '|' )
            // InternalSCTX.g:17042:3: enumLiteral_0= '|'
            {
            enumLiteral_0=(Token)match(input,88,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseOrOperatorAccess().getBITWISE_OREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseOrOperatorAccess().getBITWISE_OREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseOrOperator"


    // $ANTLR start "ruleBitwiseAndOperator"
    // InternalSCTX.g:17051:1: ruleBitwiseAndOperator returns [Enumerator current=null] : (enumLiteral_0= '&' ) ;
    public final Enumerator ruleBitwiseAndOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17057:2: ( (enumLiteral_0= '&' ) )
            // InternalSCTX.g:17058:2: (enumLiteral_0= '&' )
            {
            // InternalSCTX.g:17058:2: (enumLiteral_0= '&' )
            // InternalSCTX.g:17059:3: enumLiteral_0= '&'
            {
            enumLiteral_0=(Token)match(input,34,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseAndOperatorAccess().getBITWISE_ANDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseAndOperatorAccess().getBITWISE_ANDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseAndOperator"


    // $ANTLR start "ruleNotOperator"
    // InternalSCTX.g:17068:1: ruleNotOperator returns [Enumerator current=null] : (enumLiteral_0= '!' ) ;
    public final Enumerator ruleNotOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17074:2: ( (enumLiteral_0= '!' ) )
            // InternalSCTX.g:17075:2: (enumLiteral_0= '!' )
            {
            // InternalSCTX.g:17075:2: (enumLiteral_0= '!' )
            // InternalSCTX.g:17076:3: enumLiteral_0= '!'
            {
            enumLiteral_0=(Token)match(input,33,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getNotOperatorAccess().getNOTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getNotOperatorAccess().getNOTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotOperator"


    // $ANTLR start "ruleAddOperator"
    // InternalSCTX.g:17085:1: ruleAddOperator returns [Enumerator current=null] : (enumLiteral_0= '+' ) ;
    public final Enumerator ruleAddOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17091:2: ( (enumLiteral_0= '+' ) )
            // InternalSCTX.g:17092:2: (enumLiteral_0= '+' )
            {
            // InternalSCTX.g:17092:2: (enumLiteral_0= '+' )
            // InternalSCTX.g:17093:3: enumLiteral_0= '+'
            {
            enumLiteral_0=(Token)match(input,93,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getAddOperatorAccess().getADDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getAddOperatorAccess().getADDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAddOperator"


    // $ANTLR start "ruleSubOperator"
    // InternalSCTX.g:17102:1: ruleSubOperator returns [Enumerator current=null] : (enumLiteral_0= '-' ) ;
    public final Enumerator ruleSubOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17108:2: ( (enumLiteral_0= '-' ) )
            // InternalSCTX.g:17109:2: (enumLiteral_0= '-' )
            {
            // InternalSCTX.g:17109:2: (enumLiteral_0= '-' )
            // InternalSCTX.g:17110:3: enumLiteral_0= '-'
            {
            enumLiteral_0=(Token)match(input,94,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getSubOperatorAccess().getSUBEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getSubOperatorAccess().getSUBEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubOperator"


    // $ANTLR start "ruleMultOperator"
    // InternalSCTX.g:17119:1: ruleMultOperator returns [Enumerator current=null] : (enumLiteral_0= '*' ) ;
    public final Enumerator ruleMultOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17125:2: ( (enumLiteral_0= '*' ) )
            // InternalSCTX.g:17126:2: (enumLiteral_0= '*' )
            {
            // InternalSCTX.g:17126:2: (enumLiteral_0= '*' )
            // InternalSCTX.g:17127:3: enumLiteral_0= '*'
            {
            enumLiteral_0=(Token)match(input,95,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultOperator"


    // $ANTLR start "ruleModOperator"
    // InternalSCTX.g:17136:1: ruleModOperator returns [Enumerator current=null] : (enumLiteral_0= '%' ) ;
    public final Enumerator ruleModOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17142:2: ( (enumLiteral_0= '%' ) )
            // InternalSCTX.g:17143:2: (enumLiteral_0= '%' )
            {
            // InternalSCTX.g:17143:2: (enumLiteral_0= '%' )
            // InternalSCTX.g:17144:3: enumLiteral_0= '%'
            {
            enumLiteral_0=(Token)match(input,97,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getModOperatorAccess().getMODEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getModOperatorAccess().getMODEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModOperator"


    // $ANTLR start "ruleDivOperator"
    // InternalSCTX.g:17153:1: ruleDivOperator returns [Enumerator current=null] : (enumLiteral_0= '/' ) ;
    public final Enumerator ruleDivOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17159:2: ( (enumLiteral_0= '/' ) )
            // InternalSCTX.g:17160:2: (enumLiteral_0= '/' )
            {
            // InternalSCTX.g:17160:2: (enumLiteral_0= '/' )
            // InternalSCTX.g:17161:3: enumLiteral_0= '/'
            {
            enumLiteral_0=(Token)match(input,96,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDivOperator"


    // $ANTLR start "ruleValOperator"
    // InternalSCTX.g:17170:1: ruleValOperator returns [Enumerator current=null] : (enumLiteral_0= 'val' ) ;
    public final Enumerator ruleValOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17176:2: ( (enumLiteral_0= 'val' ) )
            // InternalSCTX.g:17177:2: (enumLiteral_0= 'val' )
            {
            // InternalSCTX.g:17177:2: (enumLiteral_0= 'val' )
            // InternalSCTX.g:17178:3: enumLiteral_0= 'val'
            {
            enumLiteral_0=(Token)match(input,144,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getValOperatorAccess().getVALEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getValOperatorAccess().getVALEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValOperator"


    // $ANTLR start "ruleLogicalOrOperator"
    // InternalSCTX.g:17187:1: ruleLogicalOrOperator returns [Enumerator current=null] : (enumLiteral_0= '||' ) ;
    public final Enumerator ruleLogicalOrOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17193:2: ( (enumLiteral_0= '||' ) )
            // InternalSCTX.g:17194:2: (enumLiteral_0= '||' )
            {
            // InternalSCTX.g:17194:2: (enumLiteral_0= '||' )
            // InternalSCTX.g:17195:3: enumLiteral_0= '||'
            {
            enumLiteral_0=(Token)match(input,86,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getLogicalOrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getLogicalOrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalOrOperator"


    // $ANTLR start "ruleLogicalAndOperator"
    // InternalSCTX.g:17204:1: ruleLogicalAndOperator returns [Enumerator current=null] : (enumLiteral_0= '&&' ) ;
    public final Enumerator ruleLogicalAndOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17210:2: ( (enumLiteral_0= '&&' ) )
            // InternalSCTX.g:17211:2: (enumLiteral_0= '&&' )
            {
            // InternalSCTX.g:17211:2: (enumLiteral_0= '&&' )
            // InternalSCTX.g:17212:3: enumLiteral_0= '&&'
            {
            enumLiteral_0=(Token)match(input,87,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getLogicalAndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getLogicalAndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalAndOperator"


    // $ANTLR start "ruleShiftLeftOperator"
    // InternalSCTX.g:17221:1: ruleShiftLeftOperator returns [Enumerator current=null] : (enumLiteral_0= '<<' ) ;
    public final Enumerator ruleShiftLeftOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17227:2: ( (enumLiteral_0= '<<' ) )
            // InternalSCTX.g:17228:2: (enumLiteral_0= '<<' )
            {
            // InternalSCTX.g:17228:2: (enumLiteral_0= '<<' )
            // InternalSCTX.g:17229:3: enumLiteral_0= '<<'
            {
            enumLiteral_0=(Token)match(input,90,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getShiftLeftOperatorAccess().getSHIFT_LEFTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getShiftLeftOperatorAccess().getSHIFT_LEFTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftLeftOperator"


    // $ANTLR start "ruleShiftRightOperator"
    // InternalSCTX.g:17238:1: ruleShiftRightOperator returns [Enumerator current=null] : (enumLiteral_0= '>>' ) ;
    public final Enumerator ruleShiftRightOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17244:2: ( (enumLiteral_0= '>>' ) )
            // InternalSCTX.g:17245:2: (enumLiteral_0= '>>' )
            {
            // InternalSCTX.g:17245:2: (enumLiteral_0= '>>' )
            // InternalSCTX.g:17246:3: enumLiteral_0= '>>'
            {
            enumLiteral_0=(Token)match(input,91,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getShiftRightOperatorAccess().getSHIFT_RIGHTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getShiftRightOperatorAccess().getSHIFT_RIGHTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightOperator"


    // $ANTLR start "ruleShiftRightUnsignedOperator"
    // InternalSCTX.g:17255:1: ruleShiftRightUnsignedOperator returns [Enumerator current=null] : (enumLiteral_0= '>>>' ) ;
    public final Enumerator ruleShiftRightUnsignedOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17261:2: ( (enumLiteral_0= '>>>' ) )
            // InternalSCTX.g:17262:2: (enumLiteral_0= '>>>' )
            {
            // InternalSCTX.g:17262:2: (enumLiteral_0= '>>>' )
            // InternalSCTX.g:17263:3: enumLiteral_0= '>>>'
            {
            enumLiteral_0=(Token)match(input,92,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getShiftRightUnsignedOperatorAccess().getSHIFT_RIGHT_UNSIGNEDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getShiftRightUnsignedOperatorAccess().getSHIFT_RIGHT_UNSIGNEDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightUnsignedOperator"


    // $ANTLR start "ruleConditionalOperator"
    // InternalSCTX.g:17272:1: ruleConditionalOperator returns [Enumerator current=null] : (enumLiteral_0= '?' ) ;
    public final Enumerator ruleConditionalOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17278:2: ( (enumLiteral_0= '?' ) )
            // InternalSCTX.g:17279:2: (enumLiteral_0= '?' )
            {
            // InternalSCTX.g:17279:2: (enumLiteral_0= '?' )
            // InternalSCTX.g:17280:3: enumLiteral_0= '?'
            {
            enumLiteral_0=(Token)match(input,145,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getConditionalOperatorAccess().getCONDITIONALEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getConditionalOperatorAccess().getCONDITIONALEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalOperator"


    // $ANTLR start "ruleInitOperator"
    // InternalSCTX.g:17289:1: ruleInitOperator returns [Enumerator current=null] : (enumLiteral_0= '->' ) ;
    public final Enumerator ruleInitOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17295:2: ( (enumLiteral_0= '->' ) )
            // InternalSCTX.g:17296:2: (enumLiteral_0= '->' )
            {
            // InternalSCTX.g:17296:2: (enumLiteral_0= '->' )
            // InternalSCTX.g:17297:3: enumLiteral_0= '->'
            {
            enumLiteral_0=(Token)match(input,146,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getInitOperatorAccess().getINITEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getInitOperatorAccess().getINITEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInitOperator"


    // $ANTLR start "ruleHostType"
    // InternalSCTX.g:17306:1: ruleHostType returns [Enumerator current=null] : (enumLiteral_0= 'host' ) ;
    public final Enumerator ruleHostType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17312:2: ( (enumLiteral_0= 'host' ) )
            // InternalSCTX.g:17313:2: (enumLiteral_0= 'host' )
            {
            // InternalSCTX.g:17313:2: (enumLiteral_0= 'host' )
            // InternalSCTX.g:17314:3: enumLiteral_0= 'host'
            {
            enumLiteral_0=(Token)match(input,66,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getHostTypeAccess().getHOSTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getHostTypeAccess().getHOSTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHostType"


    // $ANTLR start "ruleStructType"
    // InternalSCTX.g:17323:1: ruleStructType returns [Enumerator current=null] : (enumLiteral_0= 'struct' ) ;
    public final Enumerator ruleStructType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17329:2: ( (enumLiteral_0= 'struct' ) )
            // InternalSCTX.g:17330:2: (enumLiteral_0= 'struct' )
            {
            // InternalSCTX.g:17330:2: (enumLiteral_0= 'struct' )
            // InternalSCTX.g:17331:3: enumLiteral_0= 'struct'
            {
            enumLiteral_0=(Token)match(input,147,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getStructTypeAccess().getSTRUCTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getStructTypeAccess().getSTRUCTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructType"


    // $ANTLR start "ruleClassType"
    // InternalSCTX.g:17340:1: ruleClassType returns [Enumerator current=null] : (enumLiteral_0= 'class' ) ;
    public final Enumerator ruleClassType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17346:2: ( (enumLiteral_0= 'class' ) )
            // InternalSCTX.g:17347:2: (enumLiteral_0= 'class' )
            {
            // InternalSCTX.g:17347:2: (enumLiteral_0= 'class' )
            // InternalSCTX.g:17348:3: enumLiteral_0= 'class'
            {
            enumLiteral_0=(Token)match(input,148,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getClassTypeAccess().getCLASSEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getClassTypeAccess().getCLASSEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassType"


    // $ANTLR start "ruleCombineOperator"
    // InternalSCTX.g:17357:1: ruleCombineOperator returns [Enumerator current=null] : ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) ) ;
    public final Enumerator ruleCombineOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;


        	enterRule();

        try {
            // InternalSCTX.g:17363:2: ( ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) ) )
            // InternalSCTX.g:17364:2: ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) )
            {
            // InternalSCTX.g:17364:2: ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) )
            int alt458=8;
            switch ( input.LA(1) ) {
            case 149:
                {
                alt458=1;
                }
                break;
            case 93:
                {
                alt458=2;
                }
                break;
            case 95:
                {
                alt458=3;
                }
                break;
            case 150:
                {
                alt458=4;
                }
                break;
            case 151:
                {
                alt458=5;
                }
                break;
            case 88:
                {
                alt458=6;
                }
                break;
            case 34:
                {
                alt458=7;
                }
                break;
            case 66:
                {
                alt458=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 458, 0, input);

                throw nvae;
            }

            switch (alt458) {
                case 1 :
                    // InternalSCTX.g:17365:3: (enumLiteral_0= 'none' )
                    {
                    // InternalSCTX.g:17365:3: (enumLiteral_0= 'none' )
                    // InternalSCTX.g:17366:4: enumLiteral_0= 'none'
                    {
                    enumLiteral_0=(Token)match(input,149,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:17373:3: (enumLiteral_1= '+' )
                    {
                    // InternalSCTX.g:17373:3: (enumLiteral_1= '+' )
                    // InternalSCTX.g:17374:4: enumLiteral_1= '+'
                    {
                    enumLiteral_1=(Token)match(input,93,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:17381:3: (enumLiteral_2= '*' )
                    {
                    // InternalSCTX.g:17381:3: (enumLiteral_2= '*' )
                    // InternalSCTX.g:17382:4: enumLiteral_2= '*'
                    {
                    enumLiteral_2=(Token)match(input,95,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCTX.g:17389:3: (enumLiteral_3= 'max' )
                    {
                    // InternalSCTX.g:17389:3: (enumLiteral_3= 'max' )
                    // InternalSCTX.g:17390:4: enumLiteral_3= 'max'
                    {
                    enumLiteral_3=(Token)match(input,150,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCTX.g:17397:3: (enumLiteral_4= 'min' )
                    {
                    // InternalSCTX.g:17397:3: (enumLiteral_4= 'min' )
                    // InternalSCTX.g:17398:4: enumLiteral_4= 'min'
                    {
                    enumLiteral_4=(Token)match(input,151,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSCTX.g:17405:3: (enumLiteral_5= '|' )
                    {
                    // InternalSCTX.g:17405:3: (enumLiteral_5= '|' )
                    // InternalSCTX.g:17406:4: enumLiteral_5= '|'
                    {
                    enumLiteral_5=(Token)match(input,88,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSCTX.g:17413:3: (enumLiteral_6= '&' )
                    {
                    // InternalSCTX.g:17413:3: (enumLiteral_6= '&' )
                    // InternalSCTX.g:17414:4: enumLiteral_6= '&'
                    {
                    enumLiteral_6=(Token)match(input,34,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSCTX.g:17421:3: (enumLiteral_7= 'host' )
                    {
                    // InternalSCTX.g:17421:3: (enumLiteral_7= 'host' )
                    // InternalSCTX.g:17422:4: enumLiteral_7= 'host'
                    {
                    enumLiteral_7=(Token)match(input,66,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_7, grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCombineOperator"


    // $ANTLR start "ruleAccessModifier"
    // InternalSCTX.g:17432:1: ruleAccessModifier returns [Enumerator current=null] : ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'protected' ) | (enumLiteral_2= 'private' ) ) ;
    public final Enumerator ruleAccessModifier() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalSCTX.g:17438:2: ( ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'protected' ) | (enumLiteral_2= 'private' ) ) )
            // InternalSCTX.g:17439:2: ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'protected' ) | (enumLiteral_2= 'private' ) )
            {
            // InternalSCTX.g:17439:2: ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'protected' ) | (enumLiteral_2= 'private' ) )
            int alt459=3;
            switch ( input.LA(1) ) {
            case 152:
                {
                alt459=1;
                }
                break;
            case 153:
                {
                alt459=2;
                }
                break;
            case 154:
                {
                alt459=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 459, 0, input);

                throw nvae;
            }

            switch (alt459) {
                case 1 :
                    // InternalSCTX.g:17440:3: (enumLiteral_0= 'public' )
                    {
                    // InternalSCTX.g:17440:3: (enumLiteral_0= 'public' )
                    // InternalSCTX.g:17441:4: enumLiteral_0= 'public'
                    {
                    enumLiteral_0=(Token)match(input,152,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAccessModifierAccess().getPUBLICEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getAccessModifierAccess().getPUBLICEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:17448:3: (enumLiteral_1= 'protected' )
                    {
                    // InternalSCTX.g:17448:3: (enumLiteral_1= 'protected' )
                    // InternalSCTX.g:17449:4: enumLiteral_1= 'protected'
                    {
                    enumLiteral_1=(Token)match(input,153,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAccessModifierAccess().getPROTECTEDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getAccessModifierAccess().getPROTECTEDEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:17456:3: (enumLiteral_2= 'private' )
                    {
                    // InternalSCTX.g:17456:3: (enumLiteral_2= 'private' )
                    // InternalSCTX.g:17457:4: enumLiteral_2= 'private'
                    {
                    enumLiteral_2=(Token)match(input,154,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAccessModifierAccess().getPRIVATEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getAccessModifierAccess().getPRIVATEEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAccessModifier"


    // $ANTLR start "ruleMethodReturnType"
    // InternalSCTX.g:17467:1: ruleMethodReturnType returns [Enumerator current=null] : ( (enumLiteral_0= 'void' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) ) ;
    public final Enumerator ruleMethodReturnType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;


        	enterRule();

        try {
            // InternalSCTX.g:17473:2: ( ( (enumLiteral_0= 'void' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) ) )
            // InternalSCTX.g:17474:2: ( (enumLiteral_0= 'void' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) )
            {
            // InternalSCTX.g:17474:2: ( (enumLiteral_0= 'void' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) )
            int alt460=5;
            switch ( input.LA(1) ) {
            case 155:
                {
                alt460=1;
                }
                break;
            case 114:
                {
                alt460=2;
                }
                break;
            case 115:
                {
                alt460=3;
                }
                break;
            case 116:
                {
                alt460=4;
                }
                break;
            case 117:
                {
                alt460=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 460, 0, input);

                throw nvae;
            }

            switch (alt460) {
                case 1 :
                    // InternalSCTX.g:17475:3: (enumLiteral_0= 'void' )
                    {
                    // InternalSCTX.g:17475:3: (enumLiteral_0= 'void' )
                    // InternalSCTX.g:17476:4: enumLiteral_0= 'void'
                    {
                    enumLiteral_0=(Token)match(input,155,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getMethodReturnTypeAccess().getVOIDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getMethodReturnTypeAccess().getVOIDEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:17483:3: (enumLiteral_1= 'bool' )
                    {
                    // InternalSCTX.g:17483:3: (enumLiteral_1= 'bool' )
                    // InternalSCTX.g:17484:4: enumLiteral_1= 'bool'
                    {
                    enumLiteral_1=(Token)match(input,114,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getMethodReturnTypeAccess().getBOOLEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getMethodReturnTypeAccess().getBOOLEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:17491:3: (enumLiteral_2= 'int' )
                    {
                    // InternalSCTX.g:17491:3: (enumLiteral_2= 'int' )
                    // InternalSCTX.g:17492:4: enumLiteral_2= 'int'
                    {
                    enumLiteral_2=(Token)match(input,115,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getMethodReturnTypeAccess().getINTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getMethodReturnTypeAccess().getINTEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCTX.g:17499:3: (enumLiteral_3= 'float' )
                    {
                    // InternalSCTX.g:17499:3: (enumLiteral_3= 'float' )
                    // InternalSCTX.g:17500:4: enumLiteral_3= 'float'
                    {
                    enumLiteral_3=(Token)match(input,116,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getMethodReturnTypeAccess().getFLOATEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getMethodReturnTypeAccess().getFLOATEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCTX.g:17507:3: (enumLiteral_4= 'string' )
                    {
                    // InternalSCTX.g:17507:3: (enumLiteral_4= 'string' )
                    // InternalSCTX.g:17508:4: enumLiteral_4= 'string'
                    {
                    enumLiteral_4=(Token)match(input,117,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getMethodReturnTypeAccess().getSTRINGEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getMethodReturnTypeAccess().getSTRINGEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodReturnType"

    // $ANTLR start synpred8_InternalSCTX
    public final void synpred8_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_9_0 = null;


        // InternalSCTX.g:280:4: ( (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )
        // InternalSCTX.g:280:4: (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
        {
        // InternalSCTX.g:280:4: (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
        // InternalSCTX.g:281:5: lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getRootStateAccess().getDeclarationsDeclarationOrMethodWithKeywordWOSemicolonParserRuleCall_6_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_9_0=ruleDeclarationOrMethodWithKeywordWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred8_InternalSCTX

    // $ANTLR start synpred10_InternalSCTX
    public final void synpred10_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_regions_11_0 = null;


        // InternalSCTX.g:318:4: ( ( (lv_regions_11_0= ruleImplicitControlflowRegion ) ) )
        // InternalSCTX.g:318:4: ( (lv_regions_11_0= ruleImplicitControlflowRegion ) )
        {
        // InternalSCTX.g:318:4: ( (lv_regions_11_0= ruleImplicitControlflowRegion ) )
        // InternalSCTX.g:319:5: (lv_regions_11_0= ruleImplicitControlflowRegion )
        {
        // InternalSCTX.g:319:5: (lv_regions_11_0= ruleImplicitControlflowRegion )
        // InternalSCTX.g:320:6: lv_regions_11_0= ruleImplicitControlflowRegion
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getRootStateAccess().getRegionsImplicitControlflowRegionParserRuleCall_8_0_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_regions_11_0=ruleImplicitControlflowRegion();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred10_InternalSCTX

    // $ANTLR start synpred17_InternalSCTX
    public final void synpred17_InternalSCTX_fragment() throws RecognitionException {   
        // InternalSCTX.g:457:4: ( 'state' )
        // InternalSCTX.g:457:5: 'state'
        {
        match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred17_InternalSCTX

    // $ANTLR start synpred26_InternalSCTX
    public final void synpred26_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_19_0 = null;


        // InternalSCTX.g:626:6: ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )
        // InternalSCTX.g:626:6: (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
        {
        // InternalSCTX.g:626:6: (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
        // InternalSCTX.g:627:7: lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getStateAccess().getDeclarationsDeclarationOrMethodWithKeywordWOSemicolonParserRuleCall_8_1_3_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_19_0=ruleDeclarationOrMethodWithKeywordWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred26_InternalSCTX

    // $ANTLR start synpred28_InternalSCTX
    public final void synpred28_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_regions_21_0 = null;


        // InternalSCTX.g:664:6: ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) )
        // InternalSCTX.g:664:6: ( (lv_regions_21_0= ruleImplicitControlflowRegion ) )
        {
        // InternalSCTX.g:664:6: ( (lv_regions_21_0= ruleImplicitControlflowRegion ) )
        // InternalSCTX.g:665:7: (lv_regions_21_0= ruleImplicitControlflowRegion )
        {
        // InternalSCTX.g:665:7: (lv_regions_21_0= ruleImplicitControlflowRegion )
        // InternalSCTX.g:666:8: lv_regions_21_0= ruleImplicitControlflowRegion
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getStateAccess().getRegionsImplicitControlflowRegionParserRuleCall_8_1_5_0_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_regions_21_0=ruleImplicitControlflowRegion();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred28_InternalSCTX

    // $ANTLR start synpred44_InternalSCTX
    public final void synpred44_InternalSCTX_fragment() throws RecognitionException {   
        Token lv_triggerDelay_4_0=null;

        // InternalSCTX.g:1140:5: ( (lv_triggerDelay_4_0= RULE_INT ) )
        // InternalSCTX.g:1140:5: (lv_triggerDelay_4_0= RULE_INT )
        {
        // InternalSCTX.g:1140:5: (lv_triggerDelay_4_0= RULE_INT )
        // InternalSCTX.g:1141:6: lv_triggerDelay_4_0= RULE_INT
        {
        lv_triggerDelay_4_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred44_InternalSCTX

    // $ANTLR start synpred45_InternalSCTX
    public final void synpred45_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_trigger_5_0 = null;


        // InternalSCTX.g:1158:5: ( ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) )
        // InternalSCTX.g:1158:5: ( (lv_trigger_5_0= ruleBoolScheduleExpression ) )
        {
        // InternalSCTX.g:1158:5: ( (lv_trigger_5_0= ruleBoolScheduleExpression ) )
        // InternalSCTX.g:1159:6: (lv_trigger_5_0= ruleBoolScheduleExpression )
        {
        // InternalSCTX.g:1159:6: (lv_trigger_5_0= ruleBoolScheduleExpression )
        // InternalSCTX.g:1160:7: lv_trigger_5_0= ruleBoolScheduleExpression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getTransitionAccess().getTriggerBoolScheduleExpressionParserRuleCall_3_2_0_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_trigger_5_0=ruleBoolScheduleExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred45_InternalSCTX

    // $ANTLR start synpred54_InternalSCTX
    public final void synpred54_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ControlflowRegion_0 = null;


        // InternalSCTX.g:1398:3: (this_ControlflowRegion_0= ruleControlflowRegion )
        // InternalSCTX.g:1398:3: this_ControlflowRegion_0= ruleControlflowRegion
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ControlflowRegion_0=ruleControlflowRegion();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred54_InternalSCTX

    // $ANTLR start synpred70_InternalSCTX
    public final void synpred70_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_26_0 = null;


        // InternalSCTX.g:1817:8: ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )
        // InternalSCTX.g:1817:8: (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
        {
        // InternalSCTX.g:1817:8: (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
        // InternalSCTX.g:1818:9: lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon
        {
        if ( state.backtracking==0 ) {

          									newCompositeNode(grammarAccess.getControlflowRegionAccess().getDeclarationsDeclarationOrMethodWithKeywordWOSemicolonParserRuleCall_7_1_2_0_1_0());
          								
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_26_0=ruleDeclarationOrMethodWithKeywordWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred70_InternalSCTX

    // $ANTLR start synpred72_InternalSCTX
    public final void synpred72_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_states_28_0 = null;


        // InternalSCTX.g:1855:8: ( ( (lv_states_28_0= ruleImplicitState ) ) )
        // InternalSCTX.g:1855:8: ( (lv_states_28_0= ruleImplicitState ) )
        {
        // InternalSCTX.g:1855:8: ( (lv_states_28_0= ruleImplicitState ) )
        // InternalSCTX.g:1856:9: (lv_states_28_0= ruleImplicitState )
        {
        // InternalSCTX.g:1856:9: (lv_states_28_0= ruleImplicitState )
        // InternalSCTX.g:1857:10: lv_states_28_0= ruleImplicitState
        {
        if ( state.backtracking==0 ) {

          										newCompositeNode(grammarAccess.getControlflowRegionAccess().getStatesImplicitStateParserRuleCall_7_1_2_0_3_0_0());
          									
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_states_28_0=ruleImplicitState();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred72_InternalSCTX

    // $ANTLR start synpred75_InternalSCTX
    public final void synpred75_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_32_0 = null;


        // InternalSCTX.g:1907:8: ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )
        // InternalSCTX.g:1907:8: (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
        {
        // InternalSCTX.g:1907:8: (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
        // InternalSCTX.g:1908:9: lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon
        {
        if ( state.backtracking==0 ) {

          									newCompositeNode(grammarAccess.getControlflowRegionAccess().getDeclarationsDeclarationOrMethodWithKeywordWOSemicolonParserRuleCall_7_1_2_1_1_0());
          								
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_32_0=ruleDeclarationOrMethodWithKeywordWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred75_InternalSCTX

    // $ANTLR start synpred77_InternalSCTX
    public final void synpred77_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_states_34_0 = null;


        // InternalSCTX.g:1945:8: ( (lv_states_34_0= ruleState ) )
        // InternalSCTX.g:1945:8: (lv_states_34_0= ruleState )
        {
        // InternalSCTX.g:1945:8: (lv_states_34_0= ruleState )
        // InternalSCTX.g:1946:9: lv_states_34_0= ruleState
        {
        if ( state.backtracking==0 ) {

          									newCompositeNode(grammarAccess.getControlflowRegionAccess().getStatesStateParserRuleCall_7_1_2_1_3_0());
          								
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_states_34_0=ruleState();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred77_InternalSCTX

    // $ANTLR start synpred87_InternalSCTX
    public final void synpred87_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_16_0 = null;


        // InternalSCTX.g:2189:6: ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )
        // InternalSCTX.g:2189:6: (lv_declarations_16_0= ruleDeclarationWOSemicolon )
        {
        // InternalSCTX.g:2189:6: (lv_declarations_16_0= ruleDeclarationWOSemicolon )
        // InternalSCTX.g:2190:7: lv_declarations_16_0= ruleDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getDataflowRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_9_0_1_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_16_0=ruleDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred87_InternalSCTX

    // $ANTLR start synpred90_InternalSCTX
    public final void synpred90_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_20_0 = null;


        // InternalSCTX.g:2238:6: ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )
        // InternalSCTX.g:2238:6: (lv_declarations_20_0= ruleDeclarationWOSemicolon )
        {
        // InternalSCTX.g:2238:6: (lv_declarations_20_0= ruleDeclarationWOSemicolon )
        // InternalSCTX.g:2239:7: lv_declarations_20_0= ruleDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getDataflowRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_9_1_1_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_20_0=ruleDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred90_InternalSCTX

    // $ANTLR start synpred91_InternalSCTX
    public final void synpred91_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_effects_21_0 = null;


        // InternalSCTX.g:2257:6: ( (lv_effects_21_0= ruleDataflowRegionEffects ) )
        // InternalSCTX.g:2257:6: (lv_effects_21_0= ruleDataflowRegionEffects )
        {
        // InternalSCTX.g:2257:6: (lv_effects_21_0= ruleDataflowRegionEffects )
        // InternalSCTX.g:2258:7: lv_effects_21_0= ruleDataflowRegionEffects
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getDataflowRegionAccess().getEffectsDataflowRegionEffectsParserRuleCall_9_1_2_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_effects_21_0=ruleDataflowRegionEffects();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred91_InternalSCTX

    // $ANTLR start synpred92_InternalSCTX
    public final void synpred92_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Assignment_0 = null;


        // InternalSCTX.g:2296:3: (this_Assignment_0= ruleAssignment )
        // InternalSCTX.g:2296:3: this_Assignment_0= ruleAssignment
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Assignment_0=ruleAssignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred92_InternalSCTX

    // $ANTLR start synpred93_InternalSCTX
    public final void synpred93_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_PostfixEffect_1 = null;


        // InternalSCTX.g:2308:3: (this_PostfixEffect_1= rulePostfixEffect )
        // InternalSCTX.g:2308:3: this_PostfixEffect_1= rulePostfixEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_PostfixEffect_1=rulePostfixEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred93_InternalSCTX

    // $ANTLR start synpred94_InternalSCTX
    public final void synpred94_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject this_ValuedEmission_3 = null;


        // InternalSCTX.g:2320:3: ( (otherlv_2= 'emit' this_ValuedEmission_3= ruleValuedEmission ) )
        // InternalSCTX.g:2320:3: (otherlv_2= 'emit' this_ValuedEmission_3= ruleValuedEmission )
        {
        // InternalSCTX.g:2320:3: (otherlv_2= 'emit' this_ValuedEmission_3= ruleValuedEmission )
        // InternalSCTX.g:2321:4: otherlv_2= 'emit' this_ValuedEmission_3= ruleValuedEmission
        {
        otherlv_2=(Token)match(input,51,FollowSets000.FOLLOW_82); if (state.failed) return ;
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedEmission_3=ruleValuedEmission();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred94_InternalSCTX

    // $ANTLR start synpred108_InternalSCTX
    public final void synpred108_InternalSCTX_fragment() throws RecognitionException {   
        Token lv_triggerDelay_4_0=null;

        // InternalSCTX.g:2749:5: ( (lv_triggerDelay_4_0= RULE_INT ) )
        // InternalSCTX.g:2749:5: (lv_triggerDelay_4_0= RULE_INT )
        {
        // InternalSCTX.g:2749:5: (lv_triggerDelay_4_0= RULE_INT )
        // InternalSCTX.g:2750:6: lv_triggerDelay_4_0= RULE_INT
        {
        lv_triggerDelay_4_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred108_InternalSCTX

    // $ANTLR start synpred121_InternalSCTX
    public final void synpred121_InternalSCTX_fragment() throws RecognitionException {   
        Token lv_triggerDelay_5_0=null;

        // InternalSCTX.g:3112:5: ( (lv_triggerDelay_5_0= RULE_INT ) )
        // InternalSCTX.g:3112:5: (lv_triggerDelay_5_0= RULE_INT )
        {
        // InternalSCTX.g:3112:5: (lv_triggerDelay_5_0= RULE_INT )
        // InternalSCTX.g:3113:6: lv_triggerDelay_5_0= RULE_INT
        {
        lv_triggerDelay_5_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred121_InternalSCTX

    // $ANTLR start synpred138_InternalSCTX
    public final void synpred138_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Declaration_0 = null;


        // InternalSCTX.g:3642:3: (this_Declaration_0= superDeclaration )
        // InternalSCTX.g:3642:3: this_Declaration_0= superDeclaration
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Declaration_0=superDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred138_InternalSCTX

    // $ANTLR start synpred139_InternalSCTX
    public final void synpred139_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_SclAssignment_0 = null;


        // InternalSCTX.g:3684:3: (this_SclAssignment_0= ruleSclAssignment )
        // InternalSCTX.g:3684:3: this_SclAssignment_0= ruleSclAssignment
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_SclAssignment_0=ruleSclAssignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred139_InternalSCTX

    // $ANTLR start synpred140_InternalSCTX
    public final void synpred140_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_SclPostfixAssignment_1 = null;


        // InternalSCTX.g:3696:3: (this_SclPostfixAssignment_1= ruleSclPostfixAssignment )
        // InternalSCTX.g:3696:3: this_SclPostfixAssignment_1= ruleSclPostfixAssignment
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_SclPostfixAssignment_1=ruleSclPostfixAssignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred140_InternalSCTX

    // $ANTLR start synpred141_InternalSCTX
    public final void synpred141_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Label_2 = null;


        // InternalSCTX.g:3708:3: (this_Label_2= ruleLabel )
        // InternalSCTX.g:3708:3: this_Label_2= ruleLabel
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Label_2=ruleLabel();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred141_InternalSCTX

    // $ANTLR start synpred142_InternalSCTX
    public final void synpred142_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Conditional_3 = null;


        // InternalSCTX.g:3720:3: (this_Conditional_3= ruleConditional )
        // InternalSCTX.g:3720:3: this_Conditional_3= ruleConditional
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Conditional_3=ruleConditional();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred142_InternalSCTX

    // $ANTLR start synpred143_InternalSCTX
    public final void synpred143_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Goto_4 = null;


        // InternalSCTX.g:3732:3: (this_Goto_4= ruleGoto )
        // InternalSCTX.g:3732:3: this_Goto_4= ruleGoto
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Goto_4=ruleGoto();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred143_InternalSCTX

    // $ANTLR start synpred144_InternalSCTX
    public final void synpred144_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ScopeStatement_5 = null;


        // InternalSCTX.g:3744:3: (this_ScopeStatement_5= ruleScopeStatement )
        // InternalSCTX.g:3744:3: this_ScopeStatement_5= ruleScopeStatement
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ScopeStatement_5=ruleScopeStatement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred144_InternalSCTX

    // $ANTLR start synpred145_InternalSCTX
    public final void synpred145_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Return_6 = null;


        // InternalSCTX.g:3756:3: (this_Return_6= ruleReturn )
        // InternalSCTX.g:3756:3: this_Return_6= ruleReturn
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Return_6=ruleReturn();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred145_InternalSCTX

    // $ANTLR start synpred147_InternalSCTX
    public final void synpred147_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Effect_0 = null;


        // InternalSCTX.g:3810:3: (this_Effect_0= superEffect )
        // InternalSCTX.g:3810:3: this_Effect_0= superEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Effect_0=superEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred147_InternalSCTX

    // $ANTLR start synpred149_InternalSCTX
    public final void synpred149_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_3_0 = null;


        // InternalSCTX.g:3886:4: ( (lv_declarations_3_0= ruleDeclaration ) )
        // InternalSCTX.g:3886:4: (lv_declarations_3_0= ruleDeclaration )
        {
        // InternalSCTX.g:3886:4: (lv_declarations_3_0= ruleDeclaration )
        // InternalSCTX.g:3887:5: lv_declarations_3_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getCodeEffectAccess().getDeclarationsDeclarationParserRuleCall_3_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_3_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred149_InternalSCTX

    // $ANTLR start synpred166_InternalSCTX
    public final void synpred166_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_21=null;
        EObject lv_valuedObjects_20_0 = null;

        EObject lv_valuedObjects_22_0 = null;


        // InternalSCTX.g:4233:4: ( ( (lv_valuedObjects_20_0= ruleValuedObject ) ) (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )* )
        // InternalSCTX.g:4233:4: ( (lv_valuedObjects_20_0= ruleValuedObject ) ) (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )*
        {
        // InternalSCTX.g:4233:4: ( (lv_valuedObjects_20_0= ruleValuedObject ) )
        // InternalSCTX.g:4234:5: (lv_valuedObjects_20_0= ruleValuedObject )
        {
        // InternalSCTX.g:4234:5: (lv_valuedObjects_20_0= ruleValuedObject )
        // InternalSCTX.g:4235:6: lv_valuedObjects_20_0= ruleValuedObject
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_10_0_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_201);
        lv_valuedObjects_20_0=ruleValuedObject();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCTX.g:4252:4: (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )*
        loop515:
        do {
            int alt515=2;
            int LA515_0 = input.LA(1);

            if ( (LA515_0==20) ) {
                alt515=1;
            }


            switch (alt515) {
        	case 1 :
        	    // InternalSCTX.g:4253:5: otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) )
        	    {
        	    otherlv_21=(Token)match(input,20,FollowSets000.FOLLOW_107); if (state.failed) return ;
        	    // InternalSCTX.g:4257:5: ( (lv_valuedObjects_22_0= ruleValuedObject ) )
        	    // InternalSCTX.g:4258:6: (lv_valuedObjects_22_0= ruleValuedObject )
        	    {
        	    // InternalSCTX.g:4258:6: (lv_valuedObjects_22_0= ruleValuedObject )
        	    // InternalSCTX.g:4259:7: lv_valuedObjects_22_0= ruleValuedObject
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_10_1_1_0());
        	      						
        	    }
        	    pushFollow(FollowSets000.FOLLOW_201);
        	    lv_valuedObjects_22_0=ruleValuedObject();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop515;
            }
        } while (true);


        }
    }
    // $ANTLR end synpred166_InternalSCTX

    // $ANTLR start synpred169_InternalSCTX
    public final void synpred169_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_4_0 = null;


        // InternalSCTX.g:4361:4: ( (lv_declarations_4_0= ruleDeclarationWOSemicolon ) )
        // InternalSCTX.g:4361:4: (lv_declarations_4_0= ruleDeclarationWOSemicolon )
        {
        // InternalSCTX.g:4361:4: (lv_declarations_4_0= ruleDeclarationWOSemicolon )
        // InternalSCTX.g:4362:5: lv_declarations_4_0= ruleDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getPolicyRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_4_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_4_0=ruleDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred169_InternalSCTX

    // $ANTLR start synpred176_InternalSCTX
    public final void synpred176_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_trigger_3_0 = null;


        // InternalSCTX.g:4567:5: ( ( (lv_trigger_3_0= ruleLogicalOrExpression ) ) )
        // InternalSCTX.g:4567:5: ( (lv_trigger_3_0= ruleLogicalOrExpression ) )
        {
        // InternalSCTX.g:4567:5: ( (lv_trigger_3_0= ruleLogicalOrExpression ) )
        // InternalSCTX.g:4568:6: (lv_trigger_3_0= ruleLogicalOrExpression )
        {
        // InternalSCTX.g:4568:6: (lv_trigger_3_0= ruleLogicalOrExpression )
        // InternalSCTX.g:4569:7: lv_trigger_3_0= ruleLogicalOrExpression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPolicyTransitionAccess().getTriggerLogicalOrExpressionParserRuleCall_2_1_0_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_trigger_3_0=ruleLogicalOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred176_InternalSCTX

    // $ANTLR start synpred181_InternalSCTX
    public final void synpred181_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_DeclarationWOSemicolon_0 = null;


        // InternalSCTX.g:4721:3: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon )
        // InternalSCTX.g:4721:3: this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_DeclarationWOSemicolon_0=ruleDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred181_InternalSCTX

    // $ANTLR start synpred190_InternalSCTX
    public final void synpred190_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_16_0 = null;


        // InternalSCTX.g:4964:5: ( (lv_declarations_16_0= ruleDeclaration ) )
        // InternalSCTX.g:4964:5: (lv_declarations_16_0= ruleDeclaration )
        {
        // InternalSCTX.g:4964:5: (lv_declarations_16_0= ruleDeclaration )
        // InternalSCTX.g:4965:6: lv_declarations_16_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getDeclarationsDeclarationParserRuleCall_8_2_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_16_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred190_InternalSCTX

    // $ANTLR start synpred195_InternalSCTX
    public final void synpred195_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_4_0 = null;


        // InternalSCTX.g:5073:4: ( (lv_declarations_4_0= ruleDeclaration ) )
        // InternalSCTX.g:5073:4: (lv_declarations_4_0= ruleDeclaration )
        {
        // InternalSCTX.g:5073:4: (lv_declarations_4_0= ruleDeclaration )
        // InternalSCTX.g:5074:5: lv_declarations_4_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getModuleAccess().getDeclarationsDeclarationParserRuleCall_4_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_4_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred195_InternalSCTX

    // $ANTLR start synpred210_InternalSCTX
    public final void synpred210_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_4_0 = null;


        // InternalSCTX.g:5618:4: ( (lv_declarations_4_0= ruleDeclaration ) )
        // InternalSCTX.g:5618:4: (lv_declarations_4_0= ruleDeclaration )
        {
        // InternalSCTX.g:5618:4: (lv_declarations_4_0= ruleDeclaration )
        // InternalSCTX.g:5619:5: lv_declarations_4_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getConditionalAccess().getDeclarationsDeclarationParserRuleCall_4_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_4_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred210_InternalSCTX

    // $ANTLR start synpred212_InternalSCTX
    public final void synpred212_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_else_7_0 = null;


        // InternalSCTX.g:5660:4: ( ( (lv_else_7_0= ruleElseScope ) ) )
        // InternalSCTX.g:5660:4: ( (lv_else_7_0= ruleElseScope ) )
        {
        // InternalSCTX.g:5660:4: ( (lv_else_7_0= ruleElseScope ) )
        // InternalSCTX.g:5661:5: (lv_else_7_0= ruleElseScope )
        {
        // InternalSCTX.g:5661:5: (lv_else_7_0= ruleElseScope )
        // InternalSCTX.g:5662:6: lv_else_7_0= ruleElseScope
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getConditionalAccess().getElseElseScopeParserRuleCall_7_0_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_else_7_0=ruleElseScope();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred212_InternalSCTX

    // $ANTLR start synpred215_InternalSCTX
    public final void synpred215_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_4_0 = null;


        // InternalSCTX.g:5752:4: ( (lv_declarations_4_0= ruleDeclaration ) )
        // InternalSCTX.g:5752:4: (lv_declarations_4_0= ruleDeclaration )
        {
        // InternalSCTX.g:5752:4: (lv_declarations_4_0= ruleDeclaration )
        // InternalSCTX.g:5753:5: lv_declarations_4_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getElseScopeAccess().getDeclarationsDeclarationParserRuleCall_4_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_4_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred215_InternalSCTX

    // $ANTLR start synpred221_InternalSCTX
    public final void synpred221_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_3_0 = null;


        // InternalSCTX.g:5933:6: ( (lv_declarations_3_0= ruleDeclaration ) )
        // InternalSCTX.g:5933:6: (lv_declarations_3_0= ruleDeclaration )
        {
        // InternalSCTX.g:5933:6: (lv_declarations_3_0= ruleDeclaration )
        // InternalSCTX.g:5934:7: lv_declarations_3_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getThreadAccess().getDeclarationsDeclarationParserRuleCall_1_0_2_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_3_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred221_InternalSCTX

    // $ANTLR start synpred223_InternalSCTX
    public final void synpred223_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_declarations_3_0 = null;

        EObject lv_statements_4_0 = null;


        // InternalSCTX.g:5908:4: ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) )
        // InternalSCTX.g:5908:4: ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
        {
        // InternalSCTX.g:5908:4: ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
        // InternalSCTX.g:5909:5: ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}'
        {
        // InternalSCTX.g:5909:5: ( (lv_annotations_1_0= ruleAnnotation ) )*
        loop527:
        do {
            int alt527=2;
            int LA527_0 = input.LA(1);

            if ( (LA527_0==RULE_COMMENT_ANNOTATION||LA527_0==103) ) {
                alt527=1;
            }


            switch (alt527) {
        	case 1 :
        	    // InternalSCTX.g:5910:6: (lv_annotations_1_0= ruleAnnotation )
        	    {
        	    // InternalSCTX.g:5910:6: (lv_annotations_1_0= ruleAnnotation )
        	    // InternalSCTX.g:5911:7: lv_annotations_1_0= ruleAnnotation
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getThreadAccess().getAnnotationsAnnotationParserRuleCall_1_0_0_0());
        	      						
        	    }
        	    pushFollow(FollowSets000.FOLLOW_97);
        	    lv_annotations_1_0=ruleAnnotation();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop527;
            }
        } while (true);

        otherlv_2=(Token)match(input,21,FollowSets000.FOLLOW_98); if (state.failed) return ;
        // InternalSCTX.g:5932:5: ( (lv_declarations_3_0= ruleDeclaration ) )*
        loop528:
        do {
            int alt528=2;
            alt528 = dfa528.predict(input);
            switch (alt528) {
        	case 1 :
        	    // InternalSCTX.g:5933:6: (lv_declarations_3_0= ruleDeclaration )
        	    {
        	    // InternalSCTX.g:5933:6: (lv_declarations_3_0= ruleDeclaration )
        	    // InternalSCTX.g:5934:7: lv_declarations_3_0= ruleDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getThreadAccess().getDeclarationsDeclarationParserRuleCall_1_0_2_0());
        	      						
        	    }
        	    pushFollow(FollowSets000.FOLLOW_98);
        	    lv_declarations_3_0=ruleDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop528;
            }
        } while (true);

        // InternalSCTX.g:5951:5: ( (lv_statements_4_0= ruleStatement ) )*
        loop529:
        do {
            int alt529=2;
            int LA529_0 = input.LA(1);

            if ( (LA529_0==RULE_ID||LA529_0==RULE_COMMENT_ANNOTATION||LA529_0==21||LA529_0==38||LA529_0==47||(LA529_0>=72 && LA529_0<=73)||LA529_0==75||LA529_0==103) ) {
                alt529=1;
            }


            switch (alt529) {
        	case 1 :
        	    // InternalSCTX.g:5952:6: (lv_statements_4_0= ruleStatement )
        	    {
        	    // InternalSCTX.g:5952:6: (lv_statements_4_0= ruleStatement )
        	    // InternalSCTX.g:5953:7: lv_statements_4_0= ruleStatement
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getThreadAccess().getStatementsStatementParserRuleCall_1_0_3_0());
        	      						
        	    }
        	    pushFollow(FollowSets000.FOLLOW_99);
        	    lv_statements_4_0=ruleStatement();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop529;
            }
        } while (true);

        otherlv_5=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred223_InternalSCTX

    // $ANTLR start synpred226_InternalSCTX
    public final void synpred226_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_3_0 = null;


        // InternalSCTX.g:6049:4: ( (lv_declarations_3_0= ruleDeclaration ) )
        // InternalSCTX.g:6049:4: (lv_declarations_3_0= ruleDeclaration )
        {
        // InternalSCTX.g:6049:4: (lv_declarations_3_0= ruleDeclaration )
        // InternalSCTX.g:6050:5: lv_declarations_3_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getScopeStatementAccess().getDeclarationsDeclarationParserRuleCall_3_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_3_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred226_InternalSCTX

    // $ANTLR start synpred228_InternalSCTX
    public final void synpred228_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_initializationDeclaration_2_0 = null;


        // InternalSCTX.g:6118:4: ( ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) ) )
        // InternalSCTX.g:6118:4: ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) )
        {
        // InternalSCTX.g:6118:4: ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) )
        // InternalSCTX.g:6119:5: (lv_initializationDeclaration_2_0= ruleLoopDeclaration )
        {
        // InternalSCTX.g:6119:5: (lv_initializationDeclaration_2_0= ruleLoopDeclaration )
        // InternalSCTX.g:6120:6: lv_initializationDeclaration_2_0= ruleLoopDeclaration
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getForLoopAccess().getInitializationDeclarationLoopDeclarationParserRuleCall_2_0_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_initializationDeclaration_2_0=ruleLoopDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred228_InternalSCTX

    // $ANTLR start synpred229_InternalSCTX
    public final void synpred229_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_initialization_3_0 = null;


        // InternalSCTX.g:6138:4: ( ( (lv_initialization_3_0= ruleEffectOrAssignment ) ) )
        // InternalSCTX.g:6138:4: ( (lv_initialization_3_0= ruleEffectOrAssignment ) )
        {
        // InternalSCTX.g:6138:4: ( (lv_initialization_3_0= ruleEffectOrAssignment ) )
        // InternalSCTX.g:6139:5: (lv_initialization_3_0= ruleEffectOrAssignment )
        {
        // InternalSCTX.g:6139:5: (lv_initialization_3_0= ruleEffectOrAssignment )
        // InternalSCTX.g:6140:6: lv_initialization_3_0= ruleEffectOrAssignment
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getForLoopAccess().getInitializationEffectOrAssignmentParserRuleCall_2_1_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_initialization_3_0=ruleEffectOrAssignment();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred229_InternalSCTX

    // $ANTLR start synpred231_InternalSCTX
    public final void synpred231_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_10_0 = null;


        // InternalSCTX.g:6213:4: ( (lv_declarations_10_0= ruleDeclaration ) )
        // InternalSCTX.g:6213:4: (lv_declarations_10_0= ruleDeclaration )
        {
        // InternalSCTX.g:6213:4: (lv_declarations_10_0= ruleDeclaration )
        // InternalSCTX.g:6214:5: lv_declarations_10_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getForLoopAccess().getDeclarationsDeclarationParserRuleCall_9_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_10_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred231_InternalSCTX

    // $ANTLR start synpred236_InternalSCTX
    public final void synpred236_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_annotations_0_0 = null;


        // InternalSCTX.g:6406:4: ( (lv_annotations_0_0= ruleAnnotation ) )
        // InternalSCTX.g:6406:4: (lv_annotations_0_0= ruleAnnotation )
        {
        // InternalSCTX.g:6406:4: (lv_annotations_0_0= ruleAnnotation )
        // InternalSCTX.g:6407:5: lv_annotations_0_0= ruleAnnotation
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_annotations_0_0=ruleAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred236_InternalSCTX

    // $ANTLR start synpred237_InternalSCTX
    public final void synpred237_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_reference_1_0 = null;

        Enumerator lv_operator_2_0 = null;


        // InternalSCTX.g:6425:4: ( ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) ) )
        // InternalSCTX.g:6425:4: ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) )
        {
        // InternalSCTX.g:6425:4: ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) )
        // InternalSCTX.g:6426:5: ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) )
        {
        // InternalSCTX.g:6426:5: ( (lv_reference_1_0= ruleValuedObjectReference ) )
        // InternalSCTX.g:6427:6: (lv_reference_1_0= ruleValuedObjectReference )
        {
        // InternalSCTX.g:6427:6: (lv_reference_1_0= ruleValuedObjectReference )
        // InternalSCTX.g:6428:7: lv_reference_1_0= ruleValuedObjectReference
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0_0_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_134);
        lv_reference_1_0=ruleValuedObjectReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCTX.g:6445:5: ( (lv_operator_2_0= rulePostfixOperator ) )
        // InternalSCTX.g:6446:6: (lv_operator_2_0= rulePostfixOperator )
        {
        // InternalSCTX.g:6446:6: (lv_operator_2_0= rulePostfixOperator )
        // InternalSCTX.g:6447:7: lv_operator_2_0= rulePostfixOperator
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getOperatorPostfixOperatorEnumRuleCall_1_0_1_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_operator_2_0=rulePostfixOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred237_InternalSCTX

    // $ANTLR start synpred238_InternalSCTX
    public final void synpred238_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_reference_3_0 = null;

        Enumerator lv_operator_4_0 = null;

        EObject lv_expression_5_0 = null;


        // InternalSCTX.g:6466:4: ( ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) ) )
        // InternalSCTX.g:6466:4: ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) )
        {
        // InternalSCTX.g:6466:4: ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) )
        // InternalSCTX.g:6467:5: ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) )
        {
        // InternalSCTX.g:6467:5: ( (lv_reference_3_0= ruleValuedObjectReference ) )
        // InternalSCTX.g:6468:6: (lv_reference_3_0= ruleValuedObjectReference )
        {
        // InternalSCTX.g:6468:6: (lv_reference_3_0= ruleValuedObjectReference )
        // InternalSCTX.g:6469:7: lv_reference_3_0= ruleValuedObjectReference
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_1_0_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_131);
        lv_reference_3_0=ruleValuedObjectReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCTX.g:6486:5: ( (lv_operator_4_0= ruleAssignOperator ) )
        // InternalSCTX.g:6487:6: (lv_operator_4_0= ruleAssignOperator )
        {
        // InternalSCTX.g:6487:6: (lv_operator_4_0= ruleAssignOperator )
        // InternalSCTX.g:6488:7: lv_operator_4_0= ruleAssignOperator
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_1_1_1_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_30);
        lv_operator_4_0=ruleAssignOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCTX.g:6505:5: ( (lv_expression_5_0= ruleExpression ) )
        // InternalSCTX.g:6506:6: (lv_expression_5_0= ruleExpression )
        {
        // InternalSCTX.g:6506:6: (lv_expression_5_0= ruleExpression )
        // InternalSCTX.g:6507:7: lv_expression_5_0= ruleExpression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getExpressionExpressionParserRuleCall_1_1_2_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_expression_5_0=ruleExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred238_InternalSCTX

    // $ANTLR start synpred239_InternalSCTX
    public final void synpred239_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_5_0 = null;


        // InternalSCTX.g:6601:4: ( (lv_declarations_5_0= ruleDeclaration ) )
        // InternalSCTX.g:6601:4: (lv_declarations_5_0= ruleDeclaration )
        {
        // InternalSCTX.g:6601:4: (lv_declarations_5_0= ruleDeclaration )
        // InternalSCTX.g:6602:5: lv_declarations_5_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getWhileLoopAccess().getDeclarationsDeclarationParserRuleCall_5_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_5_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred239_InternalSCTX

    // $ANTLR start synpred246_InternalSCTX
    public final void synpred246_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_annotations_1_0 = null;


        // InternalSCTX.g:6805:4: ( (lv_annotations_1_0= ruleAnnotation ) )
        // InternalSCTX.g:6805:4: (lv_annotations_1_0= ruleAnnotation )
        {
        // InternalSCTX.g:6805:4: (lv_annotations_1_0= ruleAnnotation )
        // InternalSCTX.g:6806:5: lv_annotations_1_0= ruleAnnotation
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getAnnotationsAnnotationParserRuleCall_1_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_annotations_1_0=ruleAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred246_InternalSCTX

    // $ANTLR start synpred255_InternalSCTX
    public final void synpred255_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_16_0 = null;


        // InternalSCTX.g:6997:6: ( (lv_declarations_16_0= ruleDeclaration ) )
        // InternalSCTX.g:6997:6: (lv_declarations_16_0= ruleDeclaration )
        {
        // InternalSCTX.g:6997:6: (lv_declarations_16_0= ruleDeclaration )
        // InternalSCTX.g:6998:7: lv_declarations_16_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getMethodDeclarationAccess().getDeclarationsDeclarationParserRuleCall_7_1_2_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_16_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred255_InternalSCTX

    // $ANTLR start synpred258_InternalSCTX
    public final void synpred258_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_annotations_1_0 = null;


        // InternalSCTX.g:7089:4: ( (lv_annotations_1_0= ruleAnnotation ) )
        // InternalSCTX.g:7089:4: (lv_annotations_1_0= ruleAnnotation )
        {
        // InternalSCTX.g:7089:4: (lv_annotations_1_0= ruleAnnotation )
        // InternalSCTX.g:7090:5: lv_annotations_1_0= ruleAnnotation
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_1_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_annotations_1_0=ruleAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred258_InternalSCTX

    // $ANTLR start synpred266_InternalSCTX
    public final void synpred266_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_15_0 = null;


        // InternalSCTX.g:7275:5: ( (lv_declarations_15_0= ruleDeclaration ) )
        // InternalSCTX.g:7275:5: (lv_declarations_15_0= ruleDeclaration )
        {
        // InternalSCTX.g:7275:5: (lv_declarations_15_0= ruleDeclaration )
        // InternalSCTX.g:7276:6: lv_declarations_15_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getDeclarationsDeclarationParserRuleCall_7_2_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_15_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred266_InternalSCTX

    // $ANTLR start synpred269_InternalSCTX
    public final void synpred269_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_1_0 = null;


        // InternalSCTX.g:7347:4: ( (lv_declarations_1_0= ruleDeclaration ) )
        // InternalSCTX.g:7347:4: (lv_declarations_1_0= ruleDeclaration )
        {
        // InternalSCTX.g:7347:4: (lv_declarations_1_0= ruleDeclaration )
        // InternalSCTX.g:7348:5: lv_declarations_1_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getRootScopeAccess().getDeclarationsDeclarationParserRuleCall_1_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_1_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred269_InternalSCTX

    // $ANTLR start synpred273_InternalSCTX
    public final void synpred273_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_3_0 = null;


        // InternalSCTX.g:7461:4: ( (lv_declarations_3_0= ruleDeclaration ) )
        // InternalSCTX.g:7461:4: (lv_declarations_3_0= ruleDeclaration )
        {
        // InternalSCTX.g:7461:4: (lv_declarations_3_0= ruleDeclaration )
        // InternalSCTX.g:7462:5: lv_declarations_3_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getScopeAccess().getDeclarationsDeclarationParserRuleCall_3_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_3_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred273_InternalSCTX

    // $ANTLR start synpred276_InternalSCTX
    public final void synpred276_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_expression_0_0 = null;


        // InternalSCTX.g:7546:3: ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) )
        // InternalSCTX.g:7546:3: ( (lv_expression_0_0= ruleAnnotatedExpression ) )
        {
        // InternalSCTX.g:7546:3: ( (lv_expression_0_0= ruleAnnotatedExpression ) )
        // InternalSCTX.g:7547:4: (lv_expression_0_0= ruleAnnotatedExpression )
        {
        // InternalSCTX.g:7547:4: (lv_expression_0_0= ruleAnnotatedExpression )
        // InternalSCTX.g:7548:5: lv_expression_0_0= ruleAnnotatedExpression
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getTestEntityAccess().getExpressionAnnotatedExpressionParserRuleCall_0_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_expression_0_0=ruleAnnotatedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred276_InternalSCTX

    // $ANTLR start synpred278_InternalSCTX
    public final void synpred278_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_VariableDeclaration_0 = null;


        // InternalSCTX.g:7665:3: (this_VariableDeclaration_0= ruleVariableDeclaration )
        // InternalSCTX.g:7665:3: this_VariableDeclaration_0= ruleVariableDeclaration
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_VariableDeclaration_0=ruleVariableDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred278_InternalSCTX

    // $ANTLR start synpred279_InternalSCTX
    public final void synpred279_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ReferenceDeclaration_1 = null;


        // InternalSCTX.g:7677:3: (this_ReferenceDeclaration_1= ruleReferenceDeclaration )
        // InternalSCTX.g:7677:3: this_ReferenceDeclaration_1= ruleReferenceDeclaration
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ReferenceDeclaration_1=ruleReferenceDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred279_InternalSCTX

    // $ANTLR start synpred280_InternalSCTX
    public final void synpred280_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ScheduleDeclaration_2 = null;


        // InternalSCTX.g:7689:3: (this_ScheduleDeclaration_2= ruleScheduleDeclaration )
        // InternalSCTX.g:7689:3: this_ScheduleDeclaration_2= ruleScheduleDeclaration
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ScheduleDeclaration_2=ruleScheduleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred280_InternalSCTX

    // $ANTLR start synpred281_InternalSCTX
    public final void synpred281_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_VariableDeclarationWOSemicolon_0 = null;


        // InternalSCTX.g:7731:3: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon )
        // InternalSCTX.g:7731:3: this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_VariableDeclarationWOSemicolon_0=ruleVariableDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred281_InternalSCTX

    // $ANTLR start synpred282_InternalSCTX
    public final void synpred282_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ReferenceDeclarationWOSemicolon_1 = null;


        // InternalSCTX.g:7743:3: (this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon )
        // InternalSCTX.g:7743:3: this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ReferenceDeclarationWOSemicolon_1=ruleReferenceDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred282_InternalSCTX

    // $ANTLR start synpred283_InternalSCTX
    public final void synpred283_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ScheduleDeclarationWOSemicolon_2 = null;


        // InternalSCTX.g:7755:3: (this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon )
        // InternalSCTX.g:7755:3: this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ScheduleDeclarationWOSemicolon_2=ruleScheduleDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred283_InternalSCTX

    // $ANTLR start synpred306_InternalSCTX
    public final void synpred306_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_13=null;
        EObject lv_valuedObjects_14_0 = null;


        // InternalSCTX.g:8303:4: (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )
        // InternalSCTX.g:8303:4: otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) )
        {
        otherlv_13=(Token)match(input,20,FollowSets000.FOLLOW_107); if (state.failed) return ;
        // InternalSCTX.g:8307:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) )
        // InternalSCTX.g:8308:5: (lv_valuedObjects_14_0= ruleValuedObject )
        {
        // InternalSCTX.g:8308:5: (lv_valuedObjects_14_0= ruleValuedObject )
        // InternalSCTX.g:8309:6: lv_valuedObjects_14_0= ruleValuedObject
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_9_1_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_valuedObjects_14_0=ruleValuedObject();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred306_InternalSCTX

    // $ANTLR start synpred324_InternalSCTX
    public final void synpred324_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Declaration_0 = null;


        // InternalSCTX.g:8720:3: (this_Declaration_0= ruleDeclaration )
        // InternalSCTX.g:8720:3: this_Declaration_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Declaration_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred324_InternalSCTX

    // $ANTLR start synpred325_InternalSCTX
    public final void synpred325_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_DeclarationWOSemicolon_0 = null;


        // InternalSCTX.g:8762:3: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon )
        // InternalSCTX.g:8762:3: this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_DeclarationWOSemicolon_0=ruleDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred325_InternalSCTX

    // $ANTLR start synpred362_InternalSCTX
    public final void synpred362_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Assignment_0 = null;


        // InternalSCTX.g:9969:3: (this_Assignment_0= ruleAssignment )
        // InternalSCTX.g:9969:3: this_Assignment_0= ruleAssignment
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Assignment_0=ruleAssignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred362_InternalSCTX

    // $ANTLR start synpred363_InternalSCTX
    public final void synpred363_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_PostfixEffect_1 = null;


        // InternalSCTX.g:9981:3: (this_PostfixEffect_1= rulePostfixEffect )
        // InternalSCTX.g:9981:3: this_PostfixEffect_1= rulePostfixEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_PostfixEffect_1=rulePostfixEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred363_InternalSCTX

    // $ANTLR start synpred364_InternalSCTX
    public final void synpred364_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ValuedEmission_2 = null;


        // InternalSCTX.g:9993:3: (this_ValuedEmission_2= ruleValuedEmission )
        // InternalSCTX.g:9993:3: this_ValuedEmission_2= ruleValuedEmission
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedEmission_2=ruleValuedEmission();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred364_InternalSCTX

    // $ANTLR start synpred365_InternalSCTX
    public final void synpred365_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_HostcodeEffect_3 = null;


        // InternalSCTX.g:10005:3: (this_HostcodeEffect_3= ruleHostcodeEffect )
        // InternalSCTX.g:10005:3: this_HostcodeEffect_3= ruleHostcodeEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_HostcodeEffect_3=ruleHostcodeEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred365_InternalSCTX

    // $ANTLR start synpred366_InternalSCTX
    public final void synpred366_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ReferenceCallEffect_4 = null;


        // InternalSCTX.g:10017:3: (this_ReferenceCallEffect_4= ruleReferenceCallEffect )
        // InternalSCTX.g:10017:3: this_ReferenceCallEffect_4= ruleReferenceCallEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ReferenceCallEffect_4=ruleReferenceCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred366_InternalSCTX

    // $ANTLR start synpred367_InternalSCTX
    public final void synpred367_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_FunctionCallEffect_5 = null;


        // InternalSCTX.g:10029:3: (this_FunctionCallEffect_5= ruleFunctionCallEffect )
        // InternalSCTX.g:10029:3: this_FunctionCallEffect_5= ruleFunctionCallEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_FunctionCallEffect_5=ruleFunctionCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred367_InternalSCTX

    // $ANTLR start synpred368_InternalSCTX
    public final void synpred368_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_PrintCallEffect_6 = null;


        // InternalSCTX.g:10041:3: (this_PrintCallEffect_6= rulePrintCallEffect )
        // InternalSCTX.g:10041:3: this_PrintCallEffect_6= rulePrintCallEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_PrintCallEffect_6=rulePrintCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred368_InternalSCTX

    // $ANTLR start synpred369_InternalSCTX
    public final void synpred369_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_RandomizeCallEffect_7 = null;


        // InternalSCTX.g:10053:3: (this_RandomizeCallEffect_7= ruleRandomizeCallEffect )
        // InternalSCTX.g:10053:3: this_RandomizeCallEffect_7= ruleRandomizeCallEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_RandomizeCallEffect_7=ruleRandomizeCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred369_InternalSCTX

    // $ANTLR start synpred400_InternalSCTX
    public final void synpred400_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_BoolExpression_0 = null;


        // InternalSCTX.g:11117:3: (this_BoolExpression_0= ruleBoolExpression )
        // InternalSCTX.g:11117:3: this_BoolExpression_0= ruleBoolExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_BoolExpression_0=ruleBoolExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred400_InternalSCTX

    // $ANTLR start synpred412_InternalSCTX
    public final void synpred412_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ValuedExpression_0 = null;


        // InternalSCTX.g:11802:3: (this_ValuedExpression_0= ruleValuedExpression )
        // InternalSCTX.g:11802:3: this_ValuedExpression_0= ruleValuedExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedExpression_0=ruleValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred412_InternalSCTX

    // $ANTLR start synpred415_InternalSCTX
    public final void synpred415_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_subExpressions_5_0 = null;


        // InternalSCTX.g:12096:6: (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )
        // InternalSCTX.g:12096:6: otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) )
        {
        otherlv_4=(Token)match(input,90,FollowSets000.FOLLOW_96); if (state.failed) return ;
        // InternalSCTX.g:12100:6: ( (lv_subExpressions_5_0= ruleSumExpression ) )
        // InternalSCTX.g:12101:7: (lv_subExpressions_5_0= ruleSumExpression )
        {
        // InternalSCTX.g:12101:7: (lv_subExpressions_5_0= ruleSumExpression )
        // InternalSCTX.g:12102:8: lv_subExpressions_5_0= ruleSumExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_0_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_5_0=ruleSumExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred415_InternalSCTX

    // $ANTLR start synpred417_InternalSCTX
    public final void synpred417_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        EObject lv_subExpressions_10_0 = null;


        // InternalSCTX.g:12172:6: (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )
        // InternalSCTX.g:12172:6: otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) )
        {
        otherlv_9=(Token)match(input,91,FollowSets000.FOLLOW_96); if (state.failed) return ;
        // InternalSCTX.g:12176:6: ( (lv_subExpressions_10_0= ruleSumExpression ) )
        // InternalSCTX.g:12177:7: (lv_subExpressions_10_0= ruleSumExpression )
        {
        // InternalSCTX.g:12177:7: (lv_subExpressions_10_0= ruleSumExpression )
        // InternalSCTX.g:12178:8: lv_subExpressions_10_0= ruleSumExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_1_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_10_0=ruleSumExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred417_InternalSCTX

    // $ANTLR start synpred419_InternalSCTX
    public final void synpred419_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        EObject lv_subExpressions_15_0 = null;


        // InternalSCTX.g:12248:6: (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )
        // InternalSCTX.g:12248:6: otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) )
        {
        otherlv_14=(Token)match(input,92,FollowSets000.FOLLOW_96); if (state.failed) return ;
        // InternalSCTX.g:12252:6: ( (lv_subExpressions_15_0= ruleSumExpression ) )
        // InternalSCTX.g:12253:7: (lv_subExpressions_15_0= ruleSumExpression )
        {
        // InternalSCTX.g:12253:7: (lv_subExpressions_15_0= ruleSumExpression )
        // InternalSCTX.g:12254:8: lv_subExpressions_15_0= ruleSumExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_2_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_15_0=ruleSumExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred419_InternalSCTX

    // $ANTLR start synpred425_InternalSCTX
    public final void synpred425_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_subExpressions_5_0 = null;


        // InternalSCTX.g:12569:6: (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )
        // InternalSCTX.g:12569:6: otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) )
        {
        otherlv_4=(Token)match(input,93,FollowSets000.FOLLOW_96); if (state.failed) return ;
        // InternalSCTX.g:12573:6: ( (lv_subExpressions_5_0= ruleProductExpression ) )
        // InternalSCTX.g:12574:7: (lv_subExpressions_5_0= ruleProductExpression )
        {
        // InternalSCTX.g:12574:7: (lv_subExpressions_5_0= ruleProductExpression )
        // InternalSCTX.g:12575:8: lv_subExpressions_5_0= ruleProductExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_0_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_5_0=ruleProductExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred425_InternalSCTX

    // $ANTLR start synpred427_InternalSCTX
    public final void synpred427_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        EObject lv_subExpressions_10_0 = null;


        // InternalSCTX.g:12645:6: (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )
        // InternalSCTX.g:12645:6: otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) )
        {
        otherlv_9=(Token)match(input,94,FollowSets000.FOLLOW_96); if (state.failed) return ;
        // InternalSCTX.g:12649:6: ( (lv_subExpressions_10_0= ruleProductExpression ) )
        // InternalSCTX.g:12650:7: (lv_subExpressions_10_0= ruleProductExpression )
        {
        // InternalSCTX.g:12650:7: (lv_subExpressions_10_0= ruleProductExpression )
        // InternalSCTX.g:12651:8: lv_subExpressions_10_0= ruleProductExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_1_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_10_0=ruleProductExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred427_InternalSCTX

    // $ANTLR start synpred429_InternalSCTX
    public final void synpred429_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_subExpressions_5_0 = null;


        // InternalSCTX.g:12752:6: (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )
        // InternalSCTX.g:12752:6: otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) )
        {
        otherlv_4=(Token)match(input,95,FollowSets000.FOLLOW_96); if (state.failed) return ;
        // InternalSCTX.g:12756:6: ( (lv_subExpressions_5_0= ruleNegExpression ) )
        // InternalSCTX.g:12757:7: (lv_subExpressions_5_0= ruleNegExpression )
        {
        // InternalSCTX.g:12757:7: (lv_subExpressions_5_0= ruleNegExpression )
        // InternalSCTX.g:12758:8: lv_subExpressions_5_0= ruleNegExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_0_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_5_0=ruleNegExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred429_InternalSCTX

    // $ANTLR start synpred431_InternalSCTX
    public final void synpred431_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        EObject lv_subExpressions_10_0 = null;


        // InternalSCTX.g:12828:6: (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )
        // InternalSCTX.g:12828:6: otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) )
        {
        otherlv_9=(Token)match(input,96,FollowSets000.FOLLOW_96); if (state.failed) return ;
        // InternalSCTX.g:12832:6: ( (lv_subExpressions_10_0= ruleNegExpression ) )
        // InternalSCTX.g:12833:7: (lv_subExpressions_10_0= ruleNegExpression )
        {
        // InternalSCTX.g:12833:7: (lv_subExpressions_10_0= ruleNegExpression )
        // InternalSCTX.g:12834:8: lv_subExpressions_10_0= ruleNegExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_1_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_10_0=ruleNegExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred431_InternalSCTX

    // $ANTLR start synpred433_InternalSCTX
    public final void synpred433_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        EObject lv_subExpressions_15_0 = null;


        // InternalSCTX.g:12904:6: (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )
        // InternalSCTX.g:12904:6: otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) )
        {
        otherlv_14=(Token)match(input,97,FollowSets000.FOLLOW_96); if (state.failed) return ;
        // InternalSCTX.g:12908:6: ( (lv_subExpressions_15_0= ruleNegExpression ) )
        // InternalSCTX.g:12909:7: (lv_subExpressions_15_0= ruleNegExpression )
        {
        // InternalSCTX.g:12909:7: (lv_subExpressions_15_0= ruleNegExpression )
        // InternalSCTX.g:12910:8: lv_subExpressions_15_0= ruleNegExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_2_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_15_0=ruleNegExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred433_InternalSCTX

    // $ANTLR start synpred436_InternalSCTX
    public final void synpred436_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_subExpressions_5_0 = null;


        // InternalSCTX.g:13099:5: (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )
        // InternalSCTX.g:13099:5: otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
        {
        otherlv_4=(Token)match(input,48,FollowSets000.FOLLOW_137); if (state.failed) return ;
        // InternalSCTX.g:13103:5: ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
        // InternalSCTX.g:13104:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
        {
        // InternalSCTX.g:13104:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
        // InternalSCTX.g:13105:7: lv_subExpressions_5_0= ruleAtomicValuedExpression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_4_1_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_5_0=ruleAtomicValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred436_InternalSCTX

    // $ANTLR start synpred437_InternalSCTX
    public final void synpred437_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_subExpressions_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


        // InternalSCTX.g:13030:3: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? ) )
        // InternalSCTX.g:13030:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? )
        {
        // InternalSCTX.g:13030:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? )
        // InternalSCTX.g:13031:4: () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )?
        {
        // InternalSCTX.g:13031:4: ()
        // InternalSCTX.g:13032:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalSCTX.g:13041:4: ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) )
        // InternalSCTX.g:13042:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
        {
        // InternalSCTX.g:13042:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
        // InternalSCTX.g:13043:6: lv_subExpressions_1_0= ruleAtomicValuedExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_1_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_189);
        lv_subExpressions_1_0=ruleAtomicValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCTX.g:13060:4: ( (lv_operator_2_0= ruleConditionalOperator ) )
        // InternalSCTX.g:13061:5: (lv_operator_2_0= ruleConditionalOperator )
        {
        // InternalSCTX.g:13061:5: (lv_operator_2_0= ruleConditionalOperator )
        // InternalSCTX.g:13062:6: lv_operator_2_0= ruleConditionalOperator
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTernaryOperationAccess().getOperatorConditionalOperatorEnumRuleCall_0_2_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_137);
        lv_operator_2_0=ruleConditionalOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCTX.g:13079:4: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
        // InternalSCTX.g:13080:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
        {
        // InternalSCTX.g:13080:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
        // InternalSCTX.g:13081:6: lv_subExpressions_3_0= ruleAtomicValuedExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_3_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_157);
        lv_subExpressions_3_0=ruleAtomicValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCTX.g:13098:4: (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )?
        int alt570=2;
        int LA570_0 = input.LA(1);

        if ( (LA570_0==48) ) {
            alt570=1;
        }
        switch (alt570) {
            case 1 :
                // InternalSCTX.g:13099:5: otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
                {
                otherlv_4=(Token)match(input,48,FollowSets000.FOLLOW_137); if (state.failed) return ;
                // InternalSCTX.g:13103:5: ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
                // InternalSCTX.g:13104:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                {
                // InternalSCTX.g:13104:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                // InternalSCTX.g:13105:7: lv_subExpressions_5_0= ruleAtomicValuedExpression
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_4_1_0());
                  						
                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_subExpressions_5_0=ruleAtomicValuedExpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred437_InternalSCTX

    // $ANTLR start synpred438_InternalSCTX
    public final void synpred438_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_subExpressions_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;


        // InternalSCTX.g:13155:3: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) )
        // InternalSCTX.g:13155:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
        {
        // InternalSCTX.g:13155:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
        // InternalSCTX.g:13156:4: () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
        {
        // InternalSCTX.g:13156:4: ()
        // InternalSCTX.g:13157:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalSCTX.g:13166:4: ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) )
        // InternalSCTX.g:13167:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
        {
        // InternalSCTX.g:13167:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
        // InternalSCTX.g:13168:6: lv_subExpressions_1_0= ruleAtomicValuedExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getInitExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_1_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_190);
        lv_subExpressions_1_0=ruleAtomicValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCTX.g:13185:4: ( (lv_operator_2_0= ruleInitOperator ) )
        // InternalSCTX.g:13186:5: (lv_operator_2_0= ruleInitOperator )
        {
        // InternalSCTX.g:13186:5: (lv_operator_2_0= ruleInitOperator )
        // InternalSCTX.g:13187:6: lv_operator_2_0= ruleInitOperator
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getInitExpressionAccess().getOperatorInitOperatorEnumRuleCall_0_2_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_137);
        lv_operator_2_0=ruleInitOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCTX.g:13204:4: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
        // InternalSCTX.g:13205:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
        {
        // InternalSCTX.g:13205:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
        // InternalSCTX.g:13206:6: lv_subExpressions_3_0= ruleAtomicValuedExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getInitExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_3_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_3_0=ruleAtomicValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred438_InternalSCTX

    // $ANTLR start synpred441_InternalSCTX
    public final void synpred441_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ReferenceCall_4 = null;


        // InternalSCTX.g:13289:3: (this_ReferenceCall_4= ruleReferenceCall )
        // InternalSCTX.g:13289:3: this_ReferenceCall_4= ruleReferenceCall
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ReferenceCall_4=ruleReferenceCall();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred441_InternalSCTX

    // $ANTLR start synpred445_InternalSCTX
    public final void synpred445_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ValuedObjectTestExpression_8 = null;


        // InternalSCTX.g:13337:3: (this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression )
        // InternalSCTX.g:13337:3: this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedObjectTestExpression_8=ruleValuedObjectTestExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred445_InternalSCTX

    // $ANTLR start synpred450_InternalSCTX
    public final void synpred450_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject this_ValuedExpression_5 = null;


        // InternalSCTX.g:13427:3: ( (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) )
        // InternalSCTX.g:13427:3: (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' )
        {
        // InternalSCTX.g:13427:3: (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' )
        // InternalSCTX.g:13428:4: otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')'
        {
        otherlv_4=(Token)match(input,31,FollowSets000.FOLLOW_96); if (state.failed) return ;
        pushFollow(FollowSets000.FOLLOW_32);
        this_ValuedExpression_5=ruleValuedExpression();

        state._fsp--;
        if (state.failed) return ;
        otherlv_6=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred450_InternalSCTX

    // $ANTLR start synpred469_InternalSCTX
    public final void synpred469_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_BoolExpression_0 = null;


        // InternalSCTX.g:14460:3: (this_BoolExpression_0= ruleBoolExpression )
        // InternalSCTX.g:14460:3: this_BoolExpression_0= ruleBoolExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_BoolExpression_0=ruleBoolExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred469_InternalSCTX

    // $ANTLR start synpred470_InternalSCTX
    public final void synpred470_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ValuedExpression_1 = null;


        // InternalSCTX.g:14472:3: (this_ValuedExpression_1= ruleValuedExpression )
        // InternalSCTX.g:14472:3: this_ValuedExpression_1= ruleValuedExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedExpression_1=ruleValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred470_InternalSCTX

    // $ANTLR start synpred482_InternalSCTX
    public final void synpred482_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Annotation_0 = null;


        // InternalSCTX.g:15102:3: (this_Annotation_0= superAnnotation )
        // InternalSCTX.g:15102:3: this_Annotation_0= superAnnotation
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Annotation_0=superAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred482_InternalSCTX

    // $ANTLR start synpred485_InternalSCTX
    public final void synpred485_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_KeyStringValueAnnotation_1 = null;


        // InternalSCTX.g:15198:3: (this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation )
        // InternalSCTX.g:15198:3: this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_KeyStringValueAnnotation_1=ruleKeyStringValueAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred485_InternalSCTX

    // $ANTLR start synpred486_InternalSCTX
    public final void synpred486_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_TypedKeyStringValueAnnotation_2 = null;


        // InternalSCTX.g:15210:3: (this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation )
        // InternalSCTX.g:15210:3: this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_TypedKeyStringValueAnnotation_2=ruleTypedKeyStringValueAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred486_InternalSCTX

    // $ANTLR start synpred511_InternalSCTX
    public final void synpred511_InternalSCTX_fragment() throws RecognitionException {   
        Token kw=null;
        Token this_ID_3=null;

        // InternalSCTX.g:16470:4: ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )
        // InternalSCTX.g:16470:4: (kw= '.' | kw= '-' ) this_ID_3= RULE_ID
        {
        // InternalSCTX.g:16470:4: (kw= '.' | kw= '-' )
        int alt578=2;
        int LA578_0 = input.LA(1);

        if ( (LA578_0==83) ) {
            alt578=1;
        }
        else if ( (LA578_0==94) ) {
            alt578=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 578, 0, input);

            throw nvae;
        }
        switch (alt578) {
            case 1 :
                // InternalSCTX.g:16471:5: kw= '.'
                {
                kw=(Token)match(input,83,FollowSets000.FOLLOW_9); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalSCTX.g:16477:5: kw= '-'
                {
                kw=(Token)match(input,94,FollowSets000.FOLLOW_9); if (state.failed) return ;

                }
                break;

        }

        this_ID_3=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred511_InternalSCTX

    // Delegated rules

    public final boolean synpred70_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred166_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred166_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred72_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred72_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred400_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred400_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred280_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred280_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred229_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred229_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred246_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred246_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred282_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred282_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred324_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred324_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred429_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred429_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred437_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred437_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred147_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred147_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred279_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred279_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred149_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred149_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred485_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred485_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred221_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred221_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred143_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred143_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred431_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred431_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred450_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred450_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred511_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred511_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred145_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred145_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred433_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred433_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred181_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred181_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred223_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred223_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred255_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred255_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred412_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred412_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred258_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred258_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred108_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred108_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred141_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred141_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred369_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred369_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred140_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred140_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred142_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred142_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred368_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred368_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred90_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred90_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred195_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred195_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred363_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred363_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred362_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred362_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred91_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred91_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred365_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred365_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred93_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred93_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred366_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred366_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred427_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred427_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred92_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred92_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred367_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred367_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred94_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred94_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred215_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred215_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred425_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred425_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred269_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred269_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred364_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred364_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred190_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred190_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred470_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred470_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred325_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred325_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred212_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred212_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred266_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred266_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred210_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred210_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred281_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred281_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred169_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred169_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred438_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred438_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred306_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred306_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred228_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred228_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred226_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred226_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred436_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred436_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred278_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred278_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred144_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred144_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred276_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred276_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred87_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred87_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred415_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred415_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred486_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred486_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred469_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred469_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred176_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred176_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred121_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred121_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred239_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred239_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred417_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred417_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred238_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred238_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred273_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred273_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred419_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred419_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred236_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred236_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred445_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred445_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred28_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred237_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred237_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred482_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred482_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred231_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred231_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred441_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred441_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred283_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred283_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred75_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred75_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred139_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred139_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred138_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred138_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred77_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred77_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA7 dfa7 = new DFA7(this);
    protected DFA8 dfa8 = new DFA8(this);
    protected DFA10 dfa10 = new DFA10(this);
    protected DFA23 dfa23 = new DFA23(this);
    protected DFA24 dfa24 = new DFA24(this);
    protected DFA26 dfa26 = new DFA26(this);
    protected DFA28 dfa28 = new DFA28(this);
    protected DFA40 dfa40 = new DFA40(this);
    protected DFA41 dfa41 = new DFA41(this);
    protected DFA65 dfa65 = new DFA65(this);
    protected DFA66 dfa66 = new DFA66(this);
    protected DFA68 dfa68 = new DFA68(this);
    protected DFA69 dfa69 = new DFA69(this);
    protected DFA70 dfa70 = new DFA70(this);
    protected DFA71 dfa71 = new DFA71(this);
    protected DFA83 dfa83 = new DFA83(this);
    protected DFA85 dfa85 = new DFA85(this);
    protected DFA86 dfa86 = new DFA86(this);
    protected DFA90 dfa90 = new DFA90(this);
    protected DFA97 dfa97 = new DFA97(this);
    protected DFA110 dfa110 = new DFA110(this);
    protected DFA127 dfa127 = new DFA127(this);
    protected DFA128 dfa128 = new DFA128(this);
    protected DFA131 dfa131 = new DFA131(this);
    protected DFA148 dfa148 = new DFA148(this);
    protected DFA151 dfa151 = new DFA151(this);
    protected DFA156 dfa156 = new DFA156(this);
    protected DFA163 dfa163 = new DFA163(this);
    protected DFA170 dfa170 = new DFA170(this);
    protected DFA172 dfa172 = new DFA172(this);
    protected DFA177 dfa177 = new DFA177(this);
    protected DFA183 dfa183 = new DFA183(this);
    protected DFA187 dfa187 = new DFA187(this);
    protected DFA192 dfa192 = new DFA192(this);
    protected DFA194 dfa194 = new DFA194(this);
    protected DFA196 dfa196 = new DFA196(this);
    protected DFA205 dfa205 = new DFA205(this);
    protected DFA202 dfa202 = new DFA202(this);
    protected DFA207 dfa207 = new DFA207(this);
    protected DFA209 dfa209 = new DFA209(this);
    protected DFA211 dfa211 = new DFA211(this);
    protected DFA217 dfa217 = new DFA217(this);
    protected DFA218 dfa218 = new DFA218(this);
    protected DFA233 dfa233 = new DFA233(this);
    protected DFA243 dfa243 = new DFA243(this);
    protected DFA242 dfa242 = new DFA242(this);
    protected DFA245 dfa245 = new DFA245(this);
    protected DFA248 dfa248 = new DFA248(this);
    protected DFA252 dfa252 = new DFA252(this);
    protected DFA255 dfa255 = new DFA255(this);
    protected DFA257 dfa257 = new DFA257(this);
    protected DFA258 dfa258 = new DFA258(this);
    protected DFA279 dfa279 = new DFA279(this);
    protected DFA297 dfa297 = new DFA297(this);
    protected DFA298 dfa298 = new DFA298(this);
    protected DFA335 dfa335 = new DFA335(this);
    protected DFA337 dfa337 = new DFA337(this);
    protected DFA340 dfa340 = new DFA340(this);
    protected DFA343 dfa343 = new DFA343(this);
    protected DFA346 dfa346 = new DFA346(this);
    protected DFA354 dfa354 = new DFA354(this);
    protected DFA361 dfa361 = new DFA361(this);
    protected DFA366 dfa366 = new DFA366(this);
    protected DFA378 dfa378 = new DFA378(this);
    protected DFA381 dfa381 = new DFA381(this);
    protected DFA382 dfa382 = new DFA382(this);
    protected DFA383 dfa383 = new DFA383(this);
    protected DFA389 dfa389 = new DFA389(this);
    protected DFA390 dfa390 = new DFA390(this);
    protected DFA392 dfa392 = new DFA392(this);
    protected DFA393 dfa393 = new DFA393(this);
    protected DFA394 dfa394 = new DFA394(this);
    protected DFA398 dfa398 = new DFA398(this);
    protected DFA397 dfa397 = new DFA397(this);
    protected DFA399 dfa399 = new DFA399(this);
    protected DFA400 dfa400 = new DFA400(this);
    protected DFA401 dfa401 = new DFA401(this);
    protected DFA420 dfa420 = new DFA420(this);
    protected DFA427 dfa427 = new DFA427(this);
    protected DFA428 dfa428 = new DFA428(this);
    protected DFA429 dfa429 = new DFA429(this);
    protected DFA431 dfa431 = new DFA431(this);
    protected DFA432 dfa432 = new DFA432(this);
    protected DFA433 dfa433 = new DFA433(this);
    protected DFA434 dfa434 = new DFA434(this);
    protected DFA446 dfa446 = new DFA446(this);
    protected DFA528 dfa528 = new DFA528(this);
    static final String dfa_1s = "\56\uffff";
    static final String dfa_2s = "\1\12\13\uffff\2\0\40\uffff";
    static final String dfa_3s = "\1\u009a\13\uffff\2\0\40\uffff";
    static final String dfa_4s = "\1\uffff\1\2\26\uffff\1\1\25\uffff";
    static final String dfa_5s = "\14\uffff\1\0\1\1\40\uffff}>";
    static final String[] dfa_6s = {
            "\1\14\13\uffff\6\1\1\uffff\1\30\17\uffff\2\1\2\uffff\1\1\2\uffff\1\1\1\uffff\7\1\6\30\2\uffff\1\30\10\uffff\3\30\26\uffff\1\15\2\uffff\4\1\3\uffff\6\30\34\uffff\2\30\3\uffff\3\30",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA7 extends DFA {

        public DFA7(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 7;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "()* loopback of 279:3: ( (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA7_12 = input.LA(1);

                         
                        int index7_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index7_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA7_13 = input.LA(1);

                         
                        int index7_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index7_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 7, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_7s = "\65\uffff";
    static final String dfa_8s = "\2\12\1\5\2\uffff\1\4\2\5\1\6\3\12\1\5\3\4\2\5\1\6\1\45\5\12\2\5\1\6\1\4\2\5\1\6\2\45\5\12\1\4\2\5\1\6\5\12\2\5\1\6\2\12";
    static final String dfa_9s = "\2\155\1\5\2\uffff\1\155\1\5\1\7\1\6\3\155\1\5\2\155\1\136\2\5\1\6\1\146\5\155\2\5\1\6\1\136\2\5\1\6\1\146\1\45\5\155\1\136\2\5\1\6\5\155\2\5\1\6\2\155";
    static final String dfa_10s = "\3\uffff\1\2\1\1\60\uffff";
    static final String dfa_11s = "\65\uffff}>";
    static final String[] dfa_12s = {
            "\1\1\13\uffff\6\3\21\uffff\2\3\2\uffff\1\3\2\uffff\1\4\1\uffff\7\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\14\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\5",
            "",
            "",
            "\1\11\1\12\2\3\1\uffff\1\13\1\1\12\uffff\1\3\1\uffff\5\3\10\uffff\1\14\10\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\6\12\uffff\1\7\7\uffff\1\10\1\2\2\uffff\4\4",
            "\1\15",
            "\1\15\2\3",
            "\1\16",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\20\12\uffff\1\21\7\uffff\1\22\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\23",
            "\1\11\1\12\2\3\1\uffff\1\13\1\1\12\uffff\1\3\1\uffff\5\3\10\uffff\1\14\10\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\6\12\uffff\1\7\7\uffff\1\10\1\2\2\uffff\4\4",
            "\1\11\1\12\2\3\1\uffff\1\13\1\1\12\uffff\1\3\1\uffff\5\3\10\uffff\1\14\10\uffff\2\3\2\uffff\1\3\12\uffff\1\4\41\uffff\1\3\10\uffff\1\2\2\uffff\4\4",
            "\1\24\1\25\2\3\1\uffff\1\26\124\uffff\1\3",
            "\1\27",
            "\1\27",
            "\1\30",
            "\1\34\55\uffff\1\31\12\uffff\1\32\7\uffff\1\33",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\35\12\uffff\1\36\7\uffff\1\37\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\20\12\uffff\1\21\7\uffff\1\22\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\40",
            "\1\40",
            "\1\41",
            "\1\42\1\43\2\3\1\uffff\1\44\124\uffff\1\3",
            "\1\45",
            "\1\45",
            "\1\46",
            "\1\34\55\uffff\1\31\12\uffff\1\32\7\uffff\1\33",
            "\1\34",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\50\12\uffff\1\51\7\uffff\1\52\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\35\12\uffff\1\36\7\uffff\1\37\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\53\1\54\2\3\1\uffff\1\55\124\uffff\1\3",
            "\1\56",
            "\1\56",
            "\1\57",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\60\12\uffff\1\61\7\uffff\1\62\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\50\12\uffff\1\51\7\uffff\1\52\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\63",
            "\1\63",
            "\1\64",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\60\12\uffff\1\61\7\uffff\1\62\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4"
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA8 extends DFA {

        public DFA8(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 8;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "()* loopback of 298:3: ( (lv_actions_10_0= ruleLocalAction ) )*";
        }
    }
    static final String dfa_13s = "\14\uffff";
    static final String dfa_14s = "\1\12\2\0\1\uffff\1\0\7\uffff";
    static final String dfa_15s = "\1\147\2\0\1\uffff\1\0\7\uffff";
    static final String dfa_16s = "\3\uffff\1\1\4\uffff\1\2\3\uffff";
    static final String dfa_17s = "\1\uffff\1\0\1\1\1\uffff\1\2\7\uffff}>";
    static final String[] dfa_18s = {
            "\1\1\13\uffff\1\10\1\3\1\4\3\3\21\uffff\2\10\2\uffff\1\10\65\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[][] dfa_18 = unpackEncodedStringArray(dfa_18s);

    class DFA10 extends DFA {

        public DFA10(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 10;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_17;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "317:3: ( ( (lv_regions_11_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_12_0= ruleRegion ) )* )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA10_1 = input.LA(1);

                         
                        int index10_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index10_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA10_2 = input.LA(1);

                         
                        int index10_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index10_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA10_4 = input.LA(1);

                         
                        int index10_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index10_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 10, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA23 extends DFA {

        public DFA23(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 23;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "()* loopback of 625:5: ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA23_12 = input.LA(1);

                         
                        int index23_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index23_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA23_13 = input.LA(1);

                         
                        int index23_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index23_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 23, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA24 extends DFA {

        public DFA24(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 24;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "()* loopback of 644:5: ( (lv_actions_20_0= ruleLocalAction ) )*";
        }
    }

    class DFA26 extends DFA {

        public DFA26(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 26;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_17;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "663:5: ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA26_1 = input.LA(1);

                         
                        int index26_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred28_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index26_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA26_2 = input.LA(1);

                         
                        int index26_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred28_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index26_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA26_4 = input.LA(1);

                         
                        int index26_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred28_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index26_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 26, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_19s = "\1\1\64\uffff";
    static final String dfa_20s = "\1\12\1\uffff\1\12\1\5\1\uffff\1\4\2\5\1\6\1\5\3\12\2\4\1\45\1\4\2\5\1\6\2\5\1\6\1\4\5\12\2\45\3\12\2\5\1\6\1\4\2\5\1\6\7\12\2\5\1\6\2\12";
    static final String dfa_21s = "\1\155\1\uffff\1\155\1\5\1\uffff\1\155\1\5\1\7\1\6\1\5\5\155\1\146\1\136\2\5\1\6\2\5\1\6\1\136\5\155\1\146\1\45\3\155\2\5\1\6\1\136\2\5\1\6\7\155\2\5\1\6\2\155";
    static final String dfa_22s = "\1\uffff\1\2\2\uffff\1\1\60\uffff";
    static final String[] dfa_23s = {
            "\1\2\13\uffff\6\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\42\uffff\1\3\6\4",
            "",
            "\1\2\14\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\42\uffff\1\3\6\4",
            "\1\5",
            "",
            "\1\12\1\13\2\1\1\uffff\1\14\1\2\12\uffff\1\1\1\uffff\5\1\10\uffff\1\11\1\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\16\uffff\1\6\12\uffff\1\7\7\uffff\1\10\1\3\6\4",
            "\1\15",
            "\1\15\2\1",
            "\1\16",
            "\1\17",
            "\1\2\11\uffff\1\20\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\42\uffff\1\3\6\4",
            "\1\2\11\uffff\1\20\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\16\uffff\1\21\12\uffff\1\22\7\uffff\1\23\1\3\6\4",
            "\1\2\11\uffff\1\20\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\42\uffff\1\3\6\4",
            "\1\12\1\13\2\1\1\uffff\1\14\1\2\12\uffff\1\1\1\uffff\5\1\10\uffff\1\11\1\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\16\uffff\1\6\12\uffff\1\7\7\uffff\1\10\1\3\6\4",
            "\1\12\1\13\2\1\1\uffff\1\14\1\2\12\uffff\1\1\1\uffff\5\1\10\uffff\1\11\1\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\31\uffff\1\1\10\uffff\1\3\6\4",
            "\1\27\55\uffff\1\24\12\uffff\1\25\7\uffff\1\26",
            "\1\30\1\31\2\1\1\uffff\1\32\124\uffff\1\1",
            "\1\33",
            "\1\33",
            "\1\34",
            "\1\35",
            "\1\35",
            "\1\36",
            "\1\37\1\40\2\1\1\uffff\1\41\124\uffff\1\1",
            "\1\2\11\uffff\1\20\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\42\uffff\1\3\6\4",
            "\1\2\11\uffff\1\20\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\16\uffff\1\42\12\uffff\1\43\7\uffff\1\44\1\3\6\4",
            "\1\2\11\uffff\1\20\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\42\uffff\1\3\6\4",
            "\1\2\11\uffff\1\20\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\16\uffff\1\21\12\uffff\1\22\7\uffff\1\23\1\3\6\4",
            "\1\2\11\uffff\1\20\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\42\uffff\1\3\6\4",
            "\1\27\55\uffff\1\24\12\uffff\1\25\7\uffff\1\26",
            "\1\27",
            "\1\2\11\uffff\1\45\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\42\uffff\1\3\6\4",
            "\1\2\11\uffff\1\45\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\16\uffff\1\46\12\uffff\1\47\7\uffff\1\50\1\3\6\4",
            "\1\2\11\uffff\1\45\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\42\uffff\1\3\6\4",
            "\1\51",
            "\1\51",
            "\1\52",
            "\1\53\1\54\2\1\1\uffff\1\55\124\uffff\1\1",
            "\1\56",
            "\1\56",
            "\1\57",
            "\1\2\11\uffff\1\20\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\16\uffff\1\42\12\uffff\1\43\7\uffff\1\44\1\3\6\4",
            "\1\2\11\uffff\1\20\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\42\uffff\1\3\6\4",
            "\1\2\11\uffff\1\45\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\42\uffff\1\3\6\4",
            "\1\2\11\uffff\1\45\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\16\uffff\1\60\12\uffff\1\61\7\uffff\1\62\1\3\6\4",
            "\1\2\11\uffff\1\45\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\42\uffff\1\3\6\4",
            "\1\2\11\uffff\1\45\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\16\uffff\1\46\12\uffff\1\47\7\uffff\1\50\1\3\6\4",
            "\1\2\11\uffff\1\45\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\42\uffff\1\3\6\4",
            "\1\63",
            "\1\63",
            "\1\64",
            "\1\2\11\uffff\1\45\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\16\uffff\1\60\12\uffff\1\61\7\uffff\1\62\1\3\6\4",
            "\1\2\11\uffff\1\45\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\42\uffff\1\3\6\4"
    };
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final char[] dfa_20 = DFA.unpackEncodedStringToUnsignedChars(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final short[][] dfa_23 = unpackEncodedStringArray(dfa_23s);

    class DFA28 extends DFA {

        public DFA28(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 28;
            this.eot = dfa_7;
            this.eof = dfa_19;
            this.min = dfa_20;
            this.max = dfa_21;
            this.accept = dfa_22;
            this.special = dfa_11;
            this.transition = dfa_23;
        }
        public String getDescription() {
            return "()* loopback of 710:3: ( (lv_outgoingTransitions_24_0= ruleTransition ) )*";
        }
    }
    static final String dfa_24s = "\24\uffff";
    static final String dfa_25s = "\1\4\1\0\22\uffff";
    static final String dfa_26s = "\1\u0090\1\0\22\uffff";
    static final String dfa_27s = "\2\uffff\1\2\20\uffff\1\1";
    static final String dfa_28s = "\1\uffff\1\0\22\uffff}>";
    static final String[] dfa_29s = {
            "\2\2\1\1\4\2\12\uffff\1\2\11\uffff\1\2\1\uffff\1\2\56\uffff\1\2\4\uffff\1\2\10\uffff\1\2\4\uffff\1\2\3\uffff\1\2\46\uffff\3\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final char[] dfa_25 = DFA.unpackEncodedStringToUnsignedChars(dfa_25s);
    static final char[] dfa_26 = DFA.unpackEncodedStringToUnsignedChars(dfa_26s);
    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final short[][] dfa_29 = unpackEncodedStringArray(dfa_29s);

    class DFA40 extends DFA {

        public DFA40(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 40;
            this.eot = dfa_24;
            this.eof = dfa_24;
            this.min = dfa_25;
            this.max = dfa_26;
            this.accept = dfa_27;
            this.special = dfa_28;
            this.transition = dfa_29;
        }
        public String getDescription() {
            return "1139:4: ( (lv_triggerDelay_4_0= RULE_INT ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA40_1 = input.LA(1);

                         
                        int index40_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_InternalSCTX()) ) {s = 19;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index40_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 40, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_30s = "\1\4\5\uffff\13\0\3\uffff";
    static final String dfa_31s = "\1\u0090\5\uffff\13\0\3\uffff";
    static final String dfa_32s = "\1\uffff\1\1\21\uffff\1\2";
    static final String dfa_33s = "\6\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\3\uffff}>";
    static final String[] dfa_34s = {
            "\1\1\1\10\2\1\1\20\1\7\1\16\12\uffff\1\1\11\uffff\1\6\1\uffff\1\1\56\uffff\1\11\4\uffff\1\13\10\uffff\1\1\4\uffff\1\12\3\uffff\1\17\46\uffff\1\14\1\1\1\15",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final char[] dfa_31 = DFA.unpackEncodedStringToUnsignedChars(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final short[][] dfa_34 = unpackEncodedStringArray(dfa_34s);

    class DFA41 extends DFA {

        public DFA41(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 41;
            this.eot = dfa_24;
            this.eof = dfa_24;
            this.min = dfa_30;
            this.max = dfa_31;
            this.accept = dfa_32;
            this.special = dfa_33;
            this.transition = dfa_34;
        }
        public String getDescription() {
            return "1157:4: ( ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) | ( (lv_trigger_6_0= ruleAtomicExpression ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA41_6 = input.LA(1);

                         
                        int index41_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred45_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index41_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA41_7 = input.LA(1);

                         
                        int index41_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred45_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index41_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA41_8 = input.LA(1);

                         
                        int index41_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred45_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index41_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA41_9 = input.LA(1);

                         
                        int index41_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred45_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index41_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA41_10 = input.LA(1);

                         
                        int index41_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred45_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index41_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA41_11 = input.LA(1);

                         
                        int index41_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred45_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index41_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA41_12 = input.LA(1);

                         
                        int index41_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred45_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index41_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA41_13 = input.LA(1);

                         
                        int index41_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred45_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index41_13);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA41_14 = input.LA(1);

                         
                        int index41_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred45_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index41_14);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA41_15 = input.LA(1);

                         
                        int index41_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred45_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index41_15);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA41_16 = input.LA(1);

                         
                        int index41_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred45_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index41_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 41, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_35s = "\55\uffff";
    static final String dfa_36s = "\1\12\13\uffff\2\0\37\uffff";
    static final String dfa_37s = "\1\u009a\13\uffff\2\0\37\uffff";
    static final String dfa_38s = "\1\uffff\1\2\25\uffff\1\1\25\uffff";
    static final String dfa_39s = "\14\uffff\1\0\1\1\37\uffff}>";
    static final String[] dfa_40s = {
            "\1\14\14\uffff\5\1\1\uffff\1\27\17\uffff\2\1\2\uffff\1\1\2\uffff\1\1\1\uffff\7\1\6\27\2\uffff\1\27\10\uffff\3\27\26\uffff\1\15\2\uffff\4\1\3\uffff\6\27\34\uffff\2\27\3\uffff\3\27",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final char[] dfa_37 = DFA.unpackEncodedStringToUnsignedChars(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[][] dfa_40 = unpackEncodedStringArray(dfa_40s);

    class DFA65 extends DFA {

        public DFA65(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 65;
            this.eot = dfa_35;
            this.eof = dfa_35;
            this.min = dfa_36;
            this.max = dfa_37;
            this.accept = dfa_38;
            this.special = dfa_39;
            this.transition = dfa_40;
        }
        public String getDescription() {
            return "()* loopback of 1816:7: ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA65_12 = input.LA(1);

                         
                        int index65_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalSCTX()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index65_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA65_13 = input.LA(1);

                         
                        int index65_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalSCTX()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index65_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 65, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_41s = {
            "\1\1\14\uffff\5\3\21\uffff\2\3\2\uffff\1\3\2\uffff\1\4\1\uffff\7\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\14\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\5",
            "",
            "",
            "\1\11\1\12\2\3\1\uffff\1\13\1\1\12\uffff\1\3\1\uffff\5\3\10\uffff\1\14\10\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\6\12\uffff\1\7\7\uffff\1\10\1\2\2\uffff\4\4",
            "\1\15",
            "\1\15\2\3",
            "\1\16",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\20\12\uffff\1\21\7\uffff\1\22\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\23",
            "\1\11\1\12\2\3\1\uffff\1\13\1\1\12\uffff\1\3\1\uffff\5\3\10\uffff\1\14\10\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\6\12\uffff\1\7\7\uffff\1\10\1\2\2\uffff\4\4",
            "\1\11\1\12\2\3\1\uffff\1\13\1\1\12\uffff\1\3\1\uffff\5\3\10\uffff\1\14\10\uffff\2\3\2\uffff\1\3\12\uffff\1\4\41\uffff\1\3\10\uffff\1\2\2\uffff\4\4",
            "\1\24\1\25\2\3\1\uffff\1\26\124\uffff\1\3",
            "\1\27",
            "\1\27",
            "\1\30",
            "\1\34\55\uffff\1\31\12\uffff\1\32\7\uffff\1\33",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\35\12\uffff\1\36\7\uffff\1\37\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\20\12\uffff\1\21\7\uffff\1\22\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\40",
            "\1\40",
            "\1\41",
            "\1\42\1\43\2\3\1\uffff\1\44\124\uffff\1\3",
            "\1\45",
            "\1\45",
            "\1\46",
            "\1\34\55\uffff\1\31\12\uffff\1\32\7\uffff\1\33",
            "\1\34",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\50\12\uffff\1\51\7\uffff\1\52\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\35\12\uffff\1\36\7\uffff\1\37\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\53\1\54\2\3\1\uffff\1\55\124\uffff\1\3",
            "\1\56",
            "\1\56",
            "\1\57",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\60\12\uffff\1\61\7\uffff\1\62\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\50\12\uffff\1\51\7\uffff\1\52\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\63",
            "\1\63",
            "\1\64",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\60\12\uffff\1\61\7\uffff\1\62\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4"
    };
    static final short[][] dfa_41 = unpackEncodedStringArray(dfa_41s);

    class DFA66 extends DFA {

        public DFA66(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 66;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_41;
        }
        public String getDescription() {
            return "()* loopback of 1835:7: ( (lv_actions_27_0= ruleLocalAction ) )*";
        }
    }
    static final String dfa_42s = "\13\uffff";
    static final String dfa_43s = "\1\12\2\0\1\uffff\1\0\6\uffff";
    static final String dfa_44s = "\1\147\2\0\1\uffff\1\0\6\uffff";
    static final String dfa_45s = "\3\uffff\1\1\3\uffff\1\2\3\uffff";
    static final String dfa_46s = "\1\uffff\1\0\1\1\1\uffff\1\2\6\uffff}>";
    static final String[] dfa_47s = {
            "\1\1\14\uffff\1\7\1\4\3\7\21\uffff\2\3\2\uffff\1\3\65\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final char[] dfa_43 = DFA.unpackEncodedStringToUnsignedChars(dfa_43s);
    static final char[] dfa_44 = DFA.unpackEncodedStringToUnsignedChars(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final short[][] dfa_47 = unpackEncodedStringArray(dfa_47s);

    class DFA68 extends DFA {

        public DFA68(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 68;
            this.eot = dfa_42;
            this.eof = dfa_42;
            this.min = dfa_43;
            this.max = dfa_44;
            this.accept = dfa_45;
            this.special = dfa_46;
            this.transition = dfa_47;
        }
        public String getDescription() {
            return "1854:7: ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA68_1 = input.LA(1);

                         
                        int index68_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index68_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA68_2 = input.LA(1);

                         
                        int index68_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index68_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA68_4 = input.LA(1);

                         
                        int index68_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index68_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 68, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_48s = "\57\uffff";
    static final String dfa_49s = "\1\1\56\uffff";
    static final String dfa_50s = "\1\12\13\uffff\2\0\41\uffff";
    static final String dfa_51s = "\1\u009a\13\uffff\2\0\41\uffff";
    static final String dfa_52s = "\1\uffff\1\2\27\uffff\1\1\25\uffff";
    static final String dfa_53s = "\14\uffff\1\0\1\1\41\uffff}>";
    static final String[] dfa_54s = {
            "\1\14\13\uffff\6\1\1\uffff\1\31\17\uffff\2\1\2\uffff\1\1\2\uffff\1\1\1\uffff\7\1\6\31\2\uffff\1\31\10\uffff\3\31\26\uffff\1\15\2\uffff\4\1\3\uffff\6\31\34\uffff\2\31\3\uffff\3\31",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final char[] dfa_50 = DFA.unpackEncodedStringToUnsignedChars(dfa_50s);
    static final char[] dfa_51 = DFA.unpackEncodedStringToUnsignedChars(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final short[] dfa_53 = DFA.unpackEncodedString(dfa_53s);
    static final short[][] dfa_54 = unpackEncodedStringArray(dfa_54s);

    class DFA69 extends DFA {

        public DFA69(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 69;
            this.eot = dfa_48;
            this.eof = dfa_49;
            this.min = dfa_50;
            this.max = dfa_51;
            this.accept = dfa_52;
            this.special = dfa_53;
            this.transition = dfa_54;
        }
        public String getDescription() {
            return "()* loopback of 1906:7: ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA69_12 = input.LA(1);

                         
                        int index69_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalSCTX()) ) {s = 25;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA69_13 = input.LA(1);

                         
                        int index69_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalSCTX()) ) {s = 25;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 69, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_55s = "\1\3\64\uffff";
    static final String dfa_56s = "\2\12\1\5\2\uffff\1\4\2\5\1\6\1\5\3\12\2\4\1\45\1\4\2\5\1\6\2\5\1\6\1\4\5\12\2\45\3\12\2\5\1\6\1\4\2\5\1\6\7\12\2\5\1\6\2\12";
    static final String dfa_57s = "\2\155\1\5\2\uffff\1\155\1\5\1\7\1\6\1\5\5\155\1\146\1\136\2\5\1\6\2\5\1\6\1\136\5\155\1\146\1\45\3\155\2\5\1\6\1\136\2\5\1\6\7\155\2\5\1\6\2\155";
    static final String[] dfa_58s = {
            "\1\1\13\uffff\6\3\21\uffff\2\3\2\uffff\1\3\2\uffff\1\4\1\uffff\7\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\14\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\5",
            "",
            "",
            "\1\12\1\13\2\3\1\uffff\1\14\1\1\12\uffff\1\3\1\uffff\5\3\10\uffff\1\11\10\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\6\12\uffff\1\7\7\uffff\1\10\1\2\2\uffff\4\4",
            "\1\15",
            "\1\15\2\3",
            "\1\16",
            "\1\17",
            "\1\1\11\uffff\1\20\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\20\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\21\12\uffff\1\22\7\uffff\1\23\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\20\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\12\1\13\2\3\1\uffff\1\14\1\1\12\uffff\1\3\1\uffff\5\3\10\uffff\1\11\10\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\6\12\uffff\1\7\7\uffff\1\10\1\2\2\uffff\4\4",
            "\1\12\1\13\2\3\1\uffff\1\14\1\1\12\uffff\1\3\1\uffff\5\3\10\uffff\1\11\10\uffff\2\3\2\uffff\1\3\12\uffff\1\4\41\uffff\1\3\10\uffff\1\2\2\uffff\4\4",
            "\1\27\55\uffff\1\24\12\uffff\1\25\7\uffff\1\26",
            "\1\30\1\31\2\3\1\uffff\1\32\124\uffff\1\3",
            "\1\33",
            "\1\33",
            "\1\34",
            "\1\35",
            "\1\35",
            "\1\36",
            "\1\37\1\40\2\3\1\uffff\1\41\124\uffff\1\3",
            "\1\1\11\uffff\1\20\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\20\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\42\12\uffff\1\43\7\uffff\1\44\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\20\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\20\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\21\12\uffff\1\22\7\uffff\1\23\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\20\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\27\55\uffff\1\24\12\uffff\1\25\7\uffff\1\26",
            "\1\27",
            "\1\1\11\uffff\1\45\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\45\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\46\12\uffff\1\47\7\uffff\1\50\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\45\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\51",
            "\1\51",
            "\1\52",
            "\1\53\1\54\2\3\1\uffff\1\55\124\uffff\1\3",
            "\1\56",
            "\1\56",
            "\1\57",
            "\1\1\11\uffff\1\20\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\42\12\uffff\1\43\7\uffff\1\44\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\20\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\45\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\45\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\60\12\uffff\1\61\7\uffff\1\62\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\45\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\45\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\46\12\uffff\1\47\7\uffff\1\50\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\45\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\63",
            "\1\63",
            "\1\64",
            "\1\1\11\uffff\1\45\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\60\12\uffff\1\61\7\uffff\1\62\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\45\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\52\uffff\1\2\2\uffff\4\4"
    };
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final char[] dfa_56 = DFA.unpackEncodedStringToUnsignedChars(dfa_56s);
    static final char[] dfa_57 = DFA.unpackEncodedStringToUnsignedChars(dfa_57s);
    static final short[][] dfa_58 = unpackEncodedStringArray(dfa_58s);

    class DFA70 extends DFA {

        public DFA70(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 70;
            this.eot = dfa_7;
            this.eof = dfa_55;
            this.min = dfa_56;
            this.max = dfa_57;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_58;
        }
        public String getDescription() {
            return "()* loopback of 1925:7: ( (lv_actions_33_0= ruleLocalAction ) )*";
        }
    }
    static final String dfa_59s = "\15\uffff";
    static final String dfa_60s = "\1\1\14\uffff";
    static final String dfa_61s = "\1\12\1\uffff\2\0\1\uffff\1\0\7\uffff";
    static final String dfa_62s = "\1\147\1\uffff\2\0\1\uffff\1\0\7\uffff";
    static final String dfa_63s = "\1\uffff\1\2\7\uffff\1\1\3\uffff";
    static final String dfa_64s = "\2\uffff\1\0\1\1\1\uffff\1\2\7\uffff}>";
    static final String[] dfa_65s = {
            "\1\2\13\uffff\1\1\1\11\1\5\3\11\21\uffff\2\1\2\uffff\1\1\65\uffff\1\3",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final char[] dfa_61 = DFA.unpackEncodedStringToUnsignedChars(dfa_61s);
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[][] dfa_65 = unpackEncodedStringArray(dfa_65s);

    class DFA71 extends DFA {

        public DFA71(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 71;
            this.eot = dfa_59;
            this.eof = dfa_60;
            this.min = dfa_61;
            this.max = dfa_62;
            this.accept = dfa_63;
            this.special = dfa_64;
            this.transition = dfa_65;
        }
        public String getDescription() {
            return "()* loopback of 1944:7: ( (lv_states_34_0= ruleState ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA71_2 = input.LA(1);

                         
                        int index71_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalSCTX()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA71_3 = input.LA(1);

                         
                        int index71_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalSCTX()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA71_5 = input.LA(1);

                         
                        int index71_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalSCTX()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 71, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_66s = "\33\uffff";
    static final String dfa_67s = "\1\5\2\0\30\uffff";
    static final String dfa_68s = "\1\u009a\2\0\30\uffff";
    static final String dfa_69s = "\3\uffff\1\2\2\uffff\1\1\24\uffff";
    static final String dfa_70s = "\1\uffff\1\0\1\1\30\uffff}>";
    static final String[] dfa_71s = {
            "\1\3\4\uffff\1\1\13\uffff\1\3\6\uffff\1\6\25\uffff\1\3\11\uffff\6\6\13\uffff\3\6\26\uffff\1\2\11\uffff\6\6\34\uffff\2\6\3\uffff\3\6",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);
    static final char[] dfa_67 = DFA.unpackEncodedStringToUnsignedChars(dfa_67s);
    static final char[] dfa_68 = DFA.unpackEncodedStringToUnsignedChars(dfa_68s);
    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final short[][] dfa_71 = unpackEncodedStringArray(dfa_71s);

    class DFA83 extends DFA {

        public DFA83(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 83;
            this.eot = dfa_66;
            this.eof = dfa_66;
            this.min = dfa_67;
            this.max = dfa_68;
            this.accept = dfa_69;
            this.special = dfa_70;
            this.transition = dfa_71;
        }
        public String getDescription() {
            return "()* loopback of 2188:5: ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA83_1 = input.LA(1);

                         
                        int index83_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index83_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA83_2 = input.LA(1);

                         
                        int index83_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index83_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 83, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_72s = "\40\uffff";
    static final String dfa_73s = "\1\3\37\uffff";
    static final String dfa_74s = "\1\5\2\0\35\uffff";
    static final String dfa_75s = "\1\u009a\2\0\35\uffff";
    static final String dfa_76s = "\3\uffff\1\2\7\uffff\1\1\24\uffff";
    static final String dfa_77s = "\1\uffff\1\0\1\1\35\uffff}>";
    static final String[] dfa_78s = {
            "\1\3\4\uffff\1\1\13\uffff\1\3\1\uffff\1\3\4\uffff\1\13\17\uffff\2\3\2\uffff\1\3\1\uffff\1\3\11\uffff\6\13\13\uffff\3\13\26\uffff\1\2\11\uffff\6\13\34\uffff\2\13\3\uffff\3\13",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final char[] dfa_74 = DFA.unpackEncodedStringToUnsignedChars(dfa_74s);
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[][] dfa_78 = unpackEncodedStringArray(dfa_78s);

    class DFA85 extends DFA {

        public DFA85(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 85;
            this.eot = dfa_72;
            this.eof = dfa_73;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_78;
        }
        public String getDescription() {
            return "()* loopback of 2237:5: ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA85_1 = input.LA(1);

                         
                        int index85_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index85_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA85_2 = input.LA(1);

                         
                        int index85_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index85_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 85, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_79s = "\1\1\12\uffff";
    static final String dfa_80s = "\1\5\1\uffff\2\0\7\uffff";
    static final String dfa_81s = "\1\147\1\uffff\2\0\7\uffff";
    static final String dfa_82s = "\1\uffff\1\2\7\uffff\1\1\1\uffff";
    static final String dfa_83s = "\2\uffff\1\0\1\1\7\uffff}>";
    static final String[] dfa_84s = {
            "\1\11\4\uffff\1\2\13\uffff\1\1\1\uffff\1\1\24\uffff\2\1\2\uffff\1\1\1\uffff\1\11\63\uffff\1\3",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_79 = DFA.unpackEncodedString(dfa_79s);
    static final char[] dfa_80 = DFA.unpackEncodedStringToUnsignedChars(dfa_80s);
    static final char[] dfa_81 = DFA.unpackEncodedStringToUnsignedChars(dfa_81s);
    static final short[] dfa_82 = DFA.unpackEncodedString(dfa_82s);
    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final short[][] dfa_84 = unpackEncodedStringArray(dfa_84s);

    class DFA86 extends DFA {

        public DFA86(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 86;
            this.eot = dfa_42;
            this.eof = dfa_79;
            this.min = dfa_80;
            this.max = dfa_81;
            this.accept = dfa_82;
            this.special = dfa_83;
            this.transition = dfa_84;
        }
        public String getDescription() {
            return "()* loopback of 2256:5: ( (lv_effects_21_0= ruleDataflowRegionEffects ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA86_2 = input.LA(1);

                         
                        int index86_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred91_InternalSCTX()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index86_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA86_3 = input.LA(1);

                         
                        int index86_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred91_InternalSCTX()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index86_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 86, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_85s = "\1\12\1\uffff\4\66\6\uffff";
    static final String dfa_86s = "\1\155\1\uffff\4\74\6\uffff";
    static final String dfa_87s = "\1\uffff\1\1\4\uffff\1\2\1\3\1\4\1\5\1\6\1\7";
    static final String dfa_88s = "\14\uffff}>";
    static final String[] dfa_89s = {
            "\1\13\51\uffff\1\1\1\uffff\1\6\1\7\2\10\1\11\1\12\1\13\52\uffff\1\13\2\uffff\1\2\1\3\1\4\1\5",
            "",
            "\1\6\1\uffff\2\10\2\uffff\1\13",
            "\1\6\1\uffff\2\10\2\uffff\1\13",
            "\1\6\1\uffff\2\10\2\uffff\1\13",
            "\1\6\1\uffff\2\10\2\uffff\1\13",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_85 = DFA.unpackEncodedStringToUnsignedChars(dfa_85s);
    static final char[] dfa_86 = DFA.unpackEncodedStringToUnsignedChars(dfa_86s);
    static final short[] dfa_87 = DFA.unpackEncodedString(dfa_87s);
    static final short[] dfa_88 = DFA.unpackEncodedString(dfa_88s);
    static final short[][] dfa_89 = unpackEncodedStringArray(dfa_89s);

    class DFA90 extends DFA {

        public DFA90(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 90;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_85;
            this.max = dfa_86;
            this.accept = dfa_87;
            this.special = dfa_88;
            this.transition = dfa_89;
        }
        public String getDescription() {
            return "2451:2: (this_EntryAction_0= ruleEntryAction | this_DuringAction_1= ruleDuringAction | this_ExitAction_2= ruleExitAction | this_SuspendAction_3= ruleSuspendAction | this_PrecedingAction_4= rulePrecedingAction | this_SucceedingAction_5= ruleSucceedingAction | this_PeriodAction_6= rulePeriodAction )";
        }
    }

    class DFA97 extends DFA {

        public DFA97(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 97;
            this.eot = dfa_24;
            this.eof = dfa_24;
            this.min = dfa_25;
            this.max = dfa_26;
            this.accept = dfa_27;
            this.special = dfa_28;
            this.transition = dfa_29;
        }
        public String getDescription() {
            return "2748:4: ( (lv_triggerDelay_4_0= RULE_INT ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA97_1 = input.LA(1);

                         
                        int index97_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred108_InternalSCTX()) ) {s = 19;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index97_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 97, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA110 extends DFA {

        public DFA110(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 110;
            this.eot = dfa_24;
            this.eof = dfa_24;
            this.min = dfa_25;
            this.max = dfa_26;
            this.accept = dfa_27;
            this.special = dfa_28;
            this.transition = dfa_29;
        }
        public String getDescription() {
            return "3111:4: ( (lv_triggerDelay_5_0= RULE_INT ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA110_1 = input.LA(1);

                         
                        int index110_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalSCTX()) ) {s = 19;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index110_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 110, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_90s = "\32\uffff";
    static final String dfa_91s = "\1\12\27\0\2\uffff";
    static final String dfa_92s = "\1\u009a\27\0\2\uffff";
    static final String dfa_93s = "\30\uffff\1\1\1\2";
    static final String dfa_94s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\2\uffff}>";
    static final String[] dfa_95s = {
            "\1\1\22\uffff\1\25\37\uffff\1\6\1\7\1\10\1\11\1\12\1\22\13\uffff\1\13\1\23\1\24\26\uffff\1\2\11\uffff\1\14\1\15\1\16\1\17\1\20\1\21\34\uffff\1\27\1\26\3\uffff\1\3\1\4\1\5",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_90 = DFA.unpackEncodedString(dfa_90s);
    static final char[] dfa_91 = DFA.unpackEncodedStringToUnsignedChars(dfa_91s);
    static final char[] dfa_92 = DFA.unpackEncodedStringToUnsignedChars(dfa_92s);
    static final short[] dfa_93 = DFA.unpackEncodedString(dfa_93s);
    static final short[] dfa_94 = DFA.unpackEncodedString(dfa_94s);
    static final short[][] dfa_95 = unpackEncodedStringArray(dfa_95s);

    class DFA127 extends DFA {

        public DFA127(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 127;
            this.eot = dfa_90;
            this.eof = dfa_90;
            this.min = dfa_91;
            this.max = dfa_92;
            this.accept = dfa_93;
            this.special = dfa_94;
            this.transition = dfa_95;
        }
        public String getDescription() {
            return "3641:2: (this_Declaration_0= superDeclaration | this_DeclarationWOSemicolon_1= ruleDeclarationWOSemicolon )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA127_1 = input.LA(1);

                         
                        int index127_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index127_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA127_2 = input.LA(1);

                         
                        int index127_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index127_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA127_3 = input.LA(1);

                         
                        int index127_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index127_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA127_4 = input.LA(1);

                         
                        int index127_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index127_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA127_5 = input.LA(1);

                         
                        int index127_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index127_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA127_6 = input.LA(1);

                         
                        int index127_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index127_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA127_7 = input.LA(1);

                         
                        int index127_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index127_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA127_8 = input.LA(1);

                         
                        int index127_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index127_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA127_9 = input.LA(1);

                         
                        int index127_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index127_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA127_10 = input.LA(1);

                         
                        int index127_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index127_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA127_11 = input.LA(1);

                         
                        int index127_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index127_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA127_12 = input.LA(1);

                         
                        int index127_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index127_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA127_13 = input.LA(1);

                         
                        int index127_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index127_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA127_14 = input.LA(1);

                         
                        int index127_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index127_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA127_15 = input.LA(1);

                         
                        int index127_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index127_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA127_16 = input.LA(1);

                         
                        int index127_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index127_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA127_17 = input.LA(1);

                         
                        int index127_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index127_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA127_18 = input.LA(1);

                         
                        int index127_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index127_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA127_19 = input.LA(1);

                         
                        int index127_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index127_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA127_20 = input.LA(1);

                         
                        int index127_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index127_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA127_21 = input.LA(1);

                         
                        int index127_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index127_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA127_22 = input.LA(1);

                         
                        int index127_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index127_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA127_23 = input.LA(1);

                         
                        int index127_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index127_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 127, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_96s = "\1\5\3\0\11\uffff";
    static final String dfa_97s = "\1\147\3\0\11\uffff";
    static final String dfa_98s = "\4\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\1\1\2\1\3";
    static final String dfa_99s = "\1\uffff\1\0\1\1\1\2\11\uffff}>";
    static final String[] dfa_100s = {
            "\1\3\4\uffff\1\1\12\uffff\1\6\20\uffff\1\4\10\uffff\1\10\30\uffff\1\5\1\7\1\uffff\1\11\33\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_96 = DFA.unpackEncodedStringToUnsignedChars(dfa_96s);
    static final char[] dfa_97 = DFA.unpackEncodedStringToUnsignedChars(dfa_97s);
    static final short[] dfa_98 = DFA.unpackEncodedString(dfa_98s);
    static final short[] dfa_99 = DFA.unpackEncodedString(dfa_99s);
    static final short[][] dfa_100 = unpackEncodedStringArray(dfa_100s);

    class DFA128 extends DFA {

        public DFA128(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 128;
            this.eot = dfa_59;
            this.eof = dfa_59;
            this.min = dfa_96;
            this.max = dfa_97;
            this.accept = dfa_98;
            this.special = dfa_99;
            this.transition = dfa_100;
        }
        public String getDescription() {
            return "3683:2: (this_SclAssignment_0= ruleSclAssignment | this_SclPostfixAssignment_1= ruleSclPostfixAssignment | this_Label_2= ruleLabel | this_Conditional_3= ruleConditional | this_Goto_4= ruleGoto | this_ScopeStatement_5= ruleScopeStatement | this_Return_6= ruleReturn | this_ForLoop_7= ruleForLoop | this_WhileLoop_8= ruleWhileLoop )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA128_1 = input.LA(1);

                         
                        int index128_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalSCTX()) ) {s = 10;}

                        else if ( (synpred140_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred141_InternalSCTX()) ) {s = 12;}

                        else if ( (synpred142_InternalSCTX()) ) {s = 4;}

                        else if ( (synpred143_InternalSCTX()) ) {s = 5;}

                        else if ( (synpred144_InternalSCTX()) ) {s = 6;}

                        else if ( (synpred145_InternalSCTX()) ) {s = 7;}

                         
                        input.seek(index128_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA128_2 = input.LA(1);

                         
                        int index128_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalSCTX()) ) {s = 10;}

                        else if ( (synpred140_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred141_InternalSCTX()) ) {s = 12;}

                        else if ( (synpred142_InternalSCTX()) ) {s = 4;}

                        else if ( (synpred143_InternalSCTX()) ) {s = 5;}

                        else if ( (synpred144_InternalSCTX()) ) {s = 6;}

                        else if ( (synpred145_InternalSCTX()) ) {s = 7;}

                         
                        input.seek(index128_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA128_3 = input.LA(1);

                         
                        int index128_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalSCTX()) ) {s = 10;}

                        else if ( (synpred140_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred141_InternalSCTX()) ) {s = 12;}

                         
                        input.seek(index128_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 128, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_101s = {
            "\1\3\4\uffff\1\1\12\uffff\2\3\6\uffff\1\13\10\uffff\1\3\10\uffff\1\3\15\uffff\6\13\5\uffff\2\3\1\uffff\1\3\2\uffff\3\13\26\uffff\1\2\11\uffff\6\13\34\uffff\2\13\3\uffff\3\13",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_101 = unpackEncodedStringArray(dfa_101s);

    class DFA131 extends DFA {

        public DFA131(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 131;
            this.eot = dfa_72;
            this.eof = dfa_72;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_101;
        }
        public String getDescription() {
            return "()* loopback of 3885:3: ( (lv_declarations_3_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA131_1 = input.LA(1);

                         
                        int index131_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index131_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA131_2 = input.LA(1);

                         
                        int index131_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index131_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 131, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_102s = "\77\uffff";
    static final String dfa_103s = "\1\4\76\uffff";
    static final String dfa_104s = "\1\5\3\0\73\uffff";
    static final String dfa_105s = "\1\u009b\3\0\73\uffff";
    static final String dfa_106s = "\4\uffff\1\2\71\uffff\1\1";
    static final String dfa_107s = "\1\uffff\1\0\1\1\1\2\73\uffff}>";
    static final String[] dfa_108s = {
            "\1\3\2\uffff\1\4\1\uffff\1\1\1\4\11\uffff\7\4\1\uffff\1\4\10\uffff\1\4\6\uffff\3\4\1\uffff\1\4\1\uffff\2\4\1\uffff\15\4\2\uffff\1\4\2\uffff\2\4\1\uffff\6\4\3\uffff\2\4\21\uffff\1\2\2\uffff\4\4\3\uffff\6\4\34\uffff\2\4\3\uffff\4\4",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_102 = DFA.unpackEncodedString(dfa_102s);
    static final short[] dfa_103 = DFA.unpackEncodedString(dfa_103s);
    static final char[] dfa_104 = DFA.unpackEncodedStringToUnsignedChars(dfa_104s);
    static final char[] dfa_105 = DFA.unpackEncodedStringToUnsignedChars(dfa_105s);
    static final short[] dfa_106 = DFA.unpackEncodedString(dfa_106s);
    static final short[] dfa_107 = DFA.unpackEncodedString(dfa_107s);
    static final short[][] dfa_108 = unpackEncodedStringArray(dfa_108s);

    class DFA148 extends DFA {

        public DFA148(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 148;
            this.eot = dfa_102;
            this.eof = dfa_103;
            this.min = dfa_104;
            this.max = dfa_105;
            this.accept = dfa_106;
            this.special = dfa_107;
            this.transition = dfa_108;
        }
        public String getDescription() {
            return "4232:3: ( ( (lv_valuedObjects_20_0= ruleValuedObject ) ) (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA148_1 = input.LA(1);

                         
                        int index148_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalSCTX()) ) {s = 62;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index148_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA148_2 = input.LA(1);

                         
                        int index148_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalSCTX()) ) {s = 62;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index148_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA148_3 = input.LA(1);

                         
                        int index148_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalSCTX()) ) {s = 62;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index148_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 148, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_109s = "\1\12\2\0\27\uffff";
    static final String dfa_110s = "\1\u009a\2\0\27\uffff";
    static final String dfa_111s = "\3\uffff\1\2\1\uffff\1\1\24\uffff";
    static final String dfa_112s = "\1\uffff\1\0\1\1\27\uffff}>";
    static final String[] dfa_113s = {
            "\1\1\14\uffff\1\3\3\uffff\1\3\1\uffff\1\5\37\uffff\6\5\13\uffff\3\5\26\uffff\1\2\11\uffff\6\5\34\uffff\2\5\3\uffff\3\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_109 = DFA.unpackEncodedStringToUnsignedChars(dfa_109s);
    static final char[] dfa_110 = DFA.unpackEncodedStringToUnsignedChars(dfa_110s);
    static final short[] dfa_111 = DFA.unpackEncodedString(dfa_111s);
    static final short[] dfa_112 = DFA.unpackEncodedString(dfa_112s);
    static final short[][] dfa_113 = unpackEncodedStringArray(dfa_113s);

    class DFA151 extends DFA {

        public DFA151(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 151;
            this.eot = dfa_90;
            this.eof = dfa_90;
            this.min = dfa_109;
            this.max = dfa_110;
            this.accept = dfa_111;
            this.special = dfa_112;
            this.transition = dfa_113;
        }
        public String getDescription() {
            return "()* loopback of 4360:3: ( (lv_declarations_4_0= ruleDeclarationWOSemicolon ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA151_1 = input.LA(1);

                         
                        int index151_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred169_InternalSCTX()) ) {s = 5;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index151_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA151_2 = input.LA(1);

                         
                        int index151_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred169_InternalSCTX()) ) {s = 5;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index151_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 151, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_114s = "\1\147\1\uffff\1\147\1\5\1\uffff\1\147\1\5\1\7\1\6\1\5\5\147\1\146\1\136\2\5\1\6\2\5\1\6\1\136\5\147\1\146\1\45\3\147\2\5\1\6\1\136\2\5\1\6\7\147\2\5\1\6\2\147";
    static final String[] dfa_115s = {
            "\1\2\13\uffff\2\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\42\uffff\1\3",
            "",
            "\1\2\14\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\42\uffff\1\3",
            "\1\5",
            "",
            "\1\12\1\13\2\1\1\uffff\1\14\1\2\12\uffff\1\1\1\uffff\1\1\3\uffff\1\1\10\uffff\1\11\1\uffff\1\4\35\uffff\1\4\16\uffff\1\6\12\uffff\1\7\7\uffff\1\10\1\3",
            "\1\15",
            "\1\15\2\1",
            "\1\16",
            "\1\17",
            "\1\2\11\uffff\1\20\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\42\uffff\1\3",
            "\1\2\11\uffff\1\20\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\16\uffff\1\21\12\uffff\1\22\7\uffff\1\23\1\3",
            "\1\2\11\uffff\1\20\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\42\uffff\1\3",
            "\1\12\1\13\2\1\1\uffff\1\14\1\2\12\uffff\1\1\1\uffff\1\1\3\uffff\1\1\10\uffff\1\11\1\uffff\1\4\35\uffff\1\4\16\uffff\1\6\12\uffff\1\7\7\uffff\1\10\1\3",
            "\1\12\1\13\2\1\1\uffff\1\14\1\2\12\uffff\1\1\1\uffff\1\1\3\uffff\1\1\10\uffff\1\11\1\uffff\1\4\35\uffff\1\4\31\uffff\1\1\10\uffff\1\3",
            "\1\27\55\uffff\1\24\12\uffff\1\25\7\uffff\1\26",
            "\1\30\1\31\2\1\1\uffff\1\32\124\uffff\1\1",
            "\1\33",
            "\1\33",
            "\1\34",
            "\1\35",
            "\1\35",
            "\1\36",
            "\1\37\1\40\2\1\1\uffff\1\41\124\uffff\1\1",
            "\1\2\11\uffff\1\20\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\42\uffff\1\3",
            "\1\2\11\uffff\1\20\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\16\uffff\1\42\12\uffff\1\43\7\uffff\1\44\1\3",
            "\1\2\11\uffff\1\20\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\42\uffff\1\3",
            "\1\2\11\uffff\1\20\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\16\uffff\1\21\12\uffff\1\22\7\uffff\1\23\1\3",
            "\1\2\11\uffff\1\20\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\42\uffff\1\3",
            "\1\27\55\uffff\1\24\12\uffff\1\25\7\uffff\1\26",
            "\1\27",
            "\1\2\11\uffff\1\45\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\42\uffff\1\3",
            "\1\2\11\uffff\1\45\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\16\uffff\1\46\12\uffff\1\47\7\uffff\1\50\1\3",
            "\1\2\11\uffff\1\45\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\42\uffff\1\3",
            "\1\51",
            "\1\51",
            "\1\52",
            "\1\53\1\54\2\1\1\uffff\1\55\124\uffff\1\1",
            "\1\56",
            "\1\56",
            "\1\57",
            "\1\2\11\uffff\1\20\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\16\uffff\1\42\12\uffff\1\43\7\uffff\1\44\1\3",
            "\1\2\11\uffff\1\20\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\42\uffff\1\3",
            "\1\2\11\uffff\1\45\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\42\uffff\1\3",
            "\1\2\11\uffff\1\45\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\16\uffff\1\60\12\uffff\1\61\7\uffff\1\62\1\3",
            "\1\2\11\uffff\1\45\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\42\uffff\1\3",
            "\1\2\11\uffff\1\45\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\16\uffff\1\46\12\uffff\1\47\7\uffff\1\50\1\3",
            "\1\2\11\uffff\1\45\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\42\uffff\1\3",
            "\1\63",
            "\1\63",
            "\1\64",
            "\1\2\11\uffff\1\45\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\16\uffff\1\60\12\uffff\1\61\7\uffff\1\62\1\3",
            "\1\2\11\uffff\1\45\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\42\uffff\1\3"
    };
    static final char[] dfa_114 = DFA.unpackEncodedStringToUnsignedChars(dfa_114s);
    static final short[][] dfa_115 = unpackEncodedStringArray(dfa_115s);

    class DFA156 extends DFA {

        public DFA156(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 156;
            this.eot = dfa_7;
            this.eof = dfa_19;
            this.min = dfa_20;
            this.max = dfa_114;
            this.accept = dfa_22;
            this.special = dfa_11;
            this.transition = dfa_115;
        }
        public String getDescription() {
            return "()* loopback of 4494:3: ( (lv_outgoingTransitions_5_0= rulePolicyTransition ) )*";
        }
    }
    static final String dfa_116s = "\31\uffff";
    static final String dfa_117s = "\1\12\5\0\23\uffff";
    static final String dfa_118s = "\1\u009a\5\0\23\uffff";
    static final String dfa_119s = "\6\uffff\1\1\21\uffff\1\2";
    static final String dfa_120s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\23\uffff}>";
    static final String[] dfa_121s = {
            "\1\1\22\uffff\1\6\37\uffff\6\6\2\uffff\1\30\10\uffff\3\6\26\uffff\1\2\11\uffff\6\6\34\uffff\2\6\3\uffff\1\3\1\4\1\5",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_116 = DFA.unpackEncodedString(dfa_116s);
    static final char[] dfa_117 = DFA.unpackEncodedStringToUnsignedChars(dfa_117s);
    static final char[] dfa_118 = DFA.unpackEncodedStringToUnsignedChars(dfa_118s);
    static final short[] dfa_119 = DFA.unpackEncodedString(dfa_119s);
    static final short[] dfa_120 = DFA.unpackEncodedString(dfa_120s);
    static final short[][] dfa_121 = unpackEncodedStringArray(dfa_121s);

    class DFA163 extends DFA {

        public DFA163(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 163;
            this.eot = dfa_116;
            this.eof = dfa_116;
            this.min = dfa_117;
            this.max = dfa_118;
            this.accept = dfa_119;
            this.special = dfa_120;
            this.transition = dfa_121;
        }
        public String getDescription() {
            return "4720:2: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_KeywordMethodDeclarationWOSemicolon_1= ruleKeywordMethodDeclarationWOSemicolon )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA163_1 = input.LA(1);

                         
                        int index163_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred181_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index163_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA163_2 = input.LA(1);

                         
                        int index163_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred181_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index163_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA163_3 = input.LA(1);

                         
                        int index163_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred181_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index163_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA163_4 = input.LA(1);

                         
                        int index163_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred181_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index163_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA163_5 = input.LA(1);

                         
                        int index163_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred181_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index163_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 163, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_122s = "\6\uffff";
    static final String dfa_123s = "\1\2\2\uffff\2\2\1\uffff";
    static final String dfa_124s = "\1\12\1\4\1\uffff\2\6\1\uffff";
    static final String dfa_125s = "\1\u009a\1\147\1\uffff\2\u009a\1\uffff";
    static final String dfa_126s = "\2\uffff\1\2\2\uffff\1\1";
    static final String dfa_127s = "\6\uffff}>";
    static final String[] dfa_128s = {
            "\1\2\12\uffff\7\2\1\uffff\1\1\17\uffff\2\2\2\uffff\1\2\2\uffff\1\2\1\uffff\15\2\2\uffff\1\2\10\uffff\3\2\26\uffff\1\2\2\uffff\4\2\3\uffff\6\2\34\uffff\2\2\3\uffff\3\2",
            "\1\2\1\3\4\uffff\1\2\12\uffff\1\2\52\uffff\1\2\46\uffff\1\2",
            "",
            "\1\5\3\uffff\2\2\10\uffff\1\2\1\uffff\6\2\1\uffff\1\2\6\uffff\1\2\7\uffff\3\2\2\uffff\1\2\2\uffff\1\2\1\uffff\15\2\2\uffff\1\2\10\uffff\5\2\17\uffff\1\4\4\uffff\1\2\2\uffff\4\2\3\uffff\6\2\34\uffff\2\2\3\uffff\3\2",
            "\1\5\3\uffff\2\2\10\uffff\1\2\1\uffff\6\2\1\uffff\1\2\6\uffff\1\2\7\uffff\3\2\2\uffff\1\2\2\uffff\1\2\1\uffff\15\2\2\uffff\1\2\10\uffff\5\2\17\uffff\1\4\4\uffff\1\2\2\uffff\4\2\3\uffff\6\2\34\uffff\2\2\3\uffff\3\2",
            ""
    };

    static final short[] dfa_122 = DFA.unpackEncodedString(dfa_122s);
    static final short[] dfa_123 = DFA.unpackEncodedString(dfa_123s);
    static final char[] dfa_124 = DFA.unpackEncodedStringToUnsignedChars(dfa_124s);
    static final char[] dfa_125 = DFA.unpackEncodedStringToUnsignedChars(dfa_125s);
    static final short[] dfa_126 = DFA.unpackEncodedString(dfa_126s);
    static final short[] dfa_127 = DFA.unpackEncodedString(dfa_127s);
    static final short[][] dfa_128 = unpackEncodedStringArray(dfa_128s);

    class DFA170 extends DFA {

        public DFA170(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 170;
            this.eot = dfa_122;
            this.eof = dfa_123;
            this.min = dfa_124;
            this.max = dfa_125;
            this.accept = dfa_126;
            this.special = dfa_127;
            this.transition = dfa_128;
        }
        public String getDescription() {
            return "4914:3: (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )?";
        }
    }

    class DFA172 extends DFA {

        public DFA172(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 172;
            this.eot = dfa_72;
            this.eof = dfa_72;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_101;
        }
        public String getDescription() {
            return "()* loopback of 4963:4: ( (lv_declarations_16_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA172_1 = input.LA(1);

                         
                        int index172_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred190_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index172_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA172_2 = input.LA(1);

                         
                        int index172_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred190_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index172_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 172, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_129s = {
            "\1\3\4\uffff\1\1\12\uffff\1\3\7\uffff\1\13\10\uffff\1\3\10\uffff\1\3\15\uffff\6\13\5\uffff\2\3\1\uffff\1\3\2\uffff\3\13\26\uffff\1\2\11\uffff\6\13\34\uffff\2\13\3\uffff\3\13",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_129 = unpackEncodedStringArray(dfa_129s);

    class DFA177 extends DFA {

        public DFA177(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 177;
            this.eot = dfa_72;
            this.eof = dfa_73;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_129;
        }
        public String getDescription() {
            return "()* loopback of 5072:3: ( (lv_declarations_4_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA177_1 = input.LA(1);

                         
                        int index177_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred195_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index177_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA177_2 = input.LA(1);

                         
                        int index177_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred195_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index177_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 177, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_130s = "\5\uffff";
    static final String dfa_131s = "\1\1\4\uffff";
    static final String dfa_132s = "\1\5\1\uffff\2\6\1\uffff";
    static final String dfa_133s = "\1\147\1\uffff\2\u0087\1\uffff";
    static final String dfa_134s = "\1\uffff\1\2\2\uffff\1\1";
    static final String dfa_135s = "\5\uffff}>";
    static final String[] dfa_136s = {
            "\1\2\4\uffff\1\1\12\uffff\2\1\17\uffff\1\1\3\uffff\1\1\4\uffff\1\1\30\uffff\2\1\1\uffff\1\1\33\uffff\1\1",
            "",
            "\1\4\35\uffff\1\1\13\uffff\1\1\40\uffff\1\1\1\uffff\1\1\16\uffff\1\3\26\uffff\17\1",
            "\1\4\35\uffff\1\1\54\uffff\1\1\1\uffff\1\1\16\uffff\1\3\26\uffff\17\1",
            ""
    };

    static final short[] dfa_130 = DFA.unpackEncodedString(dfa_130s);
    static final short[] dfa_131 = DFA.unpackEncodedString(dfa_131s);
    static final char[] dfa_132 = DFA.unpackEncodedStringToUnsignedChars(dfa_132s);
    static final char[] dfa_133 = DFA.unpackEncodedStringToUnsignedChars(dfa_133s);
    static final short[] dfa_134 = DFA.unpackEncodedString(dfa_134s);
    static final short[] dfa_135 = DFA.unpackEncodedString(dfa_135s);
    static final short[][] dfa_136 = unpackEncodedStringArray(dfa_136s);

    class DFA183 extends DFA {

        public DFA183(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 183;
            this.eot = dfa_130;
            this.eof = dfa_131;
            this.min = dfa_132;
            this.max = dfa_133;
            this.accept = dfa_134;
            this.special = dfa_135;
            this.transition = dfa_136;
        }
        public String getDescription() {
            return "()+ loopback of 5342:4: ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA187 extends DFA {

        public DFA187(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 187;
            this.eot = dfa_130;
            this.eof = dfa_131;
            this.min = dfa_132;
            this.max = dfa_133;
            this.accept = dfa_134;
            this.special = dfa_135;
            this.transition = dfa_136;
        }
        public String getDescription() {
            return "()+ loopback of 5457:4: ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA192 extends DFA {

        public DFA192(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 192;
            this.eot = dfa_72;
            this.eof = dfa_72;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_101;
        }
        public String getDescription() {
            return "()* loopback of 5617:3: ( (lv_declarations_4_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA192_1 = input.LA(1);

                         
                        int index192_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index192_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA192_2 = input.LA(1);

                         
                        int index192_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index192_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 192, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_137s = "\16\uffff";
    static final String dfa_138s = "\1\5\15\uffff";
    static final String dfa_139s = "\1\5\2\0\13\uffff";
    static final String dfa_140s = "\1\147\2\0\13\uffff";
    static final String dfa_141s = "\3\uffff\1\1\1\2\1\3\10\uffff";
    static final String dfa_142s = "\1\uffff\1\0\1\1\13\uffff}>";
    static final String[] dfa_143s = {
            "\1\5\4\uffff\1\1\12\uffff\2\5\17\uffff\1\5\3\uffff\1\4\4\uffff\1\5\30\uffff\2\5\1\3\1\5\33\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_137 = DFA.unpackEncodedString(dfa_137s);
    static final short[] dfa_138 = DFA.unpackEncodedString(dfa_138s);
    static final char[] dfa_139 = DFA.unpackEncodedStringToUnsignedChars(dfa_139s);
    static final char[] dfa_140 = DFA.unpackEncodedStringToUnsignedChars(dfa_140s);
    static final short[] dfa_141 = DFA.unpackEncodedString(dfa_141s);
    static final short[] dfa_142 = DFA.unpackEncodedString(dfa_142s);
    static final short[][] dfa_143 = unpackEncodedStringArray(dfa_143s);

    class DFA194 extends DFA {

        public DFA194(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 194;
            this.eot = dfa_137;
            this.eof = dfa_138;
            this.min = dfa_139;
            this.max = dfa_140;
            this.accept = dfa_141;
            this.special = dfa_142;
            this.transition = dfa_143;
        }
        public String getDescription() {
            return "5659:3: ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA194_1 = input.LA(1);

                         
                        int index194_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred212_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index194_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA194_2 = input.LA(1);

                         
                        int index194_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred212_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index194_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 194, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA196 extends DFA {

        public DFA196(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 196;
            this.eot = dfa_72;
            this.eof = dfa_72;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_101;
        }
        public String getDescription() {
            return "()* loopback of 5751:3: ( (lv_declarations_4_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA196_1 = input.LA(1);

                         
                        int index196_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred215_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index196_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA196_2 = input.LA(1);

                         
                        int index196_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred215_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index196_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 196, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_144s = "\1\4\13\uffff";
    static final String dfa_145s = "\1\5\3\0\10\uffff";
    static final String dfa_146s = "\1\147\3\0\10\uffff";
    static final String dfa_147s = "\4\uffff\1\2\6\uffff\1\1";
    static final String dfa_148s = "\1\uffff\1\0\1\1\1\2\10\uffff}>";
    static final String[] dfa_149s = {
            "\1\4\4\uffff\1\1\12\uffff\1\3\20\uffff\1\4\10\uffff\1\4\30\uffff\2\4\1\uffff\1\4\33\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_144 = DFA.unpackEncodedString(dfa_144s);
    static final char[] dfa_145 = DFA.unpackEncodedStringToUnsignedChars(dfa_145s);
    static final char[] dfa_146 = DFA.unpackEncodedStringToUnsignedChars(dfa_146s);
    static final short[] dfa_147 = DFA.unpackEncodedString(dfa_147s);
    static final short[] dfa_148 = DFA.unpackEncodedString(dfa_148s);
    static final short[][] dfa_149 = unpackEncodedStringArray(dfa_149s);

    class DFA205 extends DFA {

        public DFA205(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 205;
            this.eot = dfa_13;
            this.eof = dfa_144;
            this.min = dfa_145;
            this.max = dfa_146;
            this.accept = dfa_147;
            this.special = dfa_148;
            this.transition = dfa_149;
        }
        public String getDescription() {
            return "5907:3: ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA205_1 = input.LA(1);

                         
                        int index205_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred223_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index205_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA205_2 = input.LA(1);

                         
                        int index205_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred223_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index205_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA205_3 = input.LA(1);

                         
                        int index205_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred223_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index205_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 205, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA202 extends DFA {

        public DFA202(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 202;
            this.eot = dfa_72;
            this.eof = dfa_72;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_101;
        }
        public String getDescription() {
            return "()* loopback of 5932:5: ( (lv_declarations_3_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA202_1 = input.LA(1);

                         
                        int index202_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred221_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index202_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA202_2 = input.LA(1);

                         
                        int index202_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred221_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index202_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 202, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA207 extends DFA {

        public DFA207(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 207;
            this.eot = dfa_72;
            this.eof = dfa_72;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_101;
        }
        public String getDescription() {
            return "()* loopback of 6048:3: ( (lv_declarations_3_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA207_1 = input.LA(1);

                         
                        int index207_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred226_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index207_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA207_2 = input.LA(1);

                         
                        int index207_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred226_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index207_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 207, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_150s = "\1\4\2\0\30\uffff";
    static final String dfa_151s = "\1\u0090\2\0\30\uffff";
    static final String dfa_152s = "\3\uffff\1\1\6\uffff\1\2\17\uffff\1\3";
    static final String[] dfa_153s = {
            "\6\12\1\1\12\uffff\1\12\11\uffff\1\12\1\uffff\1\12\10\uffff\1\32\27\uffff\1\3\15\uffff\1\12\4\uffff\1\12\10\uffff\1\12\4\uffff\1\12\3\uffff\1\2\11\uffff\6\3\27\uffff\3\12",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_150 = DFA.unpackEncodedStringToUnsignedChars(dfa_150s);
    static final char[] dfa_151 = DFA.unpackEncodedStringToUnsignedChars(dfa_151s);
    static final short[] dfa_152 = DFA.unpackEncodedString(dfa_152s);
    static final short[][] dfa_153 = unpackEncodedStringArray(dfa_153s);

    class DFA209 extends DFA {

        public DFA209(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 209;
            this.eot = dfa_66;
            this.eof = dfa_66;
            this.min = dfa_150;
            this.max = dfa_151;
            this.accept = dfa_152;
            this.special = dfa_70;
            this.transition = dfa_153;
        }
        public String getDescription() {
            return "6117:3: ( ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) ) | ( (lv_initialization_3_0= ruleEffectOrAssignment ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA209_1 = input.LA(1);

                         
                        int index209_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred228_InternalSCTX()) ) {s = 3;}

                        else if ( (synpred229_InternalSCTX()) ) {s = 10;}

                         
                        input.seek(index209_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA209_2 = input.LA(1);

                         
                        int index209_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred228_InternalSCTX()) ) {s = 3;}

                        else if ( (synpred229_InternalSCTX()) ) {s = 10;}

                         
                        input.seek(index209_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 209, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA211 extends DFA {

        public DFA211(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 211;
            this.eot = dfa_72;
            this.eof = dfa_72;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_101;
        }
        public String getDescription() {
            return "()* loopback of 6212:3: ( (lv_declarations_10_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA211_1 = input.LA(1);

                         
                        int index211_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred231_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index211_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA211_2 = input.LA(1);

                         
                        int index211_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred231_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index211_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 211, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_154s = "\25\uffff";
    static final String dfa_155s = "\1\4\1\0\23\uffff";
    static final String dfa_156s = "\1\u0090\1\0\23\uffff";
    static final String dfa_157s = "\2\uffff\1\3\20\uffff\1\1\1\2";
    static final String dfa_158s = "\1\uffff\1\0\23\uffff}>";
    static final String[] dfa_159s = {
            "\1\2\1\1\5\2\12\uffff\1\2\11\uffff\1\2\1\uffff\1\2\56\uffff\1\2\4\uffff\1\2\10\uffff\1\2\4\uffff\1\2\3\uffff\1\2\46\uffff\3\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_154 = DFA.unpackEncodedString(dfa_154s);
    static final char[] dfa_155 = DFA.unpackEncodedStringToUnsignedChars(dfa_155s);
    static final char[] dfa_156 = DFA.unpackEncodedStringToUnsignedChars(dfa_156s);
    static final short[] dfa_157 = DFA.unpackEncodedString(dfa_157s);
    static final short[] dfa_158 = DFA.unpackEncodedString(dfa_158s);
    static final short[][] dfa_159 = unpackEncodedStringArray(dfa_159s);

    class DFA217 extends DFA {

        public DFA217(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 217;
            this.eot = dfa_154;
            this.eof = dfa_154;
            this.min = dfa_155;
            this.max = dfa_156;
            this.accept = dfa_157;
            this.special = dfa_158;
            this.transition = dfa_159;
        }
        public String getDescription() {
            return "6424:3: ( ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) ) | ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) ) | ( (lv_expression_6_0= ruleExpression ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA217_1 = input.LA(1);

                         
                        int index217_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred237_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred238_InternalSCTX()) ) {s = 20;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index217_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 217, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA218 extends DFA {

        public DFA218(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 218;
            this.eot = dfa_72;
            this.eof = dfa_72;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_101;
        }
        public String getDescription() {
            return "()* loopback of 6600:3: ( (lv_declarations_5_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA218_1 = input.LA(1);

                         
                        int index218_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred239_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index218_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA218_2 = input.LA(1);

                         
                        int index218_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred239_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index218_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 218, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA233 extends DFA {

        public DFA233(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 233;
            this.eot = dfa_72;
            this.eof = dfa_72;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_101;
        }
        public String getDescription() {
            return "()* loopback of 6996:5: ( (lv_declarations_16_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA233_1 = input.LA(1);

                         
                        int index233_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index233_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA233_2 = input.LA(1);

                         
                        int index233_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index233_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 233, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_160s = "\1\2\5\uffff";
    static final String dfa_161s = "\1\5\1\4\1\uffff\2\5\1\uffff";
    static final String dfa_162s = "\1\u009b\1\147\1\uffff\2\u009b\1\uffff";
    static final String[] dfa_163s = {
            "\1\2\4\uffff\1\2\12\uffff\2\2\6\uffff\1\1\37\uffff\6\2\13\uffff\3\2\26\uffff\1\2\11\uffff\6\2\34\uffff\2\2\3\uffff\4\2",
            "\1\2\1\3\4\uffff\1\2\12\uffff\1\2\52\uffff\1\2\46\uffff\1\2",
            "",
            "\1\2\1\5\3\uffff\2\2\10\uffff\1\2\1\uffff\1\2\6\uffff\1\2\6\uffff\1\2\7\uffff\1\2\20\uffff\6\2\13\uffff\5\2\17\uffff\1\4\4\uffff\1\2\11\uffff\6\2\34\uffff\2\2\3\uffff\4\2",
            "\1\2\1\5\3\uffff\2\2\10\uffff\1\2\1\uffff\1\2\6\uffff\1\2\6\uffff\1\2\7\uffff\1\2\20\uffff\6\2\13\uffff\5\2\17\uffff\1\4\4\uffff\1\2\11\uffff\6\2\34\uffff\2\2\3\uffff\4\2",
            ""
    };
    static final short[] dfa_160 = DFA.unpackEncodedString(dfa_160s);
    static final char[] dfa_161 = DFA.unpackEncodedStringToUnsignedChars(dfa_161s);
    static final char[] dfa_162 = DFA.unpackEncodedStringToUnsignedChars(dfa_162s);
    static final short[][] dfa_163 = unpackEncodedStringArray(dfa_163s);

    class DFA243 extends DFA {

        public DFA243(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 243;
            this.eot = dfa_122;
            this.eof = dfa_160;
            this.min = dfa_161;
            this.max = dfa_162;
            this.accept = dfa_126;
            this.special = dfa_127;
            this.transition = dfa_163;
        }
        public String getDescription() {
            return "7225:3: (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )?";
        }
    }
    static final String dfa_164s = "\1\u009b\1\uffff\2\142\1\uffff";
    static final String[] dfa_165s = {
            "\1\2\4\uffff\1\1\12\uffff\2\1\6\uffff\1\1\37\uffff\6\1\13\uffff\3\1\26\uffff\1\1\11\uffff\6\1\34\uffff\2\1\3\uffff\4\1",
            "",
            "\1\4\30\uffff\1\1\46\uffff\1\1\33\uffff\1\3",
            "\1\4\30\uffff\1\1\46\uffff\1\1\33\uffff\1\3",
            ""
    };
    static final char[] dfa_164 = DFA.unpackEncodedStringToUnsignedChars(dfa_164s);
    static final short[][] dfa_165 = unpackEncodedStringArray(dfa_165s);

    class DFA242 extends DFA {

        public DFA242(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 242;
            this.eot = dfa_130;
            this.eof = dfa_131;
            this.min = dfa_132;
            this.max = dfa_164;
            this.accept = dfa_134;
            this.special = dfa_135;
            this.transition = dfa_165;
        }
        public String getDescription() {
            return "()+ loopback of 7230:4: ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA245 extends DFA {

        public DFA245(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 245;
            this.eot = dfa_72;
            this.eof = dfa_72;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_101;
        }
        public String getDescription() {
            return "()* loopback of 7274:4: ( (lv_declarations_15_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA245_1 = input.LA(1);

                         
                        int index245_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred266_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index245_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA245_2 = input.LA(1);

                         
                        int index245_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred266_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index245_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 245, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_166s = "\1\5\2\0\3\uffff\1\0\31\uffff";
    static final String dfa_167s = "\1\u009a\2\0\3\uffff\1\0\31\uffff";
    static final String dfa_168s = "\3\uffff\1\2\10\uffff\1\1\23\uffff";
    static final String dfa_169s = "\1\uffff\1\0\1\1\3\uffff\1\2\31\uffff}>";
    static final String[] dfa_170s = {
            "\1\3\2\uffff\1\3\1\uffff\1\1\12\uffff\1\3\7\uffff\1\14\37\uffff\6\14\11\uffff\2\3\2\14\1\6\3\uffff\2\3\21\uffff\1\2\11\uffff\6\14\34\uffff\2\14\3\uffff\3\14",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_166 = DFA.unpackEncodedStringToUnsignedChars(dfa_166s);
    static final char[] dfa_167 = DFA.unpackEncodedStringToUnsignedChars(dfa_167s);
    static final short[] dfa_168 = DFA.unpackEncodedString(dfa_168s);
    static final short[] dfa_169 = DFA.unpackEncodedString(dfa_169s);
    static final short[][] dfa_170 = unpackEncodedStringArray(dfa_170s);

    class DFA248 extends DFA {

        public DFA248(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 248;
            this.eot = dfa_72;
            this.eof = dfa_73;
            this.min = dfa_166;
            this.max = dfa_167;
            this.accept = dfa_168;
            this.special = dfa_169;
            this.transition = dfa_170;
        }
        public String getDescription() {
            return "()* loopback of 7346:3: ( (lv_declarations_1_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA248_1 = input.LA(1);

                         
                        int index248_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred269_InternalSCTX()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index248_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA248_2 = input.LA(1);

                         
                        int index248_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred269_InternalSCTX()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index248_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA248_6 = input.LA(1);

                         
                        int index248_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred269_InternalSCTX()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index248_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 248, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_171s = {
            "\1\3\2\uffff\1\3\1\uffff\1\1\12\uffff\2\3\6\uffff\1\14\37\uffff\6\14\11\uffff\2\3\2\14\1\6\3\uffff\2\3\21\uffff\1\2\11\uffff\6\14\34\uffff\2\14\3\uffff\3\14",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_171 = unpackEncodedStringArray(dfa_171s);

    class DFA252 extends DFA {

        public DFA252(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 252;
            this.eot = dfa_72;
            this.eof = dfa_72;
            this.min = dfa_166;
            this.max = dfa_167;
            this.accept = dfa_168;
            this.special = dfa_169;
            this.transition = dfa_171;
        }
        public String getDescription() {
            return "()* loopback of 7460:3: ( (lv_declarations_3_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA252_1 = input.LA(1);

                         
                        int index252_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalSCTX()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index252_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA252_2 = input.LA(1);

                         
                        int index252_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalSCTX()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index252_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA252_6 = input.LA(1);

                         
                        int index252_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalSCTX()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index252_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 252, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_172s = "\12\uffff";
    static final String dfa_173s = "\1\5\2\0\7\uffff";
    static final String dfa_174s = "\1\147\2\0\7\uffff";
    static final String dfa_175s = "\3\uffff\1\1\1\2\5\uffff";
    static final String dfa_176s = "\1\uffff\1\0\1\1\7\uffff}>";
    static final String[] dfa_177s = {
            "\1\4\2\uffff\1\4\1\uffff\1\1\12\uffff\1\4\67\uffff\1\3\2\uffff\1\4\3\uffff\2\4\21\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_172 = DFA.unpackEncodedString(dfa_172s);
    static final char[] dfa_173 = DFA.unpackEncodedStringToUnsignedChars(dfa_173s);
    static final char[] dfa_174 = DFA.unpackEncodedStringToUnsignedChars(dfa_174s);
    static final short[] dfa_175 = DFA.unpackEncodedString(dfa_175s);
    static final short[] dfa_176 = DFA.unpackEncodedString(dfa_176s);
    static final short[][] dfa_177 = unpackEncodedStringArray(dfa_177s);

    class DFA255 extends DFA {

        public DFA255(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 255;
            this.eot = dfa_172;
            this.eof = dfa_172;
            this.min = dfa_173;
            this.max = dfa_174;
            this.accept = dfa_175;
            this.special = dfa_176;
            this.transition = dfa_177;
        }
        public String getDescription() {
            return "7545:2: ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA255_1 = input.LA(1);

                         
                        int index255_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred276_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index255_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA255_2 = input.LA(1);

                         
                        int index255_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred276_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index255_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 255, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_178s = "\30\uffff";
    static final String dfa_179s = "\1\12\12\0\7\uffff\1\0\5\uffff";
    static final String dfa_180s = "\1\u009a\12\0\7\uffff\1\0\5\uffff";
    static final String dfa_181s = "\13\uffff\1\1\7\uffff\1\2\1\uffff\1\3\1\4\1\uffff";
    static final String dfa_182s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\7\uffff\1\12\5\uffff}>";
    static final String[] dfa_183s = {
            "\1\1\22\uffff\1\25\37\uffff\1\6\1\7\1\10\1\11\1\12\1\22\13\uffff\1\13\2\23\26\uffff\1\2\11\uffff\6\13\34\uffff\2\26\3\uffff\1\3\1\4\1\5",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_178 = DFA.unpackEncodedString(dfa_178s);
    static final char[] dfa_179 = DFA.unpackEncodedStringToUnsignedChars(dfa_179s);
    static final char[] dfa_180 = DFA.unpackEncodedStringToUnsignedChars(dfa_180s);
    static final short[] dfa_181 = DFA.unpackEncodedString(dfa_181s);
    static final short[] dfa_182 = DFA.unpackEncodedString(dfa_182s);
    static final short[][] dfa_183 = unpackEncodedStringArray(dfa_183s);

    class DFA257 extends DFA {

        public DFA257(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 257;
            this.eot = dfa_178;
            this.eof = dfa_178;
            this.min = dfa_179;
            this.max = dfa_180;
            this.accept = dfa_181;
            this.special = dfa_182;
            this.transition = dfa_183;
        }
        public String getDescription() {
            return "7664:2: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_ClassDeclaration_3= ruleClassDeclaration )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA257_1 = input.LA(1);

                         
                        int index257_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred279_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred280_InternalSCTX()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index257_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA257_2 = input.LA(1);

                         
                        int index257_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred279_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred280_InternalSCTX()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index257_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA257_3 = input.LA(1);

                         
                        int index257_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred279_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred280_InternalSCTX()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index257_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA257_4 = input.LA(1);

                         
                        int index257_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred279_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred280_InternalSCTX()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index257_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA257_5 = input.LA(1);

                         
                        int index257_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred279_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred280_InternalSCTX()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index257_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA257_6 = input.LA(1);

                         
                        int index257_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index257_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA257_7 = input.LA(1);

                         
                        int index257_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index257_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA257_8 = input.LA(1);

                         
                        int index257_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index257_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA257_9 = input.LA(1);

                         
                        int index257_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index257_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA257_10 = input.LA(1);

                         
                        int index257_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index257_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA257_18 = input.LA(1);

                         
                        int index257_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index257_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 257, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA258 extends DFA {

        public DFA258(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 258;
            this.eot = dfa_178;
            this.eof = dfa_178;
            this.min = dfa_179;
            this.max = dfa_180;
            this.accept = dfa_181;
            this.special = dfa_182;
            this.transition = dfa_183;
        }
        public String getDescription() {
            return "7730:2: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_ClassDeclarationWOSemicolon_3= ruleClassDeclarationWOSemicolon )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA258_1 = input.LA(1);

                         
                        int index258_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred281_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred282_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred283_InternalSCTX()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index258_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA258_2 = input.LA(1);

                         
                        int index258_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred281_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred282_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred283_InternalSCTX()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index258_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA258_3 = input.LA(1);

                         
                        int index258_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred281_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred282_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred283_InternalSCTX()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index258_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA258_4 = input.LA(1);

                         
                        int index258_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred281_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred282_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred283_InternalSCTX()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index258_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA258_5 = input.LA(1);

                         
                        int index258_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred281_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred282_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred283_InternalSCTX()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index258_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA258_6 = input.LA(1);

                         
                        int index258_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred281_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index258_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA258_7 = input.LA(1);

                         
                        int index258_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred281_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index258_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA258_8 = input.LA(1);

                         
                        int index258_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred281_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index258_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA258_9 = input.LA(1);

                         
                        int index258_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred281_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index258_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA258_10 = input.LA(1);

                         
                        int index258_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred281_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index258_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA258_18 = input.LA(1);

                         
                        int index258_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred281_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index258_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 258, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_184s = "\101\uffff";
    static final String dfa_185s = "\1\1\100\uffff";
    static final String dfa_186s = "\1\5\1\uffff\1\0\76\uffff";
    static final String dfa_187s = "\1\u009b\1\uffff\1\0\76\uffff";
    static final String dfa_188s = "\1\uffff\1\2\76\uffff\1\1";
    static final String dfa_189s = "\2\uffff\1\0\76\uffff}>";
    static final String[] dfa_190s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\1\2\7\1\1\uffff\1\1\2\uffff\1\1\5\uffff\1\1\6\uffff\3\1\1\uffff\1\1\1\uffff\2\1\1\uffff\15\1\2\uffff\1\1\2\uffff\2\1\1\uffff\6\1\3\uffff\2\1\21\uffff\1\1\2\uffff\4\1\3\uffff\6\1\34\uffff\2\1\3\uffff\4\1",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_184 = DFA.unpackEncodedString(dfa_184s);
    static final short[] dfa_185 = DFA.unpackEncodedString(dfa_185s);
    static final char[] dfa_186 = DFA.unpackEncodedStringToUnsignedChars(dfa_186s);
    static final char[] dfa_187 = DFA.unpackEncodedStringToUnsignedChars(dfa_187s);
    static final short[] dfa_188 = DFA.unpackEncodedString(dfa_188s);
    static final short[] dfa_189 = DFA.unpackEncodedString(dfa_189s);
    static final short[][] dfa_190 = unpackEncodedStringArray(dfa_190s);

    class DFA279 extends DFA {

        public DFA279(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 279;
            this.eot = dfa_184;
            this.eof = dfa_185;
            this.min = dfa_186;
            this.max = dfa_187;
            this.accept = dfa_188;
            this.special = dfa_189;
            this.transition = dfa_190;
        }
        public String getDescription() {
            return "()* loopback of 8302:3: (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA279_2 = input.LA(1);

                         
                        int index279_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalSCTX()) ) {s = 64;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index279_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 279, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_191s = "\1\5\5\0\7\uffff\4\0\11\uffff";
    static final String dfa_192s = "\1\u009b\5\0\7\uffff\4\0\11\uffff";
    static final String dfa_193s = "\6\uffff\1\1\21\uffff\1\2\1\uffff";
    static final String dfa_194s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\7\uffff\1\5\1\6\1\7\1\10\11\uffff}>";
    static final String[] dfa_195s = {
            "\1\30\4\uffff\1\1\22\uffff\1\6\37\uffff\6\6\13\uffff\3\6\26\uffff\1\2\11\uffff\1\6\1\15\1\16\1\17\1\20\1\6\34\uffff\2\6\3\uffff\1\3\1\4\1\5\1\30",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_191 = DFA.unpackEncodedStringToUnsignedChars(dfa_191s);
    static final char[] dfa_192 = DFA.unpackEncodedStringToUnsignedChars(dfa_192s);
    static final short[] dfa_193 = DFA.unpackEncodedString(dfa_193s);
    static final short[] dfa_194 = DFA.unpackEncodedString(dfa_194s);
    static final short[][] dfa_195 = unpackEncodedStringArray(dfa_195s);

    class DFA297 extends DFA {

        public DFA297(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 297;
            this.eot = dfa_90;
            this.eof = dfa_90;
            this.min = dfa_191;
            this.max = dfa_192;
            this.accept = dfa_193;
            this.special = dfa_194;
            this.transition = dfa_195;
        }
        public String getDescription() {
            return "8719:2: (this_Declaration_0= ruleDeclaration | this_MethodDeclaration_1= ruleMethodDeclaration )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA297_1 = input.LA(1);

                         
                        int index297_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred324_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index297_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA297_2 = input.LA(1);

                         
                        int index297_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred324_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index297_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA297_3 = input.LA(1);

                         
                        int index297_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred324_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index297_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA297_4 = input.LA(1);

                         
                        int index297_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred324_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index297_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA297_5 = input.LA(1);

                         
                        int index297_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred324_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index297_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA297_13 = input.LA(1);

                         
                        int index297_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred324_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index297_13);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA297_14 = input.LA(1);

                         
                        int index297_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred324_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index297_14);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA297_15 = input.LA(1);

                         
                        int index297_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred324_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index297_15);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA297_16 = input.LA(1);

                         
                        int index297_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred324_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index297_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 297, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA298 extends DFA {

        public DFA298(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 298;
            this.eot = dfa_90;
            this.eof = dfa_90;
            this.min = dfa_191;
            this.max = dfa_192;
            this.accept = dfa_193;
            this.special = dfa_194;
            this.transition = dfa_195;
        }
        public String getDescription() {
            return "8761:2: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_MethodDeclarationWOSemicolon_1= ruleMethodDeclarationWOSemicolon )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA298_1 = input.LA(1);

                         
                        int index298_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred325_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index298_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA298_2 = input.LA(1);

                         
                        int index298_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred325_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index298_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA298_3 = input.LA(1);

                         
                        int index298_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred325_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index298_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA298_4 = input.LA(1);

                         
                        int index298_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred325_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index298_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA298_5 = input.LA(1);

                         
                        int index298_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred325_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index298_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA298_13 = input.LA(1);

                         
                        int index298_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred325_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index298_13);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA298_14 = input.LA(1);

                         
                        int index298_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred325_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index298_14);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA298_15 = input.LA(1);

                         
                        int index298_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred325_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index298_15);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA298_16 = input.LA(1);

                         
                        int index298_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred325_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index298_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 298, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_196s = "\4\uffff\1\4\1\6\1\7\1\10\1\1\1\2\1\3\1\5\1\11";
    static final String[] dfa_197s = {
            "\1\3\2\uffff\1\4\1\uffff\1\1\105\uffff\1\5\3\uffff\1\6\1\7\21\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_196 = DFA.unpackEncodedString(dfa_196s);
    static final short[][] dfa_197 = unpackEncodedStringArray(dfa_197s);

    class DFA335 extends DFA {

        public DFA335(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 335;
            this.eot = dfa_59;
            this.eof = dfa_59;
            this.min = dfa_96;
            this.max = dfa_97;
            this.accept = dfa_196;
            this.special = dfa_99;
            this.transition = dfa_197;
        }
        public String getDescription() {
            return "9968:2: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA335_1 = input.LA(1);

                         
                        int index335_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred362_InternalSCTX()) ) {s = 8;}

                        else if ( (synpred363_InternalSCTX()) ) {s = 9;}

                        else if ( (synpred364_InternalSCTX()) ) {s = 10;}

                        else if ( (synpred365_InternalSCTX()) ) {s = 4;}

                        else if ( (synpred366_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred367_InternalSCTX()) ) {s = 5;}

                        else if ( (synpred368_InternalSCTX()) ) {s = 6;}

                        else if ( (synpred369_InternalSCTX()) ) {s = 7;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index335_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA335_2 = input.LA(1);

                         
                        int index335_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred362_InternalSCTX()) ) {s = 8;}

                        else if ( (synpred363_InternalSCTX()) ) {s = 9;}

                        else if ( (synpred364_InternalSCTX()) ) {s = 10;}

                        else if ( (synpred365_InternalSCTX()) ) {s = 4;}

                        else if ( (synpred366_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred367_InternalSCTX()) ) {s = 5;}

                        else if ( (synpred368_InternalSCTX()) ) {s = 6;}

                        else if ( (synpred369_InternalSCTX()) ) {s = 7;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index335_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA335_3 = input.LA(1);

                         
                        int index335_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred362_InternalSCTX()) ) {s = 8;}

                        else if ( (synpred363_InternalSCTX()) ) {s = 9;}

                        else if ( (synpred364_InternalSCTX()) ) {s = 10;}

                        else if ( (synpred366_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index335_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 335, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_198s = "\1\1\1\uffff\2\1\1\uffff";
    static final String dfa_199s = "\1\5\1\uffff\2\5\1\uffff";
    static final String dfa_200s = "\1\155\1\uffff\2\u0087\1\uffff";
    static final String[] dfa_201s = {
            "\1\2\2\uffff\1\1\1\uffff\1\1\11\uffff\10\1\16\uffff\1\1\1\uffff\3\1\2\uffff\1\1\1\uffff\2\1\1\uffff\7\1\7\uffff\1\1\7\uffff\2\1\2\uffff\1\1\3\uffff\2\1\21\uffff\7\1",
            "",
            "\1\1\1\4\1\uffff\1\1\1\uffff\1\1\12\uffff\2\1\6\uffff\1\1\1\uffff\1\1\4\uffff\1\1\41\uffff\1\1\5\uffff\2\1\2\uffff\2\1\1\uffff\3\1\14\uffff\1\3\4\uffff\1\1\21\uffff\17\1",
            "\1\1\1\4\1\uffff\1\1\1\uffff\1\1\12\uffff\2\1\6\uffff\1\1\1\uffff\1\1\4\uffff\1\1\41\uffff\1\1\5\uffff\2\1\2\uffff\2\1\1\uffff\3\1\14\uffff\1\3\4\uffff\1\1\21\uffff\17\1",
            ""
    };
    static final short[] dfa_198 = DFA.unpackEncodedString(dfa_198s);
    static final char[] dfa_199 = DFA.unpackEncodedStringToUnsignedChars(dfa_199s);
    static final char[] dfa_200 = DFA.unpackEncodedStringToUnsignedChars(dfa_200s);
    static final short[][] dfa_201 = unpackEncodedStringArray(dfa_201s);

    class DFA337 extends DFA {

        public DFA337(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 337;
            this.eot = dfa_130;
            this.eof = dfa_198;
            this.min = dfa_199;
            this.max = dfa_200;
            this.accept = dfa_134;
            this.special = dfa_135;
            this.transition = dfa_201;
        }
        public String getDescription() {
            return "()+ loopback of 10138:4: ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+";
        }
    }
    static final String[] dfa_202s = {
            "\1\2\2\uffff\1\1\1\uffff\1\1\12\uffff\7\1\16\uffff\1\1\1\uffff\3\1\2\uffff\1\1\1\uffff\2\1\1\uffff\7\1\7\uffff\1\1\7\uffff\2\1\2\uffff\1\1\3\uffff\2\1\21\uffff\7\1",
            "",
            "\1\1\1\4\1\uffff\1\1\1\uffff\1\1\12\uffff\2\1\6\uffff\1\1\1\uffff\1\1\4\uffff\1\1\41\uffff\1\1\5\uffff\2\1\2\uffff\2\1\1\uffff\3\1\14\uffff\1\3\4\uffff\1\1\21\uffff\17\1",
            "\1\1\1\4\1\uffff\1\1\1\uffff\1\1\12\uffff\2\1\6\uffff\1\1\1\uffff\1\1\4\uffff\1\1\41\uffff\1\1\5\uffff\2\1\2\uffff\2\1\1\uffff\3\1\14\uffff\1\3\4\uffff\1\1\21\uffff\17\1",
            ""
    };
    static final short[][] dfa_202 = unpackEncodedStringArray(dfa_202s);

    class DFA340 extends DFA {

        public DFA340(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 340;
            this.eot = dfa_130;
            this.eof = dfa_198;
            this.min = dfa_199;
            this.max = dfa_200;
            this.accept = dfa_134;
            this.special = dfa_135;
            this.transition = dfa_202;
        }
        public String getDescription() {
            return "()+ loopback of 10247:4: ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA343 extends DFA {

        public DFA343(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 343;
            this.eot = dfa_130;
            this.eof = dfa_198;
            this.min = dfa_199;
            this.max = dfa_200;
            this.accept = dfa_134;
            this.special = dfa_135;
            this.transition = dfa_202;
        }
        public String getDescription() {
            return "()+ loopback of 10367:4: ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA346 extends DFA {

        public DFA346(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 346;
            this.eot = dfa_130;
            this.eof = dfa_198;
            this.min = dfa_199;
            this.max = dfa_200;
            this.accept = dfa_134;
            this.special = dfa_135;
            this.transition = dfa_202;
        }
        public String getDescription() {
            return "()+ loopback of 10468:4: ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+";
        }
    }
    static final String[] dfa_203s = {
            "\1\2\2\uffff\1\1\1\uffff\1\1\12\uffff\7\1\16\uffff\1\1\1\uffff\3\1\2\uffff\1\1\2\uffff\1\1\1\uffff\7\1\7\uffff\1\1\7\uffff\2\1\2\uffff\1\1\3\uffff\2\1\21\uffff\7\1",
            "",
            "\1\1\1\4\1\uffff\1\1\1\uffff\1\1\12\uffff\2\1\6\uffff\1\1\1\uffff\1\1\4\uffff\1\1\41\uffff\1\1\5\uffff\2\1\2\uffff\2\1\1\uffff\3\1\14\uffff\1\3\4\uffff\1\1\21\uffff\17\1",
            "\1\1\1\4\1\uffff\1\1\1\uffff\1\1\12\uffff\2\1\6\uffff\1\1\1\uffff\1\1\4\uffff\1\1\41\uffff\1\1\5\uffff\2\1\2\uffff\2\1\1\uffff\3\1\14\uffff\1\3\4\uffff\1\1\21\uffff\17\1",
            ""
    };
    static final short[][] dfa_203 = unpackEncodedStringArray(dfa_203s);

    class DFA354 extends DFA {

        public DFA354(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 354;
            this.eot = dfa_130;
            this.eof = dfa_198;
            this.min = dfa_199;
            this.max = dfa_200;
            this.accept = dfa_134;
            this.special = dfa_135;
            this.transition = dfa_203;
        }
        public String getDescription() {
            return "()+ loopback of 10721:4: ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA361 extends DFA {

        public DFA361(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 361;
            this.eot = dfa_130;
            this.eof = dfa_198;
            this.min = dfa_199;
            this.max = dfa_200;
            this.accept = dfa_134;
            this.special = dfa_135;
            this.transition = dfa_203;
        }
        public String getDescription() {
            return "()+ loopback of 10965:4: ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+";
        }
    }
    static final String dfa_204s = "\1\4\20\0\3\uffff";
    static final String dfa_205s = "\1\u0090\20\0\3\uffff";
    static final String dfa_206s = "\21\uffff\1\1\1\uffff\1\2";
    static final String dfa_207s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\3\uffff}>";
    static final String[] dfa_208s = {
            "\1\4\1\10\1\2\1\3\1\20\1\7\1\16\12\uffff\1\5\11\uffff\1\6\1\uffff\1\21\56\uffff\1\11\4\uffff\1\13\10\uffff\1\1\4\uffff\1\12\3\uffff\1\17\46\uffff\1\14\1\21\1\15",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final char[] dfa_204 = DFA.unpackEncodedStringToUnsignedChars(dfa_204s);
    static final char[] dfa_205 = DFA.unpackEncodedStringToUnsignedChars(dfa_205s);
    static final short[] dfa_206 = DFA.unpackEncodedString(dfa_206s);
    static final short[] dfa_207 = DFA.unpackEncodedString(dfa_207s);
    static final short[][] dfa_208 = unpackEncodedStringArray(dfa_208s);

    class DFA366 extends DFA {

        public DFA366(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 366;
            this.eot = dfa_24;
            this.eof = dfa_24;
            this.min = dfa_204;
            this.max = dfa_205;
            this.accept = dfa_206;
            this.special = dfa_207;
            this.transition = dfa_208;
        }
        public String getDescription() {
            return "11116:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA366_1 = input.LA(1);

                         
                        int index366_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index366_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA366_2 = input.LA(1);

                         
                        int index366_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index366_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA366_3 = input.LA(1);

                         
                        int index366_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index366_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA366_4 = input.LA(1);

                         
                        int index366_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index366_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA366_5 = input.LA(1);

                         
                        int index366_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index366_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA366_6 = input.LA(1);

                         
                        int index366_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index366_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA366_7 = input.LA(1);

                         
                        int index366_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index366_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA366_8 = input.LA(1);

                         
                        int index366_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index366_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA366_9 = input.LA(1);

                         
                        int index366_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index366_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA366_10 = input.LA(1);

                         
                        int index366_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index366_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA366_11 = input.LA(1);

                         
                        int index366_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index366_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA366_12 = input.LA(1);

                         
                        int index366_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index366_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA366_13 = input.LA(1);

                         
                        int index366_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index366_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA366_14 = input.LA(1);

                         
                        int index366_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index366_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA366_15 = input.LA(1);

                         
                        int index366_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index366_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA366_16 = input.LA(1);

                         
                        int index366_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index366_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 366, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_209s = "\23\uffff";
    static final String dfa_210s = "\1\4\5\uffff\13\0\2\uffff";
    static final String dfa_211s = "\1\u0090\5\uffff\13\0\2\uffff";
    static final String dfa_212s = "\1\uffff\1\1\17\uffff\1\2\1\uffff";
    static final String dfa_213s = "\6\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\2\uffff}>";
    static final String[] dfa_214s = {
            "\1\1\1\10\2\1\1\20\1\7\1\16\12\uffff\1\1\11\uffff\1\6\1\uffff\1\21\56\uffff\1\11\4\uffff\1\13\10\uffff\1\1\4\uffff\1\12\3\uffff\1\17\46\uffff\1\14\1\21\1\15",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_209 = DFA.unpackEncodedString(dfa_209s);
    static final char[] dfa_210 = DFA.unpackEncodedStringToUnsignedChars(dfa_210s);
    static final char[] dfa_211 = DFA.unpackEncodedStringToUnsignedChars(dfa_211s);
    static final short[] dfa_212 = DFA.unpackEncodedString(dfa_212s);
    static final short[] dfa_213 = DFA.unpackEncodedString(dfa_213s);
    static final short[][] dfa_214 = unpackEncodedStringArray(dfa_214s);

    class DFA378 extends DFA {

        public DFA378(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 378;
            this.eot = dfa_209;
            this.eof = dfa_209;
            this.min = dfa_210;
            this.max = dfa_211;
            this.accept = dfa_212;
            this.special = dfa_213;
            this.transition = dfa_214;
        }
        public String getDescription() {
            return "11801:2: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA378_6 = input.LA(1);

                         
                        int index378_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred412_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index378_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA378_7 = input.LA(1);

                         
                        int index378_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred412_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index378_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA378_8 = input.LA(1);

                         
                        int index378_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred412_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index378_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA378_9 = input.LA(1);

                         
                        int index378_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred412_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index378_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA378_10 = input.LA(1);

                         
                        int index378_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred412_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index378_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA378_11 = input.LA(1);

                         
                        int index378_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred412_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index378_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA378_12 = input.LA(1);

                         
                        int index378_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred412_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index378_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA378_13 = input.LA(1);

                         
                        int index378_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred412_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index378_13);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA378_14 = input.LA(1);

                         
                        int index378_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred412_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index378_14);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA378_15 = input.LA(1);

                         
                        int index378_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred412_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index378_15);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA378_16 = input.LA(1);

                         
                        int index378_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred412_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index378_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 378, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_215s = "\134\uffff";
    static final String dfa_216s = "\1\1\133\uffff";
    static final String dfa_217s = "\1\5\127\uffff\1\0\3\uffff";
    static final String dfa_218s = "\1\u009b\127\uffff\1\0\3\uffff";
    static final String dfa_219s = "\1\uffff\1\2\131\uffff\1\1";
    static final String dfa_220s = "\130\uffff\1\0\3\uffff}>";
    static final String[] dfa_221s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\10\1\1\uffff\1\1\2\uffff\1\1\1\uffff\2\1\1\uffff\6\1\1\uffff\6\1\1\uffff\20\1\1\uffff\2\1\2\uffff\2\1\1\uffff\6\1\1\uffff\1\1\1\uffff\6\1\1\130\2\1\12\uffff\7\1\3\uffff\6\1\21\uffff\6\1\5\uffff\2\1\3\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_215 = DFA.unpackEncodedString(dfa_215s);
    static final short[] dfa_216 = DFA.unpackEncodedString(dfa_216s);
    static final char[] dfa_217 = DFA.unpackEncodedStringToUnsignedChars(dfa_217s);
    static final char[] dfa_218 = DFA.unpackEncodedStringToUnsignedChars(dfa_218s);
    static final short[] dfa_219 = DFA.unpackEncodedString(dfa_219s);
    static final short[] dfa_220 = DFA.unpackEncodedString(dfa_220s);
    static final short[][] dfa_221 = unpackEncodedStringArray(dfa_221s);

    class DFA381 extends DFA {

        public DFA381(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 381;
            this.eot = dfa_215;
            this.eof = dfa_216;
            this.min = dfa_217;
            this.max = dfa_218;
            this.accept = dfa_219;
            this.special = dfa_220;
            this.transition = dfa_221;
        }
        public String getDescription() {
            return "()* loopback of 12095:5: (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA381_88 = input.LA(1);

                         
                        int index381_88 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred415_InternalSCTX()) ) {s = 91;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index381_88);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 381, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_222s = "\1\5\130\uffff\1\0\2\uffff";
    static final String dfa_223s = "\1\u009b\130\uffff\1\0\2\uffff";
    static final String dfa_224s = "\131\uffff\1\0\2\uffff}>";
    static final String[] dfa_225s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\10\1\1\uffff\1\1\2\uffff\1\1\1\uffff\2\1\1\uffff\6\1\1\uffff\6\1\1\uffff\20\1\1\uffff\2\1\2\uffff\2\1\1\uffff\6\1\1\uffff\1\1\1\uffff\7\1\1\131\1\1\12\uffff\7\1\3\uffff\6\1\21\uffff\6\1\5\uffff\2\1\3\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_222 = DFA.unpackEncodedStringToUnsignedChars(dfa_222s);
    static final char[] dfa_223 = DFA.unpackEncodedStringToUnsignedChars(dfa_223s);
    static final short[] dfa_224 = DFA.unpackEncodedString(dfa_224s);
    static final short[][] dfa_225 = unpackEncodedStringArray(dfa_225s);

    class DFA382 extends DFA {

        public DFA382(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 382;
            this.eot = dfa_215;
            this.eof = dfa_216;
            this.min = dfa_222;
            this.max = dfa_223;
            this.accept = dfa_219;
            this.special = dfa_224;
            this.transition = dfa_225;
        }
        public String getDescription() {
            return "()* loopback of 12171:5: (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA382_89 = input.LA(1);

                         
                        int index382_89 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred417_InternalSCTX()) ) {s = 91;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index382_89);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 382, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_226s = "\1\5\131\uffff\1\0\1\uffff";
    static final String dfa_227s = "\1\u009b\131\uffff\1\0\1\uffff";
    static final String dfa_228s = "\132\uffff\1\0\1\uffff}>";
    static final String[] dfa_229s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\10\1\1\uffff\1\1\2\uffff\1\1\1\uffff\2\1\1\uffff\6\1\1\uffff\6\1\1\uffff\20\1\1\uffff\2\1\2\uffff\2\1\1\uffff\6\1\1\uffff\1\1\1\uffff\10\1\1\132\12\uffff\7\1\3\uffff\6\1\21\uffff\6\1\5\uffff\2\1\3\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };
    static final char[] dfa_226 = DFA.unpackEncodedStringToUnsignedChars(dfa_226s);
    static final char[] dfa_227 = DFA.unpackEncodedStringToUnsignedChars(dfa_227s);
    static final short[] dfa_228 = DFA.unpackEncodedString(dfa_228s);
    static final short[][] dfa_229 = unpackEncodedStringArray(dfa_229s);

    class DFA383 extends DFA {

        public DFA383(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 383;
            this.eot = dfa_215;
            this.eof = dfa_216;
            this.min = dfa_226;
            this.max = dfa_227;
            this.accept = dfa_219;
            this.special = dfa_228;
            this.transition = dfa_229;
        }
        public String getDescription() {
            return "()* loopback of 12247:5: (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA383_90 = input.LA(1);

                         
                        int index383_90 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred419_InternalSCTX()) ) {s = 91;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index383_90);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 383, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_230s = "\136\uffff";
    static final String dfa_231s = "\1\1\135\uffff";
    static final String dfa_232s = "\1\5\132\uffff\1\0\2\uffff";
    static final String dfa_233s = "\1\u009b\132\uffff\1\0\2\uffff";
    static final String dfa_234s = "\1\uffff\1\2\133\uffff\1\1";
    static final String dfa_235s = "\133\uffff\1\0\2\uffff}>";
    static final String[] dfa_236s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\10\1\1\uffff\1\1\2\uffff\1\1\1\uffff\2\1\1\uffff\6\1\1\uffff\6\1\1\uffff\20\1\1\uffff\2\1\2\uffff\2\1\1\uffff\6\1\1\uffff\1\1\1\uffff\11\1\1\133\1\1\10\uffff\7\1\3\uffff\6\1\21\uffff\6\1\5\uffff\2\1\3\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_230 = DFA.unpackEncodedString(dfa_230s);
    static final short[] dfa_231 = DFA.unpackEncodedString(dfa_231s);
    static final char[] dfa_232 = DFA.unpackEncodedStringToUnsignedChars(dfa_232s);
    static final char[] dfa_233 = DFA.unpackEncodedStringToUnsignedChars(dfa_233s);
    static final short[] dfa_234 = DFA.unpackEncodedString(dfa_234s);
    static final short[] dfa_235 = DFA.unpackEncodedString(dfa_235s);
    static final short[][] dfa_236 = unpackEncodedStringArray(dfa_236s);

    class DFA389 extends DFA {

        public DFA389(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 389;
            this.eot = dfa_230;
            this.eof = dfa_231;
            this.min = dfa_232;
            this.max = dfa_233;
            this.accept = dfa_234;
            this.special = dfa_235;
            this.transition = dfa_236;
        }
        public String getDescription() {
            return "()* loopback of 12568:5: (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA389_91 = input.LA(1);

                         
                        int index389_91 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred425_InternalSCTX()) ) {s = 93;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index389_91);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 389, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_237s = "\1\5\133\uffff\1\0\1\uffff";
    static final String dfa_238s = "\1\u009b\133\uffff\1\0\1\uffff";
    static final String dfa_239s = "\134\uffff\1\0\1\uffff}>";
    static final String[] dfa_240s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\10\1\1\uffff\1\1\2\uffff\1\1\1\uffff\2\1\1\uffff\6\1\1\uffff\6\1\1\uffff\20\1\1\uffff\2\1\2\uffff\2\1\1\uffff\6\1\1\uffff\1\1\1\uffff\12\1\1\134\10\uffff\7\1\3\uffff\6\1\21\uffff\6\1\5\uffff\2\1\3\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };
    static final char[] dfa_237 = DFA.unpackEncodedStringToUnsignedChars(dfa_237s);
    static final char[] dfa_238 = DFA.unpackEncodedStringToUnsignedChars(dfa_238s);
    static final short[] dfa_239 = DFA.unpackEncodedString(dfa_239s);
    static final short[][] dfa_240 = unpackEncodedStringArray(dfa_240s);

    class DFA390 extends DFA {

        public DFA390(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 390;
            this.eot = dfa_230;
            this.eof = dfa_231;
            this.min = dfa_237;
            this.max = dfa_238;
            this.accept = dfa_234;
            this.special = dfa_239;
            this.transition = dfa_240;
        }
        public String getDescription() {
            return "()* loopback of 12644:5: (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA390_92 = input.LA(1);

                         
                        int index390_92 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred427_InternalSCTX()) ) {s = 93;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index390_92);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 390, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_241s = "\141\uffff";
    static final String dfa_242s = "\1\1\140\uffff";
    static final String dfa_243s = "\1\5\134\uffff\1\0\3\uffff";
    static final String dfa_244s = "\1\u009b\134\uffff\1\0\3\uffff";
    static final String dfa_245s = "\1\uffff\1\2\136\uffff\1\1";
    static final String dfa_246s = "\135\uffff\1\0\3\uffff}>";
    static final String[] dfa_247s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\10\1\1\uffff\1\1\2\uffff\1\1\1\uffff\2\1\1\uffff\6\1\1\uffff\6\1\1\uffff\20\1\1\uffff\2\1\2\uffff\2\1\1\uffff\6\1\1\uffff\1\1\1\uffff\13\1\1\135\2\1\5\uffff\7\1\3\uffff\6\1\21\uffff\6\1\5\uffff\2\1\3\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_241 = DFA.unpackEncodedString(dfa_241s);
    static final short[] dfa_242 = DFA.unpackEncodedString(dfa_242s);
    static final char[] dfa_243 = DFA.unpackEncodedStringToUnsignedChars(dfa_243s);
    static final char[] dfa_244 = DFA.unpackEncodedStringToUnsignedChars(dfa_244s);
    static final short[] dfa_245 = DFA.unpackEncodedString(dfa_245s);
    static final short[] dfa_246 = DFA.unpackEncodedString(dfa_246s);
    static final short[][] dfa_247 = unpackEncodedStringArray(dfa_247s);

    class DFA392 extends DFA {

        public DFA392(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 392;
            this.eot = dfa_241;
            this.eof = dfa_242;
            this.min = dfa_243;
            this.max = dfa_244;
            this.accept = dfa_245;
            this.special = dfa_246;
            this.transition = dfa_247;
        }
        public String getDescription() {
            return "()* loopback of 12751:5: (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA392_93 = input.LA(1);

                         
                        int index392_93 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred429_InternalSCTX()) ) {s = 96;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index392_93);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 392, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_248s = "\1\5\135\uffff\1\0\2\uffff";
    static final String dfa_249s = "\1\u009b\135\uffff\1\0\2\uffff";
    static final String dfa_250s = "\136\uffff\1\0\2\uffff}>";
    static final String[] dfa_251s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\10\1\1\uffff\1\1\2\uffff\1\1\1\uffff\2\1\1\uffff\6\1\1\uffff\6\1\1\uffff\20\1\1\uffff\2\1\2\uffff\2\1\1\uffff\6\1\1\uffff\1\1\1\uffff\14\1\1\136\1\1\5\uffff\7\1\3\uffff\6\1\21\uffff\6\1\5\uffff\2\1\3\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_248 = DFA.unpackEncodedStringToUnsignedChars(dfa_248s);
    static final char[] dfa_249 = DFA.unpackEncodedStringToUnsignedChars(dfa_249s);
    static final short[] dfa_250 = DFA.unpackEncodedString(dfa_250s);
    static final short[][] dfa_251 = unpackEncodedStringArray(dfa_251s);

    class DFA393 extends DFA {

        public DFA393(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 393;
            this.eot = dfa_241;
            this.eof = dfa_242;
            this.min = dfa_248;
            this.max = dfa_249;
            this.accept = dfa_245;
            this.special = dfa_250;
            this.transition = dfa_251;
        }
        public String getDescription() {
            return "()* loopback of 12827:5: (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA393_94 = input.LA(1);

                         
                        int index393_94 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred431_InternalSCTX()) ) {s = 96;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index393_94);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 393, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_252s = "\1\5\136\uffff\1\0\1\uffff";
    static final String dfa_253s = "\1\u009b\136\uffff\1\0\1\uffff";
    static final String dfa_254s = "\137\uffff\1\0\1\uffff}>";
    static final String[] dfa_255s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\10\1\1\uffff\1\1\2\uffff\1\1\1\uffff\2\1\1\uffff\6\1\1\uffff\6\1\1\uffff\20\1\1\uffff\2\1\2\uffff\2\1\1\uffff\6\1\1\uffff\1\1\1\uffff\15\1\1\137\5\uffff\7\1\3\uffff\6\1\21\uffff\6\1\5\uffff\2\1\3\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };
    static final char[] dfa_252 = DFA.unpackEncodedStringToUnsignedChars(dfa_252s);
    static final char[] dfa_253 = DFA.unpackEncodedStringToUnsignedChars(dfa_253s);
    static final short[] dfa_254 = DFA.unpackEncodedString(dfa_254s);
    static final short[][] dfa_255 = unpackEncodedStringArray(dfa_255s);

    class DFA394 extends DFA {

        public DFA394(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 394;
            this.eot = dfa_241;
            this.eof = dfa_242;
            this.min = dfa_252;
            this.max = dfa_253;
            this.accept = dfa_245;
            this.special = dfa_254;
            this.transition = dfa_255;
        }
        public String getDescription() {
            return "()* loopback of 12903:5: (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA394_95 = input.LA(1);

                         
                        int index394_95 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred433_InternalSCTX()) ) {s = 96;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index394_95);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 394, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_256s = "\22\uffff";
    static final String dfa_257s = "\1\4\17\0\2\uffff";
    static final String dfa_258s = "\1\u0090\17\0\2\uffff";
    static final String dfa_259s = "\20\uffff\1\1\1\2";
    static final String dfa_260s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\2\uffff}>";
    static final String[] dfa_261s = {
            "\1\3\1\7\1\1\1\2\1\17\1\6\1\15\12\uffff\1\4\11\uffff\1\5\60\uffff\1\10\4\uffff\1\12\15\uffff\1\11\3\uffff\1\16\46\uffff\1\13\1\uffff\1\14",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_256 = DFA.unpackEncodedString(dfa_256s);
    static final char[] dfa_257 = DFA.unpackEncodedStringToUnsignedChars(dfa_257s);
    static final char[] dfa_258 = DFA.unpackEncodedStringToUnsignedChars(dfa_258s);
    static final short[] dfa_259 = DFA.unpackEncodedString(dfa_259s);
    static final short[] dfa_260 = DFA.unpackEncodedString(dfa_260s);
    static final short[][] dfa_261 = unpackEncodedStringArray(dfa_261s);

    class DFA398 extends DFA {

        public DFA398(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 398;
            this.eot = dfa_256;
            this.eof = dfa_256;
            this.min = dfa_257;
            this.max = dfa_258;
            this.accept = dfa_259;
            this.special = dfa_260;
            this.transition = dfa_261;
        }
        public String getDescription() {
            return "13029:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? ) | this_InitExpression_6= ruleInitExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA398_1 = input.LA(1);

                         
                        int index398_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred437_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index398_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA398_2 = input.LA(1);

                         
                        int index398_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred437_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index398_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA398_3 = input.LA(1);

                         
                        int index398_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred437_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index398_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA398_4 = input.LA(1);

                         
                        int index398_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred437_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index398_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA398_5 = input.LA(1);

                         
                        int index398_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred437_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index398_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA398_6 = input.LA(1);

                         
                        int index398_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred437_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index398_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA398_7 = input.LA(1);

                         
                        int index398_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred437_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index398_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA398_8 = input.LA(1);

                         
                        int index398_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred437_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index398_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA398_9 = input.LA(1);

                         
                        int index398_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred437_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index398_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA398_10 = input.LA(1);

                         
                        int index398_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred437_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index398_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA398_11 = input.LA(1);

                         
                        int index398_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred437_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index398_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA398_12 = input.LA(1);

                         
                        int index398_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred437_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index398_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA398_13 = input.LA(1);

                         
                        int index398_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred437_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index398_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA398_14 = input.LA(1);

                         
                        int index398_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred437_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index398_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA398_15 = input.LA(1);

                         
                        int index398_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred437_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index398_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 398, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_262s = "\1\2\140\uffff";
    static final String dfa_263s = "\1\5\1\0\137\uffff";
    static final String dfa_264s = "\1\u009b\1\0\137\uffff";
    static final String dfa_265s = "\2\uffff\1\2\135\uffff\1\1";
    static final String dfa_266s = "\1\uffff\1\0\137\uffff}>";
    static final String[] dfa_267s = {
            "\1\2\2\uffff\1\2\1\uffff\2\2\10\uffff\10\2\1\uffff\1\2\2\uffff\1\2\1\uffff\2\2\1\uffff\6\2\1\uffff\4\2\1\1\1\2\1\uffff\20\2\1\uffff\2\2\2\uffff\2\2\1\uffff\6\2\1\uffff\1\2\1\uffff\16\2\5\uffff\7\2\3\uffff\6\2\21\uffff\6\2\5\uffff\2\2\3\uffff\4\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_262 = DFA.unpackEncodedString(dfa_262s);
    static final char[] dfa_263 = DFA.unpackEncodedStringToUnsignedChars(dfa_263s);
    static final char[] dfa_264 = DFA.unpackEncodedStringToUnsignedChars(dfa_264s);
    static final short[] dfa_265 = DFA.unpackEncodedString(dfa_265s);
    static final short[] dfa_266 = DFA.unpackEncodedString(dfa_266s);
    static final short[][] dfa_267 = unpackEncodedStringArray(dfa_267s);

    class DFA397 extends DFA {

        public DFA397(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 397;
            this.eot = dfa_241;
            this.eof = dfa_262;
            this.min = dfa_263;
            this.max = dfa_264;
            this.accept = dfa_265;
            this.special = dfa_266;
            this.transition = dfa_267;
        }
        public String getDescription() {
            return "13098:4: (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA397_1 = input.LA(1);

                         
                        int index397_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred436_InternalSCTX()) ) {s = 96;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index397_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 397, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA399 extends DFA {

        public DFA399(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 399;
            this.eot = dfa_256;
            this.eof = dfa_256;
            this.min = dfa_257;
            this.max = dfa_258;
            this.accept = dfa_259;
            this.special = dfa_260;
            this.transition = dfa_261;
        }
        public String getDescription() {
            return "13154:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_4= ruleAtomicValuedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA399_1 = input.LA(1);

                         
                        int index399_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred438_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index399_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA399_2 = input.LA(1);

                         
                        int index399_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred438_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index399_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA399_3 = input.LA(1);

                         
                        int index399_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred438_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index399_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA399_4 = input.LA(1);

                         
                        int index399_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred438_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index399_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA399_5 = input.LA(1);

                         
                        int index399_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred438_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index399_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA399_6 = input.LA(1);

                         
                        int index399_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred438_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index399_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA399_7 = input.LA(1);

                         
                        int index399_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred438_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index399_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA399_8 = input.LA(1);

                         
                        int index399_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred438_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index399_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA399_9 = input.LA(1);

                         
                        int index399_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred438_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index399_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA399_10 = input.LA(1);

                         
                        int index399_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred438_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index399_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA399_11 = input.LA(1);

                         
                        int index399_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred438_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index399_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA399_12 = input.LA(1);

                         
                        int index399_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred438_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index399_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA399_13 = input.LA(1);

                         
                        int index399_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred438_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index399_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA399_14 = input.LA(1);

                         
                        int index399_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred438_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index399_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA399_15 = input.LA(1);

                         
                        int index399_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred438_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index399_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 399, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_268s = "\1\5\2\uffff\1\0\11\uffff";
    static final String dfa_269s = "\1\u0090\2\uffff\1\0\11\uffff";
    static final String dfa_270s = "\1\uffff\1\1\1\2\1\uffff\1\4\1\5\1\6\1\7\1\uffff\1\10\2\uffff\1\3";
    static final String dfa_271s = "\3\uffff\1\0\11\uffff}>";
    static final String[] dfa_272s = {
            "\1\3\2\uffff\1\11\1\1\1\11\24\uffff\1\2\60\uffff\1\4\4\uffff\1\6\15\uffff\1\5\3\uffff\1\11\46\uffff\1\7\1\uffff\1\7",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_268 = DFA.unpackEncodedStringToUnsignedChars(dfa_268s);
    static final char[] dfa_269 = DFA.unpackEncodedStringToUnsignedChars(dfa_269s);
    static final short[] dfa_270 = DFA.unpackEncodedString(dfa_270s);
    static final short[] dfa_271 = DFA.unpackEncodedString(dfa_271s);
    static final short[][] dfa_272 = unpackEncodedStringArray(dfa_272s);

    class DFA400 extends DFA {

        public DFA400(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 400;
            this.eot = dfa_59;
            this.eof = dfa_59;
            this.min = dfa_268;
            this.max = dfa_269;
            this.accept = dfa_270;
            this.special = dfa_271;
            this.transition = dfa_272;
        }
        public String getDescription() {
            return "13254:2: (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_FunctionCall_5= ruleFunctionCall | this_RandomCall_6= ruleRandomCall | this_RandomizeCall_7= ruleRandomizeCall | this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression | this_TextExpression_9= ruleTextExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA400_3 = input.LA(1);

                         
                        int index400_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred441_InternalSCTX()) ) {s = 12;}

                        else if ( (synpred445_InternalSCTX()) ) {s = 7;}

                         
                        input.seek(index400_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 400, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_273s = "\21\uffff";
    static final String dfa_274s = "\1\4\4\uffff\1\0\13\uffff";
    static final String dfa_275s = "\1\u0090\4\uffff\1\0\13\uffff";
    static final String dfa_276s = "\1\uffff\1\1\1\2\1\3\1\4\1\uffff\1\6\11\uffff\1\5";
    static final String dfa_277s = "\5\uffff\1\0\13\uffff}>";
    static final String[] dfa_278s = {
            "\1\3\1\6\1\1\1\2\3\6\12\uffff\1\4\11\uffff\1\5\60\uffff\1\6\4\uffff\1\6\15\uffff\1\6\3\uffff\1\6\46\uffff\1\6\1\uffff\1\6",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_273 = DFA.unpackEncodedString(dfa_273s);
    static final char[] dfa_274 = DFA.unpackEncodedStringToUnsignedChars(dfa_274s);
    static final char[] dfa_275 = DFA.unpackEncodedStringToUnsignedChars(dfa_275s);
    static final short[] dfa_276 = DFA.unpackEncodedString(dfa_276s);
    static final short[] dfa_277 = DFA.unpackEncodedString(dfa_277s);
    static final short[][] dfa_278 = unpackEncodedStringArray(dfa_278s);

    class DFA401 extends DFA {

        public DFA401(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 401;
            this.eot = dfa_273;
            this.eof = dfa_273;
            this.min = dfa_274;
            this.max = dfa_275;
            this.accept = dfa_276;
            this.special = dfa_277;
            this.transition = dfa_278;
        }
        public String getDescription() {
            return "13378:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA401_5 = input.LA(1);

                         
                        int index401_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred450_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index401_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 401, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_279s = "\1\4\20\0\4\uffff";
    static final String dfa_280s = "\1\u0090\20\0\4\uffff";
    static final String dfa_281s = "\21\uffff\1\1\1\uffff\1\3\1\2";
    static final String dfa_282s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\4\uffff}>";
    static final String[] dfa_283s = {
            "\1\4\1\10\1\2\1\3\1\20\1\7\1\16\12\uffff\1\5\11\uffff\1\6\1\uffff\1\21\56\uffff\1\11\4\uffff\1\13\10\uffff\1\1\4\uffff\1\12\1\23\2\uffff\1\17\46\uffff\1\14\1\21\1\15",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_279 = DFA.unpackEncodedStringToUnsignedChars(dfa_279s);
    static final char[] dfa_280 = DFA.unpackEncodedStringToUnsignedChars(dfa_280s);
    static final short[] dfa_281 = DFA.unpackEncodedString(dfa_281s);
    static final short[] dfa_282 = DFA.unpackEncodedString(dfa_282s);
    static final short[][] dfa_283 = unpackEncodedStringArray(dfa_283s);

    class DFA420 extends DFA {

        public DFA420(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 420;
            this.eot = dfa_154;
            this.eof = dfa_154;
            this.min = dfa_279;
            this.max = dfa_280;
            this.accept = dfa_281;
            this.special = dfa_282;
            this.transition = dfa_283;
        }
        public String getDescription() {
            return "14459:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA420_1 = input.LA(1);

                         
                        int index420_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred469_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred470_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index420_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA420_2 = input.LA(1);

                         
                        int index420_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred469_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred470_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index420_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA420_3 = input.LA(1);

                         
                        int index420_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred469_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred470_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index420_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA420_4 = input.LA(1);

                         
                        int index420_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred469_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred470_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index420_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA420_5 = input.LA(1);

                         
                        int index420_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred469_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred470_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index420_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA420_6 = input.LA(1);

                         
                        int index420_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred469_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred470_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index420_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA420_7 = input.LA(1);

                         
                        int index420_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred469_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred470_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index420_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA420_8 = input.LA(1);

                         
                        int index420_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred469_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred470_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index420_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA420_9 = input.LA(1);

                         
                        int index420_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred469_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred470_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index420_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA420_10 = input.LA(1);

                         
                        int index420_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred469_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred470_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index420_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA420_11 = input.LA(1);

                         
                        int index420_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred469_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred470_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index420_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA420_12 = input.LA(1);

                         
                        int index420_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred469_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred470_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index420_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA420_13 = input.LA(1);

                         
                        int index420_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred469_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred470_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index420_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA420_14 = input.LA(1);

                         
                        int index420_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred469_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred470_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index420_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA420_15 = input.LA(1);

                         
                        int index420_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred469_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred470_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index420_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA420_16 = input.LA(1);

                         
                        int index420_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred469_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred470_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index420_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 420, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_284s = "\2\uffff\1\6\5\uffff\2\6";
    static final String dfa_285s = "\1\146\1\5\1\4\3\5\2\uffff\2\4";
    static final String dfa_286s = "\1\146\1\5\1\147\1\5\1\7\1\6\2\uffff\2\147";
    static final String dfa_287s = "\6\uffff\1\1\1\2\2\uffff";
    static final String dfa_288s = "\12\uffff}>";
    static final String[] dfa_289s = {
            "\1\1",
            "\1\2",
            "\4\6\1\uffff\2\6\6\uffff\2\6\2\uffff\1\7\75\uffff\1\3\12\uffff\1\4\7\uffff\1\5\1\6",
            "\1\10",
            "\1\10\2\6",
            "\1\6\1\11",
            "",
            "",
            "\4\6\1\uffff\2\6\6\uffff\2\6\2\uffff\1\7\75\uffff\1\3\12\uffff\1\4\7\uffff\1\5\1\6",
            "\4\6\1\uffff\2\6\6\uffff\2\6\2\uffff\1\7\110\uffff\1\6\7\uffff\2\6"
    };
    static final short[] dfa_284 = DFA.unpackEncodedString(dfa_284s);
    static final char[] dfa_285 = DFA.unpackEncodedStringToUnsignedChars(dfa_285s);
    static final char[] dfa_286 = DFA.unpackEncodedStringToUnsignedChars(dfa_286s);
    static final short[] dfa_287 = DFA.unpackEncodedString(dfa_287s);
    static final short[] dfa_288 = DFA.unpackEncodedString(dfa_288s);
    static final short[][] dfa_289 = unpackEncodedStringArray(dfa_289s);

    class DFA427 extends DFA {

        public DFA427(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 427;
            this.eot = dfa_172;
            this.eof = dfa_284;
            this.min = dfa_285;
            this.max = dfa_286;
            this.accept = dfa_287;
            this.special = dfa_288;
            this.transition = dfa_289;
        }
        public String getDescription() {
            return "15059:2: (this_Pragma_0= superPragma | this_JsonPragma_1= ruleJsonPragma )";
        }
    }
    static final String dfa_290s = "\3\uffff\1\1\4\uffff\3\1\5\uffff\2\1\3\uffff\3\1\3\uffff\3\1\3\uffff\3\1\3\uffff\2\1\2\uffff\1\1\1\uffff";
    static final String dfa_291s = "\1\12\1\uffff\1\5\1\4\1\5\1\4\1\6\4\4\1\0\1\24\1\5\1\4\1\uffff\2\4\2\5\4\4\3\5\3\4\3\5\3\4\1\0\2\5\2\4\1\0\1\5\1\4\1\0";
    static final String dfa_292s = "\1\147\1\uffff\1\5\1\u009b\1\5\1\u0090\1\6\1\u009a\3\u009b\1\0\1\u0092\1\5\1\u0090\1\uffff\2\u009b\2\5\1\u0090\3\u009b\3\5\3\u009b\3\5\3\u009b\1\0\2\5\2\u009b\1\0\1\5\1\u009b\1\0";
    static final String dfa_293s = "\1\uffff\1\1\15\uffff\1\2\35\uffff";
    static final String dfa_294s = "\13\uffff\1\0\30\uffff\1\2\4\uffff\1\3\2\uffff\1\1}>";
    static final String[] dfa_295s = {
            "\1\1\134\uffff\1\2",
            "",
            "\1\3",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\1\6\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\1\1\1\uffff\4\1\2\uffff\4\1\2\uffff\1\4\2\1\10\uffff\1\5\4\uffff\1\1\2\uffff\1\6\1\1\11\uffff\6\1\27\uffff\3\1\2\uffff\2\1\3\uffff\4\1",
            "\1\10",
            "\1\1\1\11\5\1\12\uffff\1\1\11\uffff\1\1\60\uffff\1\1\4\uffff\1\1\10\uffff\1\1\4\uffff\1\1\3\uffff\1\1\46\uffff\1\1\1\uffff\1\1",
            "\1\12",
            "\1\14\6\1\12\uffff\1\1\1\13\6\uffff\1\1\1\uffff\1\1\1\uffff\1\1\4\uffff\1\1\10\uffff\1\1\15\uffff\6\1\5\uffff\2\1\1\uffff\1\1\2\uffff\3\1\4\uffff\1\1\10\uffff\1\1\4\uffff\2\1\2\uffff\1\1\11\uffff\6\1\27\uffff\3\1\2\uffff\2\1\3\uffff\3\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\1\6\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\1\1\1\uffff\4\1\2\uffff\4\1\2\uffff\1\4\2\1\10\uffff\1\5\4\uffff\1\1\2\uffff\1\6\1\1\11\uffff\6\1\27\uffff\3\1\2\uffff\2\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\15\12\1\1\16\5\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\1\6\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\1\1\1\uffff\4\1\2\uffff\4\1\3\uffff\2\1\10\uffff\1\1\4\uffff\1\1\3\uffff\1\1\11\uffff\6\1\27\uffff\3\1\2\uffff\2\1\3\uffff\4\1",
            "\1\uffff",
            "\1\1\1\uffff\1\1\13\uffff\1\1\15\uffff\1\17\45\uffff\14\1\46\uffff\6\1\3\uffff\2\1",
            "\1\20",
            "\1\1\1\21\5\1\12\uffff\1\1\11\uffff\1\1\60\uffff\1\1\4\uffff\1\1\10\uffff\1\1\4\uffff\1\1\3\uffff\1\1\46\uffff\1\1\1\uffff\1\1",
            "",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\22\12\1\1\16\5\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\23\12\1\1\24\5\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\1\25",
            "\1\26",
            "\1\1\1\27\5\1\12\uffff\1\1\11\uffff\1\1\60\uffff\1\1\4\uffff\1\1\10\uffff\1\1\4\uffff\1\1\3\uffff\1\1\46\uffff\1\1\1\uffff\1\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\30\12\1\1\16\5\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\31\12\1\1\24\5\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\32\12\1\1\24\5\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\1\33",
            "\1\34",
            "\1\35",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\36\12\1\1\16\5\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\37\12\1\1\24\5\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\40\12\1\1\24\5\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\1\41",
            "\1\42",
            "\1\43",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\44\12\1\1\16\5\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\45\12\1\1\24\5\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\46\12\1\1\24\5\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\1\uffff",
            "\1\47",
            "\1\50",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\51\12\1\1\24\5\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\52\12\1\1\24\5\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\1\uffff",
            "\1\53",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\54\12\1\1\24\5\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\1\uffff"
    };
    static final short[] dfa_290 = DFA.unpackEncodedString(dfa_290s);
    static final char[] dfa_291 = DFA.unpackEncodedStringToUnsignedChars(dfa_291s);
    static final char[] dfa_292 = DFA.unpackEncodedStringToUnsignedChars(dfa_292s);
    static final short[] dfa_293 = DFA.unpackEncodedString(dfa_293s);
    static final short[] dfa_294 = DFA.unpackEncodedString(dfa_294s);
    static final short[][] dfa_295 = unpackEncodedStringArray(dfa_295s);

    class DFA428 extends DFA {

        public DFA428(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 428;
            this.eot = dfa_35;
            this.eof = dfa_290;
            this.min = dfa_291;
            this.max = dfa_292;
            this.accept = dfa_293;
            this.special = dfa_294;
            this.transition = dfa_295;
        }
        public String getDescription() {
            return "15101:2: (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA428_11 = input.LA(1);

                         
                        int index428_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred482_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index428_11);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA428_44 = input.LA(1);

                         
                        int index428_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred482_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index428_44);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA428_36 = input.LA(1);

                         
                        int index428_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred482_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index428_36);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA428_41 = input.LA(1);

                         
                        int index428_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred482_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index428_41);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 428, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_296s = "\3\uffff\1\1\4\uffff\2\1";
    static final String dfa_297s = "\1\12\1\uffff\1\5\1\4\2\5\1\6\1\uffff\2\4";
    static final String dfa_298s = "\1\147\1\uffff\1\5\1\147\2\5\1\6\1\uffff\2\147";
    static final String dfa_299s = "\1\uffff\1\1\5\uffff\1\2\2\uffff";
    static final String[] dfa_300s = {
            "\1\1\134\uffff\1\2",
            "",
            "\1\3",
            "\2\1\4\uffff\1\1\12\uffff\1\7\16\uffff\1\1\56\uffff\1\4\12\uffff\1\5\7\uffff\1\6\1\1",
            "\1\10",
            "\1\10",
            "\1\11",
            "",
            "\2\1\4\uffff\1\1\12\uffff\1\7\16\uffff\1\1\56\uffff\1\4\12\uffff\1\5\7\uffff\1\6\1\1",
            "\2\1\4\uffff\1\1\12\uffff\1\7\16\uffff\1\1\102\uffff\1\1"
    };
    static final short[] dfa_296 = DFA.unpackEncodedString(dfa_296s);
    static final char[] dfa_297 = DFA.unpackEncodedStringToUnsignedChars(dfa_297s);
    static final char[] dfa_298 = DFA.unpackEncodedStringToUnsignedChars(dfa_298s);
    static final short[] dfa_299 = DFA.unpackEncodedString(dfa_299s);
    static final short[][] dfa_300 = unpackEncodedStringArray(dfa_300s);

    class DFA429 extends DFA {

        public DFA429(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 429;
            this.eot = dfa_172;
            this.eof = dfa_296;
            this.min = dfa_297;
            this.max = dfa_298;
            this.accept = dfa_299;
            this.special = dfa_288;
            this.transition = dfa_300;
        }
        public String getDescription() {
            return "15143:2: (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )";
        }
    }
    static final String dfa_301s = "\2\uffff\1\7\5\uffff\2\7";
    static final String[] dfa_302s = {
            "\1\1",
            "\1\2",
            "\4\6\1\uffff\1\6\1\7\6\uffff\2\7\100\uffff\1\3\12\uffff\1\4\7\uffff\1\5\1\7",
            "\1\10",
            "\1\10\2\6",
            "\1\7\1\11",
            "",
            "",
            "\4\6\1\uffff\1\6\1\7\6\uffff\2\7\100\uffff\1\3\12\uffff\1\4\7\uffff\1\5\1\7",
            "\4\6\1\uffff\1\6\1\7\6\uffff\2\7\113\uffff\1\6\7\uffff\2\7"
    };
    static final short[] dfa_301 = DFA.unpackEncodedString(dfa_301s);
    static final short[][] dfa_302 = unpackEncodedStringArray(dfa_302s);

    class DFA431 extends DFA {

        public DFA431(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 431;
            this.eot = dfa_172;
            this.eof = dfa_301;
            this.min = dfa_285;
            this.max = dfa_286;
            this.accept = dfa_287;
            this.special = dfa_288;
            this.transition = dfa_302;
        }
        public String getDescription() {
            return "15251:2: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )";
        }
    }
    static final String dfa_303s = "\1\12\1\uffff\1\5\1\4\2\5\1\6\2\uffff\2\4";
    static final String dfa_304s = "\1\147\1\uffff\1\5\1\146\1\5\1\7\1\6\2\uffff\1\146\1\136";
    static final String dfa_305s = "\1\uffff\1\1\5\uffff\1\3\1\2\2\uffff";
    static final String dfa_306s = "\13\uffff}>";
    static final String[] dfa_307s = {
            "\1\1\134\uffff\1\2",
            "",
            "\1\3",
            "\4\10\1\uffff\1\10\32\uffff\1\7\56\uffff\1\4\12\uffff\1\5\7\uffff\1\6",
            "\1\11",
            "\1\11\2\10",
            "\1\12",
            "",
            "",
            "\4\10\1\uffff\1\10\32\uffff\1\7\56\uffff\1\4\12\uffff\1\5\7\uffff\1\6",
            "\4\10\1\uffff\1\10\32\uffff\1\7\71\uffff\1\10"
    };
    static final char[] dfa_303 = DFA.unpackEncodedStringToUnsignedChars(dfa_303s);
    static final char[] dfa_304 = DFA.unpackEncodedStringToUnsignedChars(dfa_304s);
    static final short[] dfa_305 = DFA.unpackEncodedString(dfa_305s);
    static final short[] dfa_306 = DFA.unpackEncodedString(dfa_306s);
    static final short[][] dfa_307 = unpackEncodedStringArray(dfa_307s);

    class DFA432 extends DFA {

        public DFA432(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 432;
            this.eot = dfa_42;
            this.eof = dfa_42;
            this.min = dfa_303;
            this.max = dfa_304;
            this.accept = dfa_305;
            this.special = dfa_306;
            this.transition = dfa_307;
        }
        public String getDescription() {
            return "15293:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation )";
        }
    }
    static final String dfa_308s = "\3\uffff\1\10\6\uffff\2\10";
    static final String dfa_309s = "\1\12\1\uffff\1\5\1\4\2\5\1\6\3\uffff\2\4";
    static final String dfa_310s = "\1\147\1\uffff\1\5\1\155\2\5\1\6\3\uffff\2\155";
    static final String dfa_311s = "\1\uffff\1\1\5\uffff\1\3\1\4\1\2\2\uffff";
    static final String[] dfa_312s = {
            "\1\1\134\uffff\1\2",
            "",
            "\1\3",
            "\2\11\3\uffff\1\11\1\10\31\uffff\1\7\1\uffff\1\10\2\uffff\1\10\22\uffff\1\10\7\uffff\1\10\16\uffff\1\4\12\uffff\1\5\7\uffff\1\6\7\10",
            "\1\12",
            "\1\12",
            "\1\13",
            "",
            "",
            "",
            "\2\11\3\uffff\1\11\1\10\31\uffff\1\7\1\uffff\1\10\2\uffff\1\10\22\uffff\1\10\7\uffff\1\10\16\uffff\1\4\12\uffff\1\5\7\uffff\1\6\7\10",
            "\2\11\3\uffff\1\11\1\10\31\uffff\1\7\1\uffff\1\10\2\uffff\1\10\22\uffff\1\10\7\uffff\1\10\42\uffff\7\10"
    };
    static final short[] dfa_308 = DFA.unpackEncodedString(dfa_308s);
    static final char[] dfa_309 = DFA.unpackEncodedStringToUnsignedChars(dfa_309s);
    static final char[] dfa_310 = DFA.unpackEncodedStringToUnsignedChars(dfa_310s);
    static final short[] dfa_311 = DFA.unpackEncodedString(dfa_311s);
    static final short[][] dfa_312 = unpackEncodedStringArray(dfa_312s);

    class DFA433 extends DFA {

        public DFA433(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 433;
            this.eot = dfa_13;
            this.eof = dfa_308;
            this.min = dfa_309;
            this.max = dfa_310;
            this.accept = dfa_311;
            this.special = dfa_88;
            this.transition = dfa_312;
        }
        public String getDescription() {
            return "15347:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )";
        }
    }
    static final String dfa_313s = "\3\uffff\1\7\6\uffff\2\7";
    static final String dfa_314s = "\1\147\1\uffff\1\5\1\147\2\5\1\6\3\uffff\2\147";
    static final String dfa_315s = "\1\uffff\1\1\5\uffff\1\4\1\3\1\2\2\uffff";
    static final String[] dfa_316s = {
            "\1\1\134\uffff\1\2",
            "",
            "\1\3",
            "\1\11\1\7\4\uffff\1\7\31\uffff\1\10\56\uffff\1\4\12\uffff\1\5\7\uffff\1\6\1\7",
            "\1\12",
            "\1\12",
            "\1\13",
            "",
            "",
            "",
            "\1\11\1\7\4\uffff\1\7\31\uffff\1\10\56\uffff\1\4\12\uffff\1\5\7\uffff\1\6\1\7",
            "\1\11\1\7\4\uffff\1\7\31\uffff\1\10\102\uffff\1\7"
    };
    static final short[] dfa_313 = DFA.unpackEncodedString(dfa_313s);
    static final char[] dfa_314 = DFA.unpackEncodedStringToUnsignedChars(dfa_314s);
    static final short[] dfa_315 = DFA.unpackEncodedString(dfa_315s);
    static final short[][] dfa_316 = unpackEncodedStringArray(dfa_316s);

    class DFA434 extends DFA {

        public DFA434(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 434;
            this.eot = dfa_13;
            this.eof = dfa_313;
            this.min = dfa_309;
            this.max = dfa_314;
            this.accept = dfa_315;
            this.special = dfa_88;
            this.transition = dfa_316;
        }
        public String getDescription() {
            return "15413:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )";
        }
    }
    static final String dfa_317s = "\116\uffff";
    static final String dfa_318s = "\1\1\115\uffff";
    static final String dfa_319s = "\1\4\55\uffff\1\0\37\uffff";
    static final String dfa_320s = "\1\u009b\55\uffff\1\0\37\uffff";
    static final String dfa_321s = "\1\uffff\1\2\113\uffff\1\1";
    static final String dfa_322s = "\56\uffff\1\0\37\uffff}>";
    static final String[] dfa_323s = {
            "\7\1\6\uffff\5\1\1\uffff\7\1\1\uffff\1\1\1\uffff\1\1\2\uffff\3\1\2\uffff\1\1\3\uffff\6\1\11\uffff\7\1\1\uffff\2\1\1\uffff\4\1\2\uffff\4\1\2\uffff\1\115\2\1\10\uffff\1\56\4\uffff\1\1\2\uffff\10\1\3\uffff\6\1\27\uffff\3\1\2\uffff\2\1\3\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_317 = DFA.unpackEncodedString(dfa_317s);
    static final short[] dfa_318 = DFA.unpackEncodedString(dfa_318s);
    static final char[] dfa_319 = DFA.unpackEncodedStringToUnsignedChars(dfa_319s);
    static final char[] dfa_320 = DFA.unpackEncodedStringToUnsignedChars(dfa_320s);
    static final short[] dfa_321 = DFA.unpackEncodedString(dfa_321s);
    static final short[] dfa_322 = DFA.unpackEncodedString(dfa_322s);
    static final short[][] dfa_323 = unpackEncodedStringArray(dfa_323s);

    class DFA446 extends DFA {

        public DFA446(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 446;
            this.eot = dfa_317;
            this.eof = dfa_318;
            this.min = dfa_319;
            this.max = dfa_320;
            this.accept = dfa_321;
            this.special = dfa_322;
            this.transition = dfa_323;
        }
        public String getDescription() {
            return "()* loopback of 16469:3: ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA446_46 = input.LA(1);

                         
                        int index446_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred511_InternalSCTX()) ) {s = 77;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index446_46);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 446, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA528 extends DFA {

        public DFA528(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 528;
            this.eot = dfa_72;
            this.eof = dfa_72;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_101;
        }
        public String getDescription() {
            return "()* loopback of 5932:5: ( (lv_declarations_3_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA528_1 = input.LA(1);

                         
                        int index528_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred221_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index528_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA528_2 = input.LA(1);

                         
                        int index528_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred221_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index528_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 528, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    
    private static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000060402L,0x000000C000000000L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000040402L,0x0000008000000000L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000040400L,0x0000008000000000L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000280010L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000280000L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000300000L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0xFFD260002FC00400L,0x007E3C800001C027L,0x0000000007180000L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x1FD260000FC00400L,0x00003C8000000000L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000400000L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0002600001400400L,0x0000008000000000L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x000000000F800400L,0x0000008000000000L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x000000000F000000L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x000000000E000000L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x000000000C000000L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000008000000L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000024030280412L,0x00003F8000000010L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000024030280402L,0x00003F8000000010L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000040000020L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000024020000402L,0x00003F8000000010L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000024000000422L,0x00003F8000000010L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000020300000L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000200020L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000024000000402L,0x00003F8000000010L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0002600001000402L,0x0000008000000000L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000080000002L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x00000006802007F0L,0x0000008840210000L,0x000000000001C000L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000100100000L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000100000000L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000400000000L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000800000002L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000001000000002L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000002000000000L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000020000002L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000024000000400L,0x00003F8000000010L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x00000002802007F0L,0x0000008840210000L,0x000000000001C000L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x000003C000000400L,0x00003F8000000010L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000080L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000034000000400L,0x00003F8000000010L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000200520L,0x0000008000310000L,0x0000000000014000L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000064000000400L,0x00003F8000000010L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000180000000002L,0x0001C00000000000L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000100000000002L,0x0001C00000000000L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000100000000002L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x000000000F800402L,0x0000008000000000L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000600001000400L,0x0000008000000000L});
        public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000400001000000L});
        public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000400000000000L});
        public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0001800030200030L});
        public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0001800030200010L});
        public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0001800030200000L});
        public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000800020000002L});
        public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0001000000000000L});
        public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000060L,0x0000000000000000L,0x0000000000014000L});
        public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000820000002L});
        public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000022L});
        public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0001000820200000L});
        public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0001000020200000L});
        public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0001000000200020L});
        public static final BitSet FOLLOW_64 = new BitSet(new long[]{0xFFD260002F800400L,0x007E3C800001C027L,0x0000000007180000L});
        public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x1FD260000F800400L,0x00003C8000000000L});
        public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x000000000FC00400L,0x0000008000000000L});
        public static final BitSet FOLLOW_67 = new BitSet(new long[]{0xFFD000002F800402L,0x007E3C800001C027L,0x0000000007180000L});
        public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x1FD000000F800402L,0x00003C8000000000L});
        public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0002200000000400L,0x0000008000000000L});
        public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0002000000000000L});
        public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0005800020200030L});
        public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0005800020200010L});
        public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0005800020200000L});
        public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0005000820200000L});
        public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0005000020200000L});
        public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0005000000200020L});
        public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0001000000200000L});
        public static final BitSet FOLLOW_78 = new BitSet(new long[]{0xE008000020400420L,0x007E00800001C007L,0x0000000007194000L});
        public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0008000000400420L,0x0000008000000000L,0x0000000000014000L});
        public static final BitSet FOLLOW_80 = new BitSet(new long[]{0xE008000020000422L,0x007E00800001C007L,0x0000000007194000L});
        public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0008000000000422L,0x0000008000000000L,0x0000000000014000L});
        public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000420L,0x0000008000000000L,0x0000000000014000L});
        public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000520L,0x0000008000310000L,0x0000000000014000L});
        public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000124000000002L});
        public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0020120000000002L});
        public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000120000000002L});
        public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000140000000002L});
        public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0040000000000000L});
        public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000128000000002L});
        public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0300000000000000L});
        public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0200000000000000L});
        public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000104000000002L});
        public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000108000000002L});
        public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x1000000000000400L,0x00003C8000000000L});
        public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x00000000802007F0L,0x0000008840210000L,0x0000000000014000L});
        public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000200400L,0x0000008000000000L});
        public static final BitSet FOLLOW_98 = new BitSet(new long[]{0xE000804020600420L,0x007E00800001CB07L,0x0000000007194000L});
        public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000804000600420L,0x0000008000000B00L,0x0000000000014000L});
        public static final BitSet FOLLOW_100 = new BitSet(new long[]{0xE000000020000400L,0x007E00800001C007L,0x0000000007180000L});
        public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000200000L});
        public static final BitSet FOLLOW_102 = new BitSet(new long[]{0xE000000020400420L,0x007E00800001C00FL,0x000000000F180000L});
        public static final BitSet FOLLOW_103 = new BitSet(new long[]{0xE000000020400420L,0x007E00800001C007L,0x000000000F180000L});
        public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000C22L,0x0000008000000000L});
        public static final BitSet FOLLOW_105 = new BitSet(new long[]{0xE000000020400400L,0x007E00800001C007L,0x0000000007180000L});
        public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000100802L});
        public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000000000420L,0x0000008000000000L});
        public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000200010L});
        public static final BitSet FOLLOW_109 = new BitSet(new long[]{0xE000000028800400L,0x007E00800001C007L,0x0000000007180000L});
        public static final BitSet FOLLOW_110 = new BitSet(new long[]{0xE000000028C00400L,0x007E00800001C007L,0x0000000007180000L});
        public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000008800400L,0x0000008000000000L});
        public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000004000000412L,0x0000008000000010L});
        public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000004000000402L,0x0000008000000010L});
        public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000004000000400L,0x0000008000000010L});
        public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0001000000000000L,0x0000000000000010L});
        public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000010L});
        public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000000400L,0x0000008000000020L,0x0000000007000000L});
        public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
        public static final BitSet FOLLOW_119 = new BitSet(new long[]{0xE000000020000420L,0x007E00800001C007L,0x000000000F180000L});
        public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000080000000L,0x0000000000000040L});
        public static final BitSet FOLLOW_121 = new BitSet(new long[]{0xE000000000000400L,0x007E008000004007L,0x0000000007000000L});
        public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000020200002L});
        public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000000000200022L});
        public static final BitSet FOLLOW_124 = new BitSet(new long[]{0xE000804020600C20L,0x007E00800001CB07L,0x0000000007194000L});
        public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000000000000400L,0x0000008000000080L});
        public static final BitSet FOLLOW_126 = new BitSet(new long[]{0xE001804020200422L,0x007E00800001CB07L,0x0000000007194000L});
        public static final BitSet FOLLOW_127 = new BitSet(new long[]{0xE000804020200422L,0x007E00800001CB07L,0x0000000007194000L});
        public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000804000200422L,0x0000008000000B00L,0x0000000000014000L});
        public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000000000400L,0x0000008000000100L});
        public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000040000000002L});
        public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x0000000000000000L,0xFE00000000020000L,0x000000000000003FL});
        public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0000040020000002L});
        public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000040000000022L});
        public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x00000000000000C0L});
        public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000000000000400L,0x0000008000000200L});
        public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0000004000000400L,0x0000008000000000L});
        public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x00000000802007F0L,0x0000008800210000L,0x0000000000014000L});
        public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0000040000000402L,0x0000008000000400L});
        public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0000000000000400L,0x0000008000000400L});
        public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x0000000080000000L});
        public static final BitSet FOLLOW_141 = new BitSet(new long[]{0xE0000406802007F0L,0x007E008840214007L,0x000000000701C000L});
        public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x0000040000000000L});
        public static final BitSet FOLLOW_143 = new BitSet(new long[]{0x00000007802007F0L,0x0000008840210000L,0x000000000001C000L});
        public static final BitSet FOLLOW_144 = new BitSet(new long[]{0x0000040020200000L});
        public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x0000040000200020L});
        public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x0000000000000802L});
        public static final BitSet FOLLOW_147 = new BitSet(new long[]{0xE000000020200522L,0x007E00800031F007L,0x0000000007194000L});
        public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x0000000000200522L,0x0000008000313000L,0x0000000000014000L});
        public static final BitSet FOLLOW_149 = new BitSet(new long[]{0x0000000000000002L,0x0000000000001000L});
        public static final BitSet FOLLOW_150 = new BitSet(new long[]{0xE000000020600520L,0x007E00800031F007L,0x0000000007194000L});
        public static final BitSet FOLLOW_151 = new BitSet(new long[]{0x0000000000600520L,0x0000008000313000L,0x0000000000014000L});
        public static final BitSet FOLLOW_152 = new BitSet(new long[]{0x0000000000400000L,0x0000000000001000L});
        public static final BitSet FOLLOW_153 = new BitSet(new long[]{0x0000000000000400L,0x0000008000002000L});
        public static final BitSet FOLLOW_154 = new BitSet(new long[]{0x0000000000000000L,0x007E000000004000L});
        public static final BitSet FOLLOW_155 = new BitSet(new long[]{0x0000040000100000L});
        public static final BitSet FOLLOW_156 = new BitSet(new long[]{0x0000040000000420L,0x0000008000000000L});
        public static final BitSet FOLLOW_157 = new BitSet(new long[]{0x0001000000000002L});
        public static final BitSet FOLLOW_158 = new BitSet(new long[]{0x0000000000000400L,0x0000008000018000L,0x0000000007000000L});
        public static final BitSet FOLLOW_159 = new BitSet(new long[]{0x0000000000000000L,0x0000000000018000L});
        public static final BitSet FOLLOW_160 = new BitSet(new long[]{0x0000000000000410L,0x0000008000000000L});
        public static final BitSet FOLLOW_161 = new BitSet(new long[]{0x0000000000100420L,0x0000008000000000L});
        public static final BitSet FOLLOW_162 = new BitSet(new long[]{0x0000000020000400L,0x0000008000000000L,0x0000000007000000L});
        public static final BitSet FOLLOW_163 = new BitSet(new long[]{0x0000000020000000L});
        public static final BitSet FOLLOW_164 = new BitSet(new long[]{0x0000000000200430L,0x0000008000000001L});
        public static final BitSet FOLLOW_165 = new BitSet(new long[]{0x0000000000200420L,0x0000008000000001L});
        public static final BitSet FOLLOW_166 = new BitSet(new long[]{0x0000000000000000L,0x0180000000000000L});
        public static final BitSet FOLLOW_167 = new BitSet(new long[]{0x0000000000200420L,0x0000008000000000L});
        public static final BitSet FOLLOW_168 = new BitSet(new long[]{0x0000000000500000L});
        public static final BitSet FOLLOW_169 = new BitSet(new long[]{0x0000101000000002L,0x0000000000060000L});
        public static final BitSet FOLLOW_170 = new BitSet(new long[]{0x0000100000000002L,0x0000000000040000L});
        public static final BitSet FOLLOW_171 = new BitSet(new long[]{0x0000000400000000L,0x00000000A1000004L,0x0000000000E00000L});
        public static final BitSet FOLLOW_172 = new BitSet(new long[]{0x0000000000000500L,0x0000008000000000L});
        public static final BitSet FOLLOW_173 = new BitSet(new long[]{0x0000001080000000L,0x0000000000080040L});
        public static final BitSet FOLLOW_174 = new BitSet(new long[]{0x0000000000000020L,0x0000000000000000L,0x0000000000014000L});
        public static final BitSet FOLLOW_175 = new BitSet(new long[]{0x0000000000000400L,0x0000008000010000L});
        public static final BitSet FOLLOW_176 = new BitSet(new long[]{0x0000000000000400L,0x0000008000100000L});
        public static final BitSet FOLLOW_177 = new BitSet(new long[]{0x0000000000000400L,0x0000008000200000L});
        public static final BitSet FOLLOW_178 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L});
        public static final BitSet FOLLOW_179 = new BitSet(new long[]{0x0000000000000002L,0x0000000000800000L});
        public static final BitSet FOLLOW_180 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
        public static final BitSet FOLLOW_181 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
        public static final BitSet FOLLOW_182 = new BitSet(new long[]{0x0000000400000002L});
        public static final BitSet FOLLOW_183 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000003F00L});
        public static final BitSet FOLLOW_184 = new BitSet(new long[]{0x0000000000000002L,0x000000001C000000L});
        public static final BitSet FOLLOW_185 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
        public static final BitSet FOLLOW_186 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
        public static final BitSet FOLLOW_187 = new BitSet(new long[]{0x0000000000000002L,0x0000000060000000L});
        public static final BitSet FOLLOW_188 = new BitSet(new long[]{0x0000000000000002L,0x0000000380000000L});
        public static final BitSet FOLLOW_189 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
        public static final BitSet FOLLOW_190 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
        public static final BitSet FOLLOW_191 = new BitSet(new long[]{0x0000000000000002L,0x0000000400000000L});
        public static final BitSet FOLLOW_192 = new BitSet(new long[]{0x0000001000000002L,0x0000000000080000L});
        public static final BitSet FOLLOW_193 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_194 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000040L});
        public static final BitSet FOLLOW_195 = new BitSet(new long[]{0x00000002802007F0L,0x0000009840210000L,0x000000000001C000L});
        public static final BitSet FOLLOW_196 = new BitSet(new long[]{0x0000000000400010L});
        public static final BitSet FOLLOW_197 = new BitSet(new long[]{0x00000010002002D0L,0x0000002000000000L});
        public static final BitSet FOLLOW_198 = new BitSet(new long[]{0x00000030002002D0L,0x0000002000000000L});
        public static final BitSet FOLLOW_199 = new BitSet(new long[]{0x0000002000100000L});
        public static final BitSet FOLLOW_200 = new BitSet(new long[]{0x00000000000002F0L,0x0000000040000000L});
        public static final BitSet FOLLOW_201 = new BitSet(new long[]{0x0000000000100002L});
        public static final BitSet FOLLOW_202 = new BitSet(new long[]{0x0000000000000230L});
        public static final BitSet FOLLOW_203 = new BitSet(new long[]{0x0000001000000000L});
        public static final BitSet FOLLOW_204 = new BitSet(new long[]{0x0000000000000002L,0x0000004040080000L});
    }


}