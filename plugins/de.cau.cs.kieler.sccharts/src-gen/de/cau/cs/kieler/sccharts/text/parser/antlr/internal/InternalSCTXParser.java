package de.cau.cs.kieler.sccharts.text.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.cau.cs.kieler.sccharts.text.services.SCTXGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalSCTXParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
<<<<<<< HEAD
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_STRING", "RULE_ID", "RULE_INT", "RULE_FLOAT", "RULE_HOSTCODE", "RULE_BOOLEAN", "RULE_COMMENT_ANNOTATION", "RULE_SL_COMMENT_ANNOTATION", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_NUMBER", "RULE_WS", "RULE_ANY_OTHER", "'import'", "'scchart'", "'extends'", "','", "'{'", "'}'", "'initial'", "'final'", "'violation'", "'connector'", "'state'", "'is'", "'schedule'", "'super.'", "'('", "')'", "'!'", "'&'", "'to'", "'['", "']'", "'if'", "'Pr='", "'nondeterministic'", "'do'", "';'", "'deferred'", "'label'", "'override'", "'region'", "'for'", "':'", "'dataflow'", "'once'", "'emit'", "'entry'", "'Pr'", "'during'", "'exit'", "'weak'", "'suspend'", "'preceding'", "'succeeding'", "'period'", "'const'", "'input'", "'output'", "'global'", "'static'", "'host'", "'policy'", "'go to'", "'method'", "'()'", "'module'", "'goto'", "'return'", "'else'", "'while'", "'scope'", "'expression'", "'signal'", "'ref'", "'extern'", "'='", "'combine'", "'.'", "'print'", "'randomize'", "'||'", "'&&'", "'|'", "'^'", "'<<'", "'>>'", "'>>>'", "'+'", "'-'", "'*'", "'/'", "'%'", "'->'", "'fby'", "'implies'", "'\\''", "'random'", "'_'", "'null'", "'#'", "'@'", "'abort to'", "'join to'", "'undefined'", "'delayed'", "'immediate'", "'auto'", "'reset'", "'shallow history'", "'history'", "'pure'", "'bool'", "'int'", "'float'", "'string'", "'clock'", "'conflicting'", "'commuting'", "'+='", "'-='", "'*='", "'/='", "'%='", "'&='", "'|='", "'^='", "'<<='", "'>>='", "'>>>='", "'min='", "'max='", "'++'", "'--'", "'=='", "'<'", "'<='", "'>'", "'>='", "'!='", "'pre'", "'~'", "'val'", "'?'", "'nor'", "'struct'", "'class'", "'none'", "'max'", "'min'", "'public'", "'protected'", "'private'", "'void'"
=======
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_STRING", "RULE_ID", "RULE_INT", "RULE_FLOAT", "RULE_HOSTCODE", "RULE_BOOLEAN", "RULE_COMMENT_ANNOTATION", "RULE_SL_COMMENT_ANNOTATION", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_NUMBER", "RULE_WS", "RULE_ANY_OTHER", "'import'", "'scchart'", "'extends'", "','", "'{'", "'}'", "'initial'", "'final'", "'violation'", "'connector'", "'state'", "'is'", "'schedule'", "'super.'", "'('", "')'", "'!'", "'&'", "'to'", "'['", "']'", "'if'", "'Pr='", "'nondeterministic'", "'do'", "';'", "'deferred'", "'label'", "'override'", "'region'", "'for'", "':'", "'dataflow'", "'once'", "'entry'", "'Pr'", "'during'", "'exit'", "'weak'", "'suspend'", "'preceding'", "'succeeding'", "'period'", "'const'", "'input'", "'output'", "'global'", "'static'", "'host'", "'policy'", "'go to'", "'method'", "'()'", "'module'", "'goto'", "'return'", "'else'", "'while'", "'scope'", "'expression'", "'signal'", "'ref'", "'extern'", "'='", "'combine'", "'.'", "'print'", "'randomize'", "'||'", "'&&'", "'|'", "'^'", "'<<'", "'>>'", "'>>>'", "'+'", "'-'", "'*'", "'/'", "'%'", "'\\''", "'random'", "'_'", "'null'", "'#'", "'@'", "'abort to'", "'join to'", "'undefined'", "'delayed'", "'immediate'", "'auto'", "'reset'", "'shallow history'", "'history'", "'pure'", "'bool'", "'int'", "'float'", "'string'", "'clock'", "'conflicting'", "'commuting'", "'+='", "'-='", "'*='", "'/='", "'%='", "'&='", "'|='", "'^='", "'<<='", "'>>='", "'>>>='", "'min='", "'max='", "'++'", "'--'", "'=='", "'<'", "'<='", "'>'", "'>='", "'!='", "'pre'", "'~'", "'val'", "'?'", "'->'", "'struct'", "'class'", "'none'", "'max'", "'min'", "'public'", "'protected'", "'private'", "'void'"
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    };
    public static final int T__144=144;
    public static final int T__143=143;
    public static final int T__146=146;
    public static final int T__50=50;
    public static final int T__145=145;
    public static final int T__140=140;
    public static final int T__142=142;
    public static final int T__141=141;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__133=133;
    public static final int T__132=132;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int RULE_ID=5;
    public static final int T__131=131;
    public static final int T__130=130;
    public static final int RULE_INT=6;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=12;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int RULE_COMMENT_ANNOTATION=10;
    public static final int T__37=37;
    public static final int RULE_SL_COMMENT_ANNOTATION=11;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__158=158;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__154=154;
    public static final int T__157=157;
    public static final int T__156=156;
    public static final int T__151=151;
    public static final int T__150=150;
    public static final int T__153=153;
    public static final int T__152=152;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int RULE_FLOAT=7;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__148=148;
    public static final int T__41=41;
    public static final int T__147=147;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__149=149;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int RULE_BOOLEAN=9;
    public static final int T__19=19;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__26=26;
    public static final int RULE_HOSTCODE=8;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__122=122;
    public static final int T__70=70;
    public static final int T__121=121;
    public static final int T__71=71;
    public static final int T__124=124;
    public static final int T__72=72;
    public static final int T__123=123;
    public static final int T__120=120;
    public static final int RULE_STRING=4;
    public static final int RULE_SL_COMMENT=13;
    public static final int T__77=77;
    public static final int T__119=119;
    public static final int T__78=78;
    public static final int T__118=118;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__117=117;
    public static final int T__76=76;
    public static final int T__116=116;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=15;
    public static final int RULE_ANY_OTHER=16;
    public static final int RULE_NUMBER=14;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalSCTXParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSCTXParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSCTXParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSCTX.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private SCTXGrammarAccess grammarAccess;

        public InternalSCTXParser(TokenStream input, SCTXGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "SCCharts";
       	}

       	@Override
       	protected SCTXGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleSCCharts"
    // InternalSCTX.g:71:1: entryRuleSCCharts returns [EObject current=null] : iv_ruleSCCharts= ruleSCCharts EOF ;
    public final EObject entryRuleSCCharts() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSCCharts = null;


        try {
            // InternalSCTX.g:71:49: (iv_ruleSCCharts= ruleSCCharts EOF )
            // InternalSCTX.g:72:2: iv_ruleSCCharts= ruleSCCharts EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSCChartsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSCCharts=ruleSCCharts();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSCCharts; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSCCharts"


    // $ANTLR start "ruleSCCharts"
    // InternalSCTX.g:78:1: ruleSCCharts returns [EObject current=null] : ( ( ( (lv_pragmas_0_0= rulePragma ) ) | (otherlv_1= 'import' ( (lv_imports_2_0= ruleEString ) ) ) )* ( (lv_rootStates_3_0= ruleRootState ) )* ) ;
    public final EObject ruleSCCharts() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pragmas_0_0 = null;

        AntlrDatatypeRuleToken lv_imports_2_0 = null;

        EObject lv_rootStates_3_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:84:2: ( ( ( ( (lv_pragmas_0_0= rulePragma ) ) | (otherlv_1= 'import' ( (lv_imports_2_0= ruleEString ) ) ) )* ( (lv_rootStates_3_0= ruleRootState ) )* ) )
            // InternalSCTX.g:85:2: ( ( ( (lv_pragmas_0_0= rulePragma ) ) | (otherlv_1= 'import' ( (lv_imports_2_0= ruleEString ) ) ) )* ( (lv_rootStates_3_0= ruleRootState ) )* )
            {
            // InternalSCTX.g:85:2: ( ( ( (lv_pragmas_0_0= rulePragma ) ) | (otherlv_1= 'import' ( (lv_imports_2_0= ruleEString ) ) ) )* ( (lv_rootStates_3_0= ruleRootState ) )* )
            // InternalSCTX.g:86:3: ( ( (lv_pragmas_0_0= rulePragma ) ) | (otherlv_1= 'import' ( (lv_imports_2_0= ruleEString ) ) ) )* ( (lv_rootStates_3_0= ruleRootState ) )*
            {
            // InternalSCTX.g:86:3: ( ( (lv_pragmas_0_0= rulePragma ) ) | (otherlv_1= 'import' ( (lv_imports_2_0= ruleEString ) ) ) )*
            loop1:
            do {
                int alt1=3;
                int LA1_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA1_0==105) ) {
=======
                if ( (LA1_0==101) ) {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    alt1=1;
                }
                else if ( (LA1_0==17) ) {
                    alt1=2;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalSCTX.g:87:4: ( (lv_pragmas_0_0= rulePragma ) )
            	    {
            	    // InternalSCTX.g:87:4: ( (lv_pragmas_0_0= rulePragma ) )
            	    // InternalSCTX.g:88:5: (lv_pragmas_0_0= rulePragma )
            	    {
            	    // InternalSCTX.g:88:5: (lv_pragmas_0_0= rulePragma )
            	    // InternalSCTX.g:89:6: lv_pragmas_0_0= rulePragma
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSCChartsAccess().getPragmasPragmaParserRuleCall_0_0_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    lv_pragmas_0_0=rulePragma();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSCChartsRule());
            	      						}
            	      						add(
            	      							current,
            	      							"pragmas",
            	      							lv_pragmas_0_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Pragma");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalSCTX.g:107:4: (otherlv_1= 'import' ( (lv_imports_2_0= ruleEString ) ) )
            	    {
            	    // InternalSCTX.g:107:4: (otherlv_1= 'import' ( (lv_imports_2_0= ruleEString ) ) )
            	    // InternalSCTX.g:108:5: otherlv_1= 'import' ( (lv_imports_2_0= ruleEString ) )
            	    {
            	    otherlv_1=(Token)match(input,17,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_1, grammarAccess.getSCChartsAccess().getImportKeyword_0_1_0());
            	      				
            	    }
            	    // InternalSCTX.g:112:5: ( (lv_imports_2_0= ruleEString ) )
            	    // InternalSCTX.g:113:6: (lv_imports_2_0= ruleEString )
            	    {
            	    // InternalSCTX.g:113:6: (lv_imports_2_0= ruleEString )
            	    // InternalSCTX.g:114:7: lv_imports_2_0= ruleEString
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getSCChartsAccess().getImportsEStringParserRuleCall_0_1_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    lv_imports_2_0=ruleEString();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getSCChartsRule());
            	      							}
            	      							add(
            	      								current,
            	      								"imports",
            	      								lv_imports_2_0,
            	      								"de.cau.cs.kieler.annotations.Annotations.EString");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            // InternalSCTX.g:133:3: ( (lv_rootStates_3_0= ruleRootState ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA2_0==RULE_COMMENT_ANNOTATION||LA2_0==18||LA2_0==106) ) {
=======
                if ( (LA2_0==RULE_COMMENT_ANNOTATION||LA2_0==18||LA2_0==102) ) {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalSCTX.g:134:4: (lv_rootStates_3_0= ruleRootState )
            	    {
            	    // InternalSCTX.g:134:4: (lv_rootStates_3_0= ruleRootState )
            	    // InternalSCTX.g:135:5: lv_rootStates_3_0= ruleRootState
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSCChartsAccess().getRootStatesRootStateParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_5);
            	    lv_rootStates_3_0=ruleRootState();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSCChartsRule());
            	      					}
            	      					add(
            	      						current,
            	      						"rootStates",
            	      						lv_rootStates_3_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.RootState");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSCCharts"


    // $ANTLR start "entryRuleRootState"
    // InternalSCTX.g:156:1: entryRuleRootState returns [EObject current=null] : iv_ruleRootState= ruleRootState EOF ;
    public final EObject entryRuleRootState() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRootState = null;


        try {
            // InternalSCTX.g:156:50: (iv_ruleRootState= ruleRootState EOF )
            // InternalSCTX.g:157:2: iv_ruleRootState= ruleRootState EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRootStateRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRootState=ruleRootState();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRootState; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRootState"


    // $ANTLR start "ruleRootState"
    // InternalSCTX.g:163:1: ruleRootState returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'scchart' ( (lv_name_2_0= ruleExtendedID ) ) ( (lv_label_3_0= RULE_STRING ) )? (otherlv_4= 'extends' ( (otherlv_5= RULE_ID ) ) (otherlv_6= ',' ( (otherlv_7= RULE_ID ) ) )* )? otherlv_8= '{' ( (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_10_0= ruleLocalAction ) )* ( ( (lv_regions_11_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_12_0= ruleRegion ) )* ) otherlv_13= '}' ) ;
    public final EObject ruleRootState() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_label_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_13=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_declarations_9_0 = null;

        EObject lv_actions_10_0 = null;

        EObject lv_regions_11_0 = null;

        EObject lv_regions_12_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:169:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'scchart' ( (lv_name_2_0= ruleExtendedID ) ) ( (lv_label_3_0= RULE_STRING ) )? (otherlv_4= 'extends' ( (otherlv_5= RULE_ID ) ) (otherlv_6= ',' ( (otherlv_7= RULE_ID ) ) )* )? otherlv_8= '{' ( (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_10_0= ruleLocalAction ) )* ( ( (lv_regions_11_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_12_0= ruleRegion ) )* ) otherlv_13= '}' ) )
            // InternalSCTX.g:170:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'scchart' ( (lv_name_2_0= ruleExtendedID ) ) ( (lv_label_3_0= RULE_STRING ) )? (otherlv_4= 'extends' ( (otherlv_5= RULE_ID ) ) (otherlv_6= ',' ( (otherlv_7= RULE_ID ) ) )* )? otherlv_8= '{' ( (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_10_0= ruleLocalAction ) )* ( ( (lv_regions_11_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_12_0= ruleRegion ) )* ) otherlv_13= '}' )
            {
            // InternalSCTX.g:170:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'scchart' ( (lv_name_2_0= ruleExtendedID ) ) ( (lv_label_3_0= RULE_STRING ) )? (otherlv_4= 'extends' ( (otherlv_5= RULE_ID ) ) (otherlv_6= ',' ( (otherlv_7= RULE_ID ) ) )* )? otherlv_8= '{' ( (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_10_0= ruleLocalAction ) )* ( ( (lv_regions_11_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_12_0= ruleRegion ) )* ) otherlv_13= '}' )
            // InternalSCTX.g:171:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'scchart' ( (lv_name_2_0= ruleExtendedID ) ) ( (lv_label_3_0= RULE_STRING ) )? (otherlv_4= 'extends' ( (otherlv_5= RULE_ID ) ) (otherlv_6= ',' ( (otherlv_7= RULE_ID ) ) )* )? otherlv_8= '{' ( (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_10_0= ruleLocalAction ) )* ( ( (lv_regions_11_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_12_0= ruleRegion ) )* ) otherlv_13= '}'
            {
            // InternalSCTX.g:171:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA3_0==RULE_COMMENT_ANNOTATION||LA3_0==106) ) {
=======
                if ( (LA3_0==RULE_COMMENT_ANNOTATION||LA3_0==102) ) {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // InternalSCTX.g:172:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:172:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:173:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRootStateAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_6);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRootStateRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);

            otherlv_1=(Token)match(input,18,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getRootStateAccess().getScchartKeyword_1());
              		
            }
            // InternalSCTX.g:194:3: ( (lv_name_2_0= ruleExtendedID ) )
            // InternalSCTX.g:195:4: (lv_name_2_0= ruleExtendedID )
            {
            // InternalSCTX.g:195:4: (lv_name_2_0= ruleExtendedID )
            // InternalSCTX.g:196:5: lv_name_2_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRootStateAccess().getNameExtendedIDParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_7);
            lv_name_2_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRootStateRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:213:3: ( (lv_label_3_0= RULE_STRING ) )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==RULE_STRING) ) {
                alt4=1;
            }
            switch (alt4) {
                case 1 :
                    // InternalSCTX.g:214:4: (lv_label_3_0= RULE_STRING )
                    {
                    // InternalSCTX.g:214:4: (lv_label_3_0= RULE_STRING )
                    // InternalSCTX.g:215:5: lv_label_3_0= RULE_STRING
                    {
                    lv_label_3_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_3_0, grammarAccess.getRootStateAccess().getLabelSTRINGTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getRootStateRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_3_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:231:3: (otherlv_4= 'extends' ( (otherlv_5= RULE_ID ) ) (otherlv_6= ',' ( (otherlv_7= RULE_ID ) ) )* )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==19) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // InternalSCTX.g:232:4: otherlv_4= 'extends' ( (otherlv_5= RULE_ID ) ) (otherlv_6= ',' ( (otherlv_7= RULE_ID ) ) )*
                    {
                    otherlv_4=(Token)match(input,19,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getRootStateAccess().getExtendsKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:236:4: ( (otherlv_5= RULE_ID ) )
                    // InternalSCTX.g:237:5: (otherlv_5= RULE_ID )
                    {
                    // InternalSCTX.g:237:5: (otherlv_5= RULE_ID )
                    // InternalSCTX.g:238:6: otherlv_5= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRootStateRule());
                      						}
                      					
                    }
                    otherlv_5=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_5, grammarAccess.getRootStateAccess().getBaseStatesStateCrossReference_4_1_0());
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:252:4: (otherlv_6= ',' ( (otherlv_7= RULE_ID ) ) )*
                    loop5:
                    do {
                        int alt5=2;
                        int LA5_0 = input.LA(1);

                        if ( (LA5_0==20) ) {
                            alt5=1;
                        }


                        switch (alt5) {
                    	case 1 :
                    	    // InternalSCTX.g:253:5: otherlv_6= ',' ( (otherlv_7= RULE_ID ) )
                    	    {
                    	    otherlv_6=(Token)match(input,20,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_6, grammarAccess.getRootStateAccess().getCommaKeyword_4_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:257:5: ( (otherlv_7= RULE_ID ) )
                    	    // InternalSCTX.g:258:6: (otherlv_7= RULE_ID )
                    	    {
                    	    // InternalSCTX.g:258:6: (otherlv_7= RULE_ID )
                    	    // InternalSCTX.g:259:7: otherlv_7= RULE_ID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							/* */
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getRootStateRule());
                    	      							}
                    	      						
                    	    }
                    	    otherlv_7=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_10); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_7, grammarAccess.getRootStateAccess().getBaseStatesStateCrossReference_4_2_1_0());
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop5;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_8=(Token)match(input,21,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getRootStateAccess().getLeftCurlyBracketKeyword_5());
              		
            }
            // InternalSCTX.g:279:3: ( (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )*
            loop7:
            do {
                int alt7=2;
                alt7 = dfa7.predict(input);
                switch (alt7) {
            	case 1 :
            	    // InternalSCTX.g:280:4: (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
            	    {
            	    // InternalSCTX.g:280:4: (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
            	    // InternalSCTX.g:281:5: lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRootStateAccess().getDeclarationsDeclarationOrMethodWithKeywordWOSemicolonParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_11);
            	    lv_declarations_9_0=ruleDeclarationOrMethodWithKeywordWOSemicolon();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRootStateRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_9_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.DeclarationOrMethodWithKeywordWOSemicolon");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop7;
                }
            } while (true);

            // InternalSCTX.g:298:3: ( (lv_actions_10_0= ruleLocalAction ) )*
            loop8:
            do {
                int alt8=2;
                alt8 = dfa8.predict(input);
                switch (alt8) {
            	case 1 :
            	    // InternalSCTX.g:299:4: (lv_actions_10_0= ruleLocalAction )
            	    {
            	    // InternalSCTX.g:299:4: (lv_actions_10_0= ruleLocalAction )
            	    // InternalSCTX.g:300:5: lv_actions_10_0= ruleLocalAction
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRootStateAccess().getActionsLocalActionParserRuleCall_7_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_12);
            	    lv_actions_10_0=ruleLocalAction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRootStateRule());
            	      					}
            	      					add(
            	      						current,
            	      						"actions",
            	      						lv_actions_10_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.LocalAction");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop8;
                }
            } while (true);

            // InternalSCTX.g:317:3: ( ( (lv_regions_11_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_12_0= ruleRegion ) )* )
            int alt10=2;
            alt10 = dfa10.predict(input);
            switch (alt10) {
                case 1 :
                    // InternalSCTX.g:318:4: ( (lv_regions_11_0= ruleImplicitControlflowRegion ) )
                    {
                    // InternalSCTX.g:318:4: ( (lv_regions_11_0= ruleImplicitControlflowRegion ) )
                    // InternalSCTX.g:319:5: (lv_regions_11_0= ruleImplicitControlflowRegion )
                    {
                    // InternalSCTX.g:319:5: (lv_regions_11_0= ruleImplicitControlflowRegion )
                    // InternalSCTX.g:320:6: lv_regions_11_0= ruleImplicitControlflowRegion
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRootStateAccess().getRegionsImplicitControlflowRegionParserRuleCall_8_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_13);
                    lv_regions_11_0=ruleImplicitControlflowRegion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRootStateRule());
                      						}
                      						add(
                      							current,
                      							"regions",
                      							lv_regions_11_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.ImplicitControlflowRegion");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:338:4: ( (lv_regions_12_0= ruleRegion ) )*
                    {
                    // InternalSCTX.g:338:4: ( (lv_regions_12_0= ruleRegion ) )*
                    loop9:
                    do {
                        int alt9=2;
                        int LA9_0 = input.LA(1);

<<<<<<< HEAD
                        if ( (LA9_0==RULE_COMMENT_ANNOTATION||LA9_0==24||(LA9_0>=45 && LA9_0<=46)||LA9_0==49||LA9_0==106) ) {
=======
                        if ( (LA9_0==RULE_COMMENT_ANNOTATION||LA9_0==24||(LA9_0>=45 && LA9_0<=46)||LA9_0==49||LA9_0==102) ) {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                            alt9=1;
                        }


                        switch (alt9) {
                    	case 1 :
                    	    // InternalSCTX.g:339:5: (lv_regions_12_0= ruleRegion )
                    	    {
                    	    // InternalSCTX.g:339:5: (lv_regions_12_0= ruleRegion )
                    	    // InternalSCTX.g:340:6: lv_regions_12_0= ruleRegion
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getRootStateAccess().getRegionsRegionParserRuleCall_8_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_14);
                    	    lv_regions_12_0=ruleRegion();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getRootStateRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"regions",
                    	      							lv_regions_12_0,
                    	      							"de.cau.cs.kieler.sccharts.text.SCTX.Region");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop9;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_13=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_13, grammarAccess.getRootStateAccess().getRightCurlyBracketKeyword_9());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRootState"


    // $ANTLR start "entryRuleState"
    // InternalSCTX.g:366:1: entryRuleState returns [EObject current=null] : iv_ruleState= ruleState EOF ;
    public final EObject entryRuleState() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleState = null;


        try {
            // InternalSCTX.g:366:46: (iv_ruleState= ruleState EOF )
            // InternalSCTX.g:367:2: iv_ruleState= ruleState EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStateRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleState=ruleState();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleState; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleState"


    // $ANTLR start "ruleState"
    // InternalSCTX.g:373:1: ruleState returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? ( (lv_final_2_0= 'final' ) )? ( (lv_violation_3_0= 'violation' ) )? ( (lv_connector_4_0= 'connector' ) )? ( ( 'state' )=>otherlv_5= 'state' ) ( (lv_name_6_0= RULE_ID ) ) ( (lv_label_7_0= RULE_STRING ) )? ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )* )? (otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+ )? otherlv_18= '{' ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_20_0= ruleLocalAction ) )* ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* ) otherlv_23= '}' ) )? ( (lv_outgoingTransitions_24_0= ruleTransition ) )* ) ;
    public final EObject ruleState() throws RecognitionException {
        EObject current = null;

        Token lv_initial_1_0=null;
        Token lv_final_2_0=null;
        Token lv_violation_3_0=null;
        Token lv_connector_4_0=null;
        Token otherlv_5=null;
        Token lv_name_6_0=null;
        Token lv_label_7_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_23=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_9_0 = null;

        EObject lv_schedule_11_0 = null;

        EObject lv_schedule_17_0 = null;

        EObject lv_declarations_19_0 = null;

        EObject lv_actions_20_0 = null;

        EObject lv_regions_21_0 = null;

        EObject lv_regions_22_0 = null;

        EObject lv_outgoingTransitions_24_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:379:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? ( (lv_final_2_0= 'final' ) )? ( (lv_violation_3_0= 'violation' ) )? ( (lv_connector_4_0= 'connector' ) )? ( ( 'state' )=>otherlv_5= 'state' ) ( (lv_name_6_0= RULE_ID ) ) ( (lv_label_7_0= RULE_STRING ) )? ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )* )? (otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+ )? otherlv_18= '{' ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_20_0= ruleLocalAction ) )* ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* ) otherlv_23= '}' ) )? ( (lv_outgoingTransitions_24_0= ruleTransition ) )* ) )
            // InternalSCTX.g:380:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? ( (lv_final_2_0= 'final' ) )? ( (lv_violation_3_0= 'violation' ) )? ( (lv_connector_4_0= 'connector' ) )? ( ( 'state' )=>otherlv_5= 'state' ) ( (lv_name_6_0= RULE_ID ) ) ( (lv_label_7_0= RULE_STRING ) )? ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )* )? (otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+ )? otherlv_18= '{' ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_20_0= ruleLocalAction ) )* ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* ) otherlv_23= '}' ) )? ( (lv_outgoingTransitions_24_0= ruleTransition ) )* )
            {
            // InternalSCTX.g:380:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? ( (lv_final_2_0= 'final' ) )? ( (lv_violation_3_0= 'violation' ) )? ( (lv_connector_4_0= 'connector' ) )? ( ( 'state' )=>otherlv_5= 'state' ) ( (lv_name_6_0= RULE_ID ) ) ( (lv_label_7_0= RULE_STRING ) )? ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )* )? (otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+ )? otherlv_18= '{' ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_20_0= ruleLocalAction ) )* ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* ) otherlv_23= '}' ) )? ( (lv_outgoingTransitions_24_0= ruleTransition ) )* )
            // InternalSCTX.g:381:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? ( (lv_final_2_0= 'final' ) )? ( (lv_violation_3_0= 'violation' ) )? ( (lv_connector_4_0= 'connector' ) )? ( ( 'state' )=>otherlv_5= 'state' ) ( (lv_name_6_0= RULE_ID ) ) ( (lv_label_7_0= RULE_STRING ) )? ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )* )? (otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+ )? otherlv_18= '{' ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_20_0= ruleLocalAction ) )* ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* ) otherlv_23= '}' ) )? ( (lv_outgoingTransitions_24_0= ruleTransition ) )*
            {
            // InternalSCTX.g:381:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop11:
            do {
                int alt11=2;
                int LA11_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA11_0==RULE_COMMENT_ANNOTATION||LA11_0==106) ) {
=======
                if ( (LA11_0==RULE_COMMENT_ANNOTATION||LA11_0==102) ) {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    alt11=1;
                }


                switch (alt11) {
            	case 1 :
            	    // InternalSCTX.g:382:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:382:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:383:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getStateAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_15);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getStateRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop11;
                }
            } while (true);

            // InternalSCTX.g:400:3: ( (lv_initial_1_0= 'initial' ) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==23) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalSCTX.g:401:4: (lv_initial_1_0= 'initial' )
                    {
                    // InternalSCTX.g:401:4: (lv_initial_1_0= 'initial' )
                    // InternalSCTX.g:402:5: lv_initial_1_0= 'initial'
                    {
                    lv_initial_1_0=(Token)match(input,23,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_initial_1_0, grammarAccess.getStateAccess().getInitialInitialKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStateRule());
                      					}
                      					setWithLastConsumed(current, "initial", true, "initial");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:414:3: ( (lv_final_2_0= 'final' ) )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==24) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // InternalSCTX.g:415:4: (lv_final_2_0= 'final' )
                    {
                    // InternalSCTX.g:415:4: (lv_final_2_0= 'final' )
                    // InternalSCTX.g:416:5: lv_final_2_0= 'final'
                    {
                    lv_final_2_0=(Token)match(input,24,FollowSets000.FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_final_2_0, grammarAccess.getStateAccess().getFinalFinalKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStateRule());
                      					}
                      					setWithLastConsumed(current, "final", true, "final");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:428:3: ( (lv_violation_3_0= 'violation' ) )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==25) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // InternalSCTX.g:429:4: (lv_violation_3_0= 'violation' )
                    {
                    // InternalSCTX.g:429:4: (lv_violation_3_0= 'violation' )
                    // InternalSCTX.g:430:5: lv_violation_3_0= 'violation'
                    {
                    lv_violation_3_0=(Token)match(input,25,FollowSets000.FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_violation_3_0, grammarAccess.getStateAccess().getViolationViolationKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStateRule());
                      					}
                      					setWithLastConsumed(current, "violation", true, "violation");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:442:3: ( (lv_connector_4_0= 'connector' ) )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==26) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // InternalSCTX.g:443:4: (lv_connector_4_0= 'connector' )
                    {
                    // InternalSCTX.g:443:4: (lv_connector_4_0= 'connector' )
                    // InternalSCTX.g:444:5: lv_connector_4_0= 'connector'
                    {
                    lv_connector_4_0=(Token)match(input,26,FollowSets000.FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_connector_4_0, grammarAccess.getStateAccess().getConnectorConnectorKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStateRule());
                      					}
                      					setWithLastConsumed(current, "connector", true, "connector");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:456:3: ( ( 'state' )=>otherlv_5= 'state' )
            // InternalSCTX.g:457:4: ( 'state' )=>otherlv_5= 'state'
            {
            otherlv_5=(Token)match(input,27,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_5, grammarAccess.getStateAccess().getStateKeyword_5());
              			
            }

            }

            // InternalSCTX.g:463:3: ( (lv_name_6_0= RULE_ID ) )
            // InternalSCTX.g:464:4: (lv_name_6_0= RULE_ID )
            {
            // InternalSCTX.g:464:4: (lv_name_6_0= RULE_ID )
            // InternalSCTX.g:465:5: lv_name_6_0= RULE_ID
            {
            lv_name_6_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_6_0, grammarAccess.getStateAccess().getNameIDTerminalRuleCall_6_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getStateRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_6_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalSCTX.g:481:3: ( (lv_label_7_0= RULE_STRING ) )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==RULE_STRING) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // InternalSCTX.g:482:4: (lv_label_7_0= RULE_STRING )
                    {
                    // InternalSCTX.g:482:4: (lv_label_7_0= RULE_STRING )
                    // InternalSCTX.g:483:5: lv_label_7_0= RULE_STRING
                    {
                    lv_label_7_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_7_0, grammarAccess.getStateAccess().getLabelSTRINGTerminalRuleCall_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStateRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_7_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:499:3: ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )* )? (otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+ )? otherlv_18= '{' ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_20_0= ruleLocalAction ) )* ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* ) otherlv_23= '}' ) )?
            int alt27=3;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==28) ) {
                alt27=1;
            }
            else if ( (LA27_0==19||LA27_0==21||LA27_0==29) ) {
                alt27=2;
            }
            switch (alt27) {
                case 1 :
                    // InternalSCTX.g:500:4: (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )? )
                    {
                    // InternalSCTX.g:500:4: (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )? )
                    // InternalSCTX.g:501:5: otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )?
                    {
                    otherlv_8=(Token)match(input,28,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getStateAccess().getIsKeyword_8_0_0());
                      				
                    }
                    // InternalSCTX.g:505:5: ( (lv_reference_9_0= ruleScopeCall ) )
                    // InternalSCTX.g:506:6: (lv_reference_9_0= ruleScopeCall )
                    {
                    // InternalSCTX.g:506:6: (lv_reference_9_0= ruleScopeCall )
                    // InternalSCTX.g:507:7: lv_reference_9_0= ruleScopeCall
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getStateAccess().getReferenceScopeCallParserRuleCall_8_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_23);
                    lv_reference_9_0=ruleScopeCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getStateRule());
                      							}
                      							set(
                      								current,
                      								"reference",
                      								lv_reference_9_0,
                      								"de.cau.cs.kieler.sccharts.text.SCTX.ScopeCall");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:524:5: (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )?
                    int alt18=2;
                    int LA18_0 = input.LA(1);

                    if ( (LA18_0==29) ) {
                        alt18=1;
                    }
                    switch (alt18) {
                        case 1 :
                            // InternalSCTX.g:525:6: otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+
                            {
                            otherlv_10=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getStateAccess().getScheduleKeyword_8_0_2_0());
                              					
                            }
                            // InternalSCTX.g:529:6: ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+
                            int cnt17=0;
                            loop17:
                            do {
                                int alt17=2;
                                int LA17_0 = input.LA(1);

                                if ( (LA17_0==RULE_ID) ) {
                                    alt17=1;
                                }


                                switch (alt17) {
                            	case 1 :
                            	    // InternalSCTX.g:530:7: (lv_schedule_11_0= ruleScheduleObjectReference )
                            	    {
                            	    // InternalSCTX.g:530:7: (lv_schedule_11_0= ruleScheduleObjectReference )
                            	    // InternalSCTX.g:531:8: lv_schedule_11_0= ruleScheduleObjectReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getStateAccess().getScheduleScheduleObjectReferenceParserRuleCall_8_0_2_1_0());
                            	      							
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_24);
                            	    lv_schedule_11_0=ruleScheduleObjectReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getStateRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"schedule",
                            	      									lv_schedule_11_0,
                            	      									"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt17 >= 1 ) break loop17;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(17, input);
                                        throw eee;
                                }
                                cnt17++;
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:551:4: ( (otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )* )? (otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+ )? otherlv_18= '{' ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_20_0= ruleLocalAction ) )* ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* ) otherlv_23= '}' )
                    {
                    // InternalSCTX.g:551:4: ( (otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )* )? (otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+ )? otherlv_18= '{' ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_20_0= ruleLocalAction ) )* ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* ) otherlv_23= '}' )
                    // InternalSCTX.g:552:5: (otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )* )? (otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+ )? otherlv_18= '{' ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_20_0= ruleLocalAction ) )* ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* ) otherlv_23= '}'
                    {
                    // InternalSCTX.g:552:5: (otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )* )?
                    int alt20=2;
                    int LA20_0 = input.LA(1);

                    if ( (LA20_0==19) ) {
                        alt20=1;
                    }
                    switch (alt20) {
                        case 1 :
                            // InternalSCTX.g:553:6: otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )*
                            {
                            otherlv_12=(Token)match(input,19,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_12, grammarAccess.getStateAccess().getExtendsKeyword_8_1_0_0());
                              					
                            }
                            // InternalSCTX.g:557:6: ( (otherlv_13= RULE_ID ) )
                            // InternalSCTX.g:558:7: (otherlv_13= RULE_ID )
                            {
                            // InternalSCTX.g:558:7: (otherlv_13= RULE_ID )
                            // InternalSCTX.g:559:8: otherlv_13= RULE_ID
                            {
                            if ( state.backtracking==0 ) {

                              								/* */
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getStateRule());
                              								}
                              							
                            }
                            otherlv_13=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(otherlv_13, grammarAccess.getStateAccess().getBaseStatesStateCrossReference_8_1_0_1_0());
                              							
                            }

                            }


                            }

                            // InternalSCTX.g:573:6: (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )*
                            loop19:
                            do {
                                int alt19=2;
                                int LA19_0 = input.LA(1);

                                if ( (LA19_0==20) ) {
                                    alt19=1;
                                }


                                switch (alt19) {
                            	case 1 :
                            	    // InternalSCTX.g:574:7: otherlv_14= ',' ( (otherlv_15= RULE_ID ) )
                            	    {
                            	    otherlv_14=(Token)match(input,20,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_14, grammarAccess.getStateAccess().getCommaKeyword_8_1_0_2_0());
                            	      						
                            	    }
                            	    // InternalSCTX.g:578:7: ( (otherlv_15= RULE_ID ) )
                            	    // InternalSCTX.g:579:8: (otherlv_15= RULE_ID )
                            	    {
                            	    // InternalSCTX.g:579:8: (otherlv_15= RULE_ID )
                            	    // InternalSCTX.g:580:9: otherlv_15= RULE_ID
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									/* */
                            	      								
                            	    }
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElement(grammarAccess.getStateRule());
                            	      									}
                            	      								
                            	    }
                            	    otherlv_15=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_25); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									newLeafNode(otherlv_15, grammarAccess.getStateAccess().getBaseStatesStateCrossReference_8_1_0_2_1_0());
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop19;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalSCTX.g:596:5: (otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+ )?
                    int alt22=2;
                    int LA22_0 = input.LA(1);

                    if ( (LA22_0==29) ) {
                        alt22=1;
                    }
                    switch (alt22) {
                        case 1 :
                            // InternalSCTX.g:597:6: otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+
                            {
                            otherlv_16=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_16, grammarAccess.getStateAccess().getScheduleKeyword_8_1_1_0());
                              					
                            }
                            // InternalSCTX.g:601:6: ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+
                            int cnt21=0;
                            loop21:
                            do {
                                int alt21=2;
                                int LA21_0 = input.LA(1);

                                if ( (LA21_0==RULE_ID) ) {
                                    alt21=1;
                                }


                                switch (alt21) {
                            	case 1 :
                            	    // InternalSCTX.g:602:7: (lv_schedule_17_0= ruleScheduleObjectReference )
                            	    {
                            	    // InternalSCTX.g:602:7: (lv_schedule_17_0= ruleScheduleObjectReference )
                            	    // InternalSCTX.g:603:8: lv_schedule_17_0= ruleScheduleObjectReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getStateAccess().getScheduleScheduleObjectReferenceParserRuleCall_8_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_26);
                            	    lv_schedule_17_0=ruleScheduleObjectReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getStateRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"schedule",
                            	      									lv_schedule_17_0,
                            	      									"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt21 >= 1 ) break loop21;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(21, input);
                                        throw eee;
                                }
                                cnt21++;
                            } while (true);


                            }
                            break;

                    }

                    otherlv_18=(Token)match(input,21,FollowSets000.FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_18, grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_8_1_2());
                      				
                    }
                    // InternalSCTX.g:625:5: ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )*
                    loop23:
                    do {
                        int alt23=2;
                        alt23 = dfa23.predict(input);
                        switch (alt23) {
                    	case 1 :
                    	    // InternalSCTX.g:626:6: (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
                    	    {
                    	    // InternalSCTX.g:626:6: (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
                    	    // InternalSCTX.g:627:7: lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getStateAccess().getDeclarationsDeclarationOrMethodWithKeywordWOSemicolonParserRuleCall_8_1_3_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_11);
                    	    lv_declarations_19_0=ruleDeclarationOrMethodWithKeywordWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getStateRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_19_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.DeclarationOrMethodWithKeywordWOSemicolon");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop23;
                        }
                    } while (true);

                    // InternalSCTX.g:644:5: ( (lv_actions_20_0= ruleLocalAction ) )*
                    loop24:
                    do {
                        int alt24=2;
                        alt24 = dfa24.predict(input);
                        switch (alt24) {
                    	case 1 :
                    	    // InternalSCTX.g:645:6: (lv_actions_20_0= ruleLocalAction )
                    	    {
                    	    // InternalSCTX.g:645:6: (lv_actions_20_0= ruleLocalAction )
                    	    // InternalSCTX.g:646:7: lv_actions_20_0= ruleLocalAction
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getStateAccess().getActionsLocalActionParserRuleCall_8_1_4_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_12);
                    	    lv_actions_20_0=ruleLocalAction();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getStateRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"actions",
                    	      								lv_actions_20_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.LocalAction");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop24;
                        }
                    } while (true);

                    // InternalSCTX.g:663:5: ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* )
                    int alt26=2;
                    alt26 = dfa26.predict(input);
                    switch (alt26) {
                        case 1 :
                            // InternalSCTX.g:664:6: ( (lv_regions_21_0= ruleImplicitControlflowRegion ) )
                            {
                            // InternalSCTX.g:664:6: ( (lv_regions_21_0= ruleImplicitControlflowRegion ) )
                            // InternalSCTX.g:665:7: (lv_regions_21_0= ruleImplicitControlflowRegion )
                            {
                            // InternalSCTX.g:665:7: (lv_regions_21_0= ruleImplicitControlflowRegion )
                            // InternalSCTX.g:666:8: lv_regions_21_0= ruleImplicitControlflowRegion
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getStateAccess().getRegionsImplicitControlflowRegionParserRuleCall_8_1_5_0_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_13);
                            lv_regions_21_0=ruleImplicitControlflowRegion();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getStateRule());
                              								}
                              								add(
                              									current,
                              									"regions",
                              									lv_regions_21_0,
                              									"de.cau.cs.kieler.sccharts.text.SCTX.ImplicitControlflowRegion");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:684:6: ( (lv_regions_22_0= ruleRegion ) )*
                            {
                            // InternalSCTX.g:684:6: ( (lv_regions_22_0= ruleRegion ) )*
                            loop25:
                            do {
                                int alt25=2;
                                int LA25_0 = input.LA(1);

<<<<<<< HEAD
                                if ( (LA25_0==RULE_COMMENT_ANNOTATION||LA25_0==24||(LA25_0>=45 && LA25_0<=46)||LA25_0==49||LA25_0==106) ) {
=======
                                if ( (LA25_0==RULE_COMMENT_ANNOTATION||LA25_0==24||(LA25_0>=45 && LA25_0<=46)||LA25_0==49||LA25_0==102) ) {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                                    alt25=1;
                                }


                                switch (alt25) {
                            	case 1 :
                            	    // InternalSCTX.g:685:7: (lv_regions_22_0= ruleRegion )
                            	    {
                            	    // InternalSCTX.g:685:7: (lv_regions_22_0= ruleRegion )
                            	    // InternalSCTX.g:686:8: lv_regions_22_0= ruleRegion
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getStateAccess().getRegionsRegionParserRuleCall_8_1_5_1_0());
                            	      							
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_14);
                            	    lv_regions_22_0=ruleRegion();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getStateRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"regions",
                            	      									lv_regions_22_0,
                            	      									"de.cau.cs.kieler.sccharts.text.SCTX.Region");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop25;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_23=(Token)match(input,22,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_23, grammarAccess.getStateAccess().getRightCurlyBracketKeyword_8_1_6());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:710:3: ( (lv_outgoingTransitions_24_0= ruleTransition ) )*
            loop28:
            do {
                int alt28=2;
                alt28 = dfa28.predict(input);
                switch (alt28) {
            	case 1 :
            	    // InternalSCTX.g:711:4: (lv_outgoingTransitions_24_0= ruleTransition )
            	    {
            	    // InternalSCTX.g:711:4: (lv_outgoingTransitions_24_0= ruleTransition )
            	    // InternalSCTX.g:712:5: lv_outgoingTransitions_24_0= ruleTransition
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getStateAccess().getOutgoingTransitionsTransitionParserRuleCall_9_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_27);
            	    lv_outgoingTransitions_24_0=ruleTransition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getStateRule());
            	      					}
            	      					add(
            	      						current,
            	      						"outgoingTransitions",
            	      						lv_outgoingTransitions_24_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Transition");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop28;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleState"


    // $ANTLR start "entryRuleImplicitState"
    // InternalSCTX.g:733:1: entryRuleImplicitState returns [EObject current=null] : iv_ruleImplicitState= ruleImplicitState EOF ;
    public final EObject entryRuleImplicitState() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImplicitState = null;


        try {
            // InternalSCTX.g:733:54: (iv_ruleImplicitState= ruleImplicitState EOF )
            // InternalSCTX.g:734:2: iv_ruleImplicitState= ruleImplicitState EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImplicitStateRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleImplicitState=ruleImplicitState();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImplicitState; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImplicitState"


    // $ANTLR start "ruleImplicitState"
    // InternalSCTX.g:740:1: ruleImplicitState returns [EObject current=null] : ( () ( (lv_regions_1_0= ruleRegion ) )+ ) ;
    public final EObject ruleImplicitState() throws RecognitionException {
        EObject current = null;

        EObject lv_regions_1_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:746:2: ( ( () ( (lv_regions_1_0= ruleRegion ) )+ ) )
            // InternalSCTX.g:747:2: ( () ( (lv_regions_1_0= ruleRegion ) )+ )
            {
            // InternalSCTX.g:747:2: ( () ( (lv_regions_1_0= ruleRegion ) )+ )
            // InternalSCTX.g:748:3: () ( (lv_regions_1_0= ruleRegion ) )+
            {
            // InternalSCTX.g:748:3: ()
            // InternalSCTX.g:749:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getImplicitStateAccess().getStateAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:758:3: ( (lv_regions_1_0= ruleRegion ) )+
            int cnt29=0;
            loop29:
            do {
                int alt29=2;
                int LA29_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA29_0==RULE_COMMENT_ANNOTATION||LA29_0==24||(LA29_0>=45 && LA29_0<=46)||LA29_0==49||LA29_0==106) ) {
=======
                if ( (LA29_0==RULE_COMMENT_ANNOTATION||LA29_0==24||(LA29_0>=45 && LA29_0<=46)||LA29_0==49||LA29_0==102) ) {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    alt29=1;
                }


                switch (alt29) {
            	case 1 :
            	    // InternalSCTX.g:759:4: (lv_regions_1_0= ruleRegion )
            	    {
            	    // InternalSCTX.g:759:4: (lv_regions_1_0= ruleRegion )
            	    // InternalSCTX.g:760:5: lv_regions_1_0= ruleRegion
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getImplicitStateAccess().getRegionsRegionParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_28);
            	    lv_regions_1_0=ruleRegion();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getImplicitStateRule());
            	      					}
            	      					add(
            	      						current,
            	      						"regions",
            	      						lv_regions_1_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Region");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt29 >= 1 ) break loop29;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(29, input);
                        throw eee;
                }
                cnt29++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImplicitState"


    // $ANTLR start "entryRuleScopeCall"
    // InternalSCTX.g:781:1: entryRuleScopeCall returns [EObject current=null] : iv_ruleScopeCall= ruleScopeCall EOF ;
    public final EObject entryRuleScopeCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScopeCall = null;


        try {
            // InternalSCTX.g:781:50: (iv_ruleScopeCall= ruleScopeCall EOF )
            // InternalSCTX.g:782:2: iv_ruleScopeCall= ruleScopeCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScopeCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScopeCall=ruleScopeCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScopeCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScopeCall"


    // $ANTLR start "ruleScopeCall"
    // InternalSCTX.g:788:1: ruleScopeCall returns [EObject current=null] : ( ( (lv_super_0_0= 'super.' ) )? ( (otherlv_1= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleScopeParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) ) )* otherlv_6= ')' ) | (otherlv_7= '(' otherlv_8= ')' ) )? ) ;
    public final EObject ruleScopeCall() throws RecognitionException {
        EObject current = null;

        Token lv_super_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:794:2: ( ( ( (lv_super_0_0= 'super.' ) )? ( (otherlv_1= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleScopeParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) ) )* otherlv_6= ')' ) | (otherlv_7= '(' otherlv_8= ')' ) )? ) )
            // InternalSCTX.g:795:2: ( ( (lv_super_0_0= 'super.' ) )? ( (otherlv_1= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleScopeParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) ) )* otherlv_6= ')' ) | (otherlv_7= '(' otherlv_8= ')' ) )? )
            {
            // InternalSCTX.g:795:2: ( ( (lv_super_0_0= 'super.' ) )? ( (otherlv_1= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleScopeParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) ) )* otherlv_6= ')' ) | (otherlv_7= '(' otherlv_8= ')' ) )? )
            // InternalSCTX.g:796:3: ( (lv_super_0_0= 'super.' ) )? ( (otherlv_1= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleScopeParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) ) )* otherlv_6= ')' ) | (otherlv_7= '(' otherlv_8= ')' ) )?
            {
            // InternalSCTX.g:796:3: ( (lv_super_0_0= 'super.' ) )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==30) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // InternalSCTX.g:797:4: (lv_super_0_0= 'super.' )
                    {
                    // InternalSCTX.g:797:4: (lv_super_0_0= 'super.' )
                    // InternalSCTX.g:798:5: lv_super_0_0= 'super.'
                    {
                    lv_super_0_0=(Token)match(input,30,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_super_0_0, grammarAccess.getScopeCallAccess().getSuperSuperKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getScopeCallRule());
                      					}
                      					setWithLastConsumed(current, "super", true, "super.");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:810:3: ( (otherlv_1= RULE_ID ) )
            // InternalSCTX.g:811:4: (otherlv_1= RULE_ID )
            {
            // InternalSCTX.g:811:4: (otherlv_1= RULE_ID )
            // InternalSCTX.g:812:5: otherlv_1= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getScopeCallRule());
              					}
              				
            }
            otherlv_1=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getScopeCallAccess().getScopeScopeCrossReference_1_0());
              				
            }

            }


            }

            // InternalSCTX.g:826:3: ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleScopeParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) ) )* otherlv_6= ')' ) | (otherlv_7= '(' otherlv_8= ')' ) )?
            int alt32=3;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==31) ) {
                int LA32_1 = input.LA(2);

                if ( (LA32_1==32) ) {
                    alt32=2;
                }
<<<<<<< HEAD
                else if ( ((LA32_1>=RULE_STRING && LA32_1<=RULE_COMMENT_ANNOTATION)||LA32_1==21||LA32_1==31||(LA32_1>=33 && LA32_1<=34)||LA32_1==80||LA32_1==85||LA32_1==94||LA32_1==102||(LA32_1>=105 && LA32_1<=106)||(LA32_1>=145 && LA32_1<=147)||LA32_1==149) ) {
=======
                else if ( ((LA32_1>=RULE_STRING && LA32_1<=RULE_COMMENT_ANNOTATION)||LA32_1==21||LA32_1==31||(LA32_1>=33 && LA32_1<=34)||LA32_1==79||LA32_1==84||LA32_1==93||LA32_1==98||LA32_1==102||(LA32_1>=141 && LA32_1<=143)) ) {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    alt32=1;
                }
            }
            switch (alt32) {
                case 1 :
                    // InternalSCTX.g:827:4: (otherlv_2= '(' ( (lv_parameters_3_0= ruleScopeParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) ) )* otherlv_6= ')' )
                    {
                    // InternalSCTX.g:827:4: (otherlv_2= '(' ( (lv_parameters_3_0= ruleScopeParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) ) )* otherlv_6= ')' )
                    // InternalSCTX.g:828:5: otherlv_2= '(' ( (lv_parameters_3_0= ruleScopeParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) ) )* otherlv_6= ')'
                    {
                    otherlv_2=(Token)match(input,31,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getScopeCallAccess().getLeftParenthesisKeyword_2_0_0());
                      				
                    }
                    // InternalSCTX.g:832:5: ( (lv_parameters_3_0= ruleScopeParameter ) )
                    // InternalSCTX.g:833:6: (lv_parameters_3_0= ruleScopeParameter )
                    {
                    // InternalSCTX.g:833:6: (lv_parameters_3_0= ruleScopeParameter )
                    // InternalSCTX.g:834:7: lv_parameters_3_0= ruleScopeParameter
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getScopeCallAccess().getParametersScopeParameterParserRuleCall_2_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_parameters_3_0=ruleScopeParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getScopeCallRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_3_0,
                      								"de.cau.cs.kieler.sccharts.text.SCTX.ScopeParameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:851:5: (otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) ) )*
                    loop31:
                    do {
                        int alt31=2;
                        int LA31_0 = input.LA(1);

                        if ( (LA31_0==20) ) {
                            alt31=1;
                        }


                        switch (alt31) {
                    	case 1 :
                    	    // InternalSCTX.g:852:6: otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) )
                    	    {
                    	    otherlv_4=(Token)match(input,20,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getScopeCallAccess().getCommaKeyword_2_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCTX.g:856:6: ( (lv_parameters_5_0= ruleScopeParameter ) )
                    	    // InternalSCTX.g:857:7: (lv_parameters_5_0= ruleScopeParameter )
                    	    {
                    	    // InternalSCTX.g:857:7: (lv_parameters_5_0= ruleScopeParameter )
                    	    // InternalSCTX.g:858:8: lv_parameters_5_0= ruleScopeParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getScopeCallAccess().getParametersScopeParameterParserRuleCall_2_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_31);
                    	    lv_parameters_5_0=ruleScopeParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getScopeCallRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_5_0,
                    	      									"de.cau.cs.kieler.sccharts.text.SCTX.ScopeParameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop31;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getScopeCallAccess().getRightParenthesisKeyword_2_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:882:4: (otherlv_7= '(' otherlv_8= ')' )
                    {
                    // InternalSCTX.g:882:4: (otherlv_7= '(' otherlv_8= ')' )
                    // InternalSCTX.g:883:5: otherlv_7= '(' otherlv_8= ')'
                    {
                    otherlv_7=(Token)match(input,31,FollowSets000.FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getScopeCallAccess().getLeftParenthesisKeyword_2_1_0());
                      				
                    }
                    otherlv_8=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getScopeCallAccess().getRightParenthesisKeyword_2_1_1());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScopeCall"


    // $ANTLR start "entryRuleScopeParameter"
    // InternalSCTX.g:897:1: entryRuleScopeParameter returns [EObject current=null] : iv_ruleScopeParameter= ruleScopeParameter EOF ;
    public final EObject entryRuleScopeParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScopeParameter = null;


        try {
            // InternalSCTX.g:897:55: (iv_ruleScopeParameter= ruleScopeParameter EOF )
            // InternalSCTX.g:898:2: iv_ruleScopeParameter= ruleScopeParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScopeParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScopeParameter=ruleScopeParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScopeParameter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScopeParameter"


    // $ANTLR start "ruleScopeParameter"
    // InternalSCTX.g:904:1: ruleScopeParameter returns [EObject current=null] : ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? ) ;
    public final EObject ruleScopeParameter() throws RecognitionException {
        EObject current = null;

        Token lv_pureOutput_0_0=null;
        Token lv_callByReference_1_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_expression_2_0 = null;

        EObject lv_explicitBindingIndices_6_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:910:2: ( ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? ) )
            // InternalSCTX.g:911:2: ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? )
            {
            // InternalSCTX.g:911:2: ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? )
            // InternalSCTX.g:912:3: ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )?
            {
            // InternalSCTX.g:912:3: ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==33) ) {
                int LA34_1 = input.LA(2);

                if ( (LA34_1==34) ) {
                    alt34=1;
                }
            }
            else if ( (LA34_0==34) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // InternalSCTX.g:913:4: ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) )
                    {
                    // InternalSCTX.g:913:4: ( (lv_pureOutput_0_0= '!' ) )?
                    int alt33=2;
                    int LA33_0 = input.LA(1);

                    if ( (LA33_0==33) ) {
                        alt33=1;
                    }
                    switch (alt33) {
                        case 1 :
                            // InternalSCTX.g:914:5: (lv_pureOutput_0_0= '!' )
                            {
                            // InternalSCTX.g:914:5: (lv_pureOutput_0_0= '!' )
                            // InternalSCTX.g:915:6: lv_pureOutput_0_0= '!'
                            {
                            lv_pureOutput_0_0=(Token)match(input,33,FollowSets000.FOLLOW_33); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_pureOutput_0_0, grammarAccess.getScopeParameterAccess().getPureOutputExclamationMarkKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getScopeParameterRule());
                              						}
                              						setWithLastConsumed(current, "pureOutput", true, "!");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:927:4: ( (lv_callByReference_1_0= '&' ) )
                    // InternalSCTX.g:928:5: (lv_callByReference_1_0= '&' )
                    {
                    // InternalSCTX.g:928:5: (lv_callByReference_1_0= '&' )
                    // InternalSCTX.g:929:6: lv_callByReference_1_0= '&'
                    {
                    lv_callByReference_1_0=(Token)match(input,34,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_callByReference_1_0, grammarAccess.getScopeParameterAccess().getCallByReferenceAmpersandKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getScopeParameterRule());
                      						}
                      						setWithLastConsumed(current, "callByReference", true, "&");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:942:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalSCTX.g:943:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalSCTX.g:943:4: (lv_expression_2_0= ruleExpression )
            // InternalSCTX.g:944:5: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScopeParameterAccess().getExpressionExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_34);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getScopeParameterRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:961:3: (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==35) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalSCTX.g:962:4: otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )*
                    {
                    otherlv_3=(Token)match(input,35,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getScopeParameterAccess().getToKeyword_2_0());
                      			
                    }
                    // InternalSCTX.g:966:4: ( (otherlv_4= RULE_ID ) )
                    // InternalSCTX.g:967:5: (otherlv_4= RULE_ID )
                    {
                    // InternalSCTX.g:967:5: (otherlv_4= RULE_ID )
                    // InternalSCTX.g:968:6: otherlv_4= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getScopeParameterRule());
                      						}
                      					
                    }
                    otherlv_4=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_4, grammarAccess.getScopeParameterAccess().getExplicitBindingValuedObjectCrossReference_2_1_0());
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:982:4: (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )*
                    loop35:
                    do {
                        int alt35=2;
                        int LA35_0 = input.LA(1);

                        if ( (LA35_0==36) ) {
                            alt35=1;
                        }


                        switch (alt35) {
                    	case 1 :
                    	    // InternalSCTX.g:983:5: otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']'
                    	    {
                    	    otherlv_5=(Token)match(input,36,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getScopeParameterAccess().getLeftSquareBracketKeyword_2_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:987:5: ( (lv_explicitBindingIndices_6_0= ruleExpression ) )
                    	    // InternalSCTX.g:988:6: (lv_explicitBindingIndices_6_0= ruleExpression )
                    	    {
                    	    // InternalSCTX.g:988:6: (lv_explicitBindingIndices_6_0= ruleExpression )
                    	    // InternalSCTX.g:989:7: lv_explicitBindingIndices_6_0= ruleExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getScopeParameterAccess().getExplicitBindingIndicesExpressionParserRuleCall_2_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_36);
                    	    lv_explicitBindingIndices_6_0=ruleExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getScopeParameterRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"explicitBindingIndices",
                    	      								lv_explicitBindingIndices_6_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    otherlv_7=(Token)match(input,37,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_7, grammarAccess.getScopeParameterAccess().getRightSquareBracketKeyword_2_2_2());
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop35;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScopeParameter"


    // $ANTLR start "entryRuleBoolScheduleExpression"
    // InternalSCTX.g:1016:1: entryRuleBoolScheduleExpression returns [EObject current=null] : iv_ruleBoolScheduleExpression= ruleBoolScheduleExpression EOF ;
    public final EObject entryRuleBoolScheduleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBoolScheduleExpression = null;


        try {
            // InternalSCTX.g:1016:63: (iv_ruleBoolScheduleExpression= ruleBoolScheduleExpression EOF )
            // InternalSCTX.g:1017:2: iv_ruleBoolScheduleExpression= ruleBoolScheduleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBoolScheduleExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBoolScheduleExpression=ruleBoolScheduleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBoolScheduleExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBoolScheduleExpression"


    // $ANTLR start "ruleBoolScheduleExpression"
    // InternalSCTX.g:1023:1: ruleBoolScheduleExpression returns [EObject current=null] : (this_LogicalOrExpression_0= ruleLogicalOrExpression (otherlv_1= 'schedule' ( (lv_schedule_2_0= ruleScheduleObjectReference ) ) )? ) ;
    public final EObject ruleBoolScheduleExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_LogicalOrExpression_0 = null;

        EObject lv_schedule_2_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:1029:2: ( (this_LogicalOrExpression_0= ruleLogicalOrExpression (otherlv_1= 'schedule' ( (lv_schedule_2_0= ruleScheduleObjectReference ) ) )? ) )
            // InternalSCTX.g:1030:2: (this_LogicalOrExpression_0= ruleLogicalOrExpression (otherlv_1= 'schedule' ( (lv_schedule_2_0= ruleScheduleObjectReference ) ) )? )
            {
            // InternalSCTX.g:1030:2: (this_LogicalOrExpression_0= ruleLogicalOrExpression (otherlv_1= 'schedule' ( (lv_schedule_2_0= ruleScheduleObjectReference ) ) )? )
            // InternalSCTX.g:1031:3: this_LogicalOrExpression_0= ruleLogicalOrExpression (otherlv_1= 'schedule' ( (lv_schedule_2_0= ruleScheduleObjectReference ) ) )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBoolScheduleExpressionAccess().getLogicalOrExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_37);
            this_LogicalOrExpression_0=ruleLogicalOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LogicalOrExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:1042:3: (otherlv_1= 'schedule' ( (lv_schedule_2_0= ruleScheduleObjectReference ) ) )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==29) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // InternalSCTX.g:1043:4: otherlv_1= 'schedule' ( (lv_schedule_2_0= ruleScheduleObjectReference ) )
                    {
                    otherlv_1=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getBoolScheduleExpressionAccess().getScheduleKeyword_1_0());
                      			
                    }
                    // InternalSCTX.g:1047:4: ( (lv_schedule_2_0= ruleScheduleObjectReference ) )
                    // InternalSCTX.g:1048:5: (lv_schedule_2_0= ruleScheduleObjectReference )
                    {
                    // InternalSCTX.g:1048:5: (lv_schedule_2_0= ruleScheduleObjectReference )
                    // InternalSCTX.g:1049:6: lv_schedule_2_0= ruleScheduleObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBoolScheduleExpressionAccess().getScheduleScheduleObjectReferenceParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_schedule_2_0=ruleScheduleObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBoolScheduleExpressionRule());
                      						}
                      						add(
                      							current,
                      							"schedule",
                      							lv_schedule_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBoolScheduleExpression"


    // $ANTLR start "entryRuleTransition"
    // InternalSCTX.g:1071:1: entryRuleTransition returns [EObject current=null] : iv_ruleTransition= ruleTransition EOF ;
    public final EObject entryRuleTransition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTransition = null;


        try {
            // InternalSCTX.g:1071:51: (iv_ruleTransition= ruleTransition EOF )
            // InternalSCTX.g:1072:2: iv_ruleTransition= ruleTransition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTransitionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTransition=ruleTransition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTransition; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTransition"


    // $ANTLR start "ruleTransition"
    // InternalSCTX.g:1078:1: ruleTransition returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? (otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) | ( (lv_trigger_6_0= ruleAtomicExpression ) ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? ( (lv_nondeterministic_9_0= 'nondeterministic' ) )? )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )? ( (lv_preemption_14_0= rulePreemptionType ) ) ( (otherlv_15= RULE_ID ) ) ( (lv_deferred_16_0= 'deferred' ) )? ( (lv_history_17_0= ruleHistoryType ) )? (otherlv_18= 'label' ( (lv_label_19_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleTransition() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token lv_triggerDelay_4_0=null;
        Token otherlv_7=null;
        Token lv_triggerProbability_8_0=null;
        Token lv_nondeterministic_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_15=null;
        Token lv_deferred_16_0=null;
        Token otherlv_18=null;
        Token lv_label_19_0=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_delay_2_0 = null;

        EObject lv_trigger_5_0 = null;

        EObject lv_trigger_6_0 = null;

        EObject lv_effects_11_0 = null;

        EObject lv_effects_13_0 = null;

        Enumerator lv_preemption_14_0 = null;

        Enumerator lv_history_17_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:1084:2: ( ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? (otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) | ( (lv_trigger_6_0= ruleAtomicExpression ) ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? ( (lv_nondeterministic_9_0= 'nondeterministic' ) )? )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )? ( (lv_preemption_14_0= rulePreemptionType ) ) ( (otherlv_15= RULE_ID ) ) ( (lv_deferred_16_0= 'deferred' ) )? ( (lv_history_17_0= ruleHistoryType ) )? (otherlv_18= 'label' ( (lv_label_19_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:1085:2: ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? (otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) | ( (lv_trigger_6_0= ruleAtomicExpression ) ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? ( (lv_nondeterministic_9_0= 'nondeterministic' ) )? )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )? ( (lv_preemption_14_0= rulePreemptionType ) ) ( (otherlv_15= RULE_ID ) ) ( (lv_deferred_16_0= 'deferred' ) )? ( (lv_history_17_0= ruleHistoryType ) )? (otherlv_18= 'label' ( (lv_label_19_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:1085:2: ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? (otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) | ( (lv_trigger_6_0= ruleAtomicExpression ) ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? ( (lv_nondeterministic_9_0= 'nondeterministic' ) )? )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )? ( (lv_preemption_14_0= rulePreemptionType ) ) ( (otherlv_15= RULE_ID ) ) ( (lv_deferred_16_0= 'deferred' ) )? ( (lv_history_17_0= ruleHistoryType ) )? (otherlv_18= 'label' ( (lv_label_19_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:1086:3: () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? (otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) | ( (lv_trigger_6_0= ruleAtomicExpression ) ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? ( (lv_nondeterministic_9_0= 'nondeterministic' ) )? )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )? ( (lv_preemption_14_0= rulePreemptionType ) ) ( (otherlv_15= RULE_ID ) ) ( (lv_deferred_16_0= 'deferred' ) )? ( (lv_history_17_0= ruleHistoryType ) )? (otherlv_18= 'label' ( (lv_label_19_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:1086:3: ()
            // InternalSCTX.g:1087:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getTransitionAccess().getTransitionAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:1096:3: ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA38_0==RULE_COMMENT_ANNOTATION||LA38_0==106) ) {
=======
                if ( (LA38_0==RULE_COMMENT_ANNOTATION||LA38_0==102) ) {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    alt38=1;
                }


                switch (alt38) {
            	case 1 :
            	    // InternalSCTX.g:1097:4: (lv_annotations_1_0= ruleRestrictedTypeAnnotation )
            	    {
            	    // InternalSCTX.g:1097:4: (lv_annotations_1_0= ruleRestrictedTypeAnnotation )
            	    // InternalSCTX.g:1098:5: lv_annotations_1_0= ruleRestrictedTypeAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getTransitionAccess().getAnnotationsRestrictedTypeAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_38);
            	    lv_annotations_1_0=ruleRestrictedTypeAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getTransitionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.RestrictedTypeAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);

            // InternalSCTX.g:1115:3: ( (lv_delay_2_0= ruleDelayType ) )?
            int alt39=2;
            int LA39_0 = input.LA(1);

<<<<<<< HEAD
            if ( ((LA39_0>=109 && LA39_0<=112)) ) {
=======
            if ( ((LA39_0>=105 && LA39_0<=108)) ) {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalSCTX.g:1116:4: (lv_delay_2_0= ruleDelayType )
                    {
                    // InternalSCTX.g:1116:4: (lv_delay_2_0= ruleDelayType )
                    // InternalSCTX.g:1117:5: lv_delay_2_0= ruleDelayType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTransitionAccess().getDelayDelayTypeEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_38);
                    lv_delay_2_0=ruleDelayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTransitionRule());
                      					}
                      					set(
                      						current,
                      						"delay",
                      						lv_delay_2_0,
                      						"de.cau.cs.kieler.sccharts.text.SCTX.DelayType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:1134:3: (otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) | ( (lv_trigger_6_0= ruleAtomicExpression ) ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? ( (lv_nondeterministic_9_0= 'nondeterministic' ) )? )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==38) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalSCTX.g:1135:4: otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) | ( (lv_trigger_6_0= ruleAtomicExpression ) ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? ( (lv_nondeterministic_9_0= 'nondeterministic' ) )?
                    {
                    otherlv_3=(Token)match(input,38,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getTransitionAccess().getIfKeyword_3_0());
                      			
                    }
                    // InternalSCTX.g:1139:4: ( (lv_triggerDelay_4_0= RULE_INT ) )?
                    int alt40=2;
                    alt40 = dfa40.predict(input);
                    switch (alt40) {
                        case 1 :
                            // InternalSCTX.g:1140:5: (lv_triggerDelay_4_0= RULE_INT )
                            {
                            // InternalSCTX.g:1140:5: (lv_triggerDelay_4_0= RULE_INT )
                            // InternalSCTX.g:1141:6: lv_triggerDelay_4_0= RULE_INT
                            {
                            lv_triggerDelay_4_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_39); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_triggerDelay_4_0, grammarAccess.getTransitionAccess().getTriggerDelayINTTerminalRuleCall_3_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getTransitionRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"triggerDelay",
                              							lv_triggerDelay_4_0,
                              							"de.cau.cs.kieler.annotations.Annotations.INT");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:1157:4: ( ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) | ( (lv_trigger_6_0= ruleAtomicExpression ) ) )
                    int alt41=2;
                    alt41 = dfa41.predict(input);
                    switch (alt41) {
                        case 1 :
                            // InternalSCTX.g:1158:5: ( (lv_trigger_5_0= ruleBoolScheduleExpression ) )
                            {
                            // InternalSCTX.g:1158:5: ( (lv_trigger_5_0= ruleBoolScheduleExpression ) )
                            // InternalSCTX.g:1159:6: (lv_trigger_5_0= ruleBoolScheduleExpression )
                            {
                            // InternalSCTX.g:1159:6: (lv_trigger_5_0= ruleBoolScheduleExpression )
                            // InternalSCTX.g:1160:7: lv_trigger_5_0= ruleBoolScheduleExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getTransitionAccess().getTriggerBoolScheduleExpressionParserRuleCall_3_2_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_40);
                            lv_trigger_5_0=ruleBoolScheduleExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getTransitionRule());
                              							}
                              							set(
                              								current,
                              								"trigger",
                              								lv_trigger_5_0,
                              								"de.cau.cs.kieler.sccharts.text.SCTX.BoolScheduleExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:1178:5: ( (lv_trigger_6_0= ruleAtomicExpression ) )
                            {
                            // InternalSCTX.g:1178:5: ( (lv_trigger_6_0= ruleAtomicExpression ) )
                            // InternalSCTX.g:1179:6: (lv_trigger_6_0= ruleAtomicExpression )
                            {
                            // InternalSCTX.g:1179:6: (lv_trigger_6_0= ruleAtomicExpression )
                            // InternalSCTX.g:1180:7: lv_trigger_6_0= ruleAtomicExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getTransitionAccess().getTriggerAtomicExpressionParserRuleCall_3_2_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_40);
                            lv_trigger_6_0=ruleAtomicExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getTransitionRule());
                              							}
                              							set(
                              								current,
                              								"trigger",
                              								lv_trigger_6_0,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.AtomicExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:1198:4: (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )?
                    int alt42=2;
                    int LA42_0 = input.LA(1);

                    if ( (LA42_0==39) ) {
                        alt42=1;
                    }
                    switch (alt42) {
                        case 1 :
                            // InternalSCTX.g:1199:5: otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) )
                            {
                            otherlv_7=(Token)match(input,39,FollowSets000.FOLLOW_41); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_7, grammarAccess.getTransitionAccess().getPrKeyword_3_3_0());
                              				
                            }
                            // InternalSCTX.g:1203:5: ( (lv_triggerProbability_8_0= RULE_FLOAT ) )
                            // InternalSCTX.g:1204:6: (lv_triggerProbability_8_0= RULE_FLOAT )
                            {
                            // InternalSCTX.g:1204:6: (lv_triggerProbability_8_0= RULE_FLOAT )
                            // InternalSCTX.g:1205:7: lv_triggerProbability_8_0= RULE_FLOAT
                            {
                            lv_triggerProbability_8_0=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_42); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_triggerProbability_8_0, grammarAccess.getTransitionAccess().getTriggerProbabilityFLOATTerminalRuleCall_3_3_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getTransitionRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"triggerProbability",
                              								lv_triggerProbability_8_0,
                              								"de.cau.cs.kieler.annotations.Annotations.FLOAT");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:1222:4: ( (lv_nondeterministic_9_0= 'nondeterministic' ) )?
                    int alt43=2;
                    int LA43_0 = input.LA(1);

                    if ( (LA43_0==40) ) {
                        alt43=1;
                    }
                    switch (alt43) {
                        case 1 :
                            // InternalSCTX.g:1223:5: (lv_nondeterministic_9_0= 'nondeterministic' )
                            {
                            // InternalSCTX.g:1223:5: (lv_nondeterministic_9_0= 'nondeterministic' )
                            // InternalSCTX.g:1224:6: lv_nondeterministic_9_0= 'nondeterministic'
                            {
                            lv_nondeterministic_9_0=(Token)match(input,40,FollowSets000.FOLLOW_38); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_nondeterministic_9_0, grammarAccess.getTransitionAccess().getNondeterministicNondeterministicKeyword_3_4_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getTransitionRule());
                              						}
                              						setWithLastConsumed(current, "nondeterministic", true, "nondeterministic");
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalSCTX.g:1237:3: (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==41) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalSCTX.g:1238:4: otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )*
                    {
                    otherlv_10=(Token)match(input,41,FollowSets000.FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getTransitionAccess().getDoKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:1242:4: ( (lv_effects_11_0= ruleEffect ) )
                    // InternalSCTX.g:1243:5: (lv_effects_11_0= ruleEffect )
                    {
                    // InternalSCTX.g:1243:5: (lv_effects_11_0= ruleEffect )
                    // InternalSCTX.g:1244:6: lv_effects_11_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTransitionAccess().getEffectsEffectParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_44);
                    lv_effects_11_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTransitionRule());
                      						}
                      						add(
                      							current,
                      							"effects",
                      							lv_effects_11_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:1261:4: (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )*
                    loop45:
                    do {
                        int alt45=2;
                        int LA45_0 = input.LA(1);

                        if ( (LA45_0==42) ) {
                            alt45=1;
                        }


                        switch (alt45) {
                    	case 1 :
                    	    // InternalSCTX.g:1262:5: otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) )
                    	    {
                    	    otherlv_12=(Token)match(input,42,FollowSets000.FOLLOW_43); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_12, grammarAccess.getTransitionAccess().getSemicolonKeyword_4_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:1266:5: ( (lv_effects_13_0= ruleEffect ) )
                    	    // InternalSCTX.g:1267:6: (lv_effects_13_0= ruleEffect )
                    	    {
                    	    // InternalSCTX.g:1267:6: (lv_effects_13_0= ruleEffect )
                    	    // InternalSCTX.g:1268:7: lv_effects_13_0= ruleEffect
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTransitionAccess().getEffectsEffectParserRuleCall_4_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_44);
                    	    lv_effects_13_0=ruleEffect();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTransitionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"effects",
                    	      								lv_effects_13_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop45;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:1287:3: ( (lv_preemption_14_0= rulePreemptionType ) )
            // InternalSCTX.g:1288:4: (lv_preemption_14_0= rulePreemptionType )
            {
            // InternalSCTX.g:1288:4: (lv_preemption_14_0= rulePreemptionType )
            // InternalSCTX.g:1289:5: lv_preemption_14_0= rulePreemptionType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTransitionAccess().getPreemptionPreemptionTypeEnumRuleCall_5_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_preemption_14_0=rulePreemptionType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTransitionRule());
              					}
              					set(
              						current,
              						"preemption",
              						lv_preemption_14_0,
              						"de.cau.cs.kieler.sccharts.text.SCTX.PreemptionType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:1306:3: ( (otherlv_15= RULE_ID ) )
            // InternalSCTX.g:1307:4: (otherlv_15= RULE_ID )
            {
            // InternalSCTX.g:1307:4: (otherlv_15= RULE_ID )
            // InternalSCTX.g:1308:5: otherlv_15= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTransitionRule());
              					}
              				
            }
            otherlv_15=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_45); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_15, grammarAccess.getTransitionAccess().getTargetStateStateCrossReference_6_0());
              				
            }

            }


            }

            // InternalSCTX.g:1322:3: ( (lv_deferred_16_0= 'deferred' ) )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==43) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalSCTX.g:1323:4: (lv_deferred_16_0= 'deferred' )
                    {
                    // InternalSCTX.g:1323:4: (lv_deferred_16_0= 'deferred' )
                    // InternalSCTX.g:1324:5: lv_deferred_16_0= 'deferred'
                    {
                    lv_deferred_16_0=(Token)match(input,43,FollowSets000.FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_deferred_16_0, grammarAccess.getTransitionAccess().getDeferredDeferredKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTransitionRule());
                      					}
                      					setWithLastConsumed(current, "deferred", true, "deferred");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:1336:3: ( (lv_history_17_0= ruleHistoryType ) )?
            int alt48=2;
            int LA48_0 = input.LA(1);

<<<<<<< HEAD
            if ( ((LA48_0>=113 && LA48_0<=115)) ) {
=======
            if ( ((LA48_0>=109 && LA48_0<=111)) ) {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalSCTX.g:1337:4: (lv_history_17_0= ruleHistoryType )
                    {
                    // InternalSCTX.g:1337:4: (lv_history_17_0= ruleHistoryType )
                    // InternalSCTX.g:1338:5: lv_history_17_0= ruleHistoryType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTransitionAccess().getHistoryHistoryTypeEnumRuleCall_8_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_47);
                    lv_history_17_0=ruleHistoryType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTransitionRule());
                      					}
                      					set(
                      						current,
                      						"history",
                      						lv_history_17_0,
                      						"de.cau.cs.kieler.sccharts.text.SCTX.HistoryType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:1355:3: (otherlv_18= 'label' ( (lv_label_19_0= RULE_STRING ) ) )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==44) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalSCTX.g:1356:4: otherlv_18= 'label' ( (lv_label_19_0= RULE_STRING ) )
                    {
                    otherlv_18=(Token)match(input,44,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getTransitionAccess().getLabelKeyword_9_0());
                      			
                    }
                    // InternalSCTX.g:1360:4: ( (lv_label_19_0= RULE_STRING ) )
                    // InternalSCTX.g:1361:5: (lv_label_19_0= RULE_STRING )
                    {
                    // InternalSCTX.g:1361:5: (lv_label_19_0= RULE_STRING )
                    // InternalSCTX.g:1362:6: lv_label_19_0= RULE_STRING
                    {
                    lv_label_19_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_19_0, grammarAccess.getTransitionAccess().getLabelSTRINGTerminalRuleCall_9_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getTransitionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_19_0,
                      							"de.cau.cs.kieler.annotations.Annotations.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTransition"


    // $ANTLR start "entryRuleRegion"
    // InternalSCTX.g:1383:1: entryRuleRegion returns [EObject current=null] : iv_ruleRegion= ruleRegion EOF ;
    public final EObject entryRuleRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRegion = null;


        try {
            // InternalSCTX.g:1383:47: (iv_ruleRegion= ruleRegion EOF )
            // InternalSCTX.g:1384:2: iv_ruleRegion= ruleRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRegionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRegion=ruleRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRegion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRegion"


    // $ANTLR start "ruleRegion"
    // InternalSCTX.g:1390:1: ruleRegion returns [EObject current=null] : (this_ControlflowRegion_0= ruleControlflowRegion | this_DataflowRegion_1= ruleDataflowRegion ) ;
    public final EObject ruleRegion() throws RecognitionException {
        EObject current = null;

        EObject this_ControlflowRegion_0 = null;

        EObject this_DataflowRegion_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:1396:2: ( (this_ControlflowRegion_0= ruleControlflowRegion | this_DataflowRegion_1= ruleDataflowRegion ) )
            // InternalSCTX.g:1397:2: (this_ControlflowRegion_0= ruleControlflowRegion | this_DataflowRegion_1= ruleDataflowRegion )
            {
            // InternalSCTX.g:1397:2: (this_ControlflowRegion_0= ruleControlflowRegion | this_DataflowRegion_1= ruleDataflowRegion )
            int alt50=2;
            switch ( input.LA(1) ) {
            case RULE_COMMENT_ANNOTATION:
                {
                int LA50_1 = input.LA(2);

                if ( (synpred54_InternalSCTX()) ) {
                    alt50=1;
                }
                else if ( (true) ) {
                    alt50=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 50, 1, input);

                    throw nvae;
                }
                }
                break;
<<<<<<< HEAD
            case 106:
=======
            case 102:
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                {
                int LA50_2 = input.LA(2);

                if ( (synpred54_InternalSCTX()) ) {
                    alt50=1;
                }
                else if ( (true) ) {
                    alt50=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 50, 2, input);

                    throw nvae;
                }
                }
                break;
            case 45:
                {
                int LA50_3 = input.LA(2);

                if ( (synpred54_InternalSCTX()) ) {
                    alt50=1;
                }
                else if ( (true) ) {
                    alt50=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 50, 3, input);

                    throw nvae;
                }
                }
                break;
            case 24:
            case 46:
                {
                alt50=1;
                }
                break;
            case 49:
                {
                alt50=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }

            switch (alt50) {
                case 1 :
                    // InternalSCTX.g:1398:3: this_ControlflowRegion_0= ruleControlflowRegion
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRegionAccess().getControlflowRegionParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ControlflowRegion_0=ruleControlflowRegion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ControlflowRegion_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:1410:3: this_DataflowRegion_1= ruleDataflowRegion
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRegionAccess().getDataflowRegionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DataflowRegion_1=ruleDataflowRegion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DataflowRegion_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRegion"


    // $ANTLR start "entryRuleImplicitControlflowRegion"
    // InternalSCTX.g:1425:1: entryRuleImplicitControlflowRegion returns [EObject current=null] : iv_ruleImplicitControlflowRegion= ruleImplicitControlflowRegion EOF ;
    public final EObject entryRuleImplicitControlflowRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImplicitControlflowRegion = null;


        try {
            // InternalSCTX.g:1425:66: (iv_ruleImplicitControlflowRegion= ruleImplicitControlflowRegion EOF )
            // InternalSCTX.g:1426:2: iv_ruleImplicitControlflowRegion= ruleImplicitControlflowRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImplicitControlflowRegionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleImplicitControlflowRegion=ruleImplicitControlflowRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImplicitControlflowRegion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImplicitControlflowRegion"


    // $ANTLR start "ruleImplicitControlflowRegion"
    // InternalSCTX.g:1432:1: ruleImplicitControlflowRegion returns [EObject current=null] : ( () ( (lv_states_1_0= ruleState ) )+ ) ;
    public final EObject ruleImplicitControlflowRegion() throws RecognitionException {
        EObject current = null;

        EObject lv_states_1_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:1438:2: ( ( () ( (lv_states_1_0= ruleState ) )+ ) )
            // InternalSCTX.g:1439:2: ( () ( (lv_states_1_0= ruleState ) )+ )
            {
            // InternalSCTX.g:1439:2: ( () ( (lv_states_1_0= ruleState ) )+ )
            // InternalSCTX.g:1440:3: () ( (lv_states_1_0= ruleState ) )+
            {
            // InternalSCTX.g:1440:3: ()
            // InternalSCTX.g:1441:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getImplicitControlflowRegionAccess().getControlflowRegionAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:1450:3: ( (lv_states_1_0= ruleState ) )+
            int cnt51=0;
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA51_0==RULE_COMMENT_ANNOTATION||(LA51_0>=23 && LA51_0<=27)||LA51_0==106) ) {
=======
                if ( (LA51_0==RULE_COMMENT_ANNOTATION||(LA51_0>=23 && LA51_0<=27)||LA51_0==102) ) {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    alt51=1;
                }


                switch (alt51) {
            	case 1 :
            	    // InternalSCTX.g:1451:4: (lv_states_1_0= ruleState )
            	    {
            	    // InternalSCTX.g:1451:4: (lv_states_1_0= ruleState )
            	    // InternalSCTX.g:1452:5: lv_states_1_0= ruleState
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getImplicitControlflowRegionAccess().getStatesStateParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_49);
            	    lv_states_1_0=ruleState();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getImplicitControlflowRegionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"states",
            	      						lv_states_1_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.State");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt51 >= 1 ) break loop51;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(51, input);
                        throw eee;
                }
                cnt51++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImplicitControlflowRegion"


    // $ANTLR start "entryRuleControlflowRegion"
    // InternalSCTX.g:1473:1: entryRuleControlflowRegion returns [EObject current=null] : iv_ruleControlflowRegion= ruleControlflowRegion EOF ;
    public final EObject entryRuleControlflowRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleControlflowRegion = null;


        try {
            // InternalSCTX.g:1473:58: (iv_ruleControlflowRegion= ruleControlflowRegion EOF )
            // InternalSCTX.g:1474:2: iv_ruleControlflowRegion= ruleControlflowRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getControlflowRegionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleControlflowRegion=ruleControlflowRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleControlflowRegion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleControlflowRegion"


    // $ANTLR start "ruleControlflowRegion"
    // InternalSCTX.g:1480:1: ruleControlflowRegion returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_override_2_0= 'override' ) )? ( (lv_final_3_0= 'final' ) )? otherlv_4= 'region' ( (lv_name_5_0= ruleExtendedID ) )? ( (lv_label_6_0= RULE_STRING ) )? ( (otherlv_7= 'is' ( (lv_reference_8_0= ruleScopeCall ) ) (otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )? )? (otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )? )? (otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+ )? ( (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' ) | (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* ) ) ) ) ) ;
    public final EObject ruleControlflowRegion() throws RecognitionException {
        EObject current = null;

        Token lv_override_2_0=null;
        Token lv_final_3_0=null;
        Token otherlv_4=null;
        Token lv_label_6_0=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token otherlv_30=null;
        Token otherlv_31=null;
        EObject lv_annotations_1_0 = null;

        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_reference_8_0 = null;

        EObject lv_counterVariable_10_0 = null;

        EObject lv_forStart_12_0 = null;

        EObject lv_forEnd_14_0 = null;

        EObject lv_schedule_16_0 = null;

        EObject lv_counterVariable_18_0 = null;

        EObject lv_forStart_20_0 = null;

        EObject lv_forEnd_22_0 = null;

        EObject lv_schedule_24_0 = null;

        EObject lv_declarations_26_0 = null;

        EObject lv_actions_27_0 = null;

        EObject lv_states_28_0 = null;

        EObject lv_states_29_0 = null;

        EObject lv_declarations_32_0 = null;

        EObject lv_actions_33_0 = null;

        EObject lv_states_34_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:1486:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_override_2_0= 'override' ) )? ( (lv_final_3_0= 'final' ) )? otherlv_4= 'region' ( (lv_name_5_0= ruleExtendedID ) )? ( (lv_label_6_0= RULE_STRING ) )? ( (otherlv_7= 'is' ( (lv_reference_8_0= ruleScopeCall ) ) (otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )? )? (otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )? )? (otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+ )? ( (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' ) | (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* ) ) ) ) ) )
            // InternalSCTX.g:1487:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_override_2_0= 'override' ) )? ( (lv_final_3_0= 'final' ) )? otherlv_4= 'region' ( (lv_name_5_0= ruleExtendedID ) )? ( (lv_label_6_0= RULE_STRING ) )? ( (otherlv_7= 'is' ( (lv_reference_8_0= ruleScopeCall ) ) (otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )? )? (otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )? )? (otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+ )? ( (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' ) | (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* ) ) ) ) )
            {
            // InternalSCTX.g:1487:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_override_2_0= 'override' ) )? ( (lv_final_3_0= 'final' ) )? otherlv_4= 'region' ( (lv_name_5_0= ruleExtendedID ) )? ( (lv_label_6_0= RULE_STRING ) )? ( (otherlv_7= 'is' ( (lv_reference_8_0= ruleScopeCall ) ) (otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )? )? (otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )? )? (otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+ )? ( (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' ) | (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* ) ) ) ) )
            // InternalSCTX.g:1488:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_override_2_0= 'override' ) )? ( (lv_final_3_0= 'final' ) )? otherlv_4= 'region' ( (lv_name_5_0= ruleExtendedID ) )? ( (lv_label_6_0= RULE_STRING ) )? ( (otherlv_7= 'is' ( (lv_reference_8_0= ruleScopeCall ) ) (otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )? )? (otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )? )? (otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+ )? ( (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' ) | (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* ) ) ) )
            {
            // InternalSCTX.g:1488:3: ()
            // InternalSCTX.g:1489:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getControlflowRegionAccess().getControlflowRegionAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:1498:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop52:
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA52_0==RULE_COMMENT_ANNOTATION||LA52_0==106) ) {
=======
                if ( (LA52_0==RULE_COMMENT_ANNOTATION||LA52_0==102) ) {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    alt52=1;
                }


                switch (alt52) {
            	case 1 :
            	    // InternalSCTX.g:1499:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:1499:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:1500:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getControlflowRegionAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_50);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);

            // InternalSCTX.g:1517:3: ( (lv_override_2_0= 'override' ) )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==45) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalSCTX.g:1518:4: (lv_override_2_0= 'override' )
                    {
                    // InternalSCTX.g:1518:4: (lv_override_2_0= 'override' )
                    // InternalSCTX.g:1519:5: lv_override_2_0= 'override'
                    {
                    lv_override_2_0=(Token)match(input,45,FollowSets000.FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_override_2_0, grammarAccess.getControlflowRegionAccess().getOverrideOverrideKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getControlflowRegionRule());
                      					}
                      					setWithLastConsumed(current, "override", true, "override");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:1531:3: ( (lv_final_3_0= 'final' ) )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==24) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalSCTX.g:1532:4: (lv_final_3_0= 'final' )
                    {
                    // InternalSCTX.g:1532:4: (lv_final_3_0= 'final' )
                    // InternalSCTX.g:1533:5: lv_final_3_0= 'final'
                    {
                    lv_final_3_0=(Token)match(input,24,FollowSets000.FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_final_3_0, grammarAccess.getControlflowRegionAccess().getFinalFinalKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getControlflowRegionRule());
                      					}
                      					setWithLastConsumed(current, "final", true, "final");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,46,FollowSets000.FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getControlflowRegionAccess().getRegionKeyword_4());
              		
            }
            // InternalSCTX.g:1549:3: ( (lv_name_5_0= ruleExtendedID ) )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==RULE_ID) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // InternalSCTX.g:1550:4: (lv_name_5_0= ruleExtendedID )
                    {
                    // InternalSCTX.g:1550:4: (lv_name_5_0= ruleExtendedID )
                    // InternalSCTX.g:1551:5: lv_name_5_0= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getControlflowRegionAccess().getNameExtendedIDParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_54);
                    lv_name_5_0=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_5_0,
                      						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:1568:3: ( (lv_label_6_0= RULE_STRING ) )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==RULE_STRING) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // InternalSCTX.g:1569:4: (lv_label_6_0= RULE_STRING )
                    {
                    // InternalSCTX.g:1569:4: (lv_label_6_0= RULE_STRING )
                    // InternalSCTX.g:1570:5: lv_label_6_0= RULE_STRING
                    {
                    lv_label_6_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_6_0, grammarAccess.getControlflowRegionAccess().getLabelSTRINGTerminalRuleCall_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getControlflowRegionRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_6_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:1586:3: ( (otherlv_7= 'is' ( (lv_reference_8_0= ruleScopeCall ) ) (otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )? )? (otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )? )? (otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+ )? ( (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' ) | (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* ) ) ) )
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==28) ) {
                alt73=1;
            }
            else if ( (LA73_0==21||LA73_0==29||(LA73_0>=47 && LA73_0<=48)) ) {
                alt73=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 73, 0, input);

                throw nvae;
            }
            switch (alt73) {
                case 1 :
                    // InternalSCTX.g:1587:4: (otherlv_7= 'is' ( (lv_reference_8_0= ruleScopeCall ) ) (otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )? )? (otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+ )? )
                    {
                    // InternalSCTX.g:1587:4: (otherlv_7= 'is' ( (lv_reference_8_0= ruleScopeCall ) ) (otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )? )? (otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+ )? )
                    // InternalSCTX.g:1588:5: otherlv_7= 'is' ( (lv_reference_8_0= ruleScopeCall ) ) (otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )? )? (otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+ )?
                    {
                    otherlv_7=(Token)match(input,28,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getControlflowRegionAccess().getIsKeyword_7_0_0());
                      				
                    }
                    // InternalSCTX.g:1592:5: ( (lv_reference_8_0= ruleScopeCall ) )
                    // InternalSCTX.g:1593:6: (lv_reference_8_0= ruleScopeCall )
                    {
                    // InternalSCTX.g:1593:6: (lv_reference_8_0= ruleScopeCall )
                    // InternalSCTX.g:1594:7: lv_reference_8_0= ruleScopeCall
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getControlflowRegionAccess().getReferenceScopeCallParserRuleCall_7_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_56);
                    lv_reference_8_0=ruleScopeCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                      							}
                      							set(
                      								current,
                      								"reference",
                      								lv_reference_8_0,
                      								"de.cau.cs.kieler.sccharts.text.SCTX.ScopeCall");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:1611:5: (otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )? )?
                    int alt58=2;
                    int LA58_0 = input.LA(1);

                    if ( (LA58_0==47) ) {
                        alt58=1;
                    }
                    switch (alt58) {
                        case 1 :
                            // InternalSCTX.g:1612:6: otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )?
                            {
                            otherlv_9=(Token)match(input,47,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_9, grammarAccess.getControlflowRegionAccess().getForKeyword_7_0_2_0());
                              					
                            }
                            // InternalSCTX.g:1616:6: ( (lv_counterVariable_10_0= ruleCounterVariable ) )
                            // InternalSCTX.g:1617:7: (lv_counterVariable_10_0= ruleCounterVariable )
                            {
                            // InternalSCTX.g:1617:7: (lv_counterVariable_10_0= ruleCounterVariable )
                            // InternalSCTX.g:1618:8: lv_counterVariable_10_0= ruleCounterVariable
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getControlflowRegionAccess().getCounterVariableCounterVariableParserRuleCall_7_0_2_1_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_57);
                            lv_counterVariable_10_0=ruleCounterVariable();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                              								}
                              								set(
                              									current,
                              									"counterVariable",
                              									lv_counterVariable_10_0,
                              									"de.cau.cs.kieler.sccharts.text.SCTX.CounterVariable");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_11=(Token)match(input,48,FollowSets000.FOLLOW_58); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_11, grammarAccess.getControlflowRegionAccess().getColonKeyword_7_0_2_2());
                              					
                            }
                            // InternalSCTX.g:1639:6: ( (lv_forStart_12_0= ruleIntOrReference ) )
                            // InternalSCTX.g:1640:7: (lv_forStart_12_0= ruleIntOrReference )
                            {
                            // InternalSCTX.g:1640:7: (lv_forStart_12_0= ruleIntOrReference )
                            // InternalSCTX.g:1641:8: lv_forStart_12_0= ruleIntOrReference
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getControlflowRegionAccess().getForStartIntOrReferenceParserRuleCall_7_0_2_3_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_59);
                            lv_forStart_12_0=ruleIntOrReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                              								}
                              								set(
                              									current,
                              									"forStart",
                              									lv_forStart_12_0,
                              									"de.cau.cs.kieler.sccharts.text.SCTX.IntOrReference");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalSCTX.g:1658:6: (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )?
                            int alt57=2;
                            int LA57_0 = input.LA(1);

                            if ( (LA57_0==35) ) {
                                alt57=1;
                            }
                            switch (alt57) {
                                case 1 :
                                    // InternalSCTX.g:1659:7: otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) )
                                    {
                                    otherlv_13=(Token)match(input,35,FollowSets000.FOLLOW_58); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_13, grammarAccess.getControlflowRegionAccess().getToKeyword_7_0_2_4_0());
                                      						
                                    }
                                    // InternalSCTX.g:1663:7: ( (lv_forEnd_14_0= ruleIntOrReference ) )
                                    // InternalSCTX.g:1664:8: (lv_forEnd_14_0= ruleIntOrReference )
                                    {
                                    // InternalSCTX.g:1664:8: (lv_forEnd_14_0= ruleIntOrReference )
                                    // InternalSCTX.g:1665:9: lv_forEnd_14_0= ruleIntOrReference
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getControlflowRegionAccess().getForEndIntOrReferenceParserRuleCall_7_0_2_4_1_0());
                                      								
                                    }
                                    pushFollow(FollowSets000.FOLLOW_37);
                                    lv_forEnd_14_0=ruleIntOrReference();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                                      									}
                                      									set(
                                      										current,
                                      										"forEnd",
                                      										lv_forEnd_14_0,
                                      										"de.cau.cs.kieler.sccharts.text.SCTX.IntOrReference");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:1684:5: (otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+ )?
                    int alt60=2;
                    int LA60_0 = input.LA(1);

                    if ( (LA60_0==29) ) {
                        alt60=1;
                    }
                    switch (alt60) {
                        case 1 :
                            // InternalSCTX.g:1685:6: otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+
                            {
                            otherlv_15=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_15, grammarAccess.getControlflowRegionAccess().getScheduleKeyword_7_0_3_0());
                              					
                            }
                            // InternalSCTX.g:1689:6: ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+
                            int cnt59=0;
                            loop59:
                            do {
                                int alt59=2;
                                int LA59_0 = input.LA(1);

                                if ( (LA59_0==RULE_ID) ) {
                                    alt59=1;
                                }


                                switch (alt59) {
                            	case 1 :
                            	    // InternalSCTX.g:1690:7: (lv_schedule_16_0= ruleScheduleObjectReference )
                            	    {
                            	    // InternalSCTX.g:1690:7: (lv_schedule_16_0= ruleScheduleObjectReference )
                            	    // InternalSCTX.g:1691:8: lv_schedule_16_0= ruleScheduleObjectReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getControlflowRegionAccess().getScheduleScheduleObjectReferenceParserRuleCall_7_0_3_1_0());
                            	      							
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_60);
                            	    lv_schedule_16_0=ruleScheduleObjectReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"schedule",
                            	      									lv_schedule_16_0,
                            	      									"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt59 >= 1 ) break loop59;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(59, input);
                                        throw eee;
                                }
                                cnt59++;
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:1711:4: ( (otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )? )? (otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+ )? ( (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' ) | (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* ) ) )
                    {
                    // InternalSCTX.g:1711:4: ( (otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )? )? (otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+ )? ( (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' ) | (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* ) ) )
                    // InternalSCTX.g:1712:5: (otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )? )? (otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+ )? ( (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' ) | (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* ) )
                    {
                    // InternalSCTX.g:1712:5: (otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )? )?
                    int alt62=2;
                    int LA62_0 = input.LA(1);

                    if ( (LA62_0==47) ) {
                        alt62=1;
                    }
                    switch (alt62) {
                        case 1 :
                            // InternalSCTX.g:1713:6: otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )?
                            {
                            otherlv_17=(Token)match(input,47,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_17, grammarAccess.getControlflowRegionAccess().getForKeyword_7_1_0_0());
                              					
                            }
                            // InternalSCTX.g:1717:6: ( (lv_counterVariable_18_0= ruleCounterVariable ) )
                            // InternalSCTX.g:1718:7: (lv_counterVariable_18_0= ruleCounterVariable )
                            {
                            // InternalSCTX.g:1718:7: (lv_counterVariable_18_0= ruleCounterVariable )
                            // InternalSCTX.g:1719:8: lv_counterVariable_18_0= ruleCounterVariable
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getControlflowRegionAccess().getCounterVariableCounterVariableParserRuleCall_7_1_0_1_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_57);
                            lv_counterVariable_18_0=ruleCounterVariable();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                              								}
                              								set(
                              									current,
                              									"counterVariable",
                              									lv_counterVariable_18_0,
                              									"de.cau.cs.kieler.sccharts.text.SCTX.CounterVariable");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_19=(Token)match(input,48,FollowSets000.FOLLOW_58); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_19, grammarAccess.getControlflowRegionAccess().getColonKeyword_7_1_0_2());
                              					
                            }
                            // InternalSCTX.g:1740:6: ( (lv_forStart_20_0= ruleIntOrReference ) )
                            // InternalSCTX.g:1741:7: (lv_forStart_20_0= ruleIntOrReference )
                            {
                            // InternalSCTX.g:1741:7: (lv_forStart_20_0= ruleIntOrReference )
                            // InternalSCTX.g:1742:8: lv_forStart_20_0= ruleIntOrReference
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getControlflowRegionAccess().getForStartIntOrReferenceParserRuleCall_7_1_0_3_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_61);
                            lv_forStart_20_0=ruleIntOrReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                              								}
                              								set(
                              									current,
                              									"forStart",
                              									lv_forStart_20_0,
                              									"de.cau.cs.kieler.sccharts.text.SCTX.IntOrReference");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalSCTX.g:1759:6: (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )?
                            int alt61=2;
                            int LA61_0 = input.LA(1);

                            if ( (LA61_0==35) ) {
                                alt61=1;
                            }
                            switch (alt61) {
                                case 1 :
                                    // InternalSCTX.g:1760:7: otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) )
                                    {
                                    otherlv_21=(Token)match(input,35,FollowSets000.FOLLOW_58); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_21, grammarAccess.getControlflowRegionAccess().getToKeyword_7_1_0_4_0());
                                      						
                                    }
                                    // InternalSCTX.g:1764:7: ( (lv_forEnd_22_0= ruleIntOrReference ) )
                                    // InternalSCTX.g:1765:8: (lv_forEnd_22_0= ruleIntOrReference )
                                    {
                                    // InternalSCTX.g:1765:8: (lv_forEnd_22_0= ruleIntOrReference )
                                    // InternalSCTX.g:1766:9: lv_forEnd_22_0= ruleIntOrReference
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getControlflowRegionAccess().getForEndIntOrReferenceParserRuleCall_7_1_0_4_1_0());
                                      								
                                    }
                                    pushFollow(FollowSets000.FOLLOW_62);
                                    lv_forEnd_22_0=ruleIntOrReference();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                                      									}
                                      									set(
                                      										current,
                                      										"forEnd",
                                      										lv_forEnd_22_0,
                                      										"de.cau.cs.kieler.sccharts.text.SCTX.IntOrReference");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:1785:5: (otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+ )?
                    int alt64=2;
                    int LA64_0 = input.LA(1);

                    if ( (LA64_0==29) ) {
                        alt64=1;
                    }
                    switch (alt64) {
                        case 1 :
                            // InternalSCTX.g:1786:6: otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+
                            {
                            otherlv_23=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_23, grammarAccess.getControlflowRegionAccess().getScheduleKeyword_7_1_1_0());
                              					
                            }
                            // InternalSCTX.g:1790:6: ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+
                            int cnt63=0;
                            loop63:
                            do {
                                int alt63=2;
                                int LA63_0 = input.LA(1);

                                if ( (LA63_0==RULE_ID) ) {
                                    alt63=1;
                                }


                                switch (alt63) {
                            	case 1 :
                            	    // InternalSCTX.g:1791:7: (lv_schedule_24_0= ruleScheduleObjectReference )
                            	    {
                            	    // InternalSCTX.g:1791:7: (lv_schedule_24_0= ruleScheduleObjectReference )
                            	    // InternalSCTX.g:1792:8: lv_schedule_24_0= ruleScheduleObjectReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getControlflowRegionAccess().getScheduleScheduleObjectReferenceParserRuleCall_7_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_63);
                            	    lv_schedule_24_0=ruleScheduleObjectReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"schedule",
                            	      									lv_schedule_24_0,
                            	      									"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt63 >= 1 ) break loop63;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(63, input);
                                        throw eee;
                                }
                                cnt63++;
                            } while (true);


                            }
                            break;

                    }

                    // InternalSCTX.g:1810:5: ( (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' ) | (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* ) )
                    int alt72=2;
                    int LA72_0 = input.LA(1);

                    if ( (LA72_0==21) ) {
                        alt72=1;
                    }
                    else if ( (LA72_0==48) ) {
                        alt72=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 72, 0, input);

                        throw nvae;
                    }
                    switch (alt72) {
                        case 1 :
                            // InternalSCTX.g:1811:6: (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' )
                            {
                            // InternalSCTX.g:1811:6: (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' )
                            // InternalSCTX.g:1812:7: otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}'
                            {
                            otherlv_25=(Token)match(input,21,FollowSets000.FOLLOW_64); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_25, grammarAccess.getControlflowRegionAccess().getLeftCurlyBracketKeyword_7_1_2_0_0());
                              						
                            }
                            // InternalSCTX.g:1816:7: ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )*
                            loop65:
                            do {
                                int alt65=2;
                                alt65 = dfa65.predict(input);
                                switch (alt65) {
                            	case 1 :
                            	    // InternalSCTX.g:1817:8: (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
                            	    {
                            	    // InternalSCTX.g:1817:8: (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
                            	    // InternalSCTX.g:1818:9: lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getControlflowRegionAccess().getDeclarationsDeclarationOrMethodWithKeywordWOSemicolonParserRuleCall_7_1_2_0_1_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_64);
                            	    lv_declarations_26_0=ruleDeclarationOrMethodWithKeywordWOSemicolon();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"declarations",
                            	      										lv_declarations_26_0,
                            	      										"de.cau.cs.kieler.sccharts.text.SCTX.DeclarationOrMethodWithKeywordWOSemicolon");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop65;
                                }
                            } while (true);

                            // InternalSCTX.g:1835:7: ( (lv_actions_27_0= ruleLocalAction ) )*
                            loop66:
                            do {
                                int alt66=2;
                                alt66 = dfa66.predict(input);
                                switch (alt66) {
                            	case 1 :
                            	    // InternalSCTX.g:1836:8: (lv_actions_27_0= ruleLocalAction )
                            	    {
                            	    // InternalSCTX.g:1836:8: (lv_actions_27_0= ruleLocalAction )
                            	    // InternalSCTX.g:1837:9: lv_actions_27_0= ruleLocalAction
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getControlflowRegionAccess().getActionsLocalActionParserRuleCall_7_1_2_0_2_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_65);
                            	    lv_actions_27_0=ruleLocalAction();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"actions",
                            	      										lv_actions_27_0,
                            	      										"de.cau.cs.kieler.sccharts.text.SCTX.LocalAction");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop66;
                                }
                            } while (true);

                            // InternalSCTX.g:1854:7: ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ )
                            int alt68=2;
                            alt68 = dfa68.predict(input);
                            switch (alt68) {
                                case 1 :
                                    // InternalSCTX.g:1855:8: ( (lv_states_28_0= ruleImplicitState ) )
                                    {
                                    // InternalSCTX.g:1855:8: ( (lv_states_28_0= ruleImplicitState ) )
                                    // InternalSCTX.g:1856:9: (lv_states_28_0= ruleImplicitState )
                                    {
                                    // InternalSCTX.g:1856:9: (lv_states_28_0= ruleImplicitState )
                                    // InternalSCTX.g:1857:10: lv_states_28_0= ruleImplicitState
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getControlflowRegionAccess().getStatesImplicitStateParserRuleCall_7_1_2_0_3_0_0());
                                      									
                                    }
                                    pushFollow(FollowSets000.FOLLOW_13);
                                    lv_states_28_0=ruleImplicitState();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                                      										}
                                      										add(
                                      											current,
                                      											"states",
                                      											lv_states_28_0,
                                      											"de.cau.cs.kieler.sccharts.text.SCTX.ImplicitState");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalSCTX.g:1875:8: ( (lv_states_29_0= ruleState ) )+
                                    {
                                    // InternalSCTX.g:1875:8: ( (lv_states_29_0= ruleState ) )+
                                    int cnt67=0;
                                    loop67:
                                    do {
                                        int alt67=2;
                                        int LA67_0 = input.LA(1);

<<<<<<< HEAD
                                        if ( (LA67_0==RULE_COMMENT_ANNOTATION||(LA67_0>=23 && LA67_0<=27)||LA67_0==106) ) {
=======
                                        if ( (LA67_0==RULE_COMMENT_ANNOTATION||(LA67_0>=23 && LA67_0<=27)||LA67_0==102) ) {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                                            alt67=1;
                                        }


                                        switch (alt67) {
                                    	case 1 :
                                    	    // InternalSCTX.g:1876:9: (lv_states_29_0= ruleState )
                                    	    {
                                    	    // InternalSCTX.g:1876:9: (lv_states_29_0= ruleState )
                                    	    // InternalSCTX.g:1877:10: lv_states_29_0= ruleState
                                    	    {
                                    	    if ( state.backtracking==0 ) {

                                    	      										newCompositeNode(grammarAccess.getControlflowRegionAccess().getStatesStateParserRuleCall_7_1_2_0_3_1_0());
                                    	      									
                                    	    }
                                    	    pushFollow(FollowSets000.FOLLOW_66);
                                    	    lv_states_29_0=ruleState();

                                    	    state._fsp--;
                                    	    if (state.failed) return current;
                                    	    if ( state.backtracking==0 ) {

                                    	      										if (current==null) {
                                    	      											current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                                    	      										}
                                    	      										add(
                                    	      											current,
                                    	      											"states",
                                    	      											lv_states_29_0,
                                    	      											"de.cau.cs.kieler.sccharts.text.SCTX.State");
                                    	      										afterParserOrEnumRuleCall();
                                    	      									
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    if ( cnt67 >= 1 ) break loop67;
                                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                                EarlyExitException eee =
                                                    new EarlyExitException(67, input);
                                                throw eee;
                                        }
                                        cnt67++;
                                    } while (true);


                                    }
                                    break;

                            }

                            otherlv_30=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_30, grammarAccess.getControlflowRegionAccess().getRightCurlyBracketKeyword_7_1_2_0_4());
                              						
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:1901:6: (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* )
                            {
                            // InternalSCTX.g:1901:6: (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* )
                            // InternalSCTX.g:1902:7: otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )*
                            {
                            otherlv_31=(Token)match(input,48,FollowSets000.FOLLOW_67); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_31, grammarAccess.getControlflowRegionAccess().getColonKeyword_7_1_2_1_0());
                              						
                            }
                            // InternalSCTX.g:1906:7: ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )*
                            loop69:
                            do {
                                int alt69=2;
                                alt69 = dfa69.predict(input);
                                switch (alt69) {
                            	case 1 :
                            	    // InternalSCTX.g:1907:8: (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
                            	    {
                            	    // InternalSCTX.g:1907:8: (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
                            	    // InternalSCTX.g:1908:9: lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getControlflowRegionAccess().getDeclarationsDeclarationOrMethodWithKeywordWOSemicolonParserRuleCall_7_1_2_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_67);
                            	    lv_declarations_32_0=ruleDeclarationOrMethodWithKeywordWOSemicolon();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"declarations",
                            	      										lv_declarations_32_0,
                            	      										"de.cau.cs.kieler.sccharts.text.SCTX.DeclarationOrMethodWithKeywordWOSemicolon");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop69;
                                }
                            } while (true);

                            // InternalSCTX.g:1925:7: ( (lv_actions_33_0= ruleLocalAction ) )*
                            loop70:
                            do {
                                int alt70=2;
                                alt70 = dfa70.predict(input);
                                switch (alt70) {
                            	case 1 :
                            	    // InternalSCTX.g:1926:8: (lv_actions_33_0= ruleLocalAction )
                            	    {
                            	    // InternalSCTX.g:1926:8: (lv_actions_33_0= ruleLocalAction )
                            	    // InternalSCTX.g:1927:9: lv_actions_33_0= ruleLocalAction
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getControlflowRegionAccess().getActionsLocalActionParserRuleCall_7_1_2_1_2_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_68);
                            	    lv_actions_33_0=ruleLocalAction();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"actions",
                            	      										lv_actions_33_0,
                            	      										"de.cau.cs.kieler.sccharts.text.SCTX.LocalAction");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop70;
                                }
                            } while (true);

                            // InternalSCTX.g:1944:7: ( (lv_states_34_0= ruleState ) )*
                            loop71:
                            do {
                                int alt71=2;
                                alt71 = dfa71.predict(input);
                                switch (alt71) {
                            	case 1 :
                            	    // InternalSCTX.g:1945:8: (lv_states_34_0= ruleState )
                            	    {
                            	    // InternalSCTX.g:1945:8: (lv_states_34_0= ruleState )
                            	    // InternalSCTX.g:1946:9: lv_states_34_0= ruleState
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getControlflowRegionAccess().getStatesStateParserRuleCall_7_1_2_1_3_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_49);
                            	    lv_states_34_0=ruleState();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"states",
                            	      										lv_states_34_0,
                            	      										"de.cau.cs.kieler.sccharts.text.SCTX.State");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop71;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleControlflowRegion"


    // $ANTLR start "entryRuleDataflowRegion"
    // InternalSCTX.g:1971:1: entryRuleDataflowRegion returns [EObject current=null] : iv_ruleDataflowRegion= ruleDataflowRegion EOF ;
    public final EObject entryRuleDataflowRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDataflowRegion = null;


        try {
            // InternalSCTX.g:1971:55: (iv_ruleDataflowRegion= ruleDataflowRegion EOF )
            // InternalSCTX.g:1972:2: iv_ruleDataflowRegion= ruleDataflowRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDataflowRegionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDataflowRegion=ruleDataflowRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDataflowRegion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDataflowRegion"


    // $ANTLR start "ruleDataflowRegion"
    // InternalSCTX.g:1978:1: ruleDataflowRegion returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_override_2_0= 'override' ) )? otherlv_3= 'dataflow' ( (lv_name_4_0= ruleExtendedID ) )? ( (lv_label_5_0= RULE_STRING ) )? (otherlv_6= 'for' ( (lv_counterVariable_7_0= ruleCounterVariable ) ) otherlv_8= ':' ( (lv_forStart_9_0= ruleIntOrReference ) ) (otherlv_10= 'to' ( (lv_forEnd_11_0= ruleIntOrReference ) ) )? )? (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )? ( (lv_once_14_0= 'once' ) )? ( (otherlv_15= '{' ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_17_0= ruleAssignment ) )* otherlv_18= '}' ) | (otherlv_19= ':' ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_21_0= ruleAssignment ) )* ) ) ) ;
    public final EObject ruleDataflowRegion() throws RecognitionException {
        EObject current = null;

        Token lv_override_2_0=null;
        Token otherlv_3=null;
        Token lv_label_5_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token lv_once_14_0=null;
        Token otherlv_15=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        EObject lv_annotations_1_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;

        EObject lv_counterVariable_7_0 = null;

        EObject lv_forStart_9_0 = null;

        EObject lv_forEnd_11_0 = null;

        EObject lv_schedule_13_0 = null;

        EObject lv_declarations_16_0 = null;

        EObject lv_equations_17_0 = null;

        EObject lv_declarations_20_0 = null;

        EObject lv_equations_21_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:1984:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_override_2_0= 'override' ) )? otherlv_3= 'dataflow' ( (lv_name_4_0= ruleExtendedID ) )? ( (lv_label_5_0= RULE_STRING ) )? (otherlv_6= 'for' ( (lv_counterVariable_7_0= ruleCounterVariable ) ) otherlv_8= ':' ( (lv_forStart_9_0= ruleIntOrReference ) ) (otherlv_10= 'to' ( (lv_forEnd_11_0= ruleIntOrReference ) ) )? )? (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )? ( (lv_once_14_0= 'once' ) )? ( (otherlv_15= '{' ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_17_0= ruleAssignment ) )* otherlv_18= '}' ) | (otherlv_19= ':' ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_21_0= ruleAssignment ) )* ) ) ) )
            // InternalSCTX.g:1985:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_override_2_0= 'override' ) )? otherlv_3= 'dataflow' ( (lv_name_4_0= ruleExtendedID ) )? ( (lv_label_5_0= RULE_STRING ) )? (otherlv_6= 'for' ( (lv_counterVariable_7_0= ruleCounterVariable ) ) otherlv_8= ':' ( (lv_forStart_9_0= ruleIntOrReference ) ) (otherlv_10= 'to' ( (lv_forEnd_11_0= ruleIntOrReference ) ) )? )? (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )? ( (lv_once_14_0= 'once' ) )? ( (otherlv_15= '{' ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_17_0= ruleAssignment ) )* otherlv_18= '}' ) | (otherlv_19= ':' ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_21_0= ruleAssignment ) )* ) ) )
            {
            // InternalSCTX.g:1985:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_override_2_0= 'override' ) )? otherlv_3= 'dataflow' ( (lv_name_4_0= ruleExtendedID ) )? ( (lv_label_5_0= RULE_STRING ) )? (otherlv_6= 'for' ( (lv_counterVariable_7_0= ruleCounterVariable ) ) otherlv_8= ':' ( (lv_forStart_9_0= ruleIntOrReference ) ) (otherlv_10= 'to' ( (lv_forEnd_11_0= ruleIntOrReference ) ) )? )? (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )? ( (lv_once_14_0= 'once' ) )? ( (otherlv_15= '{' ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_17_0= ruleAssignment ) )* otherlv_18= '}' ) | (otherlv_19= ':' ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_21_0= ruleAssignment ) )* ) ) )
            // InternalSCTX.g:1986:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_override_2_0= 'override' ) )? otherlv_3= 'dataflow' ( (lv_name_4_0= ruleExtendedID ) )? ( (lv_label_5_0= RULE_STRING ) )? (otherlv_6= 'for' ( (lv_counterVariable_7_0= ruleCounterVariable ) ) otherlv_8= ':' ( (lv_forStart_9_0= ruleIntOrReference ) ) (otherlv_10= 'to' ( (lv_forEnd_11_0= ruleIntOrReference ) ) )? )? (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )? ( (lv_once_14_0= 'once' ) )? ( (otherlv_15= '{' ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_17_0= ruleAssignment ) )* otherlv_18= '}' ) | (otherlv_19= ':' ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_21_0= ruleAssignment ) )* ) )
            {
            // InternalSCTX.g:1986:3: ()
            // InternalSCTX.g:1987:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDataflowRegionAccess().getDataflowRegionAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:1996:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA74_0==RULE_COMMENT_ANNOTATION||LA74_0==106) ) {
=======
                if ( (LA74_0==RULE_COMMENT_ANNOTATION||LA74_0==102) ) {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    alt74=1;
                }


                switch (alt74) {
            	case 1 :
            	    // InternalSCTX.g:1997:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:1997:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:1998:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDataflowRegionAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_69);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);

            // InternalSCTX.g:2015:3: ( (lv_override_2_0= 'override' ) )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==45) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // InternalSCTX.g:2016:4: (lv_override_2_0= 'override' )
                    {
                    // InternalSCTX.g:2016:4: (lv_override_2_0= 'override' )
                    // InternalSCTX.g:2017:5: lv_override_2_0= 'override'
                    {
                    lv_override_2_0=(Token)match(input,45,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_override_2_0, grammarAccess.getDataflowRegionAccess().getOverrideOverrideKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDataflowRegionRule());
                      					}
                      					setWithLastConsumed(current, "override", true, "override");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,49,FollowSets000.FOLLOW_71); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getDataflowRegionAccess().getDataflowKeyword_3());
              		
            }
            // InternalSCTX.g:2033:3: ( (lv_name_4_0= ruleExtendedID ) )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==RULE_ID) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalSCTX.g:2034:4: (lv_name_4_0= ruleExtendedID )
                    {
                    // InternalSCTX.g:2034:4: (lv_name_4_0= ruleExtendedID )
                    // InternalSCTX.g:2035:5: lv_name_4_0= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDataflowRegionAccess().getNameExtendedIDParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_72);
                    lv_name_4_0=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_4_0,
                      						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2052:3: ( (lv_label_5_0= RULE_STRING ) )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==RULE_STRING) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalSCTX.g:2053:4: (lv_label_5_0= RULE_STRING )
                    {
                    // InternalSCTX.g:2053:4: (lv_label_5_0= RULE_STRING )
                    // InternalSCTX.g:2054:5: lv_label_5_0= RULE_STRING
                    {
                    lv_label_5_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_73); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_5_0, grammarAccess.getDataflowRegionAccess().getLabelSTRINGTerminalRuleCall_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDataflowRegionRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_5_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2070:3: (otherlv_6= 'for' ( (lv_counterVariable_7_0= ruleCounterVariable ) ) otherlv_8= ':' ( (lv_forStart_9_0= ruleIntOrReference ) ) (otherlv_10= 'to' ( (lv_forEnd_11_0= ruleIntOrReference ) ) )? )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==47) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalSCTX.g:2071:4: otherlv_6= 'for' ( (lv_counterVariable_7_0= ruleCounterVariable ) ) otherlv_8= ':' ( (lv_forStart_9_0= ruleIntOrReference ) ) (otherlv_10= 'to' ( (lv_forEnd_11_0= ruleIntOrReference ) ) )?
                    {
                    otherlv_6=(Token)match(input,47,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getDataflowRegionAccess().getForKeyword_6_0());
                      			
                    }
                    // InternalSCTX.g:2075:4: ( (lv_counterVariable_7_0= ruleCounterVariable ) )
                    // InternalSCTX.g:2076:5: (lv_counterVariable_7_0= ruleCounterVariable )
                    {
                    // InternalSCTX.g:2076:5: (lv_counterVariable_7_0= ruleCounterVariable )
                    // InternalSCTX.g:2077:6: lv_counterVariable_7_0= ruleCounterVariable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDataflowRegionAccess().getCounterVariableCounterVariableParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_57);
                    lv_counterVariable_7_0=ruleCounterVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
                      						}
                      						set(
                      							current,
                      							"counterVariable",
                      							lv_counterVariable_7_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.CounterVariable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_8=(Token)match(input,48,FollowSets000.FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getDataflowRegionAccess().getColonKeyword_6_2());
                      			
                    }
                    // InternalSCTX.g:2098:4: ( (lv_forStart_9_0= ruleIntOrReference ) )
                    // InternalSCTX.g:2099:5: (lv_forStart_9_0= ruleIntOrReference )
                    {
                    // InternalSCTX.g:2099:5: (lv_forStart_9_0= ruleIntOrReference )
                    // InternalSCTX.g:2100:6: lv_forStart_9_0= ruleIntOrReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDataflowRegionAccess().getForStartIntOrReferenceParserRuleCall_6_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_74);
                    lv_forStart_9_0=ruleIntOrReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
                      						}
                      						set(
                      							current,
                      							"forStart",
                      							lv_forStart_9_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.IntOrReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:2117:4: (otherlv_10= 'to' ( (lv_forEnd_11_0= ruleIntOrReference ) ) )?
                    int alt78=2;
                    int LA78_0 = input.LA(1);

                    if ( (LA78_0==35) ) {
                        alt78=1;
                    }
                    switch (alt78) {
                        case 1 :
                            // InternalSCTX.g:2118:5: otherlv_10= 'to' ( (lv_forEnd_11_0= ruleIntOrReference ) )
                            {
                            otherlv_10=(Token)match(input,35,FollowSets000.FOLLOW_58); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_10, grammarAccess.getDataflowRegionAccess().getToKeyword_6_4_0());
                              				
                            }
                            // InternalSCTX.g:2122:5: ( (lv_forEnd_11_0= ruleIntOrReference ) )
                            // InternalSCTX.g:2123:6: (lv_forEnd_11_0= ruleIntOrReference )
                            {
                            // InternalSCTX.g:2123:6: (lv_forEnd_11_0= ruleIntOrReference )
                            // InternalSCTX.g:2124:7: lv_forEnd_11_0= ruleIntOrReference
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getDataflowRegionAccess().getForEndIntOrReferenceParserRuleCall_6_4_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_75);
                            lv_forEnd_11_0=ruleIntOrReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
                              							}
                              							set(
                              								current,
                              								"forEnd",
                              								lv_forEnd_11_0,
                              								"de.cau.cs.kieler.sccharts.text.SCTX.IntOrReference");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2143:3: (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==29) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalSCTX.g:2144:4: otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_12=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getDataflowRegionAccess().getScheduleKeyword_7_0());
                      			
                    }
                    // InternalSCTX.g:2148:4: ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+
                    int cnt80=0;
                    loop80:
                    do {
                        int alt80=2;
                        int LA80_0 = input.LA(1);

                        if ( (LA80_0==RULE_ID) ) {
                            alt80=1;
                        }


                        switch (alt80) {
                    	case 1 :
                    	    // InternalSCTX.g:2149:5: (lv_schedule_13_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:2149:5: (lv_schedule_13_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:2150:6: lv_schedule_13_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getDataflowRegionAccess().getScheduleScheduleObjectReferenceParserRuleCall_7_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_76);
                    	    lv_schedule_13_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_13_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt80 >= 1 ) break loop80;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(80, input);
                                throw eee;
                        }
                        cnt80++;
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:2168:3: ( (lv_once_14_0= 'once' ) )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==50) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalSCTX.g:2169:4: (lv_once_14_0= 'once' )
                    {
                    // InternalSCTX.g:2169:4: (lv_once_14_0= 'once' )
                    // InternalSCTX.g:2170:5: lv_once_14_0= 'once'
                    {
                    lv_once_14_0=(Token)match(input,50,FollowSets000.FOLLOW_77); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_once_14_0, grammarAccess.getDataflowRegionAccess().getOnceOnceKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDataflowRegionRule());
                      					}
                      					setWithLastConsumed(current, "once", true, "once");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2182:3: ( (otherlv_15= '{' ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_17_0= ruleAssignment ) )* otherlv_18= '}' ) | (otherlv_19= ':' ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_21_0= ruleAssignment ) )* ) )
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==21) ) {
                alt87=1;
            }
            else if ( (LA87_0==48) ) {
                alt87=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 87, 0, input);

                throw nvae;
            }
            switch (alt87) {
                case 1 :
                    // InternalSCTX.g:2183:4: (otherlv_15= '{' ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_17_0= ruleAssignment ) )* otherlv_18= '}' )
                    {
                    // InternalSCTX.g:2183:4: (otherlv_15= '{' ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_17_0= ruleAssignment ) )* otherlv_18= '}' )
                    // InternalSCTX.g:2184:5: otherlv_15= '{' ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_17_0= ruleAssignment ) )* otherlv_18= '}'
                    {
                    otherlv_15=(Token)match(input,21,FollowSets000.FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_15, grammarAccess.getDataflowRegionAccess().getLeftCurlyBracketKeyword_9_0_0());
                      				
                    }
                    // InternalSCTX.g:2188:5: ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )*
                    loop83:
                    do {
                        int alt83=2;
                        alt83 = dfa83.predict(input);
                        switch (alt83) {
                    	case 1 :
                    	    // InternalSCTX.g:2189:6: (lv_declarations_16_0= ruleDeclarationWOSemicolon )
                    	    {
                    	    // InternalSCTX.g:2189:6: (lv_declarations_16_0= ruleDeclarationWOSemicolon )
                    	    // InternalSCTX.g:2190:7: lv_declarations_16_0= ruleDeclarationWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDataflowRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_9_0_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_78);
                    	    lv_declarations_16_0=ruleDeclarationWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_16_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop83;
                        }
                    } while (true);

                    // InternalSCTX.g:2207:5: ( (lv_equations_17_0= ruleAssignment ) )*
                    loop84:
                    do {
                        int alt84=2;
                        int LA84_0 = input.LA(1);

<<<<<<< HEAD
                        if ( (LA84_0==RULE_ID||LA84_0==RULE_COMMENT_ANNOTATION||LA84_0==51||LA84_0==106) ) {
=======
                        if ( (LA84_0==RULE_ID||LA84_0==RULE_COMMENT_ANNOTATION||LA84_0==102) ) {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                            alt84=1;
                        }


                        switch (alt84) {
                    	case 1 :
                    	    // InternalSCTX.g:2208:6: (lv_equations_17_0= ruleAssignment )
                    	    {
                    	    // InternalSCTX.g:2208:6: (lv_equations_17_0= ruleAssignment )
                    	    // InternalSCTX.g:2209:7: lv_equations_17_0= ruleAssignment
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDataflowRegionAccess().getEquationsAssignmentParserRuleCall_9_0_2_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_79);
                    	    lv_equations_17_0=ruleAssignment();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"equations",
                    	      								lv_equations_17_0,
                    	      								"de.cau.cs.kieler.kexpressions.keffects.KEffects.Assignment");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop84;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_18, grammarAccess.getDataflowRegionAccess().getRightCurlyBracketKeyword_9_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:2232:4: (otherlv_19= ':' ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_21_0= ruleAssignment ) )* )
                    {
                    // InternalSCTX.g:2232:4: (otherlv_19= ':' ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_21_0= ruleAssignment ) )* )
                    // InternalSCTX.g:2233:5: otherlv_19= ':' ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_21_0= ruleAssignment ) )*
                    {
                    otherlv_19=(Token)match(input,48,FollowSets000.FOLLOW_80); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_19, grammarAccess.getDataflowRegionAccess().getColonKeyword_9_1_0());
                      				
                    }
                    // InternalSCTX.g:2237:5: ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )*
                    loop85:
                    do {
                        int alt85=2;
                        alt85 = dfa85.predict(input);
                        switch (alt85) {
                    	case 1 :
                    	    // InternalSCTX.g:2238:6: (lv_declarations_20_0= ruleDeclarationWOSemicolon )
                    	    {
                    	    // InternalSCTX.g:2238:6: (lv_declarations_20_0= ruleDeclarationWOSemicolon )
                    	    // InternalSCTX.g:2239:7: lv_declarations_20_0= ruleDeclarationWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDataflowRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_9_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_80);
                    	    lv_declarations_20_0=ruleDeclarationWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_20_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop85;
                        }
                    } while (true);

                    // InternalSCTX.g:2256:5: ( (lv_equations_21_0= ruleAssignment ) )*
                    loop86:
                    do {
                        int alt86=2;
                        alt86 = dfa86.predict(input);
                        switch (alt86) {
                    	case 1 :
                    	    // InternalSCTX.g:2257:6: (lv_equations_21_0= ruleAssignment )
                    	    {
                    	    // InternalSCTX.g:2257:6: (lv_equations_21_0= ruleAssignment )
                    	    // InternalSCTX.g:2258:7: lv_equations_21_0= ruleAssignment
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDataflowRegionAccess().getEquationsAssignmentParserRuleCall_9_1_2_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_81);
                    	    lv_equations_21_0=ruleAssignment();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"equations",
                    	      								lv_equations_21_0,
                    	      								"de.cau.cs.kieler.kexpressions.keffects.KEffects.Assignment");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop86;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDataflowRegion"


<<<<<<< HEAD
    // $ANTLR start "entryRuleDataflowRegionEffects"
    // InternalSCTX.g:2281:1: entryRuleDataflowRegionEffects returns [EObject current=null] : iv_ruleDataflowRegionEffects= ruleDataflowRegionEffects EOF ;
    public final EObject entryRuleDataflowRegionEffects() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDataflowRegionEffects = null;


        try {
            // InternalSCTX.g:2281:62: (iv_ruleDataflowRegionEffects= ruleDataflowRegionEffects EOF )
            // InternalSCTX.g:2282:2: iv_ruleDataflowRegionEffects= ruleDataflowRegionEffects EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDataflowRegionEffectsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDataflowRegionEffects=ruleDataflowRegionEffects();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDataflowRegionEffects; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDataflowRegionEffects"


    // $ANTLR start "ruleDataflowRegionEffects"
    // InternalSCTX.g:2288:1: ruleDataflowRegionEffects returns [EObject current=null] : (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | (otherlv_2= 'emit' this_ValuedEmission_3= ruleValuedEmission ) | (otherlv_4= 'emit' this_PureEmission_5= rulePureEmission ) ) ;
    public final EObject ruleDataflowRegionEffects() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_Assignment_0 = null;

        EObject this_PostfixEffect_1 = null;

        EObject this_ValuedEmission_3 = null;

        EObject this_PureEmission_5 = null;



        	enterRule();

        try {
            // InternalSCTX.g:2294:2: ( (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | (otherlv_2= 'emit' this_ValuedEmission_3= ruleValuedEmission ) | (otherlv_4= 'emit' this_PureEmission_5= rulePureEmission ) ) )
            // InternalSCTX.g:2295:2: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | (otherlv_2= 'emit' this_ValuedEmission_3= ruleValuedEmission ) | (otherlv_4= 'emit' this_PureEmission_5= rulePureEmission ) )
            {
            // InternalSCTX.g:2295:2: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | (otherlv_2= 'emit' this_ValuedEmission_3= ruleValuedEmission ) | (otherlv_4= 'emit' this_PureEmission_5= rulePureEmission ) )
            int alt88=4;
            switch ( input.LA(1) ) {
            case RULE_COMMENT_ANNOTATION:
                {
                int LA88_1 = input.LA(2);

                if ( (synpred92_InternalSCTX()) ) {
                    alt88=1;
                }
                else if ( (synpred93_InternalSCTX()) ) {
                    alt88=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 88, 1, input);

                    throw nvae;
                }
                }
                break;
            case 106:
                {
                int LA88_2 = input.LA(2);

                if ( (synpred92_InternalSCTX()) ) {
                    alt88=1;
                }
                else if ( (synpred93_InternalSCTX()) ) {
                    alt88=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 88, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
                {
                int LA88_3 = input.LA(2);

                if ( (synpred92_InternalSCTX()) ) {
                    alt88=1;
                }
                else if ( (synpred93_InternalSCTX()) ) {
                    alt88=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 88, 3, input);

                    throw nvae;
                }
                }
                break;
            case 51:
                {
                int LA88_4 = input.LA(2);

                if ( (synpred94_InternalSCTX()) ) {
                    alt88=3;
                }
                else if ( (true) ) {
                    alt88=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 88, 4, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 88, 0, input);

                throw nvae;
            }

            switch (alt88) {
                case 1 :
                    // InternalSCTX.g:2296:3: this_Assignment_0= ruleAssignment
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDataflowRegionEffectsAccess().getAssignmentParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Assignment_0=ruleAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Assignment_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:2308:3: this_PostfixEffect_1= rulePostfixEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDataflowRegionEffectsAccess().getPostfixEffectParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PostfixEffect_1=rulePostfixEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PostfixEffect_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:2320:3: (otherlv_2= 'emit' this_ValuedEmission_3= ruleValuedEmission )
                    {
                    // InternalSCTX.g:2320:3: (otherlv_2= 'emit' this_ValuedEmission_3= ruleValuedEmission )
                    // InternalSCTX.g:2321:4: otherlv_2= 'emit' this_ValuedEmission_3= ruleValuedEmission
                    {
                    otherlv_2=(Token)match(input,51,FollowSets000.FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getDataflowRegionEffectsAccess().getEmitKeyword_2_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getDataflowRegionEffectsAccess().getValuedEmissionParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedEmission_3=ruleValuedEmission();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ValuedEmission_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCTX.g:2338:3: (otherlv_4= 'emit' this_PureEmission_5= rulePureEmission )
                    {
                    // InternalSCTX.g:2338:3: (otherlv_4= 'emit' this_PureEmission_5= rulePureEmission )
                    // InternalSCTX.g:2339:4: otherlv_4= 'emit' this_PureEmission_5= rulePureEmission
                    {
                    otherlv_4=(Token)match(input,51,FollowSets000.FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getDataflowRegionEffectsAccess().getEmitKeyword_3_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getDataflowRegionEffectsAccess().getPureEmissionParserRuleCall_3_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PureEmission_5=rulePureEmission();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_PureEmission_5;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDataflowRegionEffects"


=======
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    // $ANTLR start "entryRuleIntOrReference"
    // InternalSCTX.g:2281:1: entryRuleIntOrReference returns [EObject current=null] : iv_ruleIntOrReference= ruleIntOrReference EOF ;
    public final EObject entryRuleIntOrReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntOrReference = null;


        try {
            // InternalSCTX.g:2281:55: (iv_ruleIntOrReference= ruleIntOrReference EOF )
            // InternalSCTX.g:2282:2: iv_ruleIntOrReference= ruleIntOrReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntOrReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIntOrReference=ruleIntOrReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntOrReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntOrReference"


    // $ANTLR start "ruleIntOrReference"
    // InternalSCTX.g:2288:1: ruleIntOrReference returns [EObject current=null] : (this_IntValue_0= ruleIntValue | this_ValuedObjectReference_1= ruleValuedObjectReference ) ;
    public final EObject ruleIntOrReference() throws RecognitionException {
        EObject current = null;

        EObject this_IntValue_0 = null;

        EObject this_ValuedObjectReference_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:2294:2: ( (this_IntValue_0= ruleIntValue | this_ValuedObjectReference_1= ruleValuedObjectReference ) )
            // InternalSCTX.g:2295:2: (this_IntValue_0= ruleIntValue | this_ValuedObjectReference_1= ruleValuedObjectReference )
            {
            // InternalSCTX.g:2295:2: (this_IntValue_0= ruleIntValue | this_ValuedObjectReference_1= ruleValuedObjectReference )
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==RULE_INT) ) {
                alt88=1;
            }
            else if ( (LA88_0==RULE_ID) ) {
                alt88=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 88, 0, input);

                throw nvae;
            }
            switch (alt88) {
                case 1 :
                    // InternalSCTX.g:2296:3: this_IntValue_0= ruleIntValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getIntOrReferenceAccess().getIntValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IntValue_0=ruleIntValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IntValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:2308:3: this_ValuedObjectReference_1= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getIntOrReferenceAccess().getValuedObjectReferenceParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedObjectReference_1=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedObjectReference_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntOrReference"


    // $ANTLR start "entryRuleCounterVariable"
    // InternalSCTX.g:2323:1: entryRuleCounterVariable returns [EObject current=null] : iv_ruleCounterVariable= ruleCounterVariable EOF ;
    public final EObject entryRuleCounterVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCounterVariable = null;


        try {
            // InternalSCTX.g:2323:56: (iv_ruleCounterVariable= ruleCounterVariable EOF )
            // InternalSCTX.g:2324:2: iv_ruleCounterVariable= ruleCounterVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCounterVariableRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCounterVariable=ruleCounterVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCounterVariable; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCounterVariable"


    // $ANTLR start "ruleCounterVariable"
    // InternalSCTX.g:2330:1: ruleCounterVariable returns [EObject current=null] : ( (lv_name_0_0= rulePrimeID ) ) ;
    public final EObject ruleCounterVariable() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:2336:2: ( ( (lv_name_0_0= rulePrimeID ) ) )
            // InternalSCTX.g:2337:2: ( (lv_name_0_0= rulePrimeID ) )
            {
            // InternalSCTX.g:2337:2: ( (lv_name_0_0= rulePrimeID ) )
            // InternalSCTX.g:2338:3: (lv_name_0_0= rulePrimeID )
            {
            // InternalSCTX.g:2338:3: (lv_name_0_0= rulePrimeID )
            // InternalSCTX.g:2339:4: lv_name_0_0= rulePrimeID
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getCounterVariableAccess().getNamePrimeIDParserRuleCall_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_0_0=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getCounterVariableRule());
              				}
              				set(
              					current,
              					"name",
              					lv_name_0_0,
              					"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCounterVariable"


    // $ANTLR start "entryRuleLocalAction"
    // InternalSCTX.g:2359:1: entryRuleLocalAction returns [EObject current=null] : iv_ruleLocalAction= ruleLocalAction EOF ;
    public final EObject entryRuleLocalAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLocalAction = null;


        try {
            // InternalSCTX.g:2359:52: (iv_ruleLocalAction= ruleLocalAction EOF )
            // InternalSCTX.g:2360:2: iv_ruleLocalAction= ruleLocalAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocalActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLocalAction=ruleLocalAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocalAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLocalAction"


    // $ANTLR start "ruleLocalAction"
    // InternalSCTX.g:2366:1: ruleLocalAction returns [EObject current=null] : (this_EntryAction_0= ruleEntryAction | this_DuringAction_1= ruleDuringAction | this_ExitAction_2= ruleExitAction | this_SuspendAction_3= ruleSuspendAction | this_PrecedingAction_4= rulePrecedingAction | this_SucceedingAction_5= ruleSucceedingAction | this_PeriodAction_6= rulePeriodAction ) ;
    public final EObject ruleLocalAction() throws RecognitionException {
        EObject current = null;

        EObject this_EntryAction_0 = null;

        EObject this_DuringAction_1 = null;

        EObject this_ExitAction_2 = null;

        EObject this_SuspendAction_3 = null;

        EObject this_PrecedingAction_4 = null;

        EObject this_SucceedingAction_5 = null;

        EObject this_PeriodAction_6 = null;



        	enterRule();

        try {
            // InternalSCTX.g:2372:2: ( (this_EntryAction_0= ruleEntryAction | this_DuringAction_1= ruleDuringAction | this_ExitAction_2= ruleExitAction | this_SuspendAction_3= ruleSuspendAction | this_PrecedingAction_4= rulePrecedingAction | this_SucceedingAction_5= ruleSucceedingAction | this_PeriodAction_6= rulePeriodAction ) )
            // InternalSCTX.g:2373:2: (this_EntryAction_0= ruleEntryAction | this_DuringAction_1= ruleDuringAction | this_ExitAction_2= ruleExitAction | this_SuspendAction_3= ruleSuspendAction | this_PrecedingAction_4= rulePrecedingAction | this_SucceedingAction_5= ruleSucceedingAction | this_PeriodAction_6= rulePeriodAction )
            {
            // InternalSCTX.g:2373:2: (this_EntryAction_0= ruleEntryAction | this_DuringAction_1= ruleDuringAction | this_ExitAction_2= ruleExitAction | this_SuspendAction_3= ruleSuspendAction | this_PrecedingAction_4= rulePrecedingAction | this_SucceedingAction_5= ruleSucceedingAction | this_PeriodAction_6= rulePeriodAction )
            int alt89=7;
            alt89 = dfa89.predict(input);
            switch (alt89) {
                case 1 :
                    // InternalSCTX.g:2374:3: this_EntryAction_0= ruleEntryAction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLocalActionAccess().getEntryActionParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EntryAction_0=ruleEntryAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EntryAction_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:2386:3: this_DuringAction_1= ruleDuringAction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLocalActionAccess().getDuringActionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DuringAction_1=ruleDuringAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DuringAction_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:2398:3: this_ExitAction_2= ruleExitAction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLocalActionAccess().getExitActionParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExitAction_2=ruleExitAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExitAction_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:2410:3: this_SuspendAction_3= ruleSuspendAction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLocalActionAccess().getSuspendActionParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SuspendAction_3=ruleSuspendAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SuspendAction_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSCTX.g:2422:3: this_PrecedingAction_4= rulePrecedingAction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLocalActionAccess().getPrecedingActionParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrecedingAction_4=rulePrecedingAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrecedingAction_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalSCTX.g:2434:3: this_SucceedingAction_5= ruleSucceedingAction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLocalActionAccess().getSucceedingActionParserRuleCall_5());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SucceedingAction_5=ruleSucceedingAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SucceedingAction_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalSCTX.g:2446:3: this_PeriodAction_6= rulePeriodAction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLocalActionAccess().getPeriodActionParserRuleCall_6());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PeriodAction_6=rulePeriodAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PeriodAction_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocalAction"


    // $ANTLR start "entryRuleEntryAction"
    // InternalSCTX.g:2461:1: entryRuleEntryAction returns [EObject current=null] : iv_ruleEntryAction= ruleEntryAction EOF ;
    public final EObject entryRuleEntryAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEntryAction = null;


        try {
            // InternalSCTX.g:2461:52: (iv_ruleEntryAction= ruleEntryAction EOF )
            // InternalSCTX.g:2462:2: iv_ruleEntryAction= ruleEntryAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEntryActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEntryAction=ruleEntryAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEntryAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEntryAction"


    // $ANTLR start "ruleEntryAction"
    // InternalSCTX.g:2468:1: ruleEntryAction returns [EObject current=null] : ( () otherlv_1= 'entry' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleEntryAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_triggerProbability_5_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_label_11_0=null;
        EObject lv_trigger_3_0 = null;

        EObject lv_effects_7_0 = null;

        EObject lv_effects_9_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:2474:2: ( ( () otherlv_1= 'entry' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:2475:2: ( () otherlv_1= 'entry' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:2475:2: ( () otherlv_1= 'entry' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:2476:3: () otherlv_1= 'entry' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:2476:3: ()
            // InternalSCTX.g:2477:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getEntryActionAccess().getEntryActionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,51,FollowSets000.FOLLOW_82); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getEntryActionAccess().getEntryKeyword_1());
              		
            }
            // InternalSCTX.g:2490:3: (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==38) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // InternalSCTX.g:2491:4: otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )?
                    {
                    otherlv_2=(Token)match(input,38,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getEntryActionAccess().getIfKeyword_2_0());
                      			
                    }
                    // InternalSCTX.g:2495:4: ( (lv_trigger_3_0= ruleBoolScheduleExpression ) )
                    // InternalSCTX.g:2496:5: (lv_trigger_3_0= ruleBoolScheduleExpression )
                    {
                    // InternalSCTX.g:2496:5: (lv_trigger_3_0= ruleBoolScheduleExpression )
                    // InternalSCTX.g:2497:6: lv_trigger_3_0= ruleBoolScheduleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEntryActionAccess().getTriggerBoolScheduleExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_83);
                    lv_trigger_3_0=ruleBoolScheduleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEntryActionRule());
                      						}
                      						set(
                      							current,
                      							"trigger",
                      							lv_trigger_3_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.BoolScheduleExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:2514:4: (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )?
                    int alt90=2;
                    int LA90_0 = input.LA(1);

                    if ( (LA90_0==52) ) {
                        alt90=1;
                    }
                    switch (alt90) {
                        case 1 :
                            // InternalSCTX.g:2515:5: otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) )
                            {
                            otherlv_4=(Token)match(input,52,FollowSets000.FOLLOW_41); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getEntryActionAccess().getPrKeyword_2_2_0());
                              				
                            }
                            // InternalSCTX.g:2519:5: ( (lv_triggerProbability_5_0= RULE_FLOAT ) )
                            // InternalSCTX.g:2520:6: (lv_triggerProbability_5_0= RULE_FLOAT )
                            {
                            // InternalSCTX.g:2520:6: (lv_triggerProbability_5_0= RULE_FLOAT )
                            // InternalSCTX.g:2521:7: lv_triggerProbability_5_0= RULE_FLOAT
                            {
                            lv_triggerProbability_5_0=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_84); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_triggerProbability_5_0, grammarAccess.getEntryActionAccess().getTriggerProbabilityFLOATTerminalRuleCall_2_2_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getEntryActionRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"triggerProbability",
                              								lv_triggerProbability_5_0,
                              								"de.cau.cs.kieler.annotations.Annotations.FLOAT");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2539:3: (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )?
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==41) ) {
                alt93=1;
            }
            switch (alt93) {
                case 1 :
                    // InternalSCTX.g:2540:4: otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )*
                    {
                    otherlv_6=(Token)match(input,41,FollowSets000.FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getEntryActionAccess().getDoKeyword_3_0());
                      			
                    }
                    // InternalSCTX.g:2544:4: ( (lv_effects_7_0= ruleEffect ) )
                    // InternalSCTX.g:2545:5: (lv_effects_7_0= ruleEffect )
                    {
                    // InternalSCTX.g:2545:5: (lv_effects_7_0= ruleEffect )
                    // InternalSCTX.g:2546:6: lv_effects_7_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEntryActionAccess().getEffectsEffectParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_85);
                    lv_effects_7_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEntryActionRule());
                      						}
                      						add(
                      							current,
                      							"effects",
                      							lv_effects_7_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:2563:4: (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )*
                    loop92:
                    do {
                        int alt92=2;
                        int LA92_0 = input.LA(1);

                        if ( (LA92_0==42) ) {
                            alt92=1;
                        }


                        switch (alt92) {
                    	case 1 :
                    	    // InternalSCTX.g:2564:5: otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) )
                    	    {
                    	    otherlv_8=(Token)match(input,42,FollowSets000.FOLLOW_43); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getEntryActionAccess().getSemicolonKeyword_3_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:2568:5: ( (lv_effects_9_0= ruleEffect ) )
                    	    // InternalSCTX.g:2569:6: (lv_effects_9_0= ruleEffect )
                    	    {
                    	    // InternalSCTX.g:2569:6: (lv_effects_9_0= ruleEffect )
                    	    // InternalSCTX.g:2570:7: lv_effects_9_0= ruleEffect
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getEntryActionAccess().getEffectsEffectParserRuleCall_3_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_85);
                    	    lv_effects_9_0=ruleEffect();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getEntryActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"effects",
                    	      								lv_effects_9_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop92;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:2589:3: (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==44) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // InternalSCTX.g:2590:4: otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) )
                    {
                    otherlv_10=(Token)match(input,44,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getEntryActionAccess().getLabelKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:2594:4: ( (lv_label_11_0= RULE_STRING ) )
                    // InternalSCTX.g:2595:5: (lv_label_11_0= RULE_STRING )
                    {
                    // InternalSCTX.g:2595:5: (lv_label_11_0= RULE_STRING )
                    // InternalSCTX.g:2596:6: lv_label_11_0= RULE_STRING
                    {
                    lv_label_11_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_11_0, grammarAccess.getEntryActionAccess().getLabelSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getEntryActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_11_0,
                      							"de.cau.cs.kieler.annotations.Annotations.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEntryAction"


    // $ANTLR start "entryRuleDuringAction"
    // InternalSCTX.g:2617:1: entryRuleDuringAction returns [EObject current=null] : iv_ruleDuringAction= ruleDuringAction EOF ;
    public final EObject entryRuleDuringAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDuringAction = null;


        try {
            // InternalSCTX.g:2617:53: (iv_ruleDuringAction= ruleDuringAction EOF )
            // InternalSCTX.g:2618:2: iv_ruleDuringAction= ruleDuringAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDuringActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDuringAction=ruleDuringAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDuringAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDuringAction"


    // $ANTLR start "ruleDuringAction"
    // InternalSCTX.g:2624:1: ruleDuringAction returns [EObject current=null] : ( () ( (lv_delay_1_0= ruleDelayType ) )? otherlv_2= 'during' (otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) (otherlv_6= 'Pr=' ( (lv_triggerProbability_7_0= RULE_FLOAT ) ) )? )? (otherlv_8= 'do' ( (lv_effects_9_0= ruleEffect ) ) (otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) ) )* )? (otherlv_12= 'label' ( (lv_label_13_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleDuringAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_triggerDelay_4_0=null;
        Token otherlv_6=null;
        Token lv_triggerProbability_7_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token lv_label_13_0=null;
        Enumerator lv_delay_1_0 = null;

        EObject lv_trigger_5_0 = null;

        EObject lv_effects_9_0 = null;

        EObject lv_effects_11_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:2630:2: ( ( () ( (lv_delay_1_0= ruleDelayType ) )? otherlv_2= 'during' (otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) (otherlv_6= 'Pr=' ( (lv_triggerProbability_7_0= RULE_FLOAT ) ) )? )? (otherlv_8= 'do' ( (lv_effects_9_0= ruleEffect ) ) (otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) ) )* )? (otherlv_12= 'label' ( (lv_label_13_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:2631:2: ( () ( (lv_delay_1_0= ruleDelayType ) )? otherlv_2= 'during' (otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) (otherlv_6= 'Pr=' ( (lv_triggerProbability_7_0= RULE_FLOAT ) ) )? )? (otherlv_8= 'do' ( (lv_effects_9_0= ruleEffect ) ) (otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) ) )* )? (otherlv_12= 'label' ( (lv_label_13_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:2631:2: ( () ( (lv_delay_1_0= ruleDelayType ) )? otherlv_2= 'during' (otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) (otherlv_6= 'Pr=' ( (lv_triggerProbability_7_0= RULE_FLOAT ) ) )? )? (otherlv_8= 'do' ( (lv_effects_9_0= ruleEffect ) ) (otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) ) )* )? (otherlv_12= 'label' ( (lv_label_13_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:2632:3: () ( (lv_delay_1_0= ruleDelayType ) )? otherlv_2= 'during' (otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) (otherlv_6= 'Pr=' ( (lv_triggerProbability_7_0= RULE_FLOAT ) ) )? )? (otherlv_8= 'do' ( (lv_effects_9_0= ruleEffect ) ) (otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) ) )* )? (otherlv_12= 'label' ( (lv_label_13_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:2632:3: ()
            // InternalSCTX.g:2633:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDuringActionAccess().getDuringActionAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:2642:3: ( (lv_delay_1_0= ruleDelayType ) )?
            int alt95=2;
            int LA95_0 = input.LA(1);

<<<<<<< HEAD
            if ( ((LA96_0>=109 && LA96_0<=112)) ) {
                alt96=1;
=======
            if ( ((LA95_0>=105 && LA95_0<=108)) ) {
                alt95=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            switch (alt95) {
                case 1 :
                    // InternalSCTX.g:2643:4: (lv_delay_1_0= ruleDelayType )
                    {
                    // InternalSCTX.g:2643:4: (lv_delay_1_0= ruleDelayType )
                    // InternalSCTX.g:2644:5: lv_delay_1_0= ruleDelayType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDuringActionAccess().getDelayDelayTypeEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_86);
                    lv_delay_1_0=ruleDelayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDuringActionRule());
                      					}
                      					set(
                      						current,
                      						"delay",
                      						lv_delay_1_0,
                      						"de.cau.cs.kieler.sccharts.text.SCTX.DelayType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,53,FollowSets000.FOLLOW_82); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDuringActionAccess().getDuringKeyword_2());
              		
            }
            // InternalSCTX.g:2665:3: (otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) (otherlv_6= 'Pr=' ( (lv_triggerProbability_7_0= RULE_FLOAT ) ) )? )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==38) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalSCTX.g:2666:4: otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) (otherlv_6= 'Pr=' ( (lv_triggerProbability_7_0= RULE_FLOAT ) ) )?
                    {
                    otherlv_3=(Token)match(input,38,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getDuringActionAccess().getIfKeyword_3_0());
                      			
                    }
                    // InternalSCTX.g:2670:4: ( (lv_triggerDelay_4_0= RULE_INT ) )?
                    int alt96=2;
                    alt96 = dfa96.predict(input);
                    switch (alt96) {
                        case 1 :
                            // InternalSCTX.g:2671:5: (lv_triggerDelay_4_0= RULE_INT )
                            {
                            // InternalSCTX.g:2671:5: (lv_triggerDelay_4_0= RULE_INT )
                            // InternalSCTX.g:2672:6: lv_triggerDelay_4_0= RULE_INT
                            {
                            lv_triggerDelay_4_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_39); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_triggerDelay_4_0, grammarAccess.getDuringActionAccess().getTriggerDelayINTTerminalRuleCall_3_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getDuringActionRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"triggerDelay",
                              							lv_triggerDelay_4_0,
                              							"de.cau.cs.kieler.annotations.Annotations.INT");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:2688:4: ( (lv_trigger_5_0= ruleBoolScheduleExpression ) )
                    // InternalSCTX.g:2689:5: (lv_trigger_5_0= ruleBoolScheduleExpression )
                    {
                    // InternalSCTX.g:2689:5: (lv_trigger_5_0= ruleBoolScheduleExpression )
                    // InternalSCTX.g:2690:6: lv_trigger_5_0= ruleBoolScheduleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDuringActionAccess().getTriggerBoolScheduleExpressionParserRuleCall_3_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_87);
                    lv_trigger_5_0=ruleBoolScheduleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDuringActionRule());
                      						}
                      						set(
                      							current,
                      							"trigger",
                      							lv_trigger_5_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.BoolScheduleExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:2707:4: (otherlv_6= 'Pr=' ( (lv_triggerProbability_7_0= RULE_FLOAT ) ) )?
                    int alt97=2;
                    int LA97_0 = input.LA(1);

                    if ( (LA97_0==39) ) {
                        alt97=1;
                    }
                    switch (alt97) {
                        case 1 :
                            // InternalSCTX.g:2708:5: otherlv_6= 'Pr=' ( (lv_triggerProbability_7_0= RULE_FLOAT ) )
                            {
                            otherlv_6=(Token)match(input,39,FollowSets000.FOLLOW_41); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_6, grammarAccess.getDuringActionAccess().getPrKeyword_3_3_0());
                              				
                            }
                            // InternalSCTX.g:2712:5: ( (lv_triggerProbability_7_0= RULE_FLOAT ) )
                            // InternalSCTX.g:2713:6: (lv_triggerProbability_7_0= RULE_FLOAT )
                            {
                            // InternalSCTX.g:2713:6: (lv_triggerProbability_7_0= RULE_FLOAT )
                            // InternalSCTX.g:2714:7: lv_triggerProbability_7_0= RULE_FLOAT
                            {
                            lv_triggerProbability_7_0=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_84); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_triggerProbability_7_0, grammarAccess.getDuringActionAccess().getTriggerProbabilityFLOATTerminalRuleCall_3_3_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDuringActionRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"triggerProbability",
                              								lv_triggerProbability_7_0,
                              								"de.cau.cs.kieler.annotations.Annotations.FLOAT");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2732:3: (otherlv_8= 'do' ( (lv_effects_9_0= ruleEffect ) ) (otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) ) )* )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==41) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // InternalSCTX.g:2733:4: otherlv_8= 'do' ( (lv_effects_9_0= ruleEffect ) ) (otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) ) )*
                    {
                    otherlv_8=(Token)match(input,41,FollowSets000.FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getDuringActionAccess().getDoKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:2737:4: ( (lv_effects_9_0= ruleEffect ) )
                    // InternalSCTX.g:2738:5: (lv_effects_9_0= ruleEffect )
                    {
                    // InternalSCTX.g:2738:5: (lv_effects_9_0= ruleEffect )
                    // InternalSCTX.g:2739:6: lv_effects_9_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDuringActionAccess().getEffectsEffectParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_85);
                    lv_effects_9_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDuringActionRule());
                      						}
                      						add(
                      							current,
                      							"effects",
                      							lv_effects_9_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:2756:4: (otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) ) )*
                    loop99:
                    do {
                        int alt99=2;
                        int LA99_0 = input.LA(1);

                        if ( (LA99_0==42) ) {
                            alt99=1;
                        }


                        switch (alt99) {
                    	case 1 :
                    	    // InternalSCTX.g:2757:5: otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) )
                    	    {
                    	    otherlv_10=(Token)match(input,42,FollowSets000.FOLLOW_43); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_10, grammarAccess.getDuringActionAccess().getSemicolonKeyword_4_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:2761:5: ( (lv_effects_11_0= ruleEffect ) )
                    	    // InternalSCTX.g:2762:6: (lv_effects_11_0= ruleEffect )
                    	    {
                    	    // InternalSCTX.g:2762:6: (lv_effects_11_0= ruleEffect )
                    	    // InternalSCTX.g:2763:7: lv_effects_11_0= ruleEffect
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDuringActionAccess().getEffectsEffectParserRuleCall_4_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_85);
                    	    lv_effects_11_0=ruleEffect();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDuringActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"effects",
                    	      								lv_effects_11_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop99;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:2782:3: (otherlv_12= 'label' ( (lv_label_13_0= RULE_STRING ) ) )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==44) ) {
                alt101=1;
            }
            switch (alt101) {
                case 1 :
                    // InternalSCTX.g:2783:4: otherlv_12= 'label' ( (lv_label_13_0= RULE_STRING ) )
                    {
                    otherlv_12=(Token)match(input,44,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getDuringActionAccess().getLabelKeyword_5_0());
                      			
                    }
                    // InternalSCTX.g:2787:4: ( (lv_label_13_0= RULE_STRING ) )
                    // InternalSCTX.g:2788:5: (lv_label_13_0= RULE_STRING )
                    {
                    // InternalSCTX.g:2788:5: (lv_label_13_0= RULE_STRING )
                    // InternalSCTX.g:2789:6: lv_label_13_0= RULE_STRING
                    {
                    lv_label_13_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_13_0, grammarAccess.getDuringActionAccess().getLabelSTRINGTerminalRuleCall_5_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDuringActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_13_0,
                      							"de.cau.cs.kieler.annotations.Annotations.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDuringAction"


    // $ANTLR start "entryRuleExitAction"
    // InternalSCTX.g:2810:1: entryRuleExitAction returns [EObject current=null] : iv_ruleExitAction= ruleExitAction EOF ;
    public final EObject entryRuleExitAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExitAction = null;


        try {
            // InternalSCTX.g:2810:51: (iv_ruleExitAction= ruleExitAction EOF )
            // InternalSCTX.g:2811:2: iv_ruleExitAction= ruleExitAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExitActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExitAction=ruleExitAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExitAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExitAction"


    // $ANTLR start "ruleExitAction"
    // InternalSCTX.g:2817:1: ruleExitAction returns [EObject current=null] : ( () otherlv_1= 'exit' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleExitAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_triggerProbability_5_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_label_11_0=null;
        EObject lv_trigger_3_0 = null;

        EObject lv_effects_7_0 = null;

        EObject lv_effects_9_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:2823:2: ( ( () otherlv_1= 'exit' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:2824:2: ( () otherlv_1= 'exit' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:2824:2: ( () otherlv_1= 'exit' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:2825:3: () otherlv_1= 'exit' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:2825:3: ()
            // InternalSCTX.g:2826:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getExitActionAccess().getExitActionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,54,FollowSets000.FOLLOW_82); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getExitActionAccess().getExitKeyword_1());
              		
            }
            // InternalSCTX.g:2839:3: (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==38) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalSCTX.g:2840:4: otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )?
                    {
                    otherlv_2=(Token)match(input,38,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getExitActionAccess().getIfKeyword_2_0());
                      			
                    }
                    // InternalSCTX.g:2844:4: ( (lv_trigger_3_0= ruleBoolScheduleExpression ) )
                    // InternalSCTX.g:2845:5: (lv_trigger_3_0= ruleBoolScheduleExpression )
                    {
                    // InternalSCTX.g:2845:5: (lv_trigger_3_0= ruleBoolScheduleExpression )
                    // InternalSCTX.g:2846:6: lv_trigger_3_0= ruleBoolScheduleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExitActionAccess().getTriggerBoolScheduleExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_83);
                    lv_trigger_3_0=ruleBoolScheduleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExitActionRule());
                      						}
                      						set(
                      							current,
                      							"trigger",
                      							lv_trigger_3_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.BoolScheduleExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:2863:4: (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )?
                    int alt102=2;
                    int LA102_0 = input.LA(1);

                    if ( (LA102_0==52) ) {
                        alt102=1;
                    }
                    switch (alt102) {
                        case 1 :
                            // InternalSCTX.g:2864:5: otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) )
                            {
                            otherlv_4=(Token)match(input,52,FollowSets000.FOLLOW_41); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getExitActionAccess().getPrKeyword_2_2_0());
                              				
                            }
                            // InternalSCTX.g:2868:5: ( (lv_triggerProbability_5_0= RULE_FLOAT ) )
                            // InternalSCTX.g:2869:6: (lv_triggerProbability_5_0= RULE_FLOAT )
                            {
                            // InternalSCTX.g:2869:6: (lv_triggerProbability_5_0= RULE_FLOAT )
                            // InternalSCTX.g:2870:7: lv_triggerProbability_5_0= RULE_FLOAT
                            {
                            lv_triggerProbability_5_0=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_84); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_triggerProbability_5_0, grammarAccess.getExitActionAccess().getTriggerProbabilityFLOATTerminalRuleCall_2_2_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getExitActionRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"triggerProbability",
                              								lv_triggerProbability_5_0,
                              								"de.cau.cs.kieler.annotations.Annotations.FLOAT");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2888:3: (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==41) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // InternalSCTX.g:2889:4: otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )*
                    {
                    otherlv_6=(Token)match(input,41,FollowSets000.FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getExitActionAccess().getDoKeyword_3_0());
                      			
                    }
                    // InternalSCTX.g:2893:4: ( (lv_effects_7_0= ruleEffect ) )
                    // InternalSCTX.g:2894:5: (lv_effects_7_0= ruleEffect )
                    {
                    // InternalSCTX.g:2894:5: (lv_effects_7_0= ruleEffect )
                    // InternalSCTX.g:2895:6: lv_effects_7_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExitActionAccess().getEffectsEffectParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_85);
                    lv_effects_7_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExitActionRule());
                      						}
                      						add(
                      							current,
                      							"effects",
                      							lv_effects_7_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:2912:4: (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )*
                    loop104:
                    do {
                        int alt104=2;
                        int LA104_0 = input.LA(1);

                        if ( (LA104_0==42) ) {
                            alt104=1;
                        }


                        switch (alt104) {
                    	case 1 :
                    	    // InternalSCTX.g:2913:5: otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) )
                    	    {
                    	    otherlv_8=(Token)match(input,42,FollowSets000.FOLLOW_43); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getExitActionAccess().getSemicolonKeyword_3_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:2917:5: ( (lv_effects_9_0= ruleEffect ) )
                    	    // InternalSCTX.g:2918:6: (lv_effects_9_0= ruleEffect )
                    	    {
                    	    // InternalSCTX.g:2918:6: (lv_effects_9_0= ruleEffect )
                    	    // InternalSCTX.g:2919:7: lv_effects_9_0= ruleEffect
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getExitActionAccess().getEffectsEffectParserRuleCall_3_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_85);
                    	    lv_effects_9_0=ruleEffect();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getExitActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"effects",
                    	      								lv_effects_9_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop104;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:2938:3: (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==44) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // InternalSCTX.g:2939:4: otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) )
                    {
                    otherlv_10=(Token)match(input,44,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getExitActionAccess().getLabelKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:2943:4: ( (lv_label_11_0= RULE_STRING ) )
                    // InternalSCTX.g:2944:5: (lv_label_11_0= RULE_STRING )
                    {
                    // InternalSCTX.g:2944:5: (lv_label_11_0= RULE_STRING )
                    // InternalSCTX.g:2945:6: lv_label_11_0= RULE_STRING
                    {
                    lv_label_11_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_11_0, grammarAccess.getExitActionAccess().getLabelSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getExitActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_11_0,
                      							"de.cau.cs.kieler.annotations.Annotations.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExitAction"


    // $ANTLR start "entryRuleSuspendAction"
    // InternalSCTX.g:2966:1: entryRuleSuspendAction returns [EObject current=null] : iv_ruleSuspendAction= ruleSuspendAction EOF ;
    public final EObject entryRuleSuspendAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSuspendAction = null;


        try {
            // InternalSCTX.g:2966:54: (iv_ruleSuspendAction= ruleSuspendAction EOF )
            // InternalSCTX.g:2967:2: iv_ruleSuspendAction= ruleSuspendAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSuspendActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSuspendAction=ruleSuspendAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSuspendAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSuspendAction"


    // $ANTLR start "ruleSuspendAction"
    // InternalSCTX.g:2973:1: ruleSuspendAction returns [EObject current=null] : ( () ( (lv_delay_1_0= ruleDelayType ) )? ( (lv_weak_2_0= 'weak' ) )? otherlv_3= 'suspend' (otherlv_4= 'if' ( (lv_triggerDelay_5_0= RULE_INT ) )? ( (lv_trigger_6_0= ruleBoolScheduleExpression ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleSuspendAction() throws RecognitionException {
        EObject current = null;

        Token lv_weak_2_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token lv_triggerDelay_5_0=null;
        Token otherlv_7=null;
        Token lv_triggerProbability_8_0=null;
        Token otherlv_9=null;
        Token lv_label_10_0=null;
        Enumerator lv_delay_1_0 = null;

        EObject lv_trigger_6_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:2979:2: ( ( () ( (lv_delay_1_0= ruleDelayType ) )? ( (lv_weak_2_0= 'weak' ) )? otherlv_3= 'suspend' (otherlv_4= 'if' ( (lv_triggerDelay_5_0= RULE_INT ) )? ( (lv_trigger_6_0= ruleBoolScheduleExpression ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:2980:2: ( () ( (lv_delay_1_0= ruleDelayType ) )? ( (lv_weak_2_0= 'weak' ) )? otherlv_3= 'suspend' (otherlv_4= 'if' ( (lv_triggerDelay_5_0= RULE_INT ) )? ( (lv_trigger_6_0= ruleBoolScheduleExpression ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:2980:2: ( () ( (lv_delay_1_0= ruleDelayType ) )? ( (lv_weak_2_0= 'weak' ) )? otherlv_3= 'suspend' (otherlv_4= 'if' ( (lv_triggerDelay_5_0= RULE_INT ) )? ( (lv_trigger_6_0= ruleBoolScheduleExpression ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:2981:3: () ( (lv_delay_1_0= ruleDelayType ) )? ( (lv_weak_2_0= 'weak' ) )? otherlv_3= 'suspend' (otherlv_4= 'if' ( (lv_triggerDelay_5_0= RULE_INT ) )? ( (lv_trigger_6_0= ruleBoolScheduleExpression ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:2981:3: ()
            // InternalSCTX.g:2982:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSuspendActionAccess().getSuspendActionAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:2991:3: ( (lv_delay_1_0= ruleDelayType ) )?
            int alt107=2;
            int LA107_0 = input.LA(1);

<<<<<<< HEAD
            if ( ((LA108_0>=109 && LA108_0<=112)) ) {
                alt108=1;
=======
            if ( ((LA107_0>=105 && LA107_0<=108)) ) {
                alt107=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            switch (alt107) {
                case 1 :
                    // InternalSCTX.g:2992:4: (lv_delay_1_0= ruleDelayType )
                    {
                    // InternalSCTX.g:2992:4: (lv_delay_1_0= ruleDelayType )
                    // InternalSCTX.g:2993:5: lv_delay_1_0= ruleDelayType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSuspendActionAccess().getDelayDelayTypeEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_88);
                    lv_delay_1_0=ruleDelayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSuspendActionRule());
                      					}
                      					set(
                      						current,
                      						"delay",
                      						lv_delay_1_0,
                      						"de.cau.cs.kieler.sccharts.text.SCTX.DelayType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3010:3: ( (lv_weak_2_0= 'weak' ) )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==55) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalSCTX.g:3011:4: (lv_weak_2_0= 'weak' )
                    {
                    // InternalSCTX.g:3011:4: (lv_weak_2_0= 'weak' )
                    // InternalSCTX.g:3012:5: lv_weak_2_0= 'weak'
                    {
                    lv_weak_2_0=(Token)match(input,55,FollowSets000.FOLLOW_89); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_weak_2_0, grammarAccess.getSuspendActionAccess().getWeakWeakKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSuspendActionRule());
                      					}
                      					setWithLastConsumed(current, "weak", true, "weak");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,56,FollowSets000.FOLLOW_90); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getSuspendActionAccess().getSuspendKeyword_3());
              		
            }
            // InternalSCTX.g:3028:3: (otherlv_4= 'if' ( (lv_triggerDelay_5_0= RULE_INT ) )? ( (lv_trigger_6_0= ruleBoolScheduleExpression ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==38) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // InternalSCTX.g:3029:4: otherlv_4= 'if' ( (lv_triggerDelay_5_0= RULE_INT ) )? ( (lv_trigger_6_0= ruleBoolScheduleExpression ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )?
                    {
                    otherlv_4=(Token)match(input,38,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getSuspendActionAccess().getIfKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:3033:4: ( (lv_triggerDelay_5_0= RULE_INT ) )?
                    int alt109=2;
                    alt109 = dfa109.predict(input);
                    switch (alt109) {
                        case 1 :
                            // InternalSCTX.g:3034:5: (lv_triggerDelay_5_0= RULE_INT )
                            {
                            // InternalSCTX.g:3034:5: (lv_triggerDelay_5_0= RULE_INT )
                            // InternalSCTX.g:3035:6: lv_triggerDelay_5_0= RULE_INT
                            {
                            lv_triggerDelay_5_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_39); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_triggerDelay_5_0, grammarAccess.getSuspendActionAccess().getTriggerDelayINTTerminalRuleCall_4_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getSuspendActionRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"triggerDelay",
                              							lv_triggerDelay_5_0,
                              							"de.cau.cs.kieler.annotations.Annotations.INT");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:3051:4: ( (lv_trigger_6_0= ruleBoolScheduleExpression ) )
                    // InternalSCTX.g:3052:5: (lv_trigger_6_0= ruleBoolScheduleExpression )
                    {
                    // InternalSCTX.g:3052:5: (lv_trigger_6_0= ruleBoolScheduleExpression )
                    // InternalSCTX.g:3053:6: lv_trigger_6_0= ruleBoolScheduleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSuspendActionAccess().getTriggerBoolScheduleExpressionParserRuleCall_4_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_91);
                    lv_trigger_6_0=ruleBoolScheduleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSuspendActionRule());
                      						}
                      						set(
                      							current,
                      							"trigger",
                      							lv_trigger_6_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.BoolScheduleExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:3070:4: (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )?
                    int alt110=2;
                    int LA110_0 = input.LA(1);

                    if ( (LA110_0==39) ) {
                        alt110=1;
                    }
                    switch (alt110) {
                        case 1 :
                            // InternalSCTX.g:3071:5: otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) )
                            {
                            otherlv_7=(Token)match(input,39,FollowSets000.FOLLOW_41); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_7, grammarAccess.getSuspendActionAccess().getPrKeyword_4_3_0());
                              				
                            }
                            // InternalSCTX.g:3075:5: ( (lv_triggerProbability_8_0= RULE_FLOAT ) )
                            // InternalSCTX.g:3076:6: (lv_triggerProbability_8_0= RULE_FLOAT )
                            {
                            // InternalSCTX.g:3076:6: (lv_triggerProbability_8_0= RULE_FLOAT )
                            // InternalSCTX.g:3077:7: lv_triggerProbability_8_0= RULE_FLOAT
                            {
                            lv_triggerProbability_8_0=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_47); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_triggerProbability_8_0, grammarAccess.getSuspendActionAccess().getTriggerProbabilityFLOATTerminalRuleCall_4_3_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSuspendActionRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"triggerProbability",
                              								lv_triggerProbability_8_0,
                              								"de.cau.cs.kieler.annotations.Annotations.FLOAT");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3095:3: (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==44) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // InternalSCTX.g:3096:4: otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) )
                    {
                    otherlv_9=(Token)match(input,44,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getSuspendActionAccess().getLabelKeyword_5_0());
                      			
                    }
                    // InternalSCTX.g:3100:4: ( (lv_label_10_0= RULE_STRING ) )
                    // InternalSCTX.g:3101:5: (lv_label_10_0= RULE_STRING )
                    {
                    // InternalSCTX.g:3101:5: (lv_label_10_0= RULE_STRING )
                    // InternalSCTX.g:3102:6: lv_label_10_0= RULE_STRING
                    {
                    lv_label_10_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_10_0, grammarAccess.getSuspendActionAccess().getLabelSTRINGTerminalRuleCall_5_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSuspendActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_10_0,
                      							"de.cau.cs.kieler.annotations.Annotations.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSuspendAction"


    // $ANTLR start "entryRulePrecedingAction"
    // InternalSCTX.g:3123:1: entryRulePrecedingAction returns [EObject current=null] : iv_rulePrecedingAction= rulePrecedingAction EOF ;
    public final EObject entryRulePrecedingAction() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrecedingAction = null;


        try {
            // InternalSCTX.g:3123:56: (iv_rulePrecedingAction= rulePrecedingAction EOF )
            // InternalSCTX.g:3124:2: iv_rulePrecedingAction= rulePrecedingAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrecedingActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrecedingAction=rulePrecedingAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrecedingAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrecedingAction"


    // $ANTLR start "rulePrecedingAction"
    // InternalSCTX.g:3130:1: rulePrecedingAction returns [EObject current=null] : ( () otherlv_1= 'preceding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? ) ;
    public final EObject rulePrecedingAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_triggerProbability_5_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_label_11_0=null;
        EObject lv_trigger_3_0 = null;

        EObject lv_effects_7_0 = null;

        EObject lv_effects_9_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:3136:2: ( ( () otherlv_1= 'preceding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:3137:2: ( () otherlv_1= 'preceding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:3137:2: ( () otherlv_1= 'preceding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:3138:3: () otherlv_1= 'preceding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:3138:3: ()
            // InternalSCTX.g:3139:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPrecedingActionAccess().getPrecedingActionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,57,FollowSets000.FOLLOW_82); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getPrecedingActionAccess().getPrecedingKeyword_1());
              		
            }
            // InternalSCTX.g:3152:3: (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==38) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalSCTX.g:3153:4: otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )?
                    {
                    otherlv_2=(Token)match(input,38,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPrecedingActionAccess().getIfKeyword_2_0());
                      			
                    }
                    // InternalSCTX.g:3157:4: ( (lv_trigger_3_0= ruleBoolScheduleExpression ) )
                    // InternalSCTX.g:3158:5: (lv_trigger_3_0= ruleBoolScheduleExpression )
                    {
                    // InternalSCTX.g:3158:5: (lv_trigger_3_0= ruleBoolScheduleExpression )
                    // InternalSCTX.g:3159:6: lv_trigger_3_0= ruleBoolScheduleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrecedingActionAccess().getTriggerBoolScheduleExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_83);
                    lv_trigger_3_0=ruleBoolScheduleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrecedingActionRule());
                      						}
                      						set(
                      							current,
                      							"trigger",
                      							lv_trigger_3_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.BoolScheduleExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:3176:4: (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )?
                    int alt113=2;
                    int LA113_0 = input.LA(1);

                    if ( (LA113_0==52) ) {
                        alt113=1;
                    }
                    switch (alt113) {
                        case 1 :
                            // InternalSCTX.g:3177:5: otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) )
                            {
                            otherlv_4=(Token)match(input,52,FollowSets000.FOLLOW_41); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getPrecedingActionAccess().getPrKeyword_2_2_0());
                              				
                            }
                            // InternalSCTX.g:3181:5: ( (lv_triggerProbability_5_0= RULE_FLOAT ) )
                            // InternalSCTX.g:3182:6: (lv_triggerProbability_5_0= RULE_FLOAT )
                            {
                            // InternalSCTX.g:3182:6: (lv_triggerProbability_5_0= RULE_FLOAT )
                            // InternalSCTX.g:3183:7: lv_triggerProbability_5_0= RULE_FLOAT
                            {
                            lv_triggerProbability_5_0=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_84); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_triggerProbability_5_0, grammarAccess.getPrecedingActionAccess().getTriggerProbabilityFLOATTerminalRuleCall_2_2_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getPrecedingActionRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"triggerProbability",
                              								lv_triggerProbability_5_0,
                              								"de.cau.cs.kieler.annotations.Annotations.FLOAT");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3201:3: (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==41) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalSCTX.g:3202:4: otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )*
                    {
                    otherlv_6=(Token)match(input,41,FollowSets000.FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getPrecedingActionAccess().getDoKeyword_3_0());
                      			
                    }
                    // InternalSCTX.g:3206:4: ( (lv_effects_7_0= ruleEffect ) )
                    // InternalSCTX.g:3207:5: (lv_effects_7_0= ruleEffect )
                    {
                    // InternalSCTX.g:3207:5: (lv_effects_7_0= ruleEffect )
                    // InternalSCTX.g:3208:6: lv_effects_7_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrecedingActionAccess().getEffectsEffectParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_85);
                    lv_effects_7_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrecedingActionRule());
                      						}
                      						add(
                      							current,
                      							"effects",
                      							lv_effects_7_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:3225:4: (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )*
                    loop115:
                    do {
                        int alt115=2;
                        int LA115_0 = input.LA(1);

                        if ( (LA115_0==42) ) {
                            alt115=1;
                        }


                        switch (alt115) {
                    	case 1 :
                    	    // InternalSCTX.g:3226:5: otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) )
                    	    {
                    	    otherlv_8=(Token)match(input,42,FollowSets000.FOLLOW_43); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getPrecedingActionAccess().getSemicolonKeyword_3_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:3230:5: ( (lv_effects_9_0= ruleEffect ) )
                    	    // InternalSCTX.g:3231:6: (lv_effects_9_0= ruleEffect )
                    	    {
                    	    // InternalSCTX.g:3231:6: (lv_effects_9_0= ruleEffect )
                    	    // InternalSCTX.g:3232:7: lv_effects_9_0= ruleEffect
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getPrecedingActionAccess().getEffectsEffectParserRuleCall_3_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_85);
                    	    lv_effects_9_0=ruleEffect();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getPrecedingActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"effects",
                    	      								lv_effects_9_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop115;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:3251:3: (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==44) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalSCTX.g:3252:4: otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) )
                    {
                    otherlv_10=(Token)match(input,44,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getPrecedingActionAccess().getLabelKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:3256:4: ( (lv_label_11_0= RULE_STRING ) )
                    // InternalSCTX.g:3257:5: (lv_label_11_0= RULE_STRING )
                    {
                    // InternalSCTX.g:3257:5: (lv_label_11_0= RULE_STRING )
                    // InternalSCTX.g:3258:6: lv_label_11_0= RULE_STRING
                    {
                    lv_label_11_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_11_0, grammarAccess.getPrecedingActionAccess().getLabelSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPrecedingActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_11_0,
                      							"de.cau.cs.kieler.annotations.Annotations.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrecedingAction"


    // $ANTLR start "entryRuleSucceedingAction"
    // InternalSCTX.g:3279:1: entryRuleSucceedingAction returns [EObject current=null] : iv_ruleSucceedingAction= ruleSucceedingAction EOF ;
    public final EObject entryRuleSucceedingAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSucceedingAction = null;


        try {
            // InternalSCTX.g:3279:57: (iv_ruleSucceedingAction= ruleSucceedingAction EOF )
            // InternalSCTX.g:3280:2: iv_ruleSucceedingAction= ruleSucceedingAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSucceedingActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSucceedingAction=ruleSucceedingAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSucceedingAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSucceedingAction"


    // $ANTLR start "ruleSucceedingAction"
    // InternalSCTX.g:3286:1: ruleSucceedingAction returns [EObject current=null] : ( () otherlv_1= 'succeeding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleSucceedingAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_triggerProbability_5_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_label_11_0=null;
        EObject lv_trigger_3_0 = null;

        EObject lv_effects_7_0 = null;

        EObject lv_effects_9_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:3292:2: ( ( () otherlv_1= 'succeeding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:3293:2: ( () otherlv_1= 'succeeding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:3293:2: ( () otherlv_1= 'succeeding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:3294:3: () otherlv_1= 'succeeding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )? (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:3294:3: ()
            // InternalSCTX.g:3295:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSucceedingActionAccess().getSucceedingActionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,58,FollowSets000.FOLLOW_82); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSucceedingActionAccess().getSucceedingKeyword_1());
              		
            }
            // InternalSCTX.g:3308:3: (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )? )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==38) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // InternalSCTX.g:3309:4: otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolScheduleExpression ) ) (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )?
                    {
                    otherlv_2=(Token)match(input,38,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getSucceedingActionAccess().getIfKeyword_2_0());
                      			
                    }
                    // InternalSCTX.g:3313:4: ( (lv_trigger_3_0= ruleBoolScheduleExpression ) )
                    // InternalSCTX.g:3314:5: (lv_trigger_3_0= ruleBoolScheduleExpression )
                    {
                    // InternalSCTX.g:3314:5: (lv_trigger_3_0= ruleBoolScheduleExpression )
                    // InternalSCTX.g:3315:6: lv_trigger_3_0= ruleBoolScheduleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSucceedingActionAccess().getTriggerBoolScheduleExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_83);
                    lv_trigger_3_0=ruleBoolScheduleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSucceedingActionRule());
                      						}
                      						set(
                      							current,
                      							"trigger",
                      							lv_trigger_3_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.BoolScheduleExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:3332:4: (otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) ) )?
                    int alt118=2;
                    int LA118_0 = input.LA(1);

                    if ( (LA118_0==52) ) {
                        alt118=1;
                    }
                    switch (alt118) {
                        case 1 :
                            // InternalSCTX.g:3333:5: otherlv_4= 'Pr' ( (lv_triggerProbability_5_0= RULE_FLOAT ) )
                            {
                            otherlv_4=(Token)match(input,52,FollowSets000.FOLLOW_41); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getSucceedingActionAccess().getPrKeyword_2_2_0());
                              				
                            }
                            // InternalSCTX.g:3337:5: ( (lv_triggerProbability_5_0= RULE_FLOAT ) )
                            // InternalSCTX.g:3338:6: (lv_triggerProbability_5_0= RULE_FLOAT )
                            {
                            // InternalSCTX.g:3338:6: (lv_triggerProbability_5_0= RULE_FLOAT )
                            // InternalSCTX.g:3339:7: lv_triggerProbability_5_0= RULE_FLOAT
                            {
                            lv_triggerProbability_5_0=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_84); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_triggerProbability_5_0, grammarAccess.getSucceedingActionAccess().getTriggerProbabilityFLOATTerminalRuleCall_2_2_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSucceedingActionRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"triggerProbability",
                              								lv_triggerProbability_5_0,
                              								"de.cau.cs.kieler.annotations.Annotations.FLOAT");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3357:3: (otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )* )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==41) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // InternalSCTX.g:3358:4: otherlv_6= 'do' ( (lv_effects_7_0= ruleEffect ) ) (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )*
                    {
                    otherlv_6=(Token)match(input,41,FollowSets000.FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getSucceedingActionAccess().getDoKeyword_3_0());
                      			
                    }
                    // InternalSCTX.g:3362:4: ( (lv_effects_7_0= ruleEffect ) )
                    // InternalSCTX.g:3363:5: (lv_effects_7_0= ruleEffect )
                    {
                    // InternalSCTX.g:3363:5: (lv_effects_7_0= ruleEffect )
                    // InternalSCTX.g:3364:6: lv_effects_7_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSucceedingActionAccess().getEffectsEffectParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_85);
                    lv_effects_7_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSucceedingActionRule());
                      						}
                      						add(
                      							current,
                      							"effects",
                      							lv_effects_7_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:3381:4: (otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) ) )*
                    loop120:
                    do {
                        int alt120=2;
                        int LA120_0 = input.LA(1);

                        if ( (LA120_0==42) ) {
                            alt120=1;
                        }


                        switch (alt120) {
                    	case 1 :
                    	    // InternalSCTX.g:3382:5: otherlv_8= ';' ( (lv_effects_9_0= ruleEffect ) )
                    	    {
                    	    otherlv_8=(Token)match(input,42,FollowSets000.FOLLOW_43); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getSucceedingActionAccess().getSemicolonKeyword_3_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:3386:5: ( (lv_effects_9_0= ruleEffect ) )
                    	    // InternalSCTX.g:3387:6: (lv_effects_9_0= ruleEffect )
                    	    {
                    	    // InternalSCTX.g:3387:6: (lv_effects_9_0= ruleEffect )
                    	    // InternalSCTX.g:3388:7: lv_effects_9_0= ruleEffect
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSucceedingActionAccess().getEffectsEffectParserRuleCall_3_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_85);
                    	    lv_effects_9_0=ruleEffect();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSucceedingActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"effects",
                    	      								lv_effects_9_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop120;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:3407:3: (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==44) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // InternalSCTX.g:3408:4: otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) )
                    {
                    otherlv_10=(Token)match(input,44,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getSucceedingActionAccess().getLabelKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:3412:4: ( (lv_label_11_0= RULE_STRING ) )
                    // InternalSCTX.g:3413:5: (lv_label_11_0= RULE_STRING )
                    {
                    // InternalSCTX.g:3413:5: (lv_label_11_0= RULE_STRING )
                    // InternalSCTX.g:3414:6: lv_label_11_0= RULE_STRING
                    {
                    lv_label_11_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_11_0, grammarAccess.getSucceedingActionAccess().getLabelSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSucceedingActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_11_0,
                      							"de.cau.cs.kieler.annotations.Annotations.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSucceedingAction"


    // $ANTLR start "entryRulePeriodAction"
    // InternalSCTX.g:3435:1: entryRulePeriodAction returns [EObject current=null] : iv_rulePeriodAction= rulePeriodAction EOF ;
    public final EObject entryRulePeriodAction() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePeriodAction = null;


        try {
            // InternalSCTX.g:3435:53: (iv_rulePeriodAction= rulePeriodAction EOF )
            // InternalSCTX.g:3436:2: iv_rulePeriodAction= rulePeriodAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPeriodActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePeriodAction=rulePeriodAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePeriodAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePeriodAction"


    // $ANTLR start "rulePeriodAction"
    // InternalSCTX.g:3442:1: rulePeriodAction returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? otherlv_3= 'period' ( (lv_trigger_4_0= ruleValuedExpression ) ) (otherlv_5= 'label' ( (lv_label_6_0= RULE_STRING ) ) )? ) ;
    public final EObject rulePeriodAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_label_6_0=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_delay_2_0 = null;

        EObject lv_trigger_4_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:3448:2: ( ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? otherlv_3= 'period' ( (lv_trigger_4_0= ruleValuedExpression ) ) (otherlv_5= 'label' ( (lv_label_6_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:3449:2: ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? otherlv_3= 'period' ( (lv_trigger_4_0= ruleValuedExpression ) ) (otherlv_5= 'label' ( (lv_label_6_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:3449:2: ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? otherlv_3= 'period' ( (lv_trigger_4_0= ruleValuedExpression ) ) (otherlv_5= 'label' ( (lv_label_6_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:3450:3: () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? otherlv_3= 'period' ( (lv_trigger_4_0= ruleValuedExpression ) ) (otherlv_5= 'label' ( (lv_label_6_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:3450:3: ()
            // InternalSCTX.g:3451:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPeriodActionAccess().getPeriodActionAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:3460:3: ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )*
            loop123:
            do {
                int alt123=2;
                int LA123_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA124_0==RULE_COMMENT_ANNOTATION||LA124_0==106) ) {
                    alt124=1;
=======
                if ( (LA123_0==RULE_COMMENT_ANNOTATION||LA123_0==102) ) {
                    alt123=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt123) {
            	case 1 :
            	    // InternalSCTX.g:3461:4: (lv_annotations_1_0= ruleRestrictedTypeAnnotation )
            	    {
            	    // InternalSCTX.g:3461:4: (lv_annotations_1_0= ruleRestrictedTypeAnnotation )
            	    // InternalSCTX.g:3462:5: lv_annotations_1_0= ruleRestrictedTypeAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPeriodActionAccess().getAnnotationsRestrictedTypeAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_92);
            	    lv_annotations_1_0=ruleRestrictedTypeAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPeriodActionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.RestrictedTypeAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop123;
                }
            } while (true);

            // InternalSCTX.g:3479:3: ( (lv_delay_2_0= ruleDelayType ) )?
            int alt124=2;
            int LA124_0 = input.LA(1);

<<<<<<< HEAD
            if ( ((LA125_0>=109 && LA125_0<=112)) ) {
                alt125=1;
=======
            if ( ((LA124_0>=105 && LA124_0<=108)) ) {
                alt124=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            switch (alt124) {
                case 1 :
                    // InternalSCTX.g:3480:4: (lv_delay_2_0= ruleDelayType )
                    {
                    // InternalSCTX.g:3480:4: (lv_delay_2_0= ruleDelayType )
                    // InternalSCTX.g:3481:5: lv_delay_2_0= ruleDelayType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPeriodActionAccess().getDelayDelayTypeEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_93);
                    lv_delay_2_0=ruleDelayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPeriodActionRule());
                      					}
                      					set(
                      						current,
                      						"delay",
                      						lv_delay_2_0,
                      						"de.cau.cs.kieler.sccharts.text.SCTX.DelayType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,59,FollowSets000.FOLLOW_94); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getPeriodActionAccess().getPeriodKeyword_3());
              		
            }
            // InternalSCTX.g:3502:3: ( (lv_trigger_4_0= ruleValuedExpression ) )
            // InternalSCTX.g:3503:4: (lv_trigger_4_0= ruleValuedExpression )
            {
            // InternalSCTX.g:3503:4: (lv_trigger_4_0= ruleValuedExpression )
            // InternalSCTX.g:3504:5: lv_trigger_4_0= ruleValuedExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPeriodActionAccess().getTriggerValuedExpressionParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_47);
            lv_trigger_4_0=ruleValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPeriodActionRule());
              					}
              					set(
              						current,
              						"trigger",
              						lv_trigger_4_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:3521:3: (otherlv_5= 'label' ( (lv_label_6_0= RULE_STRING ) ) )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==44) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // InternalSCTX.g:3522:4: otherlv_5= 'label' ( (lv_label_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,44,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getPeriodActionAccess().getLabelKeyword_5_0());
                      			
                    }
                    // InternalSCTX.g:3526:4: ( (lv_label_6_0= RULE_STRING ) )
                    // InternalSCTX.g:3527:5: (lv_label_6_0= RULE_STRING )
                    {
                    // InternalSCTX.g:3527:5: (lv_label_6_0= RULE_STRING )
                    // InternalSCTX.g:3528:6: lv_label_6_0= RULE_STRING
                    {
                    lv_label_6_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_6_0, grammarAccess.getPeriodActionAccess().getLabelSTRINGTerminalRuleCall_5_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPeriodActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_6_0,
                      							"de.cau.cs.kieler.annotations.Annotations.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePeriodAction"


    // $ANTLR start "entryRuleDeclaration"
    // InternalSCTX.g:3549:1: entryRuleDeclaration returns [EObject current=null] : iv_ruleDeclaration= ruleDeclaration EOF ;
    public final EObject entryRuleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclaration = null;


        try {
            // InternalSCTX.g:3549:52: (iv_ruleDeclaration= ruleDeclaration EOF )
            // InternalSCTX.g:3550:2: iv_ruleDeclaration= ruleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclaration=ruleDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclaration"


    // $ANTLR start "ruleDeclaration"
    // InternalSCTX.g:3556:1: ruleDeclaration returns [EObject current=null] : (this_Declaration_0= superDeclaration | this_DeclarationWOSemicolon_1= ruleDeclarationWOSemicolon ) ;
    public final EObject ruleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_Declaration_0 = null;

        EObject this_DeclarationWOSemicolon_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:3562:2: ( (this_Declaration_0= superDeclaration | this_DeclarationWOSemicolon_1= ruleDeclarationWOSemicolon ) )
            // InternalSCTX.g:3563:2: (this_Declaration_0= superDeclaration | this_DeclarationWOSemicolon_1= ruleDeclarationWOSemicolon )
            {
            // InternalSCTX.g:3563:2: (this_Declaration_0= superDeclaration | this_DeclarationWOSemicolon_1= ruleDeclarationWOSemicolon )
            int alt126=2;
            alt126 = dfa126.predict(input);
            switch (alt126) {
                case 1 :
                    // InternalSCTX.g:3564:3: this_Declaration_0= superDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Declaration_0=superDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Declaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:3576:3: this_DeclarationWOSemicolon_1= ruleDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getDeclarationWOSemicolonParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DeclarationWOSemicolon_1=ruleDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DeclarationWOSemicolon_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclaration"


    // $ANTLR start "entryRuleStatement"
    // InternalSCTX.g:3591:1: entryRuleStatement returns [EObject current=null] : iv_ruleStatement= ruleStatement EOF ;
    public final EObject entryRuleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatement = null;


        try {
            // InternalSCTX.g:3591:50: (iv_ruleStatement= ruleStatement EOF )
            // InternalSCTX.g:3592:2: iv_ruleStatement= ruleStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStatement=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatement"


    // $ANTLR start "ruleStatement"
    // InternalSCTX.g:3598:1: ruleStatement returns [EObject current=null] : (this_SclAssignment_0= ruleSclAssignment | this_SclPostfixAssignment_1= ruleSclPostfixAssignment | this_Label_2= ruleLabel | this_Conditional_3= ruleConditional | this_Goto_4= ruleGoto | this_ScopeStatement_5= ruleScopeStatement | this_Return_6= ruleReturn | this_ForLoop_7= ruleForLoop | this_WhileLoop_8= ruleWhileLoop ) ;
    public final EObject ruleStatement() throws RecognitionException {
        EObject current = null;

        EObject this_SclAssignment_0 = null;

        EObject this_SclPostfixAssignment_1 = null;

        EObject this_Label_2 = null;

        EObject this_Conditional_3 = null;

        EObject this_Goto_4 = null;

        EObject this_ScopeStatement_5 = null;

        EObject this_Return_6 = null;

        EObject this_ForLoop_7 = null;

        EObject this_WhileLoop_8 = null;



        	enterRule();

        try {
            // InternalSCTX.g:3604:2: ( (this_SclAssignment_0= ruleSclAssignment | this_SclPostfixAssignment_1= ruleSclPostfixAssignment | this_Label_2= ruleLabel | this_Conditional_3= ruleConditional | this_Goto_4= ruleGoto | this_ScopeStatement_5= ruleScopeStatement | this_Return_6= ruleReturn | this_ForLoop_7= ruleForLoop | this_WhileLoop_8= ruleWhileLoop ) )
            // InternalSCTX.g:3605:2: (this_SclAssignment_0= ruleSclAssignment | this_SclPostfixAssignment_1= ruleSclPostfixAssignment | this_Label_2= ruleLabel | this_Conditional_3= ruleConditional | this_Goto_4= ruleGoto | this_ScopeStatement_5= ruleScopeStatement | this_Return_6= ruleReturn | this_ForLoop_7= ruleForLoop | this_WhileLoop_8= ruleWhileLoop )
            {
            // InternalSCTX.g:3605:2: (this_SclAssignment_0= ruleSclAssignment | this_SclPostfixAssignment_1= ruleSclPostfixAssignment | this_Label_2= ruleLabel | this_Conditional_3= ruleConditional | this_Goto_4= ruleGoto | this_ScopeStatement_5= ruleScopeStatement | this_Return_6= ruleReturn | this_ForLoop_7= ruleForLoop | this_WhileLoop_8= ruleWhileLoop )
            int alt127=9;
            alt127 = dfa127.predict(input);
            switch (alt127) {
                case 1 :
                    // InternalSCTX.g:3606:3: this_SclAssignment_0= ruleSclAssignment
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getSclAssignmentParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SclAssignment_0=ruleSclAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SclAssignment_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:3618:3: this_SclPostfixAssignment_1= ruleSclPostfixAssignment
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getSclPostfixAssignmentParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SclPostfixAssignment_1=ruleSclPostfixAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SclPostfixAssignment_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:3630:3: this_Label_2= ruleLabel
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getLabelParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Label_2=ruleLabel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Label_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:3642:3: this_Conditional_3= ruleConditional
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getConditionalParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Conditional_3=ruleConditional();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Conditional_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSCTX.g:3654:3: this_Goto_4= ruleGoto
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getGotoParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Goto_4=ruleGoto();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Goto_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalSCTX.g:3666:3: this_ScopeStatement_5= ruleScopeStatement
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getScopeStatementParserRuleCall_5());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ScopeStatement_5=ruleScopeStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ScopeStatement_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalSCTX.g:3678:3: this_Return_6= ruleReturn
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getReturnParserRuleCall_6());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Return_6=ruleReturn();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Return_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalSCTX.g:3690:3: this_ForLoop_7= ruleForLoop
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getForLoopParserRuleCall_7());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ForLoop_7=ruleForLoop();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ForLoop_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalSCTX.g:3702:3: this_WhileLoop_8= ruleWhileLoop
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getWhileLoopParserRuleCall_8());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_WhileLoop_8=ruleWhileLoop();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_WhileLoop_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatement"


    // $ANTLR start "entryRuleEffect"
    // InternalSCTX.g:3717:1: entryRuleEffect returns [EObject current=null] : iv_ruleEffect= ruleEffect EOF ;
    public final EObject entryRuleEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEffect = null;


        try {
            // InternalSCTX.g:3717:47: (iv_ruleEffect= ruleEffect EOF )
            // InternalSCTX.g:3718:2: iv_ruleEffect= ruleEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEffect=ruleEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEffect"


    // $ANTLR start "ruleEffect"
    // InternalSCTX.g:3724:1: ruleEffect returns [EObject current=null] : (this_Effect_0= superEffect | this_CodeEffect_1= ruleCodeEffect ) ;
    public final EObject ruleEffect() throws RecognitionException {
        EObject current = null;

        EObject this_Effect_0 = null;

        EObject this_CodeEffect_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:3730:2: ( (this_Effect_0= superEffect | this_CodeEffect_1= ruleCodeEffect ) )
            // InternalSCTX.g:3731:2: (this_Effect_0= superEffect | this_CodeEffect_1= ruleCodeEffect )
            {
            // InternalSCTX.g:3731:2: (this_Effect_0= superEffect | this_CodeEffect_1= ruleCodeEffect )
            int alt128=2;
            switch ( input.LA(1) ) {
            case RULE_COMMENT_ANNOTATION:
                {
                int LA128_1 = input.LA(2);

                if ( (synpred144_InternalSCTX()) ) {
                    alt128=1;
                }
                else if ( (true) ) {
                    alt128=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 128, 1, input);

                    throw nvae;
                }
                }
                break;
<<<<<<< HEAD
            case 106:
=======
            case 102:
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                {
                int LA128_2 = input.LA(2);

                if ( (synpred144_InternalSCTX()) ) {
                    alt128=1;
                }
                else if ( (true) ) {
                    alt128=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 128, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
            case RULE_HOSTCODE:
            case 79:
            case 83:
            case 84:
                {
                alt128=1;
                }
                break;
            case 21:
                {
                alt128=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 128, 0, input);

                throw nvae;
            }

            switch (alt128) {
                case 1 :
                    // InternalSCTX.g:3732:3: this_Effect_0= superEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getEffectParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Effect_0=superEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Effect_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:3744:3: this_CodeEffect_1= ruleCodeEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getCodeEffectParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CodeEffect_1=ruleCodeEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CodeEffect_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEffect"


    // $ANTLR start "entryRuleCodeEffect"
    // InternalSCTX.g:3759:1: entryRuleCodeEffect returns [EObject current=null] : iv_ruleCodeEffect= ruleCodeEffect EOF ;
    public final EObject entryRuleCodeEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCodeEffect = null;


        try {
            // InternalSCTX.g:3759:51: (iv_ruleCodeEffect= ruleCodeEffect EOF )
            // InternalSCTX.g:3760:2: iv_ruleCodeEffect= ruleCodeEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCodeEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCodeEffect=ruleCodeEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCodeEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCodeEffect"


    // $ANTLR start "ruleCodeEffect"
    // InternalSCTX.g:3766:1: ruleCodeEffect returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) ;
    public final EObject ruleCodeEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_declarations_3_0 = null;

        EObject lv_statements_4_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:3772:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) )
            // InternalSCTX.g:3773:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
            {
            // InternalSCTX.g:3773:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
            // InternalSCTX.g:3774:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}'
            {
            // InternalSCTX.g:3774:3: ()
            // InternalSCTX.g:3775:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getCodeEffectAccess().getCodeEffectAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:3784:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop129:
            do {
                int alt129=2;
                int LA129_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA130_0==RULE_COMMENT_ANNOTATION||LA130_0==106) ) {
                    alt130=1;
=======
                if ( (LA129_0==RULE_COMMENT_ANNOTATION||LA129_0==102) ) {
                    alt129=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt129) {
            	case 1 :
            	    // InternalSCTX.g:3785:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:3785:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:3786:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getCodeEffectAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_95);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getCodeEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop129;
                }
            } while (true);

            otherlv_2=(Token)match(input,21,FollowSets000.FOLLOW_96); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getCodeEffectAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalSCTX.g:3807:3: ( (lv_declarations_3_0= ruleDeclaration ) )*
            loop130:
            do {
                int alt130=2;
                alt130 = dfa130.predict(input);
                switch (alt130) {
            	case 1 :
            	    // InternalSCTX.g:3808:4: (lv_declarations_3_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:3808:4: (lv_declarations_3_0= ruleDeclaration )
            	    // InternalSCTX.g:3809:5: lv_declarations_3_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getCodeEffectAccess().getDeclarationsDeclarationParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_96);
            	    lv_declarations_3_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getCodeEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_3_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop130;
                }
            } while (true);

            // InternalSCTX.g:3826:3: ( (lv_statements_4_0= ruleStatement ) )*
            loop131:
            do {
                int alt131=2;
                int LA131_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA132_0==RULE_ID||LA132_0==RULE_COMMENT_ANNOTATION||LA132_0==21||LA132_0==38||LA132_0==47||(LA132_0>=72 && LA132_0<=73)||LA132_0==75||LA132_0==106) ) {
                    alt132=1;
=======
                if ( (LA131_0==RULE_ID||LA131_0==RULE_COMMENT_ANNOTATION||LA131_0==21||LA131_0==38||LA131_0==47||(LA131_0>=71 && LA131_0<=72)||LA131_0==74||LA131_0==102) ) {
                    alt131=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt131) {
            	case 1 :
            	    // InternalSCTX.g:3827:4: (lv_statements_4_0= ruleStatement )
            	    {
            	    // InternalSCTX.g:3827:4: (lv_statements_4_0= ruleStatement )
            	    // InternalSCTX.g:3828:5: lv_statements_4_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getCodeEffectAccess().getStatementsStatementParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_97);
            	    lv_statements_4_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getCodeEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_4_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop131;
                }
            } while (true);

            otherlv_5=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getCodeEffectAccess().getRightCurlyBracketKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCodeEffect"


    // $ANTLR start "entryRuleClassDeclarationWOSemicolon"
    // InternalSCTX.g:3853:1: entryRuleClassDeclarationWOSemicolon returns [EObject current=null] : iv_ruleClassDeclarationWOSemicolon= ruleClassDeclarationWOSemicolon EOF ;
    public final EObject entryRuleClassDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassDeclarationWOSemicolon = null;


        try {
            // InternalSCTX.g:3853:68: (iv_ruleClassDeclarationWOSemicolon= ruleClassDeclarationWOSemicolon EOF )
            // InternalSCTX.g:3854:2: iv_ruleClassDeclarationWOSemicolon= ruleClassDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleClassDeclarationWOSemicolon=ruleClassDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassDeclarationWOSemicolon"


    // $ANTLR start "ruleClassDeclarationWOSemicolon"
    // InternalSCTX.g:3860:1: ruleClassDeclarationWOSemicolon returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_policy_12_0= rulePolicyRegion ) )? ( (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_14= '}' ) | ( ( (lv_type_15_0= ruleStructType ) ) ( (lv_name_16_0= RULE_ID ) )? otherlv_17= '{' ( (lv_declarations_18_0= ruleDeclarationWOSemicolon ) )* otherlv_19= '}' ) ) ( ( (lv_valuedObjects_20_0= ruleValuedObject ) ) (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )* )? ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleClassDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token lv_const_3_0=null;
        Token lv_input_4_0=null;
        Token lv_output_5_0=null;
        Token lv_global_6_0=null;
        Token lv_static_7_0=null;
        Token lv_host_8_0=null;
        Token lv_name_10_0=null;
        Token otherlv_11=null;
        Token otherlv_14=null;
        Token lv_name_16_0=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_access_2_0 = null;

        Enumerator lv_type_9_0 = null;

        EObject lv_policy_12_0 = null;

        EObject lv_declarations_13_0 = null;

        Enumerator lv_type_15_0 = null;

        EObject lv_declarations_18_0 = null;

        EObject lv_valuedObjects_20_0 = null;

        EObject lv_valuedObjects_22_0 = null;

        EObject lv_annotations_23_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:3866:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_policy_12_0= rulePolicyRegion ) )? ( (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_14= '}' ) | ( ( (lv_type_15_0= ruleStructType ) ) ( (lv_name_16_0= RULE_ID ) )? otherlv_17= '{' ( (lv_declarations_18_0= ruleDeclarationWOSemicolon ) )* otherlv_19= '}' ) ) ( ( (lv_valuedObjects_20_0= ruleValuedObject ) ) (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )* )? ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:3867:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_policy_12_0= rulePolicyRegion ) )? ( (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_14= '}' ) | ( ( (lv_type_15_0= ruleStructType ) ) ( (lv_name_16_0= RULE_ID ) )? otherlv_17= '{' ( (lv_declarations_18_0= ruleDeclarationWOSemicolon ) )* otherlv_19= '}' ) ) ( ( (lv_valuedObjects_20_0= ruleValuedObject ) ) (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )* )? ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:3867:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_policy_12_0= rulePolicyRegion ) )? ( (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_14= '}' ) | ( ( (lv_type_15_0= ruleStructType ) ) ( (lv_name_16_0= RULE_ID ) )? otherlv_17= '{' ( (lv_declarations_18_0= ruleDeclarationWOSemicolon ) )* otherlv_19= '}' ) ) ( ( (lv_valuedObjects_20_0= ruleValuedObject ) ) (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )* )? ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:3868:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_policy_12_0= rulePolicyRegion ) )? ( (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_14= '}' ) | ( ( (lv_type_15_0= ruleStructType ) ) ( (lv_name_16_0= RULE_ID ) )? otherlv_17= '{' ( (lv_declarations_18_0= ruleDeclarationWOSemicolon ) )* otherlv_19= '}' ) ) ( ( (lv_valuedObjects_20_0= ruleValuedObject ) ) (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )* )? ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:3868:3: ()
            // InternalSCTX.g:3869:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getClassDeclarationWOSemicolonAccess().getPolicyClassDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:3878:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop132:
            do {
                int alt132=2;
                int LA132_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA133_0==RULE_COMMENT_ANNOTATION||LA133_0==106) ) {
                    alt133=1;
=======
                if ( (LA132_0==RULE_COMMENT_ANNOTATION||LA132_0==102) ) {
                    alt132=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt132) {
            	case 1 :
            	    // InternalSCTX.g:3879:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:3879:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:3880:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_98);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop132;
                }
            } while (true);

            // InternalSCTX.g:3897:3: ( (lv_access_2_0= ruleAccessModifier ) )?
            int alt133=2;
            int LA133_0 = input.LA(1);

<<<<<<< HEAD
            if ( ((LA134_0>=155 && LA134_0<=157)) ) {
                alt134=1;
=======
            if ( ((LA133_0>=151 && LA133_0<=153)) ) {
                alt133=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            switch (alt133) {
                case 1 :
                    // InternalSCTX.g:3898:4: (lv_access_2_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:3898:4: (lv_access_2_0= ruleAccessModifier )
                    // InternalSCTX.g:3899:5: lv_access_2_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_98);
                    lv_access_2_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3916:3: ( (lv_const_3_0= 'const' ) )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==60) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // InternalSCTX.g:3917:4: (lv_const_3_0= 'const' )
                    {
                    // InternalSCTX.g:3917:4: (lv_const_3_0= 'const' )
                    // InternalSCTX.g:3918:5: lv_const_3_0= 'const'
                    {
                    lv_const_3_0=(Token)match(input,60,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_const_3_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getConstConstKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "const", true, "const");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3930:3: ( (lv_input_4_0= 'input' ) )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==61) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // InternalSCTX.g:3931:4: (lv_input_4_0= 'input' )
                    {
                    // InternalSCTX.g:3931:4: (lv_input_4_0= 'input' )
                    // InternalSCTX.g:3932:5: lv_input_4_0= 'input'
                    {
                    lv_input_4_0=(Token)match(input,61,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_input_4_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getInputInputKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "input", true, "input");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3944:3: ( (lv_output_5_0= 'output' ) )?
            int alt136=2;
            int LA136_0 = input.LA(1);

            if ( (LA136_0==62) ) {
                alt136=1;
            }
            switch (alt136) {
                case 1 :
                    // InternalSCTX.g:3945:4: (lv_output_5_0= 'output' )
                    {
                    // InternalSCTX.g:3945:4: (lv_output_5_0= 'output' )
                    // InternalSCTX.g:3946:5: lv_output_5_0= 'output'
                    {
                    lv_output_5_0=(Token)match(input,62,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_output_5_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getOutputOutputKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "output", true, "output");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3958:3: ( (lv_global_6_0= 'global' ) )?
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==63) ) {
                alt137=1;
            }
            switch (alt137) {
                case 1 :
                    // InternalSCTX.g:3959:4: (lv_global_6_0= 'global' )
                    {
                    // InternalSCTX.g:3959:4: (lv_global_6_0= 'global' )
                    // InternalSCTX.g:3960:5: lv_global_6_0= 'global'
                    {
                    lv_global_6_0=(Token)match(input,63,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_global_6_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getGlobalGlobalKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "global", true, "global");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3972:3: ( (lv_static_7_0= 'static' ) )?
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==64) ) {
                alt138=1;
            }
            switch (alt138) {
                case 1 :
                    // InternalSCTX.g:3973:4: (lv_static_7_0= 'static' )
                    {
                    // InternalSCTX.g:3973:4: (lv_static_7_0= 'static' )
                    // InternalSCTX.g:3974:5: lv_static_7_0= 'static'
                    {
                    lv_static_7_0=(Token)match(input,64,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_static_7_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getStaticStaticKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "static", true, "static");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3986:3: ( (lv_host_8_0= 'host' ) )?
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==65) ) {
                alt139=1;
            }
            switch (alt139) {
                case 1 :
                    // InternalSCTX.g:3987:4: (lv_host_8_0= 'host' )
                    {
                    // InternalSCTX.g:3987:4: (lv_host_8_0= 'host' )
                    // InternalSCTX.g:3988:5: lv_host_8_0= 'host'
                    {
                    lv_host_8_0=(Token)match(input,65,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_host_8_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getHostHostKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "host", true, "host");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:4000:3: ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_policy_12_0= rulePolicyRegion ) )? ( (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_14= '}' ) | ( ( (lv_type_15_0= ruleStructType ) ) ( (lv_name_16_0= RULE_ID ) )? otherlv_17= '{' ( (lv_declarations_18_0= ruleDeclarationWOSemicolon ) )* otherlv_19= '}' ) )
            int alt145=2;
            int LA145_0 = input.LA(1);

<<<<<<< HEAD
            if ( (LA146_0==151) ) {
                alt146=1;
            }
            else if ( (LA146_0==150) ) {
                alt146=2;
=======
            if ( (LA145_0==147) ) {
                alt145=1;
            }
            else if ( (LA145_0==146) ) {
                alt145=2;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 145, 0, input);

                throw nvae;
            }
            switch (alt145) {
                case 1 :
                    // InternalSCTX.g:4001:4: ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_policy_12_0= rulePolicyRegion ) )? ( (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_14= '}' )
                    {
                    // InternalSCTX.g:4001:4: ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_policy_12_0= rulePolicyRegion ) )? ( (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_14= '}' )
                    // InternalSCTX.g:4002:5: ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_policy_12_0= rulePolicyRegion ) )? ( (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_14= '}'
                    {
                    // InternalSCTX.g:4002:5: ( (lv_type_9_0= ruleClassType ) )
                    // InternalSCTX.g:4003:6: (lv_type_9_0= ruleClassType )
                    {
                    // InternalSCTX.g:4003:6: (lv_type_9_0= ruleClassType )
                    // InternalSCTX.g:4004:7: lv_type_9_0= ruleClassType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getTypeClassTypeEnumRuleCall_9_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_26);
                    lv_type_9_0=ruleClassType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_9_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ClassType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:4021:5: ( (lv_name_10_0= RULE_ID ) )?
                    int alt140=2;
                    int LA140_0 = input.LA(1);

                    if ( (LA140_0==RULE_ID) ) {
                        alt140=1;
                    }
                    switch (alt140) {
                        case 1 :
                            // InternalSCTX.g:4022:6: (lv_name_10_0= RULE_ID )
                            {
                            // InternalSCTX.g:4022:6: (lv_name_10_0= RULE_ID )
                            // InternalSCTX.g:4023:7: lv_name_10_0= RULE_ID
                            {
                            lv_name_10_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_99); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_name_10_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getNameIDTerminalRuleCall_9_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"name",
                              								lv_name_10_0,
                              								"de.cau.cs.kieler.annotations.Annotations.ID");
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_11=(Token)match(input,21,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_11, grammarAccess.getClassDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_9_0_2());
                      				
                    }
                    // InternalSCTX.g:4043:5: ( (lv_policy_12_0= rulePolicyRegion ) )?
                    int alt141=2;
                    int LA141_0 = input.LA(1);

                    if ( (LA141_0==66) ) {
                        alt141=1;
                    }
                    switch (alt141) {
                        case 1 :
                            // InternalSCTX.g:4044:6: (lv_policy_12_0= rulePolicyRegion )
                            {
                            // InternalSCTX.g:4044:6: (lv_policy_12_0= rulePolicyRegion )
                            // InternalSCTX.g:4045:7: lv_policy_12_0= rulePolicyRegion
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getPolicyPolicyRegionParserRuleCall_9_0_3_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_101);
                            lv_policy_12_0=rulePolicyRegion();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                              							}
                              							set(
                              								current,
                              								"policy",
                              								lv_policy_12_0,
                              								"de.cau.cs.kieler.sccharts.text.SCTX.PolicyRegion");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:4062:5: ( (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon ) )*
                    loop142:
                    do {
                        int alt142=2;
                        int LA142_0 = input.LA(1);

<<<<<<< HEAD
                        if ( (LA143_0==RULE_ID||LA143_0==RULE_COMMENT_ANNOTATION||LA143_0==29||(LA143_0>=61 && LA143_0<=66)||(LA143_0>=78 && LA143_0<=80)||LA143_0==106||(LA143_0>=116 && LA143_0<=121)||(LA143_0>=150 && LA143_0<=151)||(LA143_0>=155 && LA143_0<=158)) ) {
                            alt143=1;
=======
                        if ( (LA142_0==RULE_ID||LA142_0==RULE_COMMENT_ANNOTATION||LA142_0==29||(LA142_0>=60 && LA142_0<=65)||(LA142_0>=77 && LA142_0<=79)||LA142_0==102||(LA142_0>=112 && LA142_0<=117)||(LA142_0>=146 && LA142_0<=147)||(LA142_0>=151 && LA142_0<=154)) ) {
                            alt142=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        }


                        switch (alt142) {
                    	case 1 :
                    	    // InternalSCTX.g:4063:6: (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon )
                    	    {
                    	    // InternalSCTX.g:4063:6: (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon )
                    	    // InternalSCTX.g:4064:7: lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getDeclarationsDeclarationOrMethodWOSemicolonParserRuleCall_9_0_4_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_101);
                    	    lv_declarations_13_0=ruleDeclarationOrMethodWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_13_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationOrMethodWOSemicolon");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop142;
                        }
                    } while (true);

                    otherlv_14=(Token)match(input,22,FollowSets000.FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_14, grammarAccess.getClassDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_9_0_5());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:4087:4: ( ( (lv_type_15_0= ruleStructType ) ) ( (lv_name_16_0= RULE_ID ) )? otherlv_17= '{' ( (lv_declarations_18_0= ruleDeclarationWOSemicolon ) )* otherlv_19= '}' )
                    {
                    // InternalSCTX.g:4087:4: ( ( (lv_type_15_0= ruleStructType ) ) ( (lv_name_16_0= RULE_ID ) )? otherlv_17= '{' ( (lv_declarations_18_0= ruleDeclarationWOSemicolon ) )* otherlv_19= '}' )
                    // InternalSCTX.g:4088:5: ( (lv_type_15_0= ruleStructType ) ) ( (lv_name_16_0= RULE_ID ) )? otherlv_17= '{' ( (lv_declarations_18_0= ruleDeclarationWOSemicolon ) )* otherlv_19= '}'
                    {
                    // InternalSCTX.g:4088:5: ( (lv_type_15_0= ruleStructType ) )
                    // InternalSCTX.g:4089:6: (lv_type_15_0= ruleStructType )
                    {
                    // InternalSCTX.g:4089:6: (lv_type_15_0= ruleStructType )
                    // InternalSCTX.g:4090:7: lv_type_15_0= ruleStructType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getTypeStructTypeEnumRuleCall_9_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_26);
                    lv_type_15_0=ruleStructType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_15_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.StructType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:4107:5: ( (lv_name_16_0= RULE_ID ) )?
                    int alt143=2;
                    int LA143_0 = input.LA(1);

                    if ( (LA143_0==RULE_ID) ) {
                        alt143=1;
                    }
                    switch (alt143) {
                        case 1 :
                            // InternalSCTX.g:4108:6: (lv_name_16_0= RULE_ID )
                            {
                            // InternalSCTX.g:4108:6: (lv_name_16_0= RULE_ID )
                            // InternalSCTX.g:4109:7: lv_name_16_0= RULE_ID
                            {
                            lv_name_16_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_99); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_name_16_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getNameIDTerminalRuleCall_9_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"name",
                              								lv_name_16_0,
                              								"de.cau.cs.kieler.annotations.Annotations.ID");
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_17=(Token)match(input,21,FollowSets000.FOLLOW_103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_17, grammarAccess.getClassDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_9_1_2());
                      				
                    }
                    // InternalSCTX.g:4129:5: ( (lv_declarations_18_0= ruleDeclarationWOSemicolon ) )*
                    loop144:
                    do {
                        int alt144=2;
                        int LA144_0 = input.LA(1);

<<<<<<< HEAD
                        if ( (LA145_0==RULE_COMMENT_ANNOTATION||LA145_0==29||(LA145_0>=61 && LA145_0<=66)||(LA145_0>=78 && LA145_0<=80)||LA145_0==106||(LA145_0>=116 && LA145_0<=121)||(LA145_0>=150 && LA145_0<=151)||(LA145_0>=155 && LA145_0<=157)) ) {
                            alt145=1;
=======
                        if ( (LA144_0==RULE_COMMENT_ANNOTATION||LA144_0==29||(LA144_0>=60 && LA144_0<=65)||(LA144_0>=77 && LA144_0<=79)||LA144_0==102||(LA144_0>=112 && LA144_0<=117)||(LA144_0>=146 && LA144_0<=147)||(LA144_0>=151 && LA144_0<=153)) ) {
                            alt144=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        }


                        switch (alt144) {
                    	case 1 :
                    	    // InternalSCTX.g:4130:6: (lv_declarations_18_0= ruleDeclarationWOSemicolon )
                    	    {
                    	    // InternalSCTX.g:4130:6: (lv_declarations_18_0= ruleDeclarationWOSemicolon )
                    	    // InternalSCTX.g:4131:7: lv_declarations_18_0= ruleDeclarationWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_9_1_3_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_103);
                    	    lv_declarations_18_0=ruleDeclarationWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_18_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop144;
                        }
                    } while (true);

                    otherlv_19=(Token)match(input,22,FollowSets000.FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_19, grammarAccess.getClassDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_9_1_4());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:4154:3: ( ( (lv_valuedObjects_20_0= ruleValuedObject ) ) (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )* )?
            int alt147=2;
            alt147 = dfa147.predict(input);
            switch (alt147) {
                case 1 :
                    // InternalSCTX.g:4155:4: ( (lv_valuedObjects_20_0= ruleValuedObject ) ) (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )*
                    {
                    // InternalSCTX.g:4155:4: ( (lv_valuedObjects_20_0= ruleValuedObject ) )
                    // InternalSCTX.g:4156:5: (lv_valuedObjects_20_0= ruleValuedObject )
                    {
                    // InternalSCTX.g:4156:5: (lv_valuedObjects_20_0= ruleValuedObject )
                    // InternalSCTX.g:4157:6: lv_valuedObjects_20_0= ruleValuedObject
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_10_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_104);
                    lv_valuedObjects_20_0=ruleValuedObject();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                      						}
                      						add(
                      							current,
                      							"valuedObjects",
                      							lv_valuedObjects_20_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:4174:4: (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )*
                    loop146:
                    do {
                        int alt146=2;
                        int LA146_0 = input.LA(1);

                        if ( (LA146_0==20) ) {
                            alt146=1;
                        }


                        switch (alt146) {
                    	case 1 :
                    	    // InternalSCTX.g:4175:5: otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) )
                    	    {
                    	    otherlv_21=(Token)match(input,20,FollowSets000.FOLLOW_105); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_21, grammarAccess.getClassDeclarationWOSemicolonAccess().getCommaKeyword_10_1_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:4179:5: ( (lv_valuedObjects_22_0= ruleValuedObject ) )
                    	    // InternalSCTX.g:4180:6: (lv_valuedObjects_22_0= ruleValuedObject )
                    	    {
                    	    // InternalSCTX.g:4180:6: (lv_valuedObjects_22_0= ruleValuedObject )
                    	    // InternalSCTX.g:4181:7: lv_valuedObjects_22_0= ruleValuedObject
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_10_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_104);
                    	    lv_valuedObjects_22_0=ruleValuedObject();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"valuedObjects",
                    	      								lv_valuedObjects_22_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop146;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:4200:3: ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )?
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( (LA148_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt148=1;
            }
            switch (alt148) {
                case 1 :
                    // InternalSCTX.g:4201:4: (lv_annotations_23_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:4201:4: (lv_annotations_23_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:4202:5: lv_annotations_23_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_11_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_23_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_23_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassDeclarationWOSemicolon"


    // $ANTLR start "entryRulePolicyRegion"
    // InternalSCTX.g:4223:1: entryRulePolicyRegion returns [EObject current=null] : iv_rulePolicyRegion= rulePolicyRegion EOF ;
    public final EObject entryRulePolicyRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePolicyRegion = null;


        try {
            // InternalSCTX.g:4223:53: (iv_rulePolicyRegion= rulePolicyRegion EOF )
            // InternalSCTX.g:4224:2: iv_rulePolicyRegion= rulePolicyRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPolicyRegionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePolicyRegion=rulePolicyRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePolicyRegion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePolicyRegion"


    // $ANTLR start "rulePolicyRegion"
    // InternalSCTX.g:4230:1: rulePolicyRegion returns [EObject current=null] : (otherlv_0= 'policy' ( (lv_name_1_0= RULE_ID ) ) ( (lv_label_2_0= RULE_STRING ) )? otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclarationWOSemicolon ) )* ( (lv_states_5_0= rulePolicyState ) )+ otherlv_6= '}' ) ;
    public final EObject rulePolicyRegion() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token lv_label_2_0=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        EObject lv_declarations_4_0 = null;

        EObject lv_states_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:4236:2: ( (otherlv_0= 'policy' ( (lv_name_1_0= RULE_ID ) ) ( (lv_label_2_0= RULE_STRING ) )? otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclarationWOSemicolon ) )* ( (lv_states_5_0= rulePolicyState ) )+ otherlv_6= '}' ) )
            // InternalSCTX.g:4237:2: (otherlv_0= 'policy' ( (lv_name_1_0= RULE_ID ) ) ( (lv_label_2_0= RULE_STRING ) )? otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclarationWOSemicolon ) )* ( (lv_states_5_0= rulePolicyState ) )+ otherlv_6= '}' )
            {
            // InternalSCTX.g:4237:2: (otherlv_0= 'policy' ( (lv_name_1_0= RULE_ID ) ) ( (lv_label_2_0= RULE_STRING ) )? otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclarationWOSemicolon ) )* ( (lv_states_5_0= rulePolicyState ) )+ otherlv_6= '}' )
            // InternalSCTX.g:4238:3: otherlv_0= 'policy' ( (lv_name_1_0= RULE_ID ) ) ( (lv_label_2_0= RULE_STRING ) )? otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclarationWOSemicolon ) )* ( (lv_states_5_0= rulePolicyState ) )+ otherlv_6= '}'
            {
            otherlv_0=(Token)match(input,66,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPolicyRegionAccess().getPolicyKeyword_0());
              		
            }
            // InternalSCTX.g:4242:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalSCTX.g:4243:4: (lv_name_1_0= RULE_ID )
            {
            // InternalSCTX.g:4243:4: (lv_name_1_0= RULE_ID )
            // InternalSCTX.g:4244:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_106); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getPolicyRegionAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getPolicyRegionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalSCTX.g:4260:3: ( (lv_label_2_0= RULE_STRING ) )?
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( (LA149_0==RULE_STRING) ) {
                alt149=1;
            }
            switch (alt149) {
                case 1 :
                    // InternalSCTX.g:4261:4: (lv_label_2_0= RULE_STRING )
                    {
                    // InternalSCTX.g:4261:4: (lv_label_2_0= RULE_STRING )
                    // InternalSCTX.g:4262:5: lv_label_2_0= RULE_STRING
                    {
                    lv_label_2_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_2_0, grammarAccess.getPolicyRegionAccess().getLabelSTRINGTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getPolicyRegionRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_2_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,21,FollowSets000.FOLLOW_107); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getPolicyRegionAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalSCTX.g:4282:3: ( (lv_declarations_4_0= ruleDeclarationWOSemicolon ) )*
            loop150:
            do {
                int alt150=2;
                alt150 = dfa150.predict(input);
                switch (alt150) {
            	case 1 :
            	    // InternalSCTX.g:4283:4: (lv_declarations_4_0= ruleDeclarationWOSemicolon )
            	    {
            	    // InternalSCTX.g:4283:4: (lv_declarations_4_0= ruleDeclarationWOSemicolon )
            	    // InternalSCTX.g:4284:5: lv_declarations_4_0= ruleDeclarationWOSemicolon
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPolicyRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_107);
            	    lv_declarations_4_0=ruleDeclarationWOSemicolon();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPolicyRegionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_4_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop150;
                }
            } while (true);

            // InternalSCTX.g:4301:3: ( (lv_states_5_0= rulePolicyState ) )+
            int cnt151=0;
            loop151:
            do {
                int alt151=2;
                int LA151_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA152_0==RULE_COMMENT_ANNOTATION||LA152_0==23||LA152_0==27||LA152_0==106) ) {
                    alt152=1;
=======
                if ( (LA151_0==RULE_COMMENT_ANNOTATION||LA151_0==23||LA151_0==27||LA151_0==102) ) {
                    alt151=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt151) {
            	case 1 :
            	    // InternalSCTX.g:4302:4: (lv_states_5_0= rulePolicyState )
            	    {
            	    // InternalSCTX.g:4302:4: (lv_states_5_0= rulePolicyState )
            	    // InternalSCTX.g:4303:5: lv_states_5_0= rulePolicyState
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPolicyRegionAccess().getStatesPolicyStateParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_108);
            	    lv_states_5_0=rulePolicyState();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPolicyRegionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"states",
            	      						lv_states_5_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.PolicyState");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt151 >= 1 ) break loop151;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(151, input);
                        throw eee;
                }
                cnt151++;
            } while (true);

            otherlv_6=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getPolicyRegionAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePolicyRegion"


    // $ANTLR start "entryRulePolicyState"
    // InternalSCTX.g:4328:1: entryRulePolicyState returns [EObject current=null] : iv_rulePolicyState= rulePolicyState EOF ;
    public final EObject entryRulePolicyState() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePolicyState = null;


        try {
            // InternalSCTX.g:4328:52: (iv_rulePolicyState= rulePolicyState EOF )
            // InternalSCTX.g:4329:2: iv_rulePolicyState= rulePolicyState EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPolicyStateRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePolicyState=rulePolicyState();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePolicyState; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePolicyState"


    // $ANTLR start "rulePolicyState"
    // InternalSCTX.g:4335:1: rulePolicyState returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? otherlv_2= 'state' ( (lv_name_3_0= RULE_ID ) ) ( (lv_label_4_0= RULE_STRING ) )? ( (lv_outgoingTransitions_5_0= rulePolicyTransition ) )* ) ;
    public final EObject rulePolicyState() throws RecognitionException {
        EObject current = null;

        Token lv_initial_1_0=null;
        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token lv_label_4_0=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_outgoingTransitions_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:4341:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? otherlv_2= 'state' ( (lv_name_3_0= RULE_ID ) ) ( (lv_label_4_0= RULE_STRING ) )? ( (lv_outgoingTransitions_5_0= rulePolicyTransition ) )* ) )
            // InternalSCTX.g:4342:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? otherlv_2= 'state' ( (lv_name_3_0= RULE_ID ) ) ( (lv_label_4_0= RULE_STRING ) )? ( (lv_outgoingTransitions_5_0= rulePolicyTransition ) )* )
            {
            // InternalSCTX.g:4342:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? otherlv_2= 'state' ( (lv_name_3_0= RULE_ID ) ) ( (lv_label_4_0= RULE_STRING ) )? ( (lv_outgoingTransitions_5_0= rulePolicyTransition ) )* )
            // InternalSCTX.g:4343:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? otherlv_2= 'state' ( (lv_name_3_0= RULE_ID ) ) ( (lv_label_4_0= RULE_STRING ) )? ( (lv_outgoingTransitions_5_0= rulePolicyTransition ) )*
            {
            // InternalSCTX.g:4343:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop152:
            do {
                int alt152=2;
                int LA152_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA153_0==RULE_COMMENT_ANNOTATION||LA153_0==106) ) {
                    alt153=1;
=======
                if ( (LA152_0==RULE_COMMENT_ANNOTATION||LA152_0==102) ) {
                    alt152=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt152) {
            	case 1 :
            	    // InternalSCTX.g:4344:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:4344:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:4345:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPolicyStateAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_109);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPolicyStateRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop152;
                }
            } while (true);

            // InternalSCTX.g:4362:3: ( (lv_initial_1_0= 'initial' ) )?
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( (LA153_0==23) ) {
                alt153=1;
            }
            switch (alt153) {
                case 1 :
                    // InternalSCTX.g:4363:4: (lv_initial_1_0= 'initial' )
                    {
                    // InternalSCTX.g:4363:4: (lv_initial_1_0= 'initial' )
                    // InternalSCTX.g:4364:5: lv_initial_1_0= 'initial'
                    {
                    lv_initial_1_0=(Token)match(input,23,FollowSets000.FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_initial_1_0, grammarAccess.getPolicyStateAccess().getInitialInitialKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getPolicyStateRule());
                      					}
                      					setWithLastConsumed(current, "initial", true, "initial");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,27,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getPolicyStateAccess().getStateKeyword_2());
              		
            }
            // InternalSCTX.g:4380:3: ( (lv_name_3_0= RULE_ID ) )
            // InternalSCTX.g:4381:4: (lv_name_3_0= RULE_ID )
            {
            // InternalSCTX.g:4381:4: (lv_name_3_0= RULE_ID )
            // InternalSCTX.g:4382:5: lv_name_3_0= RULE_ID
            {
            lv_name_3_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_110); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_3_0, grammarAccess.getPolicyStateAccess().getNameIDTerminalRuleCall_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getPolicyStateRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_3_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalSCTX.g:4398:3: ( (lv_label_4_0= RULE_STRING ) )?
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( (LA154_0==RULE_STRING) ) {
                alt154=1;
            }
            switch (alt154) {
                case 1 :
                    // InternalSCTX.g:4399:4: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalSCTX.g:4399:4: (lv_label_4_0= RULE_STRING )
                    // InternalSCTX.g:4400:5: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_111); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_4_0, grammarAccess.getPolicyStateAccess().getLabelSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getPolicyStateRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_4_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:4416:3: ( (lv_outgoingTransitions_5_0= rulePolicyTransition ) )*
            loop155:
            do {
                int alt155=2;
                alt155 = dfa155.predict(input);
                switch (alt155) {
            	case 1 :
            	    // InternalSCTX.g:4417:4: (lv_outgoingTransitions_5_0= rulePolicyTransition )
            	    {
            	    // InternalSCTX.g:4417:4: (lv_outgoingTransitions_5_0= rulePolicyTransition )
            	    // InternalSCTX.g:4418:5: lv_outgoingTransitions_5_0= rulePolicyTransition
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPolicyStateAccess().getOutgoingTransitionsPolicyTransitionParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_111);
            	    lv_outgoingTransitions_5_0=rulePolicyTransition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPolicyStateRule());
            	      					}
            	      					add(
            	      						current,
            	      						"outgoingTransitions",
            	      						lv_outgoingTransitions_5_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.PolicyTransition");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop155;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePolicyState"


    // $ANTLR start "entryRulePolicyTransition"
    // InternalSCTX.g:4439:1: entryRulePolicyTransition returns [EObject current=null] : iv_rulePolicyTransition= rulePolicyTransition EOF ;
    public final EObject entryRulePolicyTransition() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePolicyTransition = null;


        try {
            // InternalSCTX.g:4439:57: (iv_rulePolicyTransition= rulePolicyTransition EOF )
            // InternalSCTX.g:4440:2: iv_rulePolicyTransition= rulePolicyTransition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPolicyTransitionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePolicyTransition=rulePolicyTransition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePolicyTransition; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePolicyTransition"


    // $ANTLR start "rulePolicyTransition"
    // InternalSCTX.g:4446:1: rulePolicyTransition returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* (otherlv_2= 'if' ( ( (lv_trigger_3_0= ruleLogicalOrExpression ) ) | ( (lv_trigger_4_0= ruleValuedObjectReference ) ) ) (otherlv_5= ':' ( (lv_effects_6_0= rulePureEmission ) ) (otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) ) )* )? )? otherlv_9= 'go to' ( (otherlv_10= RULE_ID ) ) (otherlv_11= 'label' ( (lv_label_12_0= RULE_STRING ) ) )? ) ;
    public final EObject rulePolicyTransition() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token lv_label_12_0=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_trigger_3_0 = null;

        EObject lv_trigger_4_0 = null;

        EObject lv_effects_6_0 = null;

        EObject lv_effects_8_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:4452:2: ( ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* (otherlv_2= 'if' ( ( (lv_trigger_3_0= ruleLogicalOrExpression ) ) | ( (lv_trigger_4_0= ruleValuedObjectReference ) ) ) (otherlv_5= ':' ( (lv_effects_6_0= rulePureEmission ) ) (otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) ) )* )? )? otherlv_9= 'go to' ( (otherlv_10= RULE_ID ) ) (otherlv_11= 'label' ( (lv_label_12_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:4453:2: ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* (otherlv_2= 'if' ( ( (lv_trigger_3_0= ruleLogicalOrExpression ) ) | ( (lv_trigger_4_0= ruleValuedObjectReference ) ) ) (otherlv_5= ':' ( (lv_effects_6_0= rulePureEmission ) ) (otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) ) )* )? )? otherlv_9= 'go to' ( (otherlv_10= RULE_ID ) ) (otherlv_11= 'label' ( (lv_label_12_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:4453:2: ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* (otherlv_2= 'if' ( ( (lv_trigger_3_0= ruleLogicalOrExpression ) ) | ( (lv_trigger_4_0= ruleValuedObjectReference ) ) ) (otherlv_5= ':' ( (lv_effects_6_0= rulePureEmission ) ) (otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) ) )* )? )? otherlv_9= 'go to' ( (otherlv_10= RULE_ID ) ) (otherlv_11= 'label' ( (lv_label_12_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:4454:3: () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* (otherlv_2= 'if' ( ( (lv_trigger_3_0= ruleLogicalOrExpression ) ) | ( (lv_trigger_4_0= ruleValuedObjectReference ) ) ) (otherlv_5= ':' ( (lv_effects_6_0= rulePureEmission ) ) (otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) ) )* )? )? otherlv_9= 'go to' ( (otherlv_10= RULE_ID ) ) (otherlv_11= 'label' ( (lv_label_12_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:4454:3: ()
            // InternalSCTX.g:4455:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPolicyTransitionAccess().getTransitionAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:4464:3: ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )*
            loop156:
            do {
                int alt156=2;
                int LA156_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA157_0==RULE_COMMENT_ANNOTATION||LA157_0==106) ) {
                    alt157=1;
=======
                if ( (LA156_0==RULE_COMMENT_ANNOTATION||LA156_0==102) ) {
                    alt156=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt156) {
            	case 1 :
            	    // InternalSCTX.g:4465:4: (lv_annotations_1_0= ruleRestrictedTypeAnnotation )
            	    {
            	    // InternalSCTX.g:4465:4: (lv_annotations_1_0= ruleRestrictedTypeAnnotation )
            	    // InternalSCTX.g:4466:5: lv_annotations_1_0= ruleRestrictedTypeAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPolicyTransitionAccess().getAnnotationsRestrictedTypeAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_112);
            	    lv_annotations_1_0=ruleRestrictedTypeAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPolicyTransitionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.RestrictedTypeAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop156;
                }
            } while (true);

            // InternalSCTX.g:4483:3: (otherlv_2= 'if' ( ( (lv_trigger_3_0= ruleLogicalOrExpression ) ) | ( (lv_trigger_4_0= ruleValuedObjectReference ) ) ) (otherlv_5= ':' ( (lv_effects_6_0= rulePureEmission ) ) (otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) ) )* )? )?
            int alt160=2;
            int LA160_0 = input.LA(1);

            if ( (LA160_0==38) ) {
                alt160=1;
            }
            switch (alt160) {
                case 1 :
                    // InternalSCTX.g:4484:4: otherlv_2= 'if' ( ( (lv_trigger_3_0= ruleLogicalOrExpression ) ) | ( (lv_trigger_4_0= ruleValuedObjectReference ) ) ) (otherlv_5= ':' ( (lv_effects_6_0= rulePureEmission ) ) (otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) ) )* )?
                    {
                    otherlv_2=(Token)match(input,38,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPolicyTransitionAccess().getIfKeyword_2_0());
                      			
                    }
                    // InternalSCTX.g:4488:4: ( ( (lv_trigger_3_0= ruleLogicalOrExpression ) ) | ( (lv_trigger_4_0= ruleValuedObjectReference ) ) )
                    int alt157=2;
                    int LA157_0 = input.LA(1);

<<<<<<< HEAD
                    if ( (LA158_0==RULE_STRING||(LA158_0>=RULE_INT && LA158_0<=RULE_COMMENT_ANNOTATION)||LA158_0==21||LA158_0==31||LA158_0==33||LA158_0==80||LA158_0==85||LA158_0==94||LA158_0==102||(LA158_0>=105 && LA158_0<=106)||(LA158_0>=145 && LA158_0<=147)||LA158_0==149) ) {
                        alt158=1;
=======
                    if ( (LA157_0==RULE_STRING||(LA157_0>=RULE_INT && LA157_0<=RULE_COMMENT_ANNOTATION)||LA157_0==21||LA157_0==31||LA157_0==33||LA157_0==79||LA157_0==84||LA157_0==93||LA157_0==98||LA157_0==102||(LA157_0>=141 && LA157_0<=143)) ) {
                        alt157=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    }
                    else if ( (LA157_0==RULE_ID) ) {
                        int LA157_2 = input.LA(2);

                        if ( (synpred173_InternalSCTX()) ) {
                            alt157=1;
                        }
                        else if ( (true) ) {
                            alt157=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 157, 2, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 157, 0, input);

                        throw nvae;
                    }
                    switch (alt157) {
                        case 1 :
                            // InternalSCTX.g:4489:5: ( (lv_trigger_3_0= ruleLogicalOrExpression ) )
                            {
                            // InternalSCTX.g:4489:5: ( (lv_trigger_3_0= ruleLogicalOrExpression ) )
                            // InternalSCTX.g:4490:6: (lv_trigger_3_0= ruleLogicalOrExpression )
                            {
                            // InternalSCTX.g:4490:6: (lv_trigger_3_0= ruleLogicalOrExpression )
                            // InternalSCTX.g:4491:7: lv_trigger_3_0= ruleLogicalOrExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getPolicyTransitionAccess().getTriggerLogicalOrExpressionParserRuleCall_2_1_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_113);
                            lv_trigger_3_0=ruleLogicalOrExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getPolicyTransitionRule());
                              							}
                              							set(
                              								current,
                              								"trigger",
                              								lv_trigger_3_0,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.LogicalOrExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:4509:5: ( (lv_trigger_4_0= ruleValuedObjectReference ) )
                            {
                            // InternalSCTX.g:4509:5: ( (lv_trigger_4_0= ruleValuedObjectReference ) )
                            // InternalSCTX.g:4510:6: (lv_trigger_4_0= ruleValuedObjectReference )
                            {
                            // InternalSCTX.g:4510:6: (lv_trigger_4_0= ruleValuedObjectReference )
                            // InternalSCTX.g:4511:7: lv_trigger_4_0= ruleValuedObjectReference
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getPolicyTransitionAccess().getTriggerValuedObjectReferenceParserRuleCall_2_1_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_113);
                            lv_trigger_4_0=ruleValuedObjectReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getPolicyTransitionRule());
                              							}
                              							set(
                              								current,
                              								"trigger",
                              								lv_trigger_4_0,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:4529:4: (otherlv_5= ':' ( (lv_effects_6_0= rulePureEmission ) ) (otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) ) )* )?
                    int alt159=2;
                    int LA159_0 = input.LA(1);

                    if ( (LA159_0==48) ) {
                        alt159=1;
                    }
                    switch (alt159) {
                        case 1 :
                            // InternalSCTX.g:4530:5: otherlv_5= ':' ( (lv_effects_6_0= rulePureEmission ) ) (otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) ) )*
                            {
                            otherlv_5=(Token)match(input,48,FollowSets000.FOLLOW_114); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_5, grammarAccess.getPolicyTransitionAccess().getColonKeyword_2_2_0());
                              				
                            }
                            // InternalSCTX.g:4534:5: ( (lv_effects_6_0= rulePureEmission ) )
                            // InternalSCTX.g:4535:6: (lv_effects_6_0= rulePureEmission )
                            {
                            // InternalSCTX.g:4535:6: (lv_effects_6_0= rulePureEmission )
                            // InternalSCTX.g:4536:7: lv_effects_6_0= rulePureEmission
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getPolicyTransitionAccess().getEffectsPureEmissionParserRuleCall_2_2_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_115);
                            lv_effects_6_0=rulePureEmission();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getPolicyTransitionRule());
                              							}
                              							add(
                              								current,
                              								"effects",
                              								lv_effects_6_0,
                              								"de.cau.cs.kieler.kexpressions.keffects.KEffects.PureEmission");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalSCTX.g:4553:5: (otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) ) )*
                            loop158:
                            do {
                                int alt158=2;
                                int LA158_0 = input.LA(1);

                                if ( (LA158_0==20) ) {
                                    alt158=1;
                                }


                                switch (alt158) {
                            	case 1 :
                            	    // InternalSCTX.g:4554:6: otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) )
                            	    {
                            	    otherlv_7=(Token)match(input,20,FollowSets000.FOLLOW_114); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_7, grammarAccess.getPolicyTransitionAccess().getCommaKeyword_2_2_2_0());
                            	      					
                            	    }
                            	    // InternalSCTX.g:4558:6: ( (lv_effects_8_0= rulePureEmission ) )
                            	    // InternalSCTX.g:4559:7: (lv_effects_8_0= rulePureEmission )
                            	    {
                            	    // InternalSCTX.g:4559:7: (lv_effects_8_0= rulePureEmission )
                            	    // InternalSCTX.g:4560:8: lv_effects_8_0= rulePureEmission
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getPolicyTransitionAccess().getEffectsPureEmissionParserRuleCall_2_2_2_1_0());
                            	      							
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_115);
                            	    lv_effects_8_0=rulePureEmission();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getPolicyTransitionRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"effects",
                            	      									lv_effects_8_0,
                            	      									"de.cau.cs.kieler.kexpressions.keffects.KEffects.PureEmission");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop158;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,67,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getPolicyTransitionAccess().getGoToKeyword_3());
              		
            }
            // InternalSCTX.g:4584:3: ( (otherlv_10= RULE_ID ) )
            // InternalSCTX.g:4585:4: (otherlv_10= RULE_ID )
            {
            // InternalSCTX.g:4585:4: (otherlv_10= RULE_ID )
            // InternalSCTX.g:4586:5: otherlv_10= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getPolicyTransitionRule());
              					}
              				
            }
            otherlv_10=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_10, grammarAccess.getPolicyTransitionAccess().getTargetStateStateCrossReference_4_0());
              				
            }

            }


            }

            // InternalSCTX.g:4600:3: (otherlv_11= 'label' ( (lv_label_12_0= RULE_STRING ) ) )?
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( (LA161_0==44) ) {
                alt161=1;
            }
            switch (alt161) {
                case 1 :
                    // InternalSCTX.g:4601:4: otherlv_11= 'label' ( (lv_label_12_0= RULE_STRING ) )
                    {
                    otherlv_11=(Token)match(input,44,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getPolicyTransitionAccess().getLabelKeyword_5_0());
                      			
                    }
                    // InternalSCTX.g:4605:4: ( (lv_label_12_0= RULE_STRING ) )
                    // InternalSCTX.g:4606:5: (lv_label_12_0= RULE_STRING )
                    {
                    // InternalSCTX.g:4606:5: (lv_label_12_0= RULE_STRING )
                    // InternalSCTX.g:4607:6: lv_label_12_0= RULE_STRING
                    {
                    lv_label_12_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_12_0, grammarAccess.getPolicyTransitionAccess().getLabelSTRINGTerminalRuleCall_5_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPolicyTransitionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_12_0,
                      							"de.cau.cs.kieler.annotations.Annotations.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePolicyTransition"


    // $ANTLR start "entryRuleDeclarationOrMethodWithKeywordWOSemicolon"
    // InternalSCTX.g:4628:1: entryRuleDeclarationOrMethodWithKeywordWOSemicolon returns [EObject current=null] : iv_ruleDeclarationOrMethodWithKeywordWOSemicolon= ruleDeclarationOrMethodWithKeywordWOSemicolon EOF ;
    public final EObject entryRuleDeclarationOrMethodWithKeywordWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclarationOrMethodWithKeywordWOSemicolon = null;


        try {
            // InternalSCTX.g:4628:82: (iv_ruleDeclarationOrMethodWithKeywordWOSemicolon= ruleDeclarationOrMethodWithKeywordWOSemicolon EOF )
            // InternalSCTX.g:4629:2: iv_ruleDeclarationOrMethodWithKeywordWOSemicolon= ruleDeclarationOrMethodWithKeywordWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationOrMethodWithKeywordWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclarationOrMethodWithKeywordWOSemicolon=ruleDeclarationOrMethodWithKeywordWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclarationOrMethodWithKeywordWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclarationOrMethodWithKeywordWOSemicolon"


    // $ANTLR start "ruleDeclarationOrMethodWithKeywordWOSemicolon"
    // InternalSCTX.g:4635:1: ruleDeclarationOrMethodWithKeywordWOSemicolon returns [EObject current=null] : (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_KeywordMethodDeclarationWOSemicolon_1= ruleKeywordMethodDeclarationWOSemicolon ) ;
    public final EObject ruleDeclarationOrMethodWithKeywordWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject this_DeclarationWOSemicolon_0 = null;

        EObject this_KeywordMethodDeclarationWOSemicolon_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:4641:2: ( (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_KeywordMethodDeclarationWOSemicolon_1= ruleKeywordMethodDeclarationWOSemicolon ) )
            // InternalSCTX.g:4642:2: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_KeywordMethodDeclarationWOSemicolon_1= ruleKeywordMethodDeclarationWOSemicolon )
            {
            // InternalSCTX.g:4642:2: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_KeywordMethodDeclarationWOSemicolon_1= ruleKeywordMethodDeclarationWOSemicolon )
            int alt162=2;
            alt162 = dfa162.predict(input);
            switch (alt162) {
                case 1 :
                    // InternalSCTX.g:4643:3: this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationOrMethodWithKeywordWOSemicolonAccess().getDeclarationWOSemicolonParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DeclarationWOSemicolon_0=ruleDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DeclarationWOSemicolon_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:4655:3: this_KeywordMethodDeclarationWOSemicolon_1= ruleKeywordMethodDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationOrMethodWithKeywordWOSemicolonAccess().getKeywordMethodDeclarationWOSemicolonParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_KeywordMethodDeclarationWOSemicolon_1=ruleKeywordMethodDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_KeywordMethodDeclarationWOSemicolon_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclarationOrMethodWithKeywordWOSemicolon"


    // $ANTLR start "entryRuleKeywordMethodDeclarationWOSemicolon"
    // InternalSCTX.g:4670:1: entryRuleKeywordMethodDeclarationWOSemicolon returns [EObject current=null] : iv_ruleKeywordMethodDeclarationWOSemicolon= ruleKeywordMethodDeclarationWOSemicolon EOF ;
    public final EObject entryRuleKeywordMethodDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeywordMethodDeclarationWOSemicolon = null;


        try {
            // InternalSCTX.g:4670:76: (iv_ruleKeywordMethodDeclarationWOSemicolon= ruleKeywordMethodDeclarationWOSemicolon EOF )
            // InternalSCTX.g:4671:2: iv_ruleKeywordMethodDeclarationWOSemicolon= ruleKeywordMethodDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleKeywordMethodDeclarationWOSemicolon=ruleKeywordMethodDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeywordMethodDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeywordMethodDeclarationWOSemicolon"


    // $ANTLR start "ruleKeywordMethodDeclarationWOSemicolon"
    // InternalSCTX.g:4677:1: ruleKeywordMethodDeclarationWOSemicolon returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? otherlv_3= 'method' ( (lv_returnType_4_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_5_0= ruleSimpleValuedObject ) ) ( (otherlv_6= '(' ( (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )? (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' )? ) ;
    public final EObject ruleKeywordMethodDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_18=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_access_2_0 = null;

        Enumerator lv_returnType_4_0 = null;

        EObject lv_valuedObjects_5_0 = null;

        EObject lv_parameterDeclarations_7_0 = null;

        EObject lv_parameterDeclarations_9_0 = null;

        EObject lv_schedule_13_0 = null;

        EObject lv_annotations_15_0 = null;

        EObject lv_declarations_16_0 = null;

        EObject lv_statements_17_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:4683:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? otherlv_3= 'method' ( (lv_returnType_4_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_5_0= ruleSimpleValuedObject ) ) ( (otherlv_6= '(' ( (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )? (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' )? ) )
            // InternalSCTX.g:4684:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? otherlv_3= 'method' ( (lv_returnType_4_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_5_0= ruleSimpleValuedObject ) ) ( (otherlv_6= '(' ( (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )? (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' )? )
            {
            // InternalSCTX.g:4684:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? otherlv_3= 'method' ( (lv_returnType_4_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_5_0= ruleSimpleValuedObject ) ) ( (otherlv_6= '(' ( (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )? (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' )? )
            // InternalSCTX.g:4685:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? otherlv_3= 'method' ( (lv_returnType_4_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_5_0= ruleSimpleValuedObject ) ) ( (otherlv_6= '(' ( (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )? (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' )?
            {
            // InternalSCTX.g:4685:3: ()
            // InternalSCTX.g:4686:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getMethodImplementationDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:4695:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop163:
            do {
                int alt163=2;
                int LA163_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA164_0==RULE_COMMENT_ANNOTATION||LA164_0==106) ) {
                    alt164=1;
=======
                if ( (LA163_0==RULE_COMMENT_ANNOTATION||LA163_0==102) ) {
                    alt163=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt163) {
            	case 1 :
            	    // InternalSCTX.g:4696:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:4696:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:4697:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_116);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop163;
                }
            } while (true);

            // InternalSCTX.g:4714:3: ( (lv_access_2_0= ruleAccessModifier ) )?
            int alt164=2;
            int LA164_0 = input.LA(1);

<<<<<<< HEAD
            if ( ((LA165_0>=155 && LA165_0<=157)) ) {
                alt165=1;
=======
            if ( ((LA164_0>=151 && LA164_0<=153)) ) {
                alt164=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            switch (alt164) {
                case 1 :
                    // InternalSCTX.g:4715:4: (lv_access_2_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:4715:4: (lv_access_2_0= ruleAccessModifier )
                    // InternalSCTX.g:4716:5: lv_access_2_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_117);
                    lv_access_2_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,68,FollowSets000.FOLLOW_118); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getMethodKeyword_3());
              		
            }
            // InternalSCTX.g:4737:3: ( (lv_returnType_4_0= ruleMethodReturnType ) )?
            int alt165=2;
            int LA165_0 = input.LA(1);

<<<<<<< HEAD
            if ( ((LA166_0>=117 && LA166_0<=120)||LA166_0==158) ) {
                alt166=1;
=======
            if ( ((LA165_0>=113 && LA165_0<=116)||LA165_0==154) ) {
                alt165=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            switch (alt165) {
                case 1 :
                    // InternalSCTX.g:4738:4: (lv_returnType_4_0= ruleMethodReturnType )
                    {
                    // InternalSCTX.g:4738:4: (lv_returnType_4_0= ruleMethodReturnType )
                    // InternalSCTX.g:4739:5: lv_returnType_4_0= ruleMethodReturnType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getReturnTypeMethodReturnTypeEnumRuleCall_4_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_118);
                    lv_returnType_4_0=ruleMethodReturnType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"returnType",
                      						lv_returnType_4_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.MethodReturnType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:4756:3: ( (lv_valuedObjects_5_0= ruleSimpleValuedObject ) )
            // InternalSCTX.g:4757:4: (lv_valuedObjects_5_0= ruleSimpleValuedObject )
            {
            // InternalSCTX.g:4757:4: (lv_valuedObjects_5_0= ruleSimpleValuedObject )
            // InternalSCTX.g:4758:5: lv_valuedObjects_5_0= ruleSimpleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getValuedObjectsSimpleValuedObjectParserRuleCall_5_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_119);
            lv_valuedObjects_5_0=ruleSimpleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_5_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.SimpleValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:4775:3: ( (otherlv_6= '(' ( (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_10= ')' ) | otherlv_11= '()' )
            int alt167=2;
            int LA167_0 = input.LA(1);

            if ( (LA167_0==31) ) {
                alt167=1;
            }
            else if ( (LA167_0==69) ) {
                alt167=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 167, 0, input);

                throw nvae;
            }
            switch (alt167) {
                case 1 :
                    // InternalSCTX.g:4776:4: (otherlv_6= '(' ( (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_10= ')' )
                    {
                    // InternalSCTX.g:4776:4: (otherlv_6= '(' ( (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_10= ')' )
                    // InternalSCTX.g:4777:5: otherlv_6= '(' ( (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_10= ')'
                    {
                    otherlv_6=(Token)match(input,31,FollowSets000.FOLLOW_120); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getLeftParenthesisKeyword_6_0_0());
                      				
                    }
                    // InternalSCTX.g:4781:5: ( (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon ) )
                    // InternalSCTX.g:4782:6: (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon )
                    {
                    // InternalSCTX.g:4782:6: (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon )
                    // InternalSCTX.g:4783:7: lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_6_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_parameterDeclarations_7_0=ruleVariableDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
                      							}
                      							add(
                      								current,
                      								"parameterDeclarations",
                      								lv_parameterDeclarations_7_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:4800:5: (otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) ) )*
                    loop166:
                    do {
                        int alt166=2;
                        int LA166_0 = input.LA(1);

                        if ( (LA166_0==20) ) {
                            alt166=1;
                        }


                        switch (alt166) {
                    	case 1 :
                    	    // InternalSCTX.g:4801:6: otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) )
                    	    {
                    	    otherlv_8=(Token)match(input,20,FollowSets000.FOLLOW_120); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_8, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getCommaKeyword_6_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCTX.g:4805:6: ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) )
                    	    // InternalSCTX.g:4806:7: (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon )
                    	    {
                    	    // InternalSCTX.g:4806:7: (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon )
                    	    // InternalSCTX.g:4807:8: lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_6_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_31);
                    	    lv_parameterDeclarations_9_0=ruleVariableDeclarationWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameterDeclarations",
                    	      									lv_parameterDeclarations_9_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop166;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,32,FollowSets000.FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_10, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getRightParenthesisKeyword_6_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:4831:4: otherlv_11= '()'
                    {
                    otherlv_11=(Token)match(input,69,FollowSets000.FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getLeftParenthesisRightParenthesisKeyword_6_1());
                      			
                    }

                    }
                    break;

            }

            // InternalSCTX.g:4836:3: (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )?
            int alt169=2;
            alt169 = dfa169.predict(input);
            switch (alt169) {
                case 1 :
                    // InternalSCTX.g:4837:4: otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_12=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getScheduleKeyword_7_0());
                      			
                    }
                    // InternalSCTX.g:4841:4: ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+
                    int cnt168=0;
                    loop168:
                    do {
                        int alt168=2;
                        int LA168_0 = input.LA(1);

                        if ( (LA168_0==RULE_ID) ) {
                            alt168=1;
                        }


                        switch (alt168) {
                    	case 1 :
                    	    // InternalSCTX.g:4842:5: (lv_schedule_13_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:4842:5: (lv_schedule_13_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:4843:6: lv_schedule_13_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getScheduleScheduleObjectReferenceParserRuleCall_7_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_122);
                    	    lv_schedule_13_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_13_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt168 >= 1 ) break loop168;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(168, input);
                                throw eee;
                        }
                        cnt168++;
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:4861:3: (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' )?
            int alt173=2;
            int LA173_0 = input.LA(1);

            if ( (LA173_0==21) ) {
                alt173=1;
            }
            switch (alt173) {
                case 1 :
                    // InternalSCTX.g:4862:4: otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}'
                    {
                    otherlv_14=(Token)match(input,21,FollowSets000.FOLLOW_123); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_8_0());
                      			
                    }
                    // InternalSCTX.g:4866:4: ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
                    int alt170=2;
                    int LA170_0 = input.LA(1);

                    if ( (LA170_0==RULE_SL_COMMENT_ANNOTATION) ) {
                        alt170=1;
                    }
                    switch (alt170) {
                        case 1 :
                            // InternalSCTX.g:4867:5: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                            {
                            // InternalSCTX.g:4867:5: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                            // InternalSCTX.g:4868:6: lv_annotations_15_0= ruleCommentAnnotatonSL
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_8_1_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_96);
                            lv_annotations_15_0=ruleCommentAnnotatonSL();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
                              						}
                              						add(
                              							current,
                              							"annotations",
                              							lv_annotations_15_0,
                              							"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:4885:4: ( (lv_declarations_16_0= ruleDeclaration ) )*
                    loop171:
                    do {
                        int alt171=2;
                        alt171 = dfa171.predict(input);
                        switch (alt171) {
                    	case 1 :
                    	    // InternalSCTX.g:4886:5: (lv_declarations_16_0= ruleDeclaration )
                    	    {
                    	    // InternalSCTX.g:4886:5: (lv_declarations_16_0= ruleDeclaration )
                    	    // InternalSCTX.g:4887:6: lv_declarations_16_0= ruleDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getDeclarationsDeclarationParserRuleCall_8_2_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_96);
                    	    lv_declarations_16_0=ruleDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"declarations",
                    	      							lv_declarations_16_0,
                    	      							"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop171;
                        }
                    } while (true);

                    // InternalSCTX.g:4904:4: ( (lv_statements_17_0= ruleStatement ) )*
                    loop172:
                    do {
                        int alt172=2;
                        int LA172_0 = input.LA(1);

<<<<<<< HEAD
                        if ( (LA173_0==RULE_ID||LA173_0==RULE_COMMENT_ANNOTATION||LA173_0==21||LA173_0==38||LA173_0==47||(LA173_0>=72 && LA173_0<=73)||LA173_0==75||LA173_0==106) ) {
                            alt173=1;
=======
                        if ( (LA172_0==RULE_ID||LA172_0==RULE_COMMENT_ANNOTATION||LA172_0==21||LA172_0==38||LA172_0==47||(LA172_0>=71 && LA172_0<=72)||LA172_0==74||LA172_0==102) ) {
                            alt172=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        }


                        switch (alt172) {
                    	case 1 :
                    	    // InternalSCTX.g:4905:5: (lv_statements_17_0= ruleStatement )
                    	    {
                    	    // InternalSCTX.g:4905:5: (lv_statements_17_0= ruleStatement )
                    	    // InternalSCTX.g:4906:6: lv_statements_17_0= ruleStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getStatementsStatementParserRuleCall_8_3_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_97);
                    	    lv_statements_17_0=ruleStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"statements",
                    	      							lv_statements_17_0,
                    	      							"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop172;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_8_4());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeywordMethodDeclarationWOSemicolon"


    // $ANTLR start "entryRuleModule"
    // InternalSCTX.g:4932:1: entryRuleModule returns [EObject current=null] : iv_ruleModule= ruleModule EOF ;
    public final EObject entryRuleModule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModule = null;


        try {
            // InternalSCTX.g:4932:47: (iv_ruleModule= ruleModule EOF )
            // InternalSCTX.g:4933:2: iv_ruleModule= ruleModule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModuleRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleModule=ruleModule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModule; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModule"


    // $ANTLR start "ruleModule"
    // InternalSCTX.g:4939:1: ruleModule returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'module' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' )? ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* ) ;
    public final EObject ruleModule() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_declarations_4_0 = null;

        EObject lv_statements_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:4945:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'module' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' )? ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* ) )
            // InternalSCTX.g:4946:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'module' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' )? ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* )
            {
            // InternalSCTX.g:4946:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'module' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' )? ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* )
            // InternalSCTX.g:4947:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'module' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' )? ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )*
            {
            // InternalSCTX.g:4947:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop174:
            do {
                int alt174=2;
                int LA174_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA175_0==RULE_COMMENT_ANNOTATION||LA175_0==106) ) {
                    alt175=1;
=======
                if ( (LA174_0==RULE_COMMENT_ANNOTATION||LA174_0==102) ) {
                    alt174=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt174) {
            	case 1 :
            	    // InternalSCTX.g:4948:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:4948:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:4949:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModuleAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_124);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModuleRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop174;
                }
            } while (true);

            otherlv_1=(Token)match(input,70,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getModuleAccess().getModuleKeyword_1());
              		
            }
            // InternalSCTX.g:4970:3: ( (lv_name_2_0= RULE_ID ) )
            // InternalSCTX.g:4971:4: (lv_name_2_0= RULE_ID )
            {
            // InternalSCTX.g:4971:4: (lv_name_2_0= RULE_ID )
            // InternalSCTX.g:4972:5: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_125); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getModuleRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalSCTX.g:4988:3: (otherlv_3= ':' )?
            int alt175=2;
            int LA175_0 = input.LA(1);

            if ( (LA175_0==48) ) {
                alt175=1;
            }
            switch (alt175) {
                case 1 :
                    // InternalSCTX.g:4989:4: otherlv_3= ':'
                    {
                    otherlv_3=(Token)match(input,48,FollowSets000.FOLLOW_126); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getModuleAccess().getColonKeyword_3());
                      			
                    }

                    }
                    break;

            }

            // InternalSCTX.g:4994:3: ( (lv_declarations_4_0= ruleDeclaration ) )*
            loop176:
            do {
                int alt176=2;
                alt176 = dfa176.predict(input);
                switch (alt176) {
            	case 1 :
            	    // InternalSCTX.g:4995:4: (lv_declarations_4_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:4995:4: (lv_declarations_4_0= ruleDeclaration )
            	    // InternalSCTX.g:4996:5: lv_declarations_4_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModuleAccess().getDeclarationsDeclarationParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_126);
            	    lv_declarations_4_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModuleRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_4_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop176;
                }
            } while (true);

            // InternalSCTX.g:5013:3: ( (lv_statements_5_0= ruleStatement ) )*
            loop177:
            do {
                int alt177=2;
                int LA177_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA178_0==RULE_ID||LA178_0==RULE_COMMENT_ANNOTATION||LA178_0==21||LA178_0==38||LA178_0==47||(LA178_0>=72 && LA178_0<=73)||LA178_0==75||LA178_0==106) ) {
                    alt178=1;
=======
                if ( (LA177_0==RULE_ID||LA177_0==RULE_COMMENT_ANNOTATION||LA177_0==21||LA177_0==38||LA177_0==47||(LA177_0>=71 && LA177_0<=72)||LA177_0==74||LA177_0==102) ) {
                    alt177=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt177) {
            	case 1 :
            	    // InternalSCTX.g:5014:4: (lv_statements_5_0= ruleStatement )
            	    {
            	    // InternalSCTX.g:5014:4: (lv_statements_5_0= ruleStatement )
            	    // InternalSCTX.g:5015:5: lv_statements_5_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModuleAccess().getStatementsStatementParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_127);
            	    lv_statements_5_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModuleRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_5_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop177;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModule"


    // $ANTLR start "entryRuleLabel"
    // InternalSCTX.g:5036:1: entryRuleLabel returns [EObject current=null] : iv_ruleLabel= ruleLabel EOF ;
    public final EObject entryRuleLabel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLabel = null;


        try {
            // InternalSCTX.g:5036:46: (iv_ruleLabel= ruleLabel EOF )
            // InternalSCTX.g:5037:2: iv_ruleLabel= ruleLabel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLabelRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLabel=ruleLabel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLabel; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLabel"


    // $ANTLR start "ruleLabel"
    // InternalSCTX.g:5043:1: ruleLabel returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ) ;
    public final EObject ruleLabel() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:5049:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ) )
            // InternalSCTX.g:5050:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' )
            {
            // InternalSCTX.g:5050:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' )
            // InternalSCTX.g:5051:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':'
            {
            // InternalSCTX.g:5051:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop178:
            do {
                int alt178=2;
                int LA178_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA179_0==RULE_COMMENT_ANNOTATION||LA179_0==106) ) {
                    alt179=1;
=======
                if ( (LA178_0==RULE_COMMENT_ANNOTATION||LA178_0==102) ) {
                    alt178=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt178) {
            	case 1 :
            	    // InternalSCTX.g:5052:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:5052:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:5053:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getLabelAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_105);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getLabelRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop178;
                }
            } while (true);

            // InternalSCTX.g:5070:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalSCTX.g:5071:4: (lv_name_1_0= RULE_ID )
            {
            // InternalSCTX.g:5071:4: (lv_name_1_0= RULE_ID )
            // InternalSCTX.g:5072:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getLabelRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getLabelAccess().getColonKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLabel"


    // $ANTLR start "entryRuleGoto"
    // InternalSCTX.g:5096:1: entryRuleGoto returns [EObject current=null] : iv_ruleGoto= ruleGoto EOF ;
    public final EObject entryRuleGoto() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGoto = null;


        try {
            // InternalSCTX.g:5096:45: (iv_ruleGoto= ruleGoto EOF )
            // InternalSCTX.g:5097:2: iv_ruleGoto= ruleGoto EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGotoRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleGoto=ruleGoto();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGoto; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGoto"


    // $ANTLR start "ruleGoto"
    // InternalSCTX.g:5103:1: ruleGoto returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'goto' ( (otherlv_2= RULE_ID ) ) ( (lv_semicolon_3_0= ';' ) )? ) ;
    public final EObject ruleGoto() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_semicolon_3_0=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:5109:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'goto' ( (otherlv_2= RULE_ID ) ) ( (lv_semicolon_3_0= ';' ) )? ) )
            // InternalSCTX.g:5110:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'goto' ( (otherlv_2= RULE_ID ) ) ( (lv_semicolon_3_0= ';' ) )? )
            {
            // InternalSCTX.g:5110:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'goto' ( (otherlv_2= RULE_ID ) ) ( (lv_semicolon_3_0= ';' ) )? )
            // InternalSCTX.g:5111:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'goto' ( (otherlv_2= RULE_ID ) ) ( (lv_semicolon_3_0= ';' ) )?
            {
            // InternalSCTX.g:5111:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop179:
            do {
                int alt179=2;
                int LA179_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA180_0==RULE_COMMENT_ANNOTATION||LA180_0==106) ) {
                    alt180=1;
=======
                if ( (LA179_0==RULE_COMMENT_ANNOTATION||LA179_0==102) ) {
                    alt179=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt179) {
            	case 1 :
            	    // InternalSCTX.g:5112:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:5112:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:5113:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getGotoAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_128);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getGotoRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop179;
                }
            } while (true);

            otherlv_1=(Token)match(input,71,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGotoAccess().getGotoKeyword_1());
              		
            }
            // InternalSCTX.g:5134:3: ( (otherlv_2= RULE_ID ) )
            // InternalSCTX.g:5135:4: (otherlv_2= RULE_ID )
            {
            // InternalSCTX.g:5135:4: (otherlv_2= RULE_ID )
            // InternalSCTX.g:5136:5: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGotoRule());
              					}
              				
            }
            otherlv_2=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_129); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getGotoAccess().getTargetLabelCrossReference_2_0());
              				
            }

            }


            }

            // InternalSCTX.g:5150:3: ( (lv_semicolon_3_0= ';' ) )?
            int alt180=2;
            int LA180_0 = input.LA(1);

            if ( (LA180_0==42) ) {
                alt180=1;
            }
            switch (alt180) {
                case 1 :
                    // InternalSCTX.g:5151:4: (lv_semicolon_3_0= ';' )
                    {
                    // InternalSCTX.g:5151:4: (lv_semicolon_3_0= ';' )
                    // InternalSCTX.g:5152:5: lv_semicolon_3_0= ';'
                    {
                    lv_semicolon_3_0=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_3_0, grammarAccess.getGotoAccess().getSemicolonSemicolonKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getGotoRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGoto"


    // $ANTLR start "entryRuleSclAssignment"
    // InternalSCTX.g:5168:1: entryRuleSclAssignment returns [EObject current=null] : iv_ruleSclAssignment= ruleSclAssignment EOF ;
    public final EObject entryRuleSclAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSclAssignment = null;


        try {
            // InternalSCTX.g:5168:54: (iv_ruleSclAssignment= ruleSclAssignment EOF )
            // InternalSCTX.g:5169:2: iv_ruleSclAssignment= ruleSclAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSclAssignmentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSclAssignment=ruleSclAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSclAssignment; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSclAssignment"


    // $ANTLR start "ruleSclAssignment"
    // InternalSCTX.g:5175:1: ruleSclAssignment returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_6_0= ';' ) )? ) ;
    public final EObject ruleSclAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token lv_semicolon_6_0=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_expression_3_0 = null;

        EObject lv_schedule_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:5181:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_6_0= ';' ) )? ) )
            // InternalSCTX.g:5182:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_6_0= ';' ) )? )
            {
            // InternalSCTX.g:5182:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_6_0= ';' ) )? )
            // InternalSCTX.g:5183:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_6_0= ';' ) )?
            {
            // InternalSCTX.g:5183:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop181:
            do {
                int alt181=2;
                int LA181_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA182_0==RULE_COMMENT_ANNOTATION||LA182_0==106) ) {
                    alt182=1;
=======
                if ( (LA181_0==RULE_COMMENT_ANNOTATION||LA181_0==102) ) {
                    alt181=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt181) {
            	case 1 :
            	    // InternalSCTX.g:5184:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:5184:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:5185:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSclAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_130);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSclAssignmentRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop181;
                }
            } while (true);

            // InternalSCTX.g:5202:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalSCTX.g:5203:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalSCTX.g:5203:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalSCTX.g:5204:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSclAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_131);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSclAssignmentRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:5221:3: ( (lv_operator_2_0= ruleAssignOperator ) )
            // InternalSCTX.g:5222:4: (lv_operator_2_0= ruleAssignOperator )
            {
            // InternalSCTX.g:5222:4: (lv_operator_2_0= ruleAssignOperator )
            // InternalSCTX.g:5223:5: lv_operator_2_0= ruleAssignOperator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSclAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_30);
            lv_operator_2_0=ruleAssignOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSclAssignmentRule());
              					}
              					set(
              						current,
              						"operator",
              						lv_operator_2_0,
              						"de.cau.cs.kieler.kexpressions.keffects.KEffects.AssignOperator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:5240:3: ( (lv_expression_3_0= ruleExpression ) )
            // InternalSCTX.g:5241:4: (lv_expression_3_0= ruleExpression )
            {
            // InternalSCTX.g:5241:4: (lv_expression_3_0= ruleExpression )
            // InternalSCTX.g:5242:5: lv_expression_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSclAssignmentAccess().getExpressionExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_132);
            lv_expression_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSclAssignmentRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_3_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:5259:3: (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )?
            int alt183=2;
            int LA183_0 = input.LA(1);

            if ( (LA183_0==29) ) {
                alt183=1;
            }
            switch (alt183) {
                case 1 :
                    // InternalSCTX.g:5260:4: otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_4=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getSclAssignmentAccess().getScheduleKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:5264:4: ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+
                    int cnt182=0;
                    loop182:
                    do {
                        int alt182=2;
                        alt182 = dfa182.predict(input);
                        switch (alt182) {
                    	case 1 :
                    	    // InternalSCTX.g:5265:5: (lv_schedule_5_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:5265:5: (lv_schedule_5_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:5266:6: lv_schedule_5_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getSclAssignmentAccess().getScheduleScheduleObjectReferenceParserRuleCall_4_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_133);
                    	    lv_schedule_5_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getSclAssignmentRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_5_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt182 >= 1 ) break loop182;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(182, input);
                                throw eee;
                        }
                        cnt182++;
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:5284:3: ( (lv_semicolon_6_0= ';' ) )?
            int alt184=2;
            int LA184_0 = input.LA(1);

            if ( (LA184_0==42) ) {
                alt184=1;
            }
            switch (alt184) {
                case 1 :
                    // InternalSCTX.g:5285:4: (lv_semicolon_6_0= ';' )
                    {
                    // InternalSCTX.g:5285:4: (lv_semicolon_6_0= ';' )
                    // InternalSCTX.g:5286:5: lv_semicolon_6_0= ';'
                    {
                    lv_semicolon_6_0=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_6_0, grammarAccess.getSclAssignmentAccess().getSemicolonSemicolonKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSclAssignmentRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSclAssignment"


    // $ANTLR start "entryRuleSclPostfixAssignment"
    // InternalSCTX.g:5302:1: entryRuleSclPostfixAssignment returns [EObject current=null] : iv_ruleSclPostfixAssignment= ruleSclPostfixAssignment EOF ;
    public final EObject entryRuleSclPostfixAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSclPostfixAssignment = null;


        try {
            // InternalSCTX.g:5302:61: (iv_ruleSclPostfixAssignment= ruleSclPostfixAssignment EOF )
            // InternalSCTX.g:5303:2: iv_ruleSclPostfixAssignment= ruleSclPostfixAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSclPostfixAssignmentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSclPostfixAssignment=ruleSclPostfixAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSclPostfixAssignment; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSclPostfixAssignment"


    // $ANTLR start "ruleSclPostfixAssignment"
    // InternalSCTX.g:5309:1: ruleSclPostfixAssignment returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_5_0= ';' ) )? ) ;
    public final EObject ruleSclPostfixAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token lv_semicolon_5_0=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_schedule_4_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:5315:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_5_0= ';' ) )? ) )
            // InternalSCTX.g:5316:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_5_0= ';' ) )? )
            {
            // InternalSCTX.g:5316:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_5_0= ';' ) )? )
            // InternalSCTX.g:5317:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_5_0= ';' ) )?
            {
            // InternalSCTX.g:5317:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop185:
            do {
                int alt185=2;
                int LA185_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA186_0==RULE_COMMENT_ANNOTATION||LA186_0==106) ) {
                    alt186=1;
=======
                if ( (LA185_0==RULE_COMMENT_ANNOTATION||LA185_0==102) ) {
                    alt185=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt185) {
            	case 1 :
            	    // InternalSCTX.g:5318:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:5318:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:5319:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSclPostfixAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_130);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSclPostfixAssignmentRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop185;
                }
            } while (true);

            // InternalSCTX.g:5336:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalSCTX.g:5337:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalSCTX.g:5337:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalSCTX.g:5338:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSclPostfixAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_134);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSclPostfixAssignmentRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:5355:3: ( (lv_operator_2_0= rulePostfixOperator ) )
            // InternalSCTX.g:5356:4: (lv_operator_2_0= rulePostfixOperator )
            {
            // InternalSCTX.g:5356:4: (lv_operator_2_0= rulePostfixOperator )
            // InternalSCTX.g:5357:5: lv_operator_2_0= rulePostfixOperator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSclPostfixAssignmentAccess().getOperatorPostfixOperatorEnumRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_132);
            lv_operator_2_0=rulePostfixOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSclPostfixAssignmentRule());
              					}
              					set(
              						current,
              						"operator",
              						lv_operator_2_0,
              						"de.cau.cs.kieler.kexpressions.keffects.KEffects.PostfixOperator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:5374:3: (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )?
            int alt187=2;
            int LA187_0 = input.LA(1);

            if ( (LA187_0==29) ) {
                alt187=1;
            }
            switch (alt187) {
                case 1 :
                    // InternalSCTX.g:5375:4: otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_3=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getSclPostfixAssignmentAccess().getScheduleKeyword_3_0());
                      			
                    }
                    // InternalSCTX.g:5379:4: ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+
                    int cnt186=0;
                    loop186:
                    do {
                        int alt186=2;
                        alt186 = dfa186.predict(input);
                        switch (alt186) {
                    	case 1 :
                    	    // InternalSCTX.g:5380:5: (lv_schedule_4_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:5380:5: (lv_schedule_4_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:5381:6: lv_schedule_4_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getSclPostfixAssignmentAccess().getScheduleScheduleObjectReferenceParserRuleCall_3_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_133);
                    	    lv_schedule_4_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getSclPostfixAssignmentRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_4_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt186 >= 1 ) break loop186;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(186, input);
                                throw eee;
                        }
                        cnt186++;
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:5399:3: ( (lv_semicolon_5_0= ';' ) )?
            int alt188=2;
            int LA188_0 = input.LA(1);

            if ( (LA188_0==42) ) {
                alt188=1;
            }
            switch (alt188) {
                case 1 :
                    // InternalSCTX.g:5400:4: (lv_semicolon_5_0= ';' )
                    {
                    // InternalSCTX.g:5400:4: (lv_semicolon_5_0= ';' )
                    // InternalSCTX.g:5401:5: lv_semicolon_5_0= ';'
                    {
                    lv_semicolon_5_0=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_5_0, grammarAccess.getSclPostfixAssignmentAccess().getSemicolonSemicolonKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSclPostfixAssignmentRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSclPostfixAssignment"


    // $ANTLR start "entryRuleReturn"
    // InternalSCTX.g:5417:1: entryRuleReturn returns [EObject current=null] : iv_ruleReturn= ruleReturn EOF ;
    public final EObject entryRuleReturn() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReturn = null;


        try {
            // InternalSCTX.g:5417:47: (iv_ruleReturn= ruleReturn EOF )
            // InternalSCTX.g:5418:2: iv_ruleReturn= ruleReturn EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReturnRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReturn=ruleReturn();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReturn; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReturn"


    // $ANTLR start "ruleReturn"
    // InternalSCTX.g:5424:1: ruleReturn returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'return' ( (lv_expression_2_0= ruleExpression ) ) ) ;
    public final EObject ruleReturn() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:5430:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'return' ( (lv_expression_2_0= ruleExpression ) ) ) )
            // InternalSCTX.g:5431:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'return' ( (lv_expression_2_0= ruleExpression ) ) )
            {
            // InternalSCTX.g:5431:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'return' ( (lv_expression_2_0= ruleExpression ) ) )
            // InternalSCTX.g:5432:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'return' ( (lv_expression_2_0= ruleExpression ) )
            {
            // InternalSCTX.g:5432:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop189:
            do {
                int alt189=2;
                int LA189_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA190_0==RULE_COMMENT_ANNOTATION||LA190_0==106) ) {
                    alt190=1;
=======
                if ( (LA189_0==RULE_COMMENT_ANNOTATION||LA189_0==102) ) {
                    alt189=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt189) {
            	case 1 :
            	    // InternalSCTX.g:5433:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:5433:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:5434:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getReturnAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_135);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getReturnRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop189;
                }
            } while (true);

            otherlv_1=(Token)match(input,72,FollowSets000.FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getReturnAccess().getReturnKeyword_1());
              		
            }
            // InternalSCTX.g:5455:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalSCTX.g:5456:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalSCTX.g:5456:4: (lv_expression_2_0= ruleExpression )
            // InternalSCTX.g:5457:5: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReturnAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getReturnRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReturn"


    // $ANTLR start "entryRuleConditional"
    // InternalSCTX.g:5478:1: entryRuleConditional returns [EObject current=null] : iv_ruleConditional= ruleConditional EOF ;
    public final EObject entryRuleConditional() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConditional = null;


        try {
            // InternalSCTX.g:5478:52: (iv_ruleConditional= ruleConditional EOF )
            // InternalSCTX.g:5479:2: iv_ruleConditional= ruleConditional EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleConditional=ruleConditional();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditional; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditional"


    // $ANTLR start "ruleConditional"
    // InternalSCTX.g:5485:1: ruleConditional returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleAtomicExpression ) ) otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )? ) ;
    public final EObject ruleConditional() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        Token lv_semicolon_8_0=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_2_0 = null;

        EObject lv_declarations_4_0 = null;

        EObject lv_statements_5_0 = null;

        EObject lv_else_7_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:5491:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleAtomicExpression ) ) otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )? ) )
            // InternalSCTX.g:5492:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleAtomicExpression ) ) otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )? )
            {
            // InternalSCTX.g:5492:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleAtomicExpression ) ) otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )? )
            // InternalSCTX.g:5493:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleAtomicExpression ) ) otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )?
            {
            // InternalSCTX.g:5493:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop190:
            do {
                int alt190=2;
                int LA190_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA191_0==RULE_COMMENT_ANNOTATION||LA191_0==106) ) {
                    alt191=1;
=======
                if ( (LA190_0==RULE_COMMENT_ANNOTATION||LA190_0==102) ) {
                    alt190=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt190) {
            	case 1 :
            	    // InternalSCTX.g:5494:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:5494:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:5495:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConditionalAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_136);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConditionalRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop190;
                }
            } while (true);

            otherlv_1=(Token)match(input,38,FollowSets000.FOLLOW_137); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getConditionalAccess().getIfKeyword_1());
              		
            }
            // InternalSCTX.g:5516:3: ( (lv_expression_2_0= ruleAtomicExpression ) )
            // InternalSCTX.g:5517:4: (lv_expression_2_0= ruleAtomicExpression )
            {
            // InternalSCTX.g:5517:4: (lv_expression_2_0= ruleAtomicExpression )
            // InternalSCTX.g:5518:5: lv_expression_2_0= ruleAtomicExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConditionalAccess().getExpressionAtomicExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_99);
            lv_expression_2_0=ruleAtomicExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConditionalRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.AtomicExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,21,FollowSets000.FOLLOW_96); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getConditionalAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalSCTX.g:5539:3: ( (lv_declarations_4_0= ruleDeclaration ) )*
            loop191:
            do {
                int alt191=2;
                alt191 = dfa191.predict(input);
                switch (alt191) {
            	case 1 :
            	    // InternalSCTX.g:5540:4: (lv_declarations_4_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:5540:4: (lv_declarations_4_0= ruleDeclaration )
            	    // InternalSCTX.g:5541:5: lv_declarations_4_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConditionalAccess().getDeclarationsDeclarationParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_96);
            	    lv_declarations_4_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConditionalRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_4_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop191;
                }
            } while (true);

            // InternalSCTX.g:5558:3: ( (lv_statements_5_0= ruleStatement ) )*
            loop192:
            do {
                int alt192=2;
                int LA192_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA193_0==RULE_ID||LA193_0==RULE_COMMENT_ANNOTATION||LA193_0==21||LA193_0==38||LA193_0==47||(LA193_0>=72 && LA193_0<=73)||LA193_0==75||LA193_0==106) ) {
                    alt193=1;
=======
                if ( (LA192_0==RULE_ID||LA192_0==RULE_COMMENT_ANNOTATION||LA192_0==21||LA192_0==38||LA192_0==47||(LA192_0>=71 && LA192_0<=72)||LA192_0==74||LA192_0==102) ) {
                    alt192=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt192) {
            	case 1 :
            	    // InternalSCTX.g:5559:4: (lv_statements_5_0= ruleStatement )
            	    {
            	    // InternalSCTX.g:5559:4: (lv_statements_5_0= ruleStatement )
            	    // InternalSCTX.g:5560:5: lv_statements_5_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConditionalAccess().getStatementsStatementParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_97);
            	    lv_statements_5_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConditionalRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_5_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop192;
                }
            } while (true);

            otherlv_6=(Token)match(input,22,FollowSets000.FOLLOW_138); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getConditionalAccess().getRightCurlyBracketKeyword_6());
              		
            }
            // InternalSCTX.g:5581:3: ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )?
            int alt193=3;
            alt193 = dfa193.predict(input);
            switch (alt193) {
                case 1 :
                    // InternalSCTX.g:5582:4: ( (lv_else_7_0= ruleElseScope ) )
                    {
                    // InternalSCTX.g:5582:4: ( (lv_else_7_0= ruleElseScope ) )
                    // InternalSCTX.g:5583:5: (lv_else_7_0= ruleElseScope )
                    {
                    // InternalSCTX.g:5583:5: (lv_else_7_0= ruleElseScope )
                    // InternalSCTX.g:5584:6: lv_else_7_0= ruleElseScope
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConditionalAccess().getElseElseScopeParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_else_7_0=ruleElseScope();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConditionalRule());
                      						}
                      						set(
                      							current,
                      							"else",
                      							lv_else_7_0,
                      							"de.cau.cs.kieler.scl.SCL.ElseScope");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:5602:4: ( (lv_semicolon_8_0= ';' ) )
                    {
                    // InternalSCTX.g:5602:4: ( (lv_semicolon_8_0= ';' ) )
                    // InternalSCTX.g:5603:5: (lv_semicolon_8_0= ';' )
                    {
                    // InternalSCTX.g:5603:5: (lv_semicolon_8_0= ';' )
                    // InternalSCTX.g:5604:6: lv_semicolon_8_0= ';'
                    {
                    lv_semicolon_8_0=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_semicolon_8_0, grammarAccess.getConditionalAccess().getSemicolonSemicolonKeyword_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConditionalRule());
                      						}
                      						setWithLastConsumed(current, "semicolon", true, ";");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditional"


    // $ANTLR start "entryRuleElseScope"
    // InternalSCTX.g:5621:1: entryRuleElseScope returns [EObject current=null] : iv_ruleElseScope= ruleElseScope EOF ;
    public final EObject entryRuleElseScope() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElseScope = null;


        try {
            // InternalSCTX.g:5621:50: (iv_ruleElseScope= ruleElseScope EOF )
            // InternalSCTX.g:5622:2: iv_ruleElseScope= ruleElseScope EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElseScopeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleElseScope=ruleElseScope();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElseScope; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElseScope"


    // $ANTLR start "ruleElseScope"
    // InternalSCTX.g:5628:1: ruleElseScope returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( (lv_semicolon_7_0= ';' ) )? ) ;
    public final EObject ruleElseScope() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        Token lv_semicolon_7_0=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_declarations_4_0 = null;

        EObject lv_statements_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:5634:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( (lv_semicolon_7_0= ';' ) )? ) )
            // InternalSCTX.g:5635:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( (lv_semicolon_7_0= ';' ) )? )
            {
            // InternalSCTX.g:5635:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( (lv_semicolon_7_0= ';' ) )? )
            // InternalSCTX.g:5636:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( (lv_semicolon_7_0= ';' ) )?
            {
            // InternalSCTX.g:5636:3: ()
            // InternalSCTX.g:5637:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getElseScopeAccess().getElseScopeAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:5646:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop194:
            do {
                int alt194=2;
                int LA194_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA195_0==RULE_COMMENT_ANNOTATION||LA195_0==106) ) {
                    alt195=1;
=======
                if ( (LA194_0==RULE_COMMENT_ANNOTATION||LA194_0==102) ) {
                    alt194=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt194) {
            	case 1 :
            	    // InternalSCTX.g:5647:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:5647:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:5648:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getElseScopeAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_139);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getElseScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop194;
                }
            } while (true);

            otherlv_2=(Token)match(input,73,FollowSets000.FOLLOW_99); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getElseScopeAccess().getElseKeyword_2());
              		
            }
            otherlv_3=(Token)match(input,21,FollowSets000.FOLLOW_96); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getElseScopeAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalSCTX.g:5673:3: ( (lv_declarations_4_0= ruleDeclaration ) )*
            loop195:
            do {
                int alt195=2;
                alt195 = dfa195.predict(input);
                switch (alt195) {
            	case 1 :
            	    // InternalSCTX.g:5674:4: (lv_declarations_4_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:5674:4: (lv_declarations_4_0= ruleDeclaration )
            	    // InternalSCTX.g:5675:5: lv_declarations_4_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getElseScopeAccess().getDeclarationsDeclarationParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_96);
            	    lv_declarations_4_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getElseScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_4_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop195;
                }
            } while (true);

            // InternalSCTX.g:5692:3: ( (lv_statements_5_0= ruleStatement ) )*
            loop196:
            do {
                int alt196=2;
                int LA196_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA197_0==RULE_ID||LA197_0==RULE_COMMENT_ANNOTATION||LA197_0==21||LA197_0==38||LA197_0==47||(LA197_0>=72 && LA197_0<=73)||LA197_0==75||LA197_0==106) ) {
                    alt197=1;
=======
                if ( (LA196_0==RULE_ID||LA196_0==RULE_COMMENT_ANNOTATION||LA196_0==21||LA196_0==38||LA196_0==47||(LA196_0>=71 && LA196_0<=72)||LA196_0==74||LA196_0==102) ) {
                    alt196=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt196) {
            	case 1 :
            	    // InternalSCTX.g:5693:4: (lv_statements_5_0= ruleStatement )
            	    {
            	    // InternalSCTX.g:5693:4: (lv_statements_5_0= ruleStatement )
            	    // InternalSCTX.g:5694:5: lv_statements_5_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getElseScopeAccess().getStatementsStatementParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_97);
            	    lv_statements_5_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getElseScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_5_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop196;
                }
            } while (true);

            otherlv_6=(Token)match(input,22,FollowSets000.FOLLOW_129); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getElseScopeAccess().getRightCurlyBracketKeyword_6());
              		
            }
            // InternalSCTX.g:5715:3: ( (lv_semicolon_7_0= ';' ) )?
            int alt197=2;
            int LA197_0 = input.LA(1);

            if ( (LA197_0==42) ) {
                alt197=1;
            }
            switch (alt197) {
                case 1 :
                    // InternalSCTX.g:5716:4: (lv_semicolon_7_0= ';' )
                    {
                    // InternalSCTX.g:5716:4: (lv_semicolon_7_0= ';' )
                    // InternalSCTX.g:5717:5: lv_semicolon_7_0= ';'
                    {
                    lv_semicolon_7_0=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_7_0, grammarAccess.getElseScopeAccess().getSemicolonSemicolonKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElseScopeRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElseScope"


    // $ANTLR start "entryRuleLegacyElseScope"
    // InternalSCTX.g:5733:1: entryRuleLegacyElseScope returns [EObject current=null] : iv_ruleLegacyElseScope= ruleLegacyElseScope EOF ;
    public final EObject entryRuleLegacyElseScope() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLegacyElseScope = null;


        try {
            // InternalSCTX.g:5733:56: (iv_ruleLegacyElseScope= ruleLegacyElseScope EOF )
            // InternalSCTX.g:5734:2: iv_ruleLegacyElseScope= ruleLegacyElseScope EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLegacyElseScopeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLegacyElseScope=ruleLegacyElseScope();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLegacyElseScope; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLegacyElseScope"


    // $ANTLR start "ruleLegacyElseScope"
    // InternalSCTX.g:5740:1: ruleLegacyElseScope returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' ( (lv_statements_3_0= ruleStatement ) )* ) ;
    public final EObject ruleLegacyElseScope() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_statements_3_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:5746:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' ( (lv_statements_3_0= ruleStatement ) )* ) )
            // InternalSCTX.g:5747:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' ( (lv_statements_3_0= ruleStatement ) )* )
            {
            // InternalSCTX.g:5747:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' ( (lv_statements_3_0= ruleStatement ) )* )
            // InternalSCTX.g:5748:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' ( (lv_statements_3_0= ruleStatement ) )*
            {
            // InternalSCTX.g:5748:3: ()
            // InternalSCTX.g:5749:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLegacyElseScopeAccess().getElseScopeAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:5758:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop198:
            do {
                int alt198=2;
                int LA198_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA199_0==RULE_COMMENT_ANNOTATION||LA199_0==106) ) {
                    alt199=1;
=======
                if ( (LA198_0==RULE_COMMENT_ANNOTATION||LA198_0==102) ) {
                    alt198=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt198) {
            	case 1 :
            	    // InternalSCTX.g:5759:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:5759:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:5760:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getLegacyElseScopeAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_139);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getLegacyElseScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop198;
                }
            } while (true);

            otherlv_2=(Token)match(input,73,FollowSets000.FOLLOW_127); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getLegacyElseScopeAccess().getElseKeyword_2());
              		
            }
            // InternalSCTX.g:5781:3: ( (lv_statements_3_0= ruleStatement ) )*
            loop199:
            do {
                int alt199=2;
                int LA199_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA200_0==RULE_ID||LA200_0==RULE_COMMENT_ANNOTATION||LA200_0==21||LA200_0==38||LA200_0==47||(LA200_0>=72 && LA200_0<=73)||LA200_0==75||LA200_0==106) ) {
                    alt200=1;
=======
                if ( (LA199_0==RULE_ID||LA199_0==RULE_COMMENT_ANNOTATION||LA199_0==21||LA199_0==38||LA199_0==47||(LA199_0>=71 && LA199_0<=72)||LA199_0==74||LA199_0==102) ) {
                    alt199=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt199) {
            	case 1 :
            	    // InternalSCTX.g:5782:4: (lv_statements_3_0= ruleStatement )
            	    {
            	    // InternalSCTX.g:5782:4: (lv_statements_3_0= ruleStatement )
            	    // InternalSCTX.g:5783:5: lv_statements_3_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getLegacyElseScopeAccess().getStatementsStatementParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_127);
            	    lv_statements_3_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getLegacyElseScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_3_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop199;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLegacyElseScope"


    // $ANTLR start "entryRuleThread"
    // InternalSCTX.g:5804:1: entryRuleThread returns [EObject current=null] : iv_ruleThread= ruleThread EOF ;
    public final EObject entryRuleThread() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleThread = null;


        try {
            // InternalSCTX.g:5804:47: (iv_ruleThread= ruleThread EOF )
            // InternalSCTX.g:5805:2: iv_ruleThread= ruleThread EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getThreadRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleThread=ruleThread();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleThread; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleThread"


    // $ANTLR start "ruleThread"
    // InternalSCTX.g:5811:1: ruleThread returns [EObject current=null] : ( () ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* ) ) ;
    public final EObject ruleThread() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_declarations_3_0 = null;

        EObject lv_statements_4_0 = null;

        EObject lv_statements_6_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:5817:2: ( ( () ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* ) ) )
            // InternalSCTX.g:5818:2: ( () ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* ) )
            {
            // InternalSCTX.g:5818:2: ( () ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* ) )
            // InternalSCTX.g:5819:3: () ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* )
            {
            // InternalSCTX.g:5819:3: ()
            // InternalSCTX.g:5820:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getThreadAccess().getThreadAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:5829:3: ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* )
            int alt204=2;
            alt204 = dfa204.predict(input);
            switch (alt204) {
                case 1 :
                    // InternalSCTX.g:5830:4: ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
                    {
                    // InternalSCTX.g:5830:4: ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
                    // InternalSCTX.g:5831:5: ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}'
                    {
                    // InternalSCTX.g:5831:5: ( (lv_annotations_1_0= ruleAnnotation ) )*
                    loop200:
                    do {
                        int alt200=2;
                        int LA200_0 = input.LA(1);

<<<<<<< HEAD
                        if ( (LA201_0==RULE_COMMENT_ANNOTATION||LA201_0==106) ) {
                            alt201=1;
=======
                        if ( (LA200_0==RULE_COMMENT_ANNOTATION||LA200_0==102) ) {
                            alt200=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        }


                        switch (alt200) {
                    	case 1 :
                    	    // InternalSCTX.g:5832:6: (lv_annotations_1_0= ruleAnnotation )
                    	    {
                    	    // InternalSCTX.g:5832:6: (lv_annotations_1_0= ruleAnnotation )
                    	    // InternalSCTX.g:5833:7: lv_annotations_1_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getThreadAccess().getAnnotationsAnnotationParserRuleCall_1_0_0_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_95);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getThreadRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"annotations",
                    	      								lv_annotations_1_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop200;
                        }
                    } while (true);

                    otherlv_2=(Token)match(input,21,FollowSets000.FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getThreadAccess().getLeftCurlyBracketKeyword_1_0_1());
                      				
                    }
                    // InternalSCTX.g:5854:5: ( (lv_declarations_3_0= ruleDeclaration ) )*
                    loop201:
                    do {
                        int alt201=2;
                        alt201 = dfa201.predict(input);
                        switch (alt201) {
                    	case 1 :
                    	    // InternalSCTX.g:5855:6: (lv_declarations_3_0= ruleDeclaration )
                    	    {
                    	    // InternalSCTX.g:5855:6: (lv_declarations_3_0= ruleDeclaration )
                    	    // InternalSCTX.g:5856:7: lv_declarations_3_0= ruleDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getThreadAccess().getDeclarationsDeclarationParserRuleCall_1_0_2_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_96);
                    	    lv_declarations_3_0=ruleDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getThreadRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_3_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop201;
                        }
                    } while (true);

                    // InternalSCTX.g:5873:5: ( (lv_statements_4_0= ruleStatement ) )*
                    loop202:
                    do {
                        int alt202=2;
                        int LA202_0 = input.LA(1);

<<<<<<< HEAD
                        if ( (LA203_0==RULE_ID||LA203_0==RULE_COMMENT_ANNOTATION||LA203_0==21||LA203_0==38||LA203_0==47||(LA203_0>=72 && LA203_0<=73)||LA203_0==75||LA203_0==106) ) {
                            alt203=1;
=======
                        if ( (LA202_0==RULE_ID||LA202_0==RULE_COMMENT_ANNOTATION||LA202_0==21||LA202_0==38||LA202_0==47||(LA202_0>=71 && LA202_0<=72)||LA202_0==74||LA202_0==102) ) {
                            alt202=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        }


                        switch (alt202) {
                    	case 1 :
                    	    // InternalSCTX.g:5874:6: (lv_statements_4_0= ruleStatement )
                    	    {
                    	    // InternalSCTX.g:5874:6: (lv_statements_4_0= ruleStatement )
                    	    // InternalSCTX.g:5875:7: lv_statements_4_0= ruleStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getThreadAccess().getStatementsStatementParserRuleCall_1_0_3_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_97);
                    	    lv_statements_4_0=ruleStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getThreadRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"statements",
                    	      								lv_statements_4_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop202;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getThreadAccess().getRightCurlyBracketKeyword_1_0_4());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:5898:4: ( (lv_statements_6_0= ruleStatement ) )*
                    {
                    // InternalSCTX.g:5898:4: ( (lv_statements_6_0= ruleStatement ) )*
                    loop203:
                    do {
                        int alt203=2;
                        int LA203_0 = input.LA(1);

<<<<<<< HEAD
                        if ( (LA204_0==RULE_ID||LA204_0==RULE_COMMENT_ANNOTATION||LA204_0==21||LA204_0==38||LA204_0==47||(LA204_0>=72 && LA204_0<=73)||LA204_0==75||LA204_0==106) ) {
                            alt204=1;
=======
                        if ( (LA203_0==RULE_ID||LA203_0==RULE_COMMENT_ANNOTATION||LA203_0==21||LA203_0==38||LA203_0==47||(LA203_0>=71 && LA203_0<=72)||LA203_0==74||LA203_0==102) ) {
                            alt203=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        }


                        switch (alt203) {
                    	case 1 :
                    	    // InternalSCTX.g:5899:5: (lv_statements_6_0= ruleStatement )
                    	    {
                    	    // InternalSCTX.g:5899:5: (lv_statements_6_0= ruleStatement )
                    	    // InternalSCTX.g:5900:6: lv_statements_6_0= ruleStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getThreadAccess().getStatementsStatementParserRuleCall_1_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_127);
                    	    lv_statements_6_0=ruleStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getThreadRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"statements",
                    	      							lv_statements_6_0,
                    	      							"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop203;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleThread"


    // $ANTLR start "entryRuleScopeStatement"
    // InternalSCTX.g:5922:1: entryRuleScopeStatement returns [EObject current=null] : iv_ruleScopeStatement= ruleScopeStatement EOF ;
    public final EObject entryRuleScopeStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScopeStatement = null;


        try {
            // InternalSCTX.g:5922:55: (iv_ruleScopeStatement= ruleScopeStatement EOF )
            // InternalSCTX.g:5923:2: iv_ruleScopeStatement= ruleScopeStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScopeStatementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScopeStatement=ruleScopeStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScopeStatement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScopeStatement"


    // $ANTLR start "ruleScopeStatement"
    // InternalSCTX.g:5929:1: ruleScopeStatement returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) ;
    public final EObject ruleScopeStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_declarations_3_0 = null;

        EObject lv_statements_4_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:5935:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) )
            // InternalSCTX.g:5936:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
            {
            // InternalSCTX.g:5936:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
            // InternalSCTX.g:5937:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}'
            {
            // InternalSCTX.g:5937:3: ()
            // InternalSCTX.g:5938:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getScopeStatementAccess().getScopeStatementAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:5947:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop205:
            do {
                int alt205=2;
                int LA205_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA206_0==RULE_COMMENT_ANNOTATION||LA206_0==106) ) {
                    alt206=1;
=======
                if ( (LA205_0==RULE_COMMENT_ANNOTATION||LA205_0==102) ) {
                    alt205=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt205) {
            	case 1 :
            	    // InternalSCTX.g:5948:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:5948:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:5949:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScopeStatementAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_95);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScopeStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop205;
                }
            } while (true);

            otherlv_2=(Token)match(input,21,FollowSets000.FOLLOW_96); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getScopeStatementAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalSCTX.g:5970:3: ( (lv_declarations_3_0= ruleDeclaration ) )*
            loop206:
            do {
                int alt206=2;
                alt206 = dfa206.predict(input);
                switch (alt206) {
            	case 1 :
            	    // InternalSCTX.g:5971:4: (lv_declarations_3_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:5971:4: (lv_declarations_3_0= ruleDeclaration )
            	    // InternalSCTX.g:5972:5: lv_declarations_3_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScopeStatementAccess().getDeclarationsDeclarationParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_96);
            	    lv_declarations_3_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScopeStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_3_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop206;
                }
            } while (true);

            // InternalSCTX.g:5989:3: ( (lv_statements_4_0= ruleStatement ) )*
            loop207:
            do {
                int alt207=2;
                int LA207_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA208_0==RULE_ID||LA208_0==RULE_COMMENT_ANNOTATION||LA208_0==21||LA208_0==38||LA208_0==47||(LA208_0>=72 && LA208_0<=73)||LA208_0==75||LA208_0==106) ) {
                    alt208=1;
=======
                if ( (LA207_0==RULE_ID||LA207_0==RULE_COMMENT_ANNOTATION||LA207_0==21||LA207_0==38||LA207_0==47||(LA207_0>=71 && LA207_0<=72)||LA207_0==74||LA207_0==102) ) {
                    alt207=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt207) {
            	case 1 :
            	    // InternalSCTX.g:5990:4: (lv_statements_4_0= ruleStatement )
            	    {
            	    // InternalSCTX.g:5990:4: (lv_statements_4_0= ruleStatement )
            	    // InternalSCTX.g:5991:5: lv_statements_4_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScopeStatementAccess().getStatementsStatementParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_97);
            	    lv_statements_4_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScopeStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_4_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop207;
                }
            } while (true);

            otherlv_5=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getScopeStatementAccess().getRightCurlyBracketKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScopeStatement"


    // $ANTLR start "entryRuleForLoop"
    // InternalSCTX.g:6016:1: entryRuleForLoop returns [EObject current=null] : iv_ruleForLoop= ruleForLoop EOF ;
    public final EObject entryRuleForLoop() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForLoop = null;


        try {
            // InternalSCTX.g:6016:48: (iv_ruleForLoop= ruleForLoop EOF )
            // InternalSCTX.g:6017:2: iv_ruleForLoop= ruleForLoop EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForLoopRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleForLoop=ruleForLoop();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleForLoop; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleForLoop"


    // $ANTLR start "ruleForLoop"
    // InternalSCTX.g:6023:1: ruleForLoop returns [EObject current=null] : (otherlv_0= 'for' otherlv_1= '(' ( ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) ) | ( (lv_initialization_3_0= ruleEffectOrAssignment ) ) )? otherlv_4= ';' ( (lv_condition_5_0= ruleBoolExpression ) ) otherlv_6= ';' ( (lv_afterthought_7_0= ruleEffectOrAssignment ) )? otherlv_8= ')' otherlv_9= '{' ( (lv_declarations_10_0= ruleDeclaration ) )* ( (lv_statements_11_0= ruleStatement ) )* otherlv_12= '}' ( (lv_semicolon_13_0= ';' ) )? ) ;
    public final EObject ruleForLoop() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_12=null;
        Token lv_semicolon_13_0=null;
        EObject lv_initializationDeclaration_2_0 = null;

        EObject lv_initialization_3_0 = null;

        EObject lv_condition_5_0 = null;

        EObject lv_afterthought_7_0 = null;

        EObject lv_declarations_10_0 = null;

        EObject lv_statements_11_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:6029:2: ( (otherlv_0= 'for' otherlv_1= '(' ( ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) ) | ( (lv_initialization_3_0= ruleEffectOrAssignment ) ) )? otherlv_4= ';' ( (lv_condition_5_0= ruleBoolExpression ) ) otherlv_6= ';' ( (lv_afterthought_7_0= ruleEffectOrAssignment ) )? otherlv_8= ')' otherlv_9= '{' ( (lv_declarations_10_0= ruleDeclaration ) )* ( (lv_statements_11_0= ruleStatement ) )* otherlv_12= '}' ( (lv_semicolon_13_0= ';' ) )? ) )
            // InternalSCTX.g:6030:2: (otherlv_0= 'for' otherlv_1= '(' ( ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) ) | ( (lv_initialization_3_0= ruleEffectOrAssignment ) ) )? otherlv_4= ';' ( (lv_condition_5_0= ruleBoolExpression ) ) otherlv_6= ';' ( (lv_afterthought_7_0= ruleEffectOrAssignment ) )? otherlv_8= ')' otherlv_9= '{' ( (lv_declarations_10_0= ruleDeclaration ) )* ( (lv_statements_11_0= ruleStatement ) )* otherlv_12= '}' ( (lv_semicolon_13_0= ';' ) )? )
            {
            // InternalSCTX.g:6030:2: (otherlv_0= 'for' otherlv_1= '(' ( ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) ) | ( (lv_initialization_3_0= ruleEffectOrAssignment ) ) )? otherlv_4= ';' ( (lv_condition_5_0= ruleBoolExpression ) ) otherlv_6= ';' ( (lv_afterthought_7_0= ruleEffectOrAssignment ) )? otherlv_8= ')' otherlv_9= '{' ( (lv_declarations_10_0= ruleDeclaration ) )* ( (lv_statements_11_0= ruleStatement ) )* otherlv_12= '}' ( (lv_semicolon_13_0= ';' ) )? )
            // InternalSCTX.g:6031:3: otherlv_0= 'for' otherlv_1= '(' ( ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) ) | ( (lv_initialization_3_0= ruleEffectOrAssignment ) ) )? otherlv_4= ';' ( (lv_condition_5_0= ruleBoolExpression ) ) otherlv_6= ';' ( (lv_afterthought_7_0= ruleEffectOrAssignment ) )? otherlv_8= ')' otherlv_9= '{' ( (lv_declarations_10_0= ruleDeclaration ) )* ( (lv_statements_11_0= ruleStatement ) )* otherlv_12= '}' ( (lv_semicolon_13_0= ';' ) )?
            {
            otherlv_0=(Token)match(input,47,FollowSets000.FOLLOW_140); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getForLoopAccess().getForKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,31,FollowSets000.FOLLOW_141); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getForLoopAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalSCTX.g:6039:3: ( ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) ) | ( (lv_initialization_3_0= ruleEffectOrAssignment ) ) )?
            int alt208=3;
            alt208 = dfa208.predict(input);
            switch (alt208) {
                case 1 :
                    // InternalSCTX.g:6040:4: ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) )
                    {
                    // InternalSCTX.g:6040:4: ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) )
                    // InternalSCTX.g:6041:5: (lv_initializationDeclaration_2_0= ruleLoopDeclaration )
                    {
                    // InternalSCTX.g:6041:5: (lv_initializationDeclaration_2_0= ruleLoopDeclaration )
                    // InternalSCTX.g:6042:6: lv_initializationDeclaration_2_0= ruleLoopDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getForLoopAccess().getInitializationDeclarationLoopDeclarationParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_142);
                    lv_initializationDeclaration_2_0=ruleLoopDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getForLoopRule());
                      						}
                      						set(
                      							current,
                      							"initializationDeclaration",
                      							lv_initializationDeclaration_2_0,
                      							"de.cau.cs.kieler.scl.SCL.LoopDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6060:4: ( (lv_initialization_3_0= ruleEffectOrAssignment ) )
                    {
                    // InternalSCTX.g:6060:4: ( (lv_initialization_3_0= ruleEffectOrAssignment ) )
                    // InternalSCTX.g:6061:5: (lv_initialization_3_0= ruleEffectOrAssignment )
                    {
                    // InternalSCTX.g:6061:5: (lv_initialization_3_0= ruleEffectOrAssignment )
                    // InternalSCTX.g:6062:6: lv_initialization_3_0= ruleEffectOrAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getForLoopAccess().getInitializationEffectOrAssignmentParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_142);
                    lv_initialization_3_0=ruleEffectOrAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getForLoopRule());
                      						}
                      						set(
                      							current,
                      							"initialization",
                      							lv_initialization_3_0,
                      							"de.cau.cs.kieler.scl.SCL.EffectOrAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,42,FollowSets000.FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getForLoopAccess().getSemicolonKeyword_3());
              		
            }
            // InternalSCTX.g:6084:3: ( (lv_condition_5_0= ruleBoolExpression ) )
            // InternalSCTX.g:6085:4: (lv_condition_5_0= ruleBoolExpression )
            {
            // InternalSCTX.g:6085:4: (lv_condition_5_0= ruleBoolExpression )
            // InternalSCTX.g:6086:5: lv_condition_5_0= ruleBoolExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForLoopAccess().getConditionBoolExpressionParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_142);
            lv_condition_5_0=ruleBoolExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForLoopRule());
              					}
              					set(
              						current,
              						"condition",
              						lv_condition_5_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.BoolExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,42,FollowSets000.FOLLOW_143); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getForLoopAccess().getSemicolonKeyword_5());
              		
            }
            // InternalSCTX.g:6107:3: ( (lv_afterthought_7_0= ruleEffectOrAssignment ) )?
            int alt209=2;
            int LA209_0 = input.LA(1);

<<<<<<< HEAD
            if ( ((LA210_0>=RULE_STRING && LA210_0<=RULE_COMMENT_ANNOTATION)||LA210_0==21||LA210_0==31||LA210_0==33||LA210_0==80||LA210_0==85||LA210_0==94||LA210_0==102||(LA210_0>=105 && LA210_0<=106)||(LA210_0>=145 && LA210_0<=147)||LA210_0==149) ) {
                alt210=1;
=======
            if ( ((LA209_0>=RULE_STRING && LA209_0<=RULE_COMMENT_ANNOTATION)||LA209_0==21||LA209_0==31||LA209_0==33||LA209_0==79||LA209_0==84||LA209_0==93||LA209_0==98||LA209_0==102||(LA209_0>=141 && LA209_0<=143)) ) {
                alt209=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            switch (alt209) {
                case 1 :
                    // InternalSCTX.g:6108:4: (lv_afterthought_7_0= ruleEffectOrAssignment )
                    {
                    // InternalSCTX.g:6108:4: (lv_afterthought_7_0= ruleEffectOrAssignment )
                    // InternalSCTX.g:6109:5: lv_afterthought_7_0= ruleEffectOrAssignment
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getForLoopAccess().getAfterthoughtEffectOrAssignmentParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_32);
                    lv_afterthought_7_0=ruleEffectOrAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getForLoopRule());
                      					}
                      					set(
                      						current,
                      						"afterthought",
                      						lv_afterthought_7_0,
                      						"de.cau.cs.kieler.scl.SCL.EffectOrAssignment");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,32,FollowSets000.FOLLOW_99); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getForLoopAccess().getRightParenthesisKeyword_7());
              		
            }
            otherlv_9=(Token)match(input,21,FollowSets000.FOLLOW_96); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getForLoopAccess().getLeftCurlyBracketKeyword_8());
              		
            }
            // InternalSCTX.g:6134:3: ( (lv_declarations_10_0= ruleDeclaration ) )*
            loop210:
            do {
                int alt210=2;
                alt210 = dfa210.predict(input);
                switch (alt210) {
            	case 1 :
            	    // InternalSCTX.g:6135:4: (lv_declarations_10_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:6135:4: (lv_declarations_10_0= ruleDeclaration )
            	    // InternalSCTX.g:6136:5: lv_declarations_10_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getForLoopAccess().getDeclarationsDeclarationParserRuleCall_9_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_96);
            	    lv_declarations_10_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getForLoopRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_10_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop210;
                }
            } while (true);

            // InternalSCTX.g:6153:3: ( (lv_statements_11_0= ruleStatement ) )*
            loop211:
            do {
                int alt211=2;
                int LA211_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA212_0==RULE_ID||LA212_0==RULE_COMMENT_ANNOTATION||LA212_0==21||LA212_0==38||LA212_0==47||(LA212_0>=72 && LA212_0<=73)||LA212_0==75||LA212_0==106) ) {
                    alt212=1;
=======
                if ( (LA211_0==RULE_ID||LA211_0==RULE_COMMENT_ANNOTATION||LA211_0==21||LA211_0==38||LA211_0==47||(LA211_0>=71 && LA211_0<=72)||LA211_0==74||LA211_0==102) ) {
                    alt211=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt211) {
            	case 1 :
            	    // InternalSCTX.g:6154:4: (lv_statements_11_0= ruleStatement )
            	    {
            	    // InternalSCTX.g:6154:4: (lv_statements_11_0= ruleStatement )
            	    // InternalSCTX.g:6155:5: lv_statements_11_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getForLoopAccess().getStatementsStatementParserRuleCall_10_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_97);
            	    lv_statements_11_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getForLoopRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_11_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop211;
                }
            } while (true);

            otherlv_12=(Token)match(input,22,FollowSets000.FOLLOW_129); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getForLoopAccess().getRightCurlyBracketKeyword_11());
              		
            }
            // InternalSCTX.g:6176:3: ( (lv_semicolon_13_0= ';' ) )?
            int alt212=2;
            int LA212_0 = input.LA(1);

            if ( (LA212_0==42) ) {
                alt212=1;
            }
            switch (alt212) {
                case 1 :
                    // InternalSCTX.g:6177:4: (lv_semicolon_13_0= ';' )
                    {
                    // InternalSCTX.g:6177:4: (lv_semicolon_13_0= ';' )
                    // InternalSCTX.g:6178:5: lv_semicolon_13_0= ';'
                    {
                    lv_semicolon_13_0=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_13_0, grammarAccess.getForLoopAccess().getSemicolonSemicolonKeyword_12_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getForLoopRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleForLoop"


    // $ANTLR start "entryRuleLoopDeclaration"
    // InternalSCTX.g:6194:1: entryRuleLoopDeclaration returns [EObject current=null] : iv_ruleLoopDeclaration= ruleLoopDeclaration EOF ;
    public final EObject entryRuleLoopDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLoopDeclaration = null;


        try {
            // InternalSCTX.g:6194:56: (iv_ruleLoopDeclaration= ruleLoopDeclaration EOF )
            // InternalSCTX.g:6195:2: iv_ruleLoopDeclaration= ruleLoopDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLoopDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLoopDeclaration=ruleLoopDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLoopDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLoopDeclaration"


    // $ANTLR start "ruleLoopDeclaration"
    // InternalSCTX.g:6201:1: ruleLoopDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_type_1_0= ruleValueType ) ) | ( ( (lv_type_2_0= ruleHostType ) ) ( (lv_hostType_3_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_4_0= ruleValuedObject ) ) ) ;
    public final EObject ruleLoopDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_hostType_3_0=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_type_1_0 = null;

        Enumerator lv_type_2_0 = null;

        EObject lv_valuedObjects_4_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:6207:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_type_1_0= ruleValueType ) ) | ( ( (lv_type_2_0= ruleHostType ) ) ( (lv_hostType_3_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_4_0= ruleValuedObject ) ) ) )
            // InternalSCTX.g:6208:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_type_1_0= ruleValueType ) ) | ( ( (lv_type_2_0= ruleHostType ) ) ( (lv_hostType_3_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_4_0= ruleValuedObject ) ) )
            {
            // InternalSCTX.g:6208:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_type_1_0= ruleValueType ) ) | ( ( (lv_type_2_0= ruleHostType ) ) ( (lv_hostType_3_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_4_0= ruleValuedObject ) ) )
            // InternalSCTX.g:6209:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_type_1_0= ruleValueType ) ) | ( ( (lv_type_2_0= ruleHostType ) ) ( (lv_hostType_3_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_4_0= ruleValuedObject ) )
            {
            // InternalSCTX.g:6209:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop213:
            do {
                int alt213=2;
                int LA213_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA214_0==RULE_COMMENT_ANNOTATION||LA214_0==106) ) {
                    alt214=1;
=======
                if ( (LA213_0==RULE_COMMENT_ANNOTATION||LA213_0==102) ) {
                    alt213=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt213) {
            	case 1 :
            	    // InternalSCTX.g:6210:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:6210:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:6211:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getLoopDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_120);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getLoopDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop213;
                }
            } while (true);

            // InternalSCTX.g:6228:3: ( ( (lv_type_1_0= ruleValueType ) ) | ( ( (lv_type_2_0= ruleHostType ) ) ( (lv_hostType_3_0= RULE_STRING ) ) ) )
            int alt214=2;
            int LA214_0 = input.LA(1);

<<<<<<< HEAD
            if ( ((LA215_0>=116 && LA215_0<=121)) ) {
                alt215=1;
=======
            if ( ((LA214_0>=112 && LA214_0<=117)) ) {
                alt214=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            else if ( (LA214_0==65) ) {
                alt214=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 214, 0, input);

                throw nvae;
            }
            switch (alt214) {
                case 1 :
                    // InternalSCTX.g:6229:4: ( (lv_type_1_0= ruleValueType ) )
                    {
                    // InternalSCTX.g:6229:4: ( (lv_type_1_0= ruleValueType ) )
                    // InternalSCTX.g:6230:5: (lv_type_1_0= ruleValueType )
                    {
                    // InternalSCTX.g:6230:5: (lv_type_1_0= ruleValueType )
                    // InternalSCTX.g:6231:6: lv_type_1_0= ruleValueType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLoopDeclarationAccess().getTypeValueTypeEnumRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_105);
                    lv_type_1_0=ruleValueType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLoopDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_1_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.ValueType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6249:4: ( ( (lv_type_2_0= ruleHostType ) ) ( (lv_hostType_3_0= RULE_STRING ) ) )
                    {
                    // InternalSCTX.g:6249:4: ( ( (lv_type_2_0= ruleHostType ) ) ( (lv_hostType_3_0= RULE_STRING ) ) )
                    // InternalSCTX.g:6250:5: ( (lv_type_2_0= ruleHostType ) ) ( (lv_hostType_3_0= RULE_STRING ) )
                    {
                    // InternalSCTX.g:6250:5: ( (lv_type_2_0= ruleHostType ) )
                    // InternalSCTX.g:6251:6: (lv_type_2_0= ruleHostType )
                    {
                    // InternalSCTX.g:6251:6: (lv_type_2_0= ruleHostType )
                    // InternalSCTX.g:6252:7: lv_type_2_0= ruleHostType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLoopDeclarationAccess().getTypeHostTypeEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_48);
                    lv_type_2_0=ruleHostType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLoopDeclarationRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.HostType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:6269:5: ( (lv_hostType_3_0= RULE_STRING ) )
                    // InternalSCTX.g:6270:6: (lv_hostType_3_0= RULE_STRING )
                    {
                    // InternalSCTX.g:6270:6: (lv_hostType_3_0= RULE_STRING )
                    // InternalSCTX.g:6271:7: lv_hostType_3_0= RULE_STRING
                    {
                    lv_hostType_3_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_105); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_hostType_3_0, grammarAccess.getLoopDeclarationAccess().getHostTypeSTRINGTerminalRuleCall_1_1_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getLoopDeclarationRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"hostType",
                      								lv_hostType_3_0,
                      								"de.cau.cs.kieler.annotations.Annotations.STRING");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:6289:3: ( (lv_valuedObjects_4_0= ruleValuedObject ) )
            // InternalSCTX.g:6290:4: (lv_valuedObjects_4_0= ruleValuedObject )
            {
            // InternalSCTX.g:6290:4: (lv_valuedObjects_4_0= ruleValuedObject )
            // InternalSCTX.g:6291:5: lv_valuedObjects_4_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLoopDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_valuedObjects_4_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLoopDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_4_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLoopDeclaration"


    // $ANTLR start "entryRuleEffectOrAssignment"
    // InternalSCTX.g:6312:1: entryRuleEffectOrAssignment returns [EObject current=null] : iv_ruleEffectOrAssignment= ruleEffectOrAssignment EOF ;
    public final EObject entryRuleEffectOrAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEffectOrAssignment = null;


        try {
            // InternalSCTX.g:6312:59: (iv_ruleEffectOrAssignment= ruleEffectOrAssignment EOF )
            // InternalSCTX.g:6313:2: iv_ruleEffectOrAssignment= ruleEffectOrAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEffectOrAssignmentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEffectOrAssignment=ruleEffectOrAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEffectOrAssignment; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEffectOrAssignment"


    // $ANTLR start "ruleEffectOrAssignment"
    // InternalSCTX.g:6319:1: ruleEffectOrAssignment returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) ) | ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) ) | ( (lv_expression_6_0= ruleExpression ) ) ) ) ;
    public final EObject ruleEffectOrAssignment() throws RecognitionException {
        EObject current = null;

        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_reference_3_0 = null;

        Enumerator lv_operator_4_0 = null;

        EObject lv_expression_5_0 = null;

        EObject lv_expression_6_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:6325:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) ) | ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) ) | ( (lv_expression_6_0= ruleExpression ) ) ) ) )
            // InternalSCTX.g:6326:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) ) | ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) ) | ( (lv_expression_6_0= ruleExpression ) ) ) )
            {
            // InternalSCTX.g:6326:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) ) | ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) ) | ( (lv_expression_6_0= ruleExpression ) ) ) )
            // InternalSCTX.g:6327:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) ) | ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) ) | ( (lv_expression_6_0= ruleExpression ) ) )
            {
            // InternalSCTX.g:6327:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop215:
            do {
                int alt215=2;
                int LA215_0 = input.LA(1);

                if ( (LA215_0==RULE_COMMENT_ANNOTATION) ) {
                    int LA215_2 = input.LA(2);

                    if ( (synpred233_InternalSCTX()) ) {
                        alt215=1;
                    }


                }
<<<<<<< HEAD
                else if ( (LA216_0==106) ) {
                    int LA216_3 = input.LA(2);
=======
                else if ( (LA215_0==102) ) {
                    int LA215_3 = input.LA(2);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                    if ( (LA215_3==RULE_ID) ) {
                        int LA215_5 = input.LA(3);

                        if ( (synpred233_InternalSCTX()) ) {
                            alt215=1;
                        }


                    }


                }


                switch (alt215) {
            	case 1 :
            	    // InternalSCTX.g:6328:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:6328:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:6329:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_30);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEffectOrAssignmentRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop215;
                }
            } while (true);

            // InternalSCTX.g:6346:3: ( ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) ) | ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) ) | ( (lv_expression_6_0= ruleExpression ) ) )
            int alt216=3;
            alt216 = dfa216.predict(input);
            switch (alt216) {
                case 1 :
                    // InternalSCTX.g:6347:4: ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) )
                    {
                    // InternalSCTX.g:6347:4: ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) )
                    // InternalSCTX.g:6348:5: ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) )
                    {
                    // InternalSCTX.g:6348:5: ( (lv_reference_1_0= ruleValuedObjectReference ) )
                    // InternalSCTX.g:6349:6: (lv_reference_1_0= ruleValuedObjectReference )
                    {
                    // InternalSCTX.g:6349:6: (lv_reference_1_0= ruleValuedObjectReference )
                    // InternalSCTX.g:6350:7: lv_reference_1_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_134);
                    lv_reference_1_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getEffectOrAssignmentRule());
                      							}
                      							set(
                      								current,
                      								"reference",
                      								lv_reference_1_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:6367:5: ( (lv_operator_2_0= rulePostfixOperator ) )
                    // InternalSCTX.g:6368:6: (lv_operator_2_0= rulePostfixOperator )
                    {
                    // InternalSCTX.g:6368:6: (lv_operator_2_0= rulePostfixOperator )
                    // InternalSCTX.g:6369:7: lv_operator_2_0= rulePostfixOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getOperatorPostfixOperatorEnumRuleCall_1_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_operator_2_0=rulePostfixOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getEffectOrAssignmentRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.keffects.KEffects.PostfixOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6388:4: ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) )
                    {
                    // InternalSCTX.g:6388:4: ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) )
                    // InternalSCTX.g:6389:5: ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) )
                    {
                    // InternalSCTX.g:6389:5: ( (lv_reference_3_0= ruleValuedObjectReference ) )
                    // InternalSCTX.g:6390:6: (lv_reference_3_0= ruleValuedObjectReference )
                    {
                    // InternalSCTX.g:6390:6: (lv_reference_3_0= ruleValuedObjectReference )
                    // InternalSCTX.g:6391:7: lv_reference_3_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_131);
                    lv_reference_3_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getEffectOrAssignmentRule());
                      							}
                      							set(
                      								current,
                      								"reference",
                      								lv_reference_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:6408:5: ( (lv_operator_4_0= ruleAssignOperator ) )
                    // InternalSCTX.g:6409:6: (lv_operator_4_0= ruleAssignOperator )
                    {
                    // InternalSCTX.g:6409:6: (lv_operator_4_0= ruleAssignOperator )
                    // InternalSCTX.g:6410:7: lv_operator_4_0= ruleAssignOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_30);
                    lv_operator_4_0=ruleAssignOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getEffectOrAssignmentRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_4_0,
                      								"de.cau.cs.kieler.kexpressions.keffects.KEffects.AssignOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:6427:5: ( (lv_expression_5_0= ruleExpression ) )
                    // InternalSCTX.g:6428:6: (lv_expression_5_0= ruleExpression )
                    {
                    // InternalSCTX.g:6428:6: (lv_expression_5_0= ruleExpression )
                    // InternalSCTX.g:6429:7: lv_expression_5_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getExpressionExpressionParserRuleCall_1_1_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expression_5_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getEffectOrAssignmentRule());
                      							}
                      							set(
                      								current,
                      								"expression",
                      								lv_expression_5_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:6448:4: ( (lv_expression_6_0= ruleExpression ) )
                    {
                    // InternalSCTX.g:6448:4: ( (lv_expression_6_0= ruleExpression ) )
                    // InternalSCTX.g:6449:5: (lv_expression_6_0= ruleExpression )
                    {
                    // InternalSCTX.g:6449:5: (lv_expression_6_0= ruleExpression )
                    // InternalSCTX.g:6450:6: lv_expression_6_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getExpressionExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expression_6_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEffectOrAssignmentRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_6_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEffectOrAssignment"


    // $ANTLR start "entryRuleWhileLoop"
    // InternalSCTX.g:6472:1: entryRuleWhileLoop returns [EObject current=null] : iv_ruleWhileLoop= ruleWhileLoop EOF ;
    public final EObject entryRuleWhileLoop() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWhileLoop = null;


        try {
            // InternalSCTX.g:6472:50: (iv_ruleWhileLoop= ruleWhileLoop EOF )
            // InternalSCTX.g:6473:2: iv_ruleWhileLoop= ruleWhileLoop EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWhileLoopRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleWhileLoop=ruleWhileLoop();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWhileLoop; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWhileLoop"


    // $ANTLR start "ruleWhileLoop"
    // InternalSCTX.g:6479:1: ruleWhileLoop returns [EObject current=null] : (otherlv_0= 'while' otherlv_1= '(' ( (lv_condition_2_0= ruleBoolExpression ) ) otherlv_3= ')' otherlv_4= '{' ( (lv_declarations_5_0= ruleDeclaration ) )* ( (lv_statements_6_0= ruleStatement ) )* otherlv_7= '}' ( (lv_semicolon_8_0= ';' ) )? ) ;
    public final EObject ruleWhileLoop() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_7=null;
        Token lv_semicolon_8_0=null;
        EObject lv_condition_2_0 = null;

        EObject lv_declarations_5_0 = null;

        EObject lv_statements_6_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:6485:2: ( (otherlv_0= 'while' otherlv_1= '(' ( (lv_condition_2_0= ruleBoolExpression ) ) otherlv_3= ')' otherlv_4= '{' ( (lv_declarations_5_0= ruleDeclaration ) )* ( (lv_statements_6_0= ruleStatement ) )* otherlv_7= '}' ( (lv_semicolon_8_0= ';' ) )? ) )
            // InternalSCTX.g:6486:2: (otherlv_0= 'while' otherlv_1= '(' ( (lv_condition_2_0= ruleBoolExpression ) ) otherlv_3= ')' otherlv_4= '{' ( (lv_declarations_5_0= ruleDeclaration ) )* ( (lv_statements_6_0= ruleStatement ) )* otherlv_7= '}' ( (lv_semicolon_8_0= ';' ) )? )
            {
            // InternalSCTX.g:6486:2: (otherlv_0= 'while' otherlv_1= '(' ( (lv_condition_2_0= ruleBoolExpression ) ) otherlv_3= ')' otherlv_4= '{' ( (lv_declarations_5_0= ruleDeclaration ) )* ( (lv_statements_6_0= ruleStatement ) )* otherlv_7= '}' ( (lv_semicolon_8_0= ';' ) )? )
            // InternalSCTX.g:6487:3: otherlv_0= 'while' otherlv_1= '(' ( (lv_condition_2_0= ruleBoolExpression ) ) otherlv_3= ')' otherlv_4= '{' ( (lv_declarations_5_0= ruleDeclaration ) )* ( (lv_statements_6_0= ruleStatement ) )* otherlv_7= '}' ( (lv_semicolon_8_0= ';' ) )?
            {
            otherlv_0=(Token)match(input,74,FollowSets000.FOLLOW_140); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getWhileLoopAccess().getWhileKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,31,FollowSets000.FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getWhileLoopAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalSCTX.g:6495:3: ( (lv_condition_2_0= ruleBoolExpression ) )
            // InternalSCTX.g:6496:4: (lv_condition_2_0= ruleBoolExpression )
            {
            // InternalSCTX.g:6496:4: (lv_condition_2_0= ruleBoolExpression )
            // InternalSCTX.g:6497:5: lv_condition_2_0= ruleBoolExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getWhileLoopAccess().getConditionBoolExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_32);
            lv_condition_2_0=ruleBoolExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getWhileLoopRule());
              					}
              					set(
              						current,
              						"condition",
              						lv_condition_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.BoolExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,32,FollowSets000.FOLLOW_99); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getWhileLoopAccess().getRightParenthesisKeyword_3());
              		
            }
            otherlv_4=(Token)match(input,21,FollowSets000.FOLLOW_96); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getWhileLoopAccess().getLeftCurlyBracketKeyword_4());
              		
            }
            // InternalSCTX.g:6522:3: ( (lv_declarations_5_0= ruleDeclaration ) )*
            loop217:
            do {
                int alt217=2;
                alt217 = dfa217.predict(input);
                switch (alt217) {
            	case 1 :
            	    // InternalSCTX.g:6523:4: (lv_declarations_5_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:6523:4: (lv_declarations_5_0= ruleDeclaration )
            	    // InternalSCTX.g:6524:5: lv_declarations_5_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getWhileLoopAccess().getDeclarationsDeclarationParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_96);
            	    lv_declarations_5_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getWhileLoopRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_5_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop217;
                }
            } while (true);

            // InternalSCTX.g:6541:3: ( (lv_statements_6_0= ruleStatement ) )*
            loop218:
            do {
                int alt218=2;
                int LA218_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA219_0==RULE_ID||LA219_0==RULE_COMMENT_ANNOTATION||LA219_0==21||LA219_0==38||LA219_0==47||(LA219_0>=72 && LA219_0<=73)||LA219_0==75||LA219_0==106) ) {
                    alt219=1;
=======
                if ( (LA218_0==RULE_ID||LA218_0==RULE_COMMENT_ANNOTATION||LA218_0==21||LA218_0==38||LA218_0==47||(LA218_0>=71 && LA218_0<=72)||LA218_0==74||LA218_0==102) ) {
                    alt218=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt218) {
            	case 1 :
            	    // InternalSCTX.g:6542:4: (lv_statements_6_0= ruleStatement )
            	    {
            	    // InternalSCTX.g:6542:4: (lv_statements_6_0= ruleStatement )
            	    // InternalSCTX.g:6543:5: lv_statements_6_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getWhileLoopAccess().getStatementsStatementParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_97);
            	    lv_statements_6_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getWhileLoopRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_6_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop218;
                }
            } while (true);

            otherlv_7=(Token)match(input,22,FollowSets000.FOLLOW_129); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getWhileLoopAccess().getRightCurlyBracketKeyword_7());
              		
            }
            // InternalSCTX.g:6564:3: ( (lv_semicolon_8_0= ';' ) )?
            int alt219=2;
            int LA219_0 = input.LA(1);

            if ( (LA219_0==42) ) {
                alt219=1;
            }
            switch (alt219) {
                case 1 :
                    // InternalSCTX.g:6565:4: (lv_semicolon_8_0= ';' )
                    {
                    // InternalSCTX.g:6565:4: (lv_semicolon_8_0= ';' )
                    // InternalSCTX.g:6566:5: lv_semicolon_8_0= ';'
                    {
                    lv_semicolon_8_0=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_8_0, grammarAccess.getWhileLoopAccess().getSemicolonSemicolonKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getWhileLoopRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWhileLoop"


    // $ANTLR start "entryRuleModuleCallParameter"
    // InternalSCTX.g:6582:1: entryRuleModuleCallParameter returns [EObject current=null] : iv_ruleModuleCallParameter= ruleModuleCallParameter EOF ;
    public final EObject entryRuleModuleCallParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModuleCallParameter = null;


        try {
            // InternalSCTX.g:6582:60: (iv_ruleModuleCallParameter= ruleModuleCallParameter EOF )
            // InternalSCTX.g:6583:2: iv_ruleModuleCallParameter= ruleModuleCallParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModuleCallParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleModuleCallParameter=ruleModuleCallParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModuleCallParameter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModuleCallParameter"


    // $ANTLR start "ruleModuleCallParameter"
    // InternalSCTX.g:6589:1: ruleModuleCallParameter returns [EObject current=null] : ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? ) ;
    public final EObject ruleModuleCallParameter() throws RecognitionException {
        EObject current = null;

        Token lv_pureOutput_0_0=null;
        Token lv_callByReference_1_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_expression_2_0 = null;

        EObject lv_explicitBindingIndices_6_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:6595:2: ( ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? ) )
            // InternalSCTX.g:6596:2: ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? )
            {
            // InternalSCTX.g:6596:2: ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? )
            // InternalSCTX.g:6597:3: ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )?
            {
            // InternalSCTX.g:6597:3: ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )?
            int alt221=2;
            int LA221_0 = input.LA(1);

            if ( (LA221_0==33) ) {
                int LA221_1 = input.LA(2);

                if ( (LA221_1==34) ) {
                    alt221=1;
                }
            }
            else if ( (LA221_0==34) ) {
                alt221=1;
            }
            switch (alt221) {
                case 1 :
                    // InternalSCTX.g:6598:4: ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) )
                    {
                    // InternalSCTX.g:6598:4: ( (lv_pureOutput_0_0= '!' ) )?
                    int alt220=2;
                    int LA220_0 = input.LA(1);

                    if ( (LA220_0==33) ) {
                        alt220=1;
                    }
                    switch (alt220) {
                        case 1 :
                            // InternalSCTX.g:6599:5: (lv_pureOutput_0_0= '!' )
                            {
                            // InternalSCTX.g:6599:5: (lv_pureOutput_0_0= '!' )
                            // InternalSCTX.g:6600:6: lv_pureOutput_0_0= '!'
                            {
                            lv_pureOutput_0_0=(Token)match(input,33,FollowSets000.FOLLOW_33); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_pureOutput_0_0, grammarAccess.getModuleCallParameterAccess().getPureOutputExclamationMarkKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getModuleCallParameterRule());
                              						}
                              						setWithLastConsumed(current, "pureOutput", true, "!");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:6612:4: ( (lv_callByReference_1_0= '&' ) )
                    // InternalSCTX.g:6613:5: (lv_callByReference_1_0= '&' )
                    {
                    // InternalSCTX.g:6613:5: (lv_callByReference_1_0= '&' )
                    // InternalSCTX.g:6614:6: lv_callByReference_1_0= '&'
                    {
                    lv_callByReference_1_0=(Token)match(input,34,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_callByReference_1_0, grammarAccess.getModuleCallParameterAccess().getCallByReferenceAmpersandKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getModuleCallParameterRule());
                      						}
                      						setWithLastConsumed(current, "callByReference", true, "&");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:6627:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalSCTX.g:6628:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalSCTX.g:6628:4: (lv_expression_2_0= ruleExpression )
            // InternalSCTX.g:6629:5: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getModuleCallParameterAccess().getExpressionExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_34);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getModuleCallParameterRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:6646:3: (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )?
            int alt223=2;
            int LA223_0 = input.LA(1);

            if ( (LA223_0==35) ) {
                alt223=1;
            }
            switch (alt223) {
                case 1 :
                    // InternalSCTX.g:6647:4: otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )*
                    {
                    otherlv_3=(Token)match(input,35,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getModuleCallParameterAccess().getToKeyword_2_0());
                      			
                    }
                    // InternalSCTX.g:6651:4: ( (otherlv_4= RULE_ID ) )
                    // InternalSCTX.g:6652:5: (otherlv_4= RULE_ID )
                    {
                    // InternalSCTX.g:6652:5: (otherlv_4= RULE_ID )
                    // InternalSCTX.g:6653:6: otherlv_4= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getModuleCallParameterRule());
                      						}
                      					
                    }
                    otherlv_4=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_4, grammarAccess.getModuleCallParameterAccess().getExplicitBindingValuedObjectCrossReference_2_1_0());
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:6667:4: (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )*
                    loop222:
                    do {
                        int alt222=2;
                        int LA222_0 = input.LA(1);

                        if ( (LA222_0==36) ) {
                            alt222=1;
                        }


                        switch (alt222) {
                    	case 1 :
                    	    // InternalSCTX.g:6668:5: otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']'
                    	    {
                    	    otherlv_5=(Token)match(input,36,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getModuleCallParameterAccess().getLeftSquareBracketKeyword_2_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:6672:5: ( (lv_explicitBindingIndices_6_0= ruleExpression ) )
                    	    // InternalSCTX.g:6673:6: (lv_explicitBindingIndices_6_0= ruleExpression )
                    	    {
                    	    // InternalSCTX.g:6673:6: (lv_explicitBindingIndices_6_0= ruleExpression )
                    	    // InternalSCTX.g:6674:7: lv_explicitBindingIndices_6_0= ruleExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getModuleCallParameterAccess().getExplicitBindingIndicesExpressionParserRuleCall_2_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_36);
                    	    lv_explicitBindingIndices_6_0=ruleExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getModuleCallParameterRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"explicitBindingIndices",
                    	      								lv_explicitBindingIndices_6_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    otherlv_7=(Token)match(input,37,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_7, grammarAccess.getModuleCallParameterAccess().getRightSquareBracketKeyword_2_2_2());
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop222;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModuleCallParameter"


    // $ANTLR start "entryRuleMethodDeclaration"
    // InternalSCTX.g:6701:1: entryRuleMethodDeclaration returns [EObject current=null] : iv_ruleMethodDeclaration= ruleMethodDeclaration EOF ;
    public final EObject entryRuleMethodDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethodDeclaration = null;


        try {
            // InternalSCTX.g:6701:58: (iv_ruleMethodDeclaration= ruleMethodDeclaration EOF )
            // InternalSCTX.g:6702:2: iv_ruleMethodDeclaration= ruleMethodDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMethodDeclaration=ruleMethodDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodDeclaration"


    // $ANTLR start "ruleMethodDeclaration"
    // InternalSCTX.g:6708:1: ruleMethodDeclaration returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= ';' | (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' ) ) ( (lv_annotations_19_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleMethodDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_18=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_access_2_0 = null;

        Enumerator lv_returnType_3_0 = null;

        EObject lv_valuedObjects_4_0 = null;

        EObject lv_parameterDeclarations_6_0 = null;

        EObject lv_parameterDeclarations_8_0 = null;

        EObject lv_schedule_12_0 = null;

        EObject lv_annotations_15_0 = null;

        EObject lv_declarations_16_0 = null;

        EObject lv_statements_17_0 = null;

        EObject lv_annotations_19_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:6714:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= ';' | (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' ) ) ( (lv_annotations_19_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:6715:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= ';' | (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' ) ) ( (lv_annotations_19_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:6715:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= ';' | (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' ) ) ( (lv_annotations_19_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:6716:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= ';' | (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' ) ) ( (lv_annotations_19_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:6716:3: ()
            // InternalSCTX.g:6717:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMethodDeclarationAccess().getMethodImplementationDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:6726:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop224:
            do {
                int alt224=2;
                int LA224_0 = input.LA(1);

                if ( (LA224_0==RULE_COMMENT_ANNOTATION) ) {
                    int LA224_2 = input.LA(2);

                    if ( (synpred243_InternalSCTX()) ) {
                        alt224=1;
                    }


                }
<<<<<<< HEAD
                else if ( (LA225_0==106) ) {
                    int LA225_3 = input.LA(2);
=======
                else if ( (LA224_0==102) ) {
                    int LA224_3 = input.LA(2);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                    if ( (LA224_3==RULE_ID) ) {
                        int LA224_5 = input.LA(3);

                        if ( (synpred243_InternalSCTX()) ) {
                            alt224=1;
                        }


                    }


                }


                switch (alt224) {
            	case 1 :
            	    // InternalSCTX.g:6727:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:6727:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:6728:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_118);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop224;
                }
            } while (true);

            // InternalSCTX.g:6745:3: ( (lv_access_2_0= ruleAccessModifier ) )?
            int alt225=2;
            int LA225_0 = input.LA(1);

<<<<<<< HEAD
            if ( ((LA226_0>=155 && LA226_0<=157)) ) {
                alt226=1;
=======
            if ( ((LA225_0>=151 && LA225_0<=153)) ) {
                alt225=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            switch (alt225) {
                case 1 :
                    // InternalSCTX.g:6746:4: (lv_access_2_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:6746:4: (lv_access_2_0= ruleAccessModifier )
                    // InternalSCTX.g:6747:5: lv_access_2_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getAccessAccessModifierEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_118);
                    lv_access_2_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:6764:3: ( (lv_returnType_3_0= ruleMethodReturnType ) )?
            int alt226=2;
            int LA226_0 = input.LA(1);

<<<<<<< HEAD
            if ( ((LA227_0>=117 && LA227_0<=120)||LA227_0==158) ) {
                alt227=1;
=======
            if ( ((LA226_0>=113 && LA226_0<=116)||LA226_0==154) ) {
                alt226=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            switch (alt226) {
                case 1 :
                    // InternalSCTX.g:6765:4: (lv_returnType_3_0= ruleMethodReturnType )
                    {
                    // InternalSCTX.g:6765:4: (lv_returnType_3_0= ruleMethodReturnType )
                    // InternalSCTX.g:6766:5: lv_returnType_3_0= ruleMethodReturnType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getReturnTypeMethodReturnTypeEnumRuleCall_3_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_118);
                    lv_returnType_3_0=ruleMethodReturnType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"returnType",
                      						lv_returnType_3_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.MethodReturnType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:6783:3: ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) )
            // InternalSCTX.g:6784:4: (lv_valuedObjects_4_0= ruleSimpleValuedObject )
            {
            // InternalSCTX.g:6784:4: (lv_valuedObjects_4_0= ruleSimpleValuedObject )
            // InternalSCTX.g:6785:5: lv_valuedObjects_4_0= ruleSimpleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getValuedObjectsSimpleValuedObjectParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_119);
            lv_valuedObjects_4_0=ruleSimpleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_4_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.SimpleValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:6802:3: ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' )
            int alt228=2;
            int LA228_0 = input.LA(1);

            if ( (LA228_0==31) ) {
                alt228=1;
            }
            else if ( (LA228_0==69) ) {
                alt228=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 228, 0, input);

                throw nvae;
            }
            switch (alt228) {
                case 1 :
                    // InternalSCTX.g:6803:4: (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' )
                    {
                    // InternalSCTX.g:6803:4: (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' )
                    // InternalSCTX.g:6804:5: otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')'
                    {
                    otherlv_5=(Token)match(input,31,FollowSets000.FOLLOW_120); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getMethodDeclarationAccess().getLeftParenthesisKeyword_5_0_0());
                      				
                    }
                    // InternalSCTX.g:6808:5: ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) )
                    // InternalSCTX.g:6809:6: (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon )
                    {
                    // InternalSCTX.g:6809:6: (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon )
                    // InternalSCTX.g:6810:7: lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getMethodDeclarationAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_5_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_parameterDeclarations_6_0=ruleVariableDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                      							}
                      							add(
                      								current,
                      								"parameterDeclarations",
                      								lv_parameterDeclarations_6_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:6827:5: (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )*
                    loop227:
                    do {
                        int alt227=2;
                        int LA227_0 = input.LA(1);

                        if ( (LA227_0==20) ) {
                            alt227=1;
                        }


                        switch (alt227) {
                    	case 1 :
                    	    // InternalSCTX.g:6828:6: otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) )
                    	    {
                    	    otherlv_7=(Token)match(input,20,FollowSets000.FOLLOW_120); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_7, grammarAccess.getMethodDeclarationAccess().getCommaKeyword_5_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCTX.g:6832:6: ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) )
                    	    // InternalSCTX.g:6833:7: (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon )
                    	    {
                    	    // InternalSCTX.g:6833:7: (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon )
                    	    // InternalSCTX.g:6834:8: lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getMethodDeclarationAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_5_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_31);
                    	    lv_parameterDeclarations_8_0=ruleVariableDeclarationWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameterDeclarations",
                    	      									lv_parameterDeclarations_8_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop227;
                        }
                    } while (true);

                    otherlv_9=(Token)match(input,32,FollowSets000.FOLLOW_144); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getMethodDeclarationAccess().getRightParenthesisKeyword_5_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6858:4: otherlv_10= '()'
                    {
                    otherlv_10=(Token)match(input,69,FollowSets000.FOLLOW_144); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getMethodDeclarationAccess().getLeftParenthesisRightParenthesisKeyword_5_1());
                      			
                    }

                    }
                    break;

            }

            // InternalSCTX.g:6863:3: (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )?
            int alt230=2;
            int LA230_0 = input.LA(1);

            if ( (LA230_0==29) ) {
                alt230=1;
            }
            switch (alt230) {
                case 1 :
                    // InternalSCTX.g:6864:4: otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_11=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getMethodDeclarationAccess().getScheduleKeyword_6_0());
                      			
                    }
                    // InternalSCTX.g:6868:4: ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+
                    int cnt229=0;
                    loop229:
                    do {
                        int alt229=2;
                        int LA229_0 = input.LA(1);

                        if ( (LA229_0==RULE_ID) ) {
                            alt229=1;
                        }


                        switch (alt229) {
                    	case 1 :
                    	    // InternalSCTX.g:6869:5: (lv_schedule_12_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:6869:5: (lv_schedule_12_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:6870:6: lv_schedule_12_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getMethodDeclarationAccess().getScheduleScheduleObjectReferenceParserRuleCall_6_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_145);
                    	    lv_schedule_12_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_12_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt229 >= 1 ) break loop229;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(229, input);
                                throw eee;
                        }
                        cnt229++;
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:6888:3: (otherlv_13= ';' | (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' ) )
            int alt234=2;
            int LA234_0 = input.LA(1);

            if ( (LA234_0==42) ) {
                alt234=1;
            }
            else if ( (LA234_0==21) ) {
                alt234=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 234, 0, input);

                throw nvae;
            }
            switch (alt234) {
                case 1 :
                    // InternalSCTX.g:6889:4: otherlv_13= ';'
                    {
                    otherlv_13=(Token)match(input,42,FollowSets000.FOLLOW_146); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getMethodDeclarationAccess().getSemicolonKeyword_7_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6894:4: (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' )
                    {
                    // InternalSCTX.g:6894:4: (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' )
                    // InternalSCTX.g:6895:5: otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}'
                    {
                    otherlv_14=(Token)match(input,21,FollowSets000.FOLLOW_123); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_14, grammarAccess.getMethodDeclarationAccess().getLeftCurlyBracketKeyword_7_1_0());
                      				
                    }
                    // InternalSCTX.g:6899:5: ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
                    int alt231=2;
                    int LA231_0 = input.LA(1);

                    if ( (LA231_0==RULE_SL_COMMENT_ANNOTATION) ) {
                        alt231=1;
                    }
                    switch (alt231) {
                        case 1 :
                            // InternalSCTX.g:6900:6: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                            {
                            // InternalSCTX.g:6900:6: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                            // InternalSCTX.g:6901:7: lv_annotations_15_0= ruleCommentAnnotatonSL
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getMethodDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_7_1_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_96);
                            lv_annotations_15_0=ruleCommentAnnotatonSL();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                              							}
                              							add(
                              								current,
                              								"annotations",
                              								lv_annotations_15_0,
                              								"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:6918:5: ( (lv_declarations_16_0= ruleDeclaration ) )*
                    loop232:
                    do {
                        int alt232=2;
                        alt232 = dfa232.predict(input);
                        switch (alt232) {
                    	case 1 :
                    	    // InternalSCTX.g:6919:6: (lv_declarations_16_0= ruleDeclaration )
                    	    {
                    	    // InternalSCTX.g:6919:6: (lv_declarations_16_0= ruleDeclaration )
                    	    // InternalSCTX.g:6920:7: lv_declarations_16_0= ruleDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMethodDeclarationAccess().getDeclarationsDeclarationParserRuleCall_7_1_2_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_96);
                    	    lv_declarations_16_0=ruleDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_16_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop232;
                        }
                    } while (true);

                    // InternalSCTX.g:6937:5: ( (lv_statements_17_0= ruleStatement ) )*
                    loop233:
                    do {
                        int alt233=2;
                        int LA233_0 = input.LA(1);

<<<<<<< HEAD
                        if ( (LA234_0==RULE_ID||LA234_0==RULE_COMMENT_ANNOTATION||LA234_0==21||LA234_0==38||LA234_0==47||(LA234_0>=72 && LA234_0<=73)||LA234_0==75||LA234_0==106) ) {
                            alt234=1;
=======
                        if ( (LA233_0==RULE_ID||LA233_0==RULE_COMMENT_ANNOTATION||LA233_0==21||LA233_0==38||LA233_0==47||(LA233_0>=71 && LA233_0<=72)||LA233_0==74||LA233_0==102) ) {
                            alt233=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        }


                        switch (alt233) {
                    	case 1 :
                    	    // InternalSCTX.g:6938:6: (lv_statements_17_0= ruleStatement )
                    	    {
                    	    // InternalSCTX.g:6938:6: (lv_statements_17_0= ruleStatement )
                    	    // InternalSCTX.g:6939:7: lv_statements_17_0= ruleStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMethodDeclarationAccess().getStatementsStatementParserRuleCall_7_1_3_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_97);
                    	    lv_statements_17_0=ruleStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"statements",
                    	      								lv_statements_17_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop233;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,22,FollowSets000.FOLLOW_146); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_18, grammarAccess.getMethodDeclarationAccess().getRightCurlyBracketKeyword_7_1_4());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:6962:3: ( (lv_annotations_19_0= ruleCommentAnnotatonSL ) )?
            int alt235=2;
            int LA235_0 = input.LA(1);

            if ( (LA235_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt235=1;
            }
            switch (alt235) {
                case 1 :
                    // InternalSCTX.g:6963:4: (lv_annotations_19_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:6963:4: (lv_annotations_19_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:6964:5: lv_annotations_19_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_19_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_19_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodDeclaration"


    // $ANTLR start "entryRuleMethodDeclarationWOSemicolon"
    // InternalSCTX.g:6985:1: entryRuleMethodDeclarationWOSemicolon returns [EObject current=null] : iv_ruleMethodDeclarationWOSemicolon= ruleMethodDeclarationWOSemicolon EOF ;
    public final EObject entryRuleMethodDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethodDeclarationWOSemicolon = null;


        try {
            // InternalSCTX.g:6985:69: (iv_ruleMethodDeclarationWOSemicolon= ruleMethodDeclarationWOSemicolon EOF )
            // InternalSCTX.g:6986:2: iv_ruleMethodDeclarationWOSemicolon= ruleMethodDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMethodDeclarationWOSemicolon=ruleMethodDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodDeclarationWOSemicolon"


    // $ANTLR start "ruleMethodDeclarationWOSemicolon"
    // InternalSCTX.g:6992:1: ruleMethodDeclarationWOSemicolon returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= '{' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_15_0= ruleDeclaration ) )* ( (lv_statements_16_0= ruleStatement ) )* otherlv_17= '}' )? ) ;
    public final EObject ruleMethodDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_17=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_access_2_0 = null;

        Enumerator lv_returnType_3_0 = null;

        EObject lv_valuedObjects_4_0 = null;

        EObject lv_parameterDeclarations_6_0 = null;

        EObject lv_parameterDeclarations_8_0 = null;

        EObject lv_schedule_12_0 = null;

        EObject lv_annotations_14_0 = null;

        EObject lv_declarations_15_0 = null;

        EObject lv_statements_16_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:6998:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= '{' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_15_0= ruleDeclaration ) )* ( (lv_statements_16_0= ruleStatement ) )* otherlv_17= '}' )? ) )
            // InternalSCTX.g:6999:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= '{' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_15_0= ruleDeclaration ) )* ( (lv_statements_16_0= ruleStatement ) )* otherlv_17= '}' )? )
            {
            // InternalSCTX.g:6999:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= '{' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_15_0= ruleDeclaration ) )* ( (lv_statements_16_0= ruleStatement ) )* otherlv_17= '}' )? )
            // InternalSCTX.g:7000:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= '{' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_15_0= ruleDeclaration ) )* ( (lv_statements_16_0= ruleStatement ) )* otherlv_17= '}' )?
            {
            // InternalSCTX.g:7000:3: ()
            // InternalSCTX.g:7001:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMethodDeclarationWOSemicolonAccess().getMethodImplementationDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:7010:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop236:
            do {
                int alt236=2;
                int LA236_0 = input.LA(1);

                if ( (LA236_0==RULE_COMMENT_ANNOTATION) ) {
                    int LA236_2 = input.LA(2);

                    if ( (synpred255_InternalSCTX()) ) {
                        alt236=1;
                    }


                }
<<<<<<< HEAD
                else if ( (LA237_0==106) ) {
                    int LA237_3 = input.LA(2);
=======
                else if ( (LA236_0==102) ) {
                    int LA236_3 = input.LA(2);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                    if ( (LA236_3==RULE_ID) ) {
                        int LA236_5 = input.LA(3);

                        if ( (synpred255_InternalSCTX()) ) {
                            alt236=1;
                        }


                    }


                }


                switch (alt236) {
            	case 1 :
            	    // InternalSCTX.g:7011:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:7011:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:7012:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_118);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop236;
                }
            } while (true);

            // InternalSCTX.g:7029:3: ( (lv_access_2_0= ruleAccessModifier ) )?
            int alt237=2;
            int LA237_0 = input.LA(1);

<<<<<<< HEAD
            if ( ((LA238_0>=155 && LA238_0<=157)) ) {
                alt238=1;
=======
            if ( ((LA237_0>=151 && LA237_0<=153)) ) {
                alt237=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            switch (alt237) {
                case 1 :
                    // InternalSCTX.g:7030:4: (lv_access_2_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:7030:4: (lv_access_2_0= ruleAccessModifier )
                    // InternalSCTX.g:7031:5: lv_access_2_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_118);
                    lv_access_2_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:7048:3: ( (lv_returnType_3_0= ruleMethodReturnType ) )?
            int alt238=2;
            int LA238_0 = input.LA(1);

<<<<<<< HEAD
            if ( ((LA239_0>=117 && LA239_0<=120)||LA239_0==158) ) {
                alt239=1;
=======
            if ( ((LA238_0>=113 && LA238_0<=116)||LA238_0==154) ) {
                alt238=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            switch (alt238) {
                case 1 :
                    // InternalSCTX.g:7049:4: (lv_returnType_3_0= ruleMethodReturnType )
                    {
                    // InternalSCTX.g:7049:4: (lv_returnType_3_0= ruleMethodReturnType )
                    // InternalSCTX.g:7050:5: lv_returnType_3_0= ruleMethodReturnType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getReturnTypeMethodReturnTypeEnumRuleCall_3_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_118);
                    lv_returnType_3_0=ruleMethodReturnType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"returnType",
                      						lv_returnType_3_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.MethodReturnType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:7067:3: ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) )
            // InternalSCTX.g:7068:4: (lv_valuedObjects_4_0= ruleSimpleValuedObject )
            {
            // InternalSCTX.g:7068:4: (lv_valuedObjects_4_0= ruleSimpleValuedObject )
            // InternalSCTX.g:7069:5: lv_valuedObjects_4_0= ruleSimpleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getValuedObjectsSimpleValuedObjectParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_119);
            lv_valuedObjects_4_0=ruleSimpleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_4_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.SimpleValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:7086:3: ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' )
            int alt240=2;
            int LA240_0 = input.LA(1);

            if ( (LA240_0==31) ) {
                alt240=1;
            }
            else if ( (LA240_0==69) ) {
                alt240=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 240, 0, input);

                throw nvae;
            }
            switch (alt240) {
                case 1 :
                    // InternalSCTX.g:7087:4: (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' )
                    {
                    // InternalSCTX.g:7087:4: (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' )
                    // InternalSCTX.g:7088:5: otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')'
                    {
                    otherlv_5=(Token)match(input,31,FollowSets000.FOLLOW_120); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getMethodDeclarationWOSemicolonAccess().getLeftParenthesisKeyword_5_0_0());
                      				
                    }
                    // InternalSCTX.g:7092:5: ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) )
                    // InternalSCTX.g:7093:6: (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon )
                    {
                    // InternalSCTX.g:7093:6: (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon )
                    // InternalSCTX.g:7094:7: lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_5_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_parameterDeclarations_6_0=ruleVariableDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                      							}
                      							add(
                      								current,
                      								"parameterDeclarations",
                      								lv_parameterDeclarations_6_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:7111:5: (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )*
                    loop239:
                    do {
                        int alt239=2;
                        int LA239_0 = input.LA(1);

                        if ( (LA239_0==20) ) {
                            alt239=1;
                        }


                        switch (alt239) {
                    	case 1 :
                    	    // InternalSCTX.g:7112:6: otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) )
                    	    {
                    	    otherlv_7=(Token)match(input,20,FollowSets000.FOLLOW_120); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_7, grammarAccess.getMethodDeclarationWOSemicolonAccess().getCommaKeyword_5_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCTX.g:7116:6: ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) )
                    	    // InternalSCTX.g:7117:7: (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon )
                    	    {
                    	    // InternalSCTX.g:7117:7: (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon )
                    	    // InternalSCTX.g:7118:8: lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_5_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_31);
                    	    lv_parameterDeclarations_8_0=ruleVariableDeclarationWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameterDeclarations",
                    	      									lv_parameterDeclarations_8_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop239;
                        }
                    } while (true);

                    otherlv_9=(Token)match(input,32,FollowSets000.FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getMethodDeclarationWOSemicolonAccess().getRightParenthesisKeyword_5_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7142:4: otherlv_10= '()'
                    {
                    otherlv_10=(Token)match(input,69,FollowSets000.FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getMethodDeclarationWOSemicolonAccess().getLeftParenthesisRightParenthesisKeyword_5_1());
                      			
                    }

                    }
                    break;

            }

            // InternalSCTX.g:7147:3: (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )?
            int alt242=2;
            alt242 = dfa242.predict(input);
            switch (alt242) {
                case 1 :
                    // InternalSCTX.g:7148:4: otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_11=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getMethodDeclarationWOSemicolonAccess().getScheduleKeyword_6_0());
                      			
                    }
                    // InternalSCTX.g:7152:4: ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+
                    int cnt241=0;
                    loop241:
                    do {
                        int alt241=2;
                        alt241 = dfa241.predict(input);
                        switch (alt241) {
                    	case 1 :
                    	    // InternalSCTX.g:7153:5: (lv_schedule_12_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:7153:5: (lv_schedule_12_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:7154:6: lv_schedule_12_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getScheduleScheduleObjectReferenceParserRuleCall_6_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_122);
                    	    lv_schedule_12_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_12_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt241 >= 1 ) break loop241;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(241, input);
                                throw eee;
                        }
                        cnt241++;
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:7172:3: (otherlv_13= '{' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_15_0= ruleDeclaration ) )* ( (lv_statements_16_0= ruleStatement ) )* otherlv_17= '}' )?
            int alt246=2;
            int LA246_0 = input.LA(1);

            if ( (LA246_0==21) ) {
                alt246=1;
            }
            switch (alt246) {
                case 1 :
                    // InternalSCTX.g:7173:4: otherlv_13= '{' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_15_0= ruleDeclaration ) )* ( (lv_statements_16_0= ruleStatement ) )* otherlv_17= '}'
                    {
                    otherlv_13=(Token)match(input,21,FollowSets000.FOLLOW_123); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getMethodDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_7_0());
                      			
                    }
                    // InternalSCTX.g:7177:4: ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )?
                    int alt243=2;
                    int LA243_0 = input.LA(1);

                    if ( (LA243_0==RULE_SL_COMMENT_ANNOTATION) ) {
                        alt243=1;
                    }
                    switch (alt243) {
                        case 1 :
                            // InternalSCTX.g:7178:5: (lv_annotations_14_0= ruleCommentAnnotatonSL )
                            {
                            // InternalSCTX.g:7178:5: (lv_annotations_14_0= ruleCommentAnnotatonSL )
                            // InternalSCTX.g:7179:6: lv_annotations_14_0= ruleCommentAnnotatonSL
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_7_1_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_96);
                            lv_annotations_14_0=ruleCommentAnnotatonSL();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                              						}
                              						add(
                              							current,
                              							"annotations",
                              							lv_annotations_14_0,
                              							"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:7196:4: ( (lv_declarations_15_0= ruleDeclaration ) )*
                    loop244:
                    do {
                        int alt244=2;
                        alt244 = dfa244.predict(input);
                        switch (alt244) {
                    	case 1 :
                    	    // InternalSCTX.g:7197:5: (lv_declarations_15_0= ruleDeclaration )
                    	    {
                    	    // InternalSCTX.g:7197:5: (lv_declarations_15_0= ruleDeclaration )
                    	    // InternalSCTX.g:7198:6: lv_declarations_15_0= ruleDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getDeclarationsDeclarationParserRuleCall_7_2_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_96);
                    	    lv_declarations_15_0=ruleDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"declarations",
                    	      							lv_declarations_15_0,
                    	      							"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop244;
                        }
                    } while (true);

                    // InternalSCTX.g:7215:4: ( (lv_statements_16_0= ruleStatement ) )*
                    loop245:
                    do {
                        int alt245=2;
                        int LA245_0 = input.LA(1);

<<<<<<< HEAD
                        if ( (LA246_0==RULE_ID||LA246_0==RULE_COMMENT_ANNOTATION||LA246_0==21||LA246_0==38||LA246_0==47||(LA246_0>=72 && LA246_0<=73)||LA246_0==75||LA246_0==106) ) {
                            alt246=1;
=======
                        if ( (LA245_0==RULE_ID||LA245_0==RULE_COMMENT_ANNOTATION||LA245_0==21||LA245_0==38||LA245_0==47||(LA245_0>=71 && LA245_0<=72)||LA245_0==74||LA245_0==102) ) {
                            alt245=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        }


                        switch (alt245) {
                    	case 1 :
                    	    // InternalSCTX.g:7216:5: (lv_statements_16_0= ruleStatement )
                    	    {
                    	    // InternalSCTX.g:7216:5: (lv_statements_16_0= ruleStatement )
                    	    // InternalSCTX.g:7217:6: lv_statements_16_0= ruleStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getStatementsStatementParserRuleCall_7_3_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_97);
                    	    lv_statements_16_0=ruleStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"statements",
                    	      							lv_statements_16_0,
                    	      							"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop245;
                        }
                    } while (true);

                    otherlv_17=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getMethodDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_7_4());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodDeclarationWOSemicolon"


    // $ANTLR start "entryRuleRootScope"
    // InternalSCTX.g:7243:1: entryRuleRootScope returns [EObject current=null] : iv_ruleRootScope= ruleRootScope EOF ;
    public final EObject entryRuleRootScope() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRootScope = null;


        try {
            // InternalSCTX.g:7243:50: (iv_ruleRootScope= ruleRootScope EOF )
            // InternalSCTX.g:7244:2: iv_ruleRootScope= ruleRootScope EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRootScopeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRootScope=ruleRootScope();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRootScope; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRootScope"


    // $ANTLR start "ruleRootScope"
    // InternalSCTX.g:7250:1: ruleRootScope returns [EObject current=null] : ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* ) ;
    public final EObject ruleRootScope() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        EObject lv_declarations_1_0 = null;

        EObject lv_entities_2_0 = null;

        EObject lv_scopes_4_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:7256:2: ( ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* ) )
            // InternalSCTX.g:7257:2: ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* )
            {
            // InternalSCTX.g:7257:2: ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* )
            // InternalSCTX.g:7258:3: () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )*
            {
            // InternalSCTX.g:7258:3: ()
            // InternalSCTX.g:7259:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRootScopeAccess().getKExtScopeAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:7268:3: ( (lv_declarations_1_0= ruleDeclaration ) )*
            loop247:
            do {
                int alt247=2;
                alt247 = dfa247.predict(input);
                switch (alt247) {
            	case 1 :
            	    // InternalSCTX.g:7269:4: (lv_declarations_1_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:7269:4: (lv_declarations_1_0= ruleDeclaration )
            	    // InternalSCTX.g:7270:5: lv_declarations_1_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRootScopeAccess().getDeclarationsDeclarationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_147);
            	    lv_declarations_1_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_1_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop247;
                }
            } while (true);

            // InternalSCTX.g:7287:3: ( (lv_entities_2_0= ruleTestEntity ) )*
            loop248:
            do {
                int alt248=2;
                int LA248_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA249_0==RULE_ID||LA249_0==RULE_HOSTCODE||LA249_0==RULE_COMMENT_ANNOTATION||LA249_0==21||LA249_0==77||LA249_0==80||(LA249_0>=84 && LA249_0<=85)||LA249_0==106) ) {
                    alt249=1;
=======
                if ( (LA248_0==RULE_ID||LA248_0==RULE_HOSTCODE||LA248_0==RULE_COMMENT_ANNOTATION||LA248_0==21||LA248_0==76||LA248_0==79||(LA248_0>=83 && LA248_0<=84)||LA248_0==102) ) {
                    alt248=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt248) {
            	case 1 :
            	    // InternalSCTX.g:7288:4: (lv_entities_2_0= ruleTestEntity )
            	    {
            	    // InternalSCTX.g:7288:4: (lv_entities_2_0= ruleTestEntity )
            	    // InternalSCTX.g:7289:5: lv_entities_2_0= ruleTestEntity
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRootScopeAccess().getEntitiesTestEntityParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_148);
            	    lv_entities_2_0=ruleTestEntity();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"entities",
            	      						lv_entities_2_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.TestEntity");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop248;
                }
            } while (true);

            // InternalSCTX.g:7306:3: (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )*
            loop249:
            do {
                int alt249=2;
                int LA249_0 = input.LA(1);

                if ( (LA249_0==75) ) {
                    alt249=1;
                }


                switch (alt249) {
            	case 1 :
            	    // InternalSCTX.g:7307:4: otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) )
            	    {
            	    otherlv_3=(Token)match(input,75,FollowSets000.FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getRootScopeAccess().getScopeKeyword_3_0());
            	      			
            	    }
            	    // InternalSCTX.g:7311:4: ( (lv_scopes_4_0= ruleScope ) )
            	    // InternalSCTX.g:7312:5: (lv_scopes_4_0= ruleScope )
            	    {
            	    // InternalSCTX.g:7312:5: (lv_scopes_4_0= ruleScope )
            	    // InternalSCTX.g:7313:6: lv_scopes_4_0= ruleScope
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRootScopeAccess().getScopesScopeParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_149);
            	    lv_scopes_4_0=ruleScope();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"scopes",
            	      							lv_scopes_4_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.Scope");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop249;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRootScope"


    // $ANTLR start "entryRuleScope"
    // InternalSCTX.g:7335:1: entryRuleScope returns [EObject current=null] : iv_ruleScope= ruleScope EOF ;
    public final EObject entryRuleScope() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScope = null;


        try {
            // InternalSCTX.g:7335:46: (iv_ruleScope= ruleScope EOF )
            // InternalSCTX.g:7336:2: iv_ruleScope= ruleScope EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScopeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScope=ruleScope();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScope; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScope"


    // $ANTLR start "ruleScope"
    // InternalSCTX.g:7342:1: ruleScope returns [EObject current=null] : ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' ) ;
    public final EObject ruleScope() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_declarations_3_0 = null;

        EObject lv_entities_4_0 = null;

        EObject lv_scopes_6_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:7348:2: ( ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' ) )
            // InternalSCTX.g:7349:2: ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' )
            {
            // InternalSCTX.g:7349:2: ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' )
            // InternalSCTX.g:7350:3: () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}'
            {
            // InternalSCTX.g:7350:3: ()
            // InternalSCTX.g:7351:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getScopeAccess().getKExtScopeAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:7360:3: ( (lv_name_1_0= RULE_ID ) )?
            int alt250=2;
            int LA250_0 = input.LA(1);

            if ( (LA250_0==RULE_ID) ) {
                alt250=1;
            }
            switch (alt250) {
                case 1 :
                    // InternalSCTX.g:7361:4: (lv_name_1_0= RULE_ID )
                    {
                    // InternalSCTX.g:7361:4: (lv_name_1_0= RULE_ID )
                    // InternalSCTX.g:7362:5: lv_name_1_0= RULE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_1_0, grammarAccess.getScopeAccess().getNameIDTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getScopeRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"de.cau.cs.kieler.annotations.Annotations.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,21,FollowSets000.FOLLOW_150); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getScopeAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalSCTX.g:7382:3: ( (lv_declarations_3_0= ruleDeclaration ) )*
            loop251:
            do {
                int alt251=2;
                alt251 = dfa251.predict(input);
                switch (alt251) {
            	case 1 :
            	    // InternalSCTX.g:7383:4: (lv_declarations_3_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:7383:4: (lv_declarations_3_0= ruleDeclaration )
            	    // InternalSCTX.g:7384:5: lv_declarations_3_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScopeAccess().getDeclarationsDeclarationParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_150);
            	    lv_declarations_3_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_3_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop251;
                }
            } while (true);

            // InternalSCTX.g:7401:3: ( (lv_entities_4_0= ruleTestEntity ) )*
            loop252:
            do {
                int alt252=2;
                int LA252_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA253_0==RULE_ID||LA253_0==RULE_HOSTCODE||LA253_0==RULE_COMMENT_ANNOTATION||LA253_0==21||LA253_0==77||LA253_0==80||(LA253_0>=84 && LA253_0<=85)||LA253_0==106) ) {
                    alt253=1;
=======
                if ( (LA252_0==RULE_ID||LA252_0==RULE_HOSTCODE||LA252_0==RULE_COMMENT_ANNOTATION||LA252_0==21||LA252_0==76||LA252_0==79||(LA252_0>=83 && LA252_0<=84)||LA252_0==102) ) {
                    alt252=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt252) {
            	case 1 :
            	    // InternalSCTX.g:7402:4: (lv_entities_4_0= ruleTestEntity )
            	    {
            	    // InternalSCTX.g:7402:4: (lv_entities_4_0= ruleTestEntity )
            	    // InternalSCTX.g:7403:5: lv_entities_4_0= ruleTestEntity
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScopeAccess().getEntitiesTestEntityParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_151);
            	    lv_entities_4_0=ruleTestEntity();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"entities",
            	      						lv_entities_4_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.TestEntity");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop252;
                }
            } while (true);

            // InternalSCTX.g:7420:3: (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )*
            loop253:
            do {
                int alt253=2;
                int LA253_0 = input.LA(1);

                if ( (LA253_0==75) ) {
                    alt253=1;
                }


                switch (alt253) {
            	case 1 :
            	    // InternalSCTX.g:7421:4: otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) )
            	    {
            	    otherlv_5=(Token)match(input,75,FollowSets000.FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getScopeAccess().getScopeKeyword_5_0());
            	      			
            	    }
            	    // InternalSCTX.g:7425:4: ( (lv_scopes_6_0= ruleScope ) )
            	    // InternalSCTX.g:7426:5: (lv_scopes_6_0= ruleScope )
            	    {
            	    // InternalSCTX.g:7426:5: (lv_scopes_6_0= ruleScope )
            	    // InternalSCTX.g:7427:6: lv_scopes_6_0= ruleScope
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getScopeAccess().getScopesScopeParserRuleCall_5_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_152);
            	    lv_scopes_6_0=ruleScope();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getScopeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"scopes",
            	      							lv_scopes_6_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.Scope");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop253;
                }
            } while (true);

            otherlv_7=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getScopeAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScope"


    // $ANTLR start "entryRuleTestEntity"
    // InternalSCTX.g:7453:1: entryRuleTestEntity returns [EObject current=null] : iv_ruleTestEntity= ruleTestEntity EOF ;
    public final EObject entryRuleTestEntity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTestEntity = null;


        try {
            // InternalSCTX.g:7453:51: (iv_ruleTestEntity= ruleTestEntity EOF )
            // InternalSCTX.g:7454:2: iv_ruleTestEntity= ruleTestEntity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTestEntityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTestEntity=ruleTestEntity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTestEntity; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTestEntity"


    // $ANTLR start "ruleTestEntity"
    // InternalSCTX.g:7460:1: ruleTestEntity returns [EObject current=null] : ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) ) ;
    public final EObject ruleTestEntity() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;

        EObject lv_effect_1_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:7466:2: ( ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) ) )
            // InternalSCTX.g:7467:2: ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) )
            {
            // InternalSCTX.g:7467:2: ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) )
            int alt254=2;
            alt254 = dfa254.predict(input);
            switch (alt254) {
                case 1 :
                    // InternalSCTX.g:7468:3: ( (lv_expression_0_0= ruleAnnotatedExpression ) )
                    {
                    // InternalSCTX.g:7468:3: ( (lv_expression_0_0= ruleAnnotatedExpression ) )
                    // InternalSCTX.g:7469:4: (lv_expression_0_0= ruleAnnotatedExpression )
                    {
                    // InternalSCTX.g:7469:4: (lv_expression_0_0= ruleAnnotatedExpression )
                    // InternalSCTX.g:7470:5: lv_expression_0_0= ruleAnnotatedExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTestEntityAccess().getExpressionAnnotatedExpressionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expression_0_0=ruleAnnotatedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTestEntityRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_0_0,
                      						"de.cau.cs.kieler.kexpressions.kext.KExt.AnnotatedExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7488:3: ( (lv_effect_1_0= ruleEffect ) )
                    {
                    // InternalSCTX.g:7488:3: ( (lv_effect_1_0= ruleEffect ) )
                    // InternalSCTX.g:7489:4: (lv_effect_1_0= ruleEffect )
                    {
                    // InternalSCTX.g:7489:4: (lv_effect_1_0= ruleEffect )
                    // InternalSCTX.g:7490:5: lv_effect_1_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTestEntityAccess().getEffectEffectParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_effect_1_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTestEntityRule());
                      					}
                      					set(
                      						current,
                      						"effect",
                      						lv_effect_1_0,
                      						"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTestEntity"


    // $ANTLR start "entryRuleAnnotatedExpression"
    // InternalSCTX.g:7511:1: entryRuleAnnotatedExpression returns [EObject current=null] : iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF ;
    public final EObject entryRuleAnnotatedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedExpression = null;


        try {
            // InternalSCTX.g:7511:60: (iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF )
            // InternalSCTX.g:7512:2: iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotatedExpression=ruleAnnotatedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotatedExpression"


    // $ANTLR start "ruleAnnotatedExpression"
    // InternalSCTX.g:7518:1: ruleAnnotatedExpression returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) ) ;
    public final EObject ruleAnnotatedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:7524:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) ) )
            // InternalSCTX.g:7525:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) )
            {
            // InternalSCTX.g:7525:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) )
            // InternalSCTX.g:7526:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) )
            {
            // InternalSCTX.g:7526:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop255:
            do {
                int alt255=2;
                int LA255_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA256_0==RULE_COMMENT_ANNOTATION||LA256_0==106) ) {
                    alt256=1;
=======
                if ( (LA255_0==RULE_COMMENT_ANNOTATION||LA255_0==102) ) {
                    alt255=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt255) {
            	case 1 :
            	    // InternalSCTX.g:7527:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:7527:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:7528:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_153);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAnnotatedExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop255;
                }
            } while (true);

            otherlv_1=(Token)match(input,76,FollowSets000.FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAnnotatedExpressionAccess().getExpressionKeyword_1());
              		
            }
            // InternalSCTX.g:7549:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalSCTX.g:7550:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalSCTX.g:7550:4: (lv_expression_2_0= ruleExpression )
            // InternalSCTX.g:7551:5: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAnnotatedExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotatedExpression"


    // $ANTLR start "entrySuperDeclaration"
    // InternalSCTX.g:7572:1: entrySuperDeclaration returns [EObject current=null] : iv_superDeclaration= superDeclaration EOF ;
    public final EObject entrySuperDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_superDeclaration = null;


        try {
            // InternalSCTX.g:7572:53: (iv_superDeclaration= superDeclaration EOF )
            // InternalSCTX.g:7573:2: iv_superDeclaration= superDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKExtDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_superDeclaration=superDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperDeclaration"


    // $ANTLR start "superDeclaration"
    // InternalSCTX.g:7579:1: superDeclaration returns [EObject current=null] : (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_ClassDeclaration_3= ruleClassDeclaration ) ;
    public final EObject superDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclaration_0 = null;

        EObject this_ReferenceDeclaration_1 = null;

        EObject this_ScheduleDeclaration_2 = null;

        EObject this_ClassDeclaration_3 = null;



        	enterRule();

        try {
            // InternalSCTX.g:7585:2: ( (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_ClassDeclaration_3= ruleClassDeclaration ) )
            // InternalSCTX.g:7586:2: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_ClassDeclaration_3= ruleClassDeclaration )
            {
            // InternalSCTX.g:7586:2: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_ClassDeclaration_3= ruleClassDeclaration )
            int alt256=4;
            alt256 = dfa256.predict(input);
            switch (alt256) {
                case 1 :
                    // InternalSCTX.g:7587:3: this_VariableDeclaration_0= ruleVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKExtDeclarationAccess().getVariableDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_VariableDeclaration_0=ruleVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VariableDeclaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7599:3: this_ReferenceDeclaration_1= ruleReferenceDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKExtDeclarationAccess().getReferenceDeclarationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceDeclaration_1=ruleReferenceDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReferenceDeclaration_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:7611:3: this_ScheduleDeclaration_2= ruleScheduleDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKExtDeclarationAccess().getScheduleDeclarationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ScheduleDeclaration_2=ruleScheduleDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ScheduleDeclaration_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:7623:3: this_ClassDeclaration_3= ruleClassDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKExtDeclarationAccess().getClassDeclarationParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ClassDeclaration_3=ruleClassDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ClassDeclaration_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superDeclaration"


    // $ANTLR start "entryRuleDeclarationWOSemicolon"
    // InternalSCTX.g:7638:1: entryRuleDeclarationWOSemicolon returns [EObject current=null] : iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF ;
    public final EObject entryRuleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclarationWOSemicolon = null;


        try {
            // InternalSCTX.g:7638:63: (iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF )
            // InternalSCTX.g:7639:2: iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclarationWOSemicolon=ruleDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclarationWOSemicolon"


    // $ANTLR start "ruleDeclarationWOSemicolon"
    // InternalSCTX.g:7645:1: ruleDeclarationWOSemicolon returns [EObject current=null] : (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_ClassDeclarationWOSemicolon_3= ruleClassDeclarationWOSemicolon ) ;
    public final EObject ruleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationWOSemicolon_0 = null;

        EObject this_ReferenceDeclarationWOSemicolon_1 = null;

        EObject this_ScheduleDeclarationWOSemicolon_2 = null;

        EObject this_ClassDeclarationWOSemicolon_3 = null;



        	enterRule();

        try {
            // InternalSCTX.g:7651:2: ( (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_ClassDeclarationWOSemicolon_3= ruleClassDeclarationWOSemicolon ) )
            // InternalSCTX.g:7652:2: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_ClassDeclarationWOSemicolon_3= ruleClassDeclarationWOSemicolon )
            {
            // InternalSCTX.g:7652:2: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_ClassDeclarationWOSemicolon_3= ruleClassDeclarationWOSemicolon )
            int alt257=4;
            alt257 = dfa257.predict(input);
            switch (alt257) {
                case 1 :
                    // InternalSCTX.g:7653:3: this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getVariableDeclarationWOSemicolonParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_VariableDeclarationWOSemicolon_0=ruleVariableDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VariableDeclarationWOSemicolon_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7665:3: this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getReferenceDeclarationWOSemicolonParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceDeclarationWOSemicolon_1=ruleReferenceDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReferenceDeclarationWOSemicolon_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:7677:3: this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getScheduleDeclarationWOSemicolonParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ScheduleDeclarationWOSemicolon_2=ruleScheduleDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ScheduleDeclarationWOSemicolon_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:7689:3: this_ClassDeclarationWOSemicolon_3= ruleClassDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getClassDeclarationWOSemicolonParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ClassDeclarationWOSemicolon_3=ruleClassDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ClassDeclarationWOSemicolon_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclarationWOSemicolon"


    // $ANTLR start "entryRuleVariableDeclaration"
    // InternalSCTX.g:7704:1: entryRuleVariableDeclaration returns [EObject current=null] : iv_ruleVariableDeclaration= ruleVariableDeclaration EOF ;
    public final EObject entryRuleVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableDeclaration = null;


        try {
            // InternalSCTX.g:7704:60: (iv_ruleVariableDeclaration= ruleVariableDeclaration EOF )
            // InternalSCTX.g:7705:2: iv_ruleVariableDeclaration= ruleVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVariableDeclaration=ruleVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableDeclaration"


    // $ANTLR start "ruleVariableDeclaration"
    // InternalSCTX.g:7711:1: ruleVariableDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_const_2_0=null;
        Token lv_input_3_0=null;
        Token lv_output_4_0=null;
        Token lv_global_5_0=null;
        Token lv_static_6_0=null;
        Token lv_signal_7_0=null;
        Token lv_signal_9_0=null;
        Token lv_hostType_11_0=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        Enumerator lv_type_8_0 = null;

        Enumerator lv_type_10_0 = null;

        EObject lv_valuedObjects_12_0 = null;

        EObject lv_valuedObjects_14_0 = null;

        EObject lv_annotations_16_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:7717:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:7718:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:7718:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:7719:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:7719:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop258:
            do {
                int alt258=2;
                int LA258_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA259_0==RULE_COMMENT_ANNOTATION||LA259_0==106) ) {
                    alt259=1;
=======
                if ( (LA258_0==RULE_COMMENT_ANNOTATION||LA258_0==102) ) {
                    alt258=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt258) {
            	case 1 :
            	    // InternalSCTX.g:7720:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:7720:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:7721:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_120);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop258;
                }
            } while (true);

            // InternalSCTX.g:7738:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt259=2;
            int LA259_0 = input.LA(1);

<<<<<<< HEAD
            if ( ((LA260_0>=155 && LA260_0<=157)) ) {
                alt260=1;
=======
            if ( ((LA259_0>=151 && LA259_0<=153)) ) {
                alt259=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            switch (alt259) {
                case 1 :
                    // InternalSCTX.g:7739:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:7739:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalSCTX.g:7740:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_120);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:7757:3: ( (lv_const_2_0= 'const' ) )?
            int alt260=2;
            int LA260_0 = input.LA(1);

            if ( (LA260_0==60) ) {
                alt260=1;
            }
            switch (alt260) {
                case 1 :
                    // InternalSCTX.g:7758:4: (lv_const_2_0= 'const' )
                    {
                    // InternalSCTX.g:7758:4: (lv_const_2_0= 'const' )
                    // InternalSCTX.g:7759:5: lv_const_2_0= 'const'
                    {
                    lv_const_2_0=(Token)match(input,60,FollowSets000.FOLLOW_120); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_const_2_0, grammarAccess.getVariableDeclarationAccess().getConstConstKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "const", true, "const");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:7771:3: ( (lv_input_3_0= 'input' ) )?
            int alt261=2;
            int LA261_0 = input.LA(1);

            if ( (LA261_0==61) ) {
                alt261=1;
            }
            switch (alt261) {
                case 1 :
                    // InternalSCTX.g:7772:4: (lv_input_3_0= 'input' )
                    {
                    // InternalSCTX.g:7772:4: (lv_input_3_0= 'input' )
                    // InternalSCTX.g:7773:5: lv_input_3_0= 'input'
                    {
                    lv_input_3_0=(Token)match(input,61,FollowSets000.FOLLOW_120); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_input_3_0, grammarAccess.getVariableDeclarationAccess().getInputInputKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "input", true, "input");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:7785:3: ( (lv_output_4_0= 'output' ) )?
            int alt262=2;
            int LA262_0 = input.LA(1);

            if ( (LA262_0==62) ) {
                alt262=1;
            }
            switch (alt262) {
                case 1 :
                    // InternalSCTX.g:7786:4: (lv_output_4_0= 'output' )
                    {
                    // InternalSCTX.g:7786:4: (lv_output_4_0= 'output' )
                    // InternalSCTX.g:7787:5: lv_output_4_0= 'output'
                    {
                    lv_output_4_0=(Token)match(input,62,FollowSets000.FOLLOW_120); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_output_4_0, grammarAccess.getVariableDeclarationAccess().getOutputOutputKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "output", true, "output");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:7799:3: ( (lv_global_5_0= 'global' ) )?
            int alt263=2;
            int LA263_0 = input.LA(1);

            if ( (LA263_0==63) ) {
                alt263=1;
            }
            switch (alt263) {
                case 1 :
                    // InternalSCTX.g:7800:4: (lv_global_5_0= 'global' )
                    {
                    // InternalSCTX.g:7800:4: (lv_global_5_0= 'global' )
                    // InternalSCTX.g:7801:5: lv_global_5_0= 'global'
                    {
                    lv_global_5_0=(Token)match(input,63,FollowSets000.FOLLOW_120); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_global_5_0, grammarAccess.getVariableDeclarationAccess().getGlobalGlobalKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "global", true, "global");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:7813:3: ( (lv_static_6_0= 'static' ) )?
            int alt264=2;
            int LA264_0 = input.LA(1);

            if ( (LA264_0==64) ) {
                alt264=1;
            }
            switch (alt264) {
                case 1 :
                    // InternalSCTX.g:7814:4: (lv_static_6_0= 'static' )
                    {
                    // InternalSCTX.g:7814:4: (lv_static_6_0= 'static' )
                    // InternalSCTX.g:7815:5: lv_static_6_0= 'static'
                    {
                    lv_static_6_0=(Token)match(input,64,FollowSets000.FOLLOW_120); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_static_6_0, grammarAccess.getVariableDeclarationAccess().getStaticStaticKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "static", true, "static");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:7827:3: ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) )
            int alt266=3;
            switch ( input.LA(1) ) {
            case 77:
                {
                int LA266_1 = input.LA(2);

<<<<<<< HEAD
                if ( ((LA267_1>=116 && LA267_1<=121)) ) {
                    alt267=1;
                }
                else if ( (LA267_1==RULE_ID||LA267_1==RULE_COMMENT_ANNOTATION||LA267_1==106) ) {
                    alt267=2;
=======
                if ( (LA266_1==RULE_ID||LA266_1==RULE_COMMENT_ANNOTATION||LA266_1==102) ) {
                    alt266=2;
                }
                else if ( ((LA266_1>=112 && LA266_1<=117)) ) {
                    alt266=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 266, 1, input);

                    throw nvae;
                }
                }
                break;
<<<<<<< HEAD
            case 116:
            case 117:
            case 118:
            case 119:
            case 120:
            case 121:
=======
            case 112:
            case 113:
            case 114:
            case 115:
            case 116:
            case 117:
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                {
                alt266=1;
                }
                break;
            case 65:
                {
                alt266=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 266, 0, input);

                throw nvae;
            }

            switch (alt266) {
                case 1 :
                    // InternalSCTX.g:7828:4: ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) )
                    {
                    // InternalSCTX.g:7828:4: ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) )
                    // InternalSCTX.g:7829:5: ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) )
                    {
                    // InternalSCTX.g:7829:5: ( (lv_signal_7_0= 'signal' ) )?
                    int alt265=2;
                    int LA265_0 = input.LA(1);

                    if ( (LA265_0==77) ) {
                        alt265=1;
                    }
                    switch (alt265) {
                        case 1 :
                            // InternalSCTX.g:7830:6: (lv_signal_7_0= 'signal' )
                            {
                            // InternalSCTX.g:7830:6: (lv_signal_7_0= 'signal' )
                            // InternalSCTX.g:7831:7: lv_signal_7_0= 'signal'
                            {
                            lv_signal_7_0=(Token)match(input,77,FollowSets000.FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_signal_7_0, grammarAccess.getVariableDeclarationAccess().getSignalSignalKeyword_7_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getVariableDeclarationRule());
                              							}
                              							setWithLastConsumed(current, "signal", true, "signal");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:7843:5: ( (lv_type_8_0= ruleValueType ) )
                    // InternalSCTX.g:7844:6: (lv_type_8_0= ruleValueType )
                    {
                    // InternalSCTX.g:7844:6: (lv_type_8_0= ruleValueType )
                    // InternalSCTX.g:7845:7: lv_type_8_0= ruleValueType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVariableDeclarationAccess().getTypeValueTypeEnumRuleCall_7_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_105);
                    lv_type_8_0=ruleValueType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_8_0,
                      								"de.cau.cs.kieler.sccharts.text.SCTX.ValueType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7864:4: ( (lv_signal_9_0= 'signal' ) )
                    {
                    // InternalSCTX.g:7864:4: ( (lv_signal_9_0= 'signal' ) )
                    // InternalSCTX.g:7865:5: (lv_signal_9_0= 'signal' )
                    {
                    // InternalSCTX.g:7865:5: (lv_signal_9_0= 'signal' )
                    // InternalSCTX.g:7866:6: lv_signal_9_0= 'signal'
                    {
                    lv_signal_9_0=(Token)match(input,77,FollowSets000.FOLLOW_105); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_signal_9_0, grammarAccess.getVariableDeclarationAccess().getSignalSignalKeyword_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      						}
                      						setWithLastConsumed(current, "signal", true, "signal");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:7879:4: ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) )
                    {
                    // InternalSCTX.g:7879:4: ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) )
                    // InternalSCTX.g:7880:5: ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) )
                    {
                    // InternalSCTX.g:7880:5: ( (lv_type_10_0= ruleHostType ) )
                    // InternalSCTX.g:7881:6: (lv_type_10_0= ruleHostType )
                    {
                    // InternalSCTX.g:7881:6: (lv_type_10_0= ruleHostType )
                    // InternalSCTX.g:7882:7: lv_type_10_0= ruleHostType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVariableDeclarationAccess().getTypeHostTypeEnumRuleCall_7_2_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_48);
                    lv_type_10_0=ruleHostType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_10_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.HostType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:7899:5: ( (lv_hostType_11_0= RULE_STRING ) )
                    // InternalSCTX.g:7900:6: (lv_hostType_11_0= RULE_STRING )
                    {
                    // InternalSCTX.g:7900:6: (lv_hostType_11_0= RULE_STRING )
                    // InternalSCTX.g:7901:7: lv_hostType_11_0= RULE_STRING
                    {
                    lv_hostType_11_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_105); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_hostType_11_0, grammarAccess.getVariableDeclarationAccess().getHostTypeSTRINGTerminalRuleCall_7_2_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"hostType",
                      								lv_hostType_11_0,
                      								"de.cau.cs.kieler.annotations.Annotations.STRING");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:7919:3: ( (lv_valuedObjects_12_0= ruleValuedObject ) )
            // InternalSCTX.g:7920:4: (lv_valuedObjects_12_0= ruleValuedObject )
            {
            // InternalSCTX.g:7920:4: (lv_valuedObjects_12_0= ruleValuedObject )
            // InternalSCTX.g:7921:5: lv_valuedObjects_12_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_8_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_155);
            lv_valuedObjects_12_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_12_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:7938:3: (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )*
            loop267:
            do {
                int alt267=2;
                int LA267_0 = input.LA(1);

                if ( (LA267_0==20) ) {
                    alt267=1;
                }


                switch (alt267) {
            	case 1 :
            	    // InternalSCTX.g:7939:4: otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) )
            	    {
            	    otherlv_13=(Token)match(input,20,FollowSets000.FOLLOW_105); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_13, grammarAccess.getVariableDeclarationAccess().getCommaKeyword_9_0());
            	      			
            	    }
            	    // InternalSCTX.g:7943:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) )
            	    // InternalSCTX.g:7944:5: (lv_valuedObjects_14_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:7944:5: (lv_valuedObjects_14_0= ruleValuedObject )
            	    // InternalSCTX.g:7945:6: lv_valuedObjects_14_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getVariableDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_9_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_155);
            	    lv_valuedObjects_14_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_14_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop267;
                }
            } while (true);

            otherlv_15=(Token)match(input,42,FollowSets000.FOLLOW_146); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_10());
              		
            }
            // InternalSCTX.g:7967:3: ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )?
            int alt268=2;
            int LA268_0 = input.LA(1);

            if ( (LA268_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt268=1;
            }
            switch (alt268) {
                case 1 :
                    // InternalSCTX.g:7968:4: (lv_annotations_16_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:7968:4: (lv_annotations_16_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:7969:5: lv_annotations_16_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_11_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_16_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_16_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableDeclaration"


    // $ANTLR start "entryRuleVariableDeclarationWOSemicolon"
    // InternalSCTX.g:7990:1: entryRuleVariableDeclarationWOSemicolon returns [EObject current=null] : iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF ;
    public final EObject entryRuleVariableDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableDeclarationWOSemicolon = null;


        try {
            // InternalSCTX.g:7990:71: (iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF )
            // InternalSCTX.g:7991:2: iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVariableDeclarationWOSemicolon=ruleVariableDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableDeclarationWOSemicolon"


    // $ANTLR start "ruleVariableDeclarationWOSemicolon"
    // InternalSCTX.g:7997:1: ruleVariableDeclarationWOSemicolon returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleVariableDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token lv_const_2_0=null;
        Token lv_input_3_0=null;
        Token lv_output_4_0=null;
        Token lv_global_5_0=null;
        Token lv_static_6_0=null;
        Token lv_signal_7_0=null;
        Token lv_signal_9_0=null;
        Token lv_hostType_11_0=null;
        Token otherlv_13=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        Enumerator lv_type_8_0 = null;

        Enumerator lv_type_10_0 = null;

        EObject lv_valuedObjects_12_0 = null;

        EObject lv_valuedObjects_14_0 = null;

        EObject lv_annotations_15_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:8003:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:8004:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:8004:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:8005:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:8005:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop269:
            do {
                int alt269=2;
                int LA269_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA270_0==RULE_COMMENT_ANNOTATION||LA270_0==106) ) {
                    alt270=1;
=======
                if ( (LA269_0==RULE_COMMENT_ANNOTATION||LA269_0==102) ) {
                    alt269=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt269) {
            	case 1 :
            	    // InternalSCTX.g:8006:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:8006:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:8007:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_120);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop269;
                }
            } while (true);

            // InternalSCTX.g:8024:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt270=2;
            int LA270_0 = input.LA(1);

<<<<<<< HEAD
            if ( ((LA271_0>=155 && LA271_0<=157)) ) {
                alt271=1;
=======
            if ( ((LA270_0>=151 && LA270_0<=153)) ) {
                alt270=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            switch (alt270) {
                case 1 :
                    // InternalSCTX.g:8025:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:8025:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalSCTX.g:8026:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_120);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8043:3: ( (lv_const_2_0= 'const' ) )?
            int alt271=2;
            int LA271_0 = input.LA(1);

            if ( (LA271_0==60) ) {
                alt271=1;
            }
            switch (alt271) {
                case 1 :
                    // InternalSCTX.g:8044:4: (lv_const_2_0= 'const' )
                    {
                    // InternalSCTX.g:8044:4: (lv_const_2_0= 'const' )
                    // InternalSCTX.g:8045:5: lv_const_2_0= 'const'
                    {
                    lv_const_2_0=(Token)match(input,60,FollowSets000.FOLLOW_120); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_const_2_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getConstConstKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "const", true, "const");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8057:3: ( (lv_input_3_0= 'input' ) )?
            int alt272=2;
            int LA272_0 = input.LA(1);

            if ( (LA272_0==61) ) {
                alt272=1;
            }
            switch (alt272) {
                case 1 :
                    // InternalSCTX.g:8058:4: (lv_input_3_0= 'input' )
                    {
                    // InternalSCTX.g:8058:4: (lv_input_3_0= 'input' )
                    // InternalSCTX.g:8059:5: lv_input_3_0= 'input'
                    {
                    lv_input_3_0=(Token)match(input,61,FollowSets000.FOLLOW_120); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_input_3_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getInputInputKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "input", true, "input");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8071:3: ( (lv_output_4_0= 'output' ) )?
            int alt273=2;
            int LA273_0 = input.LA(1);

            if ( (LA273_0==62) ) {
                alt273=1;
            }
            switch (alt273) {
                case 1 :
                    // InternalSCTX.g:8072:4: (lv_output_4_0= 'output' )
                    {
                    // InternalSCTX.g:8072:4: (lv_output_4_0= 'output' )
                    // InternalSCTX.g:8073:5: lv_output_4_0= 'output'
                    {
                    lv_output_4_0=(Token)match(input,62,FollowSets000.FOLLOW_120); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_output_4_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getOutputOutputKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "output", true, "output");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8085:3: ( (lv_global_5_0= 'global' ) )?
            int alt274=2;
            int LA274_0 = input.LA(1);

            if ( (LA274_0==63) ) {
                alt274=1;
            }
            switch (alt274) {
                case 1 :
                    // InternalSCTX.g:8086:4: (lv_global_5_0= 'global' )
                    {
                    // InternalSCTX.g:8086:4: (lv_global_5_0= 'global' )
                    // InternalSCTX.g:8087:5: lv_global_5_0= 'global'
                    {
                    lv_global_5_0=(Token)match(input,63,FollowSets000.FOLLOW_120); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_global_5_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getGlobalGlobalKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "global", true, "global");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8099:3: ( (lv_static_6_0= 'static' ) )?
            int alt275=2;
            int LA275_0 = input.LA(1);

            if ( (LA275_0==64) ) {
                alt275=1;
            }
            switch (alt275) {
                case 1 :
                    // InternalSCTX.g:8100:4: (lv_static_6_0= 'static' )
                    {
                    // InternalSCTX.g:8100:4: (lv_static_6_0= 'static' )
                    // InternalSCTX.g:8101:5: lv_static_6_0= 'static'
                    {
                    lv_static_6_0=(Token)match(input,64,FollowSets000.FOLLOW_120); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_static_6_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getStaticStaticKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "static", true, "static");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8113:3: ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) )
            int alt277=3;
            switch ( input.LA(1) ) {
            case 77:
                {
                int LA277_1 = input.LA(2);

<<<<<<< HEAD
                if ( (LA278_1==RULE_ID||LA278_1==RULE_COMMENT_ANNOTATION||LA278_1==106) ) {
                    alt278=2;
                }
                else if ( ((LA278_1>=116 && LA278_1<=121)) ) {
                    alt278=1;
=======
                if ( ((LA277_1>=112 && LA277_1<=117)) ) {
                    alt277=1;
                }
                else if ( (LA277_1==RULE_ID||LA277_1==RULE_COMMENT_ANNOTATION||LA277_1==102) ) {
                    alt277=2;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 277, 1, input);

                    throw nvae;
                }
                }
                break;
<<<<<<< HEAD
            case 116:
            case 117:
            case 118:
            case 119:
            case 120:
            case 121:
=======
            case 112:
            case 113:
            case 114:
            case 115:
            case 116:
            case 117:
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                {
                alt277=1;
                }
                break;
            case 65:
                {
                alt277=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 277, 0, input);

                throw nvae;
            }

            switch (alt277) {
                case 1 :
                    // InternalSCTX.g:8114:4: ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) )
                    {
                    // InternalSCTX.g:8114:4: ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) )
                    // InternalSCTX.g:8115:5: ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) )
                    {
                    // InternalSCTX.g:8115:5: ( (lv_signal_7_0= 'signal' ) )?
                    int alt276=2;
                    int LA276_0 = input.LA(1);

                    if ( (LA276_0==77) ) {
                        alt276=1;
                    }
                    switch (alt276) {
                        case 1 :
                            // InternalSCTX.g:8116:6: (lv_signal_7_0= 'signal' )
                            {
                            // InternalSCTX.g:8116:6: (lv_signal_7_0= 'signal' )
                            // InternalSCTX.g:8117:7: lv_signal_7_0= 'signal'
                            {
                            lv_signal_7_0=(Token)match(input,77,FollowSets000.FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_signal_7_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalSignalKeyword_7_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                              							}
                              							setWithLastConsumed(current, "signal", true, "signal");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:8129:5: ( (lv_type_8_0= ruleValueType ) )
                    // InternalSCTX.g:8130:6: (lv_type_8_0= ruleValueType )
                    {
                    // InternalSCTX.g:8130:6: (lv_type_8_0= ruleValueType )
                    // InternalSCTX.g:8131:7: lv_type_8_0= ruleValueType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getTypeValueTypeEnumRuleCall_7_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_105);
                    lv_type_8_0=ruleValueType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_8_0,
                      								"de.cau.cs.kieler.sccharts.text.SCTX.ValueType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8150:4: ( (lv_signal_9_0= 'signal' ) )
                    {
                    // InternalSCTX.g:8150:4: ( (lv_signal_9_0= 'signal' ) )
                    // InternalSCTX.g:8151:5: (lv_signal_9_0= 'signal' )
                    {
                    // InternalSCTX.g:8151:5: (lv_signal_9_0= 'signal' )
                    // InternalSCTX.g:8152:6: lv_signal_9_0= 'signal'
                    {
                    lv_signal_9_0=(Token)match(input,77,FollowSets000.FOLLOW_105); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_signal_9_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalSignalKeyword_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      						}
                      						setWithLastConsumed(current, "signal", true, "signal");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:8165:4: ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) )
                    {
                    // InternalSCTX.g:8165:4: ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) )
                    // InternalSCTX.g:8166:5: ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) )
                    {
                    // InternalSCTX.g:8166:5: ( (lv_type_10_0= ruleHostType ) )
                    // InternalSCTX.g:8167:6: (lv_type_10_0= ruleHostType )
                    {
                    // InternalSCTX.g:8167:6: (lv_type_10_0= ruleHostType )
                    // InternalSCTX.g:8168:7: lv_type_10_0= ruleHostType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getTypeHostTypeEnumRuleCall_7_2_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_48);
                    lv_type_10_0=ruleHostType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_10_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.HostType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:8185:5: ( (lv_hostType_11_0= RULE_STRING ) )
                    // InternalSCTX.g:8186:6: (lv_hostType_11_0= RULE_STRING )
                    {
                    // InternalSCTX.g:8186:6: (lv_hostType_11_0= RULE_STRING )
                    // InternalSCTX.g:8187:7: lv_hostType_11_0= RULE_STRING
                    {
                    lv_hostType_11_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_105); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_hostType_11_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getHostTypeSTRINGTerminalRuleCall_7_2_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"hostType",
                      								lv_hostType_11_0,
                      								"de.cau.cs.kieler.annotations.Annotations.STRING");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:8205:3: ( (lv_valuedObjects_12_0= ruleValuedObject ) )
            // InternalSCTX.g:8206:4: (lv_valuedObjects_12_0= ruleValuedObject )
            {
            // InternalSCTX.g:8206:4: (lv_valuedObjects_12_0= ruleValuedObject )
            // InternalSCTX.g:8207:5: lv_valuedObjects_12_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_8_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_104);
            lv_valuedObjects_12_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_12_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:8224:3: (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )*
            loop278:
            do {
                int alt278=2;
                alt278 = dfa278.predict(input);
                switch (alt278) {
            	case 1 :
            	    // InternalSCTX.g:8225:4: otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) )
            	    {
            	    otherlv_13=(Token)match(input,20,FollowSets000.FOLLOW_105); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_13, grammarAccess.getVariableDeclarationWOSemicolonAccess().getCommaKeyword_9_0());
            	      			
            	    }
            	    // InternalSCTX.g:8229:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) )
            	    // InternalSCTX.g:8230:5: (lv_valuedObjects_14_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:8230:5: (lv_valuedObjects_14_0= ruleValuedObject )
            	    // InternalSCTX.g:8231:6: lv_valuedObjects_14_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_9_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_104);
            	    lv_valuedObjects_14_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_14_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop278;
                }
            } while (true);

            // InternalSCTX.g:8249:3: ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
            int alt279=2;
            int LA279_0 = input.LA(1);

            if ( (LA279_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt279=1;
            }
            switch (alt279) {
                case 1 :
                    // InternalSCTX.g:8250:4: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:8250:4: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:8251:5: lv_annotations_15_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_10_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_15_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_15_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableDeclarationWOSemicolon"


    // $ANTLR start "entryRuleClassDeclaration"
    // InternalSCTX.g:8272:1: entryRuleClassDeclaration returns [EObject current=null] : iv_ruleClassDeclaration= ruleClassDeclaration EOF ;
    public final EObject entryRuleClassDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassDeclaration = null;


        try {
            // InternalSCTX.g:8272:57: (iv_ruleClassDeclaration= ruleClassDeclaration EOF )
            // InternalSCTX.g:8273:2: iv_ruleClassDeclaration= ruleClassDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleClassDeclaration=ruleClassDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassDeclaration"


    // $ANTLR start "ruleClassDeclaration"
    // InternalSCTX.g:8279:1: ruleClassDeclaration returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' ) | ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= RULE_ID ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}' ) ) ( ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )? otherlv_22= ';' ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleClassDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_const_3_0=null;
        Token lv_input_4_0=null;
        Token lv_output_5_0=null;
        Token lv_global_6_0=null;
        Token lv_static_7_0=null;
        Token lv_host_8_0=null;
        Token lv_name_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token lv_name_15_0=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_access_2_0 = null;

        Enumerator lv_type_9_0 = null;

        EObject lv_declarations_12_0 = null;

        Enumerator lv_type_14_0 = null;

        EObject lv_declarations_17_0 = null;

        EObject lv_valuedObjects_19_0 = null;

        EObject lv_valuedObjects_21_0 = null;

        EObject lv_annotations_23_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:8285:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' ) | ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= RULE_ID ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}' ) ) ( ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )? otherlv_22= ';' ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:8286:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' ) | ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= RULE_ID ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}' ) ) ( ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )? otherlv_22= ';' ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:8286:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' ) | ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= RULE_ID ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}' ) ) ( ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )? otherlv_22= ';' ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:8287:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' ) | ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= RULE_ID ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}' ) ) ( ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )? otherlv_22= ';' ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:8287:3: ()
            // InternalSCTX.g:8288:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getClassDeclarationAccess().getClassDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:8297:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop280:
            do {
                int alt280=2;
                int LA280_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA281_0==RULE_COMMENT_ANNOTATION||LA281_0==106) ) {
                    alt281=1;
=======
                if ( (LA280_0==RULE_COMMENT_ANNOTATION||LA280_0==102) ) {
                    alt280=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt280) {
            	case 1 :
            	    // InternalSCTX.g:8298:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:8298:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:8299:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getClassDeclarationAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_98);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop280;
                }
            } while (true);

            // InternalSCTX.g:8316:3: ( (lv_access_2_0= ruleAccessModifier ) )?
            int alt281=2;
            int LA281_0 = input.LA(1);

<<<<<<< HEAD
            if ( ((LA282_0>=155 && LA282_0<=157)) ) {
                alt282=1;
=======
            if ( ((LA281_0>=151 && LA281_0<=153)) ) {
                alt281=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            switch (alt281) {
                case 1 :
                    // InternalSCTX.g:8317:4: (lv_access_2_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:8317:4: (lv_access_2_0= ruleAccessModifier )
                    // InternalSCTX.g:8318:5: lv_access_2_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassDeclarationAccess().getAccessAccessModifierEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_98);
                    lv_access_2_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8335:3: ( (lv_const_3_0= 'const' ) )?
            int alt282=2;
            int LA282_0 = input.LA(1);

            if ( (LA282_0==60) ) {
                alt282=1;
            }
            switch (alt282) {
                case 1 :
                    // InternalSCTX.g:8336:4: (lv_const_3_0= 'const' )
                    {
                    // InternalSCTX.g:8336:4: (lv_const_3_0= 'const' )
                    // InternalSCTX.g:8337:5: lv_const_3_0= 'const'
                    {
                    lv_const_3_0=(Token)match(input,60,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_const_3_0, grammarAccess.getClassDeclarationAccess().getConstConstKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "const", true, "const");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8349:3: ( (lv_input_4_0= 'input' ) )?
            int alt283=2;
            int LA283_0 = input.LA(1);

            if ( (LA283_0==61) ) {
                alt283=1;
            }
            switch (alt283) {
                case 1 :
                    // InternalSCTX.g:8350:4: (lv_input_4_0= 'input' )
                    {
                    // InternalSCTX.g:8350:4: (lv_input_4_0= 'input' )
                    // InternalSCTX.g:8351:5: lv_input_4_0= 'input'
                    {
                    lv_input_4_0=(Token)match(input,61,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_input_4_0, grammarAccess.getClassDeclarationAccess().getInputInputKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "input", true, "input");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8363:3: ( (lv_output_5_0= 'output' ) )?
            int alt284=2;
            int LA284_0 = input.LA(1);

            if ( (LA284_0==62) ) {
                alt284=1;
            }
            switch (alt284) {
                case 1 :
                    // InternalSCTX.g:8364:4: (lv_output_5_0= 'output' )
                    {
                    // InternalSCTX.g:8364:4: (lv_output_5_0= 'output' )
                    // InternalSCTX.g:8365:5: lv_output_5_0= 'output'
                    {
                    lv_output_5_0=(Token)match(input,62,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_output_5_0, grammarAccess.getClassDeclarationAccess().getOutputOutputKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "output", true, "output");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8377:3: ( (lv_global_6_0= 'global' ) )?
            int alt285=2;
            int LA285_0 = input.LA(1);

            if ( (LA285_0==63) ) {
                alt285=1;
            }
            switch (alt285) {
                case 1 :
                    // InternalSCTX.g:8378:4: (lv_global_6_0= 'global' )
                    {
                    // InternalSCTX.g:8378:4: (lv_global_6_0= 'global' )
                    // InternalSCTX.g:8379:5: lv_global_6_0= 'global'
                    {
                    lv_global_6_0=(Token)match(input,63,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_global_6_0, grammarAccess.getClassDeclarationAccess().getGlobalGlobalKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "global", true, "global");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8391:3: ( (lv_static_7_0= 'static' ) )?
            int alt286=2;
            int LA286_0 = input.LA(1);

            if ( (LA286_0==64) ) {
                alt286=1;
            }
            switch (alt286) {
                case 1 :
                    // InternalSCTX.g:8392:4: (lv_static_7_0= 'static' )
                    {
                    // InternalSCTX.g:8392:4: (lv_static_7_0= 'static' )
                    // InternalSCTX.g:8393:5: lv_static_7_0= 'static'
                    {
                    lv_static_7_0=(Token)match(input,64,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_static_7_0, grammarAccess.getClassDeclarationAccess().getStaticStaticKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "static", true, "static");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8405:3: ( (lv_host_8_0= 'host' ) )?
            int alt287=2;
            int LA287_0 = input.LA(1);

            if ( (LA287_0==65) ) {
                alt287=1;
            }
            switch (alt287) {
                case 1 :
                    // InternalSCTX.g:8406:4: (lv_host_8_0= 'host' )
                    {
                    // InternalSCTX.g:8406:4: (lv_host_8_0= 'host' )
                    // InternalSCTX.g:8407:5: lv_host_8_0= 'host'
                    {
                    lv_host_8_0=(Token)match(input,65,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_host_8_0, grammarAccess.getClassDeclarationAccess().getHostHostKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "host", true, "host");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8419:3: ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' ) | ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= RULE_ID ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}' ) )
            int alt292=2;
            int LA292_0 = input.LA(1);

<<<<<<< HEAD
            if ( (LA293_0==151) ) {
                alt293=1;
            }
            else if ( (LA293_0==150) ) {
                alt293=2;
=======
            if ( (LA292_0==147) ) {
                alt292=1;
            }
            else if ( (LA292_0==146) ) {
                alt292=2;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 292, 0, input);

                throw nvae;
            }
            switch (alt292) {
                case 1 :
                    // InternalSCTX.g:8420:4: ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' )
                    {
                    // InternalSCTX.g:8420:4: ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' )
                    // InternalSCTX.g:8421:5: ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}'
                    {
                    // InternalSCTX.g:8421:5: ( (lv_type_9_0= ruleClassType ) )
                    // InternalSCTX.g:8422:6: (lv_type_9_0= ruleClassType )
                    {
                    // InternalSCTX.g:8422:6: (lv_type_9_0= ruleClassType )
                    // InternalSCTX.g:8423:7: lv_type_9_0= ruleClassType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getClassDeclarationAccess().getTypeClassTypeEnumRuleCall_9_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_26);
                    lv_type_9_0=ruleClassType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_9_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ClassType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:8440:5: ( (lv_name_10_0= RULE_ID ) )?
                    int alt288=2;
                    int LA288_0 = input.LA(1);

                    if ( (LA288_0==RULE_ID) ) {
                        alt288=1;
                    }
                    switch (alt288) {
                        case 1 :
                            // InternalSCTX.g:8441:6: (lv_name_10_0= RULE_ID )
                            {
                            // InternalSCTX.g:8441:6: (lv_name_10_0= RULE_ID )
                            // InternalSCTX.g:8442:7: lv_name_10_0= RULE_ID
                            {
                            lv_name_10_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_99); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_name_10_0, grammarAccess.getClassDeclarationAccess().getNameIDTerminalRuleCall_9_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassDeclarationRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"name",
                              								lv_name_10_0,
                              								"de.cau.cs.kieler.annotations.Annotations.ID");
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_11=(Token)match(input,21,FollowSets000.FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_11, grammarAccess.getClassDeclarationAccess().getLeftCurlyBracketKeyword_9_0_2());
                      				
                    }
                    // InternalSCTX.g:8462:5: ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )*
                    loop289:
                    do {
                        int alt289=2;
                        int LA289_0 = input.LA(1);

<<<<<<< HEAD
                        if ( (LA290_0==RULE_ID||LA290_0==RULE_COMMENT_ANNOTATION||LA290_0==29||(LA290_0>=61 && LA290_0<=66)||(LA290_0>=78 && LA290_0<=80)||LA290_0==106||(LA290_0>=116 && LA290_0<=121)||(LA290_0>=150 && LA290_0<=151)||(LA290_0>=155 && LA290_0<=158)) ) {
                            alt290=1;
=======
                        if ( (LA289_0==RULE_ID||LA289_0==RULE_COMMENT_ANNOTATION||LA289_0==29||(LA289_0>=60 && LA289_0<=65)||(LA289_0>=77 && LA289_0<=79)||LA289_0==102||(LA289_0>=112 && LA289_0<=117)||(LA289_0>=146 && LA289_0<=147)||(LA289_0>=151 && LA289_0<=154)) ) {
                            alt289=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        }


                        switch (alt289) {
                    	case 1 :
                    	    // InternalSCTX.g:8463:6: (lv_declarations_12_0= ruleDeclarationOrMethod )
                    	    {
                    	    // InternalSCTX.g:8463:6: (lv_declarations_12_0= ruleDeclarationOrMethod )
                    	    // InternalSCTX.g:8464:7: lv_declarations_12_0= ruleDeclarationOrMethod
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassDeclarationAccess().getDeclarationsDeclarationOrMethodParserRuleCall_9_0_3_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_101);
                    	    lv_declarations_12_0=ruleDeclarationOrMethod();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_12_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationOrMethod");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop289;
                        }
                    } while (true);

                    otherlv_13=(Token)match(input,22,FollowSets000.FOLLOW_156); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_13, grammarAccess.getClassDeclarationAccess().getRightCurlyBracketKeyword_9_0_4());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8487:4: ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= RULE_ID ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}' )
                    {
                    // InternalSCTX.g:8487:4: ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= RULE_ID ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}' )
                    // InternalSCTX.g:8488:5: ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= RULE_ID ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}'
                    {
                    // InternalSCTX.g:8488:5: ( (lv_type_14_0= ruleStructType ) )
                    // InternalSCTX.g:8489:6: (lv_type_14_0= ruleStructType )
                    {
                    // InternalSCTX.g:8489:6: (lv_type_14_0= ruleStructType )
                    // InternalSCTX.g:8490:7: lv_type_14_0= ruleStructType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getClassDeclarationAccess().getTypeStructTypeEnumRuleCall_9_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_26);
                    lv_type_14_0=ruleStructType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_14_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.StructType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:8507:5: ( (lv_name_15_0= RULE_ID ) )?
                    int alt290=2;
                    int LA290_0 = input.LA(1);

                    if ( (LA290_0==RULE_ID) ) {
                        alt290=1;
                    }
                    switch (alt290) {
                        case 1 :
                            // InternalSCTX.g:8508:6: (lv_name_15_0= RULE_ID )
                            {
                            // InternalSCTX.g:8508:6: (lv_name_15_0= RULE_ID )
                            // InternalSCTX.g:8509:7: lv_name_15_0= RULE_ID
                            {
                            lv_name_15_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_99); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_name_15_0, grammarAccess.getClassDeclarationAccess().getNameIDTerminalRuleCall_9_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassDeclarationRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"name",
                              								lv_name_15_0,
                              								"de.cau.cs.kieler.annotations.Annotations.ID");
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_16=(Token)match(input,21,FollowSets000.FOLLOW_103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_16, grammarAccess.getClassDeclarationAccess().getLeftCurlyBracketKeyword_9_1_2());
                      				
                    }
                    // InternalSCTX.g:8529:5: ( (lv_declarations_17_0= ruleDeclaration ) )*
                    loop291:
                    do {
                        int alt291=2;
                        int LA291_0 = input.LA(1);

<<<<<<< HEAD
                        if ( (LA292_0==RULE_COMMENT_ANNOTATION||LA292_0==29||(LA292_0>=61 && LA292_0<=66)||(LA292_0>=78 && LA292_0<=80)||LA292_0==106||(LA292_0>=116 && LA292_0<=121)||(LA292_0>=150 && LA292_0<=151)||(LA292_0>=155 && LA292_0<=157)) ) {
                            alt292=1;
=======
                        if ( (LA291_0==RULE_COMMENT_ANNOTATION||LA291_0==29||(LA291_0>=60 && LA291_0<=65)||(LA291_0>=77 && LA291_0<=79)||LA291_0==102||(LA291_0>=112 && LA291_0<=117)||(LA291_0>=146 && LA291_0<=147)||(LA291_0>=151 && LA291_0<=153)) ) {
                            alt291=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        }


                        switch (alt291) {
                    	case 1 :
                    	    // InternalSCTX.g:8530:6: (lv_declarations_17_0= ruleDeclaration )
                    	    {
                    	    // InternalSCTX.g:8530:6: (lv_declarations_17_0= ruleDeclaration )
                    	    // InternalSCTX.g:8531:7: lv_declarations_17_0= ruleDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassDeclarationAccess().getDeclarationsDeclarationParserRuleCall_9_1_3_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_103);
                    	    lv_declarations_17_0=ruleDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_17_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop291;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,22,FollowSets000.FOLLOW_156); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_18, grammarAccess.getClassDeclarationAccess().getRightCurlyBracketKeyword_9_1_4());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8554:3: ( ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )?
            int alt294=2;
            int LA294_0 = input.LA(1);

<<<<<<< HEAD
            if ( (LA295_0==RULE_ID||LA295_0==RULE_COMMENT_ANNOTATION||LA295_0==106) ) {
                alt295=1;
=======
            if ( (LA294_0==RULE_ID||LA294_0==RULE_COMMENT_ANNOTATION||LA294_0==102) ) {
                alt294=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            switch (alt294) {
                case 1 :
                    // InternalSCTX.g:8555:4: ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )*
                    {
                    // InternalSCTX.g:8555:4: ( (lv_valuedObjects_19_0= ruleValuedObject ) )
                    // InternalSCTX.g:8556:5: (lv_valuedObjects_19_0= ruleValuedObject )
                    {
                    // InternalSCTX.g:8556:5: (lv_valuedObjects_19_0= ruleValuedObject )
                    // InternalSCTX.g:8557:6: lv_valuedObjects_19_0= ruleValuedObject
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_10_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_155);
                    lv_valuedObjects_19_0=ruleValuedObject();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"valuedObjects",
                      							lv_valuedObjects_19_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:8574:4: (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )*
                    loop293:
                    do {
                        int alt293=2;
                        int LA293_0 = input.LA(1);

                        if ( (LA293_0==20) ) {
                            alt293=1;
                        }


                        switch (alt293) {
                    	case 1 :
                    	    // InternalSCTX.g:8575:5: otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) )
                    	    {
                    	    otherlv_20=(Token)match(input,20,FollowSets000.FOLLOW_105); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_20, grammarAccess.getClassDeclarationAccess().getCommaKeyword_10_1_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:8579:5: ( (lv_valuedObjects_21_0= ruleValuedObject ) )
                    	    // InternalSCTX.g:8580:6: (lv_valuedObjects_21_0= ruleValuedObject )
                    	    {
                    	    // InternalSCTX.g:8580:6: (lv_valuedObjects_21_0= ruleValuedObject )
                    	    // InternalSCTX.g:8581:7: lv_valuedObjects_21_0= ruleValuedObject
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_10_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_155);
                    	    lv_valuedObjects_21_0=ruleValuedObject();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"valuedObjects",
                    	      								lv_valuedObjects_21_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop293;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_22=(Token)match(input,42,FollowSets000.FOLLOW_146); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_22, grammarAccess.getClassDeclarationAccess().getSemicolonKeyword_11());
              		
            }
            // InternalSCTX.g:8604:3: ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )?
            int alt295=2;
            int LA295_0 = input.LA(1);

            if ( (LA295_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt295=1;
            }
            switch (alt295) {
                case 1 :
                    // InternalSCTX.g:8605:4: (lv_annotations_23_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:8605:4: (lv_annotations_23_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:8606:5: lv_annotations_23_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_12_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_23_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_23_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassDeclaration"


    // $ANTLR start "entryRuleDeclarationOrMethod"
    // InternalSCTX.g:8627:1: entryRuleDeclarationOrMethod returns [EObject current=null] : iv_ruleDeclarationOrMethod= ruleDeclarationOrMethod EOF ;
    public final EObject entryRuleDeclarationOrMethod() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclarationOrMethod = null;


        try {
            // InternalSCTX.g:8627:60: (iv_ruleDeclarationOrMethod= ruleDeclarationOrMethod EOF )
            // InternalSCTX.g:8628:2: iv_ruleDeclarationOrMethod= ruleDeclarationOrMethod EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationOrMethodRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclarationOrMethod=ruleDeclarationOrMethod();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclarationOrMethod; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclarationOrMethod"


    // $ANTLR start "ruleDeclarationOrMethod"
    // InternalSCTX.g:8634:1: ruleDeclarationOrMethod returns [EObject current=null] : (this_Declaration_0= ruleDeclaration | this_MethodDeclaration_1= ruleMethodDeclaration ) ;
    public final EObject ruleDeclarationOrMethod() throws RecognitionException {
        EObject current = null;

        EObject this_Declaration_0 = null;

        EObject this_MethodDeclaration_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:8640:2: ( (this_Declaration_0= ruleDeclaration | this_MethodDeclaration_1= ruleMethodDeclaration ) )
            // InternalSCTX.g:8641:2: (this_Declaration_0= ruleDeclaration | this_MethodDeclaration_1= ruleMethodDeclaration )
            {
            // InternalSCTX.g:8641:2: (this_Declaration_0= ruleDeclaration | this_MethodDeclaration_1= ruleMethodDeclaration )
            int alt296=2;
            alt296 = dfa296.predict(input);
            switch (alt296) {
                case 1 :
                    // InternalSCTX.g:8642:3: this_Declaration_0= ruleDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationOrMethodAccess().getDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Declaration_0=ruleDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Declaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8654:3: this_MethodDeclaration_1= ruleMethodDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationOrMethodAccess().getMethodDeclarationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MethodDeclaration_1=ruleMethodDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MethodDeclaration_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclarationOrMethod"


    // $ANTLR start "entryRuleDeclarationOrMethodWOSemicolon"
    // InternalSCTX.g:8669:1: entryRuleDeclarationOrMethodWOSemicolon returns [EObject current=null] : iv_ruleDeclarationOrMethodWOSemicolon= ruleDeclarationOrMethodWOSemicolon EOF ;
    public final EObject entryRuleDeclarationOrMethodWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclarationOrMethodWOSemicolon = null;


        try {
            // InternalSCTX.g:8669:71: (iv_ruleDeclarationOrMethodWOSemicolon= ruleDeclarationOrMethodWOSemicolon EOF )
            // InternalSCTX.g:8670:2: iv_ruleDeclarationOrMethodWOSemicolon= ruleDeclarationOrMethodWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationOrMethodWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclarationOrMethodWOSemicolon=ruleDeclarationOrMethodWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclarationOrMethodWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclarationOrMethodWOSemicolon"


    // $ANTLR start "ruleDeclarationOrMethodWOSemicolon"
    // InternalSCTX.g:8676:1: ruleDeclarationOrMethodWOSemicolon returns [EObject current=null] : (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_MethodDeclarationWOSemicolon_1= ruleMethodDeclarationWOSemicolon ) ;
    public final EObject ruleDeclarationOrMethodWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject this_DeclarationWOSemicolon_0 = null;

        EObject this_MethodDeclarationWOSemicolon_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:8682:2: ( (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_MethodDeclarationWOSemicolon_1= ruleMethodDeclarationWOSemicolon ) )
            // InternalSCTX.g:8683:2: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_MethodDeclarationWOSemicolon_1= ruleMethodDeclarationWOSemicolon )
            {
            // InternalSCTX.g:8683:2: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_MethodDeclarationWOSemicolon_1= ruleMethodDeclarationWOSemicolon )
            int alt297=2;
            alt297 = dfa297.predict(input);
            switch (alt297) {
                case 1 :
                    // InternalSCTX.g:8684:3: this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationOrMethodWOSemicolonAccess().getDeclarationWOSemicolonParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DeclarationWOSemicolon_0=ruleDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DeclarationWOSemicolon_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8696:3: this_MethodDeclarationWOSemicolon_1= ruleMethodDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationOrMethodWOSemicolonAccess().getMethodDeclarationWOSemicolonParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MethodDeclarationWOSemicolon_1=ruleMethodDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MethodDeclarationWOSemicolon_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclarationOrMethodWOSemicolon"


    // $ANTLR start "entryRuleNamespaceID"
    // InternalSCTX.g:8711:1: entryRuleNamespaceID returns [String current=null] : iv_ruleNamespaceID= ruleNamespaceID EOF ;
    public final String entryRuleNamespaceID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNamespaceID = null;


        try {
            // InternalSCTX.g:8711:51: (iv_ruleNamespaceID= ruleNamespaceID EOF )
            // InternalSCTX.g:8712:2: iv_ruleNamespaceID= ruleNamespaceID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNamespaceID=ruleNamespaceID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespaceID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamespaceID"


    // $ANTLR start "ruleNamespaceID"
    // InternalSCTX.g:8718:1: ruleNamespaceID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )* ) ;
    public final AntlrDatatypeRuleToken ruleNamespaceID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ExtendedID_0 = null;

        AntlrDatatypeRuleToken this_PrimeID_2 = null;



        	enterRule();

        try {
            // InternalSCTX.g:8724:2: ( (this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )* ) )
            // InternalSCTX.g:8725:2: (this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )* )
            {
            // InternalSCTX.g:8725:2: (this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )* )
            // InternalSCTX.g:8726:3: this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getNamespaceIDAccess().getExtendedIDParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_157);
            this_ExtendedID_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ExtendedID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:8736:3: (kw= ':' this_PrimeID_2= rulePrimeID )*
            loop298:
            do {
                int alt298=2;
                int LA298_0 = input.LA(1);

                if ( (LA298_0==48) ) {
                    alt298=1;
                }


                switch (alt298) {
            	case 1 :
            	    // InternalSCTX.g:8737:4: kw= ':' this_PrimeID_2= rulePrimeID
            	    {
            	    kw=(Token)match(input,48,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getNamespaceIDAccess().getColonKeyword_1_0());
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getNamespaceIDAccess().getPrimeIDParserRuleCall_1_1());
            	      			
            	    }
            	    pushFollow(FollowSets000.FOLLOW_157);
            	    this_PrimeID_2=rulePrimeID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_PrimeID_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop298;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceID"


    // $ANTLR start "entryRuleReferenceDeclaration"
    // InternalSCTX.g:8757:1: entryRuleReferenceDeclaration returns [EObject current=null] : iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF ;
    public final EObject entryRuleReferenceDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceDeclaration = null;


        try {
            // InternalSCTX.g:8757:61: (iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF )
            // InternalSCTX.g:8758:2: iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceDeclaration=ruleReferenceDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceDeclaration"


    // $ANTLR start "ruleReferenceDeclaration"
    // InternalSCTX.g:8764:1: ruleReferenceDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleReferenceDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        EObject lv_extern_5_0 = null;

        EObject lv_extern_7_0 = null;

        EObject lv_valuedObjects_8_0 = null;

        EObject lv_valuedObjects_10_0 = null;

        EObject lv_annotations_12_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:8770:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:8771:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:8771:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:8772:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:8772:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop299:
            do {
                int alt299=2;
                int LA299_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA300_0==RULE_COMMENT_ANNOTATION||LA300_0==106) ) {
                    alt300=1;
=======
                if ( (LA299_0==RULE_COMMENT_ANNOTATION||LA299_0==102) ) {
                    alt299=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt299) {
            	case 1 :
            	    // InternalSCTX.g:8773:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:8773:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:8774:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_158);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop299;
                }
            } while (true);

            // InternalSCTX.g:8791:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt300=2;
            int LA300_0 = input.LA(1);

<<<<<<< HEAD
            if ( ((LA301_0>=155 && LA301_0<=157)) ) {
                alt301=1;
=======
            if ( ((LA300_0>=151 && LA300_0<=153)) ) {
                alt300=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            switch (alt300) {
                case 1 :
                    // InternalSCTX.g:8792:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:8792:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalSCTX.g:8793:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_159);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8810:3: ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) )
            int alt302=2;
            int LA302_0 = input.LA(1);

            if ( (LA302_0==78) ) {
                alt302=1;
            }
            else if ( (LA302_0==79) ) {
                alt302=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 302, 0, input);

                throw nvae;
            }
            switch (alt302) {
                case 1 :
                    // InternalSCTX.g:8811:4: (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) )
                    {
                    // InternalSCTX.g:8811:4: (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) )
                    // InternalSCTX.g:8812:5: otherlv_2= 'ref' ( ( ruleNamespaceID ) )
                    {
                    otherlv_2=(Token)match(input,78,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getReferenceDeclarationAccess().getRefKeyword_2_0_0());
                      				
                    }
                    // InternalSCTX.g:8816:5: ( ( ruleNamespaceID ) )
                    // InternalSCTX.g:8817:6: ( ruleNamespaceID )
                    {
                    // InternalSCTX.g:8817:6: ( ruleNamespaceID )
                    // InternalSCTX.g:8818:7: ruleNamespaceID
                    {
                    if ( state.backtracking==0 ) {

                      							/* */
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getReferenceDeclarationRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getReferenceNamedObjectCrossReference_2_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_105);
                    ruleNamespaceID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8837:4: (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* )
                    {
                    // InternalSCTX.g:8837:4: (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* )
                    // InternalSCTX.g:8838:5: otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )*
                    {
                    otherlv_4=(Token)match(input,79,FollowSets000.FOLLOW_160); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getReferenceDeclarationAccess().getExternKeyword_2_1_0());
                      				
                    }
                    // InternalSCTX.g:8842:5: ( (lv_extern_5_0= ruleExternString ) )
                    // InternalSCTX.g:8843:6: (lv_extern_5_0= ruleExternString )
                    {
                    // InternalSCTX.g:8843:6: (lv_extern_5_0= ruleExternString )
                    // InternalSCTX.g:8844:7: lv_extern_5_0= ruleExternString
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getExternExternStringParserRuleCall_2_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_161);
                    lv_extern_5_0=ruleExternString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                      							}
                      							add(
                      								current,
                      								"extern",
                      								lv_extern_5_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:8861:5: (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )*
                    loop301:
                    do {
                        int alt301=2;
                        int LA301_0 = input.LA(1);

                        if ( (LA301_0==20) ) {
                            alt301=1;
                        }


                        switch (alt301) {
                    	case 1 :
                    	    // InternalSCTX.g:8862:6: otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,20,FollowSets000.FOLLOW_160); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_6, grammarAccess.getReferenceDeclarationAccess().getCommaKeyword_2_1_2_0());
                    	      					
                    	    }
                    	    // InternalSCTX.g:8866:6: ( (lv_extern_7_0= ruleExternString ) )
                    	    // InternalSCTX.g:8867:7: (lv_extern_7_0= ruleExternString )
                    	    {
                    	    // InternalSCTX.g:8867:7: (lv_extern_7_0= ruleExternString )
                    	    // InternalSCTX.g:8868:8: lv_extern_7_0= ruleExternString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getExternExternStringParserRuleCall_2_1_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_161);
                    	    lv_extern_7_0=ruleExternString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"extern",
                    	      									lv_extern_7_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop301;
                        }
                    } while (true);


                    }


                    }
                    break;

            }

            // InternalSCTX.g:8888:3: ( (lv_valuedObjects_8_0= ruleValuedObject ) )
            // InternalSCTX.g:8889:4: (lv_valuedObjects_8_0= ruleValuedObject )
            {
            // InternalSCTX.g:8889:4: (lv_valuedObjects_8_0= ruleValuedObject )
            // InternalSCTX.g:8890:5: lv_valuedObjects_8_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_155);
            lv_valuedObjects_8_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_8_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:8907:3: (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )*
            loop303:
            do {
                int alt303=2;
                int LA303_0 = input.LA(1);

                if ( (LA303_0==20) ) {
                    alt303=1;
                }


                switch (alt303) {
            	case 1 :
            	    // InternalSCTX.g:8908:4: otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    {
            	    otherlv_9=(Token)match(input,20,FollowSets000.FOLLOW_105); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_9, grammarAccess.getReferenceDeclarationAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalSCTX.g:8912:4: ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    // InternalSCTX.g:8913:5: (lv_valuedObjects_10_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:8913:5: (lv_valuedObjects_10_0= ruleValuedObject )
            	    // InternalSCTX.g:8914:6: lv_valuedObjects_10_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_155);
            	    lv_valuedObjects_10_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_10_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop303;
                }
            } while (true);

            otherlv_11=(Token)match(input,42,FollowSets000.FOLLOW_146); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getReferenceDeclarationAccess().getSemicolonKeyword_5());
              		
            }
            // InternalSCTX.g:8936:3: ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )?
            int alt304=2;
            int LA304_0 = input.LA(1);

            if ( (LA304_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt304=1;
            }
            switch (alt304) {
                case 1 :
                    // InternalSCTX.g:8937:4: (lv_annotations_12_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:8937:4: (lv_annotations_12_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:8938:5: lv_annotations_12_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_12_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_12_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceDeclaration"


    // $ANTLR start "entryRuleReferenceDeclarationWOSemicolon"
    // InternalSCTX.g:8959:1: entryRuleReferenceDeclarationWOSemicolon returns [EObject current=null] : iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF ;
    public final EObject entryRuleReferenceDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceDeclarationWOSemicolon = null;


        try {
            // InternalSCTX.g:8959:72: (iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF )
            // InternalSCTX.g:8960:2: iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceDeclarationWOSemicolon=ruleReferenceDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceDeclarationWOSemicolon"


    // $ANTLR start "ruleReferenceDeclarationWOSemicolon"
    // InternalSCTX.g:8966:1: ruleReferenceDeclarationWOSemicolon returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleReferenceDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        EObject lv_extern_5_0 = null;

        EObject lv_extern_7_0 = null;

        EObject lv_valuedObjects_8_0 = null;

        EObject lv_valuedObjects_10_0 = null;

        EObject lv_annotations_11_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:8972:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:8973:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:8973:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:8974:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:8974:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop305:
            do {
                int alt305=2;
                int LA305_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA306_0==RULE_COMMENT_ANNOTATION||LA306_0==106) ) {
                    alt306=1;
=======
                if ( (LA305_0==RULE_COMMENT_ANNOTATION||LA305_0==102) ) {
                    alt305=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt305) {
            	case 1 :
            	    // InternalSCTX.g:8975:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:8975:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:8976:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_158);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop305;
                }
            } while (true);

            // InternalSCTX.g:8993:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt306=2;
            int LA306_0 = input.LA(1);

<<<<<<< HEAD
            if ( ((LA307_0>=155 && LA307_0<=157)) ) {
                alt307=1;
=======
            if ( ((LA306_0>=151 && LA306_0<=153)) ) {
                alt306=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            switch (alt306) {
                case 1 :
                    // InternalSCTX.g:8994:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:8994:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalSCTX.g:8995:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_159);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:9012:3: ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) )
            int alt308=2;
            int LA308_0 = input.LA(1);

            if ( (LA308_0==78) ) {
                alt308=1;
            }
            else if ( (LA308_0==79) ) {
                alt308=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 308, 0, input);

                throw nvae;
            }
            switch (alt308) {
                case 1 :
                    // InternalSCTX.g:9013:4: (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) )
                    {
                    // InternalSCTX.g:9013:4: (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) )
                    // InternalSCTX.g:9014:5: otherlv_2= 'ref' ( ( ruleNamespaceID ) )
                    {
                    otherlv_2=(Token)match(input,78,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getRefKeyword_2_0_0());
                      				
                    }
                    // InternalSCTX.g:9018:5: ( ( ruleNamespaceID ) )
                    // InternalSCTX.g:9019:6: ( ruleNamespaceID )
                    {
                    // InternalSCTX.g:9019:6: ( ruleNamespaceID )
                    // InternalSCTX.g:9020:7: ruleNamespaceID
                    {
                    if ( state.backtracking==0 ) {

                      							/* */
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getReferenceNamedObjectCrossReference_2_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_105);
                    ruleNamespaceID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:9039:4: (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* )
                    {
                    // InternalSCTX.g:9039:4: (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* )
                    // InternalSCTX.g:9040:5: otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )*
                    {
                    otherlv_4=(Token)match(input,79,FollowSets000.FOLLOW_160); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternKeyword_2_1_0());
                      				
                    }
                    // InternalSCTX.g:9044:5: ( (lv_extern_5_0= ruleExternString ) )
                    // InternalSCTX.g:9045:6: (lv_extern_5_0= ruleExternString )
                    {
                    // InternalSCTX.g:9045:6: (lv_extern_5_0= ruleExternString )
                    // InternalSCTX.g:9046:7: lv_extern_5_0= ruleExternString
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternExternStringParserRuleCall_2_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_161);
                    lv_extern_5_0=ruleExternString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      							}
                      							add(
                      								current,
                      								"extern",
                      								lv_extern_5_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:9063:5: (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )*
                    loop307:
                    do {
                        int alt307=2;
                        int LA307_0 = input.LA(1);

                        if ( (LA307_0==20) ) {
                            alt307=1;
                        }


                        switch (alt307) {
                    	case 1 :
                    	    // InternalSCTX.g:9064:6: otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,20,FollowSets000.FOLLOW_160); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_6, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getCommaKeyword_2_1_2_0());
                    	      					
                    	    }
                    	    // InternalSCTX.g:9068:6: ( (lv_extern_7_0= ruleExternString ) )
                    	    // InternalSCTX.g:9069:7: (lv_extern_7_0= ruleExternString )
                    	    {
                    	    // InternalSCTX.g:9069:7: (lv_extern_7_0= ruleExternString )
                    	    // InternalSCTX.g:9070:8: lv_extern_7_0= ruleExternString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternExternStringParserRuleCall_2_1_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_161);
                    	    lv_extern_7_0=ruleExternString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"extern",
                    	      									lv_extern_7_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop307;
                        }
                    } while (true);


                    }


                    }
                    break;

            }

            // InternalSCTX.g:9090:3: ( (lv_valuedObjects_8_0= ruleValuedObject ) )
            // InternalSCTX.g:9091:4: (lv_valuedObjects_8_0= ruleValuedObject )
            {
            // InternalSCTX.g:9091:4: (lv_valuedObjects_8_0= ruleValuedObject )
            // InternalSCTX.g:9092:5: lv_valuedObjects_8_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_104);
            lv_valuedObjects_8_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_8_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:9109:3: (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )*
            loop309:
            do {
                int alt309=2;
                int LA309_0 = input.LA(1);

                if ( (LA309_0==20) ) {
                    alt309=1;
                }


                switch (alt309) {
            	case 1 :
            	    // InternalSCTX.g:9110:4: otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    {
            	    otherlv_9=(Token)match(input,20,FollowSets000.FOLLOW_105); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_9, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalSCTX.g:9114:4: ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    // InternalSCTX.g:9115:5: (lv_valuedObjects_10_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:9115:5: (lv_valuedObjects_10_0= ruleValuedObject )
            	    // InternalSCTX.g:9116:6: lv_valuedObjects_10_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_104);
            	    lv_valuedObjects_10_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_10_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop309;
                }
            } while (true);

            // InternalSCTX.g:9134:3: ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )?
            int alt310=2;
            int LA310_0 = input.LA(1);

            if ( (LA310_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt310=1;
            }
            switch (alt310) {
                case 1 :
                    // InternalSCTX.g:9135:4: (lv_annotations_11_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:9135:4: (lv_annotations_11_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:9136:5: lv_annotations_11_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_11_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_11_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceDeclarationWOSemicolon"


    // $ANTLR start "entryRuleExternString"
    // InternalSCTX.g:9157:1: entryRuleExternString returns [EObject current=null] : iv_ruleExternString= ruleExternString EOF ;
    public final EObject entryRuleExternString() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExternString = null;


        try {
            // InternalSCTX.g:9157:53: (iv_ruleExternString= ruleExternString EOF )
            // InternalSCTX.g:9158:2: iv_ruleExternString= ruleExternString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExternStringRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExternString=ruleExternString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExternString; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExternString"


    // $ANTLR start "ruleExternString"
    // InternalSCTX.g:9164:1: ruleExternString returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleExternString() throws RecognitionException {
        EObject current = null;

        Token lv_code_1_0=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:9170:2: ( ( ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) ) ) )
            // InternalSCTX.g:9171:2: ( ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) ) )
            {
            // InternalSCTX.g:9171:2: ( ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) ) )
            // InternalSCTX.g:9172:3: ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) )
            {
            // InternalSCTX.g:9172:3: ( (lv_annotations_0_0= ruleTagAnnotation ) )*
            loop311:
            do {
                int alt311=2;
                int LA311_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA312_0==106) ) {
                    alt312=1;
=======
                if ( (LA311_0==102) ) {
                    alt311=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt311) {
            	case 1 :
            	    // InternalSCTX.g:9173:4: (lv_annotations_0_0= ruleTagAnnotation )
            	    {
            	    // InternalSCTX.g:9173:4: (lv_annotations_0_0= ruleTagAnnotation )
            	    // InternalSCTX.g:9174:5: lv_annotations_0_0= ruleTagAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getExternStringAccess().getAnnotationsTagAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_160);
            	    lv_annotations_0_0=ruleTagAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getExternStringRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.TagAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop311;
                }
            } while (true);

            // InternalSCTX.g:9191:3: ( (lv_code_1_0= RULE_STRING ) )
            // InternalSCTX.g:9192:4: (lv_code_1_0= RULE_STRING )
            {
            // InternalSCTX.g:9192:4: (lv_code_1_0= RULE_STRING )
            // InternalSCTX.g:9193:5: lv_code_1_0= RULE_STRING
            {
            lv_code_1_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_code_1_0, grammarAccess.getExternStringAccess().getCodeSTRINGTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getExternStringRule());
              					}
              					setWithLastConsumed(
              						current,
              						"code",
              						lv_code_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.STRING");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExternString"


    // $ANTLR start "entryRuleScheduleDeclaration"
    // InternalSCTX.g:9213:1: entryRuleScheduleDeclaration returns [EObject current=null] : iv_ruleScheduleDeclaration= ruleScheduleDeclaration EOF ;
    public final EObject entryRuleScheduleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScheduleDeclaration = null;


        try {
            // InternalSCTX.g:9213:60: (iv_ruleScheduleDeclaration= ruleScheduleDeclaration EOF )
            // InternalSCTX.g:9214:2: iv_ruleScheduleDeclaration= ruleScheduleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScheduleDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScheduleDeclaration=ruleScheduleDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScheduleDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScheduleDeclaration"


    // $ANTLR start "ruleScheduleDeclaration"
    // InternalSCTX.g:9220:1: ruleScheduleDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleScheduleDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        Enumerator lv_global_5_0 = null;

        Enumerator lv_priorities_7_0 = null;

        Enumerator lv_priorities_9_0 = null;

        EObject lv_valuedObjects_11_0 = null;

        EObject lv_valuedObjects_13_0 = null;

        EObject lv_annotations_15_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:9226:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:9227:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:9227:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:9228:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:9228:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop312:
            do {
                int alt312=2;
                int LA312_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA313_0==RULE_COMMENT_ANNOTATION||LA313_0==106) ) {
                    alt313=1;
=======
                if ( (LA312_0==RULE_COMMENT_ANNOTATION||LA312_0==102) ) {
                    alt312=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt312) {
            	case 1 :
            	    // InternalSCTX.g:9229:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:9229:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:9230:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_162);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop312;
                }
            } while (true);

            // InternalSCTX.g:9247:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt313=2;
            int LA313_0 = input.LA(1);

<<<<<<< HEAD
            if ( ((LA314_0>=155 && LA314_0<=157)) ) {
                alt314=1;
=======
            if ( ((LA313_0>=151 && LA313_0<=153)) ) {
                alt313=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            switch (alt313) {
                case 1 :
                    // InternalSCTX.g:9248:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:9248:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalSCTX.g:9249:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_163);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,29,FollowSets000.FOLLOW_164); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getScheduleDeclarationAccess().getScheduleKeyword_2());
              		
            }
            // InternalSCTX.g:9270:3: ( (lv_name_3_0= RULE_STRING ) )?
            int alt314=2;
            int LA314_0 = input.LA(1);

            if ( (LA314_0==RULE_STRING) ) {
                alt314=1;
            }
            switch (alt314) {
                case 1 :
                    // InternalSCTX.g:9271:4: (lv_name_3_0= RULE_STRING )
                    {
                    // InternalSCTX.g:9271:4: (lv_name_3_0= RULE_STRING )
                    // InternalSCTX.g:9272:5: lv_name_3_0= RULE_STRING
                    {
                    lv_name_3_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_165); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_3_0, grammarAccess.getScheduleDeclarationAccess().getNameSTRINGTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getScheduleDeclarationRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_3_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:9288:3: (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )?
            int alt315=2;
            int LA315_0 = input.LA(1);

            if ( (LA315_0==63) ) {
                alt315=1;
            }
            switch (alt315) {
                case 1 :
                    // InternalSCTX.g:9289:4: otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) )
                    {
                    otherlv_4=(Token)match(input,63,FollowSets000.FOLLOW_166); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getScheduleDeclarationAccess().getGlobalKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:9293:4: ( (lv_global_5_0= rulePriorityProtocol ) )
                    // InternalSCTX.g:9294:5: (lv_global_5_0= rulePriorityProtocol )
                    {
                    // InternalSCTX.g:9294:5: (lv_global_5_0= rulePriorityProtocol )
                    // InternalSCTX.g:9295:6: lv_global_5_0= rulePriorityProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getGlobalPriorityProtocolEnumRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_167);
                    lv_global_5_0=rulePriorityProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"global",
                      							lv_global_5_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:9313:3: (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )?
            int alt317=2;
            int LA317_0 = input.LA(1);

            if ( (LA317_0==21) ) {
                alt317=1;
            }
            switch (alt317) {
                case 1 :
                    // InternalSCTX.g:9314:4: otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}'
                    {
                    otherlv_6=(Token)match(input,21,FollowSets000.FOLLOW_166); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getScheduleDeclarationAccess().getLeftCurlyBracketKeyword_5_0());
                      			
                    }
                    // InternalSCTX.g:9318:4: ( (lv_priorities_7_0= rulePriorityProtocol ) )
                    // InternalSCTX.g:9319:5: (lv_priorities_7_0= rulePriorityProtocol )
                    {
                    // InternalSCTX.g:9319:5: (lv_priorities_7_0= rulePriorityProtocol )
                    // InternalSCTX.g:9320:6: lv_priorities_7_0= rulePriorityProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_168);
                    lv_priorities_7_0=rulePriorityProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"priorities",
                      							lv_priorities_7_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:9337:4: (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )*
                    loop316:
                    do {
                        int alt316=2;
                        int LA316_0 = input.LA(1);

                        if ( (LA316_0==20) ) {
                            alt316=1;
                        }


                        switch (alt316) {
                    	case 1 :
                    	    // InternalSCTX.g:9338:5: otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) )
                    	    {
                    	    otherlv_8=(Token)match(input,20,FollowSets000.FOLLOW_166); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getScheduleDeclarationAccess().getCommaKeyword_5_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:9342:5: ( (lv_priorities_9_0= rulePriorityProtocol ) )
                    	    // InternalSCTX.g:9343:6: (lv_priorities_9_0= rulePriorityProtocol )
                    	    {
                    	    // InternalSCTX.g:9343:6: (lv_priorities_9_0= rulePriorityProtocol )
                    	    // InternalSCTX.g:9344:7: lv_priorities_9_0= rulePriorityProtocol
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_168);
                    	    lv_priorities_9_0=rulePriorityProtocol();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"priorities",
                    	      								lv_priorities_9_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop316;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,22,FollowSets000.FOLLOW_105); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getScheduleDeclarationAccess().getRightCurlyBracketKeyword_5_3());
                      			
                    }

                    }
                    break;

            }

            // InternalSCTX.g:9367:3: ( (lv_valuedObjects_11_0= ruleValuedObject ) )
            // InternalSCTX.g:9368:4: (lv_valuedObjects_11_0= ruleValuedObject )
            {
            // InternalSCTX.g:9368:4: (lv_valuedObjects_11_0= ruleValuedObject )
            // InternalSCTX.g:9369:5: lv_valuedObjects_11_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_6_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_155);
            lv_valuedObjects_11_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_11_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:9386:3: (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )*
            loop318:
            do {
                int alt318=2;
                int LA318_0 = input.LA(1);

                if ( (LA318_0==20) ) {
                    alt318=1;
                }


                switch (alt318) {
            	case 1 :
            	    // InternalSCTX.g:9387:4: otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) )
            	    {
            	    otherlv_12=(Token)match(input,20,FollowSets000.FOLLOW_105); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_12, grammarAccess.getScheduleDeclarationAccess().getCommaKeyword_7_0());
            	      			
            	    }
            	    // InternalSCTX.g:9391:4: ( (lv_valuedObjects_13_0= ruleValuedObject ) )
            	    // InternalSCTX.g:9392:5: (lv_valuedObjects_13_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:9392:5: (lv_valuedObjects_13_0= ruleValuedObject )
            	    // InternalSCTX.g:9393:6: lv_valuedObjects_13_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_7_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_155);
            	    lv_valuedObjects_13_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_13_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop318;
                }
            } while (true);

            otherlv_14=(Token)match(input,42,FollowSets000.FOLLOW_146); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_14, grammarAccess.getScheduleDeclarationAccess().getSemicolonKeyword_8());
              		
            }
            // InternalSCTX.g:9415:3: ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
            int alt319=2;
            int LA319_0 = input.LA(1);

            if ( (LA319_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt319=1;
            }
            switch (alt319) {
                case 1 :
                    // InternalSCTX.g:9416:4: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:9416:4: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:9417:5: lv_annotations_15_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_9_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_15_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_15_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScheduleDeclaration"


    // $ANTLR start "entryRuleScheduleDeclarationWOSemicolon"
    // InternalSCTX.g:9438:1: entryRuleScheduleDeclarationWOSemicolon returns [EObject current=null] : iv_ruleScheduleDeclarationWOSemicolon= ruleScheduleDeclarationWOSemicolon EOF ;
    public final EObject entryRuleScheduleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScheduleDeclarationWOSemicolon = null;


        try {
            // InternalSCTX.g:9438:71: (iv_ruleScheduleDeclarationWOSemicolon= ruleScheduleDeclarationWOSemicolon EOF )
            // InternalSCTX.g:9439:2: iv_ruleScheduleDeclarationWOSemicolon= ruleScheduleDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScheduleDeclarationWOSemicolon=ruleScheduleDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScheduleDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScheduleDeclarationWOSemicolon"


    // $ANTLR start "ruleScheduleDeclarationWOSemicolon"
    // InternalSCTX.g:9445:1: ruleScheduleDeclarationWOSemicolon returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleScheduleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        Enumerator lv_global_5_0 = null;

        Enumerator lv_priorities_7_0 = null;

        Enumerator lv_priorities_9_0 = null;

        EObject lv_valuedObjects_11_0 = null;

        EObject lv_valuedObjects_13_0 = null;

        EObject lv_annotations_14_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:9451:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:9452:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:9452:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:9453:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:9453:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop320:
            do {
                int alt320=2;
                int LA320_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA321_0==RULE_COMMENT_ANNOTATION||LA321_0==106) ) {
                    alt321=1;
=======
                if ( (LA320_0==RULE_COMMENT_ANNOTATION||LA320_0==102) ) {
                    alt320=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt320) {
            	case 1 :
            	    // InternalSCTX.g:9454:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:9454:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:9455:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_162);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop320;
                }
            } while (true);

            // InternalSCTX.g:9472:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt321=2;
            int LA321_0 = input.LA(1);

<<<<<<< HEAD
            if ( ((LA322_0>=155 && LA322_0<=157)) ) {
                alt322=1;
=======
            if ( ((LA321_0>=151 && LA321_0<=153)) ) {
                alt321=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            switch (alt321) {
                case 1 :
                    // InternalSCTX.g:9473:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:9473:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalSCTX.g:9474:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_163);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,29,FollowSets000.FOLLOW_164); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getScheduleKeyword_2());
              		
            }
            // InternalSCTX.g:9495:3: ( (lv_name_3_0= RULE_STRING ) )?
            int alt322=2;
            int LA322_0 = input.LA(1);

            if ( (LA322_0==RULE_STRING) ) {
                alt322=1;
            }
            switch (alt322) {
                case 1 :
                    // InternalSCTX.g:9496:4: (lv_name_3_0= RULE_STRING )
                    {
                    // InternalSCTX.g:9496:4: (lv_name_3_0= RULE_STRING )
                    // InternalSCTX.g:9497:5: lv_name_3_0= RULE_STRING
                    {
                    lv_name_3_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_165); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_3_0, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getNameSTRINGTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_3_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:9513:3: (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )?
            int alt323=2;
            int LA323_0 = input.LA(1);

            if ( (LA323_0==63) ) {
                alt323=1;
            }
            switch (alt323) {
                case 1 :
                    // InternalSCTX.g:9514:4: otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) )
                    {
                    otherlv_4=(Token)match(input,63,FollowSets000.FOLLOW_166); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getGlobalKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:9518:4: ( (lv_global_5_0= rulePriorityProtocol ) )
                    // InternalSCTX.g:9519:5: (lv_global_5_0= rulePriorityProtocol )
                    {
                    // InternalSCTX.g:9519:5: (lv_global_5_0= rulePriorityProtocol )
                    // InternalSCTX.g:9520:6: lv_global_5_0= rulePriorityProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getGlobalPriorityProtocolEnumRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_167);
                    lv_global_5_0=rulePriorityProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      						}
                      						set(
                      							current,
                      							"global",
                      							lv_global_5_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:9538:3: (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )?
            int alt325=2;
            int LA325_0 = input.LA(1);

            if ( (LA325_0==21) ) {
                alt325=1;
            }
            switch (alt325) {
                case 1 :
                    // InternalSCTX.g:9539:4: otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}'
                    {
                    otherlv_6=(Token)match(input,21,FollowSets000.FOLLOW_166); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_5_0());
                      			
                    }
                    // InternalSCTX.g:9543:4: ( (lv_priorities_7_0= rulePriorityProtocol ) )
                    // InternalSCTX.g:9544:5: (lv_priorities_7_0= rulePriorityProtocol )
                    {
                    // InternalSCTX.g:9544:5: (lv_priorities_7_0= rulePriorityProtocol )
                    // InternalSCTX.g:9545:6: lv_priorities_7_0= rulePriorityProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_168);
                    lv_priorities_7_0=rulePriorityProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      						}
                      						add(
                      							current,
                      							"priorities",
                      							lv_priorities_7_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:9562:4: (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )*
                    loop324:
                    do {
                        int alt324=2;
                        int LA324_0 = input.LA(1);

                        if ( (LA324_0==20) ) {
                            alt324=1;
                        }


                        switch (alt324) {
                    	case 1 :
                    	    // InternalSCTX.g:9563:5: otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) )
                    	    {
                    	    otherlv_8=(Token)match(input,20,FollowSets000.FOLLOW_166); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getCommaKeyword_5_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:9567:5: ( (lv_priorities_9_0= rulePriorityProtocol ) )
                    	    // InternalSCTX.g:9568:6: (lv_priorities_9_0= rulePriorityProtocol )
                    	    {
                    	    // InternalSCTX.g:9568:6: (lv_priorities_9_0= rulePriorityProtocol )
                    	    // InternalSCTX.g:9569:7: lv_priorities_9_0= rulePriorityProtocol
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_168);
                    	    lv_priorities_9_0=rulePriorityProtocol();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"priorities",
                    	      								lv_priorities_9_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop324;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,22,FollowSets000.FOLLOW_105); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_5_3());
                      			
                    }

                    }
                    break;

            }

            // InternalSCTX.g:9592:3: ( (lv_valuedObjects_11_0= ruleValuedObject ) )
            // InternalSCTX.g:9593:4: (lv_valuedObjects_11_0= ruleValuedObject )
            {
            // InternalSCTX.g:9593:4: (lv_valuedObjects_11_0= ruleValuedObject )
            // InternalSCTX.g:9594:5: lv_valuedObjects_11_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_6_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_104);
            lv_valuedObjects_11_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_11_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:9611:3: (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )*
            loop326:
            do {
                int alt326=2;
                int LA326_0 = input.LA(1);

                if ( (LA326_0==20) ) {
                    alt326=1;
                }


                switch (alt326) {
            	case 1 :
            	    // InternalSCTX.g:9612:4: otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) )
            	    {
            	    otherlv_12=(Token)match(input,20,FollowSets000.FOLLOW_105); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_12, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getCommaKeyword_7_0());
            	      			
            	    }
            	    // InternalSCTX.g:9616:4: ( (lv_valuedObjects_13_0= ruleValuedObject ) )
            	    // InternalSCTX.g:9617:5: (lv_valuedObjects_13_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:9617:5: (lv_valuedObjects_13_0= ruleValuedObject )
            	    // InternalSCTX.g:9618:6: lv_valuedObjects_13_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_7_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_104);
            	    lv_valuedObjects_13_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_13_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop326;
                }
            } while (true);

            // InternalSCTX.g:9636:3: ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )?
            int alt327=2;
            int LA327_0 = input.LA(1);

            if ( (LA327_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt327=1;
            }
            switch (alt327) {
                case 1 :
                    // InternalSCTX.g:9637:4: (lv_annotations_14_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:9637:4: (lv_annotations_14_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:9638:5: lv_annotations_14_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_14_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_14_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScheduleDeclarationWOSemicolon"


    // $ANTLR start "entryRuleValuedObject"
    // InternalSCTX.g:9659:1: entryRuleValuedObject returns [EObject current=null] : iv_ruleValuedObject= ruleValuedObject EOF ;
    public final EObject entryRuleValuedObject() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObject = null;


        try {
            // InternalSCTX.g:9659:53: (iv_ruleValuedObject= ruleValuedObject EOF )
            // InternalSCTX.g:9660:2: iv_ruleValuedObject= ruleValuedObject EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObject=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObject; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObject"


    // $ANTLR start "ruleValuedObject"
<<<<<<< HEAD
    // InternalSCTX.g:9744:1: ruleValuedObject returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )? ) ;
=======
    // InternalSCTX.g:9666:1: ruleValuedObject returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleValuedObject() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token lv_label_10_0=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_cardinalities_3_0 = null;

        EObject lv_initialValue_6_0 = null;

        Enumerator lv_combineOperator_8_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:9750:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:9751:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:9751:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:9752:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )?
=======
            // InternalSCTX.g:9672:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? ) )
            // InternalSCTX.g:9673:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? )
            {
            // InternalSCTX.g:9673:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? )
            // InternalSCTX.g:9674:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )?
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            // InternalSCTX.g:9674:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop328:
            do {
                int alt328=2;
                int LA328_0 = input.LA(1);

<<<<<<< HEAD
                if ( (LA329_0==RULE_COMMENT_ANNOTATION||LA329_0==106) ) {
                    alt329=1;
=======
                if ( (LA328_0==RULE_COMMENT_ANNOTATION||LA328_0==102) ) {
                    alt328=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }


                switch (alt328) {
            	case 1 :
            	    // InternalSCTX.g:9675:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalSCTX.g:9675:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalSCTX.g:9676:5: lv_annotations_0_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getValuedObjectAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_105);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getValuedObjectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop328;
                }
            } while (true);

            // InternalSCTX.g:9693:3: ( (lv_name_1_0= rulePrimeID ) )
            // InternalSCTX.g:9694:4: (lv_name_1_0= rulePrimeID )
            {
            // InternalSCTX.g:9694:4: (lv_name_1_0= rulePrimeID )
            // InternalSCTX.g:9695:5: lv_name_1_0= rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedObjectAccess().getNamePrimeIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_169);
            lv_name_1_0=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValuedObjectRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:9712:3: (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )*
            loop329:
            do {
                int alt329=2;
                int LA329_0 = input.LA(1);

                if ( (LA329_0==36) ) {
                    alt329=1;
                }


                switch (alt329) {
            	case 1 :
            	    // InternalSCTX.g:9713:4: otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']'
            	    {
            	    otherlv_2=(Token)match(input,36,FollowSets000.FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getValuedObjectAccess().getLeftSquareBracketKeyword_2_0());
            	      			
            	    }
            	    // InternalSCTX.g:9717:4: ( (lv_cardinalities_3_0= ruleExpression ) )
            	    // InternalSCTX.g:9718:5: (lv_cardinalities_3_0= ruleExpression )
            	    {
            	    // InternalSCTX.g:9718:5: (lv_cardinalities_3_0= ruleExpression )
            	    // InternalSCTX.g:9719:6: lv_cardinalities_3_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getValuedObjectAccess().getCardinalitiesExpressionParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    lv_cardinalities_3_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getValuedObjectRule());
            	      						}
            	      						add(
            	      							current,
            	      							"cardinalities",
            	      							lv_cardinalities_3_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,37,FollowSets000.FOLLOW_169); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getValuedObjectAccess().getRightSquareBracketKeyword_2_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop329;
                }
            } while (true);

            // InternalSCTX.g:9741:3: (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )?
            int alt330=2;
            int LA330_0 = input.LA(1);

            if ( (LA330_0==80) ) {
                alt330=1;
            }
            switch (alt330) {
                case 1 :
                    // InternalSCTX.g:9742:4: otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) )
                    {
                    otherlv_5=(Token)match(input,80,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getValuedObjectAccess().getEqualsSignKeyword_3_0());
                      			
                    }
                    // InternalSCTX.g:9746:4: ( (lv_initialValue_6_0= ruleExpression ) )
                    // InternalSCTX.g:9747:5: (lv_initialValue_6_0= ruleExpression )
                    {
                    // InternalSCTX.g:9747:5: (lv_initialValue_6_0= ruleExpression )
                    // InternalSCTX.g:9748:6: lv_initialValue_6_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectAccess().getInitialValueExpressionParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_170);
                    lv_initialValue_6_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectRule());
                      						}
                      						set(
                      							current,
                      							"initialValue",
                      							lv_initialValue_6_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:9766:3: (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )?
            int alt331=2;
            int LA331_0 = input.LA(1);

            if ( (LA331_0==81) ) {
                alt331=1;
            }
            switch (alt331) {
                case 1 :
                    // InternalSCTX.g:9767:4: otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) )
                    {
                    otherlv_7=(Token)match(input,81,FollowSets000.FOLLOW_171); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getValuedObjectAccess().getCombineKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:9771:4: ( (lv_combineOperator_8_0= ruleCombineOperator ) )
                    // InternalSCTX.g:9772:5: (lv_combineOperator_8_0= ruleCombineOperator )
                    {
                    // InternalSCTX.g:9772:5: (lv_combineOperator_8_0= ruleCombineOperator )
                    // InternalSCTX.g:9773:6: lv_combineOperator_8_0= ruleCombineOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectAccess().getCombineOperatorCombineOperatorEnumRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_47);
                    lv_combineOperator_8_0=ruleCombineOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectRule());
                      						}
                      						set(
                      							current,
                      							"combineOperator",
                      							lv_combineOperator_8_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.CombineOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:9869:3: (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )?
            int alt333=2;
            int LA333_0 = input.LA(1);

            if ( (LA333_0==44) ) {
                alt333=1;
            }
            switch (alt333) {
                case 1 :
                    // InternalSCTX.g:9870:4: otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) )
                    {
                    otherlv_9=(Token)match(input,44,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getValuedObjectAccess().getLabelKeyword_5_0());
                      			
                    }
                    // InternalSCTX.g:9874:4: ( (lv_label_10_0= RULE_STRING ) )
                    // InternalSCTX.g:9875:5: (lv_label_10_0= RULE_STRING )
                    {
                    // InternalSCTX.g:9875:5: (lv_label_10_0= RULE_STRING )
                    // InternalSCTX.g:9876:6: lv_label_10_0= RULE_STRING
                    {
                    lv_label_10_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_10_0, grammarAccess.getValuedObjectAccess().getLabelSTRINGTerminalRuleCall_5_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getValuedObjectRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_10_0,
                      							"de.cau.cs.kieler.annotations.Annotations.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObject"


    // $ANTLR start "entryRuleSimpleValuedObject"
<<<<<<< HEAD
    // InternalSCTX.g:9897:1: entryRuleSimpleValuedObject returns [EObject current=null] : iv_ruleSimpleValuedObject= ruleSimpleValuedObject EOF ;
=======
    // InternalSCTX.g:9795:1: entryRuleSimpleValuedObject returns [EObject current=null] : iv_ruleSimpleValuedObject= ruleSimpleValuedObject EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleSimpleValuedObject() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleValuedObject = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:9897:59: (iv_ruleSimpleValuedObject= ruleSimpleValuedObject EOF )
            // InternalSCTX.g:9898:2: iv_ruleSimpleValuedObject= ruleSimpleValuedObject EOF
=======
            // InternalSCTX.g:9795:59: (iv_ruleSimpleValuedObject= ruleSimpleValuedObject EOF )
            // InternalSCTX.g:9796:2: iv_ruleSimpleValuedObject= ruleSimpleValuedObject EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleValuedObjectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSimpleValuedObject=ruleSimpleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleValuedObject; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleValuedObject"


    // $ANTLR start "ruleSimpleValuedObject"
<<<<<<< HEAD
    // InternalSCTX.g:9904:1: ruleSimpleValuedObject returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) ) ;
=======
    // InternalSCTX.g:9802:1: ruleSimpleValuedObject returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleSimpleValuedObject() throws RecognitionException {
        EObject current = null;

        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:9910:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) ) )
            // InternalSCTX.g:9911:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) )
            {
            // InternalSCTX.g:9911:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) )
            // InternalSCTX.g:9912:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) )
            {
            // InternalSCTX.g:9912:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop334:
            do {
                int alt334=2;
                int LA334_0 = input.LA(1);

                if ( (LA334_0==RULE_COMMENT_ANNOTATION||LA334_0==106) ) {
                    alt334=1;
                }


                switch (alt334) {
            	case 1 :
            	    // InternalSCTX.g:9913:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalSCTX.g:9913:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalSCTX.g:9914:5: lv_annotations_0_0= ruleQuotedStringAnnotation
=======
            // InternalSCTX.g:9808:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) ) )
            // InternalSCTX.g:9809:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) )
            {
            // InternalSCTX.g:9809:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) )
            // InternalSCTX.g:9810:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) )
            {
            // InternalSCTX.g:9810:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop332:
            do {
                int alt332=2;
                int LA332_0 = input.LA(1);

                if ( (LA332_0==RULE_COMMENT_ANNOTATION||LA332_0==102) ) {
                    alt332=1;
                }


                switch (alt332) {
            	case 1 :
            	    // InternalSCTX.g:9811:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalSCTX.g:9811:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalSCTX.g:9812:5: lv_annotations_0_0= ruleQuotedStringAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSimpleValuedObjectAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_105);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSimpleValuedObjectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
<<<<<<< HEAD
            	    break loop334;
                }
            } while (true);

            // InternalSCTX.g:9931:3: ( (lv_name_1_0= rulePrimeID ) )
            // InternalSCTX.g:9932:4: (lv_name_1_0= rulePrimeID )
            {
            // InternalSCTX.g:9932:4: (lv_name_1_0= rulePrimeID )
            // InternalSCTX.g:9933:5: lv_name_1_0= rulePrimeID
=======
            	    break loop332;
                }
            } while (true);

            // InternalSCTX.g:9829:3: ( (lv_name_1_0= rulePrimeID ) )
            // InternalSCTX.g:9830:4: (lv_name_1_0= rulePrimeID )
            {
            // InternalSCTX.g:9830:4: (lv_name_1_0= rulePrimeID )
            // InternalSCTX.g:9831:5: lv_name_1_0= rulePrimeID
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimpleValuedObjectAccess().getNamePrimeIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSimpleValuedObjectRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleValuedObject"


    // $ANTLR start "entrySuperEffect"
<<<<<<< HEAD
    // InternalSCTX.g:9954:1: entrySuperEffect returns [EObject current=null] : iv_superEffect= superEffect EOF ;
=======
    // InternalSCTX.g:9852:1: entrySuperEffect returns [EObject current=null] : iv_superEffect= superEffect EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entrySuperEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_superEffect = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:9954:48: (iv_superEffect= superEffect EOF )
            // InternalSCTX.g:9955:2: iv_superEffect= superEffect EOF
=======
            // InternalSCTX.g:9852:48: (iv_superEffect= superEffect EOF )
            // InternalSCTX.g:9853:2: iv_superEffect= superEffect EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKEffectsEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_superEffect=superEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperEffect"


    // $ANTLR start "superEffect"
<<<<<<< HEAD
    // InternalSCTX.g:9961:1: superEffect returns [EObject current=null] : (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission ) ;
=======
    // InternalSCTX.g:9859:1: superEffect returns [EObject current=null] : (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject superEffect() throws RecognitionException {
        EObject current = null;

        EObject this_Assignment_0 = null;

        EObject this_PostfixEffect_1 = null;

        EObject this_ValuedEmission_2 = null;

        EObject this_HostcodeEffect_3 = null;

        EObject this_ReferenceCallEffect_4 = null;

        EObject this_FunctionCallEffect_5 = null;

        EObject this_PrintCallEffect_6 = null;

        EObject this_RandomizeCallEffect_7 = null;

        EObject this_PureEmission_8 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:9967:2: ( (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission ) )
            // InternalSCTX.g:9968:2: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission )
            {
            // InternalSCTX.g:9968:2: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission )
            int alt335=9;
            alt335 = dfa335.predict(input);
            switch (alt335) {
                case 1 :
                    // InternalSCTX.g:9969:3: this_Assignment_0= ruleAssignment
=======
            // InternalSCTX.g:9865:2: ( (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission ) )
            // InternalSCTX.g:9866:2: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission )
            {
            // InternalSCTX.g:9866:2: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission )
            int alt333=9;
            alt333 = dfa333.predict(input);
            switch (alt333) {
                case 1 :
                    // InternalSCTX.g:9867:3: this_Assignment_0= ruleAssignment
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getAssignmentParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Assignment_0=ruleAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Assignment_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:9981:3: this_PostfixEffect_1= rulePostfixEffect
=======
                    // InternalSCTX.g:9879:3: this_PostfixEffect_1= rulePostfixEffect
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getPostfixEffectParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PostfixEffect_1=rulePostfixEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PostfixEffect_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
<<<<<<< HEAD
                    // InternalSCTX.g:9993:3: this_ValuedEmission_2= ruleValuedEmission
=======
                    // InternalSCTX.g:9891:3: this_ValuedEmission_2= ruleValuedEmission
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getValuedEmissionParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedEmission_2=ruleValuedEmission();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedEmission_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
<<<<<<< HEAD
                    // InternalSCTX.g:10005:3: this_HostcodeEffect_3= ruleHostcodeEffect
=======
                    // InternalSCTX.g:9903:3: this_HostcodeEffect_3= ruleHostcodeEffect
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getHostcodeEffectParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_HostcodeEffect_3=ruleHostcodeEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_HostcodeEffect_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
<<<<<<< HEAD
                    // InternalSCTX.g:10017:3: this_ReferenceCallEffect_4= ruleReferenceCallEffect
=======
                    // InternalSCTX.g:9915:3: this_ReferenceCallEffect_4= ruleReferenceCallEffect
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getReferenceCallEffectParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceCallEffect_4=ruleReferenceCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReferenceCallEffect_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
<<<<<<< HEAD
                    // InternalSCTX.g:10029:3: this_FunctionCallEffect_5= ruleFunctionCallEffect
=======
                    // InternalSCTX.g:9927:3: this_FunctionCallEffect_5= ruleFunctionCallEffect
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getFunctionCallEffectParserRuleCall_5());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FunctionCallEffect_5=ruleFunctionCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionCallEffect_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
<<<<<<< HEAD
                    // InternalSCTX.g:10041:3: this_PrintCallEffect_6= rulePrintCallEffect
=======
                    // InternalSCTX.g:9939:3: this_PrintCallEffect_6= rulePrintCallEffect
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getPrintCallEffectParserRuleCall_6());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrintCallEffect_6=rulePrintCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrintCallEffect_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
<<<<<<< HEAD
                    // InternalSCTX.g:10053:3: this_RandomizeCallEffect_7= ruleRandomizeCallEffect
=======
                    // InternalSCTX.g:9951:3: this_RandomizeCallEffect_7= ruleRandomizeCallEffect
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getRandomizeCallEffectParserRuleCall_7());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RandomizeCallEffect_7=ruleRandomizeCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RandomizeCallEffect_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
<<<<<<< HEAD
                    // InternalSCTX.g:10065:3: this_PureEmission_8= rulePureEmission
=======
                    // InternalSCTX.g:9963:3: this_PureEmission_8= rulePureEmission
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getPureEmissionParserRuleCall_8());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PureEmission_8=rulePureEmission();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PureEmission_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superEffect"


    // $ANTLR start "entryRulePureEmission"
<<<<<<< HEAD
    // InternalSCTX.g:10080:1: entryRulePureEmission returns [EObject current=null] : iv_rulePureEmission= rulePureEmission EOF ;
=======
    // InternalSCTX.g:9978:1: entryRulePureEmission returns [EObject current=null] : iv_rulePureEmission= rulePureEmission EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRulePureEmission() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePureEmission = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:10080:53: (iv_rulePureEmission= rulePureEmission EOF )
            // InternalSCTX.g:10081:2: iv_rulePureEmission= rulePureEmission EOF
=======
            // InternalSCTX.g:9978:53: (iv_rulePureEmission= rulePureEmission EOF )
            // InternalSCTX.g:9979:2: iv_rulePureEmission= rulePureEmission EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPureEmissionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePureEmission=rulePureEmission();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePureEmission; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePureEmission"


    // $ANTLR start "rulePureEmission"
<<<<<<< HEAD
    // InternalSCTX.g:10087:1: rulePureEmission returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? ) ;
=======
    // InternalSCTX.g:9985:1: rulePureEmission returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject rulePureEmission() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        EObject lv_schedule_3_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:10093:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:10094:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:10094:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:10095:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:10095:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop336:
            do {
                int alt336=2;
                int LA336_0 = input.LA(1);

                if ( (LA336_0==RULE_COMMENT_ANNOTATION||LA336_0==106) ) {
                    alt336=1;
                }


                switch (alt336) {
            	case 1 :
            	    // InternalSCTX.g:10096:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalSCTX.g:10096:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalSCTX.g:10097:5: lv_annotations_0_0= ruleQuotedStringAnnotation
=======
            // InternalSCTX.g:9991:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:9992:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:9992:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:9993:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:9993:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop334:
            do {
                int alt334=2;
                int LA334_0 = input.LA(1);

                if ( (LA334_0==RULE_COMMENT_ANNOTATION||LA334_0==102) ) {
                    alt334=1;
                }


                switch (alt334) {
            	case 1 :
            	    // InternalSCTX.g:9994:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalSCTX.g:9994:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalSCTX.g:9995:5: lv_annotations_0_0= ruleQuotedStringAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPureEmissionAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_130);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPureEmissionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
<<<<<<< HEAD
            	    break loop336;
                }
            } while (true);

            // InternalSCTX.g:10114:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalSCTX.g:10115:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalSCTX.g:10115:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalSCTX.g:10116:5: lv_reference_1_0= ruleValuedObjectReference
=======
            	    break loop334;
                }
            } while (true);

            // InternalSCTX.g:10012:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalSCTX.g:10013:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalSCTX.g:10013:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalSCTX.g:10014:5: lv_reference_1_0= ruleValuedObjectReference
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPureEmissionAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_37);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPureEmissionRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

<<<<<<< HEAD
            // InternalSCTX.g:10133:3: (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )?
            int alt338=2;
            int LA338_0 = input.LA(1);

            if ( (LA338_0==29) ) {
                alt338=1;
            }
            switch (alt338) {
                case 1 :
                    // InternalSCTX.g:10134:4: otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+
=======
            // InternalSCTX.g:10031:3: (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )?
            int alt336=2;
            int LA336_0 = input.LA(1);

            if ( (LA336_0==29) ) {
                alt336=1;
            }
            switch (alt336) {
                case 1 :
                    // InternalSCTX.g:10032:4: otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    otherlv_2=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPureEmissionAccess().getScheduleKeyword_2_0());
                      			
                    }
<<<<<<< HEAD
                    // InternalSCTX.g:10138:4: ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+
                    int cnt337=0;
                    loop337:
                    do {
                        int alt337=2;
                        alt337 = dfa337.predict(input);
                        switch (alt337) {
                    	case 1 :
                    	    // InternalSCTX.g:10139:5: (lv_schedule_3_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:10139:5: (lv_schedule_3_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:10140:6: lv_schedule_3_0= ruleScheduleObjectReference
=======
                    // InternalSCTX.g:10036:4: ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+
                    int cnt335=0;
                    loop335:
                    do {
                        int alt335=2;
                        alt335 = dfa335.predict(input);
                        switch (alt335) {
                    	case 1 :
                    	    // InternalSCTX.g:10037:5: (lv_schedule_3_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:10037:5: (lv_schedule_3_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:10038:6: lv_schedule_3_0= ruleScheduleObjectReference
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getPureEmissionAccess().getScheduleScheduleObjectReferenceParserRuleCall_2_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_60);
                    	    lv_schedule_3_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getPureEmissionRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_3_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
<<<<<<< HEAD
                    	    if ( cnt337 >= 1 ) break loop337;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(337, input);
                                throw eee;
                        }
                        cnt337++;
=======
                    	    if ( cnt335 >= 1 ) break loop335;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(335, input);
                                throw eee;
                        }
                        cnt335++;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePureEmission"


    // $ANTLR start "entryRuleValuedEmission"
<<<<<<< HEAD
    // InternalSCTX.g:10162:1: entryRuleValuedEmission returns [EObject current=null] : iv_ruleValuedEmission= ruleValuedEmission EOF ;
=======
    // InternalSCTX.g:10060:1: entryRuleValuedEmission returns [EObject current=null] : iv_ruleValuedEmission= ruleValuedEmission EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleValuedEmission() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedEmission = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:10162:55: (iv_ruleValuedEmission= ruleValuedEmission EOF )
            // InternalSCTX.g:10163:2: iv_ruleValuedEmission= ruleValuedEmission EOF
=======
            // InternalSCTX.g:10060:55: (iv_ruleValuedEmission= ruleValuedEmission EOF )
            // InternalSCTX.g:10061:2: iv_ruleValuedEmission= ruleValuedEmission EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedEmissionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedEmission=ruleValuedEmission();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedEmission; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedEmission"


    // $ANTLR start "ruleValuedEmission"
<<<<<<< HEAD
    // InternalSCTX.g:10169:1: ruleValuedEmission returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? ) ;
=======
    // InternalSCTX.g:10067:1: ruleValuedEmission returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleValuedEmission() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        EObject lv_newValue_3_0 = null;

        EObject lv_schedule_6_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:10175:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:10176:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:10176:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:10177:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:10177:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop339:
            do {
                int alt339=2;
                int LA339_0 = input.LA(1);

                if ( (LA339_0==RULE_COMMENT_ANNOTATION||LA339_0==106) ) {
                    alt339=1;
                }


                switch (alt339) {
            	case 1 :
            	    // InternalSCTX.g:10178:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalSCTX.g:10178:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalSCTX.g:10179:5: lv_annotations_0_0= ruleQuotedStringAnnotation
=======
            // InternalSCTX.g:10073:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:10074:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:10074:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:10075:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:10075:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop337:
            do {
                int alt337=2;
                int LA337_0 = input.LA(1);

                if ( (LA337_0==RULE_COMMENT_ANNOTATION||LA337_0==102) ) {
                    alt337=1;
                }


                switch (alt337) {
            	case 1 :
            	    // InternalSCTX.g:10076:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalSCTX.g:10076:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalSCTX.g:10077:5: lv_annotations_0_0= ruleQuotedStringAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getValuedEmissionAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_130);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getValuedEmissionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
<<<<<<< HEAD
            	    break loop339;
                }
            } while (true);

            // InternalSCTX.g:10196:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalSCTX.g:10197:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalSCTX.g:10197:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalSCTX.g:10198:5: lv_reference_1_0= ruleValuedObjectReference
=======
            	    break loop337;
                }
            } while (true);

            // InternalSCTX.g:10094:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalSCTX.g:10095:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalSCTX.g:10095:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalSCTX.g:10096:5: lv_reference_1_0= ruleValuedObjectReference
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedEmissionAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_140);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValuedEmissionRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,31,FollowSets000.FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getValuedEmissionAccess().getLeftParenthesisKeyword_2());
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:10219:3: ( (lv_newValue_3_0= ruleExpression ) )
            // InternalSCTX.g:10220:4: (lv_newValue_3_0= ruleExpression )
            {
            // InternalSCTX.g:10220:4: (lv_newValue_3_0= ruleExpression )
            // InternalSCTX.g:10221:5: lv_newValue_3_0= ruleExpression
=======
            // InternalSCTX.g:10117:3: ( (lv_newValue_3_0= ruleExpression ) )
            // InternalSCTX.g:10118:4: (lv_newValue_3_0= ruleExpression )
            {
            // InternalSCTX.g:10118:4: (lv_newValue_3_0= ruleExpression )
            // InternalSCTX.g:10119:5: lv_newValue_3_0= ruleExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedEmissionAccess().getNewValueExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_32);
            lv_newValue_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValuedEmissionRule());
              					}
              					set(
              						current,
              						"newValue",
              						lv_newValue_3_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,32,FollowSets000.FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getValuedEmissionAccess().getRightParenthesisKeyword_4());
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:10242:3: (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )?
            int alt341=2;
            int LA341_0 = input.LA(1);

            if ( (LA341_0==29) ) {
                alt341=1;
            }
            switch (alt341) {
                case 1 :
                    // InternalSCTX.g:10243:4: otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+
=======
            // InternalSCTX.g:10140:3: (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )?
            int alt339=2;
            int LA339_0 = input.LA(1);

            if ( (LA339_0==29) ) {
                alt339=1;
            }
            switch (alt339) {
                case 1 :
                    // InternalSCTX.g:10141:4: otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    otherlv_5=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getValuedEmissionAccess().getScheduleKeyword_5_0());
                      			
                    }
<<<<<<< HEAD
                    // InternalSCTX.g:10247:4: ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+
                    int cnt340=0;
                    loop340:
                    do {
                        int alt340=2;
                        alt340 = dfa340.predict(input);
                        switch (alt340) {
                    	case 1 :
                    	    // InternalSCTX.g:10248:5: (lv_schedule_6_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:10248:5: (lv_schedule_6_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:10249:6: lv_schedule_6_0= ruleScheduleObjectReference
=======
                    // InternalSCTX.g:10145:4: ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+
                    int cnt338=0;
                    loop338:
                    do {
                        int alt338=2;
                        alt338 = dfa338.predict(input);
                        switch (alt338) {
                    	case 1 :
                    	    // InternalSCTX.g:10146:5: (lv_schedule_6_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:10146:5: (lv_schedule_6_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:10147:6: lv_schedule_6_0= ruleScheduleObjectReference
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getValuedEmissionAccess().getScheduleScheduleObjectReferenceParserRuleCall_5_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_60);
                    	    lv_schedule_6_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getValuedEmissionRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_6_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
<<<<<<< HEAD
                    	    if ( cnt340 >= 1 ) break loop340;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(340, input);
                                throw eee;
                        }
                        cnt340++;
=======
                    	    if ( cnt338 >= 1 ) break loop338;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(338, input);
                                throw eee;
                        }
                        cnt338++;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedEmission"


    // $ANTLR start "entryRuleAssignment"
<<<<<<< HEAD
    // InternalSCTX.g:10271:1: entryRuleAssignment returns [EObject current=null] : iv_ruleAssignment= ruleAssignment EOF ;
=======
    // InternalSCTX.g:10169:1: entryRuleAssignment returns [EObject current=null] : iv_ruleAssignment= ruleAssignment EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssignment = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:10271:51: (iv_ruleAssignment= ruleAssignment EOF )
            // InternalSCTX.g:10272:2: iv_ruleAssignment= ruleAssignment EOF
=======
            // InternalSCTX.g:10169:51: (iv_ruleAssignment= ruleAssignment EOF )
            // InternalSCTX.g:10170:2: iv_ruleAssignment= ruleAssignment EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignmentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAssignment=ruleAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssignment; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssignment"


    // $ANTLR start "ruleAssignment"
<<<<<<< HEAD
    // InternalSCTX.g:10278:1: ruleAssignment returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ) ;
=======
    // InternalSCTX.g:10176:1: ruleAssignment returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_expression_3_0 = null;

        EObject lv_schedule_5_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:10284:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:10285:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:10285:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:10286:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:10286:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop342:
            do {
                int alt342=2;
                int LA342_0 = input.LA(1);

                if ( (LA342_0==RULE_COMMENT_ANNOTATION||LA342_0==106) ) {
                    alt342=1;
                }


                switch (alt342) {
            	case 1 :
            	    // InternalSCTX.g:10287:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:10287:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:10288:5: lv_annotations_0_0= ruleAnnotation
=======
            // InternalSCTX.g:10182:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:10183:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:10183:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:10184:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:10184:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop340:
            do {
                int alt340=2;
                int LA340_0 = input.LA(1);

                if ( (LA340_0==RULE_COMMENT_ANNOTATION||LA340_0==102) ) {
                    alt340=1;
                }


                switch (alt340) {
            	case 1 :
            	    // InternalSCTX.g:10185:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:10185:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:10186:5: lv_annotations_0_0= ruleAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_130);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAssignmentRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
<<<<<<< HEAD
            	    break loop342;
                }
            } while (true);

            // InternalSCTX.g:10305:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalSCTX.g:10306:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalSCTX.g:10306:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalSCTX.g:10307:5: lv_reference_1_0= ruleValuedObjectReference
=======
            	    break loop340;
                }
            } while (true);

            // InternalSCTX.g:10203:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalSCTX.g:10204:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalSCTX.g:10204:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalSCTX.g:10205:5: lv_reference_1_0= ruleValuedObjectReference
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_131);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

<<<<<<< HEAD
            // InternalSCTX.g:10324:3: ( (lv_operator_2_0= ruleAssignOperator ) )
            // InternalSCTX.g:10325:4: (lv_operator_2_0= ruleAssignOperator )
            {
            // InternalSCTX.g:10325:4: (lv_operator_2_0= ruleAssignOperator )
            // InternalSCTX.g:10326:5: lv_operator_2_0= ruleAssignOperator
=======
            // InternalSCTX.g:10222:3: ( (lv_operator_2_0= ruleAssignOperator ) )
            // InternalSCTX.g:10223:4: (lv_operator_2_0= ruleAssignOperator )
            {
            // InternalSCTX.g:10223:4: (lv_operator_2_0= ruleAssignOperator )
            // InternalSCTX.g:10224:5: lv_operator_2_0= ruleAssignOperator
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_30);
            lv_operator_2_0=ruleAssignOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"operator",
              						lv_operator_2_0,
              						"de.cau.cs.kieler.kexpressions.keffects.KEffects.AssignOperator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

<<<<<<< HEAD
            // InternalSCTX.g:10343:3: ( (lv_expression_3_0= ruleExpression ) )
            // InternalSCTX.g:10344:4: (lv_expression_3_0= ruleExpression )
            {
            // InternalSCTX.g:10344:4: (lv_expression_3_0= ruleExpression )
            // InternalSCTX.g:10345:5: lv_expression_3_0= ruleExpression
=======
            // InternalSCTX.g:10241:3: ( (lv_expression_3_0= ruleExpression ) )
            // InternalSCTX.g:10242:4: (lv_expression_3_0= ruleExpression )
            {
            // InternalSCTX.g:10242:4: (lv_expression_3_0= ruleExpression )
            // InternalSCTX.g:10243:5: lv_expression_3_0= ruleExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_37);
            lv_expression_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_3_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

<<<<<<< HEAD
            // InternalSCTX.g:10362:3: (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )?
            int alt344=2;
            int LA344_0 = input.LA(1);

            if ( (LA344_0==29) ) {
                alt344=1;
            }
            switch (alt344) {
                case 1 :
                    // InternalSCTX.g:10363:4: otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+
=======
            // InternalSCTX.g:10260:3: (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )?
            int alt342=2;
            int LA342_0 = input.LA(1);

            if ( (LA342_0==29) ) {
                alt342=1;
            }
            switch (alt342) {
                case 1 :
                    // InternalSCTX.g:10261:4: otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    otherlv_4=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getAssignmentAccess().getScheduleKeyword_4_0());
                      			
                    }
<<<<<<< HEAD
                    // InternalSCTX.g:10367:4: ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+
                    int cnt343=0;
                    loop343:
                    do {
                        int alt343=2;
                        alt343 = dfa343.predict(input);
                        switch (alt343) {
                    	case 1 :
                    	    // InternalSCTX.g:10368:5: (lv_schedule_5_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:10368:5: (lv_schedule_5_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:10369:6: lv_schedule_5_0= ruleScheduleObjectReference
=======
                    // InternalSCTX.g:10265:4: ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+
                    int cnt341=0;
                    loop341:
                    do {
                        int alt341=2;
                        alt341 = dfa341.predict(input);
                        switch (alt341) {
                    	case 1 :
                    	    // InternalSCTX.g:10266:5: (lv_schedule_5_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:10266:5: (lv_schedule_5_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:10267:6: lv_schedule_5_0= ruleScheduleObjectReference
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getAssignmentAccess().getScheduleScheduleObjectReferenceParserRuleCall_4_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_60);
                    	    lv_schedule_5_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getAssignmentRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_5_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
<<<<<<< HEAD
                    	    if ( cnt343 >= 1 ) break loop343;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(343, input);
                                throw eee;
                        }
                        cnt343++;
=======
                    	    if ( cnt341 >= 1 ) break loop341;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(341, input);
                                throw eee;
                        }
                        cnt341++;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssignment"


    // $ANTLR start "entryRulePostfixEffect"
<<<<<<< HEAD
    // InternalSCTX.g:10391:1: entryRulePostfixEffect returns [EObject current=null] : iv_rulePostfixEffect= rulePostfixEffect EOF ;
=======
    // InternalSCTX.g:10289:1: entryRulePostfixEffect returns [EObject current=null] : iv_rulePostfixEffect= rulePostfixEffect EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRulePostfixEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePostfixEffect = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:10391:54: (iv_rulePostfixEffect= rulePostfixEffect EOF )
            // InternalSCTX.g:10392:2: iv_rulePostfixEffect= rulePostfixEffect EOF
=======
            // InternalSCTX.g:10289:54: (iv_rulePostfixEffect= rulePostfixEffect EOF )
            // InternalSCTX.g:10290:2: iv_rulePostfixEffect= rulePostfixEffect EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPostfixEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePostfixEffect=rulePostfixEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePostfixEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePostfixEffect"


    // $ANTLR start "rulePostfixEffect"
<<<<<<< HEAD
    // InternalSCTX.g:10398:1: rulePostfixEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ) ;
=======
    // InternalSCTX.g:10296:1: rulePostfixEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject rulePostfixEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_schedule_4_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:10404:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:10405:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:10405:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:10406:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:10406:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop345:
            do {
                int alt345=2;
                int LA345_0 = input.LA(1);

                if ( (LA345_0==RULE_COMMENT_ANNOTATION||LA345_0==106) ) {
                    alt345=1;
                }


                switch (alt345) {
            	case 1 :
            	    // InternalSCTX.g:10407:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:10407:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:10408:5: lv_annotations_0_0= ruleAnnotation
=======
            // InternalSCTX.g:10302:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:10303:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:10303:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:10304:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:10304:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop343:
            do {
                int alt343=2;
                int LA343_0 = input.LA(1);

                if ( (LA343_0==RULE_COMMENT_ANNOTATION||LA343_0==102) ) {
                    alt343=1;
                }


                switch (alt343) {
            	case 1 :
            	    // InternalSCTX.g:10305:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:10305:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:10306:5: lv_annotations_0_0= ruleAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPostfixEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_130);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
<<<<<<< HEAD
            	    break loop345;
                }
            } while (true);

            // InternalSCTX.g:10425:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalSCTX.g:10426:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalSCTX.g:10426:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalSCTX.g:10427:5: lv_reference_1_0= ruleValuedObjectReference
=======
            	    break loop343;
                }
            } while (true);

            // InternalSCTX.g:10323:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalSCTX.g:10324:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalSCTX.g:10324:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalSCTX.g:10325:5: lv_reference_1_0= ruleValuedObjectReference
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPostfixEffectAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_134);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

<<<<<<< HEAD
            // InternalSCTX.g:10444:3: ( (lv_operator_2_0= rulePostfixOperator ) )
            // InternalSCTX.g:10445:4: (lv_operator_2_0= rulePostfixOperator )
            {
            // InternalSCTX.g:10445:4: (lv_operator_2_0= rulePostfixOperator )
            // InternalSCTX.g:10446:5: lv_operator_2_0= rulePostfixOperator
=======
            // InternalSCTX.g:10342:3: ( (lv_operator_2_0= rulePostfixOperator ) )
            // InternalSCTX.g:10343:4: (lv_operator_2_0= rulePostfixOperator )
            {
            // InternalSCTX.g:10343:4: (lv_operator_2_0= rulePostfixOperator )
            // InternalSCTX.g:10344:5: lv_operator_2_0= rulePostfixOperator
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPostfixEffectAccess().getOperatorPostfixOperatorEnumRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_37);
            lv_operator_2_0=rulePostfixOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
              					}
              					set(
              						current,
              						"operator",
              						lv_operator_2_0,
              						"de.cau.cs.kieler.kexpressions.keffects.KEffects.PostfixOperator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

<<<<<<< HEAD
            // InternalSCTX.g:10463:3: (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )?
            int alt347=2;
            int LA347_0 = input.LA(1);

            if ( (LA347_0==29) ) {
                alt347=1;
            }
            switch (alt347) {
                case 1 :
                    // InternalSCTX.g:10464:4: otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+
=======
            // InternalSCTX.g:10361:3: (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )?
            int alt345=2;
            int LA345_0 = input.LA(1);

            if ( (LA345_0==29) ) {
                alt345=1;
            }
            switch (alt345) {
                case 1 :
                    // InternalSCTX.g:10362:4: otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    otherlv_3=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getPostfixEffectAccess().getScheduleKeyword_3_0());
                      			
                    }
<<<<<<< HEAD
                    // InternalSCTX.g:10468:4: ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+
                    int cnt346=0;
                    loop346:
                    do {
                        int alt346=2;
                        alt346 = dfa346.predict(input);
                        switch (alt346) {
                    	case 1 :
                    	    // InternalSCTX.g:10469:5: (lv_schedule_4_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:10469:5: (lv_schedule_4_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:10470:6: lv_schedule_4_0= ruleScheduleObjectReference
=======
                    // InternalSCTX.g:10366:4: ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+
                    int cnt344=0;
                    loop344:
                    do {
                        int alt344=2;
                        alt344 = dfa344.predict(input);
                        switch (alt344) {
                    	case 1 :
                    	    // InternalSCTX.g:10367:5: (lv_schedule_4_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:10367:5: (lv_schedule_4_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:10368:6: lv_schedule_4_0= ruleScheduleObjectReference
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getPostfixEffectAccess().getScheduleScheduleObjectReferenceParserRuleCall_3_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_60);
                    	    lv_schedule_4_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_4_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
<<<<<<< HEAD
                    	    if ( cnt346 >= 1 ) break loop346;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(346, input);
                                throw eee;
                        }
                        cnt346++;
=======
                    	    if ( cnt344 >= 1 ) break loop344;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(344, input);
                                throw eee;
                        }
                        cnt344++;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePostfixEffect"


    // $ANTLR start "entryRuleHostcodeEffect"
<<<<<<< HEAD
    // InternalSCTX.g:10492:1: entryRuleHostcodeEffect returns [EObject current=null] : iv_ruleHostcodeEffect= ruleHostcodeEffect EOF ;
=======
    // InternalSCTX.g:10390:1: entryRuleHostcodeEffect returns [EObject current=null] : iv_ruleHostcodeEffect= ruleHostcodeEffect EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleHostcodeEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHostcodeEffect = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:10492:55: (iv_ruleHostcodeEffect= ruleHostcodeEffect EOF )
            // InternalSCTX.g:10493:2: iv_ruleHostcodeEffect= ruleHostcodeEffect EOF
=======
            // InternalSCTX.g:10390:55: (iv_ruleHostcodeEffect= ruleHostcodeEffect EOF )
            // InternalSCTX.g:10391:2: iv_ruleHostcodeEffect= ruleHostcodeEffect EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHostcodeEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleHostcodeEffect=ruleHostcodeEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHostcodeEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHostcodeEffect"


    // $ANTLR start "ruleHostcodeEffect"
<<<<<<< HEAD
    // InternalSCTX.g:10499:1: ruleHostcodeEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) ;
=======
    // InternalSCTX.g:10397:1: ruleHostcodeEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleHostcodeEffect() throws RecognitionException {
        EObject current = null;

        Token lv_text_1_0=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:10505:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) )
            // InternalSCTX.g:10506:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            {
            // InternalSCTX.g:10506:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            // InternalSCTX.g:10507:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) )
            {
            // InternalSCTX.g:10507:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop348:
            do {
                int alt348=2;
                int LA348_0 = input.LA(1);

                if ( (LA348_0==RULE_COMMENT_ANNOTATION||LA348_0==106) ) {
                    alt348=1;
                }


                switch (alt348) {
            	case 1 :
            	    // InternalSCTX.g:10508:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:10508:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:10509:5: lv_annotations_0_0= ruleAnnotation
=======
            // InternalSCTX.g:10403:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) )
            // InternalSCTX.g:10404:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            {
            // InternalSCTX.g:10404:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            // InternalSCTX.g:10405:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) )
            {
            // InternalSCTX.g:10405:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop346:
            do {
                int alt346=2;
                int LA346_0 = input.LA(1);

                if ( (LA346_0==RULE_COMMENT_ANNOTATION||LA346_0==102) ) {
                    alt346=1;
                }


                switch (alt346) {
            	case 1 :
            	    // InternalSCTX.g:10406:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:10406:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:10407:5: lv_annotations_0_0= ruleAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getHostcodeEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_172);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getHostcodeEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
<<<<<<< HEAD
            	    break loop348;
                }
            } while (true);

            // InternalSCTX.g:10526:3: ( (lv_text_1_0= RULE_HOSTCODE ) )
            // InternalSCTX.g:10527:4: (lv_text_1_0= RULE_HOSTCODE )
            {
            // InternalSCTX.g:10527:4: (lv_text_1_0= RULE_HOSTCODE )
            // InternalSCTX.g:10528:5: lv_text_1_0= RULE_HOSTCODE
=======
            	    break loop346;
                }
            } while (true);

            // InternalSCTX.g:10424:3: ( (lv_text_1_0= RULE_HOSTCODE ) )
            // InternalSCTX.g:10425:4: (lv_text_1_0= RULE_HOSTCODE )
            {
            // InternalSCTX.g:10425:4: (lv_text_1_0= RULE_HOSTCODE )
            // InternalSCTX.g:10426:5: lv_text_1_0= RULE_HOSTCODE
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            lv_text_1_0=(Token)match(input,RULE_HOSTCODE,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_text_1_0, grammarAccess.getHostcodeEffectAccess().getTextHOSTCODETerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getHostcodeEffectRule());
              					}
              					setWithLastConsumed(
              						current,
              						"text",
              						lv_text_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.HOSTCODE");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHostcodeEffect"


    // $ANTLR start "entryRuleReferenceCallEffect"
<<<<<<< HEAD
    // InternalSCTX.g:10548:1: entryRuleReferenceCallEffect returns [EObject current=null] : iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF ;
=======
    // InternalSCTX.g:10446:1: entryRuleReferenceCallEffect returns [EObject current=null] : iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleReferenceCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceCallEffect = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:10548:60: (iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF )
            // InternalSCTX.g:10549:2: iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF
=======
            // InternalSCTX.g:10446:60: (iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF )
            // InternalSCTX.g:10447:2: iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceCallEffect=ruleReferenceCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceCallEffect"


    // $ANTLR start "ruleReferenceCallEffect"
<<<<<<< HEAD
    // InternalSCTX.g:10555:1: ruleReferenceCallEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' ) (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )? ) ;
=======
    // InternalSCTX.g:10453:1: ruleReferenceCallEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' ) (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )? ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleReferenceCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_indices_3_0 = null;

        EObject lv_subReference_6_0 = null;

        EObject lv_parameters_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_schedule_14_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:10561:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' ) (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:10562:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' ) (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:10562:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' ) (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:10563:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' ) (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:10563:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop349:
            do {
                int alt349=2;
                int LA349_0 = input.LA(1);

                if ( (LA349_0==RULE_COMMENT_ANNOTATION||LA349_0==106) ) {
                    alt349=1;
                }


                switch (alt349) {
            	case 1 :
            	    // InternalSCTX.g:10564:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:10564:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:10565:5: lv_annotations_0_0= ruleAnnotation
=======
            // InternalSCTX.g:10459:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' ) (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:10460:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' ) (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:10460:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' ) (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:10461:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' ) (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:10461:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop347:
            do {
                int alt347=2;
                int LA347_0 = input.LA(1);

                if ( (LA347_0==RULE_COMMENT_ANNOTATION||LA347_0==102) ) {
                    alt347=1;
                }


                switch (alt347) {
            	case 1 :
            	    // InternalSCTX.g:10462:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:10462:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:10463:5: lv_annotations_0_0= ruleAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_105);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
<<<<<<< HEAD
            	    break loop349;
                }
            } while (true);

            // InternalSCTX.g:10582:3: ( ( rulePrimeID ) )
            // InternalSCTX.g:10583:4: ( rulePrimeID )
            {
            // InternalSCTX.g:10583:4: ( rulePrimeID )
            // InternalSCTX.g:10584:5: rulePrimeID
=======
            	    break loop347;
                }
            } while (true);

            // InternalSCTX.g:10480:3: ( ( rulePrimeID ) )
            // InternalSCTX.g:10481:4: ( rulePrimeID )
            {
            // InternalSCTX.g:10481:4: ( rulePrimeID )
            // InternalSCTX.g:10482:5: rulePrimeID
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getReferenceCallEffectRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getValuedObjectValuedObjectCrossReference_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_173);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

<<<<<<< HEAD
            // InternalSCTX.g:10601:3: (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )*
            loop350:
            do {
                int alt350=2;
                int LA350_0 = input.LA(1);

                if ( (LA350_0==36) ) {
                    alt350=1;
                }


                switch (alt350) {
            	case 1 :
            	    // InternalSCTX.g:10602:4: otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']'
=======
            // InternalSCTX.g:10499:3: (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )*
            loop348:
            do {
                int alt348=2;
                int LA348_0 = input.LA(1);

                if ( (LA348_0==36) ) {
                    alt348=1;
                }


                switch (alt348) {
            	case 1 :
            	    // InternalSCTX.g:10500:4: otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    otherlv_2=(Token)match(input,36,FollowSets000.FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getReferenceCallEffectAccess().getLeftSquareBracketKeyword_2_0());
            	      			
            	    }
<<<<<<< HEAD
            	    // InternalSCTX.g:10606:4: ( (lv_indices_3_0= ruleExpression ) )
            	    // InternalSCTX.g:10607:5: (lv_indices_3_0= ruleExpression )
            	    {
            	    // InternalSCTX.g:10607:5: (lv_indices_3_0= ruleExpression )
            	    // InternalSCTX.g:10608:6: lv_indices_3_0= ruleExpression
=======
            	    // InternalSCTX.g:10504:4: ( (lv_indices_3_0= ruleExpression ) )
            	    // InternalSCTX.g:10505:5: (lv_indices_3_0= ruleExpression )
            	    {
            	    // InternalSCTX.g:10505:5: (lv_indices_3_0= ruleExpression )
            	    // InternalSCTX.g:10506:6: lv_indices_3_0= ruleExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getIndicesExpressionParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    lv_indices_3_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
            	      						}
            	      						add(
            	      							current,
            	      							"indices",
            	      							lv_indices_3_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,37,FollowSets000.FOLLOW_173); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getReferenceCallEffectAccess().getRightSquareBracketKeyword_2_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
<<<<<<< HEAD
            	    break loop350;
                }
            } while (true);

            // InternalSCTX.g:10630:3: (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )?
            int alt351=2;
            int LA351_0 = input.LA(1);

            if ( (LA351_0==83) ) {
                alt351=1;
            }
            switch (alt351) {
                case 1 :
                    // InternalSCTX.g:10631:4: otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) )
=======
            	    break loop348;
                }
            } while (true);

            // InternalSCTX.g:10528:3: (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )?
            int alt349=2;
            int LA349_0 = input.LA(1);

            if ( (LA349_0==82) ) {
                alt349=1;
            }
            switch (alt349) {
                case 1 :
                    // InternalSCTX.g:10529:4: otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    otherlv_5=(Token)match(input,82,FollowSets000.FOLLOW_174); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getReferenceCallEffectAccess().getFullStopKeyword_3_0());
                      			
                    }
<<<<<<< HEAD
                    // InternalSCTX.g:10635:4: ( (lv_subReference_6_0= ruleValuedObjectReference ) )
                    // InternalSCTX.g:10636:5: (lv_subReference_6_0= ruleValuedObjectReference )
                    {
                    // InternalSCTX.g:10636:5: (lv_subReference_6_0= ruleValuedObjectReference )
                    // InternalSCTX.g:10637:6: lv_subReference_6_0= ruleValuedObjectReference
=======
                    // InternalSCTX.g:10533:4: ( (lv_subReference_6_0= ruleValuedObjectReference ) )
                    // InternalSCTX.g:10534:5: (lv_subReference_6_0= ruleValuedObjectReference )
                    {
                    // InternalSCTX.g:10534:5: (lv_subReference_6_0= ruleValuedObjectReference )
                    // InternalSCTX.g:10535:6: lv_subReference_6_0= ruleValuedObjectReference
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getSubReferenceValuedObjectReferenceParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_119);
                    lv_subReference_6_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                      						}
                      						set(
                      							current,
                      							"subReference",
                      							lv_subReference_6_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

<<<<<<< HEAD
            // InternalSCTX.g:10655:3: ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' )
            int alt353=2;
            int LA353_0 = input.LA(1);

            if ( (LA353_0==31) ) {
                alt353=1;
            }
            else if ( (LA353_0==70) ) {
                alt353=2;
=======
            // InternalSCTX.g:10553:3: ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' )
            int alt351=2;
            int LA351_0 = input.LA(1);

            if ( (LA351_0==31) ) {
                alt351=1;
            }
            else if ( (LA351_0==69) ) {
                alt351=2;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
<<<<<<< HEAD
                    new NoViableAltException("", 353, 0, input);

                throw nvae;
            }
            switch (alt353) {
                case 1 :
                    // InternalSCTX.g:10656:4: (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' )
                    {
                    // InternalSCTX.g:10656:4: (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' )
                    // InternalSCTX.g:10657:5: otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')'
=======
                    new NoViableAltException("", 351, 0, input);

                throw nvae;
            }
            switch (alt351) {
                case 1 :
                    // InternalSCTX.g:10554:4: (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' )
                    {
                    // InternalSCTX.g:10554:4: (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' )
                    // InternalSCTX.g:10555:5: otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    otherlv_7=(Token)match(input,31,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getReferenceCallEffectAccess().getLeftParenthesisKeyword_4_0_0());
                      				
                    }
<<<<<<< HEAD
                    // InternalSCTX.g:10661:5: ( (lv_parameters_8_0= ruleParameter ) )
                    // InternalSCTX.g:10662:6: (lv_parameters_8_0= ruleParameter )
                    {
                    // InternalSCTX.g:10662:6: (lv_parameters_8_0= ruleParameter )
                    // InternalSCTX.g:10663:7: lv_parameters_8_0= ruleParameter
=======
                    // InternalSCTX.g:10559:5: ( (lv_parameters_8_0= ruleParameter ) )
                    // InternalSCTX.g:10560:6: (lv_parameters_8_0= ruleParameter )
                    {
                    // InternalSCTX.g:10560:6: (lv_parameters_8_0= ruleParameter )
                    // InternalSCTX.g:10561:7: lv_parameters_8_0= ruleParameter
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getParametersParameterParserRuleCall_4_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_parameters_8_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_8_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

<<<<<<< HEAD
                    // InternalSCTX.g:10680:5: (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )*
                    loop352:
                    do {
                        int alt352=2;
                        int LA352_0 = input.LA(1);

                        if ( (LA352_0==20) ) {
                            alt352=1;
                        }


                        switch (alt352) {
                    	case 1 :
                    	    // InternalSCTX.g:10681:6: otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) )
=======
                    // InternalSCTX.g:10578:5: (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )*
                    loop350:
                    do {
                        int alt350=2;
                        int LA350_0 = input.LA(1);

                        if ( (LA350_0==20) ) {
                            alt350=1;
                        }


                        switch (alt350) {
                    	case 1 :
                    	    // InternalSCTX.g:10579:6: otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    otherlv_9=(Token)match(input,20,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_9, grammarAccess.getReferenceCallEffectAccess().getCommaKeyword_4_0_2_0());
                    	      					
                    	    }
<<<<<<< HEAD
                    	    // InternalSCTX.g:10685:6: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalSCTX.g:10686:7: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalSCTX.g:10686:7: (lv_parameters_10_0= ruleParameter )
                    	    // InternalSCTX.g:10687:8: lv_parameters_10_0= ruleParameter
=======
                    	    // InternalSCTX.g:10583:6: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalSCTX.g:10584:7: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalSCTX.g:10584:7: (lv_parameters_10_0= ruleParameter )
                    	    // InternalSCTX.g:10585:8: lv_parameters_10_0= ruleParameter
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getParametersParameterParserRuleCall_4_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_31);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_10_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
<<<<<<< HEAD
                    	    break loop352;
=======
                    	    break loop350;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,32,FollowSets000.FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_11, grammarAccess.getReferenceCallEffectAccess().getRightParenthesisKeyword_4_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:10711:4: otherlv_12= '()'
=======
                    // InternalSCTX.g:10609:4: otherlv_12= '()'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    otherlv_12=(Token)match(input,69,FollowSets000.FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getReferenceCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_4_1());
                      			
                    }

                    }
                    break;

            }

<<<<<<< HEAD
            // InternalSCTX.g:10716:3: (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )?
            int alt355=2;
            int LA355_0 = input.LA(1);

            if ( (LA355_0==29) ) {
                alt355=1;
            }
            switch (alt355) {
                case 1 :
                    // InternalSCTX.g:10717:4: otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+
=======
            // InternalSCTX.g:10614:3: (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )?
            int alt353=2;
            int LA353_0 = input.LA(1);

            if ( (LA353_0==29) ) {
                alt353=1;
            }
            switch (alt353) {
                case 1 :
                    // InternalSCTX.g:10615:4: otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    otherlv_13=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getReferenceCallEffectAccess().getScheduleKeyword_5_0());
                      			
                    }
<<<<<<< HEAD
                    // InternalSCTX.g:10721:4: ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+
                    int cnt354=0;
                    loop354:
                    do {
                        int alt354=2;
                        alt354 = dfa354.predict(input);
                        switch (alt354) {
                    	case 1 :
                    	    // InternalSCTX.g:10722:5: (lv_schedule_14_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:10722:5: (lv_schedule_14_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:10723:6: lv_schedule_14_0= ruleScheduleObjectReference
=======
                    // InternalSCTX.g:10619:4: ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+
                    int cnt352=0;
                    loop352:
                    do {
                        int alt352=2;
                        alt352 = dfa352.predict(input);
                        switch (alt352) {
                    	case 1 :
                    	    // InternalSCTX.g:10620:5: (lv_schedule_14_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:10620:5: (lv_schedule_14_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:10621:6: lv_schedule_14_0= ruleScheduleObjectReference
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getScheduleScheduleObjectReferenceParserRuleCall_5_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_60);
                    	    lv_schedule_14_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_14_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
<<<<<<< HEAD
                    	    if ( cnt354 >= 1 ) break loop354;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(354, input);
                                throw eee;
                        }
                        cnt354++;
=======
                    	    if ( cnt352 >= 1 ) break loop352;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(352, input);
                                throw eee;
                        }
                        cnt352++;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceCallEffect"


    // $ANTLR start "entryRuleFunctionCallEffect"
<<<<<<< HEAD
    // InternalSCTX.g:10745:1: entryRuleFunctionCallEffect returns [EObject current=null] : iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF ;
=======
    // InternalSCTX.g:10643:1: entryRuleFunctionCallEffect returns [EObject current=null] : iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleFunctionCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionCallEffect = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:10745:59: (iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF )
            // InternalSCTX.g:10746:2: iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF
=======
            // InternalSCTX.g:10643:59: (iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF )
            // InternalSCTX.g:10644:2: iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunctionCallEffect=ruleFunctionCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionCallEffect"


    // $ANTLR start "ruleFunctionCallEffect"
<<<<<<< HEAD
    // InternalSCTX.g:10752:1: ruleFunctionCallEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ) ;
=======
    // InternalSCTX.g:10650:1: ruleFunctionCallEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleFunctionCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_functionName_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parameters_4_0 = null;

        EObject lv_parameters_6_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:10758:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ) )
            // InternalSCTX.g:10759:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
            {
            // InternalSCTX.g:10759:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
            // InternalSCTX.g:10760:3: ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            {
            // InternalSCTX.g:10760:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop356:
            do {
                int alt356=2;
                int LA356_0 = input.LA(1);

                if ( (LA356_0==RULE_COMMENT_ANNOTATION||LA356_0==106) ) {
                    alt356=1;
                }


                switch (alt356) {
            	case 1 :
            	    // InternalSCTX.g:10761:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:10761:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:10762:5: lv_annotations_0_0= ruleAnnotation
=======
            // InternalSCTX.g:10656:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ) )
            // InternalSCTX.g:10657:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
            {
            // InternalSCTX.g:10657:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
            // InternalSCTX.g:10658:3: ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            {
            // InternalSCTX.g:10658:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop354:
            do {
                int alt354=2;
                int LA354_0 = input.LA(1);

                if ( (LA354_0==RULE_COMMENT_ANNOTATION||LA354_0==102) ) {
                    alt354=1;
                }


                switch (alt354) {
            	case 1 :
            	    // InternalSCTX.g:10659:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:10659:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:10660:5: lv_annotations_0_0= ruleAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_175);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
<<<<<<< HEAD
            	    break loop356;
                }
            } while (true);

            // InternalSCTX.g:10779:3: (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            // InternalSCTX.g:10780:4: otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
=======
            	    break loop354;
                }
            } while (true);

            // InternalSCTX.g:10677:3: (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            // InternalSCTX.g:10678:4: otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            otherlv_1=(Token)match(input,79,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_1, grammarAccess.getFunctionCallEffectAccess().getExternKeyword_1_0());
              			
            }
<<<<<<< HEAD
            // InternalSCTX.g:10784:4: ( (lv_functionName_2_0= RULE_ID ) )
            // InternalSCTX.g:10785:5: (lv_functionName_2_0= RULE_ID )
            {
            // InternalSCTX.g:10785:5: (lv_functionName_2_0= RULE_ID )
            // InternalSCTX.g:10786:6: lv_functionName_2_0= RULE_ID
=======
            // InternalSCTX.g:10682:4: ( (lv_functionName_2_0= RULE_ID ) )
            // InternalSCTX.g:10683:5: (lv_functionName_2_0= RULE_ID )
            {
            // InternalSCTX.g:10683:5: (lv_functionName_2_0= RULE_ID )
            // InternalSCTX.g:10684:6: lv_functionName_2_0= RULE_ID
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            lv_functionName_2_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_119); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						newLeafNode(lv_functionName_2_0, grammarAccess.getFunctionCallEffectAccess().getFunctionNameIDTerminalRuleCall_1_1_0());
              					
            }
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElement(grammarAccess.getFunctionCallEffectRule());
              						}
              						setWithLastConsumed(
              							current,
              							"functionName",
              							lv_functionName_2_0,
              							"de.cau.cs.kieler.annotations.Annotations.ID");
              					
            }

            }


            }

<<<<<<< HEAD
            // InternalSCTX.g:10802:4: ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            int alt358=2;
            int LA358_0 = input.LA(1);

            if ( (LA358_0==31) ) {
                alt358=1;
            }
            else if ( (LA358_0==70) ) {
                alt358=2;
=======
            // InternalSCTX.g:10700:4: ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            int alt356=2;
            int LA356_0 = input.LA(1);

            if ( (LA356_0==31) ) {
                alt356=1;
            }
            else if ( (LA356_0==69) ) {
                alt356=2;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
<<<<<<< HEAD
                    new NoViableAltException("", 358, 0, input);

                throw nvae;
            }
            switch (alt358) {
                case 1 :
                    // InternalSCTX.g:10803:5: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    {
                    // InternalSCTX.g:10803:5: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    // InternalSCTX.g:10804:6: otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')'
=======
                    new NoViableAltException("", 356, 0, input);

                throw nvae;
            }
            switch (alt356) {
                case 1 :
                    // InternalSCTX.g:10701:5: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    {
                    // InternalSCTX.g:10701:5: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    // InternalSCTX.g:10702:6: otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    otherlv_3=(Token)match(input,31,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_3, grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisKeyword_1_2_0_0());
                      					
                    }
<<<<<<< HEAD
                    // InternalSCTX.g:10808:6: ( (lv_parameters_4_0= ruleParameter ) )
                    // InternalSCTX.g:10809:7: (lv_parameters_4_0= ruleParameter )
                    {
                    // InternalSCTX.g:10809:7: (lv_parameters_4_0= ruleParameter )
                    // InternalSCTX.g:10810:8: lv_parameters_4_0= ruleParameter
=======
                    // InternalSCTX.g:10706:6: ( (lv_parameters_4_0= ruleParameter ) )
                    // InternalSCTX.g:10707:7: (lv_parameters_4_0= ruleParameter )
                    {
                    // InternalSCTX.g:10707:7: (lv_parameters_4_0= ruleParameter )
                    // InternalSCTX.g:10708:8: lv_parameters_4_0= ruleParameter
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_1_2_0_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_parameters_4_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
                      								}
                      								add(
                      									current,
                      									"parameters",
                      									lv_parameters_4_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

<<<<<<< HEAD
                    // InternalSCTX.g:10827:6: (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )*
                    loop357:
                    do {
                        int alt357=2;
                        int LA357_0 = input.LA(1);

                        if ( (LA357_0==20) ) {
                            alt357=1;
                        }


                        switch (alt357) {
                    	case 1 :
                    	    // InternalSCTX.g:10828:7: otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) )
=======
                    // InternalSCTX.g:10725:6: (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )*
                    loop355:
                    do {
                        int alt355=2;
                        int LA355_0 = input.LA(1);

                        if ( (LA355_0==20) ) {
                            alt355=1;
                        }


                        switch (alt355) {
                    	case 1 :
                    	    // InternalSCTX.g:10726:7: otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    otherlv_5=(Token)match(input,20,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_5, grammarAccess.getFunctionCallEffectAccess().getCommaKeyword_1_2_0_2_0());
                    	      						
                    	    }
<<<<<<< HEAD
                    	    // InternalSCTX.g:10832:7: ( (lv_parameters_6_0= ruleParameter ) )
                    	    // InternalSCTX.g:10833:8: (lv_parameters_6_0= ruleParameter )
                    	    {
                    	    // InternalSCTX.g:10833:8: (lv_parameters_6_0= ruleParameter )
                    	    // InternalSCTX.g:10834:9: lv_parameters_6_0= ruleParameter
=======
                    	    // InternalSCTX.g:10730:7: ( (lv_parameters_6_0= ruleParameter ) )
                    	    // InternalSCTX.g:10731:8: (lv_parameters_6_0= ruleParameter )
                    	    {
                    	    // InternalSCTX.g:10731:8: (lv_parameters_6_0= ruleParameter )
                    	    // InternalSCTX.g:10732:9: lv_parameters_6_0= ruleParameter
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      									newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_1_2_0_2_1_0());
                    	      								
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_31);
                    	    lv_parameters_6_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									if (current==null) {
                    	      										current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
                    	      									}
                    	      									add(
                    	      										current,
                    	      										"parameters",
                    	      										lv_parameters_6_0,
                    	      										"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      									afterParserOrEnumRuleCall();
                    	      								
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
<<<<<<< HEAD
                    	    break loop357;
=======
                    	    break loop355;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_7, grammarAccess.getFunctionCallEffectAccess().getRightParenthesisKeyword_1_2_0_3());
                      					
                    }

                    }


                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:10858:5: otherlv_8= '()'
=======
                    // InternalSCTX.g:10756:5: otherlv_8= '()'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    otherlv_8=(Token)match(input,69,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_1_2_1());
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionCallEffect"


    // $ANTLR start "entryRulePrintCallEffect"
<<<<<<< HEAD
    // InternalSCTX.g:10868:1: entryRulePrintCallEffect returns [EObject current=null] : iv_rulePrintCallEffect= rulePrintCallEffect EOF ;
=======
    // InternalSCTX.g:10766:1: entryRulePrintCallEffect returns [EObject current=null] : iv_rulePrintCallEffect= rulePrintCallEffect EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRulePrintCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrintCallEffect = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:10868:56: (iv_rulePrintCallEffect= rulePrintCallEffect EOF )
            // InternalSCTX.g:10869:2: iv_rulePrintCallEffect= rulePrintCallEffect EOF
=======
            // InternalSCTX.g:10766:56: (iv_rulePrintCallEffect= rulePrintCallEffect EOF )
            // InternalSCTX.g:10767:2: iv_rulePrintCallEffect= rulePrintCallEffect EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrintCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrintCallEffect=rulePrintCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrintCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrintCallEffect"


    // $ANTLR start "rulePrintCallEffect"
<<<<<<< HEAD
    // InternalSCTX.g:10875:1: rulePrintCallEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? ) ;
=======
    // InternalSCTX.g:10773:1: rulePrintCallEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject rulePrintCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;

        EObject lv_schedule_8_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:10881:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:10882:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:10882:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:10883:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:10883:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop359:
            do {
                int alt359=2;
                int LA359_0 = input.LA(1);

                if ( (LA359_0==RULE_COMMENT_ANNOTATION||LA359_0==106) ) {
                    alt359=1;
                }


                switch (alt359) {
            	case 1 :
            	    // InternalSCTX.g:10884:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:10884:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:10885:5: lv_annotations_0_0= ruleAnnotation
=======
            // InternalSCTX.g:10779:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:10780:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:10780:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:10781:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:10781:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop357:
            do {
                int alt357=2;
                int LA357_0 = input.LA(1);

                if ( (LA357_0==RULE_COMMENT_ANNOTATION||LA357_0==102) ) {
                    alt357=1;
                }


                switch (alt357) {
            	case 1 :
            	    // InternalSCTX.g:10782:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:10782:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:10783:5: lv_annotations_0_0= ruleAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPrintCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_176);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
<<<<<<< HEAD
            	    break loop359;
=======
            	    break loop357;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
            } while (true);

            otherlv_1=(Token)match(input,83,FollowSets000.FOLLOW_140); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getPrintCallEffectAccess().getPrintKeyword_1());
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:10906:3: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
            // InternalSCTX.g:10907:4: otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')'
=======
            // InternalSCTX.g:10804:3: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
            // InternalSCTX.g:10805:4: otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            otherlv_2=(Token)match(input,31,FollowSets000.FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_2, grammarAccess.getPrintCallEffectAccess().getLeftParenthesisKeyword_2_0());
              			
            }
<<<<<<< HEAD
            // InternalSCTX.g:10911:4: ( (lv_parameters_3_0= ruleParameter ) )
            // InternalSCTX.g:10912:5: (lv_parameters_3_0= ruleParameter )
            {
            // InternalSCTX.g:10912:5: (lv_parameters_3_0= ruleParameter )
            // InternalSCTX.g:10913:6: lv_parameters_3_0= ruleParameter
=======
            // InternalSCTX.g:10809:4: ( (lv_parameters_3_0= ruleParameter ) )
            // InternalSCTX.g:10810:5: (lv_parameters_3_0= ruleParameter )
            {
            // InternalSCTX.g:10810:5: (lv_parameters_3_0= ruleParameter )
            // InternalSCTX.g:10811:6: lv_parameters_3_0= ruleParameter
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getPrintCallEffectAccess().getParametersParameterParserRuleCall_2_1_0());
              					
            }
            pushFollow(FollowSets000.FOLLOW_31);
            lv_parameters_3_0=ruleParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
              						}
              						add(
              							current,
              							"parameters",
              							lv_parameters_3_0,
              							"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }

<<<<<<< HEAD
            // InternalSCTX.g:10930:4: (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )*
            loop360:
            do {
                int alt360=2;
                int LA360_0 = input.LA(1);

                if ( (LA360_0==20) ) {
                    alt360=1;
                }


                switch (alt360) {
            	case 1 :
            	    // InternalSCTX.g:10931:5: otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) )
=======
            // InternalSCTX.g:10828:4: (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )*
            loop358:
            do {
                int alt358=2;
                int LA358_0 = input.LA(1);

                if ( (LA358_0==20) ) {
                    alt358=1;
                }


                switch (alt358) {
            	case 1 :
            	    // InternalSCTX.g:10829:5: otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    otherlv_4=(Token)match(input,20,FollowSets000.FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_4, grammarAccess.getPrintCallEffectAccess().getCommaKeyword_2_2_0());
            	      				
            	    }
<<<<<<< HEAD
            	    // InternalSCTX.g:10935:5: ( (lv_parameters_5_0= ruleParameter ) )
            	    // InternalSCTX.g:10936:6: (lv_parameters_5_0= ruleParameter )
            	    {
            	    // InternalSCTX.g:10936:6: (lv_parameters_5_0= ruleParameter )
            	    // InternalSCTX.g:10937:7: lv_parameters_5_0= ruleParameter
=======
            	    // InternalSCTX.g:10833:5: ( (lv_parameters_5_0= ruleParameter ) )
            	    // InternalSCTX.g:10834:6: (lv_parameters_5_0= ruleParameter )
            	    {
            	    // InternalSCTX.g:10834:6: (lv_parameters_5_0= ruleParameter )
            	    // InternalSCTX.g:10835:7: lv_parameters_5_0= ruleParameter
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getPrintCallEffectAccess().getParametersParameterParserRuleCall_2_2_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_31);
            	    lv_parameters_5_0=ruleParameter();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
            	      							}
            	      							add(
            	      								current,
            	      								"parameters",
            	      								lv_parameters_5_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
<<<<<<< HEAD
            	    break loop360;
=======
            	    break loop358;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
            } while (true);

            otherlv_6=(Token)match(input,32,FollowSets000.FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_6, grammarAccess.getPrintCallEffectAccess().getRightParenthesisKeyword_2_3());
              			
            }

            }

<<<<<<< HEAD
            // InternalSCTX.g:10960:3: (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )?
            int alt362=2;
            int LA362_0 = input.LA(1);

            if ( (LA362_0==29) ) {
                alt362=1;
            }
            switch (alt362) {
                case 1 :
                    // InternalSCTX.g:10961:4: otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+
=======
            // InternalSCTX.g:10858:3: (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )?
            int alt360=2;
            int LA360_0 = input.LA(1);

            if ( (LA360_0==29) ) {
                alt360=1;
            }
            switch (alt360) {
                case 1 :
                    // InternalSCTX.g:10859:4: otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    otherlv_7=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getPrintCallEffectAccess().getScheduleKeyword_3_0());
                      			
                    }
<<<<<<< HEAD
                    // InternalSCTX.g:10965:4: ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+
                    int cnt361=0;
                    loop361:
                    do {
                        int alt361=2;
                        alt361 = dfa361.predict(input);
                        switch (alt361) {
                    	case 1 :
                    	    // InternalSCTX.g:10966:5: (lv_schedule_8_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:10966:5: (lv_schedule_8_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:10967:6: lv_schedule_8_0= ruleScheduleObjectReference
=======
                    // InternalSCTX.g:10863:4: ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+
                    int cnt359=0;
                    loop359:
                    do {
                        int alt359=2;
                        alt359 = dfa359.predict(input);
                        switch (alt359) {
                    	case 1 :
                    	    // InternalSCTX.g:10864:5: (lv_schedule_8_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:10864:5: (lv_schedule_8_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:10865:6: lv_schedule_8_0= ruleScheduleObjectReference
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getPrintCallEffectAccess().getScheduleScheduleObjectReferenceParserRuleCall_3_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_60);
                    	    lv_schedule_8_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_8_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
<<<<<<< HEAD
                    	    if ( cnt361 >= 1 ) break loop361;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(361, input);
                                throw eee;
                        }
                        cnt361++;
=======
                    	    if ( cnt359 >= 1 ) break loop359;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(359, input);
                                throw eee;
                        }
                        cnt359++;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrintCallEffect"


    // $ANTLR start "entryRuleRandomizeCallEffect"
<<<<<<< HEAD
    // InternalSCTX.g:10989:1: entryRuleRandomizeCallEffect returns [EObject current=null] : iv_ruleRandomizeCallEffect= ruleRandomizeCallEffect EOF ;
=======
    // InternalSCTX.g:10887:1: entryRuleRandomizeCallEffect returns [EObject current=null] : iv_ruleRandomizeCallEffect= ruleRandomizeCallEffect EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleRandomizeCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRandomizeCallEffect = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:10989:60: (iv_ruleRandomizeCallEffect= ruleRandomizeCallEffect EOF )
            // InternalSCTX.g:10990:2: iv_ruleRandomizeCallEffect= ruleRandomizeCallEffect EOF
=======
            // InternalSCTX.g:10887:60: (iv_ruleRandomizeCallEffect= ruleRandomizeCallEffect EOF )
            // InternalSCTX.g:10888:2: iv_ruleRandomizeCallEffect= ruleRandomizeCallEffect EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRandomizeCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRandomizeCallEffect=ruleRandomizeCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRandomizeCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRandomizeCallEffect"


    // $ANTLR start "ruleRandomizeCallEffect"
<<<<<<< HEAD
    // InternalSCTX.g:10996:1: ruleRandomizeCallEffect returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ;
=======
    // InternalSCTX.g:10894:1: ruleRandomizeCallEffect returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleRandomizeCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_parameters_4_0 = null;

        EObject lv_parameters_6_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:11002:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
            // InternalSCTX.g:11003:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            {
            // InternalSCTX.g:11003:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            // InternalSCTX.g:11004:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            {
            // InternalSCTX.g:11004:3: ()
            // InternalSCTX.g:11005:4: 
=======
            // InternalSCTX.g:10900:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
            // InternalSCTX.g:10901:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            {
            // InternalSCTX.g:10901:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            // InternalSCTX.g:10902:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            {
            // InternalSCTX.g:10902:3: ()
            // InternalSCTX.g:10903:4: 
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRandomizeCallEffectAccess().getRandomizeCallEffectAction_0(),
              					current);
              			
            }

            }

<<<<<<< HEAD
            // InternalSCTX.g:11014:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop363:
            do {
                int alt363=2;
                int LA363_0 = input.LA(1);

                if ( (LA363_0==RULE_COMMENT_ANNOTATION||LA363_0==106) ) {
                    alt363=1;
                }


                switch (alt363) {
            	case 1 :
            	    // InternalSCTX.g:11015:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:11015:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:11016:5: lv_annotations_1_0= ruleAnnotation
=======
            // InternalSCTX.g:10912:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop361:
            do {
                int alt361=2;
                int LA361_0 = input.LA(1);

                if ( (LA361_0==RULE_COMMENT_ANNOTATION||LA361_0==102) ) {
                    alt361=1;
                }


                switch (alt361) {
            	case 1 :
            	    // InternalSCTX.g:10913:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:10913:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:10914:5: lv_annotations_1_0= ruleAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRandomizeCallEffectAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_177);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRandomizeCallEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
<<<<<<< HEAD
            	    break loop363;
=======
            	    break loop361;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
            } while (true);

            otherlv_2=(Token)match(input,84,FollowSets000.FOLLOW_119); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getRandomizeCallEffectAccess().getRandomizeKeyword_2());
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:11037:3: ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            int alt365=2;
            int LA365_0 = input.LA(1);

            if ( (LA365_0==31) ) {
                alt365=1;
            }
            else if ( (LA365_0==70) ) {
                alt365=2;
=======
            // InternalSCTX.g:10935:3: ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            int alt363=2;
            int LA363_0 = input.LA(1);

            if ( (LA363_0==31) ) {
                alt363=1;
            }
            else if ( (LA363_0==69) ) {
                alt363=2;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
<<<<<<< HEAD
                    new NoViableAltException("", 365, 0, input);

                throw nvae;
            }
            switch (alt365) {
                case 1 :
                    // InternalSCTX.g:11038:4: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    {
                    // InternalSCTX.g:11038:4: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    // InternalSCTX.g:11039:5: otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')'
=======
                    new NoViableAltException("", 363, 0, input);

                throw nvae;
            }
            switch (alt363) {
                case 1 :
                    // InternalSCTX.g:10936:4: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    {
                    // InternalSCTX.g:10936:4: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    // InternalSCTX.g:10937:5: otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    otherlv_3=(Token)match(input,31,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getRandomizeCallEffectAccess().getLeftParenthesisKeyword_3_0_0());
                      				
                    }
<<<<<<< HEAD
                    // InternalSCTX.g:11043:5: ( (lv_parameters_4_0= ruleParameter ) )
                    // InternalSCTX.g:11044:6: (lv_parameters_4_0= ruleParameter )
                    {
                    // InternalSCTX.g:11044:6: (lv_parameters_4_0= ruleParameter )
                    // InternalSCTX.g:11045:7: lv_parameters_4_0= ruleParameter
=======
                    // InternalSCTX.g:10941:5: ( (lv_parameters_4_0= ruleParameter ) )
                    // InternalSCTX.g:10942:6: (lv_parameters_4_0= ruleParameter )
                    {
                    // InternalSCTX.g:10942:6: (lv_parameters_4_0= ruleParameter )
                    // InternalSCTX.g:10943:7: lv_parameters_4_0= ruleParameter
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRandomizeCallEffectAccess().getParametersParameterParserRuleCall_3_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_parameters_4_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRandomizeCallEffectRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_4_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

<<<<<<< HEAD
                    // InternalSCTX.g:11062:5: (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )*
                    loop364:
                    do {
                        int alt364=2;
                        int LA364_0 = input.LA(1);

                        if ( (LA364_0==20) ) {
                            alt364=1;
                        }


                        switch (alt364) {
                    	case 1 :
                    	    // InternalSCTX.g:11063:6: otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) )
=======
                    // InternalSCTX.g:10960:5: (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )*
                    loop362:
                    do {
                        int alt362=2;
                        int LA362_0 = input.LA(1);

                        if ( (LA362_0==20) ) {
                            alt362=1;
                        }


                        switch (alt362) {
                    	case 1 :
                    	    // InternalSCTX.g:10961:6: otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    otherlv_5=(Token)match(input,20,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_5, grammarAccess.getRandomizeCallEffectAccess().getCommaKeyword_3_0_2_0());
                    	      					
                    	    }
<<<<<<< HEAD
                    	    // InternalSCTX.g:11067:6: ( (lv_parameters_6_0= ruleParameter ) )
                    	    // InternalSCTX.g:11068:7: (lv_parameters_6_0= ruleParameter )
                    	    {
                    	    // InternalSCTX.g:11068:7: (lv_parameters_6_0= ruleParameter )
                    	    // InternalSCTX.g:11069:8: lv_parameters_6_0= ruleParameter
=======
                    	    // InternalSCTX.g:10965:6: ( (lv_parameters_6_0= ruleParameter ) )
                    	    // InternalSCTX.g:10966:7: (lv_parameters_6_0= ruleParameter )
                    	    {
                    	    // InternalSCTX.g:10966:7: (lv_parameters_6_0= ruleParameter )
                    	    // InternalSCTX.g:10967:8: lv_parameters_6_0= ruleParameter
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getRandomizeCallEffectAccess().getParametersParameterParserRuleCall_3_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_31);
                    	    lv_parameters_6_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getRandomizeCallEffectRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_6_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
<<<<<<< HEAD
                    	    break loop364;
=======
                    	    break loop362;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getRandomizeCallEffectAccess().getRightParenthesisKeyword_3_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:11093:4: otherlv_8= '()'
=======
                    // InternalSCTX.g:10991:4: otherlv_8= '()'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    otherlv_8=(Token)match(input,69,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getRandomizeCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRandomizeCallEffect"


    // $ANTLR start "entryRuleExpression"
<<<<<<< HEAD
    // InternalSCTX.g:11102:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
=======
    // InternalSCTX.g:11000:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:11102:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalSCTX.g:11103:2: iv_ruleExpression= ruleExpression EOF
=======
            // InternalSCTX.g:11000:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalSCTX.g:11001:2: iv_ruleExpression= ruleExpression EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
<<<<<<< HEAD
    // InternalSCTX.g:11109:1: ruleExpression returns [EObject current=null] : (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression ) ;
=======
    // InternalSCTX.g:11007:1: ruleExpression returns [EObject current=null] : (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BoolExpression_0 = null;

        EObject this_ValuedExpression_1 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:11115:2: ( (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression ) )
            // InternalSCTX.g:11116:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression )
            {
            // InternalSCTX.g:11116:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression )
            int alt366=2;
            alt366 = dfa366.predict(input);
            switch (alt366) {
                case 1 :
                    // InternalSCTX.g:11117:3: this_BoolExpression_0= ruleBoolExpression
=======
            // InternalSCTX.g:11013:2: ( (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression ) )
            // InternalSCTX.g:11014:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression )
            {
            // InternalSCTX.g:11014:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression )
            int alt364=2;
            alt364 = dfa364.predict(input);
            switch (alt364) {
                case 1 :
                    // InternalSCTX.g:11015:3: this_BoolExpression_0= ruleBoolExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionAccess().getBoolExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolExpression_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoolExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:11129:3: this_ValuedExpression_1= ruleValuedExpression
=======
                    // InternalSCTX.g:11027:3: this_ValuedExpression_1= ruleValuedExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionAccess().getValuedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedExpression_1=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleBoolExpression"
<<<<<<< HEAD
    // InternalSCTX.g:11144:1: entryRuleBoolExpression returns [EObject current=null] : iv_ruleBoolExpression= ruleBoolExpression EOF ;
=======
    // InternalSCTX.g:11042:1: entryRuleBoolExpression returns [EObject current=null] : iv_ruleBoolExpression= ruleBoolExpression EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleBoolExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBoolExpression = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:11144:55: (iv_ruleBoolExpression= ruleBoolExpression EOF )
            // InternalSCTX.g:11145:2: iv_ruleBoolExpression= ruleBoolExpression EOF
=======
            // InternalSCTX.g:11042:55: (iv_ruleBoolExpression= ruleBoolExpression EOF )
            // InternalSCTX.g:11043:2: iv_ruleBoolExpression= ruleBoolExpression EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBoolExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBoolExpression=ruleBoolExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBoolExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBoolExpression"


    // $ANTLR start "ruleBoolExpression"
<<<<<<< HEAD
    // InternalSCTX.g:11151:1: ruleBoolExpression returns [EObject current=null] : this_LogicalOrExpression_0= ruleLogicalOrExpression ;
=======
    // InternalSCTX.g:11049:1: ruleBoolExpression returns [EObject current=null] : this_LogicalOrExpression_0= ruleLogicalOrExpression ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleBoolExpression() throws RecognitionException {
        EObject current = null;

        EObject this_LogicalOrExpression_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:11157:2: (this_LogicalOrExpression_0= ruleLogicalOrExpression )
            // InternalSCTX.g:11158:2: this_LogicalOrExpression_0= ruleLogicalOrExpression
=======
            // InternalSCTX.g:11055:2: (this_LogicalOrExpression_0= ruleLogicalOrExpression )
            // InternalSCTX.g:11056:2: this_LogicalOrExpression_0= ruleLogicalOrExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getBoolExpressionAccess().getLogicalOrExpressionParserRuleCall());
              	
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_LogicalOrExpression_0=ruleLogicalOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_LogicalOrExpression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBoolExpression"


    // $ANTLR start "entryRuleLogicalOrExpression"
<<<<<<< HEAD
    // InternalSCTX.g:11172:1: entryRuleLogicalOrExpression returns [EObject current=null] : iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF ;
=======
    // InternalSCTX.g:11070:1: entryRuleLogicalOrExpression returns [EObject current=null] : iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleLogicalOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalOrExpression = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:11172:60: (iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF )
            // InternalSCTX.g:11173:2: iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF
=======
            // InternalSCTX.g:11070:60: (iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF )
            // InternalSCTX.g:11071:2: iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLogicalOrExpression=ruleLogicalOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalOrExpression"


    // $ANTLR start "ruleLogicalOrExpression"
<<<<<<< HEAD
    // InternalSCTX.g:11179:1: ruleLogicalOrExpression returns [EObject current=null] : (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? ) ;
=======
    // InternalSCTX.g:11077:1: ruleLogicalOrExpression returns [EObject current=null] : (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleLogicalOrExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_LogicalAndExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:11185:2: ( (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? ) )
            // InternalSCTX.g:11186:2: (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? )
            {
            // InternalSCTX.g:11186:2: (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? )
            // InternalSCTX.g:11187:3: this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )?
=======
            // InternalSCTX.g:11083:2: ( (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? ) )
            // InternalSCTX.g:11084:2: (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? )
            {
            // InternalSCTX.g:11084:2: (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? )
            // InternalSCTX.g:11085:3: this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )?
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_178);
            this_LogicalAndExpression_0=ruleLogicalAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LogicalAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:11198:3: ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )?
            int alt368=2;
            int LA368_0 = input.LA(1);

            if ( (LA368_0==86) ) {
                alt368=1;
            }
            switch (alt368) {
                case 1 :
                    // InternalSCTX.g:11199:4: () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )*
                    {
                    // InternalSCTX.g:11199:4: ()
                    // InternalSCTX.g:11200:5: 
=======
            // InternalSCTX.g:11096:3: ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )?
            int alt366=2;
            int LA366_0 = input.LA(1);

            if ( (LA366_0==85) ) {
                alt366=1;
            }
            switch (alt366) {
                case 1 :
                    // InternalSCTX.g:11097:4: () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )*
                    {
                    // InternalSCTX.g:11097:4: ()
                    // InternalSCTX.g:11098:5: 
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getLogicalOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

<<<<<<< HEAD
                    // InternalSCTX.g:11209:4: ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) )
                    // InternalSCTX.g:11210:5: ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) )
                    {
                    // InternalSCTX.g:11210:5: ( (lv_operator_2_0= ruleLogicalOrOperator ) )
                    // InternalSCTX.g:11211:6: (lv_operator_2_0= ruleLogicalOrOperator )
                    {
                    // InternalSCTX.g:11211:6: (lv_operator_2_0= ruleLogicalOrOperator )
                    // InternalSCTX.g:11212:7: lv_operator_2_0= ruleLogicalOrOperator
=======
                    // InternalSCTX.g:11107:4: ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) )
                    // InternalSCTX.g:11108:5: ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) )
                    {
                    // InternalSCTX.g:11108:5: ( (lv_operator_2_0= ruleLogicalOrOperator ) )
                    // InternalSCTX.g:11109:6: (lv_operator_2_0= ruleLogicalOrOperator )
                    {
                    // InternalSCTX.g:11109:6: (lv_operator_2_0= ruleLogicalOrOperator )
                    // InternalSCTX.g:11110:7: lv_operator_2_0= ruleLogicalOrOperator
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getOperatorLogicalOrOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_39);
                    lv_operator_2_0=ruleLogicalOrOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.LogicalOrOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

<<<<<<< HEAD
                    // InternalSCTX.g:11229:5: ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) )
                    // InternalSCTX.g:11230:6: (lv_subExpressions_3_0= ruleLogicalAndExpression )
                    {
                    // InternalSCTX.g:11230:6: (lv_subExpressions_3_0= ruleLogicalAndExpression )
                    // InternalSCTX.g:11231:7: lv_subExpressions_3_0= ruleLogicalAndExpression
=======
                    // InternalSCTX.g:11127:5: ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) )
                    // InternalSCTX.g:11128:6: (lv_subExpressions_3_0= ruleLogicalAndExpression )
                    {
                    // InternalSCTX.g:11128:6: (lv_subExpressions_3_0= ruleLogicalAndExpression )
                    // InternalSCTX.g:11129:7: lv_subExpressions_3_0= ruleLogicalAndExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_178);
                    lv_subExpressions_3_0=ruleLogicalAndExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.LogicalAndExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

<<<<<<< HEAD
                    // InternalSCTX.g:11249:4: (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )*
                    loop367:
                    do {
                        int alt367=2;
                        int LA367_0 = input.LA(1);

                        if ( (LA367_0==86) ) {
                            alt367=1;
                        }


                        switch (alt367) {
                    	case 1 :
                    	    // InternalSCTX.g:11250:5: otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) )
=======
                    // InternalSCTX.g:11147:4: (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )*
                    loop365:
                    do {
                        int alt365=2;
                        int LA365_0 = input.LA(1);

                        if ( (LA365_0==85) ) {
                            alt365=1;
                        }


                        switch (alt365) {
                    	case 1 :
                    	    // InternalSCTX.g:11148:5: otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    otherlv_4=(Token)match(input,85,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getLogicalOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_2_0());
                    	      				
                    	    }
<<<<<<< HEAD
                    	    // InternalSCTX.g:11254:5: ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) )
                    	    // InternalSCTX.g:11255:6: (lv_subExpressions_5_0= ruleLogicalAndExpression )
                    	    {
                    	    // InternalSCTX.g:11255:6: (lv_subExpressions_5_0= ruleLogicalAndExpression )
                    	    // InternalSCTX.g:11256:7: lv_subExpressions_5_0= ruleLogicalAndExpression
=======
                    	    // InternalSCTX.g:11152:5: ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) )
                    	    // InternalSCTX.g:11153:6: (lv_subExpressions_5_0= ruleLogicalAndExpression )
                    	    {
                    	    // InternalSCTX.g:11153:6: (lv_subExpressions_5_0= ruleLogicalAndExpression )
                    	    // InternalSCTX.g:11154:7: lv_subExpressions_5_0= ruleLogicalAndExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_178);
                    	    lv_subExpressions_5_0=ruleLogicalAndExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.LogicalAndExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
<<<<<<< HEAD
                    	    break loop367;
=======
                    	    break loop365;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalOrExpression"


    // $ANTLR start "entryRuleLogicalAndExpression"
<<<<<<< HEAD
    // InternalSCTX.g:11279:1: entryRuleLogicalAndExpression returns [EObject current=null] : iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF ;
=======
    // InternalSCTX.g:11177:1: entryRuleLogicalAndExpression returns [EObject current=null] : iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleLogicalAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalAndExpression = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:11279:61: (iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF )
            // InternalSCTX.g:11280:2: iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF
=======
            // InternalSCTX.g:11177:61: (iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF )
            // InternalSCTX.g:11178:2: iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalAndExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLogicalAndExpression=ruleLogicalAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalAndExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalAndExpression"


    // $ANTLR start "ruleLogicalAndExpression"
<<<<<<< HEAD
    // InternalSCTX.g:11286:1: ruleLogicalAndExpression returns [EObject current=null] : (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? ) ;
=======
    // InternalSCTX.g:11184:1: ruleLogicalAndExpression returns [EObject current=null] : (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleLogicalAndExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_BitwiseOrExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:11292:2: ( (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? ) )
            // InternalSCTX.g:11293:2: (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? )
            {
            // InternalSCTX.g:11293:2: (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? )
            // InternalSCTX.g:11294:3: this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )?
=======
            // InternalSCTX.g:11190:2: ( (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? ) )
            // InternalSCTX.g:11191:2: (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? )
            {
            // InternalSCTX.g:11191:2: (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? )
            // InternalSCTX.g:11192:3: this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )?
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getBitwiseOrExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_179);
            this_BitwiseOrExpression_0=ruleBitwiseOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BitwiseOrExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:11305:3: ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )?
            int alt370=2;
            int LA370_0 = input.LA(1);

            if ( (LA370_0==87) ) {
                alt370=1;
            }
            switch (alt370) {
                case 1 :
                    // InternalSCTX.g:11306:4: () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )*
                    {
                    // InternalSCTX.g:11306:4: ()
                    // InternalSCTX.g:11307:5: 
=======
            // InternalSCTX.g:11203:3: ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )?
            int alt368=2;
            int LA368_0 = input.LA(1);

            if ( (LA368_0==86) ) {
                alt368=1;
            }
            switch (alt368) {
                case 1 :
                    // InternalSCTX.g:11204:4: () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )*
                    {
                    // InternalSCTX.g:11204:4: ()
                    // InternalSCTX.g:11205:5: 
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getLogicalAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

<<<<<<< HEAD
                    // InternalSCTX.g:11316:4: ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) )
                    // InternalSCTX.g:11317:5: ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) )
                    {
                    // InternalSCTX.g:11317:5: ( (lv_operator_2_0= ruleLogicalAndOperator ) )
                    // InternalSCTX.g:11318:6: (lv_operator_2_0= ruleLogicalAndOperator )
                    {
                    // InternalSCTX.g:11318:6: (lv_operator_2_0= ruleLogicalAndOperator )
                    // InternalSCTX.g:11319:7: lv_operator_2_0= ruleLogicalAndOperator
=======
                    // InternalSCTX.g:11214:4: ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) )
                    // InternalSCTX.g:11215:5: ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) )
                    {
                    // InternalSCTX.g:11215:5: ( (lv_operator_2_0= ruleLogicalAndOperator ) )
                    // InternalSCTX.g:11216:6: (lv_operator_2_0= ruleLogicalAndOperator )
                    {
                    // InternalSCTX.g:11216:6: (lv_operator_2_0= ruleLogicalAndOperator )
                    // InternalSCTX.g:11217:7: lv_operator_2_0= ruleLogicalAndOperator
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getOperatorLogicalAndOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_39);
                    lv_operator_2_0=ruleLogicalAndOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.LogicalAndOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

<<<<<<< HEAD
                    // InternalSCTX.g:11336:5: ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) )
                    // InternalSCTX.g:11337:6: (lv_subExpressions_3_0= ruleBitwiseOrExpression )
                    {
                    // InternalSCTX.g:11337:6: (lv_subExpressions_3_0= ruleBitwiseOrExpression )
                    // InternalSCTX.g:11338:7: lv_subExpressions_3_0= ruleBitwiseOrExpression
=======
                    // InternalSCTX.g:11234:5: ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) )
                    // InternalSCTX.g:11235:6: (lv_subExpressions_3_0= ruleBitwiseOrExpression )
                    {
                    // InternalSCTX.g:11235:6: (lv_subExpressions_3_0= ruleBitwiseOrExpression )
                    // InternalSCTX.g:11236:7: lv_subExpressions_3_0= ruleBitwiseOrExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsBitwiseOrExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_179);
                    lv_subExpressions_3_0=ruleBitwiseOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseOrExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

<<<<<<< HEAD
                    // InternalSCTX.g:11356:4: (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )*
                    loop369:
                    do {
                        int alt369=2;
                        int LA369_0 = input.LA(1);

                        if ( (LA369_0==87) ) {
                            alt369=1;
                        }


                        switch (alt369) {
                    	case 1 :
                    	    // InternalSCTX.g:11357:5: otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) )
=======
                    // InternalSCTX.g:11254:4: (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )*
                    loop367:
                    do {
                        int alt367=2;
                        int LA367_0 = input.LA(1);

                        if ( (LA367_0==86) ) {
                            alt367=1;
                        }


                        switch (alt367) {
                    	case 1 :
                    	    // InternalSCTX.g:11255:5: otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    otherlv_4=(Token)match(input,86,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getLogicalAndExpressionAccess().getAmpersandAmpersandKeyword_1_2_0());
                    	      				
                    	    }
<<<<<<< HEAD
                    	    // InternalSCTX.g:11361:5: ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) )
                    	    // InternalSCTX.g:11362:6: (lv_subExpressions_5_0= ruleBitwiseOrExpression )
                    	    {
                    	    // InternalSCTX.g:11362:6: (lv_subExpressions_5_0= ruleBitwiseOrExpression )
                    	    // InternalSCTX.g:11363:7: lv_subExpressions_5_0= ruleBitwiseOrExpression
=======
                    	    // InternalSCTX.g:11259:5: ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) )
                    	    // InternalSCTX.g:11260:6: (lv_subExpressions_5_0= ruleBitwiseOrExpression )
                    	    {
                    	    // InternalSCTX.g:11260:6: (lv_subExpressions_5_0= ruleBitwiseOrExpression )
                    	    // InternalSCTX.g:11261:7: lv_subExpressions_5_0= ruleBitwiseOrExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsBitwiseOrExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_179);
                    	    lv_subExpressions_5_0=ruleBitwiseOrExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseOrExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
<<<<<<< HEAD
                    	    break loop369;
=======
                    	    break loop367;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalAndExpression"


    // $ANTLR start "entryRuleBitwiseOrExpression"
<<<<<<< HEAD
    // InternalSCTX.g:11386:1: entryRuleBitwiseOrExpression returns [EObject current=null] : iv_ruleBitwiseOrExpression= ruleBitwiseOrExpression EOF ;
=======
    // InternalSCTX.g:11284:1: entryRuleBitwiseOrExpression returns [EObject current=null] : iv_ruleBitwiseOrExpression= ruleBitwiseOrExpression EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleBitwiseOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseOrExpression = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:11386:60: (iv_ruleBitwiseOrExpression= ruleBitwiseOrExpression EOF )
            // InternalSCTX.g:11387:2: iv_ruleBitwiseOrExpression= ruleBitwiseOrExpression EOF
=======
            // InternalSCTX.g:11284:60: (iv_ruleBitwiseOrExpression= ruleBitwiseOrExpression EOF )
            // InternalSCTX.g:11285:2: iv_ruleBitwiseOrExpression= ruleBitwiseOrExpression EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseOrExpression=ruleBitwiseOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseOrExpression"


    // $ANTLR start "ruleBitwiseOrExpression"
<<<<<<< HEAD
    // InternalSCTX.g:11393:1: ruleBitwiseOrExpression returns [EObject current=null] : (this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )? ) ;
=======
    // InternalSCTX.g:11291:1: ruleBitwiseOrExpression returns [EObject current=null] : (this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )? ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleBitwiseOrExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_BitwiseXOrExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:11399:2: ( (this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )? ) )
            // InternalSCTX.g:11400:2: (this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )? )
            {
            // InternalSCTX.g:11400:2: (this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )? )
            // InternalSCTX.g:11401:3: this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )?
=======
            // InternalSCTX.g:11297:2: ( (this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )? ) )
            // InternalSCTX.g:11298:2: (this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )? )
            {
            // InternalSCTX.g:11298:2: (this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )? )
            // InternalSCTX.g:11299:3: this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )?
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getBitwiseXOrExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_180);
            this_BitwiseXOrExpression_0=ruleBitwiseXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BitwiseXOrExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:11412:3: ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )?
            int alt372=2;
            int LA372_0 = input.LA(1);

            if ( (LA372_0==88) ) {
                alt372=1;
            }
            switch (alt372) {
                case 1 :
                    // InternalSCTX.g:11413:4: () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )*
                    {
                    // InternalSCTX.g:11413:4: ()
                    // InternalSCTX.g:11414:5: 
=======
            // InternalSCTX.g:11310:3: ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )?
            int alt370=2;
            int LA370_0 = input.LA(1);

            if ( (LA370_0==87) ) {
                alt370=1;
            }
            switch (alt370) {
                case 1 :
                    // InternalSCTX.g:11311:4: () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )*
                    {
                    // InternalSCTX.g:11311:4: ()
                    // InternalSCTX.g:11312:5: 
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getBitwiseOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

<<<<<<< HEAD
                    // InternalSCTX.g:11423:4: ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) )
                    // InternalSCTX.g:11424:5: ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) )
                    {
                    // InternalSCTX.g:11424:5: ( (lv_operator_2_0= ruleBitwiseOrOperator ) )
                    // InternalSCTX.g:11425:6: (lv_operator_2_0= ruleBitwiseOrOperator )
                    {
                    // InternalSCTX.g:11425:6: (lv_operator_2_0= ruleBitwiseOrOperator )
                    // InternalSCTX.g:11426:7: lv_operator_2_0= ruleBitwiseOrOperator
=======
                    // InternalSCTX.g:11321:4: ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) )
                    // InternalSCTX.g:11322:5: ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) )
                    {
                    // InternalSCTX.g:11322:5: ( (lv_operator_2_0= ruleBitwiseOrOperator ) )
                    // InternalSCTX.g:11323:6: (lv_operator_2_0= ruleBitwiseOrOperator )
                    {
                    // InternalSCTX.g:11323:6: (lv_operator_2_0= ruleBitwiseOrOperator )
                    // InternalSCTX.g:11324:7: lv_operator_2_0= ruleBitwiseOrOperator
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getOperatorBitwiseOrOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_39);
                    lv_operator_2_0=ruleBitwiseOrOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseOrExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseOrOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

<<<<<<< HEAD
                    // InternalSCTX.g:11443:5: ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) )
                    // InternalSCTX.g:11444:6: (lv_subExpressions_3_0= ruleBitwiseXOrExpression )
                    {
                    // InternalSCTX.g:11444:6: (lv_subExpressions_3_0= ruleBitwiseXOrExpression )
                    // InternalSCTX.g:11445:7: lv_subExpressions_3_0= ruleBitwiseXOrExpression
=======
                    // InternalSCTX.g:11341:5: ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) )
                    // InternalSCTX.g:11342:6: (lv_subExpressions_3_0= ruleBitwiseXOrExpression )
                    {
                    // InternalSCTX.g:11342:6: (lv_subExpressions_3_0= ruleBitwiseXOrExpression )
                    // InternalSCTX.g:11343:7: lv_subExpressions_3_0= ruleBitwiseXOrExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsBitwiseXOrExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_180);
                    lv_subExpressions_3_0=ruleBitwiseXOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseOrExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseXOrExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

<<<<<<< HEAD
                    // InternalSCTX.g:11463:4: (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )*
                    loop371:
                    do {
                        int alt371=2;
                        int LA371_0 = input.LA(1);

                        if ( (LA371_0==88) ) {
                            alt371=1;
                        }


                        switch (alt371) {
                    	case 1 :
                    	    // InternalSCTX.g:11464:5: otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) )
=======
                    // InternalSCTX.g:11361:4: (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )*
                    loop369:
                    do {
                        int alt369=2;
                        int LA369_0 = input.LA(1);

                        if ( (LA369_0==87) ) {
                            alt369=1;
                        }


                        switch (alt369) {
                    	case 1 :
                    	    // InternalSCTX.g:11362:5: otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    otherlv_4=(Token)match(input,87,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getBitwiseOrExpressionAccess().getVerticalLineKeyword_1_2_0());
                    	      				
                    	    }
<<<<<<< HEAD
                    	    // InternalSCTX.g:11468:5: ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) )
                    	    // InternalSCTX.g:11469:6: (lv_subExpressions_5_0= ruleBitwiseXOrExpression )
                    	    {
                    	    // InternalSCTX.g:11469:6: (lv_subExpressions_5_0= ruleBitwiseXOrExpression )
                    	    // InternalSCTX.g:11470:7: lv_subExpressions_5_0= ruleBitwiseXOrExpression
=======
                    	    // InternalSCTX.g:11366:5: ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) )
                    	    // InternalSCTX.g:11367:6: (lv_subExpressions_5_0= ruleBitwiseXOrExpression )
                    	    {
                    	    // InternalSCTX.g:11367:6: (lv_subExpressions_5_0= ruleBitwiseXOrExpression )
                    	    // InternalSCTX.g:11368:7: lv_subExpressions_5_0= ruleBitwiseXOrExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsBitwiseXOrExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_180);
                    	    lv_subExpressions_5_0=ruleBitwiseXOrExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getBitwiseOrExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseXOrExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
<<<<<<< HEAD
                    	    break loop371;
=======
                    	    break loop369;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseOrExpression"


    // $ANTLR start "entryRuleBitwiseXOrExpression"
<<<<<<< HEAD
    // InternalSCTX.g:11493:1: entryRuleBitwiseXOrExpression returns [EObject current=null] : iv_ruleBitwiseXOrExpression= ruleBitwiseXOrExpression EOF ;
=======
    // InternalSCTX.g:11391:1: entryRuleBitwiseXOrExpression returns [EObject current=null] : iv_ruleBitwiseXOrExpression= ruleBitwiseXOrExpression EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleBitwiseXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseXOrExpression = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:11493:61: (iv_ruleBitwiseXOrExpression= ruleBitwiseXOrExpression EOF )
            // InternalSCTX.g:11494:2: iv_ruleBitwiseXOrExpression= ruleBitwiseXOrExpression EOF
=======
            // InternalSCTX.g:11391:61: (iv_ruleBitwiseXOrExpression= ruleBitwiseXOrExpression EOF )
            // InternalSCTX.g:11392:2: iv_ruleBitwiseXOrExpression= ruleBitwiseXOrExpression EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseXOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseXOrExpression=ruleBitwiseXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseXOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseXOrExpression"


    // $ANTLR start "ruleBitwiseXOrExpression"
<<<<<<< HEAD
    // InternalSCTX.g:11500:1: ruleBitwiseXOrExpression returns [EObject current=null] : (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? ) ;
=======
    // InternalSCTX.g:11398:1: ruleBitwiseXOrExpression returns [EObject current=null] : (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleBitwiseXOrExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_BitwiseAndExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:11506:2: ( (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? ) )
            // InternalSCTX.g:11507:2: (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? )
            {
            // InternalSCTX.g:11507:2: (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? )
            // InternalSCTX.g:11508:3: this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )?
=======
            // InternalSCTX.g:11404:2: ( (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? ) )
            // InternalSCTX.g:11405:2: (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? )
            {
            // InternalSCTX.g:11405:2: (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? )
            // InternalSCTX.g:11406:3: this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )?
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getBitwiseAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_181);
            this_BitwiseAndExpression_0=ruleBitwiseAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BitwiseAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:11519:3: ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )?
            int alt374=2;
            int LA374_0 = input.LA(1);

            if ( (LA374_0==89) ) {
                alt374=1;
            }
            switch (alt374) {
                case 1 :
                    // InternalSCTX.g:11520:4: () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )*
                    {
                    // InternalSCTX.g:11520:4: ()
                    // InternalSCTX.g:11521:5: 
=======
            // InternalSCTX.g:11417:3: ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )?
            int alt372=2;
            int LA372_0 = input.LA(1);

            if ( (LA372_0==88) ) {
                alt372=1;
            }
            switch (alt372) {
                case 1 :
                    // InternalSCTX.g:11418:4: () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )*
                    {
                    // InternalSCTX.g:11418:4: ()
                    // InternalSCTX.g:11419:5: 
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getBitwiseXOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

<<<<<<< HEAD
                    // InternalSCTX.g:11530:4: ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) )
                    // InternalSCTX.g:11531:5: ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) )
                    {
                    // InternalSCTX.g:11531:5: ( (lv_operator_2_0= ruleBitwiseXOrOperator ) )
                    // InternalSCTX.g:11532:6: (lv_operator_2_0= ruleBitwiseXOrOperator )
                    {
                    // InternalSCTX.g:11532:6: (lv_operator_2_0= ruleBitwiseXOrOperator )
                    // InternalSCTX.g:11533:7: lv_operator_2_0= ruleBitwiseXOrOperator
=======
                    // InternalSCTX.g:11428:4: ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) )
                    // InternalSCTX.g:11429:5: ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) )
                    {
                    // InternalSCTX.g:11429:5: ( (lv_operator_2_0= ruleBitwiseXOrOperator ) )
                    // InternalSCTX.g:11430:6: (lv_operator_2_0= ruleBitwiseXOrOperator )
                    {
                    // InternalSCTX.g:11430:6: (lv_operator_2_0= ruleBitwiseXOrOperator )
                    // InternalSCTX.g:11431:7: lv_operator_2_0= ruleBitwiseXOrOperator
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getOperatorBitwiseXOrOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_39);
                    lv_operator_2_0=ruleBitwiseXOrOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseXOrExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseXOrOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

<<<<<<< HEAD
                    // InternalSCTX.g:11550:5: ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) )
                    // InternalSCTX.g:11551:6: (lv_subExpressions_3_0= ruleBitwiseAndExpression )
                    {
                    // InternalSCTX.g:11551:6: (lv_subExpressions_3_0= ruleBitwiseAndExpression )
                    // InternalSCTX.g:11552:7: lv_subExpressions_3_0= ruleBitwiseAndExpression
=======
                    // InternalSCTX.g:11448:5: ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) )
                    // InternalSCTX.g:11449:6: (lv_subExpressions_3_0= ruleBitwiseAndExpression )
                    {
                    // InternalSCTX.g:11449:6: (lv_subExpressions_3_0= ruleBitwiseAndExpression )
                    // InternalSCTX.g:11450:7: lv_subExpressions_3_0= ruleBitwiseAndExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_181);
                    lv_subExpressions_3_0=ruleBitwiseAndExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseXOrExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

<<<<<<< HEAD
                    // InternalSCTX.g:11570:4: (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )*
                    loop373:
                    do {
                        int alt373=2;
                        int LA373_0 = input.LA(1);

                        if ( (LA373_0==89) ) {
                            alt373=1;
                        }


                        switch (alt373) {
                    	case 1 :
                    	    // InternalSCTX.g:11571:5: otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) )
=======
                    // InternalSCTX.g:11468:4: (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )*
                    loop371:
                    do {
                        int alt371=2;
                        int LA371_0 = input.LA(1);

                        if ( (LA371_0==88) ) {
                            alt371=1;
                        }


                        switch (alt371) {
                    	case 1 :
                    	    // InternalSCTX.g:11469:5: otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    otherlv_4=(Token)match(input,88,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getBitwiseXOrExpressionAccess().getCircumflexAccentKeyword_1_2_0());
                    	      				
                    	    }
<<<<<<< HEAD
                    	    // InternalSCTX.g:11575:5: ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) )
                    	    // InternalSCTX.g:11576:6: (lv_subExpressions_5_0= ruleBitwiseAndExpression )
                    	    {
                    	    // InternalSCTX.g:11576:6: (lv_subExpressions_5_0= ruleBitwiseAndExpression )
                    	    // InternalSCTX.g:11577:7: lv_subExpressions_5_0= ruleBitwiseAndExpression
=======
                    	    // InternalSCTX.g:11473:5: ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) )
                    	    // InternalSCTX.g:11474:6: (lv_subExpressions_5_0= ruleBitwiseAndExpression )
                    	    {
                    	    // InternalSCTX.g:11474:6: (lv_subExpressions_5_0= ruleBitwiseAndExpression )
                    	    // InternalSCTX.g:11475:7: lv_subExpressions_5_0= ruleBitwiseAndExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_181);
                    	    lv_subExpressions_5_0=ruleBitwiseAndExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getBitwiseXOrExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
<<<<<<< HEAD
                    	    break loop373;
=======
                    	    break loop371;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseXOrExpression"


    // $ANTLR start "entryRuleBitwiseAndExpression"
<<<<<<< HEAD
    // InternalSCTX.g:11600:1: entryRuleBitwiseAndExpression returns [EObject current=null] : iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF ;
=======
    // InternalSCTX.g:11498:1: entryRuleBitwiseAndExpression returns [EObject current=null] : iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleBitwiseAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseAndExpression = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:11600:61: (iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF )
            // InternalSCTX.g:11601:2: iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF
=======
            // InternalSCTX.g:11498:61: (iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF )
            // InternalSCTX.g:11499:2: iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseAndExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseAndExpression=ruleBitwiseAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseAndExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseAndExpression"


    // $ANTLR start "ruleBitwiseAndExpression"
<<<<<<< HEAD
    // InternalSCTX.g:11607:1: ruleBitwiseAndExpression returns [EObject current=null] : (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? ) ;
=======
    // InternalSCTX.g:11505:1: ruleBitwiseAndExpression returns [EObject current=null] : (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleBitwiseAndExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_CompareOperation_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:11613:2: ( (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? ) )
            // InternalSCTX.g:11614:2: (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? )
            {
            // InternalSCTX.g:11614:2: (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? )
            // InternalSCTX.g:11615:3: this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )?
=======
            // InternalSCTX.g:11511:2: ( (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? ) )
            // InternalSCTX.g:11512:2: (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? )
            {
            // InternalSCTX.g:11512:2: (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? )
            // InternalSCTX.g:11513:3: this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )?
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getCompareOperationParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_182);
            this_CompareOperation_0=ruleCompareOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_CompareOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:11626:3: ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )?
            int alt376=2;
            int LA376_0 = input.LA(1);

            if ( (LA376_0==34) ) {
                alt376=1;
            }
            switch (alt376) {
                case 1 :
                    // InternalSCTX.g:11627:4: () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )*
                    {
                    // InternalSCTX.g:11627:4: ()
                    // InternalSCTX.g:11628:5: 
=======
            // InternalSCTX.g:11524:3: ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )?
            int alt374=2;
            int LA374_0 = input.LA(1);

            if ( (LA374_0==34) ) {
                alt374=1;
            }
            switch (alt374) {
                case 1 :
                    // InternalSCTX.g:11525:4: () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )*
                    {
                    // InternalSCTX.g:11525:4: ()
                    // InternalSCTX.g:11526:5: 
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getBitwiseAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

<<<<<<< HEAD
                    // InternalSCTX.g:11637:4: ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) )
                    // InternalSCTX.g:11638:5: ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) )
                    {
                    // InternalSCTX.g:11638:5: ( (lv_operator_2_0= ruleBitwiseAndOperator ) )
                    // InternalSCTX.g:11639:6: (lv_operator_2_0= ruleBitwiseAndOperator )
                    {
                    // InternalSCTX.g:11639:6: (lv_operator_2_0= ruleBitwiseAndOperator )
                    // InternalSCTX.g:11640:7: lv_operator_2_0= ruleBitwiseAndOperator
=======
                    // InternalSCTX.g:11535:4: ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) )
                    // InternalSCTX.g:11536:5: ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) )
                    {
                    // InternalSCTX.g:11536:5: ( (lv_operator_2_0= ruleBitwiseAndOperator ) )
                    // InternalSCTX.g:11537:6: (lv_operator_2_0= ruleBitwiseAndOperator )
                    {
                    // InternalSCTX.g:11537:6: (lv_operator_2_0= ruleBitwiseAndOperator )
                    // InternalSCTX.g:11538:7: lv_operator_2_0= ruleBitwiseAndOperator
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getOperatorBitwiseAndOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_39);
                    lv_operator_2_0=ruleBitwiseAndOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

<<<<<<< HEAD
                    // InternalSCTX.g:11657:5: ( (lv_subExpressions_3_0= ruleCompareOperation ) )
                    // InternalSCTX.g:11658:6: (lv_subExpressions_3_0= ruleCompareOperation )
                    {
                    // InternalSCTX.g:11658:6: (lv_subExpressions_3_0= ruleCompareOperation )
                    // InternalSCTX.g:11659:7: lv_subExpressions_3_0= ruleCompareOperation
=======
                    // InternalSCTX.g:11555:5: ( (lv_subExpressions_3_0= ruleCompareOperation ) )
                    // InternalSCTX.g:11556:6: (lv_subExpressions_3_0= ruleCompareOperation )
                    {
                    // InternalSCTX.g:11556:6: (lv_subExpressions_3_0= ruleCompareOperation )
                    // InternalSCTX.g:11557:7: lv_subExpressions_3_0= ruleCompareOperation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_182);
                    lv_subExpressions_3_0=ruleCompareOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperation");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

<<<<<<< HEAD
                    // InternalSCTX.g:11677:4: (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )*
                    loop375:
                    do {
                        int alt375=2;
                        int LA375_0 = input.LA(1);

                        if ( (LA375_0==34) ) {
                            alt375=1;
                        }


                        switch (alt375) {
                    	case 1 :
                    	    // InternalSCTX.g:11678:5: otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) )
=======
                    // InternalSCTX.g:11575:4: (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )*
                    loop373:
                    do {
                        int alt373=2;
                        int LA373_0 = input.LA(1);

                        if ( (LA373_0==34) ) {
                            alt373=1;
                        }


                        switch (alt373) {
                    	case 1 :
                    	    // InternalSCTX.g:11576:5: otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    otherlv_4=(Token)match(input,34,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getBitwiseAndExpressionAccess().getAmpersandKeyword_1_2_0());
                    	      				
                    	    }
<<<<<<< HEAD
                    	    // InternalSCTX.g:11682:5: ( (lv_subExpressions_5_0= ruleCompareOperation ) )
                    	    // InternalSCTX.g:11683:6: (lv_subExpressions_5_0= ruleCompareOperation )
                    	    {
                    	    // InternalSCTX.g:11683:6: (lv_subExpressions_5_0= ruleCompareOperation )
                    	    // InternalSCTX.g:11684:7: lv_subExpressions_5_0= ruleCompareOperation
=======
                    	    // InternalSCTX.g:11580:5: ( (lv_subExpressions_5_0= ruleCompareOperation ) )
                    	    // InternalSCTX.g:11581:6: (lv_subExpressions_5_0= ruleCompareOperation )
                    	    {
                    	    // InternalSCTX.g:11581:6: (lv_subExpressions_5_0= ruleCompareOperation )
                    	    // InternalSCTX.g:11582:7: lv_subExpressions_5_0= ruleCompareOperation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_182);
                    	    lv_subExpressions_5_0=ruleCompareOperation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperation");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
<<<<<<< HEAD
                    	    break loop375;
=======
                    	    break loop373;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseAndExpression"


    // $ANTLR start "entryRuleCompareOperation"
<<<<<<< HEAD
    // InternalSCTX.g:11707:1: entryRuleCompareOperation returns [EObject current=null] : iv_ruleCompareOperation= ruleCompareOperation EOF ;
=======
    // InternalSCTX.g:11605:1: entryRuleCompareOperation returns [EObject current=null] : iv_ruleCompareOperation= ruleCompareOperation EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleCompareOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompareOperation = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:11707:57: (iv_ruleCompareOperation= ruleCompareOperation EOF )
            // InternalSCTX.g:11708:2: iv_ruleCompareOperation= ruleCompareOperation EOF
=======
            // InternalSCTX.g:11605:57: (iv_ruleCompareOperation= ruleCompareOperation EOF )
            // InternalSCTX.g:11606:2: iv_ruleCompareOperation= ruleCompareOperation EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompareOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCompareOperation=ruleCompareOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCompareOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCompareOperation"


    // $ANTLR start "ruleCompareOperation"
<<<<<<< HEAD
    // InternalSCTX.g:11714:1: ruleCompareOperation returns [EObject current=null] : (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? ) ;
=======
    // InternalSCTX.g:11612:1: ruleCompareOperation returns [EObject current=null] : (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleCompareOperation() throws RecognitionException {
        EObject current = null;

        EObject this_NotOrValuedExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:11720:2: ( (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? ) )
            // InternalSCTX.g:11721:2: (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? )
            {
            // InternalSCTX.g:11721:2: (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? )
            // InternalSCTX.g:11722:3: this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )?
=======
            // InternalSCTX.g:11618:2: ( (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? ) )
            // InternalSCTX.g:11619:2: (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? )
            {
            // InternalSCTX.g:11619:2: (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? )
            // InternalSCTX.g:11620:3: this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )?
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getCompareOperationAccess().getNotOrValuedExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_183);
            this_NotOrValuedExpression_0=ruleNotOrValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NotOrValuedExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:11733:3: ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )?
            int alt377=2;
            int LA377_0 = input.LA(1);

            if ( ((LA377_0>=139 && LA377_0<=144)) ) {
                alt377=1;
            }
            switch (alt377) {
                case 1 :
                    // InternalSCTX.g:11734:4: () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) )
                    {
                    // InternalSCTX.g:11734:4: ()
                    // InternalSCTX.g:11735:5: 
=======
            // InternalSCTX.g:11631:3: ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )?
            int alt375=2;
            int LA375_0 = input.LA(1);

            if ( ((LA375_0>=135 && LA375_0<=140)) ) {
                alt375=1;
            }
            switch (alt375) {
                case 1 :
                    // InternalSCTX.g:11632:4: () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) )
                    {
                    // InternalSCTX.g:11632:4: ()
                    // InternalSCTX.g:11633:5: 
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getCompareOperationAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

<<<<<<< HEAD
                    // InternalSCTX.g:11744:4: ( (lv_operator_2_0= ruleCompareOperator ) )
                    // InternalSCTX.g:11745:5: (lv_operator_2_0= ruleCompareOperator )
                    {
                    // InternalSCTX.g:11745:5: (lv_operator_2_0= ruleCompareOperator )
                    // InternalSCTX.g:11746:6: lv_operator_2_0= ruleCompareOperator
=======
                    // InternalSCTX.g:11642:4: ( (lv_operator_2_0= ruleCompareOperator ) )
                    // InternalSCTX.g:11643:5: (lv_operator_2_0= ruleCompareOperator )
                    {
                    // InternalSCTX.g:11643:5: (lv_operator_2_0= ruleCompareOperator )
                    // InternalSCTX.g:11644:6: lv_operator_2_0= ruleCompareOperator
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCompareOperationAccess().getOperatorCompareOperatorEnumRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_39);
                    lv_operator_2_0=ruleCompareOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCompareOperationRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

<<<<<<< HEAD
                    // InternalSCTX.g:11763:4: ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) )
                    // InternalSCTX.g:11764:5: (lv_subExpressions_3_0= ruleNotOrValuedExpression )
                    {
                    // InternalSCTX.g:11764:5: (lv_subExpressions_3_0= ruleNotOrValuedExpression )
                    // InternalSCTX.g:11765:6: lv_subExpressions_3_0= ruleNotOrValuedExpression
=======
                    // InternalSCTX.g:11661:4: ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) )
                    // InternalSCTX.g:11662:5: (lv_subExpressions_3_0= ruleNotOrValuedExpression )
                    {
                    // InternalSCTX.g:11662:5: (lv_subExpressions_3_0= ruleNotOrValuedExpression )
                    // InternalSCTX.g:11663:6: lv_subExpressions_3_0= ruleNotOrValuedExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCompareOperationAccess().getSubExpressionsNotOrValuedExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_3_0=ruleNotOrValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCompareOperationRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.NotOrValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompareOperation"


    // $ANTLR start "entryRuleNotOrValuedExpression"
<<<<<<< HEAD
    // InternalSCTX.g:11787:1: entryRuleNotOrValuedExpression returns [EObject current=null] : iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF ;
=======
    // InternalSCTX.g:11685:1: entryRuleNotOrValuedExpression returns [EObject current=null] : iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleNotOrValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNotOrValuedExpression = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:11787:62: (iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF )
            // InternalSCTX.g:11788:2: iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF
=======
            // InternalSCTX.g:11685:62: (iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF )
            // InternalSCTX.g:11686:2: iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNotOrValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNotOrValuedExpression=ruleNotOrValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNotOrValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNotOrValuedExpression"


    // $ANTLR start "ruleNotOrValuedExpression"
<<<<<<< HEAD
    // InternalSCTX.g:11794:1: ruleNotOrValuedExpression returns [EObject current=null] : (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression ) ;
=======
    // InternalSCTX.g:11692:1: ruleNotOrValuedExpression returns [EObject current=null] : (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleNotOrValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ValuedExpression_0 = null;

        EObject this_NotExpression_1 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:11800:2: ( (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression ) )
            // InternalSCTX.g:11801:2: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )
            {
            // InternalSCTX.g:11801:2: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )
            int alt378=2;
            alt378 = dfa378.predict(input);
            switch (alt378) {
                case 1 :
                    // InternalSCTX.g:11802:3: this_ValuedExpression_0= ruleValuedExpression
=======
            // InternalSCTX.g:11698:2: ( (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression ) )
            // InternalSCTX.g:11699:2: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )
            {
            // InternalSCTX.g:11699:2: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )
            int alt376=2;
            alt376 = dfa376.predict(input);
            switch (alt376) {
                case 1 :
                    // InternalSCTX.g:11700:3: this_ValuedExpression_0= ruleValuedExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNotOrValuedExpressionAccess().getValuedExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedExpression_0=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:11814:3: this_NotExpression_1= ruleNotExpression
=======
                    // InternalSCTX.g:11712:3: this_NotExpression_1= ruleNotExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNotOrValuedExpressionAccess().getNotExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NotExpression_1=ruleNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NotExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotOrValuedExpression"


    // $ANTLR start "entryRuleBitwiseNotExpression"
<<<<<<< HEAD
    // InternalSCTX.g:11829:1: entryRuleBitwiseNotExpression returns [EObject current=null] : iv_ruleBitwiseNotExpression= ruleBitwiseNotExpression EOF ;
=======
    // InternalSCTX.g:11727:1: entryRuleBitwiseNotExpression returns [EObject current=null] : iv_ruleBitwiseNotExpression= ruleBitwiseNotExpression EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleBitwiseNotExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseNotExpression = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:11829:61: (iv_ruleBitwiseNotExpression= ruleBitwiseNotExpression EOF )
            // InternalSCTX.g:11830:2: iv_ruleBitwiseNotExpression= ruleBitwiseNotExpression EOF
=======
            // InternalSCTX.g:11727:61: (iv_ruleBitwiseNotExpression= ruleBitwiseNotExpression EOF )
            // InternalSCTX.g:11728:2: iv_ruleBitwiseNotExpression= ruleBitwiseNotExpression EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseNotExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseNotExpression=ruleBitwiseNotExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseNotExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseNotExpression"


    // $ANTLR start "ruleBitwiseNotExpression"
<<<<<<< HEAD
    // InternalSCTX.g:11836:1: ruleBitwiseNotExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression ) ;
=======
    // InternalSCTX.g:11734:1: ruleBitwiseNotExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleBitwiseNotExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_AtomicExpression_3 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:11842:2: ( ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression ) )
            // InternalSCTX.g:11843:2: ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression )
            {
            // InternalSCTX.g:11843:2: ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression )
            int alt379=2;
            int LA379_0 = input.LA(1);

            if ( (LA379_0==146) ) {
                alt379=1;
            }
            else if ( (LA379_0==RULE_ID||(LA379_0>=RULE_HOSTCODE && LA379_0<=RULE_COMMENT_ANNOTATION)||LA379_0==31||LA379_0==80||LA379_0==85||LA379_0==102||LA379_0==106||LA379_0==145||LA379_0==147) ) {
                alt379=2;
=======
            // InternalSCTX.g:11740:2: ( ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression ) )
            // InternalSCTX.g:11741:2: ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression )
            {
            // InternalSCTX.g:11741:2: ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression )
            int alt377=2;
            int LA377_0 = input.LA(1);

            if ( (LA377_0==142) ) {
                alt377=1;
            }
            else if ( (LA377_0==RULE_ID||(LA377_0>=RULE_HOSTCODE && LA377_0<=RULE_COMMENT_ANNOTATION)||LA377_0==31||LA377_0==79||LA377_0==84||LA377_0==98||LA377_0==102||LA377_0==141||LA377_0==143) ) {
                alt377=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 377, 0, input);

                throw nvae;
            }
            switch (alt377) {
                case 1 :
                    // InternalSCTX.g:11742:3: ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) )
                    {
                    // InternalSCTX.g:11742:3: ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) )
                    // InternalSCTX.g:11743:4: () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) )
                    {
                    // InternalSCTX.g:11743:4: ()
                    // InternalSCTX.g:11744:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getBitwiseNotExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:11753:4: ( (lv_operator_1_0= ruleBitwiseNotOperator ) )
                    // InternalSCTX.g:11754:5: (lv_operator_1_0= ruleBitwiseNotOperator )
                    {
                    // InternalSCTX.g:11754:5: (lv_operator_1_0= ruleBitwiseNotOperator )
                    // InternalSCTX.g:11755:6: lv_operator_1_0= ruleBitwiseNotOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBitwiseNotExpressionAccess().getOperatorBitwiseNotOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_39);
                    lv_operator_1_0=ruleBitwiseNotOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBitwiseNotExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseNotOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:11772:4: ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) )
                    // InternalSCTX.g:11773:5: (lv_subExpressions_2_0= ruleBitwiseNotExpression )
                    {
                    // InternalSCTX.g:11773:5: (lv_subExpressions_2_0= ruleBitwiseNotExpression )
                    // InternalSCTX.g:11774:6: lv_subExpressions_2_0= ruleBitwiseNotExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBitwiseNotExpressionAccess().getSubExpressionsBitwiseNotExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleBitwiseNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBitwiseNotExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseNotExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:11793:3: this_AtomicExpression_3= ruleAtomicExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBitwiseNotExpressionAccess().getAtomicExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicExpression_3=ruleAtomicExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AtomicExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseNotExpression"


    // $ANTLR start "entryRuleNotExpression"
    // InternalSCTX.g:11808:1: entryRuleNotExpression returns [EObject current=null] : iv_ruleNotExpression= ruleNotExpression EOF ;
    public final EObject entryRuleNotExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNotExpression = null;


        try {
            // InternalSCTX.g:11808:54: (iv_ruleNotExpression= ruleNotExpression EOF )
            // InternalSCTX.g:11809:2: iv_ruleNotExpression= ruleNotExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNotExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNotExpression=ruleNotExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNotExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNotExpression"


    // $ANTLR start "ruleNotExpression"
    // InternalSCTX.g:11815:1: ruleNotExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_BitwiseNotExpression_3= ruleBitwiseNotExpression ) ;
    public final EObject ruleNotExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_BitwiseNotExpression_3 = null;



        	enterRule();

        try {
            // InternalSCTX.g:11821:2: ( ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_BitwiseNotExpression_3= ruleBitwiseNotExpression ) )
            // InternalSCTX.g:11822:2: ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_BitwiseNotExpression_3= ruleBitwiseNotExpression )
            {
            // InternalSCTX.g:11822:2: ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_BitwiseNotExpression_3= ruleBitwiseNotExpression )
            int alt378=2;
            int LA378_0 = input.LA(1);

            if ( (LA378_0==33) ) {
                alt378=1;
            }
            else if ( (LA378_0==RULE_ID||(LA378_0>=RULE_HOSTCODE && LA378_0<=RULE_COMMENT_ANNOTATION)||LA378_0==31||LA378_0==79||LA378_0==84||LA378_0==98||LA378_0==102||(LA378_0>=141 && LA378_0<=143)) ) {
                alt378=2;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 378, 0, input);

                throw nvae;
            }
            switch (alt378) {
                case 1 :
<<<<<<< HEAD
                    // InternalSCTX.g:11844:3: ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) )
                    {
                    // InternalSCTX.g:11844:3: ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) )
                    // InternalSCTX.g:11845:4: () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) )
                    {
                    // InternalSCTX.g:11845:4: ()
                    // InternalSCTX.g:11846:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getBitwiseNotExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:11855:4: ( (lv_operator_1_0= ruleBitwiseNotOperator ) )
                    // InternalSCTX.g:11856:5: (lv_operator_1_0= ruleBitwiseNotOperator )
                    {
                    // InternalSCTX.g:11856:5: (lv_operator_1_0= ruleBitwiseNotOperator )
                    // InternalSCTX.g:11857:6: lv_operator_1_0= ruleBitwiseNotOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBitwiseNotExpressionAccess().getOperatorBitwiseNotOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_39);
                    lv_operator_1_0=ruleBitwiseNotOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBitwiseNotExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseNotOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:11874:4: ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) )
                    // InternalSCTX.g:11875:5: (lv_subExpressions_2_0= ruleBitwiseNotExpression )
                    {
                    // InternalSCTX.g:11875:5: (lv_subExpressions_2_0= ruleBitwiseNotExpression )
                    // InternalSCTX.g:11876:6: lv_subExpressions_2_0= ruleBitwiseNotExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBitwiseNotExpressionAccess().getSubExpressionsBitwiseNotExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleBitwiseNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBitwiseNotExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseNotExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:11895:3: this_AtomicExpression_3= ruleAtomicExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBitwiseNotExpressionAccess().getAtomicExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicExpression_3=ruleAtomicExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AtomicExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseNotExpression"


    // $ANTLR start "entryRuleNotExpression"
    // InternalSCTX.g:11910:1: entryRuleNotExpression returns [EObject current=null] : iv_ruleNotExpression= ruleNotExpression EOF ;
    public final EObject entryRuleNotExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNotExpression = null;


        try {
            // InternalSCTX.g:11910:54: (iv_ruleNotExpression= ruleNotExpression EOF )
            // InternalSCTX.g:11911:2: iv_ruleNotExpression= ruleNotExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNotExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNotExpression=ruleNotExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNotExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNotExpression"


    // $ANTLR start "ruleNotExpression"
    // InternalSCTX.g:11917:1: ruleNotExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_BitwiseNotExpression_3= ruleBitwiseNotExpression ) ;
    public final EObject ruleNotExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_BitwiseNotExpression_3 = null;



        	enterRule();

        try {
            // InternalSCTX.g:11923:2: ( ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_BitwiseNotExpression_3= ruleBitwiseNotExpression ) )
            // InternalSCTX.g:11924:2: ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_BitwiseNotExpression_3= ruleBitwiseNotExpression )
            {
            // InternalSCTX.g:11924:2: ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_BitwiseNotExpression_3= ruleBitwiseNotExpression )
            int alt380=2;
            int LA380_0 = input.LA(1);

            if ( (LA380_0==33) ) {
                alt380=1;
            }
            else if ( (LA380_0==RULE_ID||(LA380_0>=RULE_HOSTCODE && LA380_0<=RULE_COMMENT_ANNOTATION)||LA380_0==31||LA380_0==80||LA380_0==85||LA380_0==102||LA380_0==106||(LA380_0>=145 && LA380_0<=147)) ) {
                alt380=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 380, 0, input);

                throw nvae;
            }
            switch (alt380) {
                case 1 :
                    // InternalSCTX.g:11925:3: ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) )
                    {
                    // InternalSCTX.g:11925:3: ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) )
                    // InternalSCTX.g:11926:4: () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) )
                    {
                    // InternalSCTX.g:11926:4: ()
                    // InternalSCTX.g:11927:5: 
=======
                    // InternalSCTX.g:11823:3: ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) )
                    {
                    // InternalSCTX.g:11823:3: ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) )
                    // InternalSCTX.g:11824:4: () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) )
                    {
                    // InternalSCTX.g:11824:4: ()
                    // InternalSCTX.g:11825:5: 
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getNotExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

<<<<<<< HEAD
                    // InternalSCTX.g:11936:4: ( (lv_operator_1_0= ruleNotOperator ) )
                    // InternalSCTX.g:11937:5: (lv_operator_1_0= ruleNotOperator )
                    {
                    // InternalSCTX.g:11937:5: (lv_operator_1_0= ruleNotOperator )
                    // InternalSCTX.g:11938:6: lv_operator_1_0= ruleNotOperator
=======
                    // InternalSCTX.g:11834:4: ( (lv_operator_1_0= ruleNotOperator ) )
                    // InternalSCTX.g:11835:5: (lv_operator_1_0= ruleNotOperator )
                    {
                    // InternalSCTX.g:11835:5: (lv_operator_1_0= ruleNotOperator )
                    // InternalSCTX.g:11836:6: lv_operator_1_0= ruleNotOperator
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNotExpressionAccess().getOperatorNotOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_39);
                    lv_operator_1_0=ruleNotOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNotExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.NotOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

<<<<<<< HEAD
                    // InternalSCTX.g:11955:4: ( (lv_subExpressions_2_0= ruleNotExpression ) )
                    // InternalSCTX.g:11956:5: (lv_subExpressions_2_0= ruleNotExpression )
                    {
                    // InternalSCTX.g:11956:5: (lv_subExpressions_2_0= ruleNotExpression )
                    // InternalSCTX.g:11957:6: lv_subExpressions_2_0= ruleNotExpression
=======
                    // InternalSCTX.g:11853:4: ( (lv_subExpressions_2_0= ruleNotExpression ) )
                    // InternalSCTX.g:11854:5: (lv_subExpressions_2_0= ruleNotExpression )
                    {
                    // InternalSCTX.g:11854:5: (lv_subExpressions_2_0= ruleNotExpression )
                    // InternalSCTX.g:11855:6: lv_subExpressions_2_0= ruleNotExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNotExpressionAccess().getSubExpressionsNotExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNotExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.NotExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:11976:3: this_BitwiseNotExpression_3= ruleBitwiseNotExpression
=======
                    // InternalSCTX.g:11874:3: this_BitwiseNotExpression_3= ruleBitwiseNotExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNotExpressionAccess().getBitwiseNotExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BitwiseNotExpression_3=ruleBitwiseNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BitwiseNotExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotExpression"


    // $ANTLR start "entryRuleValuedExpression"
<<<<<<< HEAD
    // InternalSCTX.g:11991:1: entryRuleValuedExpression returns [EObject current=null] : iv_ruleValuedExpression= ruleValuedExpression EOF ;
=======
    // InternalSCTX.g:11889:1: entryRuleValuedExpression returns [EObject current=null] : iv_ruleValuedExpression= ruleValuedExpression EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedExpression = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:11991:57: (iv_ruleValuedExpression= ruleValuedExpression EOF )
            // InternalSCTX.g:11992:2: iv_ruleValuedExpression= ruleValuedExpression EOF
=======
            // InternalSCTX.g:11889:57: (iv_ruleValuedExpression= ruleValuedExpression EOF )
            // InternalSCTX.g:11890:2: iv_ruleValuedExpression= ruleValuedExpression EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedExpression=ruleValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedExpression"


    // $ANTLR start "ruleValuedExpression"
<<<<<<< HEAD
    // InternalSCTX.g:11998:1: ruleValuedExpression returns [EObject current=null] : this_ShiftExpressions_0= ruleShiftExpressions ;
=======
    // InternalSCTX.g:11896:1: ruleValuedExpression returns [EObject current=null] : this_ShiftExpressions_0= ruleShiftExpressions ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ShiftExpressions_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:12004:2: (this_ShiftExpressions_0= ruleShiftExpressions )
            // InternalSCTX.g:12005:2: this_ShiftExpressions_0= ruleShiftExpressions
=======
            // InternalSCTX.g:11902:2: (this_ShiftExpressions_0= ruleShiftExpressions )
            // InternalSCTX.g:11903:2: this_ShiftExpressions_0= ruleShiftExpressions
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getValuedExpressionAccess().getShiftExpressionsParserRuleCall());
              	
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_ShiftExpressions_0=ruleShiftExpressions();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_ShiftExpressions_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedExpression"


    // $ANTLR start "entryRuleShiftExpressions"
<<<<<<< HEAD
    // InternalSCTX.g:12019:1: entryRuleShiftExpressions returns [EObject current=null] : iv_ruleShiftExpressions= ruleShiftExpressions EOF ;
=======
    // InternalSCTX.g:11917:1: entryRuleShiftExpressions returns [EObject current=null] : iv_ruleShiftExpressions= ruleShiftExpressions EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleShiftExpressions() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShiftExpressions = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:12019:57: (iv_ruleShiftExpressions= ruleShiftExpressions EOF )
            // InternalSCTX.g:12020:2: iv_ruleShiftExpressions= ruleShiftExpressions EOF
=======
            // InternalSCTX.g:11917:57: (iv_ruleShiftExpressions= ruleShiftExpressions EOF )
            // InternalSCTX.g:11918:2: iv_ruleShiftExpressions= ruleShiftExpressions EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShiftExpressionsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleShiftExpressions=ruleShiftExpressions();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShiftExpressions; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShiftExpressions"


    // $ANTLR start "ruleShiftExpressions"
<<<<<<< HEAD
    // InternalSCTX.g:12026:1: ruleShiftExpressions returns [EObject current=null] : (this_SumExpression_0= ruleSumExpression ( ( () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )* ) )* ) ;
=======
    // InternalSCTX.g:11924:1: ruleShiftExpressions returns [EObject current=null] : (this_SumExpression_0= ruleSumExpression ( ( () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )* ) )* ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleShiftExpressions() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_9=null;
        Token otherlv_14=null;
        EObject this_SumExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        Enumerator lv_operator_7_0 = null;

        EObject lv_subExpressions_8_0 = null;

        EObject lv_subExpressions_10_0 = null;

        Enumerator lv_operator_12_0 = null;

        EObject lv_subExpressions_13_0 = null;

        EObject lv_subExpressions_15_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:12032:2: ( (this_SumExpression_0= ruleSumExpression ( ( () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )* ) )* ) )
            // InternalSCTX.g:12033:2: (this_SumExpression_0= ruleSumExpression ( ( () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )* ) )* )
            {
            // InternalSCTX.g:12033:2: (this_SumExpression_0= ruleSumExpression ( ( () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )* ) )* )
            // InternalSCTX.g:12034:3: this_SumExpression_0= ruleSumExpression ( ( () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )* ) )*
=======
            // InternalSCTX.g:11930:2: ( (this_SumExpression_0= ruleSumExpression ( ( () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )* ) )* ) )
            // InternalSCTX.g:11931:2: (this_SumExpression_0= ruleSumExpression ( ( () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )* ) )* )
            {
            // InternalSCTX.g:11931:2: (this_SumExpression_0= ruleSumExpression ( ( () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )* ) )* )
            // InternalSCTX.g:11932:3: this_SumExpression_0= ruleSumExpression ( ( () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )* ) )*
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSumExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_184);
            this_SumExpression_0=ruleSumExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SumExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:12045:3: ( ( () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )* ) )*
            loop384:
            do {
                int alt384=4;
=======
            // InternalSCTX.g:11943:3: ( ( () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )* ) )*
            loop382:
            do {
                int alt382=4;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                switch ( input.LA(1) ) {
                case 89:
                    {
<<<<<<< HEAD
                    alt384=1;
=======
                    alt382=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    }
                    break;
                case 90:
                    {
<<<<<<< HEAD
                    alt384=2;
=======
                    alt382=2;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    }
                    break;
                case 91:
                    {
<<<<<<< HEAD
                    alt384=3;
=======
                    alt382=3;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    }
                    break;

                }

<<<<<<< HEAD
                switch (alt384) {
            	case 1 :
            	    // InternalSCTX.g:12046:4: ( () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )
            	    {
            	    // InternalSCTX.g:12046:4: ( () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )
            	    // InternalSCTX.g:12047:5: () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )*
            	    {
            	    // InternalSCTX.g:12047:5: ()
            	    // InternalSCTX.g:12048:6: 
=======
                switch (alt382) {
            	case 1 :
            	    // InternalSCTX.g:11944:4: ( () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )
            	    {
            	    // InternalSCTX.g:11944:4: ( () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )
            	    // InternalSCTX.g:11945:5: () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )*
            	    {
            	    // InternalSCTX.g:11945:5: ()
            	    // InternalSCTX.g:11946:6: 
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getShiftExpressionsAccess().getOperatorExpressionSubExpressionsAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

<<<<<<< HEAD
            	    // InternalSCTX.g:12057:5: ( (lv_operator_2_0= ruleShiftLeftOperator ) )
            	    // InternalSCTX.g:12058:6: (lv_operator_2_0= ruleShiftLeftOperator )
            	    {
            	    // InternalSCTX.g:12058:6: (lv_operator_2_0= ruleShiftLeftOperator )
            	    // InternalSCTX.g:12059:7: lv_operator_2_0= ruleShiftLeftOperator
=======
            	    // InternalSCTX.g:11955:5: ( (lv_operator_2_0= ruleShiftLeftOperator ) )
            	    // InternalSCTX.g:11956:6: (lv_operator_2_0= ruleShiftLeftOperator )
            	    {
            	    // InternalSCTX.g:11956:6: (lv_operator_2_0= ruleShiftLeftOperator )
            	    // InternalSCTX.g:11957:7: lv_operator_2_0= ruleShiftLeftOperator
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getShiftExpressionsAccess().getOperatorShiftLeftOperatorEnumRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_94);
            	    lv_operator_2_0=ruleShiftLeftOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_2_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftLeftOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

<<<<<<< HEAD
            	    // InternalSCTX.g:12076:5: ( (lv_subExpressions_3_0= ruleSumExpression ) )
            	    // InternalSCTX.g:12077:6: (lv_subExpressions_3_0= ruleSumExpression )
            	    {
            	    // InternalSCTX.g:12077:6: (lv_subExpressions_3_0= ruleSumExpression )
            	    // InternalSCTX.g:12078:7: lv_subExpressions_3_0= ruleSumExpression
=======
            	    // InternalSCTX.g:11974:5: ( (lv_subExpressions_3_0= ruleSumExpression ) )
            	    // InternalSCTX.g:11975:6: (lv_subExpressions_3_0= ruleSumExpression )
            	    {
            	    // InternalSCTX.g:11975:6: (lv_subExpressions_3_0= ruleSumExpression )
            	    // InternalSCTX.g:11976:7: lv_subExpressions_3_0= ruleSumExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_184);
            	    lv_subExpressions_3_0=ruleSumExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_3_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

<<<<<<< HEAD
            	    // InternalSCTX.g:12095:5: (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )*
            	    loop381:
            	    do {
            	        int alt381=2;
            	        alt381 = dfa381.predict(input);
            	        switch (alt381) {
            	    	case 1 :
            	    	    // InternalSCTX.g:12096:6: otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) )
=======
            	    // InternalSCTX.g:11993:5: (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )*
            	    loop379:
            	    do {
            	        int alt379=2;
            	        alt379 = dfa379.predict(input);
            	        switch (alt379) {
            	    	case 1 :
            	    	    // InternalSCTX.g:11994:6: otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    	    {
            	    	    otherlv_4=(Token)match(input,89,FollowSets000.FOLLOW_94); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_4, grammarAccess.getShiftExpressionsAccess().getLessThanSignLessThanSignKeyword_1_0_3_0());
            	    	      					
            	    	    }
<<<<<<< HEAD
            	    	    // InternalSCTX.g:12100:6: ( (lv_subExpressions_5_0= ruleSumExpression ) )
            	    	    // InternalSCTX.g:12101:7: (lv_subExpressions_5_0= ruleSumExpression )
            	    	    {
            	    	    // InternalSCTX.g:12101:7: (lv_subExpressions_5_0= ruleSumExpression )
            	    	    // InternalSCTX.g:12102:8: lv_subExpressions_5_0= ruleSumExpression
=======
            	    	    // InternalSCTX.g:11998:6: ( (lv_subExpressions_5_0= ruleSumExpression ) )
            	    	    // InternalSCTX.g:11999:7: (lv_subExpressions_5_0= ruleSumExpression )
            	    	    {
            	    	    // InternalSCTX.g:11999:7: (lv_subExpressions_5_0= ruleSumExpression )
            	    	    // InternalSCTX.g:12000:8: lv_subExpressions_5_0= ruleSumExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_0_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_184);
            	    	    lv_subExpressions_5_0=ruleSumExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_5_0,
            	    	      									"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
<<<<<<< HEAD
            	    	    break loop381;
=======
            	    	    break loop379;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 2 :
<<<<<<< HEAD
            	    // InternalSCTX.g:12122:4: ( () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )* )
            	    {
            	    // InternalSCTX.g:12122:4: ( () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )* )
            	    // InternalSCTX.g:12123:5: () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )*
            	    {
            	    // InternalSCTX.g:12123:5: ()
            	    // InternalSCTX.g:12124:6: 
=======
            	    // InternalSCTX.g:12020:4: ( () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )* )
            	    {
            	    // InternalSCTX.g:12020:4: ( () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )* )
            	    // InternalSCTX.g:12021:5: () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )*
            	    {
            	    // InternalSCTX.g:12021:5: ()
            	    // InternalSCTX.g:12022:6: 
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getShiftExpressionsAccess().getOperatorExpressionSubExpressionsAction_1_1_0(),
            	      							current);
            	      					
            	    }

            	    }

<<<<<<< HEAD
            	    // InternalSCTX.g:12133:5: ( (lv_operator_7_0= ruleShiftRightOperator ) )
            	    // InternalSCTX.g:12134:6: (lv_operator_7_0= ruleShiftRightOperator )
            	    {
            	    // InternalSCTX.g:12134:6: (lv_operator_7_0= ruleShiftRightOperator )
            	    // InternalSCTX.g:12135:7: lv_operator_7_0= ruleShiftRightOperator
=======
            	    // InternalSCTX.g:12031:5: ( (lv_operator_7_0= ruleShiftRightOperator ) )
            	    // InternalSCTX.g:12032:6: (lv_operator_7_0= ruleShiftRightOperator )
            	    {
            	    // InternalSCTX.g:12032:6: (lv_operator_7_0= ruleShiftRightOperator )
            	    // InternalSCTX.g:12033:7: lv_operator_7_0= ruleShiftRightOperator
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getShiftExpressionsAccess().getOperatorShiftRightOperatorEnumRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_94);
            	    lv_operator_7_0=ruleShiftRightOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_7_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

<<<<<<< HEAD
            	    // InternalSCTX.g:12152:5: ( (lv_subExpressions_8_0= ruleSumExpression ) )
            	    // InternalSCTX.g:12153:6: (lv_subExpressions_8_0= ruleSumExpression )
            	    {
            	    // InternalSCTX.g:12153:6: (lv_subExpressions_8_0= ruleSumExpression )
            	    // InternalSCTX.g:12154:7: lv_subExpressions_8_0= ruleSumExpression
=======
            	    // InternalSCTX.g:12050:5: ( (lv_subExpressions_8_0= ruleSumExpression ) )
            	    // InternalSCTX.g:12051:6: (lv_subExpressions_8_0= ruleSumExpression )
            	    {
            	    // InternalSCTX.g:12051:6: (lv_subExpressions_8_0= ruleSumExpression )
            	    // InternalSCTX.g:12052:7: lv_subExpressions_8_0= ruleSumExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_1_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_184);
            	    lv_subExpressions_8_0=ruleSumExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_8_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

<<<<<<< HEAD
            	    // InternalSCTX.g:12171:5: (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )*
            	    loop382:
            	    do {
            	        int alt382=2;
            	        alt382 = dfa382.predict(input);
            	        switch (alt382) {
            	    	case 1 :
            	    	    // InternalSCTX.g:12172:6: otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) )
=======
            	    // InternalSCTX.g:12069:5: (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )*
            	    loop380:
            	    do {
            	        int alt380=2;
            	        alt380 = dfa380.predict(input);
            	        switch (alt380) {
            	    	case 1 :
            	    	    // InternalSCTX.g:12070:6: otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    	    {
            	    	    otherlv_9=(Token)match(input,90,FollowSets000.FOLLOW_94); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_9, grammarAccess.getShiftExpressionsAccess().getGreaterThanSignGreaterThanSignKeyword_1_1_3_0());
            	    	      					
            	    	    }
<<<<<<< HEAD
            	    	    // InternalSCTX.g:12176:6: ( (lv_subExpressions_10_0= ruleSumExpression ) )
            	    	    // InternalSCTX.g:12177:7: (lv_subExpressions_10_0= ruleSumExpression )
            	    	    {
            	    	    // InternalSCTX.g:12177:7: (lv_subExpressions_10_0= ruleSumExpression )
            	    	    // InternalSCTX.g:12178:8: lv_subExpressions_10_0= ruleSumExpression
=======
            	    	    // InternalSCTX.g:12074:6: ( (lv_subExpressions_10_0= ruleSumExpression ) )
            	    	    // InternalSCTX.g:12075:7: (lv_subExpressions_10_0= ruleSumExpression )
            	    	    {
            	    	    // InternalSCTX.g:12075:7: (lv_subExpressions_10_0= ruleSumExpression )
            	    	    // InternalSCTX.g:12076:8: lv_subExpressions_10_0= ruleSumExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_1_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_184);
            	    	    lv_subExpressions_10_0=ruleSumExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_10_0,
            	    	      									"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
<<<<<<< HEAD
            	    	    break loop382;
=======
            	    	    break loop380;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 3 :
<<<<<<< HEAD
            	    // InternalSCTX.g:12198:4: ( () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )* )
            	    {
            	    // InternalSCTX.g:12198:4: ( () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )* )
            	    // InternalSCTX.g:12199:5: () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )*
            	    {
            	    // InternalSCTX.g:12199:5: ()
            	    // InternalSCTX.g:12200:6: 
=======
            	    // InternalSCTX.g:12096:4: ( () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )* )
            	    {
            	    // InternalSCTX.g:12096:4: ( () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )* )
            	    // InternalSCTX.g:12097:5: () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )*
            	    {
            	    // InternalSCTX.g:12097:5: ()
            	    // InternalSCTX.g:12098:6: 
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getShiftExpressionsAccess().getOperatorExpressionSubExpressionsAction_1_2_0(),
            	      							current);
            	      					
            	    }

            	    }

<<<<<<< HEAD
            	    // InternalSCTX.g:12209:5: ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) )
            	    // InternalSCTX.g:12210:6: (lv_operator_12_0= ruleShiftRightUnsignedOperator )
            	    {
            	    // InternalSCTX.g:12210:6: (lv_operator_12_0= ruleShiftRightUnsignedOperator )
            	    // InternalSCTX.g:12211:7: lv_operator_12_0= ruleShiftRightUnsignedOperator
=======
            	    // InternalSCTX.g:12107:5: ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) )
            	    // InternalSCTX.g:12108:6: (lv_operator_12_0= ruleShiftRightUnsignedOperator )
            	    {
            	    // InternalSCTX.g:12108:6: (lv_operator_12_0= ruleShiftRightUnsignedOperator )
            	    // InternalSCTX.g:12109:7: lv_operator_12_0= ruleShiftRightUnsignedOperator
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getShiftExpressionsAccess().getOperatorShiftRightUnsignedOperatorEnumRuleCall_1_2_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_94);
            	    lv_operator_12_0=ruleShiftRightUnsignedOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_12_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

<<<<<<< HEAD
            	    // InternalSCTX.g:12228:5: ( (lv_subExpressions_13_0= ruleSumExpression ) )
            	    // InternalSCTX.g:12229:6: (lv_subExpressions_13_0= ruleSumExpression )
            	    {
            	    // InternalSCTX.g:12229:6: (lv_subExpressions_13_0= ruleSumExpression )
            	    // InternalSCTX.g:12230:7: lv_subExpressions_13_0= ruleSumExpression
=======
            	    // InternalSCTX.g:12126:5: ( (lv_subExpressions_13_0= ruleSumExpression ) )
            	    // InternalSCTX.g:12127:6: (lv_subExpressions_13_0= ruleSumExpression )
            	    {
            	    // InternalSCTX.g:12127:6: (lv_subExpressions_13_0= ruleSumExpression )
            	    // InternalSCTX.g:12128:7: lv_subExpressions_13_0= ruleSumExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_2_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_184);
            	    lv_subExpressions_13_0=ruleSumExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_13_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

<<<<<<< HEAD
            	    // InternalSCTX.g:12247:5: (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )*
            	    loop383:
            	    do {
            	        int alt383=2;
            	        alt383 = dfa383.predict(input);
            	        switch (alt383) {
            	    	case 1 :
            	    	    // InternalSCTX.g:12248:6: otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) )
=======
            	    // InternalSCTX.g:12145:5: (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )*
            	    loop381:
            	    do {
            	        int alt381=2;
            	        alt381 = dfa381.predict(input);
            	        switch (alt381) {
            	    	case 1 :
            	    	    // InternalSCTX.g:12146:6: otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    	    {
            	    	    otherlv_14=(Token)match(input,91,FollowSets000.FOLLOW_94); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_14, grammarAccess.getShiftExpressionsAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_2_3_0());
            	    	      					
            	    	    }
<<<<<<< HEAD
            	    	    // InternalSCTX.g:12252:6: ( (lv_subExpressions_15_0= ruleSumExpression ) )
            	    	    // InternalSCTX.g:12253:7: (lv_subExpressions_15_0= ruleSumExpression )
            	    	    {
            	    	    // InternalSCTX.g:12253:7: (lv_subExpressions_15_0= ruleSumExpression )
            	    	    // InternalSCTX.g:12254:8: lv_subExpressions_15_0= ruleSumExpression
=======
            	    	    // InternalSCTX.g:12150:6: ( (lv_subExpressions_15_0= ruleSumExpression ) )
            	    	    // InternalSCTX.g:12151:7: (lv_subExpressions_15_0= ruleSumExpression )
            	    	    {
            	    	    // InternalSCTX.g:12151:7: (lv_subExpressions_15_0= ruleSumExpression )
            	    	    // InternalSCTX.g:12152:8: lv_subExpressions_15_0= ruleSumExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_2_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_184);
            	    	    lv_subExpressions_15_0=ruleSumExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_15_0,
            	    	      									"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
<<<<<<< HEAD
            	    	    break loop383;
=======
            	    	    break loop381;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;

            	default :
<<<<<<< HEAD
            	    break loop384;
=======
            	    break loop382;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftExpressions"


    // $ANTLR start "entryRuleShiftRightExpression"
<<<<<<< HEAD
    // InternalSCTX.g:12278:1: entryRuleShiftRightExpression returns [EObject current=null] : iv_ruleShiftRightExpression= ruleShiftRightExpression EOF ;
=======
    // InternalSCTX.g:12176:1: entryRuleShiftRightExpression returns [EObject current=null] : iv_ruleShiftRightExpression= ruleShiftRightExpression EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleShiftRightExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShiftRightExpression = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:12278:61: (iv_ruleShiftRightExpression= ruleShiftRightExpression EOF )
            // InternalSCTX.g:12279:2: iv_ruleShiftRightExpression= ruleShiftRightExpression EOF
=======
            // InternalSCTX.g:12176:61: (iv_ruleShiftRightExpression= ruleShiftRightExpression EOF )
            // InternalSCTX.g:12177:2: iv_ruleShiftRightExpression= ruleShiftRightExpression EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShiftRightExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleShiftRightExpression=ruleShiftRightExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShiftRightExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShiftRightExpression"


    // $ANTLR start "ruleShiftRightExpression"
<<<<<<< HEAD
    // InternalSCTX.g:12285:1: ruleShiftRightExpression returns [EObject current=null] : (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? ) ;
=======
    // InternalSCTX.g:12183:1: ruleShiftRightExpression returns [EObject current=null] : (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleShiftRightExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_SumExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:12291:2: ( (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? ) )
            // InternalSCTX.g:12292:2: (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? )
            {
            // InternalSCTX.g:12292:2: (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? )
            // InternalSCTX.g:12293:3: this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )?
=======
            // InternalSCTX.g:12189:2: ( (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? ) )
            // InternalSCTX.g:12190:2: (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? )
            {
            // InternalSCTX.g:12190:2: (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? )
            // InternalSCTX.g:12191:3: this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )?
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getSumExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_185);
            this_SumExpression_0=ruleSumExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SumExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:12304:3: ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )?
            int alt386=2;
            int LA386_0 = input.LA(1);

            if ( (LA386_0==91) ) {
                alt386=1;
            }
            switch (alt386) {
                case 1 :
                    // InternalSCTX.g:12305:4: () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )*
                    {
                    // InternalSCTX.g:12305:4: ()
                    // InternalSCTX.g:12306:5: 
=======
            // InternalSCTX.g:12202:3: ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )?
            int alt384=2;
            int LA384_0 = input.LA(1);

            if ( (LA384_0==90) ) {
                alt384=1;
            }
            switch (alt384) {
                case 1 :
                    // InternalSCTX.g:12203:4: () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )*
                    {
                    // InternalSCTX.g:12203:4: ()
                    // InternalSCTX.g:12204:5: 
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getShiftRightExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

<<<<<<< HEAD
                    // InternalSCTX.g:12315:4: ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) )
                    // InternalSCTX.g:12316:5: ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) )
                    {
                    // InternalSCTX.g:12316:5: ( (lv_operator_2_0= ruleShiftRightOperator ) )
                    // InternalSCTX.g:12317:6: (lv_operator_2_0= ruleShiftRightOperator )
                    {
                    // InternalSCTX.g:12317:6: (lv_operator_2_0= ruleShiftRightOperator )
                    // InternalSCTX.g:12318:7: lv_operator_2_0= ruleShiftRightOperator
=======
                    // InternalSCTX.g:12213:4: ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) )
                    // InternalSCTX.g:12214:5: ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) )
                    {
                    // InternalSCTX.g:12214:5: ( (lv_operator_2_0= ruleShiftRightOperator ) )
                    // InternalSCTX.g:12215:6: (lv_operator_2_0= ruleShiftRightOperator )
                    {
                    // InternalSCTX.g:12215:6: (lv_operator_2_0= ruleShiftRightOperator )
                    // InternalSCTX.g:12216:7: lv_operator_2_0= ruleShiftRightOperator
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getOperatorShiftRightOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_94);
                    lv_operator_2_0=ruleShiftRightOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftRightExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

<<<<<<< HEAD
                    // InternalSCTX.g:12335:5: ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) )
                    // InternalSCTX.g:12336:6: (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression )
                    {
                    // InternalSCTX.g:12336:6: (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression )
                    // InternalSCTX.g:12337:7: lv_subExpressions_3_0= ruleShiftRightUnsignedExpression
=======
                    // InternalSCTX.g:12233:5: ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) )
                    // InternalSCTX.g:12234:6: (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression )
                    {
                    // InternalSCTX.g:12234:6: (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression )
                    // InternalSCTX.g:12235:7: lv_subExpressions_3_0= ruleShiftRightUnsignedExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getSubExpressionsShiftRightUnsignedExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_185);
                    lv_subExpressions_3_0=ruleShiftRightUnsignedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftRightExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

<<<<<<< HEAD
                    // InternalSCTX.g:12355:4: (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )*
                    loop385:
                    do {
                        int alt385=2;
                        int LA385_0 = input.LA(1);

                        if ( (LA385_0==91) ) {
                            alt385=1;
                        }


                        switch (alt385) {
                    	case 1 :
                    	    // InternalSCTX.g:12356:5: otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) )
=======
                    // InternalSCTX.g:12253:4: (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )*
                    loop383:
                    do {
                        int alt383=2;
                        int LA383_0 = input.LA(1);

                        if ( (LA383_0==90) ) {
                            alt383=1;
                        }


                        switch (alt383) {
                    	case 1 :
                    	    // InternalSCTX.g:12254:5: otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    otherlv_4=(Token)match(input,90,FollowSets000.FOLLOW_94); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getShiftRightExpressionAccess().getGreaterThanSignGreaterThanSignKeyword_1_2_0());
                    	      				
                    	    }
<<<<<<< HEAD
                    	    // InternalSCTX.g:12360:5: ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) )
                    	    // InternalSCTX.g:12361:6: (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression )
                    	    {
                    	    // InternalSCTX.g:12361:6: (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression )
                    	    // InternalSCTX.g:12362:7: lv_subExpressions_5_0= ruleShiftRightUnsignedExpression
=======
                    	    // InternalSCTX.g:12258:5: ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) )
                    	    // InternalSCTX.g:12259:6: (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression )
                    	    {
                    	    // InternalSCTX.g:12259:6: (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression )
                    	    // InternalSCTX.g:12260:7: lv_subExpressions_5_0= ruleShiftRightUnsignedExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getSubExpressionsShiftRightUnsignedExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_185);
                    	    lv_subExpressions_5_0=ruleShiftRightUnsignedExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getShiftRightExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
<<<<<<< HEAD
                    	    break loop385;
=======
                    	    break loop383;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightExpression"


    // $ANTLR start "entryRuleShiftRightUnsignedExpression"
<<<<<<< HEAD
    // InternalSCTX.g:12385:1: entryRuleShiftRightUnsignedExpression returns [EObject current=null] : iv_ruleShiftRightUnsignedExpression= ruleShiftRightUnsignedExpression EOF ;
=======
    // InternalSCTX.g:12283:1: entryRuleShiftRightUnsignedExpression returns [EObject current=null] : iv_ruleShiftRightUnsignedExpression= ruleShiftRightUnsignedExpression EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleShiftRightUnsignedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShiftRightUnsignedExpression = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:12385:69: (iv_ruleShiftRightUnsignedExpression= ruleShiftRightUnsignedExpression EOF )
            // InternalSCTX.g:12386:2: iv_ruleShiftRightUnsignedExpression= ruleShiftRightUnsignedExpression EOF
=======
            // InternalSCTX.g:12283:69: (iv_ruleShiftRightUnsignedExpression= ruleShiftRightUnsignedExpression EOF )
            // InternalSCTX.g:12284:2: iv_ruleShiftRightUnsignedExpression= ruleShiftRightUnsignedExpression EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleShiftRightUnsignedExpression=ruleShiftRightUnsignedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShiftRightUnsignedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShiftRightUnsignedExpression"


    // $ANTLR start "ruleShiftRightUnsignedExpression"
<<<<<<< HEAD
    // InternalSCTX.g:12392:1: ruleShiftRightUnsignedExpression returns [EObject current=null] : (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )? ) ;
=======
    // InternalSCTX.g:12290:1: ruleShiftRightUnsignedExpression returns [EObject current=null] : (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )? ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleShiftRightUnsignedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_SumExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:12398:2: ( (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )? ) )
            // InternalSCTX.g:12399:2: (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )? )
            {
            // InternalSCTX.g:12399:2: (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )? )
            // InternalSCTX.g:12400:3: this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )?
=======
            // InternalSCTX.g:12296:2: ( (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )? ) )
            // InternalSCTX.g:12297:2: (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )? )
            {
            // InternalSCTX.g:12297:2: (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )? )
            // InternalSCTX.g:12298:3: this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )?
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getSumExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_184);
            this_SumExpression_0=ruleSumExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SumExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:12411:3: ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )?
            int alt388=2;
            int LA388_0 = input.LA(1);

            if ( (LA388_0==92) ) {
                alt388=1;
            }
            switch (alt388) {
                case 1 :
                    // InternalSCTX.g:12412:4: () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )*
                    {
                    // InternalSCTX.g:12412:4: ()
                    // InternalSCTX.g:12413:5: 
=======
            // InternalSCTX.g:12309:3: ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )?
            int alt386=2;
            int LA386_0 = input.LA(1);

            if ( (LA386_0==91) ) {
                alt386=1;
            }
            switch (alt386) {
                case 1 :
                    // InternalSCTX.g:12310:4: () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )*
                    {
                    // InternalSCTX.g:12310:4: ()
                    // InternalSCTX.g:12311:5: 
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getShiftRightUnsignedExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

<<<<<<< HEAD
                    // InternalSCTX.g:12422:4: ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) )
                    // InternalSCTX.g:12423:5: ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) )
                    {
                    // InternalSCTX.g:12423:5: ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) )
                    // InternalSCTX.g:12424:6: (lv_operator_2_0= ruleShiftRightUnsignedOperator )
                    {
                    // InternalSCTX.g:12424:6: (lv_operator_2_0= ruleShiftRightUnsignedOperator )
                    // InternalSCTX.g:12425:7: lv_operator_2_0= ruleShiftRightUnsignedOperator
=======
                    // InternalSCTX.g:12320:4: ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) )
                    // InternalSCTX.g:12321:5: ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) )
                    {
                    // InternalSCTX.g:12321:5: ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) )
                    // InternalSCTX.g:12322:6: (lv_operator_2_0= ruleShiftRightUnsignedOperator )
                    {
                    // InternalSCTX.g:12322:6: (lv_operator_2_0= ruleShiftRightUnsignedOperator )
                    // InternalSCTX.g:12323:7: lv_operator_2_0= ruleShiftRightUnsignedOperator
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getOperatorShiftRightUnsignedOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_94);
                    lv_operator_2_0=ruleShiftRightUnsignedOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftRightUnsignedExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

<<<<<<< HEAD
                    // InternalSCTX.g:12442:5: ( (lv_subExpressions_3_0= ruleSumExpression ) )
                    // InternalSCTX.g:12443:6: (lv_subExpressions_3_0= ruleSumExpression )
                    {
                    // InternalSCTX.g:12443:6: (lv_subExpressions_3_0= ruleSumExpression )
                    // InternalSCTX.g:12444:7: lv_subExpressions_3_0= ruleSumExpression
=======
                    // InternalSCTX.g:12340:5: ( (lv_subExpressions_3_0= ruleSumExpression ) )
                    // InternalSCTX.g:12341:6: (lv_subExpressions_3_0= ruleSumExpression )
                    {
                    // InternalSCTX.g:12341:6: (lv_subExpressions_3_0= ruleSumExpression )
                    // InternalSCTX.g:12342:7: lv_subExpressions_3_0= ruleSumExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getSubExpressionsSumExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_186);
                    lv_subExpressions_3_0=ruleSumExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftRightUnsignedExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

<<<<<<< HEAD
                    // InternalSCTX.g:12462:4: (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )*
                    loop387:
                    do {
                        int alt387=2;
                        int LA387_0 = input.LA(1);

                        if ( (LA387_0==92) ) {
                            alt387=1;
                        }


                        switch (alt387) {
                    	case 1 :
                    	    // InternalSCTX.g:12463:5: otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) )
=======
                    // InternalSCTX.g:12360:4: (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )*
                    loop385:
                    do {
                        int alt385=2;
                        int LA385_0 = input.LA(1);

                        if ( (LA385_0==91) ) {
                            alt385=1;
                        }


                        switch (alt385) {
                    	case 1 :
                    	    // InternalSCTX.g:12361:5: otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    otherlv_4=(Token)match(input,91,FollowSets000.FOLLOW_94); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getShiftRightUnsignedExpressionAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_2_0());
                    	      				
                    	    }
<<<<<<< HEAD
                    	    // InternalSCTX.g:12467:5: ( (lv_subExpressions_5_0= ruleSumExpression ) )
                    	    // InternalSCTX.g:12468:6: (lv_subExpressions_5_0= ruleSumExpression )
                    	    {
                    	    // InternalSCTX.g:12468:6: (lv_subExpressions_5_0= ruleSumExpression )
                    	    // InternalSCTX.g:12469:7: lv_subExpressions_5_0= ruleSumExpression
=======
                    	    // InternalSCTX.g:12365:5: ( (lv_subExpressions_5_0= ruleSumExpression ) )
                    	    // InternalSCTX.g:12366:6: (lv_subExpressions_5_0= ruleSumExpression )
                    	    {
                    	    // InternalSCTX.g:12366:6: (lv_subExpressions_5_0= ruleSumExpression )
                    	    // InternalSCTX.g:12367:7: lv_subExpressions_5_0= ruleSumExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getSubExpressionsSumExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_186);
                    	    lv_subExpressions_5_0=ruleSumExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getShiftRightUnsignedExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
<<<<<<< HEAD
                    	    break loop387;
=======
                    	    break loop385;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightUnsignedExpression"


    // $ANTLR start "entryRuleSumExpression"
<<<<<<< HEAD
    // InternalSCTX.g:12492:1: entryRuleSumExpression returns [EObject current=null] : iv_ruleSumExpression= ruleSumExpression EOF ;
=======
    // InternalSCTX.g:12390:1: entryRuleSumExpression returns [EObject current=null] : iv_ruleSumExpression= ruleSumExpression EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleSumExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSumExpression = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:12492:54: (iv_ruleSumExpression= ruleSumExpression EOF )
            // InternalSCTX.g:12493:2: iv_ruleSumExpression= ruleSumExpression EOF
=======
            // InternalSCTX.g:12390:54: (iv_ruleSumExpression= ruleSumExpression EOF )
            // InternalSCTX.g:12391:2: iv_ruleSumExpression= ruleSumExpression EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSumExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSumExpression=ruleSumExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSumExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSumExpression"


    // $ANTLR start "ruleSumExpression"
<<<<<<< HEAD
    // InternalSCTX.g:12499:1: ruleSumExpression returns [EObject current=null] : (this_ProductExpression_0= ruleProductExpression ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )* ) ;
=======
    // InternalSCTX.g:12397:1: ruleSumExpression returns [EObject current=null] : (this_ProductExpression_0= ruleProductExpression ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )* ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleSumExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_9=null;
        EObject this_ProductExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        Enumerator lv_operator_7_0 = null;

        EObject lv_subExpressions_8_0 = null;

        EObject lv_subExpressions_10_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:12505:2: ( (this_ProductExpression_0= ruleProductExpression ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )* ) )
            // InternalSCTX.g:12506:2: (this_ProductExpression_0= ruleProductExpression ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )* )
            {
            // InternalSCTX.g:12506:2: (this_ProductExpression_0= ruleProductExpression ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )* )
            // InternalSCTX.g:12507:3: this_ProductExpression_0= ruleProductExpression ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )*
=======
            // InternalSCTX.g:12403:2: ( (this_ProductExpression_0= ruleProductExpression ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )* ) )
            // InternalSCTX.g:12404:2: (this_ProductExpression_0= ruleProductExpression ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )* )
            {
            // InternalSCTX.g:12404:2: (this_ProductExpression_0= ruleProductExpression ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )* )
            // InternalSCTX.g:12405:3: this_ProductExpression_0= ruleProductExpression ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )*
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSumExpressionAccess().getProductExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_187);
            this_ProductExpression_0=ruleProductExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ProductExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:12518:3: ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )*
            loop391:
            do {
                int alt391=3;
                int LA391_0 = input.LA(1);

                if ( (LA391_0==93) ) {
                    alt391=1;
                }
                else if ( (LA391_0==94) ) {
                    alt391=2;
                }


                switch (alt391) {
            	case 1 :
            	    // InternalSCTX.g:12519:4: ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* )
            	    {
            	    // InternalSCTX.g:12519:4: ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* )
            	    // InternalSCTX.g:12520:5: () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )*
            	    {
            	    // InternalSCTX.g:12520:5: ()
            	    // InternalSCTX.g:12521:6: 
=======
            // InternalSCTX.g:12416:3: ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )*
            loop389:
            do {
                int alt389=3;
                int LA389_0 = input.LA(1);

                if ( (LA389_0==92) ) {
                    alt389=1;
                }
                else if ( (LA389_0==93) ) {
                    alt389=2;
                }


                switch (alt389) {
            	case 1 :
            	    // InternalSCTX.g:12417:4: ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* )
            	    {
            	    // InternalSCTX.g:12417:4: ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* )
            	    // InternalSCTX.g:12418:5: () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )*
            	    {
            	    // InternalSCTX.g:12418:5: ()
            	    // InternalSCTX.g:12419:6: 
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getSumExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

<<<<<<< HEAD
            	    // InternalSCTX.g:12530:5: ( (lv_operator_2_0= ruleAddOperator ) )
            	    // InternalSCTX.g:12531:6: (lv_operator_2_0= ruleAddOperator )
            	    {
            	    // InternalSCTX.g:12531:6: (lv_operator_2_0= ruleAddOperator )
            	    // InternalSCTX.g:12532:7: lv_operator_2_0= ruleAddOperator
=======
            	    // InternalSCTX.g:12428:5: ( (lv_operator_2_0= ruleAddOperator ) )
            	    // InternalSCTX.g:12429:6: (lv_operator_2_0= ruleAddOperator )
            	    {
            	    // InternalSCTX.g:12429:6: (lv_operator_2_0= ruleAddOperator )
            	    // InternalSCTX.g:12430:7: lv_operator_2_0= ruleAddOperator
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getSumExpressionAccess().getOperatorAddOperatorEnumRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_94);
            	    lv_operator_2_0=ruleAddOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getSumExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_2_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.AddOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

<<<<<<< HEAD
            	    // InternalSCTX.g:12549:5: ( (lv_subExpressions_3_0= ruleProductExpression ) )
            	    // InternalSCTX.g:12550:6: (lv_subExpressions_3_0= ruleProductExpression )
            	    {
            	    // InternalSCTX.g:12550:6: (lv_subExpressions_3_0= ruleProductExpression )
            	    // InternalSCTX.g:12551:7: lv_subExpressions_3_0= ruleProductExpression
=======
            	    // InternalSCTX.g:12447:5: ( (lv_subExpressions_3_0= ruleProductExpression ) )
            	    // InternalSCTX.g:12448:6: (lv_subExpressions_3_0= ruleProductExpression )
            	    {
            	    // InternalSCTX.g:12448:6: (lv_subExpressions_3_0= ruleProductExpression )
            	    // InternalSCTX.g:12449:7: lv_subExpressions_3_0= ruleProductExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_187);
            	    lv_subExpressions_3_0=ruleProductExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getSumExpressionRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_3_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.ProductExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

<<<<<<< HEAD
            	    // InternalSCTX.g:12568:5: (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )*
            	    loop389:
            	    do {
            	        int alt389=2;
            	        alt389 = dfa389.predict(input);
            	        switch (alt389) {
            	    	case 1 :
            	    	    // InternalSCTX.g:12569:6: otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) )
=======
            	    // InternalSCTX.g:12466:5: (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )*
            	    loop387:
            	    do {
            	        int alt387=2;
            	        alt387 = dfa387.predict(input);
            	        switch (alt387) {
            	    	case 1 :
            	    	    // InternalSCTX.g:12467:6: otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    	    {
            	    	    otherlv_4=(Token)match(input,92,FollowSets000.FOLLOW_94); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_4, grammarAccess.getSumExpressionAccess().getPlusSignKeyword_1_0_3_0());
            	    	      					
            	    	    }
<<<<<<< HEAD
            	    	    // InternalSCTX.g:12573:6: ( (lv_subExpressions_5_0= ruleProductExpression ) )
            	    	    // InternalSCTX.g:12574:7: (lv_subExpressions_5_0= ruleProductExpression )
            	    	    {
            	    	    // InternalSCTX.g:12574:7: (lv_subExpressions_5_0= ruleProductExpression )
            	    	    // InternalSCTX.g:12575:8: lv_subExpressions_5_0= ruleProductExpression
=======
            	    	    // InternalSCTX.g:12471:6: ( (lv_subExpressions_5_0= ruleProductExpression ) )
            	    	    // InternalSCTX.g:12472:7: (lv_subExpressions_5_0= ruleProductExpression )
            	    	    {
            	    	    // InternalSCTX.g:12472:7: (lv_subExpressions_5_0= ruleProductExpression )
            	    	    // InternalSCTX.g:12473:8: lv_subExpressions_5_0= ruleProductExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_0_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_187);
            	    	    lv_subExpressions_5_0=ruleProductExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getSumExpressionRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_5_0,
            	    	      									"de.cau.cs.kieler.kexpressions.KExpressions.ProductExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
<<<<<<< HEAD
            	    	    break loop389;
=======
            	    	    break loop387;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 2 :
<<<<<<< HEAD
            	    // InternalSCTX.g:12595:4: ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* )
            	    {
            	    // InternalSCTX.g:12595:4: ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* )
            	    // InternalSCTX.g:12596:5: () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )*
            	    {
            	    // InternalSCTX.g:12596:5: ()
            	    // InternalSCTX.g:12597:6: 
=======
            	    // InternalSCTX.g:12493:4: ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* )
            	    {
            	    // InternalSCTX.g:12493:4: ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* )
            	    // InternalSCTX.g:12494:5: () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )*
            	    {
            	    // InternalSCTX.g:12494:5: ()
            	    // InternalSCTX.g:12495:6: 
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getSumExpressionAccess().getOperatorExpressionSubExpressionsAction_1_1_0(),
            	      							current);
            	      					
            	    }

            	    }

<<<<<<< HEAD
            	    // InternalSCTX.g:12606:5: ( (lv_operator_7_0= ruleSubOperator ) )
            	    // InternalSCTX.g:12607:6: (lv_operator_7_0= ruleSubOperator )
            	    {
            	    // InternalSCTX.g:12607:6: (lv_operator_7_0= ruleSubOperator )
            	    // InternalSCTX.g:12608:7: lv_operator_7_0= ruleSubOperator
=======
            	    // InternalSCTX.g:12504:5: ( (lv_operator_7_0= ruleSubOperator ) )
            	    // InternalSCTX.g:12505:6: (lv_operator_7_0= ruleSubOperator )
            	    {
            	    // InternalSCTX.g:12505:6: (lv_operator_7_0= ruleSubOperator )
            	    // InternalSCTX.g:12506:7: lv_operator_7_0= ruleSubOperator
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getSumExpressionAccess().getOperatorSubOperatorEnumRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_94);
            	    lv_operator_7_0=ruleSubOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getSumExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_7_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.SubOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

<<<<<<< HEAD
            	    // InternalSCTX.g:12625:5: ( (lv_subExpressions_8_0= ruleProductExpression ) )
            	    // InternalSCTX.g:12626:6: (lv_subExpressions_8_0= ruleProductExpression )
            	    {
            	    // InternalSCTX.g:12626:6: (lv_subExpressions_8_0= ruleProductExpression )
            	    // InternalSCTX.g:12627:7: lv_subExpressions_8_0= ruleProductExpression
=======
            	    // InternalSCTX.g:12523:5: ( (lv_subExpressions_8_0= ruleProductExpression ) )
            	    // InternalSCTX.g:12524:6: (lv_subExpressions_8_0= ruleProductExpression )
            	    {
            	    // InternalSCTX.g:12524:6: (lv_subExpressions_8_0= ruleProductExpression )
            	    // InternalSCTX.g:12525:7: lv_subExpressions_8_0= ruleProductExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_1_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_187);
            	    lv_subExpressions_8_0=ruleProductExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getSumExpressionRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_8_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.ProductExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

<<<<<<< HEAD
            	    // InternalSCTX.g:12644:5: (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )*
            	    loop390:
            	    do {
            	        int alt390=2;
            	        alt390 = dfa390.predict(input);
            	        switch (alt390) {
            	    	case 1 :
            	    	    // InternalSCTX.g:12645:6: otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) )
=======
            	    // InternalSCTX.g:12542:5: (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )*
            	    loop388:
            	    do {
            	        int alt388=2;
            	        alt388 = dfa388.predict(input);
            	        switch (alt388) {
            	    	case 1 :
            	    	    // InternalSCTX.g:12543:6: otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    	    {
            	    	    otherlv_9=(Token)match(input,93,FollowSets000.FOLLOW_94); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_9, grammarAccess.getSumExpressionAccess().getHyphenMinusKeyword_1_1_3_0());
            	    	      					
            	    	    }
<<<<<<< HEAD
            	    	    // InternalSCTX.g:12649:6: ( (lv_subExpressions_10_0= ruleProductExpression ) )
            	    	    // InternalSCTX.g:12650:7: (lv_subExpressions_10_0= ruleProductExpression )
            	    	    {
            	    	    // InternalSCTX.g:12650:7: (lv_subExpressions_10_0= ruleProductExpression )
            	    	    // InternalSCTX.g:12651:8: lv_subExpressions_10_0= ruleProductExpression
=======
            	    	    // InternalSCTX.g:12547:6: ( (lv_subExpressions_10_0= ruleProductExpression ) )
            	    	    // InternalSCTX.g:12548:7: (lv_subExpressions_10_0= ruleProductExpression )
            	    	    {
            	    	    // InternalSCTX.g:12548:7: (lv_subExpressions_10_0= ruleProductExpression )
            	    	    // InternalSCTX.g:12549:8: lv_subExpressions_10_0= ruleProductExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_1_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_187);
            	    	    lv_subExpressions_10_0=ruleProductExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getSumExpressionRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_10_0,
            	    	      									"de.cau.cs.kieler.kexpressions.KExpressions.ProductExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
<<<<<<< HEAD
            	    	    break loop390;
=======
            	    	    break loop388;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;

            	default :
<<<<<<< HEAD
            	    break loop391;
=======
            	    break loop389;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSumExpression"


    // $ANTLR start "entryRuleProductExpression"
<<<<<<< HEAD
    // InternalSCTX.g:12675:1: entryRuleProductExpression returns [EObject current=null] : iv_ruleProductExpression= ruleProductExpression EOF ;
=======
    // InternalSCTX.g:12573:1: entryRuleProductExpression returns [EObject current=null] : iv_ruleProductExpression= ruleProductExpression EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleProductExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProductExpression = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:12675:58: (iv_ruleProductExpression= ruleProductExpression EOF )
            // InternalSCTX.g:12676:2: iv_ruleProductExpression= ruleProductExpression EOF
=======
            // InternalSCTX.g:12573:58: (iv_ruleProductExpression= ruleProductExpression EOF )
            // InternalSCTX.g:12574:2: iv_ruleProductExpression= ruleProductExpression EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getProductExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleProductExpression=ruleProductExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProductExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProductExpression"


    // $ANTLR start "ruleProductExpression"
<<<<<<< HEAD
    // InternalSCTX.g:12682:1: ruleProductExpression returns [EObject current=null] : (this_NegExpression_0= ruleNegExpression ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )* ) )* ) ;
=======
    // InternalSCTX.g:12580:1: ruleProductExpression returns [EObject current=null] : (this_NegExpression_0= ruleNegExpression ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )* ) )* ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleProductExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_9=null;
        Token otherlv_14=null;
        EObject this_NegExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        Enumerator lv_operator_7_0 = null;

        EObject lv_subExpressions_8_0 = null;

        EObject lv_subExpressions_10_0 = null;

        Enumerator lv_operator_12_0 = null;

        EObject lv_subExpressions_13_0 = null;

        EObject lv_subExpressions_15_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:12688:2: ( (this_NegExpression_0= ruleNegExpression ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )* ) )* ) )
            // InternalSCTX.g:12689:2: (this_NegExpression_0= ruleNegExpression ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )* ) )* )
            {
            // InternalSCTX.g:12689:2: (this_NegExpression_0= ruleNegExpression ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )* ) )* )
            // InternalSCTX.g:12690:3: this_NegExpression_0= ruleNegExpression ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )* ) )*
=======
            // InternalSCTX.g:12586:2: ( (this_NegExpression_0= ruleNegExpression ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )* ) )* ) )
            // InternalSCTX.g:12587:2: (this_NegExpression_0= ruleNegExpression ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )* ) )* )
            {
            // InternalSCTX.g:12587:2: (this_NegExpression_0= ruleNegExpression ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )* ) )* )
            // InternalSCTX.g:12588:3: this_NegExpression_0= ruleNegExpression ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )* ) )*
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getProductExpressionAccess().getNegExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_188);
            this_NegExpression_0=ruleNegExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NegExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:12701:3: ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )* ) )*
            loop395:
            do {
                int alt395=4;
=======
            // InternalSCTX.g:12599:3: ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )* ) )*
            loop393:
            do {
                int alt393=4;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                switch ( input.LA(1) ) {
                case 94:
                    {
<<<<<<< HEAD
                    alt395=1;
=======
                    alt393=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    }
                    break;
                case 95:
                    {
<<<<<<< HEAD
                    alt395=2;
=======
                    alt393=2;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    }
                    break;
                case 96:
                    {
<<<<<<< HEAD
                    alt395=3;
=======
                    alt393=3;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    }
                    break;

                }

<<<<<<< HEAD
                switch (alt395) {
            	case 1 :
            	    // InternalSCTX.g:12702:4: ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )* )
            	    {
            	    // InternalSCTX.g:12702:4: ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )* )
            	    // InternalSCTX.g:12703:5: () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )*
            	    {
            	    // InternalSCTX.g:12703:5: ()
            	    // InternalSCTX.g:12704:6: 
=======
                switch (alt393) {
            	case 1 :
            	    // InternalSCTX.g:12600:4: ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )* )
            	    {
            	    // InternalSCTX.g:12600:4: ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )* )
            	    // InternalSCTX.g:12601:5: () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )*
            	    {
            	    // InternalSCTX.g:12601:5: ()
            	    // InternalSCTX.g:12602:6: 
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getProductExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

<<<<<<< HEAD
            	    // InternalSCTX.g:12713:5: ( (lv_operator_2_0= ruleMultOperator ) )
            	    // InternalSCTX.g:12714:6: (lv_operator_2_0= ruleMultOperator )
            	    {
            	    // InternalSCTX.g:12714:6: (lv_operator_2_0= ruleMultOperator )
            	    // InternalSCTX.g:12715:7: lv_operator_2_0= ruleMultOperator
=======
            	    // InternalSCTX.g:12611:5: ( (lv_operator_2_0= ruleMultOperator ) )
            	    // InternalSCTX.g:12612:6: (lv_operator_2_0= ruleMultOperator )
            	    {
            	    // InternalSCTX.g:12612:6: (lv_operator_2_0= ruleMultOperator )
            	    // InternalSCTX.g:12613:7: lv_operator_2_0= ruleMultOperator
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getProductExpressionAccess().getOperatorMultOperatorEnumRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_94);
            	    lv_operator_2_0=ruleMultOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_2_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.MultOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

<<<<<<< HEAD
            	    // InternalSCTX.g:12732:5: ( (lv_subExpressions_3_0= ruleNegExpression ) )
            	    // InternalSCTX.g:12733:6: (lv_subExpressions_3_0= ruleNegExpression )
            	    {
            	    // InternalSCTX.g:12733:6: (lv_subExpressions_3_0= ruleNegExpression )
            	    // InternalSCTX.g:12734:7: lv_subExpressions_3_0= ruleNegExpression
=======
            	    // InternalSCTX.g:12630:5: ( (lv_subExpressions_3_0= ruleNegExpression ) )
            	    // InternalSCTX.g:12631:6: (lv_subExpressions_3_0= ruleNegExpression )
            	    {
            	    // InternalSCTX.g:12631:6: (lv_subExpressions_3_0= ruleNegExpression )
            	    // InternalSCTX.g:12632:7: lv_subExpressions_3_0= ruleNegExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_188);
            	    lv_subExpressions_3_0=ruleNegExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_3_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.NegExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

<<<<<<< HEAD
            	    // InternalSCTX.g:12751:5: (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )*
            	    loop392:
            	    do {
            	        int alt392=2;
            	        alt392 = dfa392.predict(input);
            	        switch (alt392) {
            	    	case 1 :
            	    	    // InternalSCTX.g:12752:6: otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) )
=======
            	    // InternalSCTX.g:12649:5: (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )*
            	    loop390:
            	    do {
            	        int alt390=2;
            	        alt390 = dfa390.predict(input);
            	        switch (alt390) {
            	    	case 1 :
            	    	    // InternalSCTX.g:12650:6: otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    	    {
            	    	    otherlv_4=(Token)match(input,94,FollowSets000.FOLLOW_94); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_4, grammarAccess.getProductExpressionAccess().getAsteriskKeyword_1_0_3_0());
            	    	      					
            	    	    }
<<<<<<< HEAD
            	    	    // InternalSCTX.g:12756:6: ( (lv_subExpressions_5_0= ruleNegExpression ) )
            	    	    // InternalSCTX.g:12757:7: (lv_subExpressions_5_0= ruleNegExpression )
            	    	    {
            	    	    // InternalSCTX.g:12757:7: (lv_subExpressions_5_0= ruleNegExpression )
            	    	    // InternalSCTX.g:12758:8: lv_subExpressions_5_0= ruleNegExpression
=======
            	    	    // InternalSCTX.g:12654:6: ( (lv_subExpressions_5_0= ruleNegExpression ) )
            	    	    // InternalSCTX.g:12655:7: (lv_subExpressions_5_0= ruleNegExpression )
            	    	    {
            	    	    // InternalSCTX.g:12655:7: (lv_subExpressions_5_0= ruleNegExpression )
            	    	    // InternalSCTX.g:12656:8: lv_subExpressions_5_0= ruleNegExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_0_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_188);
            	    	    lv_subExpressions_5_0=ruleNegExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_5_0,
            	    	      									"de.cau.cs.kieler.kexpressions.KExpressions.NegExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
<<<<<<< HEAD
            	    	    break loop392;
=======
            	    	    break loop390;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 2 :
<<<<<<< HEAD
            	    // InternalSCTX.g:12778:4: ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )* )
            	    {
            	    // InternalSCTX.g:12778:4: ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )* )
            	    // InternalSCTX.g:12779:5: () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )*
            	    {
            	    // InternalSCTX.g:12779:5: ()
            	    // InternalSCTX.g:12780:6: 
=======
            	    // InternalSCTX.g:12676:4: ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )* )
            	    {
            	    // InternalSCTX.g:12676:4: ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )* )
            	    // InternalSCTX.g:12677:5: () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )*
            	    {
            	    // InternalSCTX.g:12677:5: ()
            	    // InternalSCTX.g:12678:6: 
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getProductExpressionAccess().getOperatorExpressionSubExpressionsAction_1_1_0(),
            	      							current);
            	      					
            	    }

            	    }

<<<<<<< HEAD
            	    // InternalSCTX.g:12789:5: ( (lv_operator_7_0= ruleDivOperator ) )
            	    // InternalSCTX.g:12790:6: (lv_operator_7_0= ruleDivOperator )
            	    {
            	    // InternalSCTX.g:12790:6: (lv_operator_7_0= ruleDivOperator )
            	    // InternalSCTX.g:12791:7: lv_operator_7_0= ruleDivOperator
=======
            	    // InternalSCTX.g:12687:5: ( (lv_operator_7_0= ruleDivOperator ) )
            	    // InternalSCTX.g:12688:6: (lv_operator_7_0= ruleDivOperator )
            	    {
            	    // InternalSCTX.g:12688:6: (lv_operator_7_0= ruleDivOperator )
            	    // InternalSCTX.g:12689:7: lv_operator_7_0= ruleDivOperator
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getProductExpressionAccess().getOperatorDivOperatorEnumRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_94);
            	    lv_operator_7_0=ruleDivOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_7_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.DivOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

<<<<<<< HEAD
            	    // InternalSCTX.g:12808:5: ( (lv_subExpressions_8_0= ruleNegExpression ) )
            	    // InternalSCTX.g:12809:6: (lv_subExpressions_8_0= ruleNegExpression )
            	    {
            	    // InternalSCTX.g:12809:6: (lv_subExpressions_8_0= ruleNegExpression )
            	    // InternalSCTX.g:12810:7: lv_subExpressions_8_0= ruleNegExpression
=======
            	    // InternalSCTX.g:12706:5: ( (lv_subExpressions_8_0= ruleNegExpression ) )
            	    // InternalSCTX.g:12707:6: (lv_subExpressions_8_0= ruleNegExpression )
            	    {
            	    // InternalSCTX.g:12707:6: (lv_subExpressions_8_0= ruleNegExpression )
            	    // InternalSCTX.g:12708:7: lv_subExpressions_8_0= ruleNegExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_1_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_188);
            	    lv_subExpressions_8_0=ruleNegExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_8_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.NegExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

<<<<<<< HEAD
            	    // InternalSCTX.g:12827:5: (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )*
            	    loop393:
            	    do {
            	        int alt393=2;
            	        alt393 = dfa393.predict(input);
            	        switch (alt393) {
            	    	case 1 :
            	    	    // InternalSCTX.g:12828:6: otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) )
=======
            	    // InternalSCTX.g:12725:5: (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )*
            	    loop391:
            	    do {
            	        int alt391=2;
            	        alt391 = dfa391.predict(input);
            	        switch (alt391) {
            	    	case 1 :
            	    	    // InternalSCTX.g:12726:6: otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    	    {
            	    	    otherlv_9=(Token)match(input,95,FollowSets000.FOLLOW_94); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_9, grammarAccess.getProductExpressionAccess().getSolidusKeyword_1_1_3_0());
            	    	      					
            	    	    }
<<<<<<< HEAD
            	    	    // InternalSCTX.g:12832:6: ( (lv_subExpressions_10_0= ruleNegExpression ) )
            	    	    // InternalSCTX.g:12833:7: (lv_subExpressions_10_0= ruleNegExpression )
            	    	    {
            	    	    // InternalSCTX.g:12833:7: (lv_subExpressions_10_0= ruleNegExpression )
            	    	    // InternalSCTX.g:12834:8: lv_subExpressions_10_0= ruleNegExpression
=======
            	    	    // InternalSCTX.g:12730:6: ( (lv_subExpressions_10_0= ruleNegExpression ) )
            	    	    // InternalSCTX.g:12731:7: (lv_subExpressions_10_0= ruleNegExpression )
            	    	    {
            	    	    // InternalSCTX.g:12731:7: (lv_subExpressions_10_0= ruleNegExpression )
            	    	    // InternalSCTX.g:12732:8: lv_subExpressions_10_0= ruleNegExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_1_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_188);
            	    	    lv_subExpressions_10_0=ruleNegExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_10_0,
            	    	      									"de.cau.cs.kieler.kexpressions.KExpressions.NegExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
<<<<<<< HEAD
            	    	    break loop393;
=======
            	    	    break loop391;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 3 :
<<<<<<< HEAD
            	    // InternalSCTX.g:12854:4: ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )* )
            	    {
            	    // InternalSCTX.g:12854:4: ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )* )
            	    // InternalSCTX.g:12855:5: () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )*
            	    {
            	    // InternalSCTX.g:12855:5: ()
            	    // InternalSCTX.g:12856:6: 
=======
            	    // InternalSCTX.g:12752:4: ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )* )
            	    {
            	    // InternalSCTX.g:12752:4: ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )* )
            	    // InternalSCTX.g:12753:5: () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )*
            	    {
            	    // InternalSCTX.g:12753:5: ()
            	    // InternalSCTX.g:12754:6: 
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getProductExpressionAccess().getOperatorExpressionSubExpressionsAction_1_2_0(),
            	      							current);
            	      					
            	    }

            	    }

<<<<<<< HEAD
            	    // InternalSCTX.g:12865:5: ( (lv_operator_12_0= ruleModOperator ) )
            	    // InternalSCTX.g:12866:6: (lv_operator_12_0= ruleModOperator )
            	    {
            	    // InternalSCTX.g:12866:6: (lv_operator_12_0= ruleModOperator )
            	    // InternalSCTX.g:12867:7: lv_operator_12_0= ruleModOperator
=======
            	    // InternalSCTX.g:12763:5: ( (lv_operator_12_0= ruleModOperator ) )
            	    // InternalSCTX.g:12764:6: (lv_operator_12_0= ruleModOperator )
            	    {
            	    // InternalSCTX.g:12764:6: (lv_operator_12_0= ruleModOperator )
            	    // InternalSCTX.g:12765:7: lv_operator_12_0= ruleModOperator
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getProductExpressionAccess().getOperatorModOperatorEnumRuleCall_1_2_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_94);
            	    lv_operator_12_0=ruleModOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_12_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.ModOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

<<<<<<< HEAD
            	    // InternalSCTX.g:12884:5: ( (lv_subExpressions_13_0= ruleNegExpression ) )
            	    // InternalSCTX.g:12885:6: (lv_subExpressions_13_0= ruleNegExpression )
            	    {
            	    // InternalSCTX.g:12885:6: (lv_subExpressions_13_0= ruleNegExpression )
            	    // InternalSCTX.g:12886:7: lv_subExpressions_13_0= ruleNegExpression
=======
            	    // InternalSCTX.g:12782:5: ( (lv_subExpressions_13_0= ruleNegExpression ) )
            	    // InternalSCTX.g:12783:6: (lv_subExpressions_13_0= ruleNegExpression )
            	    {
            	    // InternalSCTX.g:12783:6: (lv_subExpressions_13_0= ruleNegExpression )
            	    // InternalSCTX.g:12784:7: lv_subExpressions_13_0= ruleNegExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_2_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_188);
            	    lv_subExpressions_13_0=ruleNegExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_13_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.NegExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

<<<<<<< HEAD
            	    // InternalSCTX.g:12903:5: (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )*
            	    loop394:
            	    do {
            	        int alt394=2;
            	        alt394 = dfa394.predict(input);
            	        switch (alt394) {
            	    	case 1 :
            	    	    // InternalSCTX.g:12904:6: otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) )
=======
            	    // InternalSCTX.g:12801:5: (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )*
            	    loop392:
            	    do {
            	        int alt392=2;
            	        alt392 = dfa392.predict(input);
            	        switch (alt392) {
            	    	case 1 :
            	    	    // InternalSCTX.g:12802:6: otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    	    {
            	    	    otherlv_14=(Token)match(input,96,FollowSets000.FOLLOW_94); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_14, grammarAccess.getProductExpressionAccess().getPercentSignKeyword_1_2_3_0());
            	    	      					
            	    	    }
<<<<<<< HEAD
            	    	    // InternalSCTX.g:12908:6: ( (lv_subExpressions_15_0= ruleNegExpression ) )
            	    	    // InternalSCTX.g:12909:7: (lv_subExpressions_15_0= ruleNegExpression )
            	    	    {
            	    	    // InternalSCTX.g:12909:7: (lv_subExpressions_15_0= ruleNegExpression )
            	    	    // InternalSCTX.g:12910:8: lv_subExpressions_15_0= ruleNegExpression
=======
            	    	    // InternalSCTX.g:12806:6: ( (lv_subExpressions_15_0= ruleNegExpression ) )
            	    	    // InternalSCTX.g:12807:7: (lv_subExpressions_15_0= ruleNegExpression )
            	    	    {
            	    	    // InternalSCTX.g:12807:7: (lv_subExpressions_15_0= ruleNegExpression )
            	    	    // InternalSCTX.g:12808:8: lv_subExpressions_15_0= ruleNegExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_2_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_188);
            	    	    lv_subExpressions_15_0=ruleNegExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_15_0,
            	    	      									"de.cau.cs.kieler.kexpressions.KExpressions.NegExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
<<<<<<< HEAD
            	    	    break loop394;
=======
            	    	    break loop392;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;

            	default :
<<<<<<< HEAD
            	    break loop395;
=======
            	    break loop393;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProductExpression"


    // $ANTLR start "entryRuleNegExpression"
<<<<<<< HEAD
    // InternalSCTX.g:12934:1: entryRuleNegExpression returns [EObject current=null] : iv_ruleNegExpression= ruleNegExpression EOF ;
=======
    // InternalSCTX.g:12832:1: entryRuleNegExpression returns [EObject current=null] : iv_ruleNegExpression= ruleNegExpression EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleNegExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNegExpression = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:12934:54: (iv_ruleNegExpression= ruleNegExpression EOF )
            // InternalSCTX.g:12935:2: iv_ruleNegExpression= ruleNegExpression EOF
=======
            // InternalSCTX.g:12832:54: (iv_ruleNegExpression= ruleNegExpression EOF )
            // InternalSCTX.g:12833:2: iv_ruleNegExpression= ruleNegExpression EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNegExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNegExpression=ruleNegExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNegExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNegExpression"


    // $ANTLR start "ruleNegExpression"
<<<<<<< HEAD
    // InternalSCTX.g:12941:1: ruleNegExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_TernaryOperation_3= ruleTernaryOperation ) ;
=======
    // InternalSCTX.g:12839:1: ruleNegExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_TernaryOperation_3= ruleTernaryOperation ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleNegExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_TernaryOperation_3 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:12947:2: ( ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_TernaryOperation_3= ruleTernaryOperation ) )
            // InternalSCTX.g:12948:2: ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_TernaryOperation_3= ruleTernaryOperation )
            {
            // InternalSCTX.g:12948:2: ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_TernaryOperation_3= ruleTernaryOperation )
            int alt396=2;
            int LA396_0 = input.LA(1);

            if ( (LA396_0==94) ) {
                alt396=1;
            }
            else if ( ((LA396_0>=RULE_STRING && LA396_0<=RULE_COMMENT_ANNOTATION)||LA396_0==21||LA396_0==31||LA396_0==80||LA396_0==85||LA396_0==102||(LA396_0>=105 && LA396_0<=106)||LA396_0==145||LA396_0==147||LA396_0==149) ) {
                alt396=2;
=======
            // InternalSCTX.g:12845:2: ( ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_TernaryOperation_3= ruleTernaryOperation ) )
            // InternalSCTX.g:12846:2: ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_TernaryOperation_3= ruleTernaryOperation )
            {
            // InternalSCTX.g:12846:2: ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_TernaryOperation_3= ruleTernaryOperation )
            int alt394=2;
            int LA394_0 = input.LA(1);

            if ( (LA394_0==93) ) {
                alt394=1;
            }
            else if ( ((LA394_0>=RULE_STRING && LA394_0<=RULE_COMMENT_ANNOTATION)||LA394_0==21||LA394_0==31||LA394_0==79||LA394_0==84||LA394_0==98||LA394_0==102||LA394_0==141||LA394_0==143) ) {
                alt394=2;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
<<<<<<< HEAD
                    new NoViableAltException("", 396, 0, input);

                throw nvae;
            }
            switch (alt396) {
                case 1 :
                    // InternalSCTX.g:12949:3: ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) )
                    {
                    // InternalSCTX.g:12949:3: ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) )
                    // InternalSCTX.g:12950:4: () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) )
                    {
                    // InternalSCTX.g:12950:4: ()
                    // InternalSCTX.g:12951:5: 
=======
                    new NoViableAltException("", 394, 0, input);

                throw nvae;
            }
            switch (alt394) {
                case 1 :
                    // InternalSCTX.g:12847:3: ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) )
                    {
                    // InternalSCTX.g:12847:3: ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) )
                    // InternalSCTX.g:12848:4: () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) )
                    {
                    // InternalSCTX.g:12848:4: ()
                    // InternalSCTX.g:12849:5: 
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getNegExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

<<<<<<< HEAD
                    // InternalSCTX.g:12960:4: ( (lv_operator_1_0= ruleSubOperator ) )
                    // InternalSCTX.g:12961:5: (lv_operator_1_0= ruleSubOperator )
                    {
                    // InternalSCTX.g:12961:5: (lv_operator_1_0= ruleSubOperator )
                    // InternalSCTX.g:12962:6: lv_operator_1_0= ruleSubOperator
=======
                    // InternalSCTX.g:12858:4: ( (lv_operator_1_0= ruleSubOperator ) )
                    // InternalSCTX.g:12859:5: (lv_operator_1_0= ruleSubOperator )
                    {
                    // InternalSCTX.g:12859:5: (lv_operator_1_0= ruleSubOperator )
                    // InternalSCTX.g:12860:6: lv_operator_1_0= ruleSubOperator
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNegExpressionAccess().getOperatorSubOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_94);
                    lv_operator_1_0=ruleSubOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNegExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.SubOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

<<<<<<< HEAD
                    // InternalSCTX.g:12979:4: ( (lv_subExpressions_2_0= ruleNegExpression ) )
                    // InternalSCTX.g:12980:5: (lv_subExpressions_2_0= ruleNegExpression )
                    {
                    // InternalSCTX.g:12980:5: (lv_subExpressions_2_0= ruleNegExpression )
                    // InternalSCTX.g:12981:6: lv_subExpressions_2_0= ruleNegExpression
=======
                    // InternalSCTX.g:12877:4: ( (lv_subExpressions_2_0= ruleNegExpression ) )
                    // InternalSCTX.g:12878:5: (lv_subExpressions_2_0= ruleNegExpression )
                    {
                    // InternalSCTX.g:12878:5: (lv_subExpressions_2_0= ruleNegExpression )
                    // InternalSCTX.g:12879:6: lv_subExpressions_2_0= ruleNegExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNegExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleNegExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNegExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.NegExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:13000:3: this_TernaryOperation_3= ruleTernaryOperation
=======
                    // InternalSCTX.g:12898:3: this_TernaryOperation_3= ruleTernaryOperation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNegExpressionAccess().getTernaryOperationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TernaryOperation_3=ruleTernaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TernaryOperation_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNegExpression"


    // $ANTLR start "entryRuleTernaryOperation"
<<<<<<< HEAD
    // InternalSCTX.g:13015:1: entryRuleTernaryOperation returns [EObject current=null] : iv_ruleTernaryOperation= ruleTernaryOperation EOF ;
=======
    // InternalSCTX.g:12913:1: entryRuleTernaryOperation returns [EObject current=null] : iv_ruleTernaryOperation= ruleTernaryOperation EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleTernaryOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTernaryOperation = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:13015:57: (iv_ruleTernaryOperation= ruleTernaryOperation EOF )
            // InternalSCTX.g:13016:2: iv_ruleTernaryOperation= ruleTernaryOperation EOF
=======
            // InternalSCTX.g:12913:57: (iv_ruleTernaryOperation= ruleTernaryOperation EOF )
            // InternalSCTX.g:12914:2: iv_ruleTernaryOperation= ruleTernaryOperation EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTernaryOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTernaryOperation=ruleTernaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTernaryOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTernaryOperation"


    // $ANTLR start "ruleTernaryOperation"
<<<<<<< HEAD
    // InternalSCTX.g:13022:1: ruleTernaryOperation returns [EObject current=null] : ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? ) | this_InitExpression_6= ruleInitExpression ) ;
=======
    // InternalSCTX.g:12920:1: ruleTernaryOperation returns [EObject current=null] : ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? ) | this_InitExpression_6= ruleInitExpression ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleTernaryOperation() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject lv_subExpressions_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        EObject this_InitExpression_6 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:13028:2: ( ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? ) | this_InitExpression_6= ruleInitExpression ) )
            // InternalSCTX.g:13029:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? ) | this_InitExpression_6= ruleInitExpression )
            {
            // InternalSCTX.g:13029:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? ) | this_InitExpression_6= ruleInitExpression )
            int alt398=2;
            alt398 = dfa398.predict(input);
            switch (alt398) {
                case 1 :
                    // InternalSCTX.g:13030:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? )
                    {
                    // InternalSCTX.g:13030:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? )
                    // InternalSCTX.g:13031:4: () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )?
                    {
                    // InternalSCTX.g:13031:4: ()
                    // InternalSCTX.g:13032:5: 
=======
            // InternalSCTX.g:12926:2: ( ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? ) | this_InitExpression_6= ruleInitExpression ) )
            // InternalSCTX.g:12927:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? ) | this_InitExpression_6= ruleInitExpression )
            {
            // InternalSCTX.g:12927:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? ) | this_InitExpression_6= ruleInitExpression )
            int alt396=2;
            alt396 = dfa396.predict(input);
            switch (alt396) {
                case 1 :
                    // InternalSCTX.g:12928:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? )
                    {
                    // InternalSCTX.g:12928:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? )
                    // InternalSCTX.g:12929:4: () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )?
                    {
                    // InternalSCTX.g:12929:4: ()
                    // InternalSCTX.g:12930:5: 
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTernaryOperationAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

<<<<<<< HEAD
                    // InternalSCTX.g:13041:4: ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) )
                    // InternalSCTX.g:13042:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
                    {
                    // InternalSCTX.g:13042:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
                    // InternalSCTX.g:13043:6: lv_subExpressions_1_0= ruleAtomicValuedExpression
=======
                    // InternalSCTX.g:12939:4: ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) )
                    // InternalSCTX.g:12940:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
                    {
                    // InternalSCTX.g:12940:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
                    // InternalSCTX.g:12941:6: lv_subExpressions_1_0= ruleAtomicValuedExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_189);
                    lv_subExpressions_1_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTernaryOperationRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

<<<<<<< HEAD
                    // InternalSCTX.g:13060:4: ( (lv_operator_2_0= ruleConditionalOperator ) )
                    // InternalSCTX.g:13061:5: (lv_operator_2_0= ruleConditionalOperator )
                    {
                    // InternalSCTX.g:13061:5: (lv_operator_2_0= ruleConditionalOperator )
                    // InternalSCTX.g:13062:6: lv_operator_2_0= ruleConditionalOperator
=======
                    // InternalSCTX.g:12958:4: ( (lv_operator_2_0= ruleConditionalOperator ) )
                    // InternalSCTX.g:12959:5: (lv_operator_2_0= ruleConditionalOperator )
                    {
                    // InternalSCTX.g:12959:5: (lv_operator_2_0= ruleConditionalOperator )
                    // InternalSCTX.g:12960:6: lv_operator_2_0= ruleConditionalOperator
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTernaryOperationAccess().getOperatorConditionalOperatorEnumRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_137);
                    lv_operator_2_0=ruleConditionalOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTernaryOperationRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ConditionalOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

<<<<<<< HEAD
                    // InternalSCTX.g:13079:4: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    // InternalSCTX.g:13080:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    {
                    // InternalSCTX.g:13080:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    // InternalSCTX.g:13081:6: lv_subExpressions_3_0= ruleAtomicValuedExpression
=======
                    // InternalSCTX.g:12977:4: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    // InternalSCTX.g:12978:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    {
                    // InternalSCTX.g:12978:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    // InternalSCTX.g:12979:6: lv_subExpressions_3_0= ruleAtomicValuedExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_157);
                    lv_subExpressions_3_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTernaryOperationRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

<<<<<<< HEAD
                    // InternalSCTX.g:13098:4: (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )?
                    int alt397=2;
                    alt397 = dfa397.predict(input);
                    switch (alt397) {
                        case 1 :
                            // InternalSCTX.g:13099:5: otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
=======
                    // InternalSCTX.g:12996:4: (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )?
                    int alt395=2;
                    alt395 = dfa395.predict(input);
                    switch (alt395) {
                        case 1 :
                            // InternalSCTX.g:12997:5: otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                            {
                            otherlv_4=(Token)match(input,48,FollowSets000.FOLLOW_137); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getTernaryOperationAccess().getColonKeyword_0_4_0());
                              				
                            }
<<<<<<< HEAD
                            // InternalSCTX.g:13103:5: ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
                            // InternalSCTX.g:13104:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                            {
                            // InternalSCTX.g:13104:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                            // InternalSCTX.g:13105:7: lv_subExpressions_5_0= ruleAtomicValuedExpression
=======
                            // InternalSCTX.g:13001:5: ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
                            // InternalSCTX.g:13002:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                            {
                            // InternalSCTX.g:13002:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                            // InternalSCTX.g:13003:7: lv_subExpressions_5_0= ruleAtomicValuedExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_4_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_subExpressions_5_0=ruleAtomicValuedExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getTernaryOperationRule());
                              							}
                              							add(
                              								current,
                              								"subExpressions",
                              								lv_subExpressions_5_0,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:13125:3: this_InitExpression_6= ruleInitExpression
=======
                    // InternalSCTX.g:13023:3: this_InitExpression_6= ruleInitExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTernaryOperationAccess().getInitExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_InitExpression_6=ruleInitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_InitExpression_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTernaryOperation"


    // $ANTLR start "entryRuleInitExpression"
    // InternalSCTX.g:13140:1: entryRuleInitExpression returns [EObject current=null] : iv_ruleInitExpression= ruleInitExpression EOF ;
    public final EObject entryRuleInitExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInitExpression = null;


        try {
            // InternalSCTX.g:13140:55: (iv_ruleInitExpression= ruleInitExpression EOF )
            // InternalSCTX.g:13141:2: iv_ruleInitExpression= ruleInitExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInitExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInitExpression=ruleInitExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInitExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInitExpression"


    // $ANTLR start "ruleInitExpression"
    // InternalSCTX.g:13147:1: ruleInitExpression returns [EObject current=null] : (this_FbyExpression_0= ruleFbyExpression ( () ( ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleFbyExpression ) ) ) (otherlv_4= '->' ( (lv_subExpressions_5_0= ruleFbyExpression ) ) )* )? ) ;
    public final EObject ruleInitExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_FbyExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:13153:2: ( (this_FbyExpression_0= ruleFbyExpression ( () ( ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleFbyExpression ) ) ) (otherlv_4= '->' ( (lv_subExpressions_5_0= ruleFbyExpression ) ) )* )? ) )
            // InternalSCTX.g:13154:2: (this_FbyExpression_0= ruleFbyExpression ( () ( ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleFbyExpression ) ) ) (otherlv_4= '->' ( (lv_subExpressions_5_0= ruleFbyExpression ) ) )* )? )
            {
            // InternalSCTX.g:13154:2: (this_FbyExpression_0= ruleFbyExpression ( () ( ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleFbyExpression ) ) ) (otherlv_4= '->' ( (lv_subExpressions_5_0= ruleFbyExpression ) ) )* )? )
            // InternalSCTX.g:13155:3: this_FbyExpression_0= ruleFbyExpression ( () ( ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleFbyExpression ) ) ) (otherlv_4= '->' ( (lv_subExpressions_5_0= ruleFbyExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getInitExpressionAccess().getFbyExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_190);
            this_FbyExpression_0=ruleFbyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FbyExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:13166:3: ( () ( ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleFbyExpression ) ) ) (otherlv_4= '->' ( (lv_subExpressions_5_0= ruleFbyExpression ) ) )* )?
            int alt400=2;
            int LA400_0 = input.LA(1);

            if ( (LA400_0==98) ) {
                alt400=1;
            }
            switch (alt400) {
                case 1 :
                    // InternalSCTX.g:13167:4: () ( ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleFbyExpression ) ) ) (otherlv_4= '->' ( (lv_subExpressions_5_0= ruleFbyExpression ) ) )*
                    {
                    // InternalSCTX.g:13167:4: ()
                    // InternalSCTX.g:13168:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getInitExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:13177:4: ( ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleFbyExpression ) ) )
                    // InternalSCTX.g:13178:5: ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleFbyExpression ) )
                    {
                    // InternalSCTX.g:13178:5: ( (lv_operator_2_0= ruleInitOperator ) )
                    // InternalSCTX.g:13179:6: (lv_operator_2_0= ruleInitOperator )
                    {
                    // InternalSCTX.g:13179:6: (lv_operator_2_0= ruleInitOperator )
                    // InternalSCTX.g:13180:7: lv_operator_2_0= ruleInitOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getInitExpressionAccess().getOperatorInitOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_96);
                    lv_operator_2_0=ruleInitOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getInitExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.InitOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:13197:5: ( (lv_subExpressions_3_0= ruleFbyExpression ) )
                    // InternalSCTX.g:13198:6: (lv_subExpressions_3_0= ruleFbyExpression )
                    {
                    // InternalSCTX.g:13198:6: (lv_subExpressions_3_0= ruleFbyExpression )
                    // InternalSCTX.g:13199:7: lv_subExpressions_3_0= ruleFbyExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getInitExpressionAccess().getSubExpressionsFbyExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_190);
                    lv_subExpressions_3_0=ruleFbyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getInitExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.FbyExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:13217:4: (otherlv_4= '->' ( (lv_subExpressions_5_0= ruleFbyExpression ) ) )*
                    loop399:
                    do {
                        int alt399=2;
                        int LA399_0 = input.LA(1);

                        if ( (LA399_0==98) ) {
                            alt399=1;
                        }


                        switch (alt399) {
                    	case 1 :
                    	    // InternalSCTX.g:13218:5: otherlv_4= '->' ( (lv_subExpressions_5_0= ruleFbyExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,98,FollowSets000.FOLLOW_96); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getInitExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:13222:5: ( (lv_subExpressions_5_0= ruleFbyExpression ) )
                    	    // InternalSCTX.g:13223:6: (lv_subExpressions_5_0= ruleFbyExpression )
                    	    {
                    	    // InternalSCTX.g:13223:6: (lv_subExpressions_5_0= ruleFbyExpression )
                    	    // InternalSCTX.g:13224:7: lv_subExpressions_5_0= ruleFbyExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getInitExpressionAccess().getSubExpressionsFbyExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_190);
                    	    lv_subExpressions_5_0=ruleFbyExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getInitExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.FbyExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop399;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInitExpression"


    // $ANTLR start "entryRuleFbyExpression"
    // InternalSCTX.g:13247:1: entryRuleFbyExpression returns [EObject current=null] : iv_ruleFbyExpression= ruleFbyExpression EOF ;
    public final EObject entryRuleFbyExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFbyExpression = null;


        try {
            // InternalSCTX.g:13247:54: (iv_ruleFbyExpression= ruleFbyExpression EOF )
            // InternalSCTX.g:13248:2: iv_ruleFbyExpression= ruleFbyExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFbyExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFbyExpression=ruleFbyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFbyExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFbyExpression"


    // $ANTLR start "ruleFbyExpression"
    // InternalSCTX.g:13254:1: ruleFbyExpression returns [EObject current=null] : (this_ImpliesExpression_0= ruleImpliesExpression ( () ( ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleImpliesExpression ) ) ) (otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleImpliesExpression ) ) )* )? ) ;
    public final EObject ruleFbyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_ImpliesExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:13260:2: ( (this_ImpliesExpression_0= ruleImpliesExpression ( () ( ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleImpliesExpression ) ) ) (otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleImpliesExpression ) ) )* )? ) )
            // InternalSCTX.g:13261:2: (this_ImpliesExpression_0= ruleImpliesExpression ( () ( ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleImpliesExpression ) ) ) (otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleImpliesExpression ) ) )* )? )
            {
            // InternalSCTX.g:13261:2: (this_ImpliesExpression_0= ruleImpliesExpression ( () ( ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleImpliesExpression ) ) ) (otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleImpliesExpression ) ) )* )? )
            // InternalSCTX.g:13262:3: this_ImpliesExpression_0= ruleImpliesExpression ( () ( ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleImpliesExpression ) ) ) (otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleImpliesExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getFbyExpressionAccess().getImpliesExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_191);
            this_ImpliesExpression_0=ruleImpliesExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ImpliesExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:13273:3: ( () ( ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleImpliesExpression ) ) ) (otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleImpliesExpression ) ) )* )?
            int alt402=2;
            int LA402_0 = input.LA(1);

            if ( (LA402_0==99) ) {
                alt402=1;
            }
            switch (alt402) {
                case 1 :
                    // InternalSCTX.g:13274:4: () ( ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleImpliesExpression ) ) ) (otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleImpliesExpression ) ) )*
                    {
                    // InternalSCTX.g:13274:4: ()
                    // InternalSCTX.g:13275:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getFbyExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:13284:4: ( ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleImpliesExpression ) ) )
                    // InternalSCTX.g:13285:5: ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleImpliesExpression ) )
                    {
                    // InternalSCTX.g:13285:5: ( (lv_operator_2_0= ruleFbyOperator ) )
                    // InternalSCTX.g:13286:6: (lv_operator_2_0= ruleFbyOperator )
                    {
                    // InternalSCTX.g:13286:6: (lv_operator_2_0= ruleFbyOperator )
                    // InternalSCTX.g:13287:7: lv_operator_2_0= ruleFbyOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFbyExpressionAccess().getOperatorFbyOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_96);
                    lv_operator_2_0=ruleFbyOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFbyExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.FbyOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:13304:5: ( (lv_subExpressions_3_0= ruleImpliesExpression ) )
                    // InternalSCTX.g:13305:6: (lv_subExpressions_3_0= ruleImpliesExpression )
                    {
                    // InternalSCTX.g:13305:6: (lv_subExpressions_3_0= ruleImpliesExpression )
                    // InternalSCTX.g:13306:7: lv_subExpressions_3_0= ruleImpliesExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFbyExpressionAccess().getSubExpressionsImpliesExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_191);
                    lv_subExpressions_3_0=ruleImpliesExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFbyExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ImpliesExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:13324:4: (otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleImpliesExpression ) ) )*
                    loop401:
                    do {
                        int alt401=2;
                        int LA401_0 = input.LA(1);

                        if ( (LA401_0==99) ) {
                            alt401=1;
                        }


                        switch (alt401) {
                    	case 1 :
                    	    // InternalSCTX.g:13325:5: otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleImpliesExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,99,FollowSets000.FOLLOW_96); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getFbyExpressionAccess().getFbyKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:13329:5: ( (lv_subExpressions_5_0= ruleImpliesExpression ) )
                    	    // InternalSCTX.g:13330:6: (lv_subExpressions_5_0= ruleImpliesExpression )
                    	    {
                    	    // InternalSCTX.g:13330:6: (lv_subExpressions_5_0= ruleImpliesExpression )
                    	    // InternalSCTX.g:13331:7: lv_subExpressions_5_0= ruleImpliesExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getFbyExpressionAccess().getSubExpressionsImpliesExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_191);
                    	    lv_subExpressions_5_0=ruleImpliesExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getFbyExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.ImpliesExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop401;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFbyExpression"


    // $ANTLR start "entryRuleImpliesExpression"
    // InternalSCTX.g:13354:1: entryRuleImpliesExpression returns [EObject current=null] : iv_ruleImpliesExpression= ruleImpliesExpression EOF ;
    public final EObject entryRuleImpliesExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImpliesExpression = null;


        try {
            // InternalSCTX.g:13354:58: (iv_ruleImpliesExpression= ruleImpliesExpression EOF )
            // InternalSCTX.g:13355:2: iv_ruleImpliesExpression= ruleImpliesExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImpliesExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleImpliesExpression=ruleImpliesExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImpliesExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImpliesExpression"


    // $ANTLR start "ruleImpliesExpression"
    // InternalSCTX.g:13361:1: ruleImpliesExpression returns [EObject current=null] : (this_AtMostOneOfExpression_0= ruleAtMostOneOfExpression ( () ( ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_subExpressions_3_0= ruleAtMostOneOfExpression ) ) ) (otherlv_4= 'implies' ( (lv_subExpressions_5_0= ruleAtMostOneOfExpression ) ) )* )? ) ;
    public final EObject ruleImpliesExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_AtMostOneOfExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:13367:2: ( (this_AtMostOneOfExpression_0= ruleAtMostOneOfExpression ( () ( ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_subExpressions_3_0= ruleAtMostOneOfExpression ) ) ) (otherlv_4= 'implies' ( (lv_subExpressions_5_0= ruleAtMostOneOfExpression ) ) )* )? ) )
            // InternalSCTX.g:13368:2: (this_AtMostOneOfExpression_0= ruleAtMostOneOfExpression ( () ( ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_subExpressions_3_0= ruleAtMostOneOfExpression ) ) ) (otherlv_4= 'implies' ( (lv_subExpressions_5_0= ruleAtMostOneOfExpression ) ) )* )? )
            {
            // InternalSCTX.g:13368:2: (this_AtMostOneOfExpression_0= ruleAtMostOneOfExpression ( () ( ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_subExpressions_3_0= ruleAtMostOneOfExpression ) ) ) (otherlv_4= 'implies' ( (lv_subExpressions_5_0= ruleAtMostOneOfExpression ) ) )* )? )
            // InternalSCTX.g:13369:3: this_AtMostOneOfExpression_0= ruleAtMostOneOfExpression ( () ( ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_subExpressions_3_0= ruleAtMostOneOfExpression ) ) ) (otherlv_4= 'implies' ( (lv_subExpressions_5_0= ruleAtMostOneOfExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getImpliesExpressionAccess().getAtMostOneOfExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_192);
            this_AtMostOneOfExpression_0=ruleAtMostOneOfExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AtMostOneOfExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:13380:3: ( () ( ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_subExpressions_3_0= ruleAtMostOneOfExpression ) ) ) (otherlv_4= 'implies' ( (lv_subExpressions_5_0= ruleAtMostOneOfExpression ) ) )* )?
            int alt404=2;
            int LA404_0 = input.LA(1);

            if ( (LA404_0==100) ) {
                alt404=1;
            }
            switch (alt404) {
                case 1 :
                    // InternalSCTX.g:13381:4: () ( ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_subExpressions_3_0= ruleAtMostOneOfExpression ) ) ) (otherlv_4= 'implies' ( (lv_subExpressions_5_0= ruleAtMostOneOfExpression ) ) )*
                    {
                    // InternalSCTX.g:13381:4: ()
                    // InternalSCTX.g:13382:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getImpliesExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:13391:4: ( ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_subExpressions_3_0= ruleAtMostOneOfExpression ) ) )
                    // InternalSCTX.g:13392:5: ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_subExpressions_3_0= ruleAtMostOneOfExpression ) )
                    {
                    // InternalSCTX.g:13392:5: ( (lv_operator_2_0= ruleImpliesOperator ) )
                    // InternalSCTX.g:13393:6: (lv_operator_2_0= ruleImpliesOperator )
                    {
                    // InternalSCTX.g:13393:6: (lv_operator_2_0= ruleImpliesOperator )
                    // InternalSCTX.g:13394:7: lv_operator_2_0= ruleImpliesOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getImpliesExpressionAccess().getOperatorImpliesOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_96);
                    lv_operator_2_0=ruleImpliesOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getImpliesExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ImpliesOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:13411:5: ( (lv_subExpressions_3_0= ruleAtMostOneOfExpression ) )
                    // InternalSCTX.g:13412:6: (lv_subExpressions_3_0= ruleAtMostOneOfExpression )
                    {
                    // InternalSCTX.g:13412:6: (lv_subExpressions_3_0= ruleAtMostOneOfExpression )
                    // InternalSCTX.g:13413:7: lv_subExpressions_3_0= ruleAtMostOneOfExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getImpliesExpressionAccess().getSubExpressionsAtMostOneOfExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_192);
                    lv_subExpressions_3_0=ruleAtMostOneOfExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getImpliesExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.AtMostOneOfExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:13431:4: (otherlv_4= 'implies' ( (lv_subExpressions_5_0= ruleAtMostOneOfExpression ) ) )*
                    loop403:
                    do {
                        int alt403=2;
                        int LA403_0 = input.LA(1);

                        if ( (LA403_0==100) ) {
                            alt403=1;
                        }


                        switch (alt403) {
                    	case 1 :
                    	    // InternalSCTX.g:13432:5: otherlv_4= 'implies' ( (lv_subExpressions_5_0= ruleAtMostOneOfExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,100,FollowSets000.FOLLOW_96); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getImpliesExpressionAccess().getImpliesKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:13436:5: ( (lv_subExpressions_5_0= ruleAtMostOneOfExpression ) )
                    	    // InternalSCTX.g:13437:6: (lv_subExpressions_5_0= ruleAtMostOneOfExpression )
                    	    {
                    	    // InternalSCTX.g:13437:6: (lv_subExpressions_5_0= ruleAtMostOneOfExpression )
                    	    // InternalSCTX.g:13438:7: lv_subExpressions_5_0= ruleAtMostOneOfExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getImpliesExpressionAccess().getSubExpressionsAtMostOneOfExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_192);
                    	    lv_subExpressions_5_0=ruleAtMostOneOfExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getImpliesExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.AtMostOneOfExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop403;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImpliesExpression"


    // $ANTLR start "entryRuleAtMostOneOfExpression"
    // InternalSCTX.g:13461:1: entryRuleAtMostOneOfExpression returns [EObject current=null] : iv_ruleAtMostOneOfExpression= ruleAtMostOneOfExpression EOF ;
    public final EObject entryRuleAtMostOneOfExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAtMostOneOfExpression = null;


        try {
            // InternalSCTX.g:13461:62: (iv_ruleAtMostOneOfExpression= ruleAtMostOneOfExpression EOF )
            // InternalSCTX.g:13462:2: iv_ruleAtMostOneOfExpression= ruleAtMostOneOfExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAtMostOneOfExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAtMostOneOfExpression=ruleAtMostOneOfExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAtMostOneOfExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAtMostOneOfExpression"


    // $ANTLR start "ruleAtMostOneOfExpression"
    // InternalSCTX.g:13468:1: ruleAtMostOneOfExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleAtMostOneOfOperator ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleNoneOfExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleNoneOfExpression ) ) )* otherlv_6= ')' ) | this_NoneOfExpression_7= ruleNoneOfExpression ) ;
    public final EObject ruleAtMostOneOfExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        EObject this_NoneOfExpression_7 = null;



        	enterRule();

        try {
            // InternalSCTX.g:13474:2: ( ( ( () ( (lv_operator_1_0= ruleAtMostOneOfOperator ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleNoneOfExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleNoneOfExpression ) ) )* otherlv_6= ')' ) | this_NoneOfExpression_7= ruleNoneOfExpression ) )
            // InternalSCTX.g:13475:2: ( ( () ( (lv_operator_1_0= ruleAtMostOneOfOperator ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleNoneOfExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleNoneOfExpression ) ) )* otherlv_6= ')' ) | this_NoneOfExpression_7= ruleNoneOfExpression )
            {
            // InternalSCTX.g:13475:2: ( ( () ( (lv_operator_1_0= ruleAtMostOneOfOperator ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleNoneOfExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleNoneOfExpression ) ) )* otherlv_6= ')' ) | this_NoneOfExpression_7= ruleNoneOfExpression )
            int alt406=2;
            int LA406_0 = input.LA(1);

            if ( (LA406_0==105) ) {
                alt406=1;
            }
            else if ( ((LA406_0>=RULE_STRING && LA406_0<=RULE_COMMENT_ANNOTATION)||LA406_0==21||LA406_0==31||LA406_0==80||LA406_0==85||LA406_0==102||LA406_0==106||LA406_0==145||LA406_0==147||LA406_0==149) ) {
                alt406=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 406, 0, input);

                throw nvae;
            }
            switch (alt406) {
                case 1 :
                    // InternalSCTX.g:13476:3: ( () ( (lv_operator_1_0= ruleAtMostOneOfOperator ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleNoneOfExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleNoneOfExpression ) ) )* otherlv_6= ')' )
                    {
                    // InternalSCTX.g:13476:3: ( () ( (lv_operator_1_0= ruleAtMostOneOfOperator ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleNoneOfExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleNoneOfExpression ) ) )* otherlv_6= ')' )
                    // InternalSCTX.g:13477:4: () ( (lv_operator_1_0= ruleAtMostOneOfOperator ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleNoneOfExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleNoneOfExpression ) ) )* otherlv_6= ')'
                    {
                    // InternalSCTX.g:13477:4: ()
                    // InternalSCTX.g:13478:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getAtMostOneOfExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:13487:4: ( (lv_operator_1_0= ruleAtMostOneOfOperator ) )
                    // InternalSCTX.g:13488:5: (lv_operator_1_0= ruleAtMostOneOfOperator )
                    {
                    // InternalSCTX.g:13488:5: (lv_operator_1_0= ruleAtMostOneOfOperator )
                    // InternalSCTX.g:13489:6: lv_operator_1_0= ruleAtMostOneOfOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAtMostOneOfExpressionAccess().getOperatorAtMostOneOfOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_140);
                    lv_operator_1_0=ruleAtMostOneOfOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAtMostOneOfExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.AtMostOneOfOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,31,FollowSets000.FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getAtMostOneOfExpressionAccess().getLeftParenthesisKeyword_0_2());
                      			
                    }
                    // InternalSCTX.g:13510:4: ( (lv_subExpressions_3_0= ruleNoneOfExpression ) )
                    // InternalSCTX.g:13511:5: (lv_subExpressions_3_0= ruleNoneOfExpression )
                    {
                    // InternalSCTX.g:13511:5: (lv_subExpressions_3_0= ruleNoneOfExpression )
                    // InternalSCTX.g:13512:6: lv_subExpressions_3_0= ruleNoneOfExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAtMostOneOfExpressionAccess().getSubExpressionsNoneOfExpressionParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_subExpressions_3_0=ruleNoneOfExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAtMostOneOfExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.NoneOfExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:13529:4: (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleNoneOfExpression ) ) )*
                    loop405:
                    do {
                        int alt405=2;
                        int LA405_0 = input.LA(1);

                        if ( (LA405_0==20) ) {
                            alt405=1;
                        }


                        switch (alt405) {
                    	case 1 :
                    	    // InternalSCTX.g:13530:5: otherlv_4= ',' ( (lv_subExpressions_5_0= ruleNoneOfExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,20,FollowSets000.FOLLOW_96); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getAtMostOneOfExpressionAccess().getCommaKeyword_0_4_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:13534:5: ( (lv_subExpressions_5_0= ruleNoneOfExpression ) )
                    	    // InternalSCTX.g:13535:6: (lv_subExpressions_5_0= ruleNoneOfExpression )
                    	    {
                    	    // InternalSCTX.g:13535:6: (lv_subExpressions_5_0= ruleNoneOfExpression )
                    	    // InternalSCTX.g:13536:7: lv_subExpressions_5_0= ruleNoneOfExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAtMostOneOfExpressionAccess().getSubExpressionsNoneOfExpressionParserRuleCall_0_4_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_31);
                    	    lv_subExpressions_5_0=ruleNoneOfExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAtMostOneOfExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.NoneOfExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop405;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getAtMostOneOfExpressionAccess().getRightParenthesisKeyword_0_5());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:13560:3: this_NoneOfExpression_7= ruleNoneOfExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtMostOneOfExpressionAccess().getNoneOfExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NoneOfExpression_7=ruleNoneOfExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NoneOfExpression_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAtMostOneOfExpression"


<<<<<<< HEAD
    // $ANTLR start "entryRuleNoneOfExpression"
    // InternalSCTX.g:13575:1: entryRuleNoneOfExpression returns [EObject current=null] : iv_ruleNoneOfExpression= ruleNoneOfExpression EOF ;
    public final EObject entryRuleNoneOfExpression() throws RecognitionException {
=======
    // $ANTLR start "entryRuleInitExpression"
    // InternalSCTX.g:13038:1: entryRuleInitExpression returns [EObject current=null] : iv_ruleInitExpression= ruleInitExpression EOF ;
    public final EObject entryRuleInitExpression() throws RecognitionException {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        EObject current = null;

        EObject iv_ruleNoneOfExpression = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:13575:57: (iv_ruleNoneOfExpression= ruleNoneOfExpression EOF )
            // InternalSCTX.g:13576:2: iv_ruleNoneOfExpression= ruleNoneOfExpression EOF
=======
            // InternalSCTX.g:13038:55: (iv_ruleInitExpression= ruleInitExpression EOF )
            // InternalSCTX.g:13039:2: iv_ruleInitExpression= ruleInitExpression EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNoneOfExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNoneOfExpression=ruleNoneOfExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNoneOfExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNoneOfExpression"


<<<<<<< HEAD
    // $ANTLR start "ruleNoneOfExpression"
    // InternalSCTX.g:13582:1: ruleNoneOfExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleNoneOfOperator ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* otherlv_6= ')' ) | this_AtomicValuedExpression_7= ruleAtomicValuedExpression ) ;
    public final EObject ruleNoneOfExpression() throws RecognitionException {
=======
    // $ANTLR start "ruleInitExpression"
    // InternalSCTX.g:13045:1: ruleInitExpression returns [EObject current=null] : ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_4= ruleAtomicValuedExpression ) ;
    public final EObject ruleInitExpression() throws RecognitionException {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        EObject this_AtomicValuedExpression_7 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:13588:2: ( ( ( () ( (lv_operator_1_0= ruleNoneOfOperator ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* otherlv_6= ')' ) | this_AtomicValuedExpression_7= ruleAtomicValuedExpression ) )
            // InternalSCTX.g:13589:2: ( ( () ( (lv_operator_1_0= ruleNoneOfOperator ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* otherlv_6= ')' ) | this_AtomicValuedExpression_7= ruleAtomicValuedExpression )
            {
            // InternalSCTX.g:13589:2: ( ( () ( (lv_operator_1_0= ruleNoneOfOperator ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* otherlv_6= ')' ) | this_AtomicValuedExpression_7= ruleAtomicValuedExpression )
            int alt408=2;
            int LA408_0 = input.LA(1);

            if ( (LA408_0==149) ) {
                alt408=1;
            }
            else if ( ((LA408_0>=RULE_STRING && LA408_0<=RULE_COMMENT_ANNOTATION)||LA408_0==21||LA408_0==31||LA408_0==80||LA408_0==85||LA408_0==102||LA408_0==106||LA408_0==145||LA408_0==147) ) {
                alt408=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 408, 0, input);

                throw nvae;
            }
            switch (alt408) {
                case 1 :
                    // InternalSCTX.g:13590:3: ( () ( (lv_operator_1_0= ruleNoneOfOperator ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* otherlv_6= ')' )
                    {
                    // InternalSCTX.g:13590:3: ( () ( (lv_operator_1_0= ruleNoneOfOperator ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* otherlv_6= ')' )
                    // InternalSCTX.g:13591:4: () ( (lv_operator_1_0= ruleNoneOfOperator ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* otherlv_6= ')'
                    {
                    // InternalSCTX.g:13591:4: ()
                    // InternalSCTX.g:13592:5: 
=======
            // InternalSCTX.g:13051:2: ( ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_4= ruleAtomicValuedExpression ) )
            // InternalSCTX.g:13052:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_4= ruleAtomicValuedExpression )
            {
            // InternalSCTX.g:13052:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_4= ruleAtomicValuedExpression )
            int alt397=2;
            alt397 = dfa397.predict(input);
            switch (alt397) {
                case 1 :
                    // InternalSCTX.g:13053:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
                    {
                    // InternalSCTX.g:13053:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
                    // InternalSCTX.g:13054:4: () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    {
                    // InternalSCTX.g:13054:4: ()
                    // InternalSCTX.g:13055:5: 
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getNoneOfExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

<<<<<<< HEAD
                    // InternalSCTX.g:13601:4: ( (lv_operator_1_0= ruleNoneOfOperator ) )
                    // InternalSCTX.g:13602:5: (lv_operator_1_0= ruleNoneOfOperator )
                    {
                    // InternalSCTX.g:13602:5: (lv_operator_1_0= ruleNoneOfOperator )
                    // InternalSCTX.g:13603:6: lv_operator_1_0= ruleNoneOfOperator
=======
                    // InternalSCTX.g:13064:4: ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) )
                    // InternalSCTX.g:13065:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
                    {
                    // InternalSCTX.g:13065:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
                    // InternalSCTX.g:13066:6: lv_subExpressions_1_0= ruleAtomicValuedExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNoneOfExpressionAccess().getOperatorNoneOfOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_140);
                    lv_operator_1_0=ruleNoneOfOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNoneOfExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.NoneOfOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

<<<<<<< HEAD
                    otherlv_2=(Token)match(input,31,FollowSets000.FOLLOW_137); if (state.failed) return current;
=======
                    // InternalSCTX.g:13083:4: ( (lv_operator_2_0= ruleInitOperator ) )
                    // InternalSCTX.g:13084:5: (lv_operator_2_0= ruleInitOperator )
                    {
                    // InternalSCTX.g:13084:5: (lv_operator_2_0= ruleInitOperator )
                    // InternalSCTX.g:13085:6: lv_operator_2_0= ruleInitOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInitExpressionAccess().getOperatorInitOperatorEnumRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_137);
                    lv_operator_2_0=ruleInitOperator();

                    state._fsp--;
                    if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getNoneOfExpressionAccess().getLeftParenthesisKeyword_0_2());
                      			
                    }
<<<<<<< HEAD
                    // InternalSCTX.g:13624:4: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    // InternalSCTX.g:13625:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    {
                    // InternalSCTX.g:13625:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    // InternalSCTX.g:13626:6: lv_subExpressions_3_0= ruleAtomicValuedExpression
=======

                    // InternalSCTX.g:13102:4: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    // InternalSCTX.g:13103:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    {
                    // InternalSCTX.g:13103:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    // InternalSCTX.g:13104:6: lv_subExpressions_3_0= ruleAtomicValuedExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNoneOfExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_subExpressions_3_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNoneOfExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:13643:4: (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )*
                    loop407:
                    do {
                        int alt407=2;
                        int LA407_0 = input.LA(1);

                        if ( (LA407_0==20) ) {
                            alt407=1;
                        }


                        switch (alt407) {
                    	case 1 :
                    	    // InternalSCTX.g:13644:5: otherlv_4= ',' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,20,FollowSets000.FOLLOW_137); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getNoneOfExpressionAccess().getCommaKeyword_0_4_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:13648:5: ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
                    	    // InternalSCTX.g:13649:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                    	    {
                    	    // InternalSCTX.g:13649:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                    	    // InternalSCTX.g:13650:7: lv_subExpressions_5_0= ruleAtomicValuedExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getNoneOfExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_4_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_31);
                    	    lv_subExpressions_5_0=ruleAtomicValuedExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getNoneOfExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop407;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getNoneOfExpressionAccess().getRightParenthesisKeyword_0_5());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:13674:3: this_AtomicValuedExpression_7= ruleAtomicValuedExpression
=======
                    // InternalSCTX.g:13123:3: this_AtomicValuedExpression_4= ruleAtomicValuedExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNoneOfExpressionAccess().getAtomicValuedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicValuedExpression_7=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AtomicValuedExpression_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNoneOfExpression"


    // $ANTLR start "entryRuleAtomicExpression"
<<<<<<< HEAD
    // InternalSCTX.g:13689:1: entryRuleAtomicExpression returns [EObject current=null] : iv_ruleAtomicExpression= ruleAtomicExpression EOF ;
=======
    // InternalSCTX.g:13138:1: entryRuleAtomicExpression returns [EObject current=null] : iv_ruleAtomicExpression= ruleAtomicExpression EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleAtomicExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAtomicExpression = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:13689:57: (iv_ruleAtomicExpression= ruleAtomicExpression EOF )
            // InternalSCTX.g:13690:2: iv_ruleAtomicExpression= ruleAtomicExpression EOF
=======
            // InternalSCTX.g:13138:57: (iv_ruleAtomicExpression= ruleAtomicExpression EOF )
            // InternalSCTX.g:13139:2: iv_ruleAtomicExpression= ruleAtomicExpression EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAtomicExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAtomicExpression=ruleAtomicExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAtomicExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAtomicExpression"


    // $ANTLR start "ruleAtomicExpression"
<<<<<<< HEAD
    // InternalSCTX.g:13696:1: ruleAtomicExpression returns [EObject current=null] : (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_FunctionCall_5= ruleFunctionCall | this_RandomCall_6= ruleRandomCall | this_RandomizeCall_7= ruleRandomizeCall | this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression | this_TextExpression_9= ruleTextExpression ) ;
=======
    // InternalSCTX.g:13145:1: ruleAtomicExpression returns [EObject current=null] : (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_FunctionCall_5= ruleFunctionCall | this_RandomCall_6= ruleRandomCall | this_RandomizeCall_7= ruleRandomizeCall | this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression | this_TextExpression_9= ruleTextExpression ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleAtomicExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_BoolValue_0 = null;

        EObject this_BoolExpression_2 = null;

        EObject this_ReferenceCall_4 = null;

        EObject this_FunctionCall_5 = null;

        EObject this_RandomCall_6 = null;

        EObject this_RandomizeCall_7 = null;

        EObject this_ValuedObjectTestExpression_8 = null;

        EObject this_TextExpression_9 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:13702:2: ( (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_FunctionCall_5= ruleFunctionCall | this_RandomCall_6= ruleRandomCall | this_RandomizeCall_7= ruleRandomizeCall | this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression | this_TextExpression_9= ruleTextExpression ) )
            // InternalSCTX.g:13703:2: (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_FunctionCall_5= ruleFunctionCall | this_RandomCall_6= ruleRandomCall | this_RandomizeCall_7= ruleRandomizeCall | this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression | this_TextExpression_9= ruleTextExpression )
            {
            // InternalSCTX.g:13703:2: (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_FunctionCall_5= ruleFunctionCall | this_RandomCall_6= ruleRandomCall | this_RandomizeCall_7= ruleRandomizeCall | this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression | this_TextExpression_9= ruleTextExpression )
            int alt409=8;
            alt409 = dfa409.predict(input);
            switch (alt409) {
                case 1 :
                    // InternalSCTX.g:13704:3: this_BoolValue_0= ruleBoolValue
=======
            // InternalSCTX.g:13151:2: ( (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_FunctionCall_5= ruleFunctionCall | this_RandomCall_6= ruleRandomCall | this_RandomizeCall_7= ruleRandomizeCall | this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression | this_TextExpression_9= ruleTextExpression ) )
            // InternalSCTX.g:13152:2: (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_FunctionCall_5= ruleFunctionCall | this_RandomCall_6= ruleRandomCall | this_RandomizeCall_7= ruleRandomizeCall | this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression | this_TextExpression_9= ruleTextExpression )
            {
            // InternalSCTX.g:13152:2: (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_FunctionCall_5= ruleFunctionCall | this_RandomCall_6= ruleRandomCall | this_RandomizeCall_7= ruleRandomizeCall | this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression | this_TextExpression_9= ruleTextExpression )
            int alt398=8;
            alt398 = dfa398.predict(input);
            switch (alt398) {
                case 1 :
                    // InternalSCTX.g:13153:3: this_BoolValue_0= ruleBoolValue
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getBoolValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolValue_0=ruleBoolValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoolValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:13716:3: (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' )
                    {
                    // InternalSCTX.g:13716:3: (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' )
                    // InternalSCTX.g:13717:4: otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')'
=======
                    // InternalSCTX.g:13165:3: (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' )
                    {
                    // InternalSCTX.g:13165:3: (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' )
                    // InternalSCTX.g:13166:4: otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    otherlv_1=(Token)match(input,31,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAtomicExpressionAccess().getBoolExpressionParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_32);
                    this_BoolExpression_2=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_BoolExpression_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_3=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getAtomicExpressionAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
<<<<<<< HEAD
                    // InternalSCTX.g:13738:3: this_ReferenceCall_4= ruleReferenceCall
=======
                    // InternalSCTX.g:13187:3: this_ReferenceCall_4= ruleReferenceCall
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getReferenceCallParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceCall_4=ruleReferenceCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReferenceCall_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
<<<<<<< HEAD
                    // InternalSCTX.g:13750:3: this_FunctionCall_5= ruleFunctionCall
=======
                    // InternalSCTX.g:13199:3: this_FunctionCall_5= ruleFunctionCall
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getFunctionCallParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FunctionCall_5=ruleFunctionCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionCall_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
<<<<<<< HEAD
                    // InternalSCTX.g:13762:3: this_RandomCall_6= ruleRandomCall
=======
                    // InternalSCTX.g:13211:3: this_RandomCall_6= ruleRandomCall
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getRandomCallParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RandomCall_6=ruleRandomCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RandomCall_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
<<<<<<< HEAD
                    // InternalSCTX.g:13774:3: this_RandomizeCall_7= ruleRandomizeCall
=======
                    // InternalSCTX.g:13223:3: this_RandomizeCall_7= ruleRandomizeCall
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getRandomizeCallParserRuleCall_5());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RandomizeCall_7=ruleRandomizeCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RandomizeCall_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
<<<<<<< HEAD
                    // InternalSCTX.g:13786:3: this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression
=======
                    // InternalSCTX.g:13235:3: this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getValuedObjectTestExpressionParserRuleCall_6());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedObjectTestExpression_8=ruleValuedObjectTestExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedObjectTestExpression_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
<<<<<<< HEAD
                    // InternalSCTX.g:13798:3: this_TextExpression_9= ruleTextExpression
=======
                    // InternalSCTX.g:13247:3: this_TextExpression_9= ruleTextExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getTextExpressionParserRuleCall_7());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TextExpression_9=ruleTextExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TextExpression_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAtomicExpression"


    // $ANTLR start "entryRuleAtomicValuedExpression"
<<<<<<< HEAD
    // InternalSCTX.g:13813:1: entryRuleAtomicValuedExpression returns [EObject current=null] : iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF ;
=======
    // InternalSCTX.g:13262:1: entryRuleAtomicValuedExpression returns [EObject current=null] : iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleAtomicValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAtomicValuedExpression = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:13813:63: (iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF )
            // InternalSCTX.g:13814:2: iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF
=======
            // InternalSCTX.g:13262:63: (iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF )
            // InternalSCTX.g:13263:2: iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAtomicValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAtomicValuedExpression=ruleAtomicValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAtomicValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAtomicValuedExpression"


    // $ANTLR start "ruleAtomicValuedExpression"
<<<<<<< HEAD
    // InternalSCTX.g:13820:1: ruleAtomicValuedExpression returns [EObject current=null] : (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression ) ;
=======
    // InternalSCTX.g:13269:1: ruleAtomicValuedExpression returns [EObject current=null] : (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleAtomicValuedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject this_IntValue_0 = null;

        EObject this_FloatValue_1 = null;

        EObject this_StringValue_2 = null;

        EObject this_VectorValue_3 = null;

        EObject this_ValuedExpression_5 = null;

        EObject this_AtomicExpression_7 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:13826:2: ( (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression ) )
            // InternalSCTX.g:13827:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression )
            {
            // InternalSCTX.g:13827:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression )
            int alt410=6;
            alt410 = dfa410.predict(input);
            switch (alt410) {
                case 1 :
                    // InternalSCTX.g:13828:3: this_IntValue_0= ruleIntValue
=======
            // InternalSCTX.g:13275:2: ( (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression ) )
            // InternalSCTX.g:13276:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression )
            {
            // InternalSCTX.g:13276:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression )
            int alt399=6;
            alt399 = dfa399.predict(input);
            switch (alt399) {
                case 1 :
                    // InternalSCTX.g:13277:3: this_IntValue_0= ruleIntValue
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getIntValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IntValue_0=ruleIntValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IntValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:13840:3: this_FloatValue_1= ruleFloatValue
=======
                    // InternalSCTX.g:13289:3: this_FloatValue_1= ruleFloatValue
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getFloatValueParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FloatValue_1=ruleFloatValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FloatValue_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
<<<<<<< HEAD
                    // InternalSCTX.g:13852:3: this_StringValue_2= ruleStringValue
=======
                    // InternalSCTX.g:13301:3: this_StringValue_2= ruleStringValue
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getStringValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringValue_2=ruleStringValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
<<<<<<< HEAD
                    // InternalSCTX.g:13864:3: this_VectorValue_3= ruleVectorValue
=======
                    // InternalSCTX.g:13313:3: this_VectorValue_3= ruleVectorValue
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getVectorValueParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_VectorValue_3=ruleVectorValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VectorValue_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
<<<<<<< HEAD
                    // InternalSCTX.g:13876:3: (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' )
                    {
                    // InternalSCTX.g:13876:3: (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' )
                    // InternalSCTX.g:13877:4: otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')'
=======
                    // InternalSCTX.g:13325:3: (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' )
                    {
                    // InternalSCTX.g:13325:3: (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' )
                    // InternalSCTX.g:13326:4: otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    otherlv_4=(Token)match(input,31,FollowSets000.FOLLOW_94); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getAtomicValuedExpressionAccess().getLeftParenthesisKeyword_4_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getValuedExpressionParserRuleCall_4_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_32);
                    this_ValuedExpression_5=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ValuedExpression_5;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_6=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getAtomicValuedExpressionAccess().getRightParenthesisKeyword_4_2());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
<<<<<<< HEAD
                    // InternalSCTX.g:13898:3: this_AtomicExpression_7= ruleAtomicExpression
=======
                    // InternalSCTX.g:13347:3: this_AtomicExpression_7= ruleAtomicExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getAtomicExpressionParserRuleCall_5());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicExpression_7=ruleAtomicExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AtomicExpression_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAtomicValuedExpression"


    // $ANTLR start "entryRuleValuedObjectTestExpression"
<<<<<<< HEAD
    // InternalSCTX.g:13913:1: entryRuleValuedObjectTestExpression returns [EObject current=null] : iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF ;
=======
    // InternalSCTX.g:13362:1: entryRuleValuedObjectTestExpression returns [EObject current=null] : iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleValuedObjectTestExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObjectTestExpression = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:13913:67: (iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF )
            // InternalSCTX.g:13914:2: iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF
=======
            // InternalSCTX.g:13362:67: (iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF )
            // InternalSCTX.g:13363:2: iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectTestExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObjectTestExpression=ruleValuedObjectTestExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObjectTestExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObjectTestExpression"


    // $ANTLR start "ruleValuedObjectTestExpression"
<<<<<<< HEAD
    // InternalSCTX.g:13920:1: ruleValuedObjectTestExpression returns [EObject current=null] : ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' ) | this_ValuedObjectReference_7= ruleValuedObjectReference ) ;
=======
    // InternalSCTX.g:13369:1: ruleValuedObjectTestExpression returns [EObject current=null] : ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' ) | this_ValuedObjectReference_7= ruleValuedObjectReference ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleValuedObjectTestExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Enumerator lv_operator_1_1 = null;

        Enumerator lv_operator_1_2 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        EObject this_ValuedObjectReference_7 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:13926:2: ( ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' ) | this_ValuedObjectReference_7= ruleValuedObjectReference ) )
            // InternalSCTX.g:13927:2: ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' ) | this_ValuedObjectReference_7= ruleValuedObjectReference )
            {
            // InternalSCTX.g:13927:2: ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' ) | this_ValuedObjectReference_7= ruleValuedObjectReference )
            int alt413=2;
            int LA413_0 = input.LA(1);

            if ( (LA413_0==145||LA413_0==147) ) {
                alt413=1;
            }
            else if ( (LA413_0==RULE_ID) ) {
                alt413=2;
=======
            // InternalSCTX.g:13375:2: ( ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' ) | this_ValuedObjectReference_7= ruleValuedObjectReference ) )
            // InternalSCTX.g:13376:2: ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' ) | this_ValuedObjectReference_7= ruleValuedObjectReference )
            {
            // InternalSCTX.g:13376:2: ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' ) | this_ValuedObjectReference_7= ruleValuedObjectReference )
            int alt402=2;
            int LA402_0 = input.LA(1);

            if ( (LA402_0==141||LA402_0==143) ) {
                alt402=1;
            }
            else if ( (LA402_0==RULE_ID) ) {
                alt402=2;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
<<<<<<< HEAD
                    new NoViableAltException("", 413, 0, input);

                throw nvae;
            }
            switch (alt413) {
                case 1 :
                    // InternalSCTX.g:13928:3: ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' )
                    {
                    // InternalSCTX.g:13928:3: ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' )
                    // InternalSCTX.g:13929:4: () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')'
                    {
                    // InternalSCTX.g:13929:4: ()
                    // InternalSCTX.g:13930:5: 
=======
                    new NoViableAltException("", 402, 0, input);

                throw nvae;
            }
            switch (alt402) {
                case 1 :
                    // InternalSCTX.g:13377:3: ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' )
                    {
                    // InternalSCTX.g:13377:3: ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' )
                    // InternalSCTX.g:13378:4: () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')'
                    {
                    // InternalSCTX.g:13378:4: ()
                    // InternalSCTX.g:13379:5: 
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getValuedObjectTestExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

<<<<<<< HEAD
                    // InternalSCTX.g:13939:4: ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) )
                    // InternalSCTX.g:13940:5: ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) )
                    {
                    // InternalSCTX.g:13940:5: ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) )
                    // InternalSCTX.g:13941:6: (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator )
                    {
                    // InternalSCTX.g:13941:6: (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator )
                    int alt411=2;
                    int LA411_0 = input.LA(1);

                    if ( (LA411_0==145) ) {
                        alt411=1;
                    }
                    else if ( (LA411_0==147) ) {
                        alt411=2;
=======
                    // InternalSCTX.g:13388:4: ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) )
                    // InternalSCTX.g:13389:5: ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) )
                    {
                    // InternalSCTX.g:13389:5: ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) )
                    // InternalSCTX.g:13390:6: (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator )
                    {
                    // InternalSCTX.g:13390:6: (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator )
                    int alt400=2;
                    int LA400_0 = input.LA(1);

                    if ( (LA400_0==141) ) {
                        alt400=1;
                    }
                    else if ( (LA400_0==143) ) {
                        alt400=2;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
<<<<<<< HEAD
                            new NoViableAltException("", 411, 0, input);

                        throw nvae;
                    }
                    switch (alt411) {
                        case 1 :
                            // InternalSCTX.g:13942:7: lv_operator_1_1= rulePreOperator
=======
                            new NoViableAltException("", 400, 0, input);

                        throw nvae;
                    }
                    switch (alt400) {
                        case 1 :
                            // InternalSCTX.g:13391:7: lv_operator_1_1= rulePreOperator
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorPreOperatorEnumRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_140);
                            lv_operator_1_1=rulePreOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                              							}
                              							set(
                              								current,
                              								"operator",
                              								lv_operator_1_1,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.PreOperator");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;
                        case 2 :
<<<<<<< HEAD
                            // InternalSCTX.g:13958:7: lv_operator_1_2= ruleValOperator
=======
                            // InternalSCTX.g:13407:7: lv_operator_1_2= ruleValOperator
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorValOperatorEnumRuleCall_0_1_0_1());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_140);
                            lv_operator_1_2=ruleValOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                              							}
                              							set(
                              								current,
                              								"operator",
                              								lv_operator_1_2,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.ValOperator");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    otherlv_2=(Token)match(input,31,FollowSets000.FOLLOW_174); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getValuedObjectTestExpressionAccess().getLeftParenthesisKeyword_0_2());
                      			
                    }
<<<<<<< HEAD
                    // InternalSCTX.g:13980:4: ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) )
                    // InternalSCTX.g:13981:5: (lv_subExpressions_3_0= ruleValuedObjectTestExpression )
                    {
                    // InternalSCTX.g:13981:5: (lv_subExpressions_3_0= ruleValuedObjectTestExpression )
                    // InternalSCTX.g:13982:6: lv_subExpressions_3_0= ruleValuedObjectTestExpression
=======
                    // InternalSCTX.g:13429:4: ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) )
                    // InternalSCTX.g:13430:5: (lv_subExpressions_3_0= ruleValuedObjectTestExpression )
                    {
                    // InternalSCTX.g:13430:5: (lv_subExpressions_3_0= ruleValuedObjectTestExpression )
                    // InternalSCTX.g:13431:6: lv_subExpressions_3_0= ruleValuedObjectTestExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectTestExpressionParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_subExpressions_3_0=ruleValuedObjectTestExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectTestExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

<<<<<<< HEAD
                    // InternalSCTX.g:13999:4: (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )?
                    int alt412=2;
                    int LA412_0 = input.LA(1);

                    if ( (LA412_0==20) ) {
                        alt412=1;
                    }
                    switch (alt412) {
                        case 1 :
                            // InternalSCTX.g:14000:5: otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) )
=======
                    // InternalSCTX.g:13448:4: (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )?
                    int alt401=2;
                    int LA401_0 = input.LA(1);

                    if ( (LA401_0==20) ) {
                        alt401=1;
                    }
                    switch (alt401) {
                        case 1 :
                            // InternalSCTX.g:13449:5: otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                            {
                            otherlv_4=(Token)match(input,20,FollowSets000.FOLLOW_174); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getValuedObjectTestExpressionAccess().getCommaKeyword_0_4_0());
                              				
                            }
<<<<<<< HEAD
                            // InternalSCTX.g:14004:5: ( (lv_subExpressions_5_0= ruleValuedObjectReference ) )
                            // InternalSCTX.g:14005:6: (lv_subExpressions_5_0= ruleValuedObjectReference )
                            {
                            // InternalSCTX.g:14005:6: (lv_subExpressions_5_0= ruleValuedObjectReference )
                            // InternalSCTX.g:14006:7: lv_subExpressions_5_0= ruleValuedObjectReference
=======
                            // InternalSCTX.g:13453:5: ( (lv_subExpressions_5_0= ruleValuedObjectReference ) )
                            // InternalSCTX.g:13454:6: (lv_subExpressions_5_0= ruleValuedObjectReference )
                            {
                            // InternalSCTX.g:13454:6: (lv_subExpressions_5_0= ruleValuedObjectReference )
                            // InternalSCTX.g:13455:7: lv_subExpressions_5_0= ruleValuedObjectReference
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectReferenceParserRuleCall_0_4_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_32);
                            lv_subExpressions_5_0=ruleValuedObjectReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                              							}
                              							add(
                              								current,
                              								"subExpressions",
                              								lv_subExpressions_5_0,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getValuedObjectTestExpressionAccess().getRightParenthesisKeyword_0_5());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:14030:3: this_ValuedObjectReference_7= ruleValuedObjectReference
=======
                    // InternalSCTX.g:13479:3: this_ValuedObjectReference_7= ruleValuedObjectReference
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getValuedObjectReferenceParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedObjectReference_7=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedObjectReference_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObjectTestExpression"


    // $ANTLR start "entryRulePrimeID"
<<<<<<< HEAD
    // InternalSCTX.g:14045:1: entryRulePrimeID returns [String current=null] : iv_rulePrimeID= rulePrimeID EOF ;
=======
    // InternalSCTX.g:13494:1: entryRulePrimeID returns [String current=null] : iv_rulePrimeID= rulePrimeID EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final String entryRulePrimeID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePrimeID = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:14045:47: (iv_rulePrimeID= rulePrimeID EOF )
            // InternalSCTX.g:14046:2: iv_rulePrimeID= rulePrimeID EOF
=======
            // InternalSCTX.g:13494:47: (iv_rulePrimeID= rulePrimeID EOF )
            // InternalSCTX.g:13495:2: iv_rulePrimeID= rulePrimeID EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimeIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrimeID=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimeID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimeID"


    // $ANTLR start "rulePrimeID"
<<<<<<< HEAD
    // InternalSCTX.g:14052:1: rulePrimeID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (kw= '\\'' )* ) ;
=======
    // InternalSCTX.g:13501:1: rulePrimeID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (kw= '\\'' )* ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final AntlrDatatypeRuleToken rulePrimeID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:14058:2: ( (this_ID_0= RULE_ID (kw= '\\'' )* ) )
            // InternalSCTX.g:14059:2: (this_ID_0= RULE_ID (kw= '\\'' )* )
            {
            // InternalSCTX.g:14059:2: (this_ID_0= RULE_ID (kw= '\\'' )* )
            // InternalSCTX.g:14060:3: this_ID_0= RULE_ID (kw= '\\'' )*
=======
            // InternalSCTX.g:13507:2: ( (this_ID_0= RULE_ID (kw= '\\'' )* ) )
            // InternalSCTX.g:13508:2: (this_ID_0= RULE_ID (kw= '\\'' )* )
            {
            // InternalSCTX.g:13508:2: (this_ID_0= RULE_ID (kw= '\\'' )* )
            // InternalSCTX.g:13509:3: this_ID_0= RULE_ID (kw= '\\'' )*
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_193); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_ID_0, grammarAccess.getPrimeIDAccess().getIDTerminalRuleCall_0());
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:14067:3: (kw= '\\'' )*
            loop414:
            do {
                int alt414=2;
                int LA414_0 = input.LA(1);

                if ( (LA414_0==101) ) {
                    alt414=1;
                }


                switch (alt414) {
            	case 1 :
            	    // InternalSCTX.g:14068:4: kw= '\\''
            	    {
            	    kw=(Token)match(input,101,FollowSets000.FOLLOW_193); if (state.failed) return current;
=======
            // InternalSCTX.g:13516:3: (kw= '\\'' )*
            loop403:
            do {
                int alt403=2;
                int LA403_0 = input.LA(1);

                if ( (LA403_0==97) ) {
                    alt403=1;
                }


                switch (alt403) {
            	case 1 :
            	    // InternalSCTX.g:13517:4: kw= '\\''
            	    {
            	    kw=(Token)match(input,97,FollowSets000.FOLLOW_191); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getPrimeIDAccess().getApostropheKeyword_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
<<<<<<< HEAD
            	    break loop414;
=======
            	    break loop403;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimeID"


    // $ANTLR start "entryRuleValuedObjectReference"
<<<<<<< HEAD
    // InternalSCTX.g:14078:1: entryRuleValuedObjectReference returns [EObject current=null] : iv_ruleValuedObjectReference= ruleValuedObjectReference EOF ;
=======
    // InternalSCTX.g:13527:1: entryRuleValuedObjectReference returns [EObject current=null] : iv_ruleValuedObjectReference= ruleValuedObjectReference EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleValuedObjectReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObjectReference = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:14078:62: (iv_ruleValuedObjectReference= ruleValuedObjectReference EOF )
            // InternalSCTX.g:14079:2: iv_ruleValuedObjectReference= ruleValuedObjectReference EOF
=======
            // InternalSCTX.g:13527:62: (iv_ruleValuedObjectReference= ruleValuedObjectReference EOF )
            // InternalSCTX.g:13528:2: iv_ruleValuedObjectReference= ruleValuedObjectReference EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObjectReference=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObjectReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObjectReference"


    // $ANTLR start "ruleValuedObjectReference"
<<<<<<< HEAD
    // InternalSCTX.g:14085:1: ruleValuedObjectReference returns [EObject current=null] : ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ) ;
=======
    // InternalSCTX.g:13534:1: ruleValuedObjectReference returns [EObject current=null] : ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleValuedObjectReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_indices_2_0 = null;

        EObject lv_subReference_5_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:14091:2: ( ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ) )
            // InternalSCTX.g:14092:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? )
            {
            // InternalSCTX.g:14092:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? )
            // InternalSCTX.g:14093:3: ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            {
            // InternalSCTX.g:14093:3: ( ( rulePrimeID ) )
            // InternalSCTX.g:14094:4: ( rulePrimeID )
            {
            // InternalSCTX.g:14094:4: ( rulePrimeID )
            // InternalSCTX.g:14095:5: rulePrimeID
=======
            // InternalSCTX.g:13540:2: ( ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ) )
            // InternalSCTX.g:13541:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? )
            {
            // InternalSCTX.g:13541:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? )
            // InternalSCTX.g:13542:3: ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            {
            // InternalSCTX.g:13542:3: ( ( rulePrimeID ) )
            // InternalSCTX.g:13543:4: ( rulePrimeID )
            {
            // InternalSCTX.g:13543:4: ( rulePrimeID )
            // InternalSCTX.g:13544:5: rulePrimeID
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getValuedObjectReferenceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_194);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

<<<<<<< HEAD
            // InternalSCTX.g:14112:3: (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )*
            loop415:
            do {
                int alt415=2;
                int LA415_0 = input.LA(1);

                if ( (LA415_0==36) ) {
                    alt415=1;
                }


                switch (alt415) {
            	case 1 :
            	    // InternalSCTX.g:14113:4: otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']'
=======
            // InternalSCTX.g:13561:3: (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )*
            loop404:
            do {
                int alt404=2;
                int LA404_0 = input.LA(1);

                if ( (LA404_0==36) ) {
                    alt404=1;
                }


                switch (alt404) {
            	case 1 :
            	    // InternalSCTX.g:13562:4: otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    otherlv_1=(Token)match(input,36,FollowSets000.FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getValuedObjectReferenceAccess().getLeftSquareBracketKeyword_1_0());
            	      			
            	    }
<<<<<<< HEAD
            	    // InternalSCTX.g:14117:4: ( (lv_indices_2_0= ruleExpression ) )
            	    // InternalSCTX.g:14118:5: (lv_indices_2_0= ruleExpression )
            	    {
            	    // InternalSCTX.g:14118:5: (lv_indices_2_0= ruleExpression )
            	    // InternalSCTX.g:14119:6: lv_indices_2_0= ruleExpression
=======
            	    // InternalSCTX.g:13566:4: ( (lv_indices_2_0= ruleExpression ) )
            	    // InternalSCTX.g:13567:5: (lv_indices_2_0= ruleExpression )
            	    {
            	    // InternalSCTX.g:13567:5: (lv_indices_2_0= ruleExpression )
            	    // InternalSCTX.g:13568:6: lv_indices_2_0= ruleExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getIndicesExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    lv_indices_2_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getValuedObjectReferenceRule());
            	      						}
            	      						add(
            	      							current,
            	      							"indices",
            	      							lv_indices_2_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,37,FollowSets000.FOLLOW_194); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getValuedObjectReferenceAccess().getRightSquareBracketKeyword_1_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
<<<<<<< HEAD
            	    break loop415;
                }
            } while (true);

            // InternalSCTX.g:14141:3: (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            int alt416=2;
            int LA416_0 = input.LA(1);

            if ( (LA416_0==83) ) {
                alt416=1;
            }
            switch (alt416) {
                case 1 :
                    // InternalSCTX.g:14142:4: otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) )
=======
            	    break loop404;
                }
            } while (true);

            // InternalSCTX.g:13590:3: (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            int alt405=2;
            int LA405_0 = input.LA(1);

            if ( (LA405_0==82) ) {
                alt405=1;
            }
            switch (alt405) {
                case 1 :
                    // InternalSCTX.g:13591:4: otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    otherlv_4=(Token)match(input,82,FollowSets000.FOLLOW_174); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getValuedObjectReferenceAccess().getFullStopKeyword_2_0());
                      			
                    }
<<<<<<< HEAD
                    // InternalSCTX.g:14146:4: ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    // InternalSCTX.g:14147:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    {
                    // InternalSCTX.g:14147:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    // InternalSCTX.g:14148:6: lv_subReference_5_0= ruleValuedObjectReference
=======
                    // InternalSCTX.g:13595:4: ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    // InternalSCTX.g:13596:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    {
                    // InternalSCTX.g:13596:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    // InternalSCTX.g:13597:6: lv_subReference_5_0= ruleValuedObjectReference
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getSubReferenceValuedObjectReferenceParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subReference_5_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectReferenceRule());
                      						}
                      						set(
                      							current,
                      							"subReference",
                      							lv_subReference_5_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObjectReference"


    // $ANTLR start "entryRuleScheduleObjectReference"
<<<<<<< HEAD
    // InternalSCTX.g:14170:1: entryRuleScheduleObjectReference returns [EObject current=null] : iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF ;
=======
    // InternalSCTX.g:13619:1: entryRuleScheduleObjectReference returns [EObject current=null] : iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleScheduleObjectReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScheduleObjectReference = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:14170:64: (iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF )
            // InternalSCTX.g:14171:2: iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF
=======
            // InternalSCTX.g:13619:64: (iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF )
            // InternalSCTX.g:13620:2: iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScheduleObjectReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScheduleObjectReference=ruleScheduleObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScheduleObjectReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScheduleObjectReference"


    // $ANTLR start "ruleScheduleObjectReference"
<<<<<<< HEAD
    // InternalSCTX.g:14177:1: ruleScheduleObjectReference returns [EObject current=null] : ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) ) ;
=======
    // InternalSCTX.g:13626:1: ruleScheduleObjectReference returns [EObject current=null] : ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleScheduleObjectReference() throws RecognitionException {
        EObject current = null;

        Token lv_priority_1_0=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:14183:2: ( ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) ) )
            // InternalSCTX.g:14184:2: ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) )
            {
            // InternalSCTX.g:14184:2: ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) )
            // InternalSCTX.g:14185:3: ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) )
            {
            // InternalSCTX.g:14185:3: ( ( rulePrimeID ) )
            // InternalSCTX.g:14186:4: ( rulePrimeID )
            {
            // InternalSCTX.g:14186:4: ( rulePrimeID )
            // InternalSCTX.g:14187:5: rulePrimeID
=======
            // InternalSCTX.g:13632:2: ( ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) ) )
            // InternalSCTX.g:13633:2: ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) )
            {
            // InternalSCTX.g:13633:2: ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) )
            // InternalSCTX.g:13634:3: ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) )
            {
            // InternalSCTX.g:13634:3: ( ( rulePrimeID ) )
            // InternalSCTX.g:13635:4: ( rulePrimeID )
            {
            // InternalSCTX.g:13635:4: ( rulePrimeID )
            // InternalSCTX.g:13636:5: rulePrimeID
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getScheduleObjectReferenceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScheduleObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_195);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

<<<<<<< HEAD
            // InternalSCTX.g:14204:3: ( (lv_priority_1_0= RULE_INT ) )
            // InternalSCTX.g:14205:4: (lv_priority_1_0= RULE_INT )
            {
            // InternalSCTX.g:14205:4: (lv_priority_1_0= RULE_INT )
            // InternalSCTX.g:14206:5: lv_priority_1_0= RULE_INT
=======
            // InternalSCTX.g:13653:3: ( (lv_priority_1_0= RULE_INT ) )
            // InternalSCTX.g:13654:4: (lv_priority_1_0= RULE_INT )
            {
            // InternalSCTX.g:13654:4: (lv_priority_1_0= RULE_INT )
            // InternalSCTX.g:13655:5: lv_priority_1_0= RULE_INT
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            lv_priority_1_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_priority_1_0, grammarAccess.getScheduleObjectReferenceAccess().getPriorityINTTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getScheduleObjectReferenceRule());
              					}
              					setWithLastConsumed(
              						current,
              						"priority",
              						lv_priority_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.INT");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScheduleObjectReference"


    // $ANTLR start "entryRuleReferenceCall"
<<<<<<< HEAD
    // InternalSCTX.g:14226:1: entryRuleReferenceCall returns [EObject current=null] : iv_ruleReferenceCall= ruleReferenceCall EOF ;
=======
    // InternalSCTX.g:13675:1: entryRuleReferenceCall returns [EObject current=null] : iv_ruleReferenceCall= ruleReferenceCall EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleReferenceCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceCall = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:14226:54: (iv_ruleReferenceCall= ruleReferenceCall EOF )
            // InternalSCTX.g:14227:2: iv_ruleReferenceCall= ruleReferenceCall EOF
=======
            // InternalSCTX.g:13675:54: (iv_ruleReferenceCall= ruleReferenceCall EOF )
            // InternalSCTX.g:13676:2: iv_ruleReferenceCall= ruleReferenceCall EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceCall=ruleReferenceCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceCall"


    // $ANTLR start "ruleReferenceCall"
<<<<<<< HEAD
    // InternalSCTX.g:14233:1: ruleReferenceCall returns [EObject current=null] : ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) ) ;
=======
    // InternalSCTX.g:13682:1: ruleReferenceCall returns [EObject current=null] : ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleReferenceCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        EObject lv_indices_2_0 = null;

        EObject lv_subReference_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_9_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:14239:2: ( ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) ) )
            // InternalSCTX.g:14240:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) )
            {
            // InternalSCTX.g:14240:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) )
            // InternalSCTX.g:14241:3: ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' )
            {
            // InternalSCTX.g:14241:3: ( ( rulePrimeID ) )
            // InternalSCTX.g:14242:4: ( rulePrimeID )
            {
            // InternalSCTX.g:14242:4: ( rulePrimeID )
            // InternalSCTX.g:14243:5: rulePrimeID
=======
            // InternalSCTX.g:13688:2: ( ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) ) )
            // InternalSCTX.g:13689:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) )
            {
            // InternalSCTX.g:13689:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) )
            // InternalSCTX.g:13690:3: ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' )
            {
            // InternalSCTX.g:13690:3: ( ( rulePrimeID ) )
            // InternalSCTX.g:13691:4: ( rulePrimeID )
            {
            // InternalSCTX.g:13691:4: ( rulePrimeID )
            // InternalSCTX.g:13692:5: rulePrimeID
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getReferenceCallRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferenceCallAccess().getValuedObjectValuedObjectCrossReference_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_173);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

<<<<<<< HEAD
            // InternalSCTX.g:14260:3: (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )*
            loop417:
            do {
                int alt417=2;
                int LA417_0 = input.LA(1);

                if ( (LA417_0==36) ) {
                    alt417=1;
                }


                switch (alt417) {
            	case 1 :
            	    // InternalSCTX.g:14261:4: otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']'
=======
            // InternalSCTX.g:13709:3: (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )*
            loop406:
            do {
                int alt406=2;
                int LA406_0 = input.LA(1);

                if ( (LA406_0==36) ) {
                    alt406=1;
                }


                switch (alt406) {
            	case 1 :
            	    // InternalSCTX.g:13710:4: otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    otherlv_1=(Token)match(input,36,FollowSets000.FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getReferenceCallAccess().getLeftSquareBracketKeyword_1_0());
            	      			
            	    }
<<<<<<< HEAD
            	    // InternalSCTX.g:14265:4: ( (lv_indices_2_0= ruleExpression ) )
            	    // InternalSCTX.g:14266:5: (lv_indices_2_0= ruleExpression )
            	    {
            	    // InternalSCTX.g:14266:5: (lv_indices_2_0= ruleExpression )
            	    // InternalSCTX.g:14267:6: lv_indices_2_0= ruleExpression
=======
            	    // InternalSCTX.g:13714:4: ( (lv_indices_2_0= ruleExpression ) )
            	    // InternalSCTX.g:13715:5: (lv_indices_2_0= ruleExpression )
            	    {
            	    // InternalSCTX.g:13715:5: (lv_indices_2_0= ruleExpression )
            	    // InternalSCTX.g:13716:6: lv_indices_2_0= ruleExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getReferenceCallAccess().getIndicesExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    lv_indices_2_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getReferenceCallRule());
            	      						}
            	      						add(
            	      							current,
            	      							"indices",
            	      							lv_indices_2_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,37,FollowSets000.FOLLOW_173); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getReferenceCallAccess().getRightSquareBracketKeyword_1_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
<<<<<<< HEAD
            	    break loop417;
                }
            } while (true);

            // InternalSCTX.g:14289:3: (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            int alt418=2;
            int LA418_0 = input.LA(1);

            if ( (LA418_0==83) ) {
                alt418=1;
            }
            switch (alt418) {
                case 1 :
                    // InternalSCTX.g:14290:4: otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) )
=======
            	    break loop406;
                }
            } while (true);

            // InternalSCTX.g:13738:3: (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            int alt407=2;
            int LA407_0 = input.LA(1);

            if ( (LA407_0==82) ) {
                alt407=1;
            }
            switch (alt407) {
                case 1 :
                    // InternalSCTX.g:13739:4: otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    otherlv_4=(Token)match(input,82,FollowSets000.FOLLOW_174); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getReferenceCallAccess().getFullStopKeyword_2_0());
                      			
                    }
<<<<<<< HEAD
                    // InternalSCTX.g:14294:4: ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    // InternalSCTX.g:14295:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    {
                    // InternalSCTX.g:14295:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    // InternalSCTX.g:14296:6: lv_subReference_5_0= ruleValuedObjectReference
=======
                    // InternalSCTX.g:13743:4: ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    // InternalSCTX.g:13744:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    {
                    // InternalSCTX.g:13744:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    // InternalSCTX.g:13745:6: lv_subReference_5_0= ruleValuedObjectReference
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getReferenceCallAccess().getSubReferenceValuedObjectReferenceParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_119);
                    lv_subReference_5_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getReferenceCallRule());
                      						}
                      						set(
                      							current,
                      							"subReference",
                      							lv_subReference_5_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

<<<<<<< HEAD
            // InternalSCTX.g:14314:3: ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' )
            int alt420=2;
            int LA420_0 = input.LA(1);

            if ( (LA420_0==31) ) {
                alt420=1;
            }
            else if ( (LA420_0==70) ) {
                alt420=2;
=======
            // InternalSCTX.g:13763:3: ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' )
            int alt409=2;
            int LA409_0 = input.LA(1);

            if ( (LA409_0==31) ) {
                alt409=1;
            }
            else if ( (LA409_0==69) ) {
                alt409=2;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
<<<<<<< HEAD
                    new NoViableAltException("", 420, 0, input);

                throw nvae;
            }
            switch (alt420) {
                case 1 :
                    // InternalSCTX.g:14315:4: (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' )
                    {
                    // InternalSCTX.g:14315:4: (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' )
                    // InternalSCTX.g:14316:5: otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')'
=======
                    new NoViableAltException("", 409, 0, input);

                throw nvae;
            }
            switch (alt409) {
                case 1 :
                    // InternalSCTX.g:13764:4: (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' )
                    {
                    // InternalSCTX.g:13764:4: (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' )
                    // InternalSCTX.g:13765:5: otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    otherlv_6=(Token)match(input,31,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getReferenceCallAccess().getLeftParenthesisKeyword_3_0_0());
                      				
                    }
<<<<<<< HEAD
                    // InternalSCTX.g:14320:5: ( (lv_parameters_7_0= ruleParameter ) )
                    // InternalSCTX.g:14321:6: (lv_parameters_7_0= ruleParameter )
                    {
                    // InternalSCTX.g:14321:6: (lv_parameters_7_0= ruleParameter )
                    // InternalSCTX.g:14322:7: lv_parameters_7_0= ruleParameter
=======
                    // InternalSCTX.g:13769:5: ( (lv_parameters_7_0= ruleParameter ) )
                    // InternalSCTX.g:13770:6: (lv_parameters_7_0= ruleParameter )
                    {
                    // InternalSCTX.g:13770:6: (lv_parameters_7_0= ruleParameter )
                    // InternalSCTX.g:13771:7: lv_parameters_7_0= ruleParameter
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceCallAccess().getParametersParameterParserRuleCall_3_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_parameters_7_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceCallRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_7_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

<<<<<<< HEAD
                    // InternalSCTX.g:14339:5: (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )*
                    loop419:
                    do {
                        int alt419=2;
                        int LA419_0 = input.LA(1);

                        if ( (LA419_0==20) ) {
                            alt419=1;
                        }


                        switch (alt419) {
                    	case 1 :
                    	    // InternalSCTX.g:14340:6: otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) )
=======
                    // InternalSCTX.g:13788:5: (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )*
                    loop408:
                    do {
                        int alt408=2;
                        int LA408_0 = input.LA(1);

                        if ( (LA408_0==20) ) {
                            alt408=1;
                        }


                        switch (alt408) {
                    	case 1 :
                    	    // InternalSCTX.g:13789:6: otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    otherlv_8=(Token)match(input,20,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_8, grammarAccess.getReferenceCallAccess().getCommaKeyword_3_0_2_0());
                    	      					
                    	    }
<<<<<<< HEAD
                    	    // InternalSCTX.g:14344:6: ( (lv_parameters_9_0= ruleParameter ) )
                    	    // InternalSCTX.g:14345:7: (lv_parameters_9_0= ruleParameter )
                    	    {
                    	    // InternalSCTX.g:14345:7: (lv_parameters_9_0= ruleParameter )
                    	    // InternalSCTX.g:14346:8: lv_parameters_9_0= ruleParameter
=======
                    	    // InternalSCTX.g:13793:6: ( (lv_parameters_9_0= ruleParameter ) )
                    	    // InternalSCTX.g:13794:7: (lv_parameters_9_0= ruleParameter )
                    	    {
                    	    // InternalSCTX.g:13794:7: (lv_parameters_9_0= ruleParameter )
                    	    // InternalSCTX.g:13795:8: lv_parameters_9_0= ruleParameter
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceCallAccess().getParametersParameterParserRuleCall_3_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_31);
                    	    lv_parameters_9_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceCallRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_9_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
<<<<<<< HEAD
                    	    break loop419;
=======
                    	    break loop408;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_10, grammarAccess.getReferenceCallAccess().getRightParenthesisKeyword_3_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:14370:4: otherlv_11= '()'
=======
                    // InternalSCTX.g:13819:4: otherlv_11= '()'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    otherlv_11=(Token)match(input,69,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getReferenceCallAccess().getLeftParenthesisRightParenthesisKeyword_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceCall"


    // $ANTLR start "entryRuleRandomCall"
<<<<<<< HEAD
    // InternalSCTX.g:14379:1: entryRuleRandomCall returns [EObject current=null] : iv_ruleRandomCall= ruleRandomCall EOF ;
=======
    // InternalSCTX.g:13828:1: entryRuleRandomCall returns [EObject current=null] : iv_ruleRandomCall= ruleRandomCall EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleRandomCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRandomCall = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:14379:51: (iv_ruleRandomCall= ruleRandomCall EOF )
            // InternalSCTX.g:14380:2: iv_ruleRandomCall= ruleRandomCall EOF
=======
            // InternalSCTX.g:13828:51: (iv_ruleRandomCall= ruleRandomCall EOF )
            // InternalSCTX.g:13829:2: iv_ruleRandomCall= ruleRandomCall EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRandomCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRandomCall=ruleRandomCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRandomCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRandomCall"


    // $ANTLR start "ruleRandomCall"
<<<<<<< HEAD
    // InternalSCTX.g:14386:1: ruleRandomCall returns [EObject current=null] : ( () otherlv_1= 'random' (otherlv_2= '()' )? ) ;
=======
    // InternalSCTX.g:13835:1: ruleRandomCall returns [EObject current=null] : ( () otherlv_1= 'random' (otherlv_2= '()' )? ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleRandomCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:14392:2: ( ( () otherlv_1= 'random' (otherlv_2= '()' )? ) )
            // InternalSCTX.g:14393:2: ( () otherlv_1= 'random' (otherlv_2= '()' )? )
            {
            // InternalSCTX.g:14393:2: ( () otherlv_1= 'random' (otherlv_2= '()' )? )
            // InternalSCTX.g:14394:3: () otherlv_1= 'random' (otherlv_2= '()' )?
            {
            // InternalSCTX.g:14394:3: ()
            // InternalSCTX.g:14395:4: 
=======
            // InternalSCTX.g:13841:2: ( ( () otherlv_1= 'random' (otherlv_2= '()' )? ) )
            // InternalSCTX.g:13842:2: ( () otherlv_1= 'random' (otherlv_2= '()' )? )
            {
            // InternalSCTX.g:13842:2: ( () otherlv_1= 'random' (otherlv_2= '()' )? )
            // InternalSCTX.g:13843:3: () otherlv_1= 'random' (otherlv_2= '()' )?
            {
            // InternalSCTX.g:13843:3: ()
            // InternalSCTX.g:13844:4: 
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRandomCallAccess().getRandomCallAction_0(),
              					current);
              			
            }

            }

<<<<<<< HEAD
            otherlv_1=(Token)match(input,102,FollowSets000.FOLLOW_196); if (state.failed) return current;
=======
            otherlv_1=(Token)match(input,98,FollowSets000.FOLLOW_194); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getRandomCallAccess().getRandomKeyword_1());
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:14408:3: (otherlv_2= '()' )?
            int alt421=2;
            int LA421_0 = input.LA(1);

            if ( (LA421_0==70) ) {
                alt421=1;
            }
            switch (alt421) {
                case 1 :
                    // InternalSCTX.g:14409:4: otherlv_2= '()'
=======
            // InternalSCTX.g:13857:3: (otherlv_2= '()' )?
            int alt410=2;
            int LA410_0 = input.LA(1);

            if ( (LA410_0==69) ) {
                alt410=1;
            }
            switch (alt410) {
                case 1 :
                    // InternalSCTX.g:13858:4: otherlv_2= '()'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    otherlv_2=(Token)match(input,69,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getRandomCallAccess().getLeftParenthesisRightParenthesisKeyword_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRandomCall"


    // $ANTLR start "entryRuleRandomizeCall"
<<<<<<< HEAD
    // InternalSCTX.g:14418:1: entryRuleRandomizeCall returns [EObject current=null] : iv_ruleRandomizeCall= ruleRandomizeCall EOF ;
=======
    // InternalSCTX.g:13867:1: entryRuleRandomizeCall returns [EObject current=null] : iv_ruleRandomizeCall= ruleRandomizeCall EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleRandomizeCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRandomizeCall = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:14418:54: (iv_ruleRandomizeCall= ruleRandomizeCall EOF )
            // InternalSCTX.g:14419:2: iv_ruleRandomizeCall= ruleRandomizeCall EOF
=======
            // InternalSCTX.g:13867:54: (iv_ruleRandomizeCall= ruleRandomizeCall EOF )
            // InternalSCTX.g:13868:2: iv_ruleRandomizeCall= ruleRandomizeCall EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRandomizeCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRandomizeCall=ruleRandomizeCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRandomizeCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRandomizeCall"


    // $ANTLR start "ruleRandomizeCall"
<<<<<<< HEAD
    // InternalSCTX.g:14425:1: ruleRandomizeCall returns [EObject current=null] : ( () otherlv_1= 'randomize' (otherlv_2= '()' )? ) ;
=======
    // InternalSCTX.g:13874:1: ruleRandomizeCall returns [EObject current=null] : ( () otherlv_1= 'randomize' (otherlv_2= '()' )? ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleRandomizeCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:14431:2: ( ( () otherlv_1= 'randomize' (otherlv_2= '()' )? ) )
            // InternalSCTX.g:14432:2: ( () otherlv_1= 'randomize' (otherlv_2= '()' )? )
            {
            // InternalSCTX.g:14432:2: ( () otherlv_1= 'randomize' (otherlv_2= '()' )? )
            // InternalSCTX.g:14433:3: () otherlv_1= 'randomize' (otherlv_2= '()' )?
            {
            // InternalSCTX.g:14433:3: ()
            // InternalSCTX.g:14434:4: 
=======
            // InternalSCTX.g:13880:2: ( ( () otherlv_1= 'randomize' (otherlv_2= '()' )? ) )
            // InternalSCTX.g:13881:2: ( () otherlv_1= 'randomize' (otherlv_2= '()' )? )
            {
            // InternalSCTX.g:13881:2: ( () otherlv_1= 'randomize' (otherlv_2= '()' )? )
            // InternalSCTX.g:13882:3: () otherlv_1= 'randomize' (otherlv_2= '()' )?
            {
            // InternalSCTX.g:13882:3: ()
            // InternalSCTX.g:13883:4: 
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRandomizeCallAccess().getRandomizeCallAction_0(),
              					current);
              			
            }

            }

<<<<<<< HEAD
            otherlv_1=(Token)match(input,85,FollowSets000.FOLLOW_196); if (state.failed) return current;
=======
            otherlv_1=(Token)match(input,84,FollowSets000.FOLLOW_194); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getRandomizeCallAccess().getRandomizeKeyword_1());
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:14447:3: (otherlv_2= '()' )?
            int alt422=2;
            int LA422_0 = input.LA(1);

            if ( (LA422_0==70) ) {
                alt422=1;
            }
            switch (alt422) {
                case 1 :
                    // InternalSCTX.g:14448:4: otherlv_2= '()'
=======
            // InternalSCTX.g:13896:3: (otherlv_2= '()' )?
            int alt411=2;
            int LA411_0 = input.LA(1);

            if ( (LA411_0==69) ) {
                alt411=1;
            }
            switch (alt411) {
                case 1 :
                    // InternalSCTX.g:13897:4: otherlv_2= '()'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    otherlv_2=(Token)match(input,69,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getRandomizeCallAccess().getLeftParenthesisRightParenthesisKeyword_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRandomizeCall"


    // $ANTLR start "entryRuleFunctionCall"
<<<<<<< HEAD
    // InternalSCTX.g:14457:1: entryRuleFunctionCall returns [EObject current=null] : iv_ruleFunctionCall= ruleFunctionCall EOF ;
=======
    // InternalSCTX.g:13906:1: entryRuleFunctionCall returns [EObject current=null] : iv_ruleFunctionCall= ruleFunctionCall EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleFunctionCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionCall = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:14457:53: (iv_ruleFunctionCall= ruleFunctionCall EOF )
            // InternalSCTX.g:14458:2: iv_ruleFunctionCall= ruleFunctionCall EOF
=======
            // InternalSCTX.g:13906:53: (iv_ruleFunctionCall= ruleFunctionCall EOF )
            // InternalSCTX.g:13907:2: iv_ruleFunctionCall= ruleFunctionCall EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunctionCall=ruleFunctionCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionCall"


    // $ANTLR start "ruleFunctionCall"
<<<<<<< HEAD
    // InternalSCTX.g:14464:1: ruleFunctionCall returns [EObject current=null] : (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) ;
=======
    // InternalSCTX.g:13913:1: ruleFunctionCall returns [EObject current=null] : (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleFunctionCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_functionName_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:14470:2: ( (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) )
            // InternalSCTX.g:14471:2: (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) )
            {
            // InternalSCTX.g:14471:2: (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) )
            // InternalSCTX.g:14472:3: otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' )
=======
            // InternalSCTX.g:13919:2: ( (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) )
            // InternalSCTX.g:13920:2: (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) )
            {
            // InternalSCTX.g:13920:2: (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) )
            // InternalSCTX.g:13921:3: otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            otherlv_0=(Token)match(input,79,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFunctionCallAccess().getExternKeyword_0());
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:14476:3: ( (lv_functionName_1_0= RULE_ID ) )
            // InternalSCTX.g:14477:4: (lv_functionName_1_0= RULE_ID )
            {
            // InternalSCTX.g:14477:4: (lv_functionName_1_0= RULE_ID )
            // InternalSCTX.g:14478:5: lv_functionName_1_0= RULE_ID
=======
            // InternalSCTX.g:13925:3: ( (lv_functionName_1_0= RULE_ID ) )
            // InternalSCTX.g:13926:4: (lv_functionName_1_0= RULE_ID )
            {
            // InternalSCTX.g:13926:4: (lv_functionName_1_0= RULE_ID )
            // InternalSCTX.g:13927:5: lv_functionName_1_0= RULE_ID
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            lv_functionName_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_119); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_functionName_1_0, grammarAccess.getFunctionCallAccess().getFunctionNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getFunctionCallRule());
              					}
              					setWithLastConsumed(
              						current,
              						"functionName",
              						lv_functionName_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

<<<<<<< HEAD
            // InternalSCTX.g:14494:3: ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' )
            int alt424=2;
            int LA424_0 = input.LA(1);

            if ( (LA424_0==31) ) {
                alt424=1;
            }
            else if ( (LA424_0==70) ) {
                alt424=2;
=======
            // InternalSCTX.g:13943:3: ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' )
            int alt413=2;
            int LA413_0 = input.LA(1);

            if ( (LA413_0==31) ) {
                alt413=1;
            }
            else if ( (LA413_0==69) ) {
                alt413=2;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
<<<<<<< HEAD
                    new NoViableAltException("", 424, 0, input);

                throw nvae;
            }
            switch (alt424) {
                case 1 :
                    // InternalSCTX.g:14495:4: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
                    {
                    // InternalSCTX.g:14495:4: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
                    // InternalSCTX.g:14496:5: otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')'
=======
                    new NoViableAltException("", 413, 0, input);

                throw nvae;
            }
            switch (alt413) {
                case 1 :
                    // InternalSCTX.g:13944:4: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
                    {
                    // InternalSCTX.g:13944:4: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
                    // InternalSCTX.g:13945:5: otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    otherlv_2=(Token)match(input,31,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_2_0_0());
                      				
                    }
<<<<<<< HEAD
                    // InternalSCTX.g:14500:5: ( (lv_parameters_3_0= ruleParameter ) )
                    // InternalSCTX.g:14501:6: (lv_parameters_3_0= ruleParameter )
                    {
                    // InternalSCTX.g:14501:6: (lv_parameters_3_0= ruleParameter )
                    // InternalSCTX.g:14502:7: lv_parameters_3_0= ruleParameter
=======
                    // InternalSCTX.g:13949:5: ( (lv_parameters_3_0= ruleParameter ) )
                    // InternalSCTX.g:13950:6: (lv_parameters_3_0= ruleParameter )
                    {
                    // InternalSCTX.g:13950:6: (lv_parameters_3_0= ruleParameter )
                    // InternalSCTX.g:13951:7: lv_parameters_3_0= ruleParameter
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_2_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_parameters_3_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFunctionCallRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

<<<<<<< HEAD
                    // InternalSCTX.g:14519:5: (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )*
                    loop423:
                    do {
                        int alt423=2;
                        int LA423_0 = input.LA(1);

                        if ( (LA423_0==20) ) {
                            alt423=1;
                        }


                        switch (alt423) {
                    	case 1 :
                    	    // InternalSCTX.g:14520:6: otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) )
=======
                    // InternalSCTX.g:13968:5: (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )*
                    loop412:
                    do {
                        int alt412=2;
                        int LA412_0 = input.LA(1);

                        if ( (LA412_0==20) ) {
                            alt412=1;
                        }


                        switch (alt412) {
                    	case 1 :
                    	    // InternalSCTX.g:13969:6: otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    otherlv_4=(Token)match(input,20,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getFunctionCallAccess().getCommaKeyword_2_0_2_0());
                    	      					
                    	    }
<<<<<<< HEAD
                    	    // InternalSCTX.g:14524:6: ( (lv_parameters_5_0= ruleParameter ) )
                    	    // InternalSCTX.g:14525:7: (lv_parameters_5_0= ruleParameter )
                    	    {
                    	    // InternalSCTX.g:14525:7: (lv_parameters_5_0= ruleParameter )
                    	    // InternalSCTX.g:14526:8: lv_parameters_5_0= ruleParameter
=======
                    	    // InternalSCTX.g:13973:6: ( (lv_parameters_5_0= ruleParameter ) )
                    	    // InternalSCTX.g:13974:7: (lv_parameters_5_0= ruleParameter )
                    	    {
                    	    // InternalSCTX.g:13974:7: (lv_parameters_5_0= ruleParameter )
                    	    // InternalSCTX.g:13975:8: lv_parameters_5_0= ruleParameter
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_2_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_31);
                    	    lv_parameters_5_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getFunctionCallRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_5_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
<<<<<<< HEAD
                    	    break loop423;
=======
                    	    break loop412;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_2_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:14550:4: otherlv_7= '()'
=======
                    // InternalSCTX.g:13999:4: otherlv_7= '()'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    otherlv_7=(Token)match(input,69,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_2_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionCall"


    // $ANTLR start "entryRuleParameter"
<<<<<<< HEAD
    // InternalSCTX.g:14559:1: entryRuleParameter returns [EObject current=null] : iv_ruleParameter= ruleParameter EOF ;
=======
    // InternalSCTX.g:14008:1: entryRuleParameter returns [EObject current=null] : iv_ruleParameter= ruleParameter EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameter = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:14559:50: (iv_ruleParameter= ruleParameter EOF )
            // InternalSCTX.g:14560:2: iv_ruleParameter= ruleParameter EOF
=======
            // InternalSCTX.g:14008:50: (iv_ruleParameter= ruleParameter EOF )
            // InternalSCTX.g:14009:2: iv_ruleParameter= ruleParameter EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleParameter=ruleParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameter"


    // $ANTLR start "ruleParameter"
<<<<<<< HEAD
    // InternalSCTX.g:14566:1: ruleParameter returns [EObject current=null] : ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) ) ;
=======
    // InternalSCTX.g:14015:1: ruleParameter returns [EObject current=null] : ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleParameter() throws RecognitionException {
        EObject current = null;

        Token lv_pureOutput_0_0=null;
        Token lv_callByReference_1_0=null;
        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:14572:2: ( ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) ) )
            // InternalSCTX.g:14573:2: ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) )
            {
            // InternalSCTX.g:14573:2: ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) )
            // InternalSCTX.g:14574:3: ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) )
            {
            // InternalSCTX.g:14574:3: ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )?
            int alt426=2;
            int LA426_0 = input.LA(1);

            if ( (LA426_0==33) ) {
                int LA426_1 = input.LA(2);

                if ( (LA426_1==34) ) {
                    alt426=1;
                }
            }
            else if ( (LA426_0==34) ) {
                alt426=1;
            }
            switch (alt426) {
                case 1 :
                    // InternalSCTX.g:14575:4: ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) )
                    {
                    // InternalSCTX.g:14575:4: ( (lv_pureOutput_0_0= '!' ) )?
                    int alt425=2;
                    int LA425_0 = input.LA(1);

                    if ( (LA425_0==33) ) {
                        alt425=1;
                    }
                    switch (alt425) {
                        case 1 :
                            // InternalSCTX.g:14576:5: (lv_pureOutput_0_0= '!' )
                            {
                            // InternalSCTX.g:14576:5: (lv_pureOutput_0_0= '!' )
                            // InternalSCTX.g:14577:6: lv_pureOutput_0_0= '!'
=======
            // InternalSCTX.g:14021:2: ( ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) ) )
            // InternalSCTX.g:14022:2: ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) )
            {
            // InternalSCTX.g:14022:2: ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) )
            // InternalSCTX.g:14023:3: ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) )
            {
            // InternalSCTX.g:14023:3: ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )?
            int alt415=2;
            int LA415_0 = input.LA(1);

            if ( (LA415_0==33) ) {
                int LA415_1 = input.LA(2);

                if ( (LA415_1==34) ) {
                    alt415=1;
                }
            }
            else if ( (LA415_0==34) ) {
                alt415=1;
            }
            switch (alt415) {
                case 1 :
                    // InternalSCTX.g:14024:4: ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) )
                    {
                    // InternalSCTX.g:14024:4: ( (lv_pureOutput_0_0= '!' ) )?
                    int alt414=2;
                    int LA414_0 = input.LA(1);

                    if ( (LA414_0==33) ) {
                        alt414=1;
                    }
                    switch (alt414) {
                        case 1 :
                            // InternalSCTX.g:14025:5: (lv_pureOutput_0_0= '!' )
                            {
                            // InternalSCTX.g:14025:5: (lv_pureOutput_0_0= '!' )
                            // InternalSCTX.g:14026:6: lv_pureOutput_0_0= '!'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                            {
                            lv_pureOutput_0_0=(Token)match(input,33,FollowSets000.FOLLOW_33); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_pureOutput_0_0, grammarAccess.getParameterAccess().getPureOutputExclamationMarkKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getParameterRule());
                              						}
                              						setWithLastConsumed(current, "pureOutput", true, "!");
                              					
                            }

                            }


                            }
                            break;

                    }

<<<<<<< HEAD
                    // InternalSCTX.g:14589:4: ( (lv_callByReference_1_0= '&' ) )
                    // InternalSCTX.g:14590:5: (lv_callByReference_1_0= '&' )
                    {
                    // InternalSCTX.g:14590:5: (lv_callByReference_1_0= '&' )
                    // InternalSCTX.g:14591:6: lv_callByReference_1_0= '&'
=======
                    // InternalSCTX.g:14038:4: ( (lv_callByReference_1_0= '&' ) )
                    // InternalSCTX.g:14039:5: (lv_callByReference_1_0= '&' )
                    {
                    // InternalSCTX.g:14039:5: (lv_callByReference_1_0= '&' )
                    // InternalSCTX.g:14040:6: lv_callByReference_1_0= '&'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    lv_callByReference_1_0=(Token)match(input,34,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_callByReference_1_0, grammarAccess.getParameterAccess().getCallByReferenceAmpersandKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getParameterRule());
                      						}
                      						setWithLastConsumed(current, "callByReference", true, "&");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

<<<<<<< HEAD
            // InternalSCTX.g:14604:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalSCTX.g:14605:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalSCTX.g:14605:4: (lv_expression_2_0= ruleExpression )
            // InternalSCTX.g:14606:5: lv_expression_2_0= ruleExpression
=======
            // InternalSCTX.g:14053:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalSCTX.g:14054:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalSCTX.g:14054:4: (lv_expression_2_0= ruleExpression )
            // InternalSCTX.g:14055:5: lv_expression_2_0= ruleExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getParameterAccess().getExpressionExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getParameterRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameter"


    // $ANTLR start "entryRuleTextExpression"
<<<<<<< HEAD
    // InternalSCTX.g:14627:1: entryRuleTextExpression returns [EObject current=null] : iv_ruleTextExpression= ruleTextExpression EOF ;
=======
    // InternalSCTX.g:14076:1: entryRuleTextExpression returns [EObject current=null] : iv_ruleTextExpression= ruleTextExpression EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleTextExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTextExpression = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:14627:55: (iv_ruleTextExpression= ruleTextExpression EOF )
            // InternalSCTX.g:14628:2: iv_ruleTextExpression= ruleTextExpression EOF
=======
            // InternalSCTX.g:14076:55: (iv_ruleTextExpression= ruleTextExpression EOF )
            // InternalSCTX.g:14077:2: iv_ruleTextExpression= ruleTextExpression EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTextExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTextExpression=ruleTextExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTextExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTextExpression"


    // $ANTLR start "ruleTextExpression"
<<<<<<< HEAD
    // InternalSCTX.g:14634:1: ruleTextExpression returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) ;
=======
    // InternalSCTX.g:14083:1: ruleTextExpression returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleTextExpression() throws RecognitionException {
        EObject current = null;

        Token lv_text_1_0=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:14640:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) )
            // InternalSCTX.g:14641:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            {
            // InternalSCTX.g:14641:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            // InternalSCTX.g:14642:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) )
            {
            // InternalSCTX.g:14642:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop427:
            do {
                int alt427=2;
                int LA427_0 = input.LA(1);

                if ( (LA427_0==RULE_COMMENT_ANNOTATION||LA427_0==106) ) {
                    alt427=1;
                }


                switch (alt427) {
            	case 1 :
            	    // InternalSCTX.g:14643:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:14643:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:14644:5: lv_annotations_0_0= ruleAnnotation
=======
            // InternalSCTX.g:14089:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) )
            // InternalSCTX.g:14090:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            {
            // InternalSCTX.g:14090:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            // InternalSCTX.g:14091:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) )
            {
            // InternalSCTX.g:14091:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop416:
            do {
                int alt416=2;
                int LA416_0 = input.LA(1);

                if ( (LA416_0==RULE_COMMENT_ANNOTATION||LA416_0==102) ) {
                    alt416=1;
                }


                switch (alt416) {
            	case 1 :
            	    // InternalSCTX.g:14092:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:14092:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:14093:5: lv_annotations_0_0= ruleAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getTextExpressionAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_172);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getTextExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
<<<<<<< HEAD
            	    break loop427;
                }
            } while (true);

            // InternalSCTX.g:14661:3: ( (lv_text_1_0= RULE_HOSTCODE ) )
            // InternalSCTX.g:14662:4: (lv_text_1_0= RULE_HOSTCODE )
            {
            // InternalSCTX.g:14662:4: (lv_text_1_0= RULE_HOSTCODE )
            // InternalSCTX.g:14663:5: lv_text_1_0= RULE_HOSTCODE
=======
            	    break loop416;
                }
            } while (true);

            // InternalSCTX.g:14110:3: ( (lv_text_1_0= RULE_HOSTCODE ) )
            // InternalSCTX.g:14111:4: (lv_text_1_0= RULE_HOSTCODE )
            {
            // InternalSCTX.g:14111:4: (lv_text_1_0= RULE_HOSTCODE )
            // InternalSCTX.g:14112:5: lv_text_1_0= RULE_HOSTCODE
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            lv_text_1_0=(Token)match(input,RULE_HOSTCODE,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_text_1_0, grammarAccess.getTextExpressionAccess().getTextHOSTCODETerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTextExpressionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"text",
              						lv_text_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.HOSTCODE");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTextExpression"


    // $ANTLR start "entryRuleIntValue"
<<<<<<< HEAD
    // InternalSCTX.g:14683:1: entryRuleIntValue returns [EObject current=null] : iv_ruleIntValue= ruleIntValue EOF ;
=======
    // InternalSCTX.g:14132:1: entryRuleIntValue returns [EObject current=null] : iv_ruleIntValue= ruleIntValue EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleIntValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntValue = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:14683:49: (iv_ruleIntValue= ruleIntValue EOF )
            // InternalSCTX.g:14684:2: iv_ruleIntValue= ruleIntValue EOF
=======
            // InternalSCTX.g:14132:49: (iv_ruleIntValue= ruleIntValue EOF )
            // InternalSCTX.g:14133:2: iv_ruleIntValue= ruleIntValue EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIntValue=ruleIntValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntValue"


    // $ANTLR start "ruleIntValue"
<<<<<<< HEAD
    // InternalSCTX.g:14690:1: ruleIntValue returns [EObject current=null] : ( (lv_value_0_0= RULE_INT ) ) ;
=======
    // InternalSCTX.g:14139:1: ruleIntValue returns [EObject current=null] : ( (lv_value_0_0= RULE_INT ) ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleIntValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:14696:2: ( ( (lv_value_0_0= RULE_INT ) ) )
            // InternalSCTX.g:14697:2: ( (lv_value_0_0= RULE_INT ) )
            {
            // InternalSCTX.g:14697:2: ( (lv_value_0_0= RULE_INT ) )
            // InternalSCTX.g:14698:3: (lv_value_0_0= RULE_INT )
            {
            // InternalSCTX.g:14698:3: (lv_value_0_0= RULE_INT )
            // InternalSCTX.g:14699:4: lv_value_0_0= RULE_INT
=======
            // InternalSCTX.g:14145:2: ( ( (lv_value_0_0= RULE_INT ) ) )
            // InternalSCTX.g:14146:2: ( (lv_value_0_0= RULE_INT ) )
            {
            // InternalSCTX.g:14146:2: ( (lv_value_0_0= RULE_INT ) )
            // InternalSCTX.g:14147:3: (lv_value_0_0= RULE_INT )
            {
            // InternalSCTX.g:14147:3: (lv_value_0_0= RULE_INT )
            // InternalSCTX.g:14148:4: lv_value_0_0= RULE_INT
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            lv_value_0_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getIntValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.INT");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntValue"


    // $ANTLR start "entryRuleFloatValue"
<<<<<<< HEAD
    // InternalSCTX.g:14718:1: entryRuleFloatValue returns [EObject current=null] : iv_ruleFloatValue= ruleFloatValue EOF ;
=======
    // InternalSCTX.g:14167:1: entryRuleFloatValue returns [EObject current=null] : iv_ruleFloatValue= ruleFloatValue EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleFloatValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFloatValue = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:14718:51: (iv_ruleFloatValue= ruleFloatValue EOF )
            // InternalSCTX.g:14719:2: iv_ruleFloatValue= ruleFloatValue EOF
=======
            // InternalSCTX.g:14167:51: (iv_ruleFloatValue= ruleFloatValue EOF )
            // InternalSCTX.g:14168:2: iv_ruleFloatValue= ruleFloatValue EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFloatValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFloatValue=ruleFloatValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFloatValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFloatValue"


    // $ANTLR start "ruleFloatValue"
<<<<<<< HEAD
    // InternalSCTX.g:14725:1: ruleFloatValue returns [EObject current=null] : ( (lv_value_0_0= RULE_FLOAT ) ) ;
=======
    // InternalSCTX.g:14174:1: ruleFloatValue returns [EObject current=null] : ( (lv_value_0_0= RULE_FLOAT ) ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleFloatValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:14731:2: ( ( (lv_value_0_0= RULE_FLOAT ) ) )
            // InternalSCTX.g:14732:2: ( (lv_value_0_0= RULE_FLOAT ) )
            {
            // InternalSCTX.g:14732:2: ( (lv_value_0_0= RULE_FLOAT ) )
            // InternalSCTX.g:14733:3: (lv_value_0_0= RULE_FLOAT )
            {
            // InternalSCTX.g:14733:3: (lv_value_0_0= RULE_FLOAT )
            // InternalSCTX.g:14734:4: lv_value_0_0= RULE_FLOAT
=======
            // InternalSCTX.g:14180:2: ( ( (lv_value_0_0= RULE_FLOAT ) ) )
            // InternalSCTX.g:14181:2: ( (lv_value_0_0= RULE_FLOAT ) )
            {
            // InternalSCTX.g:14181:2: ( (lv_value_0_0= RULE_FLOAT ) )
            // InternalSCTX.g:14182:3: (lv_value_0_0= RULE_FLOAT )
            {
            // InternalSCTX.g:14182:3: (lv_value_0_0= RULE_FLOAT )
            // InternalSCTX.g:14183:4: lv_value_0_0= RULE_FLOAT
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            lv_value_0_0=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getFloatValueAccess().getValueFLOATTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFloatValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.FLOAT");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFloatValue"


    // $ANTLR start "entryRuleBoolValue"
<<<<<<< HEAD
    // InternalSCTX.g:14753:1: entryRuleBoolValue returns [EObject current=null] : iv_ruleBoolValue= ruleBoolValue EOF ;
=======
    // InternalSCTX.g:14202:1: entryRuleBoolValue returns [EObject current=null] : iv_ruleBoolValue= ruleBoolValue EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleBoolValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBoolValue = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:14753:50: (iv_ruleBoolValue= ruleBoolValue EOF )
            // InternalSCTX.g:14754:2: iv_ruleBoolValue= ruleBoolValue EOF
=======
            // InternalSCTX.g:14202:50: (iv_ruleBoolValue= ruleBoolValue EOF )
            // InternalSCTX.g:14203:2: iv_ruleBoolValue= ruleBoolValue EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBoolValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBoolValue=ruleBoolValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBoolValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBoolValue"


    // $ANTLR start "ruleBoolValue"
<<<<<<< HEAD
    // InternalSCTX.g:14760:1: ruleBoolValue returns [EObject current=null] : ( (lv_value_0_0= RULE_BOOLEAN ) ) ;
=======
    // InternalSCTX.g:14209:1: ruleBoolValue returns [EObject current=null] : ( (lv_value_0_0= RULE_BOOLEAN ) ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleBoolValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:14766:2: ( ( (lv_value_0_0= RULE_BOOLEAN ) ) )
            // InternalSCTX.g:14767:2: ( (lv_value_0_0= RULE_BOOLEAN ) )
            {
            // InternalSCTX.g:14767:2: ( (lv_value_0_0= RULE_BOOLEAN ) )
            // InternalSCTX.g:14768:3: (lv_value_0_0= RULE_BOOLEAN )
            {
            // InternalSCTX.g:14768:3: (lv_value_0_0= RULE_BOOLEAN )
            // InternalSCTX.g:14769:4: lv_value_0_0= RULE_BOOLEAN
=======
            // InternalSCTX.g:14215:2: ( ( (lv_value_0_0= RULE_BOOLEAN ) ) )
            // InternalSCTX.g:14216:2: ( (lv_value_0_0= RULE_BOOLEAN ) )
            {
            // InternalSCTX.g:14216:2: ( (lv_value_0_0= RULE_BOOLEAN ) )
            // InternalSCTX.g:14217:3: (lv_value_0_0= RULE_BOOLEAN )
            {
            // InternalSCTX.g:14217:3: (lv_value_0_0= RULE_BOOLEAN )
            // InternalSCTX.g:14218:4: lv_value_0_0= RULE_BOOLEAN
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            lv_value_0_0=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getBoolValueAccess().getValueBOOLEANTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getBoolValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.BOOLEAN");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBoolValue"


    // $ANTLR start "entryRuleStringValue"
<<<<<<< HEAD
    // InternalSCTX.g:14788:1: entryRuleStringValue returns [EObject current=null] : iv_ruleStringValue= ruleStringValue EOF ;
=======
    // InternalSCTX.g:14237:1: entryRuleStringValue returns [EObject current=null] : iv_ruleStringValue= ruleStringValue EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleStringValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringValue = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:14788:52: (iv_ruleStringValue= ruleStringValue EOF )
            // InternalSCTX.g:14789:2: iv_ruleStringValue= ruleStringValue EOF
=======
            // InternalSCTX.g:14237:52: (iv_ruleStringValue= ruleStringValue EOF )
            // InternalSCTX.g:14238:2: iv_ruleStringValue= ruleStringValue EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringValue=ruleStringValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringValue"


    // $ANTLR start "ruleStringValue"
<<<<<<< HEAD
    // InternalSCTX.g:14795:1: ruleStringValue returns [EObject current=null] : ( (lv_value_0_0= RULE_STRING ) ) ;
=======
    // InternalSCTX.g:14244:1: ruleStringValue returns [EObject current=null] : ( (lv_value_0_0= RULE_STRING ) ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleStringValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:14801:2: ( ( (lv_value_0_0= RULE_STRING ) ) )
            // InternalSCTX.g:14802:2: ( (lv_value_0_0= RULE_STRING ) )
            {
            // InternalSCTX.g:14802:2: ( (lv_value_0_0= RULE_STRING ) )
            // InternalSCTX.g:14803:3: (lv_value_0_0= RULE_STRING )
            {
            // InternalSCTX.g:14803:3: (lv_value_0_0= RULE_STRING )
            // InternalSCTX.g:14804:4: lv_value_0_0= RULE_STRING
=======
            // InternalSCTX.g:14250:2: ( ( (lv_value_0_0= RULE_STRING ) ) )
            // InternalSCTX.g:14251:2: ( (lv_value_0_0= RULE_STRING ) )
            {
            // InternalSCTX.g:14251:2: ( (lv_value_0_0= RULE_STRING ) )
            // InternalSCTX.g:14252:3: (lv_value_0_0= RULE_STRING )
            {
            // InternalSCTX.g:14252:3: (lv_value_0_0= RULE_STRING )
            // InternalSCTX.g:14253:4: lv_value_0_0= RULE_STRING
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            lv_value_0_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getStringValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.STRING");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringValue"


    // $ANTLR start "entryRuleVectorValue"
<<<<<<< HEAD
    // InternalSCTX.g:14823:1: entryRuleVectorValue returns [EObject current=null] : iv_ruleVectorValue= ruleVectorValue EOF ;
=======
    // InternalSCTX.g:14272:1: entryRuleVectorValue returns [EObject current=null] : iv_ruleVectorValue= ruleVectorValue EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleVectorValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVectorValue = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:14823:52: (iv_ruleVectorValue= ruleVectorValue EOF )
            // InternalSCTX.g:14824:2: iv_ruleVectorValue= ruleVectorValue EOF
=======
            // InternalSCTX.g:14272:52: (iv_ruleVectorValue= ruleVectorValue EOF )
            // InternalSCTX.g:14273:2: iv_ruleVectorValue= ruleVectorValue EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVectorValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVectorValue=ruleVectorValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVectorValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVectorValue"


    // $ANTLR start "ruleVectorValue"
<<<<<<< HEAD
    // InternalSCTX.g:14830:1: ruleVectorValue returns [EObject current=null] : (otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}' ) ;
=======
    // InternalSCTX.g:14279:1: ruleVectorValue returns [EObject current=null] : (otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}' ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleVectorValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_values_1_0 = null;

        EObject lv_values_3_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:14836:2: ( (otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}' ) )
            // InternalSCTX.g:14837:2: (otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}' )
            {
            // InternalSCTX.g:14837:2: (otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}' )
            // InternalSCTX.g:14838:3: otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}'
=======
            // InternalSCTX.g:14285:2: ( (otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}' ) )
            // InternalSCTX.g:14286:2: (otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}' )
            {
            // InternalSCTX.g:14286:2: (otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}' )
            // InternalSCTX.g:14287:3: otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            otherlv_0=(Token)match(input,21,FollowSets000.FOLLOW_197); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getVectorValueAccess().getLeftCurlyBracketKeyword_0());
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:14842:3: ( (lv_values_1_0= ruleVectorValueMember ) )
            // InternalSCTX.g:14843:4: (lv_values_1_0= ruleVectorValueMember )
            {
            // InternalSCTX.g:14843:4: (lv_values_1_0= ruleVectorValueMember )
            // InternalSCTX.g:14844:5: lv_values_1_0= ruleVectorValueMember
=======
            // InternalSCTX.g:14291:3: ( (lv_values_1_0= ruleVectorValueMember ) )
            // InternalSCTX.g:14292:4: (lv_values_1_0= ruleVectorValueMember )
            {
            // InternalSCTX.g:14292:4: (lv_values_1_0= ruleVectorValueMember )
            // InternalSCTX.g:14293:5: lv_values_1_0= ruleVectorValueMember
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVectorValueAccess().getValuesVectorValueMemberParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_168);
            lv_values_1_0=ruleVectorValueMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVectorValueRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.VectorValueMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

<<<<<<< HEAD
            // InternalSCTX.g:14861:3: (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )*
            loop428:
            do {
                int alt428=2;
                int LA428_0 = input.LA(1);

                if ( (LA428_0==20) ) {
                    alt428=1;
                }


                switch (alt428) {
            	case 1 :
            	    // InternalSCTX.g:14862:4: otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) )
=======
            // InternalSCTX.g:14310:3: (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )*
            loop417:
            do {
                int alt417=2;
                int LA417_0 = input.LA(1);

                if ( (LA417_0==20) ) {
                    alt417=1;
                }


                switch (alt417) {
            	case 1 :
            	    // InternalSCTX.g:14311:4: otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    otherlv_2=(Token)match(input,20,FollowSets000.FOLLOW_197); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getVectorValueAccess().getCommaKeyword_2_0());
            	      			
            	    }
<<<<<<< HEAD
            	    // InternalSCTX.g:14866:4: ( (lv_values_3_0= ruleVectorValueMember ) )
            	    // InternalSCTX.g:14867:5: (lv_values_3_0= ruleVectorValueMember )
            	    {
            	    // InternalSCTX.g:14867:5: (lv_values_3_0= ruleVectorValueMember )
            	    // InternalSCTX.g:14868:6: lv_values_3_0= ruleVectorValueMember
=======
            	    // InternalSCTX.g:14315:4: ( (lv_values_3_0= ruleVectorValueMember ) )
            	    // InternalSCTX.g:14316:5: (lv_values_3_0= ruleVectorValueMember )
            	    {
            	    // InternalSCTX.g:14316:5: (lv_values_3_0= ruleVectorValueMember )
            	    // InternalSCTX.g:14317:6: lv_values_3_0= ruleVectorValueMember
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getVectorValueAccess().getValuesVectorValueMemberParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_168);
            	    lv_values_3_0=ruleVectorValueMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getVectorValueRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_3_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.VectorValueMember");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
<<<<<<< HEAD
            	    break loop428;
=======
            	    break loop417;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
            } while (true);

            otherlv_4=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getVectorValueAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVectorValue"


    // $ANTLR start "entryRuleVectorValueMember"
<<<<<<< HEAD
    // InternalSCTX.g:14894:1: entryRuleVectorValueMember returns [EObject current=null] : iv_ruleVectorValueMember= ruleVectorValueMember EOF ;
=======
    // InternalSCTX.g:14343:1: entryRuleVectorValueMember returns [EObject current=null] : iv_ruleVectorValueMember= ruleVectorValueMember EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleVectorValueMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVectorValueMember = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:14894:58: (iv_ruleVectorValueMember= ruleVectorValueMember EOF )
            // InternalSCTX.g:14895:2: iv_ruleVectorValueMember= ruleVectorValueMember EOF
=======
            // InternalSCTX.g:14343:58: (iv_ruleVectorValueMember= ruleVectorValueMember EOF )
            // InternalSCTX.g:14344:2: iv_ruleVectorValueMember= ruleVectorValueMember EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVectorValueMemberRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVectorValueMember=ruleVectorValueMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVectorValueMember; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVectorValueMember"


    // $ANTLR start "ruleVectorValueMember"
<<<<<<< HEAD
    // InternalSCTX.g:14901:1: ruleVectorValueMember returns [EObject current=null] : (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue ) ;
=======
    // InternalSCTX.g:14350:1: ruleVectorValueMember returns [EObject current=null] : (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleVectorValueMember() throws RecognitionException {
        EObject current = null;

        EObject this_BoolExpression_0 = null;

        EObject this_ValuedExpression_1 = null;

        EObject this_IgnoreValue_2 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:14907:2: ( (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue ) )
            // InternalSCTX.g:14908:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue )
            {
            // InternalSCTX.g:14908:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue )
            int alt429=3;
            alt429 = dfa429.predict(input);
            switch (alt429) {
                case 1 :
                    // InternalSCTX.g:14909:3: this_BoolExpression_0= ruleBoolExpression
=======
            // InternalSCTX.g:14356:2: ( (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue ) )
            // InternalSCTX.g:14357:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue )
            {
            // InternalSCTX.g:14357:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue )
            int alt418=3;
            alt418 = dfa418.predict(input);
            switch (alt418) {
                case 1 :
                    // InternalSCTX.g:14358:3: this_BoolExpression_0= ruleBoolExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVectorValueMemberAccess().getBoolExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolExpression_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoolExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:14921:3: this_ValuedExpression_1= ruleValuedExpression
=======
                    // InternalSCTX.g:14370:3: this_ValuedExpression_1= ruleValuedExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVectorValueMemberAccess().getValuedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedExpression_1=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
<<<<<<< HEAD
                    // InternalSCTX.g:14933:3: this_IgnoreValue_2= ruleIgnoreValue
=======
                    // InternalSCTX.g:14382:3: this_IgnoreValue_2= ruleIgnoreValue
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVectorValueMemberAccess().getIgnoreValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IgnoreValue_2=ruleIgnoreValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IgnoreValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVectorValueMember"


    // $ANTLR start "entryRuleIgnoreValue"
<<<<<<< HEAD
    // InternalSCTX.g:14948:1: entryRuleIgnoreValue returns [EObject current=null] : iv_ruleIgnoreValue= ruleIgnoreValue EOF ;
=======
    // InternalSCTX.g:14397:1: entryRuleIgnoreValue returns [EObject current=null] : iv_ruleIgnoreValue= ruleIgnoreValue EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleIgnoreValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIgnoreValue = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:14948:52: (iv_ruleIgnoreValue= ruleIgnoreValue EOF )
            // InternalSCTX.g:14949:2: iv_ruleIgnoreValue= ruleIgnoreValue EOF
=======
            // InternalSCTX.g:14397:52: (iv_ruleIgnoreValue= ruleIgnoreValue EOF )
            // InternalSCTX.g:14398:2: iv_ruleIgnoreValue= ruleIgnoreValue EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIgnoreValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIgnoreValue=ruleIgnoreValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIgnoreValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIgnoreValue"


    // $ANTLR start "ruleIgnoreValue"
<<<<<<< HEAD
    // InternalSCTX.g:14955:1: ruleIgnoreValue returns [EObject current=null] : ( () otherlv_1= '_' ) ;
=======
    // InternalSCTX.g:14404:1: ruleIgnoreValue returns [EObject current=null] : ( () otherlv_1= '_' ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleIgnoreValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:14961:2: ( ( () otherlv_1= '_' ) )
            // InternalSCTX.g:14962:2: ( () otherlv_1= '_' )
            {
            // InternalSCTX.g:14962:2: ( () otherlv_1= '_' )
            // InternalSCTX.g:14963:3: () otherlv_1= '_'
            {
            // InternalSCTX.g:14963:3: ()
            // InternalSCTX.g:14964:4: 
=======
            // InternalSCTX.g:14410:2: ( ( () otherlv_1= '_' ) )
            // InternalSCTX.g:14411:2: ( () otherlv_1= '_' )
            {
            // InternalSCTX.g:14411:2: ( () otherlv_1= '_' )
            // InternalSCTX.g:14412:3: () otherlv_1= '_'
            {
            // InternalSCTX.g:14412:3: ()
            // InternalSCTX.g:14413:4: 
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getIgnoreValueAccess().getIgnoreValueAction_0(),
              					current);
              			
            }

            }

<<<<<<< HEAD
            otherlv_1=(Token)match(input,103,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
            otherlv_1=(Token)match(input,99,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getIgnoreValueAccess().get_Keyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIgnoreValue"


    // $ANTLR start "entryRuleAnyValue"
<<<<<<< HEAD
    // InternalSCTX.g:14981:1: entryRuleAnyValue returns [EObject current=null] : iv_ruleAnyValue= ruleAnyValue EOF ;
=======
    // InternalSCTX.g:14430:1: entryRuleAnyValue returns [EObject current=null] : iv_ruleAnyValue= ruleAnyValue EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleAnyValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnyValue = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:14981:49: (iv_ruleAnyValue= ruleAnyValue EOF )
            // InternalSCTX.g:14982:2: iv_ruleAnyValue= ruleAnyValue EOF
=======
            // InternalSCTX.g:14430:49: (iv_ruleAnyValue= ruleAnyValue EOF )
            // InternalSCTX.g:14431:2: iv_ruleAnyValue= ruleAnyValue EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnyValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnyValue=ruleAnyValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnyValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnyValue"


    // $ANTLR start "ruleAnyValue"
<<<<<<< HEAD
    // InternalSCTX.g:14988:1: ruleAnyValue returns [EObject current=null] : (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue ) ;
=======
    // InternalSCTX.g:14437:1: ruleAnyValue returns [EObject current=null] : (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleAnyValue() throws RecognitionException {
        EObject current = null;

        EObject this_IntValue_0 = null;

        EObject this_FloatValue_1 = null;

        EObject this_BoolValue_2 = null;

        EObject this_StringValue_3 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:14994:2: ( (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue ) )
            // InternalSCTX.g:14995:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue )
            {
            // InternalSCTX.g:14995:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue )
            int alt430=4;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt430=1;
=======
            // InternalSCTX.g:14443:2: ( (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue ) )
            // InternalSCTX.g:14444:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue )
            {
            // InternalSCTX.g:14444:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue )
            int alt419=4;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt419=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case RULE_FLOAT:
                {
<<<<<<< HEAD
                alt430=2;
=======
                alt419=2;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case RULE_BOOLEAN:
                {
<<<<<<< HEAD
                alt430=3;
=======
                alt419=3;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case RULE_STRING:
                {
<<<<<<< HEAD
                alt430=4;
=======
                alt419=4;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
<<<<<<< HEAD
                    new NoViableAltException("", 430, 0, input);
=======
                    new NoViableAltException("", 419, 0, input);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                throw nvae;
            }

<<<<<<< HEAD
            switch (alt430) {
                case 1 :
                    // InternalSCTX.g:14996:3: this_IntValue_0= ruleIntValue
=======
            switch (alt419) {
                case 1 :
                    // InternalSCTX.g:14445:3: this_IntValue_0= ruleIntValue
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnyValueAccess().getIntValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IntValue_0=ruleIntValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IntValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:15008:3: this_FloatValue_1= ruleFloatValue
=======
                    // InternalSCTX.g:14457:3: this_FloatValue_1= ruleFloatValue
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnyValueAccess().getFloatValueParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FloatValue_1=ruleFloatValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FloatValue_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
<<<<<<< HEAD
                    // InternalSCTX.g:15020:3: this_BoolValue_2= ruleBoolValue
=======
                    // InternalSCTX.g:14469:3: this_BoolValue_2= ruleBoolValue
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnyValueAccess().getBoolValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolValue_2=ruleBoolValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoolValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
<<<<<<< HEAD
                    // InternalSCTX.g:15032:3: this_StringValue_3= ruleStringValue
=======
                    // InternalSCTX.g:14481:3: this_StringValue_3= ruleStringValue
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnyValueAccess().getStringValueParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringValue_3=ruleStringValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringValue_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnyValue"


    // $ANTLR start "entryRuleJsonObjectValue"
<<<<<<< HEAD
    // InternalSCTX.g:15047:1: entryRuleJsonObjectValue returns [EObject current=null] : iv_ruleJsonObjectValue= ruleJsonObjectValue EOF ;
=======
    // InternalSCTX.g:14496:1: entryRuleJsonObjectValue returns [EObject current=null] : iv_ruleJsonObjectValue= ruleJsonObjectValue EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleJsonObjectValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonObjectValue = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:15047:56: (iv_ruleJsonObjectValue= ruleJsonObjectValue EOF )
            // InternalSCTX.g:15048:2: iv_ruleJsonObjectValue= ruleJsonObjectValue EOF
=======
            // InternalSCTX.g:14496:56: (iv_ruleJsonObjectValue= ruleJsonObjectValue EOF )
            // InternalSCTX.g:14497:2: iv_ruleJsonObjectValue= ruleJsonObjectValue EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonObjectValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonObjectValue=ruleJsonObjectValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonObjectValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonObjectValue"


    // $ANTLR start "ruleJsonObjectValue"
<<<<<<< HEAD
    // InternalSCTX.g:15054:1: ruleJsonObjectValue returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' ) ;
=======
    // InternalSCTX.g:14503:1: ruleJsonObjectValue returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleJsonObjectValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_members_2_0 = null;

        EObject lv_members_4_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:15060:2: ( ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' ) )
            // InternalSCTX.g:15061:2: ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' )
            {
            // InternalSCTX.g:15061:2: ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' )
            // InternalSCTX.g:15062:3: () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}'
            {
            // InternalSCTX.g:15062:3: ()
            // InternalSCTX.g:15063:4: 
=======
            // InternalSCTX.g:14509:2: ( ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' ) )
            // InternalSCTX.g:14510:2: ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' )
            {
            // InternalSCTX.g:14510:2: ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' )
            // InternalSCTX.g:14511:3: () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}'
            {
            // InternalSCTX.g:14511:3: ()
            // InternalSCTX.g:14512:4: 
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getJsonObjectValueAccess().getJsonObjectValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,21,FollowSets000.FOLLOW_198); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJsonObjectValueAccess().getLeftCurlyBracketKeyword_1());
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:15076:3: ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )?
            int alt432=2;
            int LA432_0 = input.LA(1);

            if ( (LA432_0==RULE_STRING) ) {
                alt432=1;
            }
            switch (alt432) {
                case 1 :
                    // InternalSCTX.g:15077:4: ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )*
                    {
                    // InternalSCTX.g:15077:4: ( (lv_members_2_0= ruleJsonObjectMember ) )
                    // InternalSCTX.g:15078:5: (lv_members_2_0= ruleJsonObjectMember )
                    {
                    // InternalSCTX.g:15078:5: (lv_members_2_0= ruleJsonObjectMember )
                    // InternalSCTX.g:15079:6: lv_members_2_0= ruleJsonObjectMember
=======
            // InternalSCTX.g:14525:3: ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )?
            int alt421=2;
            int LA421_0 = input.LA(1);

            if ( (LA421_0==RULE_STRING) ) {
                alt421=1;
            }
            switch (alt421) {
                case 1 :
                    // InternalSCTX.g:14526:4: ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )*
                    {
                    // InternalSCTX.g:14526:4: ( (lv_members_2_0= ruleJsonObjectMember ) )
                    // InternalSCTX.g:14527:5: (lv_members_2_0= ruleJsonObjectMember )
                    {
                    // InternalSCTX.g:14527:5: (lv_members_2_0= ruleJsonObjectMember )
                    // InternalSCTX.g:14528:6: lv_members_2_0= ruleJsonObjectMember
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJsonObjectValueAccess().getMembersJsonObjectMemberParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_168);
                    lv_members_2_0=ruleJsonObjectMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJsonObjectValueRule());
                      						}
                      						add(
                      							current,
                      							"members",
                      							lv_members_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

<<<<<<< HEAD
                    // InternalSCTX.g:15096:4: (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )*
                    loop431:
                    do {
                        int alt431=2;
                        int LA431_0 = input.LA(1);

                        if ( (LA431_0==20) ) {
                            alt431=1;
                        }


                        switch (alt431) {
                    	case 1 :
                    	    // InternalSCTX.g:15097:5: otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) )
=======
                    // InternalSCTX.g:14545:4: (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )*
                    loop420:
                    do {
                        int alt420=2;
                        int LA420_0 = input.LA(1);

                        if ( (LA420_0==20) ) {
                            alt420=1;
                        }


                        switch (alt420) {
                    	case 1 :
                    	    // InternalSCTX.g:14546:5: otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    otherlv_3=(Token)match(input,20,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getJsonObjectValueAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
<<<<<<< HEAD
                    	    // InternalSCTX.g:15101:5: ( (lv_members_4_0= ruleJsonObjectMember ) )
                    	    // InternalSCTX.g:15102:6: (lv_members_4_0= ruleJsonObjectMember )
                    	    {
                    	    // InternalSCTX.g:15102:6: (lv_members_4_0= ruleJsonObjectMember )
                    	    // InternalSCTX.g:15103:7: lv_members_4_0= ruleJsonObjectMember
=======
                    	    // InternalSCTX.g:14550:5: ( (lv_members_4_0= ruleJsonObjectMember ) )
                    	    // InternalSCTX.g:14551:6: (lv_members_4_0= ruleJsonObjectMember )
                    	    {
                    	    // InternalSCTX.g:14551:6: (lv_members_4_0= ruleJsonObjectMember )
                    	    // InternalSCTX.g:14552:7: lv_members_4_0= ruleJsonObjectMember
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJsonObjectValueAccess().getMembersJsonObjectMemberParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_168);
                    	    lv_members_4_0=ruleJsonObjectMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJsonObjectValueRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"members",
                    	      								lv_members_4_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
<<<<<<< HEAD
                    	    break loop431;
=======
                    	    break loop420;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getJsonObjectValueAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonObjectValue"


    // $ANTLR start "entryRuleJsonObjectMember"
<<<<<<< HEAD
    // InternalSCTX.g:15130:1: entryRuleJsonObjectMember returns [EObject current=null] : iv_ruleJsonObjectMember= ruleJsonObjectMember EOF ;
=======
    // InternalSCTX.g:14579:1: entryRuleJsonObjectMember returns [EObject current=null] : iv_ruleJsonObjectMember= ruleJsonObjectMember EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleJsonObjectMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonObjectMember = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:15130:57: (iv_ruleJsonObjectMember= ruleJsonObjectMember EOF )
            // InternalSCTX.g:15131:2: iv_ruleJsonObjectMember= ruleJsonObjectMember EOF
=======
            // InternalSCTX.g:14579:57: (iv_ruleJsonObjectMember= ruleJsonObjectMember EOF )
            // InternalSCTX.g:14580:2: iv_ruleJsonObjectMember= ruleJsonObjectMember EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonObjectMemberRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonObjectMember=ruleJsonObjectMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonObjectMember; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonObjectMember"


    // $ANTLR start "ruleJsonObjectMember"
<<<<<<< HEAD
    // InternalSCTX.g:15137:1: ruleJsonObjectMember returns [EObject current=null] : ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) ) ;
=======
    // InternalSCTX.g:14586:1: ruleJsonObjectMember returns [EObject current=null] : ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleJsonObjectMember() throws RecognitionException {
        EObject current = null;

        Token lv_key_0_0=null;
        Token otherlv_1=null;
        EObject lv_value_2_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:15143:2: ( ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) ) )
            // InternalSCTX.g:15144:2: ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) )
            {
            // InternalSCTX.g:15144:2: ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) )
            // InternalSCTX.g:15145:3: ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) )
            {
            // InternalSCTX.g:15145:3: ( (lv_key_0_0= RULE_STRING ) )
            // InternalSCTX.g:15146:4: (lv_key_0_0= RULE_STRING )
            {
            // InternalSCTX.g:15146:4: (lv_key_0_0= RULE_STRING )
            // InternalSCTX.g:15147:5: lv_key_0_0= RULE_STRING
=======
            // InternalSCTX.g:14592:2: ( ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) ) )
            // InternalSCTX.g:14593:2: ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) )
            {
            // InternalSCTX.g:14593:2: ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) )
            // InternalSCTX.g:14594:3: ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) )
            {
            // InternalSCTX.g:14594:3: ( (lv_key_0_0= RULE_STRING ) )
            // InternalSCTX.g:14595:4: (lv_key_0_0= RULE_STRING )
            {
            // InternalSCTX.g:14595:4: (lv_key_0_0= RULE_STRING )
            // InternalSCTX.g:14596:5: lv_key_0_0= RULE_STRING
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            lv_key_0_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_key_0_0, grammarAccess.getJsonObjectMemberAccess().getKeySTRINGTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getJsonObjectMemberRule());
              					}
              					setWithLastConsumed(
              						current,
              						"key",
              						lv_key_0_0,
              						"de.cau.cs.kieler.annotations.Annotations.STRING");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,48,FollowSets000.FOLLOW_199); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJsonObjectMemberAccess().getColonKeyword_1());
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:15167:3: ( (lv_value_2_0= ruleJsonValue ) )
            // InternalSCTX.g:15168:4: (lv_value_2_0= ruleJsonValue )
            {
            // InternalSCTX.g:15168:4: (lv_value_2_0= ruleJsonValue )
            // InternalSCTX.g:15169:5: lv_value_2_0= ruleJsonValue
=======
            // InternalSCTX.g:14616:3: ( (lv_value_2_0= ruleJsonValue ) )
            // InternalSCTX.g:14617:4: (lv_value_2_0= ruleJsonValue )
            {
            // InternalSCTX.g:14617:4: (lv_value_2_0= ruleJsonValue )
            // InternalSCTX.g:14618:5: lv_value_2_0= ruleJsonValue
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJsonObjectMemberAccess().getValueJsonValueParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_value_2_0=ruleJsonValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJsonObjectMemberRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.JsonValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonObjectMember"


    // $ANTLR start "entryRuleJsonArrayValue"
<<<<<<< HEAD
    // InternalSCTX.g:15190:1: entryRuleJsonArrayValue returns [EObject current=null] : iv_ruleJsonArrayValue= ruleJsonArrayValue EOF ;
=======
    // InternalSCTX.g:14639:1: entryRuleJsonArrayValue returns [EObject current=null] : iv_ruleJsonArrayValue= ruleJsonArrayValue EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleJsonArrayValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonArrayValue = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:15190:55: (iv_ruleJsonArrayValue= ruleJsonArrayValue EOF )
            // InternalSCTX.g:15191:2: iv_ruleJsonArrayValue= ruleJsonArrayValue EOF
=======
            // InternalSCTX.g:14639:55: (iv_ruleJsonArrayValue= ruleJsonArrayValue EOF )
            // InternalSCTX.g:14640:2: iv_ruleJsonArrayValue= ruleJsonArrayValue EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonArrayValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonArrayValue=ruleJsonArrayValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonArrayValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonArrayValue"


    // $ANTLR start "ruleJsonArrayValue"
<<<<<<< HEAD
    // InternalSCTX.g:15197:1: ruleJsonArrayValue returns [EObject current=null] : ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' ) ;
=======
    // InternalSCTX.g:14646:1: ruleJsonArrayValue returns [EObject current=null] : ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleJsonArrayValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_4_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:15203:2: ( ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' ) )
            // InternalSCTX.g:15204:2: ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' )
            {
            // InternalSCTX.g:15204:2: ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' )
            // InternalSCTX.g:15205:3: () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']'
            {
            // InternalSCTX.g:15205:3: ()
            // InternalSCTX.g:15206:4: 
=======
            // InternalSCTX.g:14652:2: ( ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' ) )
            // InternalSCTX.g:14653:2: ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' )
            {
            // InternalSCTX.g:14653:2: ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' )
            // InternalSCTX.g:14654:3: () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']'
            {
            // InternalSCTX.g:14654:3: ()
            // InternalSCTX.g:14655:4: 
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getJsonArrayValueAccess().getJsonArrayValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,36,FollowSets000.FOLLOW_200); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJsonArrayValueAccess().getLeftSquareBracketKeyword_1());
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:15219:3: ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )?
            int alt434=2;
            int LA434_0 = input.LA(1);

            if ( (LA434_0==RULE_STRING||(LA434_0>=RULE_INT && LA434_0<=RULE_FLOAT)||LA434_0==RULE_BOOLEAN||LA434_0==21||LA434_0==36||LA434_0==104) ) {
                alt434=1;
            }
            switch (alt434) {
                case 1 :
                    // InternalSCTX.g:15220:4: ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )*
                    {
                    // InternalSCTX.g:15220:4: ( (lv_elements_2_0= ruleJsonValue ) )
                    // InternalSCTX.g:15221:5: (lv_elements_2_0= ruleJsonValue )
                    {
                    // InternalSCTX.g:15221:5: (lv_elements_2_0= ruleJsonValue )
                    // InternalSCTX.g:15222:6: lv_elements_2_0= ruleJsonValue
=======
            // InternalSCTX.g:14668:3: ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )?
            int alt423=2;
            int LA423_0 = input.LA(1);

            if ( (LA423_0==RULE_STRING||(LA423_0>=RULE_INT && LA423_0<=RULE_FLOAT)||LA423_0==RULE_BOOLEAN||LA423_0==21||LA423_0==36||LA423_0==100) ) {
                alt423=1;
            }
            switch (alt423) {
                case 1 :
                    // InternalSCTX.g:14669:4: ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )*
                    {
                    // InternalSCTX.g:14669:4: ( (lv_elements_2_0= ruleJsonValue ) )
                    // InternalSCTX.g:14670:5: (lv_elements_2_0= ruleJsonValue )
                    {
                    // InternalSCTX.g:14670:5: (lv_elements_2_0= ruleJsonValue )
                    // InternalSCTX.g:14671:6: lv_elements_2_0= ruleJsonValue
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJsonArrayValueAccess().getElementsJsonValueParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_201);
                    lv_elements_2_0=ruleJsonValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJsonArrayValueRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.JsonValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

<<<<<<< HEAD
                    // InternalSCTX.g:15239:4: (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )*
                    loop433:
                    do {
                        int alt433=2;
                        int LA433_0 = input.LA(1);

                        if ( (LA433_0==20) ) {
                            alt433=1;
                        }


                        switch (alt433) {
                    	case 1 :
                    	    // InternalSCTX.g:15240:5: otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) )
=======
                    // InternalSCTX.g:14688:4: (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )*
                    loop422:
                    do {
                        int alt422=2;
                        int LA422_0 = input.LA(1);

                        if ( (LA422_0==20) ) {
                            alt422=1;
                        }


                        switch (alt422) {
                    	case 1 :
                    	    // InternalSCTX.g:14689:5: otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    otherlv_3=(Token)match(input,20,FollowSets000.FOLLOW_199); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getJsonArrayValueAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
<<<<<<< HEAD
                    	    // InternalSCTX.g:15244:5: ( (lv_elements_4_0= ruleJsonValue ) )
                    	    // InternalSCTX.g:15245:6: (lv_elements_4_0= ruleJsonValue )
                    	    {
                    	    // InternalSCTX.g:15245:6: (lv_elements_4_0= ruleJsonValue )
                    	    // InternalSCTX.g:15246:7: lv_elements_4_0= ruleJsonValue
=======
                    	    // InternalSCTX.g:14693:5: ( (lv_elements_4_0= ruleJsonValue ) )
                    	    // InternalSCTX.g:14694:6: (lv_elements_4_0= ruleJsonValue )
                    	    {
                    	    // InternalSCTX.g:14694:6: (lv_elements_4_0= ruleJsonValue )
                    	    // InternalSCTX.g:14695:7: lv_elements_4_0= ruleJsonValue
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJsonArrayValueAccess().getElementsJsonValueParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_201);
                    	    lv_elements_4_0=ruleJsonValue();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJsonArrayValueRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_4_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.JsonValue");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
<<<<<<< HEAD
                    	    break loop433;
=======
                    	    break loop422;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getJsonArrayValueAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonArrayValue"


    // $ANTLR start "entryRuleJsonValue"
<<<<<<< HEAD
    // InternalSCTX.g:15273:1: entryRuleJsonValue returns [EObject current=null] : iv_ruleJsonValue= ruleJsonValue EOF ;
=======
    // InternalSCTX.g:14722:1: entryRuleJsonValue returns [EObject current=null] : iv_ruleJsonValue= ruleJsonValue EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleJsonValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonValue = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:15273:50: (iv_ruleJsonValue= ruleJsonValue EOF )
            // InternalSCTX.g:15274:2: iv_ruleJsonValue= ruleJsonValue EOF
=======
            // InternalSCTX.g:14722:50: (iv_ruleJsonValue= ruleJsonValue EOF )
            // InternalSCTX.g:14723:2: iv_ruleJsonValue= ruleJsonValue EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonValue=ruleJsonValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonValue"


    // $ANTLR start "ruleJsonValue"
<<<<<<< HEAD
    // InternalSCTX.g:15280:1: ruleJsonValue returns [EObject current=null] : (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue ) ;
=======
    // InternalSCTX.g:14729:1: ruleJsonValue returns [EObject current=null] : (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleJsonValue() throws RecognitionException {
        EObject current = null;

        EObject this_JsonObjectValue_0 = null;

        EObject this_JsonArrayValue_1 = null;

        EObject this_NullValue_2 = null;

        EObject this_AnyValue_3 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:15286:2: ( (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue ) )
            // InternalSCTX.g:15287:2: (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue )
            {
            // InternalSCTX.g:15287:2: (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue )
            int alt435=4;
            switch ( input.LA(1) ) {
            case 21:
                {
                alt435=1;
=======
            // InternalSCTX.g:14735:2: ( (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue ) )
            // InternalSCTX.g:14736:2: (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue )
            {
            // InternalSCTX.g:14736:2: (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue )
            int alt424=4;
            switch ( input.LA(1) ) {
            case 21:
                {
                alt424=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case 36:
                {
<<<<<<< HEAD
                alt435=2;
                }
                break;
            case 104:
                {
                alt435=3;
=======
                alt424=2;
                }
                break;
            case 100:
                {
                alt424=3;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case RULE_STRING:
            case RULE_INT:
            case RULE_FLOAT:
            case RULE_BOOLEAN:
                {
<<<<<<< HEAD
                alt435=4;
=======
                alt424=4;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
<<<<<<< HEAD
                    new NoViableAltException("", 435, 0, input);
=======
                    new NoViableAltException("", 424, 0, input);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                throw nvae;
            }

<<<<<<< HEAD
            switch (alt435) {
                case 1 :
                    // InternalSCTX.g:15288:3: this_JsonObjectValue_0= ruleJsonObjectValue
=======
            switch (alt424) {
                case 1 :
                    // InternalSCTX.g:14737:3: this_JsonObjectValue_0= ruleJsonObjectValue
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJsonValueAccess().getJsonObjectValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JsonObjectValue_0=ruleJsonObjectValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JsonObjectValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:15300:3: this_JsonArrayValue_1= ruleJsonArrayValue
=======
                    // InternalSCTX.g:14749:3: this_JsonArrayValue_1= ruleJsonArrayValue
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJsonValueAccess().getJsonArrayValueParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JsonArrayValue_1=ruleJsonArrayValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JsonArrayValue_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
<<<<<<< HEAD
                    // InternalSCTX.g:15312:3: this_NullValue_2= ruleNullValue
=======
                    // InternalSCTX.g:14761:3: this_NullValue_2= ruleNullValue
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJsonValueAccess().getNullValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NullValue_2=ruleNullValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NullValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
<<<<<<< HEAD
                    // InternalSCTX.g:15324:3: this_AnyValue_3= ruleAnyValue
=======
                    // InternalSCTX.g:14773:3: this_AnyValue_3= ruleAnyValue
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJsonValueAccess().getAnyValueParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AnyValue_3=ruleAnyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AnyValue_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonValue"


    // $ANTLR start "entryRuleNullValue"
<<<<<<< HEAD
    // InternalSCTX.g:15339:1: entryRuleNullValue returns [EObject current=null] : iv_ruleNullValue= ruleNullValue EOF ;
=======
    // InternalSCTX.g:14788:1: entryRuleNullValue returns [EObject current=null] : iv_ruleNullValue= ruleNullValue EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleNullValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNullValue = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:15339:50: (iv_ruleNullValue= ruleNullValue EOF )
            // InternalSCTX.g:15340:2: iv_ruleNullValue= ruleNullValue EOF
=======
            // InternalSCTX.g:14788:50: (iv_ruleNullValue= ruleNullValue EOF )
            // InternalSCTX.g:14789:2: iv_ruleNullValue= ruleNullValue EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNullValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNullValue=ruleNullValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNullValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNullValue"


    // $ANTLR start "ruleNullValue"
<<<<<<< HEAD
    // InternalSCTX.g:15346:1: ruleNullValue returns [EObject current=null] : ( () otherlv_1= 'null' ) ;
=======
    // InternalSCTX.g:14795:1: ruleNullValue returns [EObject current=null] : ( () otherlv_1= 'null' ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleNullValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:15352:2: ( ( () otherlv_1= 'null' ) )
            // InternalSCTX.g:15353:2: ( () otherlv_1= 'null' )
            {
            // InternalSCTX.g:15353:2: ( () otherlv_1= 'null' )
            // InternalSCTX.g:15354:3: () otherlv_1= 'null'
            {
            // InternalSCTX.g:15354:3: ()
            // InternalSCTX.g:15355:4: 
=======
            // InternalSCTX.g:14801:2: ( ( () otherlv_1= 'null' ) )
            // InternalSCTX.g:14802:2: ( () otherlv_1= 'null' )
            {
            // InternalSCTX.g:14802:2: ( () otherlv_1= 'null' )
            // InternalSCTX.g:14803:3: () otherlv_1= 'null'
            {
            // InternalSCTX.g:14803:3: ()
            // InternalSCTX.g:14804:4: 
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getNullValueAccess().getNullValueAction_0(),
              					current);
              			
            }

            }

<<<<<<< HEAD
            otherlv_1=(Token)match(input,104,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
            otherlv_1=(Token)match(input,100,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getNullValueAccess().getNullKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNullValue"


    // $ANTLR start "entryRuleJsonPragma"
<<<<<<< HEAD
    // InternalSCTX.g:15372:1: entryRuleJsonPragma returns [EObject current=null] : iv_ruleJsonPragma= ruleJsonPragma EOF ;
=======
    // InternalSCTX.g:14821:1: entryRuleJsonPragma returns [EObject current=null] : iv_ruleJsonPragma= ruleJsonPragma EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleJsonPragma() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonPragma = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:15372:51: (iv_ruleJsonPragma= ruleJsonPragma EOF )
            // InternalSCTX.g:15373:2: iv_ruleJsonPragma= ruleJsonPragma EOF
=======
            // InternalSCTX.g:14821:51: (iv_ruleJsonPragma= ruleJsonPragma EOF )
            // InternalSCTX.g:14822:2: iv_ruleJsonPragma= ruleJsonPragma EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonPragma=ruleJsonPragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonPragma; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonPragma"


    // $ANTLR start "ruleJsonPragma"
<<<<<<< HEAD
    // InternalSCTX.g:15379:1: ruleJsonPragma returns [EObject current=null] : (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) ) ;
=======
    // InternalSCTX.g:14828:1: ruleJsonPragma returns [EObject current=null] : (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleJsonPragma() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_value_2_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:15385:2: ( (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) ) )
            // InternalSCTX.g:15386:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) )
            {
            // InternalSCTX.g:15386:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) )
            // InternalSCTX.g:15387:3: otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) )
            {
            otherlv_0=(Token)match(input,105,FollowSets000.FOLLOW_4); if (state.failed) return current;
=======
            // InternalSCTX.g:14834:2: ( (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) ) )
            // InternalSCTX.g:14835:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) )
            {
            // InternalSCTX.g:14835:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) )
            // InternalSCTX.g:14836:3: otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) )
            {
            otherlv_0=(Token)match(input,101,FollowSets000.FOLLOW_4); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJsonPragmaAccess().getNumberSignKeyword_0());
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:15391:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:15392:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:15392:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:15393:5: lv_name_1_0= ruleExtendedID
=======
            // InternalSCTX.g:14840:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:14841:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:14841:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:14842:5: lv_name_1_0= ruleExtendedID
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJsonPragmaAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_99);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJsonPragmaRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

<<<<<<< HEAD
            // InternalSCTX.g:15410:3: ( (lv_value_2_0= ruleJsonObjectValue ) )
            // InternalSCTX.g:15411:4: (lv_value_2_0= ruleJsonObjectValue )
            {
            // InternalSCTX.g:15411:4: (lv_value_2_0= ruleJsonObjectValue )
            // InternalSCTX.g:15412:5: lv_value_2_0= ruleJsonObjectValue
=======
            // InternalSCTX.g:14859:3: ( (lv_value_2_0= ruleJsonObjectValue ) )
            // InternalSCTX.g:14860:4: (lv_value_2_0= ruleJsonObjectValue )
            {
            // InternalSCTX.g:14860:4: (lv_value_2_0= ruleJsonObjectValue )
            // InternalSCTX.g:14861:5: lv_value_2_0= ruleJsonObjectValue
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJsonPragmaAccess().getValueJsonObjectValueParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_value_2_0=ruleJsonObjectValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJsonPragmaRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonPragma"


    // $ANTLR start "entryRuleJsonAnnotation"
<<<<<<< HEAD
    // InternalSCTX.g:15433:1: entryRuleJsonAnnotation returns [EObject current=null] : iv_ruleJsonAnnotation= ruleJsonAnnotation EOF ;
=======
    // InternalSCTX.g:14882:1: entryRuleJsonAnnotation returns [EObject current=null] : iv_ruleJsonAnnotation= ruleJsonAnnotation EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleJsonAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonAnnotation = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:15433:55: (iv_ruleJsonAnnotation= ruleJsonAnnotation EOF )
            // InternalSCTX.g:15434:2: iv_ruleJsonAnnotation= ruleJsonAnnotation EOF
=======
            // InternalSCTX.g:14882:55: (iv_ruleJsonAnnotation= ruleJsonAnnotation EOF )
            // InternalSCTX.g:14883:2: iv_ruleJsonAnnotation= ruleJsonAnnotation EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonAnnotation=ruleJsonAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonAnnotation"


    // $ANTLR start "ruleJsonAnnotation"
<<<<<<< HEAD
    // InternalSCTX.g:15440:1: ruleJsonAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) ) ;
=======
    // InternalSCTX.g:14889:1: ruleJsonAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleJsonAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_value_2_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:15446:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) ) )
            // InternalSCTX.g:15447:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) )
            {
            // InternalSCTX.g:15447:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) )
            // InternalSCTX.g:15448:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) )
            {
            otherlv_0=(Token)match(input,106,FollowSets000.FOLLOW_4); if (state.failed) return current;
=======
            // InternalSCTX.g:14895:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) ) )
            // InternalSCTX.g:14896:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) )
            {
            // InternalSCTX.g:14896:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) )
            // InternalSCTX.g:14897:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) )
            {
            otherlv_0=(Token)match(input,102,FollowSets000.FOLLOW_4); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJsonAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:15452:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:15453:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:15453:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:15454:5: lv_name_1_0= ruleExtendedID
=======
            // InternalSCTX.g:14901:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:14902:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:14902:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:14903:5: lv_name_1_0= ruleExtendedID
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJsonAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_99);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJsonAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

<<<<<<< HEAD
            // InternalSCTX.g:15471:3: ( (lv_value_2_0= ruleJsonObjectValue ) )
            // InternalSCTX.g:15472:4: (lv_value_2_0= ruleJsonObjectValue )
            {
            // InternalSCTX.g:15472:4: (lv_value_2_0= ruleJsonObjectValue )
            // InternalSCTX.g:15473:5: lv_value_2_0= ruleJsonObjectValue
=======
            // InternalSCTX.g:14920:3: ( (lv_value_2_0= ruleJsonObjectValue ) )
            // InternalSCTX.g:14921:4: (lv_value_2_0= ruleJsonObjectValue )
            {
            // InternalSCTX.g:14921:4: (lv_value_2_0= ruleJsonObjectValue )
            // InternalSCTX.g:14922:5: lv_value_2_0= ruleJsonObjectValue
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJsonAnnotationAccess().getValueJsonObjectValueParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_value_2_0=ruleJsonObjectValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJsonAnnotationRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonAnnotation"


    // $ANTLR start "entryRulePragma"
<<<<<<< HEAD
    // InternalSCTX.g:15494:1: entryRulePragma returns [EObject current=null] : iv_rulePragma= rulePragma EOF ;
=======
    // InternalSCTX.g:14943:1: entryRulePragma returns [EObject current=null] : iv_rulePragma= rulePragma EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRulePragma() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePragma = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:15494:47: (iv_rulePragma= rulePragma EOF )
            // InternalSCTX.g:15495:2: iv_rulePragma= rulePragma EOF
=======
            // InternalSCTX.g:14943:47: (iv_rulePragma= rulePragma EOF )
            // InternalSCTX.g:14944:2: iv_rulePragma= rulePragma EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePragma=rulePragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePragma; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePragma"


    // $ANTLR start "rulePragma"
<<<<<<< HEAD
    // InternalSCTX.g:15501:1: rulePragma returns [EObject current=null] : (this_Pragma_0= superPragma | this_JsonPragma_1= ruleJsonPragma ) ;
=======
    // InternalSCTX.g:14950:1: rulePragma returns [EObject current=null] : (this_Pragma_0= superPragma | this_JsonPragma_1= ruleJsonPragma ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject rulePragma() throws RecognitionException {
        EObject current = null;

        EObject this_Pragma_0 = null;

        EObject this_JsonPragma_1 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:15507:2: ( (this_Pragma_0= superPragma | this_JsonPragma_1= ruleJsonPragma ) )
            // InternalSCTX.g:15508:2: (this_Pragma_0= superPragma | this_JsonPragma_1= ruleJsonPragma )
            {
            // InternalSCTX.g:15508:2: (this_Pragma_0= superPragma | this_JsonPragma_1= ruleJsonPragma )
            int alt436=2;
            alt436 = dfa436.predict(input);
            switch (alt436) {
                case 1 :
                    // InternalSCTX.g:15509:3: this_Pragma_0= superPragma
=======
            // InternalSCTX.g:14956:2: ( (this_Pragma_0= superPragma | this_JsonPragma_1= ruleJsonPragma ) )
            // InternalSCTX.g:14957:2: (this_Pragma_0= superPragma | this_JsonPragma_1= ruleJsonPragma )
            {
            // InternalSCTX.g:14957:2: (this_Pragma_0= superPragma | this_JsonPragma_1= ruleJsonPragma )
            int alt425=2;
            alt425 = dfa425.predict(input);
            switch (alt425) {
                case 1 :
                    // InternalSCTX.g:14958:3: this_Pragma_0= superPragma
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPragmaAccess().getPragmaParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Pragma_0=superPragma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Pragma_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:15521:3: this_JsonPragma_1= ruleJsonPragma
=======
                    // InternalSCTX.g:14970:3: this_JsonPragma_1= ruleJsonPragma
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPragmaAccess().getJsonPragmaParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JsonPragma_1=ruleJsonPragma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JsonPragma_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePragma"


    // $ANTLR start "entryRuleAnnotation"
<<<<<<< HEAD
    // InternalSCTX.g:15536:1: entryRuleAnnotation returns [EObject current=null] : iv_ruleAnnotation= ruleAnnotation EOF ;
=======
    // InternalSCTX.g:14985:1: entryRuleAnnotation returns [EObject current=null] : iv_ruleAnnotation= ruleAnnotation EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotation = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:15536:51: (iv_ruleAnnotation= ruleAnnotation EOF )
            // InternalSCTX.g:15537:2: iv_ruleAnnotation= ruleAnnotation EOF
=======
            // InternalSCTX.g:14985:51: (iv_ruleAnnotation= ruleAnnotation EOF )
            // InternalSCTX.g:14986:2: iv_ruleAnnotation= ruleAnnotation EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotation"


    // $ANTLR start "ruleAnnotation"
<<<<<<< HEAD
    // InternalSCTX.g:15543:1: ruleAnnotation returns [EObject current=null] : (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation ) ;
=======
    // InternalSCTX.g:14992:1: ruleAnnotation returns [EObject current=null] : (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_Annotation_0 = null;

        EObject this_JsonAnnotation_1 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:15549:2: ( (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation ) )
            // InternalSCTX.g:15550:2: (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )
            {
            // InternalSCTX.g:15550:2: (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )
            int alt437=2;
            alt437 = dfa437.predict(input);
            switch (alt437) {
                case 1 :
                    // InternalSCTX.g:15551:3: this_Annotation_0= superAnnotation
=======
            // InternalSCTX.g:14998:2: ( (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation ) )
            // InternalSCTX.g:14999:2: (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )
            {
            // InternalSCTX.g:14999:2: (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )
            int alt426=2;
            alt426 = dfa426.predict(input);
            switch (alt426) {
                case 1 :
                    // InternalSCTX.g:15000:3: this_Annotation_0= superAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationAccess().getAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Annotation_0=superAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Annotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:15563:3: this_JsonAnnotation_1= ruleJsonAnnotation
=======
                    // InternalSCTX.g:15012:3: this_JsonAnnotation_1= ruleJsonAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationAccess().getJsonAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JsonAnnotation_1=ruleJsonAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JsonAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotation"


    // $ANTLR start "entryRuleQuotedStringAnnotation"
<<<<<<< HEAD
    // InternalSCTX.g:15578:1: entryRuleQuotedStringAnnotation returns [EObject current=null] : iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF ;
=======
    // InternalSCTX.g:15027:1: entryRuleQuotedStringAnnotation returns [EObject current=null] : iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedStringAnnotation = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:15578:63: (iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF )
            // InternalSCTX.g:15579:2: iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF
=======
            // InternalSCTX.g:15027:63: (iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF )
            // InternalSCTX.g:15028:2: iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedStringAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedStringAnnotation=ruleQuotedStringAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedStringAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedStringAnnotation"


    // $ANTLR start "ruleQuotedStringAnnotation"
<<<<<<< HEAD
    // InternalSCTX.g:15585:1: ruleQuotedStringAnnotation returns [EObject current=null] : (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation ) ;
=======
    // InternalSCTX.g:15034:1: ruleQuotedStringAnnotation returns [EObject current=null] : (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_QuotedStringAnnotation_0 = null;

        EObject this_JsonAnnotation_1 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:15591:2: ( (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation ) )
            // InternalSCTX.g:15592:2: (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )
            {
            // InternalSCTX.g:15592:2: (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )
            int alt438=2;
            alt438 = dfa438.predict(input);
            switch (alt438) {
                case 1 :
                    // InternalSCTX.g:15593:3: this_QuotedStringAnnotation_0= superQuotedStringAnnotation
=======
            // InternalSCTX.g:15040:2: ( (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation ) )
            // InternalSCTX.g:15041:2: (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )
            {
            // InternalSCTX.g:15041:2: (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )
            int alt427=2;
            alt427 = dfa427.predict(input);
            switch (alt427) {
                case 1 :
                    // InternalSCTX.g:15042:3: this_QuotedStringAnnotation_0= superQuotedStringAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getQuotedStringAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QuotedStringAnnotation_0=superQuotedStringAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_QuotedStringAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:15605:3: this_JsonAnnotation_1= ruleJsonAnnotation
=======
                    // InternalSCTX.g:15054:3: this_JsonAnnotation_1= ruleJsonAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getJsonAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JsonAnnotation_1=ruleJsonAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JsonAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedStringAnnotation"


    // $ANTLR start "entrySuperAnnotation"
<<<<<<< HEAD
    // InternalSCTX.g:15620:1: entrySuperAnnotation returns [EObject current=null] : iv_superAnnotation= superAnnotation EOF ;
=======
    // InternalSCTX.g:15069:1: entrySuperAnnotation returns [EObject current=null] : iv_superAnnotation= superAnnotation EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entrySuperAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_superAnnotation = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:15620:52: (iv_superAnnotation= superAnnotation EOF )
            // InternalSCTX.g:15621:2: iv_superAnnotation= superAnnotation EOF
=======
            // InternalSCTX.g:15069:52: (iv_superAnnotation= superAnnotation EOF )
            // InternalSCTX.g:15070:2: iv_superAnnotation= superAnnotation EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationsAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_superAnnotation=superAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperAnnotation"


    // $ANTLR start "superAnnotation"
<<<<<<< HEAD
    // InternalSCTX.g:15627:1: superAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) ;
=======
    // InternalSCTX.g:15076:1: superAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject superAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_KeyStringValueAnnotation_1 = null;

        EObject this_TypedKeyStringValueAnnotation_2 = null;

        EObject this_TagAnnotation_3 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:15633:2: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) )
            // InternalSCTX.g:15634:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            {
            // InternalSCTX.g:15634:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            int alt439=4;
            int LA439_0 = input.LA(1);

            if ( (LA439_0==RULE_COMMENT_ANNOTATION) ) {
                alt439=1;
            }
            else if ( (LA439_0==106) ) {
                int LA439_2 = input.LA(2);

                if ( (synpred494_InternalSCTX()) ) {
                    alt439=2;
                }
                else if ( (synpred495_InternalSCTX()) ) {
                    alt439=3;
                }
                else if ( (true) ) {
                    alt439=4;
=======
            // InternalSCTX.g:15082:2: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) )
            // InternalSCTX.g:15083:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            {
            // InternalSCTX.g:15083:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            int alt428=4;
            int LA428_0 = input.LA(1);

            if ( (LA428_0==RULE_COMMENT_ANNOTATION) ) {
                alt428=1;
            }
            else if ( (LA428_0==102) ) {
                int LA428_2 = input.LA(2);

                if ( (synpred481_InternalSCTX()) ) {
                    alt428=2;
                }
                else if ( (synpred482_InternalSCTX()) ) {
                    alt428=3;
                }
                else if ( (true) ) {
                    alt428=4;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
<<<<<<< HEAD
                        new NoViableAltException("", 439, 2, input);
=======
                        new NoViableAltException("", 428, 2, input);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
<<<<<<< HEAD
                    new NoViableAltException("", 439, 0, input);

                throw nvae;
            }
            switch (alt439) {
                case 1 :
                    // InternalSCTX.g:15635:3: this_CommentAnnotation_0= ruleCommentAnnotation
=======
                    new NoViableAltException("", 428, 0, input);

                throw nvae;
            }
            switch (alt428) {
                case 1 :
                    // InternalSCTX.g:15084:3: this_CommentAnnotation_0= ruleCommentAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsAnnotationAccess().getCommentAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CommentAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:15647:3: this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation
=======
                    // InternalSCTX.g:15096:3: this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_KeyStringValueAnnotation_1=ruleKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_KeyStringValueAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
<<<<<<< HEAD
                    // InternalSCTX.g:15659:3: this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation
=======
                    // InternalSCTX.g:15108:3: this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypedKeyStringValueAnnotation_2=ruleTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypedKeyStringValueAnnotation_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
<<<<<<< HEAD
                    // InternalSCTX.g:15671:3: this_TagAnnotation_3= ruleTagAnnotation
=======
                    // InternalSCTX.g:15120:3: this_TagAnnotation_3= ruleTagAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsAnnotationAccess().getTagAnnotationParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TagAnnotation_3=ruleTagAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TagAnnotation_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superAnnotation"


    // $ANTLR start "entrySuperPragma"
<<<<<<< HEAD
    // InternalSCTX.g:15686:1: entrySuperPragma returns [EObject current=null] : iv_superPragma= superPragma EOF ;
=======
    // InternalSCTX.g:15135:1: entrySuperPragma returns [EObject current=null] : iv_superPragma= superPragma EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entrySuperPragma() throws RecognitionException {
        EObject current = null;

        EObject iv_superPragma = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:15686:48: (iv_superPragma= superPragma EOF )
            // InternalSCTX.g:15687:2: iv_superPragma= superPragma EOF
=======
            // InternalSCTX.g:15135:48: (iv_superPragma= superPragma EOF )
            // InternalSCTX.g:15136:2: iv_superPragma= superPragma EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationsPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_superPragma=superPragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superPragma; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperPragma"


    // $ANTLR start "superPragma"
<<<<<<< HEAD
    // InternalSCTX.g:15693:1: superPragma returns [EObject current=null] : (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag ) ;
=======
    // InternalSCTX.g:15142:1: superPragma returns [EObject current=null] : (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject superPragma() throws RecognitionException {
        EObject current = null;

        EObject this_StringPragma_0 = null;

        EObject this_PragmaTag_1 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:15699:2: ( (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag ) )
            // InternalSCTX.g:15700:2: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )
            {
            // InternalSCTX.g:15700:2: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )
            int alt440=2;
            alt440 = dfa440.predict(input);
            switch (alt440) {
                case 1 :
                    // InternalSCTX.g:15701:3: this_StringPragma_0= ruleStringPragma
=======
            // InternalSCTX.g:15148:2: ( (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag ) )
            // InternalSCTX.g:15149:2: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )
            {
            // InternalSCTX.g:15149:2: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )
            int alt429=2;
            alt429 = dfa429.predict(input);
            switch (alt429) {
                case 1 :
                    // InternalSCTX.g:15150:3: this_StringPragma_0= ruleStringPragma
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsPragmaAccess().getStringPragmaParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringPragma_0=ruleStringPragma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringPragma_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:15713:3: this_PragmaTag_1= rulePragmaTag
=======
                    // InternalSCTX.g:15162:3: this_PragmaTag_1= rulePragmaTag
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsPragmaAccess().getPragmaTagParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PragmaTag_1=rulePragmaTag();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PragmaTag_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superPragma"


    // $ANTLR start "entrySuperValuedAnnotation"
<<<<<<< HEAD
    // InternalSCTX.g:15728:1: entrySuperValuedAnnotation returns [EObject current=null] : iv_superValuedAnnotation= superValuedAnnotation EOF ;
=======
    // InternalSCTX.g:15177:1: entrySuperValuedAnnotation returns [EObject current=null] : iv_superValuedAnnotation= superValuedAnnotation EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entrySuperValuedAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_superValuedAnnotation = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:15728:58: (iv_superValuedAnnotation= superValuedAnnotation EOF )
            // InternalSCTX.g:15729:2: iv_superValuedAnnotation= superValuedAnnotation EOF
=======
            // InternalSCTX.g:15177:58: (iv_superValuedAnnotation= superValuedAnnotation EOF )
            // InternalSCTX.g:15178:2: iv_superValuedAnnotation= superValuedAnnotation EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationsValuedAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_superValuedAnnotation=superValuedAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superValuedAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperValuedAnnotation"


    // $ANTLR start "superValuedAnnotation"
<<<<<<< HEAD
    // InternalSCTX.g:15735:1: superValuedAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation ) ;
=======
    // InternalSCTX.g:15184:1: superValuedAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject superValuedAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_KeyStringValueAnnotation_1 = null;

        EObject this_TypedKeyStringValueAnnotation_2 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:15741:2: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation ) )
            // InternalSCTX.g:15742:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation )
            {
            // InternalSCTX.g:15742:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation )
            int alt441=3;
            alt441 = dfa441.predict(input);
            switch (alt441) {
                case 1 :
                    // InternalSCTX.g:15743:3: this_CommentAnnotation_0= ruleCommentAnnotation
=======
            // InternalSCTX.g:15190:2: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation ) )
            // InternalSCTX.g:15191:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation )
            {
            // InternalSCTX.g:15191:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation )
            int alt430=3;
            alt430 = dfa430.predict(input);
            switch (alt430) {
                case 1 :
                    // InternalSCTX.g:15192:3: this_CommentAnnotation_0= ruleCommentAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsValuedAnnotationAccess().getCommentAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CommentAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:15755:3: this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation
=======
                    // InternalSCTX.g:15204:3: this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsValuedAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_KeyStringValueAnnotation_1=ruleKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_KeyStringValueAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
<<<<<<< HEAD
                    // InternalSCTX.g:15767:3: this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation
=======
                    // InternalSCTX.g:15216:3: this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsValuedAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypedKeyStringValueAnnotation_2=ruleTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypedKeyStringValueAnnotation_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superValuedAnnotation"


    // $ANTLR start "entryRuleRestrictedTypeAnnotation"
<<<<<<< HEAD
    // InternalSCTX.g:15782:1: entryRuleRestrictedTypeAnnotation returns [EObject current=null] : iv_ruleRestrictedTypeAnnotation= ruleRestrictedTypeAnnotation EOF ;
=======
    // InternalSCTX.g:15231:1: entryRuleRestrictedTypeAnnotation returns [EObject current=null] : iv_ruleRestrictedTypeAnnotation= ruleRestrictedTypeAnnotation EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleRestrictedTypeAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictedTypeAnnotation = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:15782:65: (iv_ruleRestrictedTypeAnnotation= ruleRestrictedTypeAnnotation EOF )
            // InternalSCTX.g:15783:2: iv_ruleRestrictedTypeAnnotation= ruleRestrictedTypeAnnotation EOF
=======
            // InternalSCTX.g:15231:65: (iv_ruleRestrictedTypeAnnotation= ruleRestrictedTypeAnnotation EOF )
            // InternalSCTX.g:15232:2: iv_ruleRestrictedTypeAnnotation= ruleRestrictedTypeAnnotation EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictedTypeAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRestrictedTypeAnnotation=ruleRestrictedTypeAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictedTypeAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictedTypeAnnotation"


    // $ANTLR start "ruleRestrictedTypeAnnotation"
<<<<<<< HEAD
    // InternalSCTX.g:15789:1: ruleRestrictedTypeAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) ;
=======
    // InternalSCTX.g:15238:1: ruleRestrictedTypeAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleRestrictedTypeAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_RestrictedKeyStringValueAnnotation_1 = null;

        EObject this_RestrictedTypedKeyStringValueAnnotation_2 = null;

        EObject this_TagAnnotation_3 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:15795:2: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) )
            // InternalSCTX.g:15796:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            {
            // InternalSCTX.g:15796:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            int alt442=4;
            alt442 = dfa442.predict(input);
            switch (alt442) {
                case 1 :
                    // InternalSCTX.g:15797:3: this_CommentAnnotation_0= ruleCommentAnnotation
=======
            // InternalSCTX.g:15244:2: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) )
            // InternalSCTX.g:15245:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            {
            // InternalSCTX.g:15245:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            int alt431=4;
            alt431 = dfa431.predict(input);
            switch (alt431) {
                case 1 :
                    // InternalSCTX.g:15246:3: this_CommentAnnotation_0= ruleCommentAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRestrictedTypeAnnotationAccess().getCommentAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CommentAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:15809:3: this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation
=======
                    // InternalSCTX.g:15258:3: this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRestrictedTypeAnnotationAccess().getRestrictedKeyStringValueAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RestrictedKeyStringValueAnnotation_1=ruleRestrictedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RestrictedKeyStringValueAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
<<<<<<< HEAD
                    // InternalSCTX.g:15821:3: this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation
=======
                    // InternalSCTX.g:15270:3: this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRestrictedTypeAnnotationAccess().getRestrictedTypedKeyStringValueAnnotationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RestrictedTypedKeyStringValueAnnotation_2=ruleRestrictedTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RestrictedTypedKeyStringValueAnnotation_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
<<<<<<< HEAD
                    // InternalSCTX.g:15833:3: this_TagAnnotation_3= ruleTagAnnotation
=======
                    // InternalSCTX.g:15282:3: this_TagAnnotation_3= ruleTagAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRestrictedTypeAnnotationAccess().getTagAnnotationParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TagAnnotation_3=ruleTagAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TagAnnotation_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictedTypeAnnotation"


    // $ANTLR start "entrySuperQuotedStringAnnotation"
<<<<<<< HEAD
    // InternalSCTX.g:15848:1: entrySuperQuotedStringAnnotation returns [EObject current=null] : iv_superQuotedStringAnnotation= superQuotedStringAnnotation EOF ;
=======
    // InternalSCTX.g:15297:1: entrySuperQuotedStringAnnotation returns [EObject current=null] : iv_superQuotedStringAnnotation= superQuotedStringAnnotation EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entrySuperQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_superQuotedStringAnnotation = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:15848:64: (iv_superQuotedStringAnnotation= superQuotedStringAnnotation EOF )
            // InternalSCTX.g:15849:2: iv_superQuotedStringAnnotation= superQuotedStringAnnotation EOF
=======
            // InternalSCTX.g:15297:64: (iv_superQuotedStringAnnotation= superQuotedStringAnnotation EOF )
            // InternalSCTX.g:15298:2: iv_superQuotedStringAnnotation= superQuotedStringAnnotation EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_superQuotedStringAnnotation=superQuotedStringAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superQuotedStringAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperQuotedStringAnnotation"


    // $ANTLR start "superQuotedStringAnnotation"
<<<<<<< HEAD
    // InternalSCTX.g:15855:1: superQuotedStringAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) ;
=======
    // InternalSCTX.g:15304:1: superQuotedStringAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject superQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_QuotedKeyStringValueAnnotation_1 = null;

        EObject this_QuotedTypedKeyStringValueAnnotation_2 = null;

        EObject this_TagAnnotation_3 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:15861:2: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) )
            // InternalSCTX.g:15862:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            {
            // InternalSCTX.g:15862:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            int alt443=4;
            alt443 = dfa443.predict(input);
            switch (alt443) {
                case 1 :
                    // InternalSCTX.g:15863:3: this_CommentAnnotation_0= ruleCommentAnnotation
=======
            // InternalSCTX.g:15310:2: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) )
            // InternalSCTX.g:15311:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            {
            // InternalSCTX.g:15311:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            int alt432=4;
            alt432 = dfa432.predict(input);
            switch (alt432) {
                case 1 :
                    // InternalSCTX.g:15312:3: this_CommentAnnotation_0= ruleCommentAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getCommentAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CommentAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:15875:3: this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation
=======
                    // InternalSCTX.g:15324:3: this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getQuotedKeyStringValueAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QuotedKeyStringValueAnnotation_1=ruleQuotedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_QuotedKeyStringValueAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
<<<<<<< HEAD
                    // InternalSCTX.g:15887:3: this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation
=======
                    // InternalSCTX.g:15336:3: this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getQuotedTypedKeyStringValueAnnotationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QuotedTypedKeyStringValueAnnotation_2=ruleQuotedTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_QuotedTypedKeyStringValueAnnotation_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
<<<<<<< HEAD
                    // InternalSCTX.g:15899:3: this_TagAnnotation_3= ruleTagAnnotation
=======
                    // InternalSCTX.g:15348:3: this_TagAnnotation_3= ruleTagAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getTagAnnotationParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TagAnnotation_3=ruleTagAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TagAnnotation_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superQuotedStringAnnotation"


    // $ANTLR start "entryRuleCommentAnnotation"
<<<<<<< HEAD
    // InternalSCTX.g:15914:1: entryRuleCommentAnnotation returns [EObject current=null] : iv_ruleCommentAnnotation= ruleCommentAnnotation EOF ;
=======
    // InternalSCTX.g:15363:1: entryRuleCommentAnnotation returns [EObject current=null] : iv_ruleCommentAnnotation= ruleCommentAnnotation EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleCommentAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommentAnnotation = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:15914:58: (iv_ruleCommentAnnotation= ruleCommentAnnotation EOF )
            // InternalSCTX.g:15915:2: iv_ruleCommentAnnotation= ruleCommentAnnotation EOF
=======
            // InternalSCTX.g:15363:58: (iv_ruleCommentAnnotation= ruleCommentAnnotation EOF )
            // InternalSCTX.g:15364:2: iv_ruleCommentAnnotation= ruleCommentAnnotation EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommentAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCommentAnnotation=ruleCommentAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommentAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommentAnnotation"


    // $ANTLR start "ruleCommentAnnotation"
<<<<<<< HEAD
    // InternalSCTX.g:15921:1: ruleCommentAnnotation returns [EObject current=null] : ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) ) ;
=======
    // InternalSCTX.g:15370:1: ruleCommentAnnotation returns [EObject current=null] : ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleCommentAnnotation() throws RecognitionException {
        EObject current = null;

        Token lv_values_0_0=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:15927:2: ( ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) ) )
            // InternalSCTX.g:15928:2: ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) )
            {
            // InternalSCTX.g:15928:2: ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) )
            // InternalSCTX.g:15929:3: (lv_values_0_0= RULE_COMMENT_ANNOTATION )
            {
            // InternalSCTX.g:15929:3: (lv_values_0_0= RULE_COMMENT_ANNOTATION )
            // InternalSCTX.g:15930:4: lv_values_0_0= RULE_COMMENT_ANNOTATION
=======
            // InternalSCTX.g:15376:2: ( ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) ) )
            // InternalSCTX.g:15377:2: ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) )
            {
            // InternalSCTX.g:15377:2: ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) )
            // InternalSCTX.g:15378:3: (lv_values_0_0= RULE_COMMENT_ANNOTATION )
            {
            // InternalSCTX.g:15378:3: (lv_values_0_0= RULE_COMMENT_ANNOTATION )
            // InternalSCTX.g:15379:4: lv_values_0_0= RULE_COMMENT_ANNOTATION
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            lv_values_0_0=(Token)match(input,RULE_COMMENT_ANNOTATION,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_values_0_0, grammarAccess.getCommentAnnotationAccess().getValuesCOMMENT_ANNOTATIONTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getCommentAnnotationRule());
              				}
              				addWithLastConsumed(
              					current,
              					"values",
              					lv_values_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.COMMENT_ANNOTATION");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommentAnnotation"


    // $ANTLR start "entryRuleCommentAnnotatonSL"
<<<<<<< HEAD
    // InternalSCTX.g:15949:1: entryRuleCommentAnnotatonSL returns [EObject current=null] : iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF ;
=======
    // InternalSCTX.g:15398:1: entryRuleCommentAnnotatonSL returns [EObject current=null] : iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleCommentAnnotatonSL() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommentAnnotatonSL = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:15949:59: (iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF )
            // InternalSCTX.g:15950:2: iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF
=======
            // InternalSCTX.g:15398:59: (iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF )
            // InternalSCTX.g:15399:2: iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommentAnnotatonSLRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCommentAnnotatonSL=ruleCommentAnnotatonSL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommentAnnotatonSL; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommentAnnotatonSL"


    // $ANTLR start "ruleCommentAnnotatonSL"
<<<<<<< HEAD
    // InternalSCTX.g:15956:1: ruleCommentAnnotatonSL returns [EObject current=null] : ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) ) ;
=======
    // InternalSCTX.g:15405:1: ruleCommentAnnotatonSL returns [EObject current=null] : ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleCommentAnnotatonSL() throws RecognitionException {
        EObject current = null;

        Token lv_values_0_0=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:15962:2: ( ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) ) )
            // InternalSCTX.g:15963:2: ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) )
            {
            // InternalSCTX.g:15963:2: ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) )
            // InternalSCTX.g:15964:3: (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION )
            {
            // InternalSCTX.g:15964:3: (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION )
            // InternalSCTX.g:15965:4: lv_values_0_0= RULE_SL_COMMENT_ANNOTATION
=======
            // InternalSCTX.g:15411:2: ( ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) ) )
            // InternalSCTX.g:15412:2: ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) )
            {
            // InternalSCTX.g:15412:2: ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) )
            // InternalSCTX.g:15413:3: (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION )
            {
            // InternalSCTX.g:15413:3: (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION )
            // InternalSCTX.g:15414:4: lv_values_0_0= RULE_SL_COMMENT_ANNOTATION
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            lv_values_0_0=(Token)match(input,RULE_SL_COMMENT_ANNOTATION,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_values_0_0, grammarAccess.getCommentAnnotatonSLAccess().getValuesSL_COMMENT_ANNOTATIONTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getCommentAnnotatonSLRule());
              				}
              				addWithLastConsumed(
              					current,
              					"values",
              					lv_values_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.SL_COMMENT_ANNOTATION");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommentAnnotatonSL"


    // $ANTLR start "entryRuleTagAnnotation"
<<<<<<< HEAD
    // InternalSCTX.g:15984:1: entryRuleTagAnnotation returns [EObject current=null] : iv_ruleTagAnnotation= ruleTagAnnotation EOF ;
=======
    // InternalSCTX.g:15433:1: entryRuleTagAnnotation returns [EObject current=null] : iv_ruleTagAnnotation= ruleTagAnnotation EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleTagAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTagAnnotation = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:15984:54: (iv_ruleTagAnnotation= ruleTagAnnotation EOF )
            // InternalSCTX.g:15985:2: iv_ruleTagAnnotation= ruleTagAnnotation EOF
=======
            // InternalSCTX.g:15433:54: (iv_ruleTagAnnotation= ruleTagAnnotation EOF )
            // InternalSCTX.g:15434:2: iv_ruleTagAnnotation= ruleTagAnnotation EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTagAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTagAnnotation=ruleTagAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTagAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTagAnnotation"


    // $ANTLR start "ruleTagAnnotation"
<<<<<<< HEAD
    // InternalSCTX.g:15991:1: ruleTagAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ) ;
=======
    // InternalSCTX.g:15440:1: ruleTagAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleTagAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:15997:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ) )
            // InternalSCTX.g:15998:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) )
            {
            // InternalSCTX.g:15998:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) )
            // InternalSCTX.g:15999:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) )
            {
            otherlv_0=(Token)match(input,106,FollowSets000.FOLLOW_4); if (state.failed) return current;
=======
            // InternalSCTX.g:15446:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ) )
            // InternalSCTX.g:15447:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) )
            {
            // InternalSCTX.g:15447:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) )
            // InternalSCTX.g:15448:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) )
            {
            otherlv_0=(Token)match(input,102,FollowSets000.FOLLOW_4); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTagAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:16003:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:16004:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:16004:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:16005:5: lv_name_1_0= ruleExtendedID
=======
            // InternalSCTX.g:15452:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:15453:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:15453:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:15454:5: lv_name_1_0= ruleExtendedID
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTagAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTagAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTagAnnotation"


    // $ANTLR start "entryRulePragmaTag"
<<<<<<< HEAD
    // InternalSCTX.g:16026:1: entryRulePragmaTag returns [EObject current=null] : iv_rulePragmaTag= rulePragmaTag EOF ;
=======
    // InternalSCTX.g:15475:1: entryRulePragmaTag returns [EObject current=null] : iv_rulePragmaTag= rulePragmaTag EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRulePragmaTag() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePragmaTag = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:16026:50: (iv_rulePragmaTag= rulePragmaTag EOF )
            // InternalSCTX.g:16027:2: iv_rulePragmaTag= rulePragmaTag EOF
=======
            // InternalSCTX.g:15475:50: (iv_rulePragmaTag= rulePragmaTag EOF )
            // InternalSCTX.g:15476:2: iv_rulePragmaTag= rulePragmaTag EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPragmaTagRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePragmaTag=rulePragmaTag();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePragmaTag; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePragmaTag"


    // $ANTLR start "rulePragmaTag"
<<<<<<< HEAD
    // InternalSCTX.g:16033:1: rulePragmaTag returns [EObject current=null] : (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ) ;
=======
    // InternalSCTX.g:15482:1: rulePragmaTag returns [EObject current=null] : (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject rulePragmaTag() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:16039:2: ( (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ) )
            // InternalSCTX.g:16040:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) )
            {
            // InternalSCTX.g:16040:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) )
            // InternalSCTX.g:16041:3: otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) )
            {
            otherlv_0=(Token)match(input,105,FollowSets000.FOLLOW_4); if (state.failed) return current;
=======
            // InternalSCTX.g:15488:2: ( (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ) )
            // InternalSCTX.g:15489:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) )
            {
            // InternalSCTX.g:15489:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) )
            // InternalSCTX.g:15490:3: otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) )
            {
            otherlv_0=(Token)match(input,101,FollowSets000.FOLLOW_4); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPragmaTagAccess().getNumberSignKeyword_0());
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:16045:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:16046:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:16046:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:16047:5: lv_name_1_0= ruleExtendedID
=======
            // InternalSCTX.g:15494:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:15495:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:15495:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:15496:5: lv_name_1_0= ruleExtendedID
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPragmaTagAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPragmaTagRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePragmaTag"


    // $ANTLR start "entryRuleKeyStringValueAnnotation"
<<<<<<< HEAD
    // InternalSCTX.g:16068:1: entryRuleKeyStringValueAnnotation returns [EObject current=null] : iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF ;
=======
    // InternalSCTX.g:15517:1: entryRuleKeyStringValueAnnotation returns [EObject current=null] : iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeyStringValueAnnotation = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:16068:65: (iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF )
            // InternalSCTX.g:16069:2: iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF
=======
            // InternalSCTX.g:15517:65: (iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF )
            // InternalSCTX.g:15518:2: iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleKeyStringValueAnnotation=ruleKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeyStringValueAnnotation"


    // $ANTLR start "ruleKeyStringValueAnnotation"
<<<<<<< HEAD
    // InternalSCTX.g:16075:1: ruleKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) ;
=======
    // InternalSCTX.g:15524:1: ruleKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:16081:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) )
            // InternalSCTX.g:16082:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalSCTX.g:16082:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            // InternalSCTX.g:16083:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,106,FollowSets000.FOLLOW_4); if (state.failed) return current;
=======
            // InternalSCTX.g:15530:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) )
            // InternalSCTX.g:15531:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalSCTX.g:15531:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            // InternalSCTX.g:15532:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,102,FollowSets000.FOLLOW_4); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:16087:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:16088:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:16088:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:16089:5: lv_name_1_0= ruleExtendedID
=======
            // InternalSCTX.g:15536:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:15537:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:15537:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:15538:5: lv_name_1_0= ruleExtendedID
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_202);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

<<<<<<< HEAD
            // InternalSCTX.g:16106:3: ( (lv_values_2_0= ruleEStringAllTypes ) )
            // InternalSCTX.g:16107:4: (lv_values_2_0= ruleEStringAllTypes )
            {
            // InternalSCTX.g:16107:4: (lv_values_2_0= ruleEStringAllTypes )
            // InternalSCTX.g:16108:5: lv_values_2_0= ruleEStringAllTypes
=======
            // InternalSCTX.g:15555:3: ( (lv_values_2_0= ruleEStringAllTypes ) )
            // InternalSCTX.g:15556:4: (lv_values_2_0= ruleEStringAllTypes )
            {
            // InternalSCTX.g:15556:4: (lv_values_2_0= ruleEStringAllTypes )
            // InternalSCTX.g:15557:5: lv_values_2_0= ruleEStringAllTypes
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_203);
            lv_values_2_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

<<<<<<< HEAD
            // InternalSCTX.g:16125:3: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            loop444:
            do {
                int alt444=2;
                int LA444_0 = input.LA(1);

                if ( (LA444_0==20) ) {
                    alt444=1;
                }


                switch (alt444) {
            	case 1 :
            	    // InternalSCTX.g:16126:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) )
=======
            // InternalSCTX.g:15574:3: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            loop433:
            do {
                int alt433=2;
                int LA433_0 = input.LA(1);

                if ( (LA433_0==20) ) {
                    alt433=1;
                }


                switch (alt433) {
            	case 1 :
            	    // InternalSCTX.g:15575:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    otherlv_3=(Token)match(input,20,FollowSets000.FOLLOW_202); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	      			
            	    }
<<<<<<< HEAD
            	    // InternalSCTX.g:16130:4: ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    // InternalSCTX.g:16131:5: (lv_values_4_0= ruleEStringAllTypes )
            	    {
            	    // InternalSCTX.g:16131:5: (lv_values_4_0= ruleEStringAllTypes )
            	    // InternalSCTX.g:16132:6: lv_values_4_0= ruleEStringAllTypes
=======
            	    // InternalSCTX.g:15579:4: ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    // InternalSCTX.g:15580:5: (lv_values_4_0= ruleEStringAllTypes )
            	    {
            	    // InternalSCTX.g:15580:5: (lv_values_4_0= ruleEStringAllTypes )
            	    // InternalSCTX.g:15581:6: lv_values_4_0= ruleEStringAllTypes
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_203);
            	    lv_values_4_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
<<<<<<< HEAD
            	    break loop444;
=======
            	    break loop433;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeyStringValueAnnotation"


    // $ANTLR start "entryRuleRestrictedKeyStringValueAnnotation"
<<<<<<< HEAD
    // InternalSCTX.g:16154:1: entryRuleRestrictedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF ;
=======
    // InternalSCTX.g:15603:1: entryRuleRestrictedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleRestrictedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictedKeyStringValueAnnotation = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:16154:75: (iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:16155:2: iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF
=======
            // InternalSCTX.g:15603:75: (iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:15604:2: iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRestrictedKeyStringValueAnnotation=ruleRestrictedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictedKeyStringValueAnnotation"


    // $ANTLR start "ruleRestrictedKeyStringValueAnnotation"
<<<<<<< HEAD
    // InternalSCTX.g:16161:1: ruleRestrictedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* ) ;
=======
    // InternalSCTX.g:15610:1: ruleRestrictedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleRestrictedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:16167:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* ) )
            // InternalSCTX.g:16168:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* )
            {
            // InternalSCTX.g:16168:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* )
            // InternalSCTX.g:16169:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )*
            {
            otherlv_0=(Token)match(input,106,FollowSets000.FOLLOW_4); if (state.failed) return current;
=======
            // InternalSCTX.g:15616:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* ) )
            // InternalSCTX.g:15617:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* )
            {
            // InternalSCTX.g:15617:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* )
            // InternalSCTX.g:15618:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )*
            {
            otherlv_0=(Token)match(input,102,FollowSets000.FOLLOW_4); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:16173:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:16174:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:16174:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:16175:5: lv_name_1_0= ruleExtendedID
=======
            // InternalSCTX.g:15622:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:15623:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:15623:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:15624:5: lv_name_1_0= ruleExtendedID
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_204);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

<<<<<<< HEAD
            // InternalSCTX.g:16192:3: ( (lv_values_2_0= ruleEStringBoolean ) )
            // InternalSCTX.g:16193:4: (lv_values_2_0= ruleEStringBoolean )
            {
            // InternalSCTX.g:16193:4: (lv_values_2_0= ruleEStringBoolean )
            // InternalSCTX.g:16194:5: lv_values_2_0= ruleEStringBoolean
=======
            // InternalSCTX.g:15641:3: ( (lv_values_2_0= ruleEStringBoolean ) )
            // InternalSCTX.g:15642:4: (lv_values_2_0= ruleEStringBoolean )
            {
            // InternalSCTX.g:15642:4: (lv_values_2_0= ruleEStringBoolean )
            // InternalSCTX.g:15643:5: lv_values_2_0= ruleEStringBoolean
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_203);
            lv_values_2_0=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

<<<<<<< HEAD
            // InternalSCTX.g:16211:3: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )*
            loop445:
            do {
                int alt445=2;
                int LA445_0 = input.LA(1);

                if ( (LA445_0==20) ) {
                    alt445=1;
                }


                switch (alt445) {
            	case 1 :
            	    // InternalSCTX.g:16212:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) )
=======
            // InternalSCTX.g:15660:3: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )*
            loop434:
            do {
                int alt434=2;
                int LA434_0 = input.LA(1);

                if ( (LA434_0==20) ) {
                    alt434=1;
                }


                switch (alt434) {
            	case 1 :
            	    // InternalSCTX.g:15661:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    otherlv_3=(Token)match(input,20,FollowSets000.FOLLOW_204); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	      			
            	    }
<<<<<<< HEAD
            	    // InternalSCTX.g:16216:4: ( (lv_values_4_0= ruleEStringBoolean ) )
            	    // InternalSCTX.g:16217:5: (lv_values_4_0= ruleEStringBoolean )
            	    {
            	    // InternalSCTX.g:16217:5: (lv_values_4_0= ruleEStringBoolean )
            	    // InternalSCTX.g:16218:6: lv_values_4_0= ruleEStringBoolean
=======
            	    // InternalSCTX.g:15665:4: ( (lv_values_4_0= ruleEStringBoolean ) )
            	    // InternalSCTX.g:15666:5: (lv_values_4_0= ruleEStringBoolean )
            	    {
            	    // InternalSCTX.g:15666:5: (lv_values_4_0= ruleEStringBoolean )
            	    // InternalSCTX.g:15667:6: lv_values_4_0= ruleEStringBoolean
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_203);
            	    lv_values_4_0=ruleEStringBoolean();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
<<<<<<< HEAD
            	    break loop445;
=======
            	    break loop434;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleStringPragma"
<<<<<<< HEAD
    // InternalSCTX.g:16240:1: entryRuleStringPragma returns [EObject current=null] : iv_ruleStringPragma= ruleStringPragma EOF ;
=======
    // InternalSCTX.g:15689:1: entryRuleStringPragma returns [EObject current=null] : iv_ruleStringPragma= ruleStringPragma EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleStringPragma() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringPragma = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:16240:53: (iv_ruleStringPragma= ruleStringPragma EOF )
            // InternalSCTX.g:16241:2: iv_ruleStringPragma= ruleStringPragma EOF
=======
            // InternalSCTX.g:15689:53: (iv_ruleStringPragma= ruleStringPragma EOF )
            // InternalSCTX.g:15690:2: iv_ruleStringPragma= ruleStringPragma EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringPragma=ruleStringPragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringPragma; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringPragma"


    // $ANTLR start "ruleStringPragma"
<<<<<<< HEAD
    // InternalSCTX.g:16247:1: ruleStringPragma returns [EObject current=null] : (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) ;
=======
    // InternalSCTX.g:15696:1: ruleStringPragma returns [EObject current=null] : (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleStringPragma() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:16253:2: ( (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) )
            // InternalSCTX.g:16254:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalSCTX.g:16254:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            // InternalSCTX.g:16255:3: otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,105,FollowSets000.FOLLOW_4); if (state.failed) return current;
=======
            // InternalSCTX.g:15702:2: ( (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) )
            // InternalSCTX.g:15703:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalSCTX.g:15703:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            // InternalSCTX.g:15704:3: otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,101,FollowSets000.FOLLOW_4); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getStringPragmaAccess().getNumberSignKeyword_0());
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:16259:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:16260:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:16260:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:16261:5: lv_name_1_0= ruleExtendedID
=======
            // InternalSCTX.g:15708:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:15709:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:15709:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:15710:5: lv_name_1_0= ruleExtendedID
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStringPragmaAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_202);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStringPragmaRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

<<<<<<< HEAD
            // InternalSCTX.g:16278:3: ( (lv_values_2_0= ruleEStringAllTypes ) )
            // InternalSCTX.g:16279:4: (lv_values_2_0= ruleEStringAllTypes )
            {
            // InternalSCTX.g:16279:4: (lv_values_2_0= ruleEStringAllTypes )
            // InternalSCTX.g:16280:5: lv_values_2_0= ruleEStringAllTypes
=======
            // InternalSCTX.g:15727:3: ( (lv_values_2_0= ruleEStringAllTypes ) )
            // InternalSCTX.g:15728:4: (lv_values_2_0= ruleEStringAllTypes )
            {
            // InternalSCTX.g:15728:4: (lv_values_2_0= ruleEStringAllTypes )
            // InternalSCTX.g:15729:5: lv_values_2_0= ruleEStringAllTypes
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStringPragmaAccess().getValuesEStringAllTypesParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_203);
            lv_values_2_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStringPragmaRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

<<<<<<< HEAD
            // InternalSCTX.g:16297:3: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            loop446:
            do {
                int alt446=2;
                int LA446_0 = input.LA(1);

                if ( (LA446_0==20) ) {
                    alt446=1;
                }


                switch (alt446) {
            	case 1 :
            	    // InternalSCTX.g:16298:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) )
=======
            // InternalSCTX.g:15746:3: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            loop435:
            do {
                int alt435=2;
                int LA435_0 = input.LA(1);

                if ( (LA435_0==20) ) {
                    alt435=1;
                }


                switch (alt435) {
            	case 1 :
            	    // InternalSCTX.g:15747:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    otherlv_3=(Token)match(input,20,FollowSets000.FOLLOW_202); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getStringPragmaAccess().getCommaKeyword_3_0());
            	      			
            	    }
<<<<<<< HEAD
            	    // InternalSCTX.g:16302:4: ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    // InternalSCTX.g:16303:5: (lv_values_4_0= ruleEStringAllTypes )
            	    {
            	    // InternalSCTX.g:16303:5: (lv_values_4_0= ruleEStringAllTypes )
            	    // InternalSCTX.g:16304:6: lv_values_4_0= ruleEStringAllTypes
=======
            	    // InternalSCTX.g:15751:4: ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    // InternalSCTX.g:15752:5: (lv_values_4_0= ruleEStringAllTypes )
            	    {
            	    // InternalSCTX.g:15752:5: (lv_values_4_0= ruleEStringAllTypes )
            	    // InternalSCTX.g:15753:6: lv_values_4_0= ruleEStringAllTypes
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getStringPragmaAccess().getValuesEStringAllTypesParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_203);
            	    lv_values_4_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getStringPragmaRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
<<<<<<< HEAD
            	    break loop446;
=======
            	    break loop435;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringPragma"


    // $ANTLR start "entryRuleTypedKeyStringValueAnnotation"
<<<<<<< HEAD
    // InternalSCTX.g:16326:1: entryRuleTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF ;
=======
    // InternalSCTX.g:15775:1: entryRuleTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypedKeyStringValueAnnotation = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:16326:70: (iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:16327:2: iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF
=======
            // InternalSCTX.g:15775:70: (iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:15776:2: iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypedKeyStringValueAnnotation=ruleTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleTypedKeyStringValueAnnotation"
<<<<<<< HEAD
    // InternalSCTX.g:16333:1: ruleTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* ) ;
=======
    // InternalSCTX.g:15782:1: ruleTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_values_5_0 = null;

        AntlrDatatypeRuleToken lv_values_7_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:16339:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* ) )
            // InternalSCTX.g:16340:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalSCTX.g:16340:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* )
            // InternalSCTX.g:16341:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,106,FollowSets000.FOLLOW_4); if (state.failed) return current;
=======
            // InternalSCTX.g:15788:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* ) )
            // InternalSCTX.g:15789:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalSCTX.g:15789:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* )
            // InternalSCTX.g:15790:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,102,FollowSets000.FOLLOW_4); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:16345:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:16346:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:16346:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:16347:5: lv_name_1_0= ruleExtendedID
=======
            // InternalSCTX.g:15794:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:15795:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:15795:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:15796:5: lv_name_1_0= ruleExtendedID
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_205);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,36,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:16368:3: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalSCTX.g:16369:4: (lv_type_3_0= ruleExtendedID )
            {
            // InternalSCTX.g:16369:4: (lv_type_3_0= ruleExtendedID )
            // InternalSCTX.g:16370:5: lv_type_3_0= ruleExtendedID
=======
            // InternalSCTX.g:15817:3: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalSCTX.g:15818:4: (lv_type_3_0= ruleExtendedID )
            {
            // InternalSCTX.g:15818:4: (lv_type_3_0= ruleExtendedID )
            // InternalSCTX.g:15819:5: lv_type_3_0= ruleExtendedID
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_36);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_3_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,37,FollowSets000.FOLLOW_202); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:16391:3: ( (lv_values_5_0= ruleEStringAllTypes ) )
            // InternalSCTX.g:16392:4: (lv_values_5_0= ruleEStringAllTypes )
            {
            // InternalSCTX.g:16392:4: (lv_values_5_0= ruleEStringAllTypes )
            // InternalSCTX.g:16393:5: lv_values_5_0= ruleEStringAllTypes
=======
            // InternalSCTX.g:15840:3: ( (lv_values_5_0= ruleEStringAllTypes ) )
            // InternalSCTX.g:15841:4: (lv_values_5_0= ruleEStringAllTypes )
            {
            // InternalSCTX.g:15841:4: (lv_values_5_0= ruleEStringAllTypes )
            // InternalSCTX.g:15842:5: lv_values_5_0= ruleEStringAllTypes
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_5_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_203);
            lv_values_5_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_5_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

<<<<<<< HEAD
            // InternalSCTX.g:16410:3: (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )*
            loop447:
            do {
                int alt447=2;
                int LA447_0 = input.LA(1);

                if ( (LA447_0==20) ) {
                    alt447=1;
                }


                switch (alt447) {
            	case 1 :
            	    // InternalSCTX.g:16411:4: otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) )
=======
            // InternalSCTX.g:15859:3: (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )*
            loop436:
            do {
                int alt436=2;
                int LA436_0 = input.LA(1);

                if ( (LA436_0==20) ) {
                    alt436=1;
                }


                switch (alt436) {
            	case 1 :
            	    // InternalSCTX.g:15860:4: otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    otherlv_6=(Token)match(input,20,FollowSets000.FOLLOW_202); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	      			
            	    }
<<<<<<< HEAD
            	    // InternalSCTX.g:16415:4: ( (lv_values_7_0= ruleEStringAllTypes ) )
            	    // InternalSCTX.g:16416:5: (lv_values_7_0= ruleEStringAllTypes )
            	    {
            	    // InternalSCTX.g:16416:5: (lv_values_7_0= ruleEStringAllTypes )
            	    // InternalSCTX.g:16417:6: lv_values_7_0= ruleEStringAllTypes
=======
            	    // InternalSCTX.g:15864:4: ( (lv_values_7_0= ruleEStringAllTypes ) )
            	    // InternalSCTX.g:15865:5: (lv_values_7_0= ruleEStringAllTypes )
            	    {
            	    // InternalSCTX.g:15865:5: (lv_values_7_0= ruleEStringAllTypes )
            	    // InternalSCTX.g:15866:6: lv_values_7_0= ruleEStringAllTypes
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_6_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_203);
            	    lv_values_7_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_7_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
<<<<<<< HEAD
            	    break loop447;
=======
            	    break loop436;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleRestrictedTypedKeyStringValueAnnotation"
<<<<<<< HEAD
    // InternalSCTX.g:16439:1: entryRuleRestrictedTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF ;
=======
    // InternalSCTX.g:15888:1: entryRuleRestrictedTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleRestrictedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictedTypedKeyStringValueAnnotation = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:16439:80: (iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:16440:2: iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF
=======
            // InternalSCTX.g:15888:80: (iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:15889:2: iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRestrictedTypedKeyStringValueAnnotation=ruleRestrictedTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictedTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictedTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleRestrictedTypedKeyStringValueAnnotation"
<<<<<<< HEAD
    // InternalSCTX.g:16446:1: ruleRestrictedTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* ) ;
=======
    // InternalSCTX.g:15895:1: ruleRestrictedTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleRestrictedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_values_5_0 = null;

        AntlrDatatypeRuleToken lv_values_7_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:16452:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* ) )
            // InternalSCTX.g:16453:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* )
            {
            // InternalSCTX.g:16453:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* )
            // InternalSCTX.g:16454:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )*
            {
            otherlv_0=(Token)match(input,106,FollowSets000.FOLLOW_4); if (state.failed) return current;
=======
            // InternalSCTX.g:15901:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* ) )
            // InternalSCTX.g:15902:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* )
            {
            // InternalSCTX.g:15902:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* )
            // InternalSCTX.g:15903:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )*
            {
            otherlv_0=(Token)match(input,102,FollowSets000.FOLLOW_4); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:16458:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:16459:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:16459:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:16460:5: lv_name_1_0= ruleExtendedID
=======
            // InternalSCTX.g:15907:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:15908:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:15908:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:15909:5: lv_name_1_0= ruleExtendedID
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_205);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,36,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:16481:3: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalSCTX.g:16482:4: (lv_type_3_0= ruleExtendedID )
            {
            // InternalSCTX.g:16482:4: (lv_type_3_0= ruleExtendedID )
            // InternalSCTX.g:16483:5: lv_type_3_0= ruleExtendedID
=======
            // InternalSCTX.g:15930:3: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalSCTX.g:15931:4: (lv_type_3_0= ruleExtendedID )
            {
            // InternalSCTX.g:15931:4: (lv_type_3_0= ruleExtendedID )
            // InternalSCTX.g:15932:5: lv_type_3_0= ruleExtendedID
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_36);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_3_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,37,FollowSets000.FOLLOW_204); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:16504:3: ( (lv_values_5_0= ruleEStringBoolean ) )
            // InternalSCTX.g:16505:4: (lv_values_5_0= ruleEStringBoolean )
            {
            // InternalSCTX.g:16505:4: (lv_values_5_0= ruleEStringBoolean )
            // InternalSCTX.g:16506:5: lv_values_5_0= ruleEStringBoolean
=======
            // InternalSCTX.g:15953:3: ( (lv_values_5_0= ruleEStringBoolean ) )
            // InternalSCTX.g:15954:4: (lv_values_5_0= ruleEStringBoolean )
            {
            // InternalSCTX.g:15954:4: (lv_values_5_0= ruleEStringBoolean )
            // InternalSCTX.g:15955:5: lv_values_5_0= ruleEStringBoolean
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_5_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_203);
            lv_values_5_0=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_5_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

<<<<<<< HEAD
            // InternalSCTX.g:16523:3: (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )*
            loop448:
            do {
                int alt448=2;
                int LA448_0 = input.LA(1);

                if ( (LA448_0==20) ) {
                    alt448=1;
                }


                switch (alt448) {
            	case 1 :
            	    // InternalSCTX.g:16524:4: otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) )
=======
            // InternalSCTX.g:15972:3: (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )*
            loop437:
            do {
                int alt437=2;
                int LA437_0 = input.LA(1);

                if ( (LA437_0==20) ) {
                    alt437=1;
                }


                switch (alt437) {
            	case 1 :
            	    // InternalSCTX.g:15973:4: otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    otherlv_6=(Token)match(input,20,FollowSets000.FOLLOW_204); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	      			
            	    }
<<<<<<< HEAD
            	    // InternalSCTX.g:16528:4: ( (lv_values_7_0= ruleEStringBoolean ) )
            	    // InternalSCTX.g:16529:5: (lv_values_7_0= ruleEStringBoolean )
            	    {
            	    // InternalSCTX.g:16529:5: (lv_values_7_0= ruleEStringBoolean )
            	    // InternalSCTX.g:16530:6: lv_values_7_0= ruleEStringBoolean
=======
            	    // InternalSCTX.g:15977:4: ( (lv_values_7_0= ruleEStringBoolean ) )
            	    // InternalSCTX.g:15978:5: (lv_values_7_0= ruleEStringBoolean )
            	    {
            	    // InternalSCTX.g:15978:5: (lv_values_7_0= ruleEStringBoolean )
            	    // InternalSCTX.g:15979:6: lv_values_7_0= ruleEStringBoolean
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_6_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_203);
            	    lv_values_7_0=ruleEStringBoolean();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_7_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
<<<<<<< HEAD
            	    break loop448;
=======
            	    break loop437;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictedTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleQuotedKeyStringValueAnnotation"
<<<<<<< HEAD
    // InternalSCTX.g:16552:1: entryRuleQuotedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF ;
=======
    // InternalSCTX.g:16001:1: entryRuleQuotedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleQuotedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedKeyStringValueAnnotation = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:16552:71: (iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:16553:2: iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF
=======
            // InternalSCTX.g:16001:71: (iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:16002:2: iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedKeyStringValueAnnotation=ruleQuotedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedKeyStringValueAnnotation"


    // $ANTLR start "ruleQuotedKeyStringValueAnnotation"
<<<<<<< HEAD
    // InternalSCTX.g:16559:1: ruleQuotedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* ) ;
=======
    // InternalSCTX.g:16008:1: ruleQuotedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleQuotedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_values_2_0=null;
        Token otherlv_3=null;
        Token lv_values_4_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:16565:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* ) )
            // InternalSCTX.g:16566:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* )
            {
            // InternalSCTX.g:16566:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* )
            // InternalSCTX.g:16567:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )*
            {
            otherlv_0=(Token)match(input,106,FollowSets000.FOLLOW_4); if (state.failed) return current;
=======
            // InternalSCTX.g:16014:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* ) )
            // InternalSCTX.g:16015:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* )
            {
            // InternalSCTX.g:16015:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* )
            // InternalSCTX.g:16016:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )*
            {
            otherlv_0=(Token)match(input,102,FollowSets000.FOLLOW_4); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:16571:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:16572:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:16572:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:16573:5: lv_name_1_0= ruleExtendedID
=======
            // InternalSCTX.g:16020:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:16021:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:16021:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:16022:5: lv_name_1_0= ruleExtendedID
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_48);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQuotedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

<<<<<<< HEAD
            // InternalSCTX.g:16590:3: ( (lv_values_2_0= RULE_STRING ) )
            // InternalSCTX.g:16591:4: (lv_values_2_0= RULE_STRING )
            {
            // InternalSCTX.g:16591:4: (lv_values_2_0= RULE_STRING )
            // InternalSCTX.g:16592:5: lv_values_2_0= RULE_STRING
=======
            // InternalSCTX.g:16039:3: ( (lv_values_2_0= RULE_STRING ) )
            // InternalSCTX.g:16040:4: (lv_values_2_0= RULE_STRING )
            {
            // InternalSCTX.g:16040:4: (lv_values_2_0= RULE_STRING )
            // InternalSCTX.g:16041:5: lv_values_2_0= RULE_STRING
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            lv_values_2_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_203); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_values_2_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getQuotedKeyStringValueAnnotationRule());
              					}
              					addWithLastConsumed(
              						current,
              						"values",
              						lv_values_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.STRING");
              				
            }

            }


            }

<<<<<<< HEAD
            // InternalSCTX.g:16608:3: (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )*
            loop449:
            do {
                int alt449=2;
                int LA449_0 = input.LA(1);

                if ( (LA449_0==20) ) {
                    alt449=1;
                }


                switch (alt449) {
            	case 1 :
            	    // InternalSCTX.g:16609:4: otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) )
=======
            // InternalSCTX.g:16057:3: (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )*
            loop438:
            do {
                int alt438=2;
                int LA438_0 = input.LA(1);

                if ( (LA438_0==20) ) {
                    alt438=1;
                }


                switch (alt438) {
            	case 1 :
            	    // InternalSCTX.g:16058:4: otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    otherlv_3=(Token)match(input,20,FollowSets000.FOLLOW_48); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	      			
            	    }
<<<<<<< HEAD
            	    // InternalSCTX.g:16613:4: ( (lv_values_4_0= RULE_STRING ) )
            	    // InternalSCTX.g:16614:5: (lv_values_4_0= RULE_STRING )
            	    {
            	    // InternalSCTX.g:16614:5: (lv_values_4_0= RULE_STRING )
            	    // InternalSCTX.g:16615:6: lv_values_4_0= RULE_STRING
=======
            	    // InternalSCTX.g:16062:4: ( (lv_values_4_0= RULE_STRING ) )
            	    // InternalSCTX.g:16063:5: (lv_values_4_0= RULE_STRING )
            	    {
            	    // InternalSCTX.g:16063:5: (lv_values_4_0= RULE_STRING )
            	    // InternalSCTX.g:16064:6: lv_values_4_0= RULE_STRING
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    lv_values_4_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_203); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_values_4_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_3_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getQuotedKeyStringValueAnnotationRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.STRING");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
<<<<<<< HEAD
            	    break loop449;
=======
            	    break loop438;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleQuotedTypedKeyStringValueAnnotation"
<<<<<<< HEAD
    // InternalSCTX.g:16636:1: entryRuleQuotedTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF ;
=======
    // InternalSCTX.g:16085:1: entryRuleQuotedTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject entryRuleQuotedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedTypedKeyStringValueAnnotation = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:16636:76: (iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:16637:2: iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF
=======
            // InternalSCTX.g:16085:76: (iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:16086:2: iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedTypedKeyStringValueAnnotation=ruleQuotedTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleQuotedTypedKeyStringValueAnnotation"
<<<<<<< HEAD
    // InternalSCTX.g:16643:1: ruleQuotedTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* ) ;
=======
    // InternalSCTX.g:16092:1: ruleQuotedTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final EObject ruleQuotedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_values_5_0=null;
        Token otherlv_6=null;
        Token lv_values_7_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:16649:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* ) )
            // InternalSCTX.g:16650:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* )
            {
            // InternalSCTX.g:16650:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* )
            // InternalSCTX.g:16651:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )*
            {
            otherlv_0=(Token)match(input,106,FollowSets000.FOLLOW_4); if (state.failed) return current;
=======
            // InternalSCTX.g:16098:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* ) )
            // InternalSCTX.g:16099:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* )
            {
            // InternalSCTX.g:16099:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* )
            // InternalSCTX.g:16100:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )*
            {
            otherlv_0=(Token)match(input,102,FollowSets000.FOLLOW_4); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:16655:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:16656:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:16656:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:16657:5: lv_name_1_0= ruleExtendedID
=======
            // InternalSCTX.g:16104:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:16105:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:16105:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:16106:5: lv_name_1_0= ruleExtendedID
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_205);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,36,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:16678:3: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalSCTX.g:16679:4: (lv_type_3_0= ruleExtendedID )
            {
            // InternalSCTX.g:16679:4: (lv_type_3_0= ruleExtendedID )
            // InternalSCTX.g:16680:5: lv_type_3_0= ruleExtendedID
=======
            // InternalSCTX.g:16127:3: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalSCTX.g:16128:4: (lv_type_3_0= ruleExtendedID )
            {
            // InternalSCTX.g:16128:4: (lv_type_3_0= ruleExtendedID )
            // InternalSCTX.g:16129:5: lv_type_3_0= ruleExtendedID
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_36);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_3_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,37,FollowSets000.FOLLOW_48); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:16701:3: ( (lv_values_5_0= RULE_STRING ) )
            // InternalSCTX.g:16702:4: (lv_values_5_0= RULE_STRING )
            {
            // InternalSCTX.g:16702:4: (lv_values_5_0= RULE_STRING )
            // InternalSCTX.g:16703:5: lv_values_5_0= RULE_STRING
=======
            // InternalSCTX.g:16150:3: ( (lv_values_5_0= RULE_STRING ) )
            // InternalSCTX.g:16151:4: (lv_values_5_0= RULE_STRING )
            {
            // InternalSCTX.g:16151:4: (lv_values_5_0= RULE_STRING )
            // InternalSCTX.g:16152:5: lv_values_5_0= RULE_STRING
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            lv_values_5_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_203); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_values_5_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_5_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              					}
              					addWithLastConsumed(
              						current,
              						"values",
              						lv_values_5_0,
              						"de.cau.cs.kieler.annotations.Annotations.STRING");
              				
            }

            }


            }

<<<<<<< HEAD
            // InternalSCTX.g:16719:3: (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )*
            loop450:
            do {
                int alt450=2;
                int LA450_0 = input.LA(1);

                if ( (LA450_0==20) ) {
                    alt450=1;
                }


                switch (alt450) {
            	case 1 :
            	    // InternalSCTX.g:16720:4: otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) )
=======
            // InternalSCTX.g:16168:3: (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )*
            loop439:
            do {
                int alt439=2;
                int LA439_0 = input.LA(1);

                if ( (LA439_0==20) ) {
                    alt439=1;
                }


                switch (alt439) {
            	case 1 :
            	    // InternalSCTX.g:16169:4: otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) )
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    otherlv_6=(Token)match(input,20,FollowSets000.FOLLOW_48); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	      			
            	    }
<<<<<<< HEAD
            	    // InternalSCTX.g:16724:4: ( (lv_values_7_0= RULE_STRING ) )
            	    // InternalSCTX.g:16725:5: (lv_values_7_0= RULE_STRING )
            	    {
            	    // InternalSCTX.g:16725:5: (lv_values_7_0= RULE_STRING )
            	    // InternalSCTX.g:16726:6: lv_values_7_0= RULE_STRING
=======
            	    // InternalSCTX.g:16173:4: ( (lv_values_7_0= RULE_STRING ) )
            	    // InternalSCTX.g:16174:5: (lv_values_7_0= RULE_STRING )
            	    {
            	    // InternalSCTX.g:16174:5: (lv_values_7_0= RULE_STRING )
            	    // InternalSCTX.g:16175:6: lv_values_7_0= RULE_STRING
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    {
            	    lv_values_7_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_203); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_values_7_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_6_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"values",
            	      							lv_values_7_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.STRING");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
<<<<<<< HEAD
            	    break loop450;
=======
            	    break loop439;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleEString"
<<<<<<< HEAD
    // InternalSCTX.g:16747:1: entryRuleEString returns [String current=null] : iv_ruleEString= ruleEString EOF ;
=======
    // InternalSCTX.g:16196:1: entryRuleEString returns [String current=null] : iv_ruleEString= ruleEString EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final String entryRuleEString() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEString = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:16747:47: (iv_ruleEString= ruleEString EOF )
            // InternalSCTX.g:16748:2: iv_ruleEString= ruleEString EOF
=======
            // InternalSCTX.g:16196:47: (iv_ruleEString= ruleEString EOF )
            // InternalSCTX.g:16197:2: iv_ruleEString= ruleEString EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEStringRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEString=ruleEString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEString.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEString"


    // $ANTLR start "ruleEString"
<<<<<<< HEAD
    // InternalSCTX.g:16754:1: ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID ) ;
=======
    // InternalSCTX.g:16203:1: ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final AntlrDatatypeRuleToken ruleEString() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        AntlrDatatypeRuleToken this_ExtendedID_1 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:16760:2: ( (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID ) )
            // InternalSCTX.g:16761:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID )
            {
            // InternalSCTX.g:16761:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID )
            int alt451=2;
            int LA451_0 = input.LA(1);

            if ( (LA451_0==RULE_STRING) ) {
                alt451=1;
            }
            else if ( (LA451_0==RULE_ID) ) {
                alt451=2;
=======
            // InternalSCTX.g:16209:2: ( (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID ) )
            // InternalSCTX.g:16210:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID )
            {
            // InternalSCTX.g:16210:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID )
            int alt440=2;
            int LA440_0 = input.LA(1);

            if ( (LA440_0==RULE_STRING) ) {
                alt440=1;
            }
            else if ( (LA440_0==RULE_ID) ) {
                alt440=2;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
<<<<<<< HEAD
                    new NoViableAltException("", 451, 0, input);

                throw nvae;
            }
            switch (alt451) {
                case 1 :
                    // InternalSCTX.g:16762:3: this_STRING_0= RULE_STRING
=======
                    new NoViableAltException("", 440, 0, input);

                throw nvae;
            }
            switch (alt440) {
                case 1 :
                    // InternalSCTX.g:16211:3: this_STRING_0= RULE_STRING
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:16770:3: this_ExtendedID_1= ruleExtendedID
=======
                    // InternalSCTX.g:16219:3: this_ExtendedID_1= ruleExtendedID
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringAccess().getExtendedIDParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExtendedID_1=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ExtendedID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEString"


    // $ANTLR start "entryRuleEStringBoolean"
<<<<<<< HEAD
    // InternalSCTX.g:16784:1: entryRuleEStringBoolean returns [String current=null] : iv_ruleEStringBoolean= ruleEStringBoolean EOF ;
=======
    // InternalSCTX.g:16233:1: entryRuleEStringBoolean returns [String current=null] : iv_ruleEStringBoolean= ruleEStringBoolean EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final String entryRuleEStringBoolean() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEStringBoolean = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:16784:54: (iv_ruleEStringBoolean= ruleEStringBoolean EOF )
            // InternalSCTX.g:16785:2: iv_ruleEStringBoolean= ruleEStringBoolean EOF
=======
            // InternalSCTX.g:16233:54: (iv_ruleEStringBoolean= ruleEStringBoolean EOF )
            // InternalSCTX.g:16234:2: iv_ruleEStringBoolean= ruleEStringBoolean EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEStringBooleanRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEStringBoolean=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEStringBoolean.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEStringBoolean"


    // $ANTLR start "ruleEStringBoolean"
<<<<<<< HEAD
    // InternalSCTX.g:16791:1: ruleEStringBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN ) ;
=======
    // InternalSCTX.g:16240:1: ruleEStringBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final AntlrDatatypeRuleToken ruleEStringBoolean() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_BOOLEAN_2=null;
        AntlrDatatypeRuleToken this_ExtendedID_1 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:16797:2: ( (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN ) )
            // InternalSCTX.g:16798:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN )
            {
            // InternalSCTX.g:16798:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN )
            int alt452=3;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt452=1;
=======
            // InternalSCTX.g:16246:2: ( (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN ) )
            // InternalSCTX.g:16247:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN )
            {
            // InternalSCTX.g:16247:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN )
            int alt441=3;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt441=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case RULE_ID:
                {
<<<<<<< HEAD
                alt452=2;
=======
                alt441=2;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case RULE_BOOLEAN:
                {
<<<<<<< HEAD
                alt452=3;
=======
                alt441=3;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
<<<<<<< HEAD
                    new NoViableAltException("", 452, 0, input);
=======
                    new NoViableAltException("", 441, 0, input);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                throw nvae;
            }

<<<<<<< HEAD
            switch (alt452) {
                case 1 :
                    // InternalSCTX.g:16799:3: this_STRING_0= RULE_STRING
=======
            switch (alt441) {
                case 1 :
                    // InternalSCTX.g:16248:3: this_STRING_0= RULE_STRING
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_0, grammarAccess.getEStringBooleanAccess().getSTRINGTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:16807:3: this_ExtendedID_1= ruleExtendedID
=======
                    // InternalSCTX.g:16256:3: this_ExtendedID_1= ruleExtendedID
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringBooleanAccess().getExtendedIDParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExtendedID_1=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ExtendedID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
<<<<<<< HEAD
                    // InternalSCTX.g:16818:3: this_BOOLEAN_2= RULE_BOOLEAN
=======
                    // InternalSCTX.g:16267:3: this_BOOLEAN_2= RULE_BOOLEAN
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    this_BOOLEAN_2=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_BOOLEAN_2);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_BOOLEAN_2, grammarAccess.getEStringBooleanAccess().getBOOLEANTerminalRuleCall_2());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEStringBoolean"


    // $ANTLR start "entryRuleEStringAllTypes"
<<<<<<< HEAD
    // InternalSCTX.g:16829:1: entryRuleEStringAllTypes returns [String current=null] : iv_ruleEStringAllTypes= ruleEStringAllTypes EOF ;
=======
    // InternalSCTX.g:16278:1: entryRuleEStringAllTypes returns [String current=null] : iv_ruleEStringAllTypes= ruleEStringAllTypes EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final String entryRuleEStringAllTypes() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEStringAllTypes = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:16829:55: (iv_ruleEStringAllTypes= ruleEStringAllTypes EOF )
            // InternalSCTX.g:16830:2: iv_ruleEStringAllTypes= ruleEStringAllTypes EOF
=======
            // InternalSCTX.g:16278:55: (iv_ruleEStringAllTypes= ruleEStringAllTypes EOF )
            // InternalSCTX.g:16279:2: iv_ruleEStringAllTypes= ruleEStringAllTypes EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEStringAllTypesRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEStringAllTypes=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEStringAllTypes.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEStringAllTypes"


    // $ANTLR start "ruleEStringAllTypes"
<<<<<<< HEAD
    // InternalSCTX.g:16836:1: ruleEStringAllTypes returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger ) ;
=======
    // InternalSCTX.g:16285:1: ruleEStringAllTypes returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final AntlrDatatypeRuleToken ruleEStringAllTypes() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_BOOLEAN_2=null;
        AntlrDatatypeRuleToken this_ExtendedID_1 = null;

        AntlrDatatypeRuleToken this_Integer_3 = null;

        AntlrDatatypeRuleToken this_Floateger_4 = null;



        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:16842:2: ( (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger ) )
            // InternalSCTX.g:16843:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger )
            {
            // InternalSCTX.g:16843:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger )
            int alt453=5;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt453=1;
=======
            // InternalSCTX.g:16291:2: ( (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger ) )
            // InternalSCTX.g:16292:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger )
            {
            // InternalSCTX.g:16292:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger )
            int alt442=5;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt442=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case RULE_ID:
                {
<<<<<<< HEAD
                alt453=2;
=======
                alt442=2;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case RULE_BOOLEAN:
                {
<<<<<<< HEAD
                alt453=3;
=======
                alt442=3;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case 93:
                {
<<<<<<< HEAD
                int LA453_4 = input.LA(2);

                if ( (LA453_4==RULE_INT) ) {
                    alt453=4;
                }
                else if ( (LA453_4==RULE_FLOAT) ) {
                    alt453=5;
=======
                int LA442_4 = input.LA(2);

                if ( (LA442_4==RULE_INT) ) {
                    alt442=4;
                }
                else if ( (LA442_4==RULE_FLOAT) ) {
                    alt442=5;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
<<<<<<< HEAD
                        new NoViableAltException("", 453, 4, input);
=======
                        new NoViableAltException("", 442, 4, input);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                    throw nvae;
                }
                }
                break;
            case RULE_INT:
                {
<<<<<<< HEAD
                alt453=4;
=======
                alt442=4;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case RULE_FLOAT:
                {
<<<<<<< HEAD
                alt453=5;
=======
                alt442=5;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
<<<<<<< HEAD
                    new NoViableAltException("", 453, 0, input);
=======
                    new NoViableAltException("", 442, 0, input);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                throw nvae;
            }

<<<<<<< HEAD
            switch (alt453) {
                case 1 :
                    // InternalSCTX.g:16844:3: this_STRING_0= RULE_STRING
=======
            switch (alt442) {
                case 1 :
                    // InternalSCTX.g:16293:3: this_STRING_0= RULE_STRING
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_0, grammarAccess.getEStringAllTypesAccess().getSTRINGTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:16852:3: this_ExtendedID_1= ruleExtendedID
=======
                    // InternalSCTX.g:16301:3: this_ExtendedID_1= ruleExtendedID
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringAllTypesAccess().getExtendedIDParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExtendedID_1=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ExtendedID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
<<<<<<< HEAD
                    // InternalSCTX.g:16863:3: this_BOOLEAN_2= RULE_BOOLEAN
=======
                    // InternalSCTX.g:16312:3: this_BOOLEAN_2= RULE_BOOLEAN
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    this_BOOLEAN_2=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_BOOLEAN_2);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_BOOLEAN_2, grammarAccess.getEStringAllTypesAccess().getBOOLEANTerminalRuleCall_2());
                      		
                    }

                    }
                    break;
                case 4 :
<<<<<<< HEAD
                    // InternalSCTX.g:16871:3: this_Integer_3= ruleInteger
=======
                    // InternalSCTX.g:16320:3: this_Integer_3= ruleInteger
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringAllTypesAccess().getIntegerParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Integer_3=ruleInteger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_Integer_3);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
<<<<<<< HEAD
                    // InternalSCTX.g:16882:3: this_Floateger_4= ruleFloateger
=======
                    // InternalSCTX.g:16331:3: this_Floateger_4= ruleFloateger
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringAllTypesAccess().getFloategerParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Floateger_4=ruleFloateger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_Floateger_4);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEStringAllTypes"


    // $ANTLR start "entryRuleExtendedID"
<<<<<<< HEAD
    // InternalSCTX.g:16896:1: entryRuleExtendedID returns [String current=null] : iv_ruleExtendedID= ruleExtendedID EOF ;
=======
    // InternalSCTX.g:16345:1: entryRuleExtendedID returns [String current=null] : iv_ruleExtendedID= ruleExtendedID EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final String entryRuleExtendedID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleExtendedID = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:16896:50: (iv_ruleExtendedID= ruleExtendedID EOF )
            // InternalSCTX.g:16897:2: iv_ruleExtendedID= ruleExtendedID EOF
=======
            // InternalSCTX.g:16345:50: (iv_ruleExtendedID= ruleExtendedID EOF )
            // InternalSCTX.g:16346:2: iv_ruleExtendedID= ruleExtendedID EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendedIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExtendedID=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExtendedID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExtendedID"


    // $ANTLR start "ruleExtendedID"
<<<<<<< HEAD
    // InternalSCTX.g:16903:1: ruleExtendedID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? ) ;
=======
    // InternalSCTX.g:16352:1: ruleExtendedID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final AntlrDatatypeRuleToken ruleExtendedID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;
        Token this_ID_3=null;
        Token this_INT_5=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:16909:2: ( (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? ) )
            // InternalSCTX.g:16910:2: (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? )
            {
            // InternalSCTX.g:16910:2: (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? )
            // InternalSCTX.g:16911:3: this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )?
=======
            // InternalSCTX.g:16358:2: ( (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? ) )
            // InternalSCTX.g:16359:2: (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? )
            {
            // InternalSCTX.g:16359:2: (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? )
            // InternalSCTX.g:16360:3: this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )?
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_206); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_ID_0, grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_0());
              		
            }
<<<<<<< HEAD
            // InternalSCTX.g:16918:3: ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )*
            loop455:
            do {
                int alt455=2;
                alt455 = dfa455.predict(input);
                switch (alt455) {
            	case 1 :
            	    // InternalSCTX.g:16919:4: (kw= '.' | kw= '-' ) this_ID_3= RULE_ID
            	    {
            	    // InternalSCTX.g:16919:4: (kw= '.' | kw= '-' )
            	    int alt454=2;
            	    int LA454_0 = input.LA(1);

            	    if ( (LA454_0==83) ) {
            	        alt454=1;
            	    }
            	    else if ( (LA454_0==94) ) {
            	        alt454=2;
=======
            // InternalSCTX.g:16367:3: ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )*
            loop444:
            do {
                int alt444=2;
                alt444 = dfa444.predict(input);
                switch (alt444) {
            	case 1 :
            	    // InternalSCTX.g:16368:4: (kw= '.' | kw= '-' ) this_ID_3= RULE_ID
            	    {
            	    // InternalSCTX.g:16368:4: (kw= '.' | kw= '-' )
            	    int alt443=2;
            	    int LA443_0 = input.LA(1);

            	    if ( (LA443_0==82) ) {
            	        alt443=1;
            	    }
            	    else if ( (LA443_0==93) ) {
            	        alt443=2;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
<<<<<<< HEAD
            	            new NoViableAltException("", 454, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt454) {
            	        case 1 :
            	            // InternalSCTX.g:16920:5: kw= '.'
=======
            	            new NoViableAltException("", 443, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt443) {
            	        case 1 :
            	            // InternalSCTX.g:16369:5: kw= '.'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	            {
            	            kw=(Token)match(input,82,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getExtendedIDAccess().getFullStopKeyword_1_0_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
<<<<<<< HEAD
            	            // InternalSCTX.g:16926:5: kw= '-'
=======
            	            // InternalSCTX.g:16375:5: kw= '-'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            	            {
            	            kw=(Token)match(input,93,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getExtendedIDAccess().getHyphenMinusKeyword_1_0_1());
            	              				
            	            }

            	            }
            	            break;

            	    }

            	    this_ID_3=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_206); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_ID_3);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(this_ID_3, grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_1_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
<<<<<<< HEAD
            	    break loop455;
                }
            } while (true);

            // InternalSCTX.g:16940:3: (kw= '#' this_INT_5= RULE_INT )?
            int alt456=2;
            int LA456_0 = input.LA(1);

            if ( (LA456_0==105) ) {
                int LA456_1 = input.LA(2);

                if ( (LA456_1==RULE_INT) ) {
                    alt456=1;
                }
            }
            switch (alt456) {
                case 1 :
                    // InternalSCTX.g:16941:4: kw= '#' this_INT_5= RULE_INT
                    {
                    kw=(Token)match(input,105,FollowSets000.FOLLOW_195); if (state.failed) return current;
=======
            	    break loop444;
                }
            } while (true);

            // InternalSCTX.g:16389:3: (kw= '#' this_INT_5= RULE_INT )?
            int alt445=2;
            int LA445_0 = input.LA(1);

            if ( (LA445_0==101) ) {
                int LA445_1 = input.LA(2);

                if ( (LA445_1==RULE_INT) ) {
                    alt445=1;
                }
            }
            switch (alt445) {
                case 1 :
                    // InternalSCTX.g:16390:4: kw= '#' this_INT_5= RULE_INT
                    {
                    kw=(Token)match(input,101,FollowSets000.FOLLOW_193); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getExtendedIDAccess().getNumberSignKeyword_2_0());
                      			
                    }
                    this_INT_5=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_INT_5);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_INT_5, grammarAccess.getExtendedIDAccess().getINTTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExtendedID"


    // $ANTLR start "entryRuleInteger"
<<<<<<< HEAD
    // InternalSCTX.g:16958:1: entryRuleInteger returns [String current=null] : iv_ruleInteger= ruleInteger EOF ;
=======
    // InternalSCTX.g:16407:1: entryRuleInteger returns [String current=null] : iv_ruleInteger= ruleInteger EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final String entryRuleInteger() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleInteger = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:16958:47: (iv_ruleInteger= ruleInteger EOF )
            // InternalSCTX.g:16959:2: iv_ruleInteger= ruleInteger EOF
=======
            // InternalSCTX.g:16407:47: (iv_ruleInteger= ruleInteger EOF )
            // InternalSCTX.g:16408:2: iv_ruleInteger= ruleInteger EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInteger=ruleInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInteger.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInteger"


    // $ANTLR start "ruleInteger"
<<<<<<< HEAD
    // InternalSCTX.g:16965:1: ruleInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_INT_1= RULE_INT ) ;
=======
    // InternalSCTX.g:16414:1: ruleInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_INT_1= RULE_INT ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final AntlrDatatypeRuleToken ruleInteger() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_1=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:16971:2: ( ( (kw= '-' )? this_INT_1= RULE_INT ) )
            // InternalSCTX.g:16972:2: ( (kw= '-' )? this_INT_1= RULE_INT )
            {
            // InternalSCTX.g:16972:2: ( (kw= '-' )? this_INT_1= RULE_INT )
            // InternalSCTX.g:16973:3: (kw= '-' )? this_INT_1= RULE_INT
            {
            // InternalSCTX.g:16973:3: (kw= '-' )?
            int alt457=2;
            int LA457_0 = input.LA(1);

            if ( (LA457_0==94) ) {
                alt457=1;
            }
            switch (alt457) {
                case 1 :
                    // InternalSCTX.g:16974:4: kw= '-'
                    {
                    kw=(Token)match(input,94,FollowSets000.FOLLOW_195); if (state.failed) return current;
=======
            // InternalSCTX.g:16420:2: ( ( (kw= '-' )? this_INT_1= RULE_INT ) )
            // InternalSCTX.g:16421:2: ( (kw= '-' )? this_INT_1= RULE_INT )
            {
            // InternalSCTX.g:16421:2: ( (kw= '-' )? this_INT_1= RULE_INT )
            // InternalSCTX.g:16422:3: (kw= '-' )? this_INT_1= RULE_INT
            {
            // InternalSCTX.g:16422:3: (kw= '-' )?
            int alt446=2;
            int LA446_0 = input.LA(1);

            if ( (LA446_0==93) ) {
                alt446=1;
            }
            switch (alt446) {
                case 1 :
                    // InternalSCTX.g:16423:4: kw= '-'
                    {
                    kw=(Token)match(input,93,FollowSets000.FOLLOW_193); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getIntegerAccess().getHyphenMinusKeyword_0());
                      			
                    }

                    }
                    break;

            }

            this_INT_1=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_INT_1);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_INT_1, grammarAccess.getIntegerAccess().getINTTerminalRuleCall_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInteger"


    // $ANTLR start "entryRuleFloateger"
<<<<<<< HEAD
    // InternalSCTX.g:16991:1: entryRuleFloateger returns [String current=null] : iv_ruleFloateger= ruleFloateger EOF ;
=======
    // InternalSCTX.g:16440:1: entryRuleFloateger returns [String current=null] : iv_ruleFloateger= ruleFloateger EOF ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final String entryRuleFloateger() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFloateger = null;


        try {
<<<<<<< HEAD
            // InternalSCTX.g:16991:49: (iv_ruleFloateger= ruleFloateger EOF )
            // InternalSCTX.g:16992:2: iv_ruleFloateger= ruleFloateger EOF
=======
            // InternalSCTX.g:16440:49: (iv_ruleFloateger= ruleFloateger EOF )
            // InternalSCTX.g:16441:2: iv_ruleFloateger= ruleFloateger EOF
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFloategerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFloateger=ruleFloateger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFloateger.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFloateger"


    // $ANTLR start "ruleFloateger"
<<<<<<< HEAD
    // InternalSCTX.g:16998:1: ruleFloateger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT ) ;
=======
    // InternalSCTX.g:16447:1: ruleFloateger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final AntlrDatatypeRuleToken ruleFloateger() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_FLOAT_1=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17004:2: ( ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT ) )
            // InternalSCTX.g:17005:2: ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT )
            {
            // InternalSCTX.g:17005:2: ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT )
            // InternalSCTX.g:17006:3: (kw= '-' )? this_FLOAT_1= RULE_FLOAT
            {
            // InternalSCTX.g:17006:3: (kw= '-' )?
            int alt458=2;
            int LA458_0 = input.LA(1);

            if ( (LA458_0==94) ) {
                alt458=1;
            }
            switch (alt458) {
                case 1 :
                    // InternalSCTX.g:17007:4: kw= '-'
=======
            // InternalSCTX.g:16453:2: ( ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT ) )
            // InternalSCTX.g:16454:2: ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT )
            {
            // InternalSCTX.g:16454:2: ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT )
            // InternalSCTX.g:16455:3: (kw= '-' )? this_FLOAT_1= RULE_FLOAT
            {
            // InternalSCTX.g:16455:3: (kw= '-' )?
            int alt447=2;
            int LA447_0 = input.LA(1);

            if ( (LA447_0==93) ) {
                alt447=1;
            }
            switch (alt447) {
                case 1 :
                    // InternalSCTX.g:16456:4: kw= '-'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    kw=(Token)match(input,93,FollowSets000.FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getFloategerAccess().getHyphenMinusKeyword_0());
                      			
                    }

                    }
                    break;

            }

            this_FLOAT_1=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_FLOAT_1);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_FLOAT_1, grammarAccess.getFloategerAccess().getFLOATTerminalRuleCall_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFloateger"


    // $ANTLR start "rulePreemptionType"
<<<<<<< HEAD
    // InternalSCTX.g:17024:1: rulePreemptionType returns [Enumerator current=null] : ( (enumLiteral_0= 'go to' ) | (enumLiteral_1= 'abort to' ) | (enumLiteral_2= 'join to' ) ) ;
=======
    // InternalSCTX.g:16473:1: rulePreemptionType returns [Enumerator current=null] : ( (enumLiteral_0= 'go to' ) | (enumLiteral_1= 'abort to' ) | (enumLiteral_2= 'join to' ) ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final Enumerator rulePreemptionType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17030:2: ( ( (enumLiteral_0= 'go to' ) | (enumLiteral_1= 'abort to' ) | (enumLiteral_2= 'join to' ) ) )
            // InternalSCTX.g:17031:2: ( (enumLiteral_0= 'go to' ) | (enumLiteral_1= 'abort to' ) | (enumLiteral_2= 'join to' ) )
            {
            // InternalSCTX.g:17031:2: ( (enumLiteral_0= 'go to' ) | (enumLiteral_1= 'abort to' ) | (enumLiteral_2= 'join to' ) )
            int alt459=3;
=======
            // InternalSCTX.g:16479:2: ( ( (enumLiteral_0= 'go to' ) | (enumLiteral_1= 'abort to' ) | (enumLiteral_2= 'join to' ) ) )
            // InternalSCTX.g:16480:2: ( (enumLiteral_0= 'go to' ) | (enumLiteral_1= 'abort to' ) | (enumLiteral_2= 'join to' ) )
            {
            // InternalSCTX.g:16480:2: ( (enumLiteral_0= 'go to' ) | (enumLiteral_1= 'abort to' ) | (enumLiteral_2= 'join to' ) )
            int alt448=3;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            switch ( input.LA(1) ) {
            case 67:
                {
<<<<<<< HEAD
                alt459=1;
                }
                break;
            case 107:
                {
                alt459=2;
                }
                break;
            case 108:
                {
                alt459=3;
=======
                alt448=1;
                }
                break;
            case 103:
                {
                alt448=2;
                }
                break;
            case 104:
                {
                alt448=3;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
<<<<<<< HEAD
                    new NoViableAltException("", 459, 0, input);
=======
                    new NoViableAltException("", 448, 0, input);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                throw nvae;
            }

<<<<<<< HEAD
            switch (alt459) {
                case 1 :
                    // InternalSCTX.g:17032:3: (enumLiteral_0= 'go to' )
                    {
                    // InternalSCTX.g:17032:3: (enumLiteral_0= 'go to' )
                    // InternalSCTX.g:17033:4: enumLiteral_0= 'go to'
=======
            switch (alt448) {
                case 1 :
                    // InternalSCTX.g:16481:3: (enumLiteral_0= 'go to' )
                    {
                    // InternalSCTX.g:16481:3: (enumLiteral_0= 'go to' )
                    // InternalSCTX.g:16482:4: enumLiteral_0= 'go to'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    enumLiteral_0=(Token)match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPreemptionTypeAccess().getWEAKABORTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getPreemptionTypeAccess().getWEAKABORTEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:17040:3: (enumLiteral_1= 'abort to' )
                    {
                    // InternalSCTX.g:17040:3: (enumLiteral_1= 'abort to' )
                    // InternalSCTX.g:17041:4: enumLiteral_1= 'abort to'
                    {
                    enumLiteral_1=(Token)match(input,107,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:16489:3: (enumLiteral_1= 'abort to' )
                    {
                    // InternalSCTX.g:16489:3: (enumLiteral_1= 'abort to' )
                    // InternalSCTX.g:16490:4: enumLiteral_1= 'abort to'
                    {
                    enumLiteral_1=(Token)match(input,103,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPreemptionTypeAccess().getSTRONGABORTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getPreemptionTypeAccess().getSTRONGABORTEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
<<<<<<< HEAD
                    // InternalSCTX.g:17048:3: (enumLiteral_2= 'join to' )
                    {
                    // InternalSCTX.g:17048:3: (enumLiteral_2= 'join to' )
                    // InternalSCTX.g:17049:4: enumLiteral_2= 'join to'
                    {
                    enumLiteral_2=(Token)match(input,108,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:16497:3: (enumLiteral_2= 'join to' )
                    {
                    // InternalSCTX.g:16497:3: (enumLiteral_2= 'join to' )
                    // InternalSCTX.g:16498:4: enumLiteral_2= 'join to'
                    {
                    enumLiteral_2=(Token)match(input,104,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPreemptionTypeAccess().getTERMINATIONEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getPreemptionTypeAccess().getTERMINATIONEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePreemptionType"


    // $ANTLR start "ruleDelayType"
<<<<<<< HEAD
    // InternalSCTX.g:17059:1: ruleDelayType returns [Enumerator current=null] : ( (enumLiteral_0= 'undefined' ) | (enumLiteral_1= 'delayed' ) | (enumLiteral_2= 'immediate' ) | (enumLiteral_3= 'auto' ) ) ;
=======
    // InternalSCTX.g:16508:1: ruleDelayType returns [Enumerator current=null] : ( (enumLiteral_0= 'undefined' ) | (enumLiteral_1= 'delayed' ) | (enumLiteral_2= 'immediate' ) | (enumLiteral_3= 'auto' ) ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final Enumerator ruleDelayType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17065:2: ( ( (enumLiteral_0= 'undefined' ) | (enumLiteral_1= 'delayed' ) | (enumLiteral_2= 'immediate' ) | (enumLiteral_3= 'auto' ) ) )
            // InternalSCTX.g:17066:2: ( (enumLiteral_0= 'undefined' ) | (enumLiteral_1= 'delayed' ) | (enumLiteral_2= 'immediate' ) | (enumLiteral_3= 'auto' ) )
            {
            // InternalSCTX.g:17066:2: ( (enumLiteral_0= 'undefined' ) | (enumLiteral_1= 'delayed' ) | (enumLiteral_2= 'immediate' ) | (enumLiteral_3= 'auto' ) )
            int alt460=4;
            switch ( input.LA(1) ) {
            case 109:
                {
                alt460=1;
                }
                break;
            case 110:
                {
                alt460=2;
                }
                break;
            case 111:
                {
                alt460=3;
                }
                break;
            case 112:
                {
                alt460=4;
=======
            // InternalSCTX.g:16514:2: ( ( (enumLiteral_0= 'undefined' ) | (enumLiteral_1= 'delayed' ) | (enumLiteral_2= 'immediate' ) | (enumLiteral_3= 'auto' ) ) )
            // InternalSCTX.g:16515:2: ( (enumLiteral_0= 'undefined' ) | (enumLiteral_1= 'delayed' ) | (enumLiteral_2= 'immediate' ) | (enumLiteral_3= 'auto' ) )
            {
            // InternalSCTX.g:16515:2: ( (enumLiteral_0= 'undefined' ) | (enumLiteral_1= 'delayed' ) | (enumLiteral_2= 'immediate' ) | (enumLiteral_3= 'auto' ) )
            int alt449=4;
            switch ( input.LA(1) ) {
            case 105:
                {
                alt449=1;
                }
                break;
            case 106:
                {
                alt449=2;
                }
                break;
            case 107:
                {
                alt449=3;
                }
                break;
            case 108:
                {
                alt449=4;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
<<<<<<< HEAD
                    new NoViableAltException("", 460, 0, input);
=======
                    new NoViableAltException("", 449, 0, input);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                throw nvae;
            }

<<<<<<< HEAD
            switch (alt460) {
                case 1 :
                    // InternalSCTX.g:17067:3: (enumLiteral_0= 'undefined' )
                    {
                    // InternalSCTX.g:17067:3: (enumLiteral_0= 'undefined' )
                    // InternalSCTX.g:17068:4: enumLiteral_0= 'undefined'
                    {
                    enumLiteral_0=(Token)match(input,109,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
            switch (alt449) {
                case 1 :
                    // InternalSCTX.g:16516:3: (enumLiteral_0= 'undefined' )
                    {
                    // InternalSCTX.g:16516:3: (enumLiteral_0= 'undefined' )
                    // InternalSCTX.g:16517:4: enumLiteral_0= 'undefined'
                    {
                    enumLiteral_0=(Token)match(input,105,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDelayTypeAccess().getUNDEFINEDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getDelayTypeAccess().getUNDEFINEDEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:17075:3: (enumLiteral_1= 'delayed' )
                    {
                    // InternalSCTX.g:17075:3: (enumLiteral_1= 'delayed' )
                    // InternalSCTX.g:17076:4: enumLiteral_1= 'delayed'
                    {
                    enumLiteral_1=(Token)match(input,110,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:16524:3: (enumLiteral_1= 'delayed' )
                    {
                    // InternalSCTX.g:16524:3: (enumLiteral_1= 'delayed' )
                    // InternalSCTX.g:16525:4: enumLiteral_1= 'delayed'
                    {
                    enumLiteral_1=(Token)match(input,106,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDelayTypeAccess().getDELAYEDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getDelayTypeAccess().getDELAYEDEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
<<<<<<< HEAD
                    // InternalSCTX.g:17083:3: (enumLiteral_2= 'immediate' )
                    {
                    // InternalSCTX.g:17083:3: (enumLiteral_2= 'immediate' )
                    // InternalSCTX.g:17084:4: enumLiteral_2= 'immediate'
                    {
                    enumLiteral_2=(Token)match(input,111,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:16532:3: (enumLiteral_2= 'immediate' )
                    {
                    // InternalSCTX.g:16532:3: (enumLiteral_2= 'immediate' )
                    // InternalSCTX.g:16533:4: enumLiteral_2= 'immediate'
                    {
                    enumLiteral_2=(Token)match(input,107,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDelayTypeAccess().getIMMEDIATEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getDelayTypeAccess().getIMMEDIATEEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
<<<<<<< HEAD
                    // InternalSCTX.g:17091:3: (enumLiteral_3= 'auto' )
                    {
                    // InternalSCTX.g:17091:3: (enumLiteral_3= 'auto' )
                    // InternalSCTX.g:17092:4: enumLiteral_3= 'auto'
                    {
                    enumLiteral_3=(Token)match(input,112,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:16540:3: (enumLiteral_3= 'auto' )
                    {
                    // InternalSCTX.g:16540:3: (enumLiteral_3= 'auto' )
                    // InternalSCTX.g:16541:4: enumLiteral_3= 'auto'
                    {
                    enumLiteral_3=(Token)match(input,108,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDelayTypeAccess().getAUTOMATICEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getDelayTypeAccess().getAUTOMATICEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDelayType"


    // $ANTLR start "ruleHistoryType"
<<<<<<< HEAD
    // InternalSCTX.g:17102:1: ruleHistoryType returns [Enumerator current=null] : ( (enumLiteral_0= 'reset' ) | (enumLiteral_1= 'shallow history' ) | (enumLiteral_2= 'history' ) ) ;
=======
    // InternalSCTX.g:16551:1: ruleHistoryType returns [Enumerator current=null] : ( (enumLiteral_0= 'reset' ) | (enumLiteral_1= 'shallow history' ) | (enumLiteral_2= 'history' ) ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final Enumerator ruleHistoryType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17108:2: ( ( (enumLiteral_0= 'reset' ) | (enumLiteral_1= 'shallow history' ) | (enumLiteral_2= 'history' ) ) )
            // InternalSCTX.g:17109:2: ( (enumLiteral_0= 'reset' ) | (enumLiteral_1= 'shallow history' ) | (enumLiteral_2= 'history' ) )
            {
            // InternalSCTX.g:17109:2: ( (enumLiteral_0= 'reset' ) | (enumLiteral_1= 'shallow history' ) | (enumLiteral_2= 'history' ) )
            int alt461=3;
            switch ( input.LA(1) ) {
            case 113:
                {
                alt461=1;
                }
                break;
            case 114:
                {
                alt461=2;
                }
                break;
            case 115:
                {
                alt461=3;
=======
            // InternalSCTX.g:16557:2: ( ( (enumLiteral_0= 'reset' ) | (enumLiteral_1= 'shallow history' ) | (enumLiteral_2= 'history' ) ) )
            // InternalSCTX.g:16558:2: ( (enumLiteral_0= 'reset' ) | (enumLiteral_1= 'shallow history' ) | (enumLiteral_2= 'history' ) )
            {
            // InternalSCTX.g:16558:2: ( (enumLiteral_0= 'reset' ) | (enumLiteral_1= 'shallow history' ) | (enumLiteral_2= 'history' ) )
            int alt450=3;
            switch ( input.LA(1) ) {
            case 109:
                {
                alt450=1;
                }
                break;
            case 110:
                {
                alt450=2;
                }
                break;
            case 111:
                {
                alt450=3;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
<<<<<<< HEAD
                    new NoViableAltException("", 461, 0, input);
=======
                    new NoViableAltException("", 450, 0, input);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                throw nvae;
            }

<<<<<<< HEAD
            switch (alt461) {
                case 1 :
                    // InternalSCTX.g:17110:3: (enumLiteral_0= 'reset' )
                    {
                    // InternalSCTX.g:17110:3: (enumLiteral_0= 'reset' )
                    // InternalSCTX.g:17111:4: enumLiteral_0= 'reset'
                    {
                    enumLiteral_0=(Token)match(input,113,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
            switch (alt450) {
                case 1 :
                    // InternalSCTX.g:16559:3: (enumLiteral_0= 'reset' )
                    {
                    // InternalSCTX.g:16559:3: (enumLiteral_0= 'reset' )
                    // InternalSCTX.g:16560:4: enumLiteral_0= 'reset'
                    {
                    enumLiteral_0=(Token)match(input,109,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getHistoryTypeAccess().getRESETEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getHistoryTypeAccess().getRESETEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:17118:3: (enumLiteral_1= 'shallow history' )
                    {
                    // InternalSCTX.g:17118:3: (enumLiteral_1= 'shallow history' )
                    // InternalSCTX.g:17119:4: enumLiteral_1= 'shallow history'
                    {
                    enumLiteral_1=(Token)match(input,114,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:16567:3: (enumLiteral_1= 'shallow history' )
                    {
                    // InternalSCTX.g:16567:3: (enumLiteral_1= 'shallow history' )
                    // InternalSCTX.g:16568:4: enumLiteral_1= 'shallow history'
                    {
                    enumLiteral_1=(Token)match(input,110,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getHistoryTypeAccess().getSHALLOWEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getHistoryTypeAccess().getSHALLOWEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
<<<<<<< HEAD
                    // InternalSCTX.g:17126:3: (enumLiteral_2= 'history' )
                    {
                    // InternalSCTX.g:17126:3: (enumLiteral_2= 'history' )
                    // InternalSCTX.g:17127:4: enumLiteral_2= 'history'
                    {
                    enumLiteral_2=(Token)match(input,115,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:16575:3: (enumLiteral_2= 'history' )
                    {
                    // InternalSCTX.g:16575:3: (enumLiteral_2= 'history' )
                    // InternalSCTX.g:16576:4: enumLiteral_2= 'history'
                    {
                    enumLiteral_2=(Token)match(input,111,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getHistoryTypeAccess().getDEEPEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getHistoryTypeAccess().getDEEPEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHistoryType"


    // $ANTLR start "ruleValueType"
<<<<<<< HEAD
    // InternalSCTX.g:17137:1: ruleValueType returns [Enumerator current=null] : ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) | (enumLiteral_5= 'clock' ) ) ;
=======
    // InternalSCTX.g:16586:1: ruleValueType returns [Enumerator current=null] : ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) | (enumLiteral_5= 'clock' ) ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final Enumerator ruleValueType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17143:2: ( ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) | (enumLiteral_5= 'clock' ) ) )
            // InternalSCTX.g:17144:2: ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) | (enumLiteral_5= 'clock' ) )
            {
            // InternalSCTX.g:17144:2: ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) | (enumLiteral_5= 'clock' ) )
            int alt462=6;
            switch ( input.LA(1) ) {
            case 116:
                {
                alt462=1;
=======
            // InternalSCTX.g:16592:2: ( ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) | (enumLiteral_5= 'clock' ) ) )
            // InternalSCTX.g:16593:2: ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) | (enumLiteral_5= 'clock' ) )
            {
            // InternalSCTX.g:16593:2: ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) | (enumLiteral_5= 'clock' ) )
            int alt451=6;
            switch ( input.LA(1) ) {
            case 112:
                {
                alt451=1;
                }
                break;
            case 113:
                {
                alt451=2;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case 117:
                {
<<<<<<< HEAD
                alt462=2;
=======
                alt451=3;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case 118:
                {
<<<<<<< HEAD
                alt462=3;
=======
                alt451=4;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case 119:
                {
<<<<<<< HEAD
                alt462=4;
=======
                alt451=5;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case 120:
                {
<<<<<<< HEAD
                alt462=5;
                }
                break;
            case 121:
                {
                alt462=6;
=======
                alt451=6;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
<<<<<<< HEAD
                    new NoViableAltException("", 462, 0, input);
=======
                    new NoViableAltException("", 451, 0, input);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                throw nvae;
            }

<<<<<<< HEAD
            switch (alt462) {
                case 1 :
                    // InternalSCTX.g:17145:3: (enumLiteral_0= 'pure' )
                    {
                    // InternalSCTX.g:17145:3: (enumLiteral_0= 'pure' )
                    // InternalSCTX.g:17146:4: enumLiteral_0= 'pure'
                    {
                    enumLiteral_0=(Token)match(input,116,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
            switch (alt451) {
                case 1 :
                    // InternalSCTX.g:16594:3: (enumLiteral_0= 'pure' )
                    {
                    // InternalSCTX.g:16594:3: (enumLiteral_0= 'pure' )
                    // InternalSCTX.g:16595:4: enumLiteral_0= 'pure'
                    {
                    enumLiteral_0=(Token)match(input,112,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getPUREEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getValueTypeAccess().getPUREEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:17153:3: (enumLiteral_1= 'bool' )
                    {
                    // InternalSCTX.g:17153:3: (enumLiteral_1= 'bool' )
                    // InternalSCTX.g:17154:4: enumLiteral_1= 'bool'
                    {
                    enumLiteral_1=(Token)match(input,117,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:16602:3: (enumLiteral_1= 'bool' )
                    {
                    // InternalSCTX.g:16602:3: (enumLiteral_1= 'bool' )
                    // InternalSCTX.g:16603:4: enumLiteral_1= 'bool'
                    {
                    enumLiteral_1=(Token)match(input,113,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
<<<<<<< HEAD
                    // InternalSCTX.g:17161:3: (enumLiteral_2= 'int' )
                    {
                    // InternalSCTX.g:17161:3: (enumLiteral_2= 'int' )
                    // InternalSCTX.g:17162:4: enumLiteral_2= 'int'
                    {
                    enumLiteral_2=(Token)match(input,118,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:16610:3: (enumLiteral_2= 'int' )
                    {
                    // InternalSCTX.g:16610:3: (enumLiteral_2= 'int' )
                    // InternalSCTX.g:16611:4: enumLiteral_2= 'int'
                    {
                    enumLiteral_2=(Token)match(input,114,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
<<<<<<< HEAD
                    // InternalSCTX.g:17169:3: (enumLiteral_3= 'float' )
                    {
                    // InternalSCTX.g:17169:3: (enumLiteral_3= 'float' )
                    // InternalSCTX.g:17170:4: enumLiteral_3= 'float'
                    {
                    enumLiteral_3=(Token)match(input,119,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:16618:3: (enumLiteral_3= 'float' )
                    {
                    // InternalSCTX.g:16618:3: (enumLiteral_3= 'float' )
                    // InternalSCTX.g:16619:4: enumLiteral_3= 'float'
                    {
                    enumLiteral_3=(Token)match(input,115,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
<<<<<<< HEAD
                    // InternalSCTX.g:17177:3: (enumLiteral_4= 'string' )
                    {
                    // InternalSCTX.g:17177:3: (enumLiteral_4= 'string' )
                    // InternalSCTX.g:17178:4: enumLiteral_4= 'string'
                    {
                    enumLiteral_4=(Token)match(input,120,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:16626:3: (enumLiteral_4= 'string' )
                    {
                    // InternalSCTX.g:16626:3: (enumLiteral_4= 'string' )
                    // InternalSCTX.g:16627:4: enumLiteral_4= 'string'
                    {
                    enumLiteral_4=(Token)match(input,116,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
<<<<<<< HEAD
                    // InternalSCTX.g:17185:3: (enumLiteral_5= 'clock' )
                    {
                    // InternalSCTX.g:17185:3: (enumLiteral_5= 'clock' )
                    // InternalSCTX.g:17186:4: enumLiteral_5= 'clock'
                    {
                    enumLiteral_5=(Token)match(input,121,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:16634:3: (enumLiteral_5= 'clock' )
                    {
                    // InternalSCTX.g:16634:3: (enumLiteral_5= 'clock' )
                    // InternalSCTX.g:16635:4: enumLiteral_5= 'clock'
                    {
                    enumLiteral_5=(Token)match(input,117,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getCLOCKEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getValueTypeAccess().getCLOCKEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueType"


    // $ANTLR start "rulePriorityProtocol"
<<<<<<< HEAD
    // InternalSCTX.g:17196:1: rulePriorityProtocol returns [Enumerator current=null] : ( (enumLiteral_0= 'conflicting' ) | (enumLiteral_1= 'commuting' ) ) ;
=======
    // InternalSCTX.g:16645:1: rulePriorityProtocol returns [Enumerator current=null] : ( (enumLiteral_0= 'conflicting' ) | (enumLiteral_1= 'commuting' ) ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final Enumerator rulePriorityProtocol() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17202:2: ( ( (enumLiteral_0= 'conflicting' ) | (enumLiteral_1= 'commuting' ) ) )
            // InternalSCTX.g:17203:2: ( (enumLiteral_0= 'conflicting' ) | (enumLiteral_1= 'commuting' ) )
            {
            // InternalSCTX.g:17203:2: ( (enumLiteral_0= 'conflicting' ) | (enumLiteral_1= 'commuting' ) )
            int alt463=2;
            int LA463_0 = input.LA(1);

            if ( (LA463_0==122) ) {
                alt463=1;
            }
            else if ( (LA463_0==123) ) {
                alt463=2;
=======
            // InternalSCTX.g:16651:2: ( ( (enumLiteral_0= 'conflicting' ) | (enumLiteral_1= 'commuting' ) ) )
            // InternalSCTX.g:16652:2: ( (enumLiteral_0= 'conflicting' ) | (enumLiteral_1= 'commuting' ) )
            {
            // InternalSCTX.g:16652:2: ( (enumLiteral_0= 'conflicting' ) | (enumLiteral_1= 'commuting' ) )
            int alt452=2;
            int LA452_0 = input.LA(1);

            if ( (LA452_0==118) ) {
                alt452=1;
            }
            else if ( (LA452_0==119) ) {
                alt452=2;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
<<<<<<< HEAD
                    new NoViableAltException("", 463, 0, input);

                throw nvae;
            }
            switch (alt463) {
                case 1 :
                    // InternalSCTX.g:17204:3: (enumLiteral_0= 'conflicting' )
                    {
                    // InternalSCTX.g:17204:3: (enumLiteral_0= 'conflicting' )
                    // InternalSCTX.g:17205:4: enumLiteral_0= 'conflicting'
                    {
                    enumLiteral_0=(Token)match(input,122,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    new NoViableAltException("", 452, 0, input);

                throw nvae;
            }
            switch (alt452) {
                case 1 :
                    // InternalSCTX.g:16653:3: (enumLiteral_0= 'conflicting' )
                    {
                    // InternalSCTX.g:16653:3: (enumLiteral_0= 'conflicting' )
                    // InternalSCTX.g:16654:4: enumLiteral_0= 'conflicting'
                    {
                    enumLiteral_0=(Token)match(input,118,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPriorityProtocolAccess().getCONFLICTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getPriorityProtocolAccess().getCONFLICTEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:17212:3: (enumLiteral_1= 'commuting' )
                    {
                    // InternalSCTX.g:17212:3: (enumLiteral_1= 'commuting' )
                    // InternalSCTX.g:17213:4: enumLiteral_1= 'commuting'
                    {
                    enumLiteral_1=(Token)match(input,123,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:16661:3: (enumLiteral_1= 'commuting' )
                    {
                    // InternalSCTX.g:16661:3: (enumLiteral_1= 'commuting' )
                    // InternalSCTX.g:16662:4: enumLiteral_1= 'commuting'
                    {
                    enumLiteral_1=(Token)match(input,119,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPriorityProtocolAccess().getCONFLUENTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getPriorityProtocolAccess().getCONFLUENTEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePriorityProtocol"


    // $ANTLR start "ruleAssignOperator"
<<<<<<< HEAD
    // InternalSCTX.g:17223:1: ruleAssignOperator returns [Enumerator current=null] : ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= '<<=' ) | (enumLiteral_10= '>>=' ) | (enumLiteral_11= '>>>=' ) | (enumLiteral_12= 'min=' ) | (enumLiteral_13= 'max=' ) ) ;
=======
    // InternalSCTX.g:16672:1: ruleAssignOperator returns [Enumerator current=null] : ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= '<<=' ) | (enumLiteral_10= '>>=' ) | (enumLiteral_11= '>>>=' ) | (enumLiteral_12= 'min=' ) | (enumLiteral_13= 'max=' ) ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final Enumerator ruleAssignOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;
        Token enumLiteral_8=null;
        Token enumLiteral_9=null;
        Token enumLiteral_10=null;
        Token enumLiteral_11=null;
        Token enumLiteral_12=null;
        Token enumLiteral_13=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17229:2: ( ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= '<<=' ) | (enumLiteral_10= '>>=' ) | (enumLiteral_11= '>>>=' ) | (enumLiteral_12= 'min=' ) | (enumLiteral_13= 'max=' ) ) )
            // InternalSCTX.g:17230:2: ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= '<<=' ) | (enumLiteral_10= '>>=' ) | (enumLiteral_11= '>>>=' ) | (enumLiteral_12= 'min=' ) | (enumLiteral_13= 'max=' ) )
            {
            // InternalSCTX.g:17230:2: ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= '<<=' ) | (enumLiteral_10= '>>=' ) | (enumLiteral_11= '>>>=' ) | (enumLiteral_12= 'min=' ) | (enumLiteral_13= 'max=' ) )
            int alt464=14;
=======
            // InternalSCTX.g:16678:2: ( ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= '<<=' ) | (enumLiteral_10= '>>=' ) | (enumLiteral_11= '>>>=' ) | (enumLiteral_12= 'min=' ) | (enumLiteral_13= 'max=' ) ) )
            // InternalSCTX.g:16679:2: ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= '<<=' ) | (enumLiteral_10= '>>=' ) | (enumLiteral_11= '>>>=' ) | (enumLiteral_12= 'min=' ) | (enumLiteral_13= 'max=' ) )
            {
            // InternalSCTX.g:16679:2: ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= '<<=' ) | (enumLiteral_10= '>>=' ) | (enumLiteral_11= '>>>=' ) | (enumLiteral_12= 'min=' ) | (enumLiteral_13= 'max=' ) )
            int alt453=14;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            switch ( input.LA(1) ) {
            case 80:
                {
<<<<<<< HEAD
                alt464=1;
=======
                alt453=1;
                }
                break;
            case 120:
                {
                alt453=2;
                }
                break;
            case 121:
                {
                alt453=3;
                }
                break;
            case 122:
                {
                alt453=4;
                }
                break;
            case 123:
                {
                alt453=5;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case 124:
                {
<<<<<<< HEAD
                alt464=2;
=======
                alt453=6;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case 125:
                {
<<<<<<< HEAD
                alt464=3;
=======
                alt453=7;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case 126:
                {
<<<<<<< HEAD
                alt464=4;
=======
                alt453=8;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case 127:
                {
<<<<<<< HEAD
                alt464=5;
=======
                alt453=9;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case 128:
                {
<<<<<<< HEAD
                alt464=6;
=======
                alt453=10;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case 129:
                {
<<<<<<< HEAD
                alt464=7;
=======
                alt453=11;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case 130:
                {
<<<<<<< HEAD
                alt464=8;
=======
                alt453=12;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case 131:
                {
<<<<<<< HEAD
                alt464=9;
=======
                alt453=13;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case 132:
                {
<<<<<<< HEAD
                alt464=10;
                }
                break;
            case 133:
                {
                alt464=11;
                }
                break;
            case 134:
                {
                alt464=12;
                }
                break;
            case 135:
                {
                alt464=13;
                }
                break;
            case 136:
                {
                alt464=14;
=======
                alt453=14;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
<<<<<<< HEAD
                    new NoViableAltException("", 464, 0, input);
=======
                    new NoViableAltException("", 453, 0, input);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                throw nvae;
            }

<<<<<<< HEAD
            switch (alt464) {
                case 1 :
                    // InternalSCTX.g:17231:3: (enumLiteral_0= '=' )
                    {
                    // InternalSCTX.g:17231:3: (enumLiteral_0= '=' )
                    // InternalSCTX.g:17232:4: enumLiteral_0= '='
=======
            switch (alt453) {
                case 1 :
                    // InternalSCTX.g:16680:3: (enumLiteral_0= '=' )
                    {
                    // InternalSCTX.g:16680:3: (enumLiteral_0= '=' )
                    // InternalSCTX.g:16681:4: enumLiteral_0= '='
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    enumLiteral_0=(Token)match(input,80,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getAssignOperatorAccess().getASSIGNEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:17239:3: (enumLiteral_1= '+=' )
                    {
                    // InternalSCTX.g:17239:3: (enumLiteral_1= '+=' )
                    // InternalSCTX.g:17240:4: enumLiteral_1= '+='
                    {
                    enumLiteral_1=(Token)match(input,124,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:16688:3: (enumLiteral_1= '+=' )
                    {
                    // InternalSCTX.g:16688:3: (enumLiteral_1= '+=' )
                    // InternalSCTX.g:16689:4: enumLiteral_1= '+='
                    {
                    enumLiteral_1=(Token)match(input,120,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNADDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getAssignOperatorAccess().getASSIGNADDEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
<<<<<<< HEAD
                    // InternalSCTX.g:17247:3: (enumLiteral_2= '-=' )
                    {
                    // InternalSCTX.g:17247:3: (enumLiteral_2= '-=' )
                    // InternalSCTX.g:17248:4: enumLiteral_2= '-='
                    {
                    enumLiteral_2=(Token)match(input,125,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:16696:3: (enumLiteral_2= '-=' )
                    {
                    // InternalSCTX.g:16696:3: (enumLiteral_2= '-=' )
                    // InternalSCTX.g:16697:4: enumLiteral_2= '-='
                    {
                    enumLiteral_2=(Token)match(input,121,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNSUBEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getAssignOperatorAccess().getASSIGNSUBEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
<<<<<<< HEAD
                    // InternalSCTX.g:17255:3: (enumLiteral_3= '*=' )
                    {
                    // InternalSCTX.g:17255:3: (enumLiteral_3= '*=' )
                    // InternalSCTX.g:17256:4: enumLiteral_3= '*='
                    {
                    enumLiteral_3=(Token)match(input,126,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:16704:3: (enumLiteral_3= '*=' )
                    {
                    // InternalSCTX.g:16704:3: (enumLiteral_3= '*=' )
                    // InternalSCTX.g:16705:4: enumLiteral_3= '*='
                    {
                    enumLiteral_3=(Token)match(input,122,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNMULEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getAssignOperatorAccess().getASSIGNMULEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
<<<<<<< HEAD
                    // InternalSCTX.g:17263:3: (enumLiteral_4= '/=' )
                    {
                    // InternalSCTX.g:17263:3: (enumLiteral_4= '/=' )
                    // InternalSCTX.g:17264:4: enumLiteral_4= '/='
                    {
                    enumLiteral_4=(Token)match(input,127,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:16712:3: (enumLiteral_4= '/=' )
                    {
                    // InternalSCTX.g:16712:3: (enumLiteral_4= '/=' )
                    // InternalSCTX.g:16713:4: enumLiteral_4= '/='
                    {
                    enumLiteral_4=(Token)match(input,123,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNDIVEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getAssignOperatorAccess().getASSIGNDIVEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
<<<<<<< HEAD
                    // InternalSCTX.g:17271:3: (enumLiteral_5= '%=' )
                    {
                    // InternalSCTX.g:17271:3: (enumLiteral_5= '%=' )
                    // InternalSCTX.g:17272:4: enumLiteral_5= '%='
                    {
                    enumLiteral_5=(Token)match(input,128,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:16720:3: (enumLiteral_5= '%=' )
                    {
                    // InternalSCTX.g:16720:3: (enumLiteral_5= '%=' )
                    // InternalSCTX.g:16721:4: enumLiteral_5= '%='
                    {
                    enumLiteral_5=(Token)match(input,124,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNMODEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getAssignOperatorAccess().getASSIGNMODEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
<<<<<<< HEAD
                    // InternalSCTX.g:17279:3: (enumLiteral_6= '&=' )
                    {
                    // InternalSCTX.g:17279:3: (enumLiteral_6= '&=' )
                    // InternalSCTX.g:17280:4: enumLiteral_6= '&='
                    {
                    enumLiteral_6=(Token)match(input,129,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:16728:3: (enumLiteral_6= '&=' )
                    {
                    // InternalSCTX.g:16728:3: (enumLiteral_6= '&=' )
                    // InternalSCTX.g:16729:4: enumLiteral_6= '&='
                    {
                    enumLiteral_6=(Token)match(input,125,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNANDEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getAssignOperatorAccess().getASSIGNANDEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
<<<<<<< HEAD
                    // InternalSCTX.g:17287:3: (enumLiteral_7= '|=' )
                    {
                    // InternalSCTX.g:17287:3: (enumLiteral_7= '|=' )
                    // InternalSCTX.g:17288:4: enumLiteral_7= '|='
                    {
                    enumLiteral_7=(Token)match(input,130,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:16736:3: (enumLiteral_7= '|=' )
                    {
                    // InternalSCTX.g:16736:3: (enumLiteral_7= '|=' )
                    // InternalSCTX.g:16737:4: enumLiteral_7= '|='
                    {
                    enumLiteral_7=(Token)match(input,126,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNOREnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_7, grammarAccess.getAssignOperatorAccess().getASSIGNOREnumLiteralDeclaration_7());
                      			
                    }

                    }


                    }
                    break;
                case 9 :
<<<<<<< HEAD
                    // InternalSCTX.g:17295:3: (enumLiteral_8= '^=' )
                    {
                    // InternalSCTX.g:17295:3: (enumLiteral_8= '^=' )
                    // InternalSCTX.g:17296:4: enumLiteral_8= '^='
                    {
                    enumLiteral_8=(Token)match(input,131,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:16744:3: (enumLiteral_8= '^=' )
                    {
                    // InternalSCTX.g:16744:3: (enumLiteral_8= '^=' )
                    // InternalSCTX.g:16745:4: enumLiteral_8= '^='
                    {
                    enumLiteral_8=(Token)match(input,127,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNXOREnumLiteralDeclaration_8().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_8, grammarAccess.getAssignOperatorAccess().getASSIGNXOREnumLiteralDeclaration_8());
                      			
                    }

                    }


                    }
                    break;
                case 10 :
<<<<<<< HEAD
                    // InternalSCTX.g:17303:3: (enumLiteral_9= '<<=' )
                    {
                    // InternalSCTX.g:17303:3: (enumLiteral_9= '<<=' )
                    // InternalSCTX.g:17304:4: enumLiteral_9= '<<='
                    {
                    enumLiteral_9=(Token)match(input,132,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:16752:3: (enumLiteral_9= '<<=' )
                    {
                    // InternalSCTX.g:16752:3: (enumLiteral_9= '<<=' )
                    // InternalSCTX.g:16753:4: enumLiteral_9= '<<='
                    {
                    enumLiteral_9=(Token)match(input,128,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTLEFTEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_9, grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTLEFTEnumLiteralDeclaration_9());
                      			
                    }

                    }


                    }
                    break;
                case 11 :
<<<<<<< HEAD
                    // InternalSCTX.g:17311:3: (enumLiteral_10= '>>=' )
                    {
                    // InternalSCTX.g:17311:3: (enumLiteral_10= '>>=' )
                    // InternalSCTX.g:17312:4: enumLiteral_10= '>>='
                    {
                    enumLiteral_10=(Token)match(input,133,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:16760:3: (enumLiteral_10= '>>=' )
                    {
                    // InternalSCTX.g:16760:3: (enumLiteral_10= '>>=' )
                    // InternalSCTX.g:16761:4: enumLiteral_10= '>>='
                    {
                    enumLiteral_10=(Token)match(input,129,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTRIGHTEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_10, grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTRIGHTEnumLiteralDeclaration_10());
                      			
                    }

                    }


                    }
                    break;
                case 12 :
<<<<<<< HEAD
                    // InternalSCTX.g:17319:3: (enumLiteral_11= '>>>=' )
                    {
                    // InternalSCTX.g:17319:3: (enumLiteral_11= '>>>=' )
                    // InternalSCTX.g:17320:4: enumLiteral_11= '>>>='
                    {
                    enumLiteral_11=(Token)match(input,134,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:16768:3: (enumLiteral_11= '>>>=' )
                    {
                    // InternalSCTX.g:16768:3: (enumLiteral_11= '>>>=' )
                    // InternalSCTX.g:16769:4: enumLiteral_11= '>>>='
                    {
                    enumLiteral_11=(Token)match(input,130,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTRIGHTUNSIGNEDEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_11, grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTRIGHTUNSIGNEDEnumLiteralDeclaration_11());
                      			
                    }

                    }


                    }
                    break;
                case 13 :
<<<<<<< HEAD
                    // InternalSCTX.g:17327:3: (enumLiteral_12= 'min=' )
                    {
                    // InternalSCTX.g:17327:3: (enumLiteral_12= 'min=' )
                    // InternalSCTX.g:17328:4: enumLiteral_12= 'min='
                    {
                    enumLiteral_12=(Token)match(input,135,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:16776:3: (enumLiteral_12= 'min=' )
                    {
                    // InternalSCTX.g:16776:3: (enumLiteral_12= 'min=' )
                    // InternalSCTX.g:16777:4: enumLiteral_12= 'min='
                    {
                    enumLiteral_12=(Token)match(input,131,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNMINEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_12, grammarAccess.getAssignOperatorAccess().getASSIGNMINEnumLiteralDeclaration_12());
                      			
                    }

                    }


                    }
                    break;
                case 14 :
<<<<<<< HEAD
                    // InternalSCTX.g:17335:3: (enumLiteral_13= 'max=' )
                    {
                    // InternalSCTX.g:17335:3: (enumLiteral_13= 'max=' )
                    // InternalSCTX.g:17336:4: enumLiteral_13= 'max='
                    {
                    enumLiteral_13=(Token)match(input,136,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:16784:3: (enumLiteral_13= 'max=' )
                    {
                    // InternalSCTX.g:16784:3: (enumLiteral_13= 'max=' )
                    // InternalSCTX.g:16785:4: enumLiteral_13= 'max='
                    {
                    enumLiteral_13=(Token)match(input,132,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNMAXEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_13, grammarAccess.getAssignOperatorAccess().getASSIGNMAXEnumLiteralDeclaration_13());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssignOperator"


    // $ANTLR start "rulePostfixOperator"
<<<<<<< HEAD
    // InternalSCTX.g:17346:1: rulePostfixOperator returns [Enumerator current=null] : ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) ) ;
=======
    // InternalSCTX.g:16795:1: rulePostfixOperator returns [Enumerator current=null] : ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final Enumerator rulePostfixOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17352:2: ( ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) ) )
            // InternalSCTX.g:17353:2: ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) )
            {
            // InternalSCTX.g:17353:2: ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) )
            int alt465=2;
            int LA465_0 = input.LA(1);

            if ( (LA465_0==137) ) {
                alt465=1;
            }
            else if ( (LA465_0==138) ) {
                alt465=2;
=======
            // InternalSCTX.g:16801:2: ( ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) ) )
            // InternalSCTX.g:16802:2: ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) )
            {
            // InternalSCTX.g:16802:2: ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) )
            int alt454=2;
            int LA454_0 = input.LA(1);

            if ( (LA454_0==133) ) {
                alt454=1;
            }
            else if ( (LA454_0==134) ) {
                alt454=2;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
<<<<<<< HEAD
                    new NoViableAltException("", 465, 0, input);

                throw nvae;
            }
            switch (alt465) {
                case 1 :
                    // InternalSCTX.g:17354:3: (enumLiteral_0= '++' )
                    {
                    // InternalSCTX.g:17354:3: (enumLiteral_0= '++' )
                    // InternalSCTX.g:17355:4: enumLiteral_0= '++'
                    {
                    enumLiteral_0=(Token)match(input,137,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    new NoViableAltException("", 454, 0, input);

                throw nvae;
            }
            switch (alt454) {
                case 1 :
                    // InternalSCTX.g:16803:3: (enumLiteral_0= '++' )
                    {
                    // InternalSCTX.g:16803:3: (enumLiteral_0= '++' )
                    // InternalSCTX.g:16804:4: enumLiteral_0= '++'
                    {
                    enumLiteral_0=(Token)match(input,133,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPostfixOperatorAccess().getPOSTFIXADDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getPostfixOperatorAccess().getPOSTFIXADDEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:17362:3: (enumLiteral_1= '--' )
                    {
                    // InternalSCTX.g:17362:3: (enumLiteral_1= '--' )
                    // InternalSCTX.g:17363:4: enumLiteral_1= '--'
                    {
                    enumLiteral_1=(Token)match(input,138,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:16811:3: (enumLiteral_1= '--' )
                    {
                    // InternalSCTX.g:16811:3: (enumLiteral_1= '--' )
                    // InternalSCTX.g:16812:4: enumLiteral_1= '--'
                    {
                    enumLiteral_1=(Token)match(input,134,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPostfixOperatorAccess().getPOSTFIXSUBEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getPostfixOperatorAccess().getPOSTFIXSUBEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePostfixOperator"


    // $ANTLR start "ruleCompareOperator"
<<<<<<< HEAD
    // InternalSCTX.g:17373:1: ruleCompareOperator returns [Enumerator current=null] : ( (enumLiteral_0= '==' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '!=' ) ) ;
=======
    // InternalSCTX.g:16822:1: ruleCompareOperator returns [Enumerator current=null] : ( (enumLiteral_0= '==' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '!=' ) ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final Enumerator ruleCompareOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17379:2: ( ( (enumLiteral_0= '==' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '!=' ) ) )
            // InternalSCTX.g:17380:2: ( (enumLiteral_0= '==' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '!=' ) )
            {
            // InternalSCTX.g:17380:2: ( (enumLiteral_0= '==' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '!=' ) )
            int alt466=6;
            switch ( input.LA(1) ) {
            case 139:
                {
                alt466=1;
=======
            // InternalSCTX.g:16828:2: ( ( (enumLiteral_0= '==' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '!=' ) ) )
            // InternalSCTX.g:16829:2: ( (enumLiteral_0= '==' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '!=' ) )
            {
            // InternalSCTX.g:16829:2: ( (enumLiteral_0= '==' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '!=' ) )
            int alt455=6;
            switch ( input.LA(1) ) {
            case 135:
                {
                alt455=1;
                }
                break;
            case 136:
                {
                alt455=2;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case 140:
                {
<<<<<<< HEAD
                alt466=2;
=======
                alt455=3;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case 141:
                {
<<<<<<< HEAD
                alt466=3;
=======
                alt455=4;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case 142:
                {
<<<<<<< HEAD
                alt466=4;
=======
                alt455=5;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case 143:
                {
<<<<<<< HEAD
                alt466=5;
                }
                break;
            case 144:
                {
                alt466=6;
=======
                alt455=6;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
<<<<<<< HEAD
                    new NoViableAltException("", 466, 0, input);
=======
                    new NoViableAltException("", 455, 0, input);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                throw nvae;
            }

<<<<<<< HEAD
            switch (alt466) {
                case 1 :
                    // InternalSCTX.g:17381:3: (enumLiteral_0= '==' )
                    {
                    // InternalSCTX.g:17381:3: (enumLiteral_0= '==' )
                    // InternalSCTX.g:17382:4: enumLiteral_0= '=='
                    {
                    enumLiteral_0=(Token)match(input,139,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
            switch (alt455) {
                case 1 :
                    // InternalSCTX.g:16830:3: (enumLiteral_0= '==' )
                    {
                    // InternalSCTX.g:16830:3: (enumLiteral_0= '==' )
                    // InternalSCTX.g:16831:4: enumLiteral_0= '=='
                    {
                    enumLiteral_0=(Token)match(input,135,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:17389:3: (enumLiteral_1= '<' )
                    {
                    // InternalSCTX.g:17389:3: (enumLiteral_1= '<' )
                    // InternalSCTX.g:17390:4: enumLiteral_1= '<'
                    {
                    enumLiteral_1=(Token)match(input,140,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:16838:3: (enumLiteral_1= '<' )
                    {
                    // InternalSCTX.g:16838:3: (enumLiteral_1= '<' )
                    // InternalSCTX.g:16839:4: enumLiteral_1= '<'
                    {
                    enumLiteral_1=(Token)match(input,136,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
<<<<<<< HEAD
                    // InternalSCTX.g:17397:3: (enumLiteral_2= '<=' )
                    {
                    // InternalSCTX.g:17397:3: (enumLiteral_2= '<=' )
                    // InternalSCTX.g:17398:4: enumLiteral_2= '<='
                    {
                    enumLiteral_2=(Token)match(input,141,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:16846:3: (enumLiteral_2= '<=' )
                    {
                    // InternalSCTX.g:16846:3: (enumLiteral_2= '<=' )
                    // InternalSCTX.g:16847:4: enumLiteral_2= '<='
                    {
                    enumLiteral_2=(Token)match(input,137,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
<<<<<<< HEAD
                    // InternalSCTX.g:17405:3: (enumLiteral_3= '>' )
                    {
                    // InternalSCTX.g:17405:3: (enumLiteral_3= '>' )
                    // InternalSCTX.g:17406:4: enumLiteral_3= '>'
                    {
                    enumLiteral_3=(Token)match(input,142,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:16854:3: (enumLiteral_3= '>' )
                    {
                    // InternalSCTX.g:16854:3: (enumLiteral_3= '>' )
                    // InternalSCTX.g:16855:4: enumLiteral_3= '>'
                    {
                    enumLiteral_3=(Token)match(input,138,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
<<<<<<< HEAD
                    // InternalSCTX.g:17413:3: (enumLiteral_4= '>=' )
                    {
                    // InternalSCTX.g:17413:3: (enumLiteral_4= '>=' )
                    // InternalSCTX.g:17414:4: enumLiteral_4= '>='
                    {
                    enumLiteral_4=(Token)match(input,143,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:16862:3: (enumLiteral_4= '>=' )
                    {
                    // InternalSCTX.g:16862:3: (enumLiteral_4= '>=' )
                    // InternalSCTX.g:16863:4: enumLiteral_4= '>='
                    {
                    enumLiteral_4=(Token)match(input,139,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
<<<<<<< HEAD
                    // InternalSCTX.g:17421:3: (enumLiteral_5= '!=' )
                    {
                    // InternalSCTX.g:17421:3: (enumLiteral_5= '!=' )
                    // InternalSCTX.g:17422:4: enumLiteral_5= '!='
                    {
                    enumLiteral_5=(Token)match(input,144,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:16870:3: (enumLiteral_5= '!=' )
                    {
                    // InternalSCTX.g:16870:3: (enumLiteral_5= '!=' )
                    // InternalSCTX.g:16871:4: enumLiteral_5= '!='
                    {
                    enumLiteral_5=(Token)match(input,140,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompareOperator"


    // $ANTLR start "rulePreOperator"
<<<<<<< HEAD
    // InternalSCTX.g:17432:1: rulePreOperator returns [Enumerator current=null] : (enumLiteral_0= 'pre' ) ;
=======
    // InternalSCTX.g:16881:1: rulePreOperator returns [Enumerator current=null] : (enumLiteral_0= 'pre' ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final Enumerator rulePreOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17438:2: ( (enumLiteral_0= 'pre' ) )
            // InternalSCTX.g:17439:2: (enumLiteral_0= 'pre' )
            {
            // InternalSCTX.g:17439:2: (enumLiteral_0= 'pre' )
            // InternalSCTX.g:17440:3: enumLiteral_0= 'pre'
            {
            enumLiteral_0=(Token)match(input,145,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
            // InternalSCTX.g:16887:2: ( (enumLiteral_0= 'pre' ) )
            // InternalSCTX.g:16888:2: (enumLiteral_0= 'pre' )
            {
            // InternalSCTX.g:16888:2: (enumLiteral_0= 'pre' )
            // InternalSCTX.g:16889:3: enumLiteral_0= 'pre'
            {
            enumLiteral_0=(Token)match(input,141,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePreOperator"


    // $ANTLR start "ruleBitwiseNotOperator"
<<<<<<< HEAD
    // InternalSCTX.g:17449:1: ruleBitwiseNotOperator returns [Enumerator current=null] : (enumLiteral_0= '~' ) ;
=======
    // InternalSCTX.g:16898:1: ruleBitwiseNotOperator returns [Enumerator current=null] : (enumLiteral_0= '~' ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final Enumerator ruleBitwiseNotOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17455:2: ( (enumLiteral_0= '~' ) )
            // InternalSCTX.g:17456:2: (enumLiteral_0= '~' )
            {
            // InternalSCTX.g:17456:2: (enumLiteral_0= '~' )
            // InternalSCTX.g:17457:3: enumLiteral_0= '~'
            {
            enumLiteral_0=(Token)match(input,146,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
            // InternalSCTX.g:16904:2: ( (enumLiteral_0= '~' ) )
            // InternalSCTX.g:16905:2: (enumLiteral_0= '~' )
            {
            // InternalSCTX.g:16905:2: (enumLiteral_0= '~' )
            // InternalSCTX.g:16906:3: enumLiteral_0= '~'
            {
            enumLiteral_0=(Token)match(input,142,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseNotOperatorAccess().getBITWISE_NOTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseNotOperatorAccess().getBITWISE_NOTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseNotOperator"


    // $ANTLR start "ruleBitwiseXOrOperator"
<<<<<<< HEAD
    // InternalSCTX.g:17466:1: ruleBitwiseXOrOperator returns [Enumerator current=null] : (enumLiteral_0= '^' ) ;
=======
    // InternalSCTX.g:16915:1: ruleBitwiseXOrOperator returns [Enumerator current=null] : (enumLiteral_0= '^' ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final Enumerator ruleBitwiseXOrOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17472:2: ( (enumLiteral_0= '^' ) )
            // InternalSCTX.g:17473:2: (enumLiteral_0= '^' )
            {
            // InternalSCTX.g:17473:2: (enumLiteral_0= '^' )
            // InternalSCTX.g:17474:3: enumLiteral_0= '^'
=======
            // InternalSCTX.g:16921:2: ( (enumLiteral_0= '^' ) )
            // InternalSCTX.g:16922:2: (enumLiteral_0= '^' )
            {
            // InternalSCTX.g:16922:2: (enumLiteral_0= '^' )
            // InternalSCTX.g:16923:3: enumLiteral_0= '^'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            enumLiteral_0=(Token)match(input,88,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseXOrOperatorAccess().getBITWISE_XOREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseXOrOperatorAccess().getBITWISE_XOREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseXOrOperator"


    // $ANTLR start "ruleBitwiseOrOperator"
<<<<<<< HEAD
    // InternalSCTX.g:17483:1: ruleBitwiseOrOperator returns [Enumerator current=null] : (enumLiteral_0= '|' ) ;
=======
    // InternalSCTX.g:16932:1: ruleBitwiseOrOperator returns [Enumerator current=null] : (enumLiteral_0= '|' ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final Enumerator ruleBitwiseOrOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17489:2: ( (enumLiteral_0= '|' ) )
            // InternalSCTX.g:17490:2: (enumLiteral_0= '|' )
            {
            // InternalSCTX.g:17490:2: (enumLiteral_0= '|' )
            // InternalSCTX.g:17491:3: enumLiteral_0= '|'
=======
            // InternalSCTX.g:16938:2: ( (enumLiteral_0= '|' ) )
            // InternalSCTX.g:16939:2: (enumLiteral_0= '|' )
            {
            // InternalSCTX.g:16939:2: (enumLiteral_0= '|' )
            // InternalSCTX.g:16940:3: enumLiteral_0= '|'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            enumLiteral_0=(Token)match(input,87,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseOrOperatorAccess().getBITWISE_OREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseOrOperatorAccess().getBITWISE_OREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseOrOperator"


    // $ANTLR start "ruleBitwiseAndOperator"
<<<<<<< HEAD
    // InternalSCTX.g:17500:1: ruleBitwiseAndOperator returns [Enumerator current=null] : (enumLiteral_0= '&' ) ;
=======
    // InternalSCTX.g:16949:1: ruleBitwiseAndOperator returns [Enumerator current=null] : (enumLiteral_0= '&' ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final Enumerator ruleBitwiseAndOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17506:2: ( (enumLiteral_0= '&' ) )
            // InternalSCTX.g:17507:2: (enumLiteral_0= '&' )
            {
            // InternalSCTX.g:17507:2: (enumLiteral_0= '&' )
            // InternalSCTX.g:17508:3: enumLiteral_0= '&'
=======
            // InternalSCTX.g:16955:2: ( (enumLiteral_0= '&' ) )
            // InternalSCTX.g:16956:2: (enumLiteral_0= '&' )
            {
            // InternalSCTX.g:16956:2: (enumLiteral_0= '&' )
            // InternalSCTX.g:16957:3: enumLiteral_0= '&'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            enumLiteral_0=(Token)match(input,34,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseAndOperatorAccess().getBITWISE_ANDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseAndOperatorAccess().getBITWISE_ANDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseAndOperator"


    // $ANTLR start "ruleNotOperator"
<<<<<<< HEAD
    // InternalSCTX.g:17517:1: ruleNotOperator returns [Enumerator current=null] : (enumLiteral_0= '!' ) ;
=======
    // InternalSCTX.g:16966:1: ruleNotOperator returns [Enumerator current=null] : (enumLiteral_0= '!' ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final Enumerator ruleNotOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17523:2: ( (enumLiteral_0= '!' ) )
            // InternalSCTX.g:17524:2: (enumLiteral_0= '!' )
            {
            // InternalSCTX.g:17524:2: (enumLiteral_0= '!' )
            // InternalSCTX.g:17525:3: enumLiteral_0= '!'
=======
            // InternalSCTX.g:16972:2: ( (enumLiteral_0= '!' ) )
            // InternalSCTX.g:16973:2: (enumLiteral_0= '!' )
            {
            // InternalSCTX.g:16973:2: (enumLiteral_0= '!' )
            // InternalSCTX.g:16974:3: enumLiteral_0= '!'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            enumLiteral_0=(Token)match(input,33,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getNotOperatorAccess().getNOTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getNotOperatorAccess().getNOTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotOperator"


    // $ANTLR start "ruleAddOperator"
<<<<<<< HEAD
    // InternalSCTX.g:17534:1: ruleAddOperator returns [Enumerator current=null] : (enumLiteral_0= '+' ) ;
=======
    // InternalSCTX.g:16983:1: ruleAddOperator returns [Enumerator current=null] : (enumLiteral_0= '+' ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final Enumerator ruleAddOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17540:2: ( (enumLiteral_0= '+' ) )
            // InternalSCTX.g:17541:2: (enumLiteral_0= '+' )
            {
            // InternalSCTX.g:17541:2: (enumLiteral_0= '+' )
            // InternalSCTX.g:17542:3: enumLiteral_0= '+'
=======
            // InternalSCTX.g:16989:2: ( (enumLiteral_0= '+' ) )
            // InternalSCTX.g:16990:2: (enumLiteral_0= '+' )
            {
            // InternalSCTX.g:16990:2: (enumLiteral_0= '+' )
            // InternalSCTX.g:16991:3: enumLiteral_0= '+'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            enumLiteral_0=(Token)match(input,92,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getAddOperatorAccess().getADDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getAddOperatorAccess().getADDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAddOperator"


    // $ANTLR start "ruleSubOperator"
<<<<<<< HEAD
    // InternalSCTX.g:17551:1: ruleSubOperator returns [Enumerator current=null] : (enumLiteral_0= '-' ) ;
=======
    // InternalSCTX.g:17000:1: ruleSubOperator returns [Enumerator current=null] : (enumLiteral_0= '-' ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final Enumerator ruleSubOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17557:2: ( (enumLiteral_0= '-' ) )
            // InternalSCTX.g:17558:2: (enumLiteral_0= '-' )
            {
            // InternalSCTX.g:17558:2: (enumLiteral_0= '-' )
            // InternalSCTX.g:17559:3: enumLiteral_0= '-'
=======
            // InternalSCTX.g:17006:2: ( (enumLiteral_0= '-' ) )
            // InternalSCTX.g:17007:2: (enumLiteral_0= '-' )
            {
            // InternalSCTX.g:17007:2: (enumLiteral_0= '-' )
            // InternalSCTX.g:17008:3: enumLiteral_0= '-'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            enumLiteral_0=(Token)match(input,93,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getSubOperatorAccess().getSUBEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getSubOperatorAccess().getSUBEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubOperator"


    // $ANTLR start "ruleMultOperator"
<<<<<<< HEAD
    // InternalSCTX.g:17568:1: ruleMultOperator returns [Enumerator current=null] : (enumLiteral_0= '*' ) ;
=======
    // InternalSCTX.g:17017:1: ruleMultOperator returns [Enumerator current=null] : (enumLiteral_0= '*' ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final Enumerator ruleMultOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17574:2: ( (enumLiteral_0= '*' ) )
            // InternalSCTX.g:17575:2: (enumLiteral_0= '*' )
            {
            // InternalSCTX.g:17575:2: (enumLiteral_0= '*' )
            // InternalSCTX.g:17576:3: enumLiteral_0= '*'
=======
            // InternalSCTX.g:17023:2: ( (enumLiteral_0= '*' ) )
            // InternalSCTX.g:17024:2: (enumLiteral_0= '*' )
            {
            // InternalSCTX.g:17024:2: (enumLiteral_0= '*' )
            // InternalSCTX.g:17025:3: enumLiteral_0= '*'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            enumLiteral_0=(Token)match(input,94,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultOperator"


    // $ANTLR start "ruleModOperator"
<<<<<<< HEAD
    // InternalSCTX.g:17585:1: ruleModOperator returns [Enumerator current=null] : (enumLiteral_0= '%' ) ;
=======
    // InternalSCTX.g:17034:1: ruleModOperator returns [Enumerator current=null] : (enumLiteral_0= '%' ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final Enumerator ruleModOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17591:2: ( (enumLiteral_0= '%' ) )
            // InternalSCTX.g:17592:2: (enumLiteral_0= '%' )
            {
            // InternalSCTX.g:17592:2: (enumLiteral_0= '%' )
            // InternalSCTX.g:17593:3: enumLiteral_0= '%'
=======
            // InternalSCTX.g:17040:2: ( (enumLiteral_0= '%' ) )
            // InternalSCTX.g:17041:2: (enumLiteral_0= '%' )
            {
            // InternalSCTX.g:17041:2: (enumLiteral_0= '%' )
            // InternalSCTX.g:17042:3: enumLiteral_0= '%'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            enumLiteral_0=(Token)match(input,96,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getModOperatorAccess().getMODEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getModOperatorAccess().getMODEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModOperator"


    // $ANTLR start "ruleDivOperator"
<<<<<<< HEAD
    // InternalSCTX.g:17602:1: ruleDivOperator returns [Enumerator current=null] : (enumLiteral_0= '/' ) ;
=======
    // InternalSCTX.g:17051:1: ruleDivOperator returns [Enumerator current=null] : (enumLiteral_0= '/' ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final Enumerator ruleDivOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17608:2: ( (enumLiteral_0= '/' ) )
            // InternalSCTX.g:17609:2: (enumLiteral_0= '/' )
            {
            // InternalSCTX.g:17609:2: (enumLiteral_0= '/' )
            // InternalSCTX.g:17610:3: enumLiteral_0= '/'
=======
            // InternalSCTX.g:17057:2: ( (enumLiteral_0= '/' ) )
            // InternalSCTX.g:17058:2: (enumLiteral_0= '/' )
            {
            // InternalSCTX.g:17058:2: (enumLiteral_0= '/' )
            // InternalSCTX.g:17059:3: enumLiteral_0= '/'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            enumLiteral_0=(Token)match(input,95,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDivOperator"


    // $ANTLR start "ruleValOperator"
<<<<<<< HEAD
    // InternalSCTX.g:17619:1: ruleValOperator returns [Enumerator current=null] : (enumLiteral_0= 'val' ) ;
=======
    // InternalSCTX.g:17068:1: ruleValOperator returns [Enumerator current=null] : (enumLiteral_0= 'val' ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final Enumerator ruleValOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17625:2: ( (enumLiteral_0= 'val' ) )
            // InternalSCTX.g:17626:2: (enumLiteral_0= 'val' )
            {
            // InternalSCTX.g:17626:2: (enumLiteral_0= 'val' )
            // InternalSCTX.g:17627:3: enumLiteral_0= 'val'
            {
            enumLiteral_0=(Token)match(input,147,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
            // InternalSCTX.g:17074:2: ( (enumLiteral_0= 'val' ) )
            // InternalSCTX.g:17075:2: (enumLiteral_0= 'val' )
            {
            // InternalSCTX.g:17075:2: (enumLiteral_0= 'val' )
            // InternalSCTX.g:17076:3: enumLiteral_0= 'val'
            {
            enumLiteral_0=(Token)match(input,143,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getValOperatorAccess().getVALEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getValOperatorAccess().getVALEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValOperator"


    // $ANTLR start "ruleLogicalOrOperator"
    // InternalSCTX.g:17636:1: ruleLogicalOrOperator returns [Enumerator current=null] : (enumLiteral_0= '||' ) ;
    public final Enumerator ruleLogicalOrOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17642:2: ( (enumLiteral_0= '||' ) )
            // InternalSCTX.g:17643:2: (enumLiteral_0= '||' )
            {
            // InternalSCTX.g:17643:2: (enumLiteral_0= '||' )
            // InternalSCTX.g:17644:3: enumLiteral_0= '||'
            {
            enumLiteral_0=(Token)match(input,86,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getLogicalOrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getLogicalOrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalOrOperator"


    // $ANTLR start "ruleLogicalAndOperator"
    // InternalSCTX.g:17653:1: ruleLogicalAndOperator returns [Enumerator current=null] : (enumLiteral_0= '&&' ) ;
    public final Enumerator ruleLogicalAndOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17659:2: ( (enumLiteral_0= '&&' ) )
            // InternalSCTX.g:17660:2: (enumLiteral_0= '&&' )
            {
            // InternalSCTX.g:17660:2: (enumLiteral_0= '&&' )
            // InternalSCTX.g:17661:3: enumLiteral_0= '&&'
            {
            enumLiteral_0=(Token)match(input,87,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getLogicalAndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getLogicalAndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalAndOperator"


    // $ANTLR start "ruleShiftLeftOperator"
    // InternalSCTX.g:17670:1: ruleShiftLeftOperator returns [Enumerator current=null] : (enumLiteral_0= '<<' ) ;
    public final Enumerator ruleShiftLeftOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17676:2: ( (enumLiteral_0= '<<' ) )
            // InternalSCTX.g:17677:2: (enumLiteral_0= '<<' )
            {
            // InternalSCTX.g:17677:2: (enumLiteral_0= '<<' )
            // InternalSCTX.g:17678:3: enumLiteral_0= '<<'
            {
            enumLiteral_0=(Token)match(input,90,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getShiftLeftOperatorAccess().getSHIFT_LEFTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getShiftLeftOperatorAccess().getSHIFT_LEFTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftLeftOperator"


    // $ANTLR start "ruleShiftRightOperator"
    // InternalSCTX.g:17687:1: ruleShiftRightOperator returns [Enumerator current=null] : (enumLiteral_0= '>>' ) ;
    public final Enumerator ruleShiftRightOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17693:2: ( (enumLiteral_0= '>>' ) )
            // InternalSCTX.g:17694:2: (enumLiteral_0= '>>' )
            {
            // InternalSCTX.g:17694:2: (enumLiteral_0= '>>' )
            // InternalSCTX.g:17695:3: enumLiteral_0= '>>'
            {
            enumLiteral_0=(Token)match(input,91,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getShiftRightOperatorAccess().getSHIFT_RIGHTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getShiftRightOperatorAccess().getSHIFT_RIGHTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightOperator"


<<<<<<< HEAD
    // $ANTLR start "ruleShiftRightUnsignedOperator"
    // InternalSCTX.g:17704:1: ruleShiftRightUnsignedOperator returns [Enumerator current=null] : (enumLiteral_0= '>>>' ) ;
    public final Enumerator ruleShiftRightUnsignedOperator() throws RecognitionException {
=======
    // $ANTLR start "ruleLogicalOrOperator"
    // InternalSCTX.g:17085:1: ruleLogicalOrOperator returns [Enumerator current=null] : (enumLiteral_0= '||' ) ;
    public final Enumerator ruleLogicalOrOperator() throws RecognitionException {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17710:2: ( (enumLiteral_0= '>>>' ) )
            // InternalSCTX.g:17711:2: (enumLiteral_0= '>>>' )
            {
            // InternalSCTX.g:17711:2: (enumLiteral_0= '>>>' )
            // InternalSCTX.g:17712:3: enumLiteral_0= '>>>'
            {
            enumLiteral_0=(Token)match(input,92,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
            // InternalSCTX.g:17091:2: ( (enumLiteral_0= '||' ) )
            // InternalSCTX.g:17092:2: (enumLiteral_0= '||' )
            {
            // InternalSCTX.g:17092:2: (enumLiteral_0= '||' )
            // InternalSCTX.g:17093:3: enumLiteral_0= '||'
            {
            enumLiteral_0=(Token)match(input,85,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getShiftRightUnsignedOperatorAccess().getSHIFT_RIGHT_UNSIGNEDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getShiftRightUnsignedOperatorAccess().getSHIFT_RIGHT_UNSIGNEDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightUnsignedOperator"


<<<<<<< HEAD
    // $ANTLR start "ruleConditionalOperator"
    // InternalSCTX.g:17721:1: ruleConditionalOperator returns [Enumerator current=null] : (enumLiteral_0= '?' ) ;
    public final Enumerator ruleConditionalOperator() throws RecognitionException {
=======
    // $ANTLR start "ruleLogicalAndOperator"
    // InternalSCTX.g:17102:1: ruleLogicalAndOperator returns [Enumerator current=null] : (enumLiteral_0= '&&' ) ;
    public final Enumerator ruleLogicalAndOperator() throws RecognitionException {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17727:2: ( (enumLiteral_0= '?' ) )
            // InternalSCTX.g:17728:2: (enumLiteral_0= '?' )
            {
            // InternalSCTX.g:17728:2: (enumLiteral_0= '?' )
            // InternalSCTX.g:17729:3: enumLiteral_0= '?'
            {
            enumLiteral_0=(Token)match(input,148,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
            // InternalSCTX.g:17108:2: ( (enumLiteral_0= '&&' ) )
            // InternalSCTX.g:17109:2: (enumLiteral_0= '&&' )
            {
            // InternalSCTX.g:17109:2: (enumLiteral_0= '&&' )
            // InternalSCTX.g:17110:3: enumLiteral_0= '&&'
            {
            enumLiteral_0=(Token)match(input,86,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getConditionalOperatorAccess().getCONDITIONALEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getConditionalOperatorAccess().getCONDITIONALEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalOperator"


<<<<<<< HEAD
    // $ANTLR start "ruleInitOperator"
    // InternalSCTX.g:17738:1: ruleInitOperator returns [Enumerator current=null] : (enumLiteral_0= '->' ) ;
    public final Enumerator ruleInitOperator() throws RecognitionException {
=======
    // $ANTLR start "ruleShiftLeftOperator"
    // InternalSCTX.g:17119:1: ruleShiftLeftOperator returns [Enumerator current=null] : (enumLiteral_0= '<<' ) ;
    public final Enumerator ruleShiftLeftOperator() throws RecognitionException {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17744:2: ( (enumLiteral_0= '->' ) )
            // InternalSCTX.g:17745:2: (enumLiteral_0= '->' )
            {
            // InternalSCTX.g:17745:2: (enumLiteral_0= '->' )
            // InternalSCTX.g:17746:3: enumLiteral_0= '->'
            {
            enumLiteral_0=(Token)match(input,98,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
            // InternalSCTX.g:17125:2: ( (enumLiteral_0= '<<' ) )
            // InternalSCTX.g:17126:2: (enumLiteral_0= '<<' )
            {
            // InternalSCTX.g:17126:2: (enumLiteral_0= '<<' )
            // InternalSCTX.g:17127:3: enumLiteral_0= '<<'
            {
            enumLiteral_0=(Token)match(input,89,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getInitOperatorAccess().getINITEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getInitOperatorAccess().getINITEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInitOperator"


<<<<<<< HEAD
    // $ANTLR start "ruleFbyOperator"
    // InternalSCTX.g:17755:1: ruleFbyOperator returns [Enumerator current=null] : (enumLiteral_0= 'fby' ) ;
    public final Enumerator ruleFbyOperator() throws RecognitionException {
=======
    // $ANTLR start "ruleShiftRightOperator"
    // InternalSCTX.g:17136:1: ruleShiftRightOperator returns [Enumerator current=null] : (enumLiteral_0= '>>' ) ;
    public final Enumerator ruleShiftRightOperator() throws RecognitionException {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17761:2: ( (enumLiteral_0= 'fby' ) )
            // InternalSCTX.g:17762:2: (enumLiteral_0= 'fby' )
            {
            // InternalSCTX.g:17762:2: (enumLiteral_0= 'fby' )
            // InternalSCTX.g:17763:3: enumLiteral_0= 'fby'
            {
            enumLiteral_0=(Token)match(input,99,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
            // InternalSCTX.g:17142:2: ( (enumLiteral_0= '>>' ) )
            // InternalSCTX.g:17143:2: (enumLiteral_0= '>>' )
            {
            // InternalSCTX.g:17143:2: (enumLiteral_0= '>>' )
            // InternalSCTX.g:17144:3: enumLiteral_0= '>>'
            {
            enumLiteral_0=(Token)match(input,90,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getFbyOperatorAccess().getFBYEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getFbyOperatorAccess().getFBYEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFbyOperator"


<<<<<<< HEAD
    // $ANTLR start "ruleImpliesOperator"
    // InternalSCTX.g:17772:1: ruleImpliesOperator returns [Enumerator current=null] : (enumLiteral_0= 'implies' ) ;
    public final Enumerator ruleImpliesOperator() throws RecognitionException {
=======
    // $ANTLR start "ruleShiftRightUnsignedOperator"
    // InternalSCTX.g:17153:1: ruleShiftRightUnsignedOperator returns [Enumerator current=null] : (enumLiteral_0= '>>>' ) ;
    public final Enumerator ruleShiftRightUnsignedOperator() throws RecognitionException {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17778:2: ( (enumLiteral_0= 'implies' ) )
            // InternalSCTX.g:17779:2: (enumLiteral_0= 'implies' )
            {
            // InternalSCTX.g:17779:2: (enumLiteral_0= 'implies' )
            // InternalSCTX.g:17780:3: enumLiteral_0= 'implies'
            {
            enumLiteral_0=(Token)match(input,100,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
            // InternalSCTX.g:17159:2: ( (enumLiteral_0= '>>>' ) )
            // InternalSCTX.g:17160:2: (enumLiteral_0= '>>>' )
            {
            // InternalSCTX.g:17160:2: (enumLiteral_0= '>>>' )
            // InternalSCTX.g:17161:3: enumLiteral_0= '>>>'
            {
            enumLiteral_0=(Token)match(input,91,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getImpliesOperatorAccess().getIMPLIESEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getImpliesOperatorAccess().getIMPLIESEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImpliesOperator"


<<<<<<< HEAD
    // $ANTLR start "ruleAtMostOneOfOperator"
    // InternalSCTX.g:17789:1: ruleAtMostOneOfOperator returns [Enumerator current=null] : (enumLiteral_0= '#' ) ;
    public final Enumerator ruleAtMostOneOfOperator() throws RecognitionException {
=======
    // $ANTLR start "ruleConditionalOperator"
    // InternalSCTX.g:17170:1: ruleConditionalOperator returns [Enumerator current=null] : (enumLiteral_0= '?' ) ;
    public final Enumerator ruleConditionalOperator() throws RecognitionException {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17795:2: ( (enumLiteral_0= '#' ) )
            // InternalSCTX.g:17796:2: (enumLiteral_0= '#' )
            {
            // InternalSCTX.g:17796:2: (enumLiteral_0= '#' )
            // InternalSCTX.g:17797:3: enumLiteral_0= '#'
            {
            enumLiteral_0=(Token)match(input,105,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
            // InternalSCTX.g:17176:2: ( (enumLiteral_0= '?' ) )
            // InternalSCTX.g:17177:2: (enumLiteral_0= '?' )
            {
            // InternalSCTX.g:17177:2: (enumLiteral_0= '?' )
            // InternalSCTX.g:17178:3: enumLiteral_0= '?'
            {
            enumLiteral_0=(Token)match(input,144,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getAtMostOneOfOperatorAccess().getATMOSTONEOFEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getAtMostOneOfOperatorAccess().getATMOSTONEOFEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAtMostOneOfOperator"


<<<<<<< HEAD
    // $ANTLR start "ruleNoneOfOperator"
    // InternalSCTX.g:17806:1: ruleNoneOfOperator returns [Enumerator current=null] : (enumLiteral_0= 'nor' ) ;
    public final Enumerator ruleNoneOfOperator() throws RecognitionException {
=======
    // $ANTLR start "ruleInitOperator"
    // InternalSCTX.g:17187:1: ruleInitOperator returns [Enumerator current=null] : (enumLiteral_0= '->' ) ;
    public final Enumerator ruleInitOperator() throws RecognitionException {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17812:2: ( (enumLiteral_0= 'nor' ) )
            // InternalSCTX.g:17813:2: (enumLiteral_0= 'nor' )
            {
            // InternalSCTX.g:17813:2: (enumLiteral_0= 'nor' )
            // InternalSCTX.g:17814:3: enumLiteral_0= 'nor'
            {
            enumLiteral_0=(Token)match(input,149,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
            // InternalSCTX.g:17193:2: ( (enumLiteral_0= '->' ) )
            // InternalSCTX.g:17194:2: (enumLiteral_0= '->' )
            {
            // InternalSCTX.g:17194:2: (enumLiteral_0= '->' )
            // InternalSCTX.g:17195:3: enumLiteral_0= '->'
            {
            enumLiteral_0=(Token)match(input,145,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getNoneOfOperatorAccess().getNOREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getNoneOfOperatorAccess().getNOREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNoneOfOperator"


    // $ANTLR start "ruleHostType"
<<<<<<< HEAD
    // InternalSCTX.g:17823:1: ruleHostType returns [Enumerator current=null] : (enumLiteral_0= 'host' ) ;
=======
    // InternalSCTX.g:17204:1: ruleHostType returns [Enumerator current=null] : (enumLiteral_0= 'host' ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final Enumerator ruleHostType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17829:2: ( (enumLiteral_0= 'host' ) )
            // InternalSCTX.g:17830:2: (enumLiteral_0= 'host' )
            {
            // InternalSCTX.g:17830:2: (enumLiteral_0= 'host' )
            // InternalSCTX.g:17831:3: enumLiteral_0= 'host'
=======
            // InternalSCTX.g:17210:2: ( (enumLiteral_0= 'host' ) )
            // InternalSCTX.g:17211:2: (enumLiteral_0= 'host' )
            {
            // InternalSCTX.g:17211:2: (enumLiteral_0= 'host' )
            // InternalSCTX.g:17212:3: enumLiteral_0= 'host'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            {
            enumLiteral_0=(Token)match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getHostTypeAccess().getHOSTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getHostTypeAccess().getHOSTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHostType"


    // $ANTLR start "ruleStructType"
<<<<<<< HEAD
    // InternalSCTX.g:17840:1: ruleStructType returns [Enumerator current=null] : (enumLiteral_0= 'struct' ) ;
=======
    // InternalSCTX.g:17221:1: ruleStructType returns [Enumerator current=null] : (enumLiteral_0= 'struct' ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final Enumerator ruleStructType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17846:2: ( (enumLiteral_0= 'struct' ) )
            // InternalSCTX.g:17847:2: (enumLiteral_0= 'struct' )
            {
            // InternalSCTX.g:17847:2: (enumLiteral_0= 'struct' )
            // InternalSCTX.g:17848:3: enumLiteral_0= 'struct'
            {
            enumLiteral_0=(Token)match(input,150,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
            // InternalSCTX.g:17227:2: ( (enumLiteral_0= 'struct' ) )
            // InternalSCTX.g:17228:2: (enumLiteral_0= 'struct' )
            {
            // InternalSCTX.g:17228:2: (enumLiteral_0= 'struct' )
            // InternalSCTX.g:17229:3: enumLiteral_0= 'struct'
            {
            enumLiteral_0=(Token)match(input,146,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getStructTypeAccess().getSTRUCTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getStructTypeAccess().getSTRUCTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructType"


    // $ANTLR start "ruleClassType"
<<<<<<< HEAD
    // InternalSCTX.g:17857:1: ruleClassType returns [Enumerator current=null] : (enumLiteral_0= 'class' ) ;
=======
    // InternalSCTX.g:17238:1: ruleClassType returns [Enumerator current=null] : (enumLiteral_0= 'class' ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final Enumerator ruleClassType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17863:2: ( (enumLiteral_0= 'class' ) )
            // InternalSCTX.g:17864:2: (enumLiteral_0= 'class' )
            {
            // InternalSCTX.g:17864:2: (enumLiteral_0= 'class' )
            // InternalSCTX.g:17865:3: enumLiteral_0= 'class'
            {
            enumLiteral_0=(Token)match(input,151,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
            // InternalSCTX.g:17244:2: ( (enumLiteral_0= 'class' ) )
            // InternalSCTX.g:17245:2: (enumLiteral_0= 'class' )
            {
            // InternalSCTX.g:17245:2: (enumLiteral_0= 'class' )
            // InternalSCTX.g:17246:3: enumLiteral_0= 'class'
            {
            enumLiteral_0=(Token)match(input,147,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getClassTypeAccess().getCLASSEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getClassTypeAccess().getCLASSEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassType"


    // $ANTLR start "ruleCombineOperator"
<<<<<<< HEAD
    // InternalSCTX.g:17874:1: ruleCombineOperator returns [Enumerator current=null] : ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) ) ;
=======
    // InternalSCTX.g:17255:1: ruleCombineOperator returns [Enumerator current=null] : ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final Enumerator ruleCombineOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17880:2: ( ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) ) )
            // InternalSCTX.g:17881:2: ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) )
            {
            // InternalSCTX.g:17881:2: ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) )
            int alt467=8;
            switch ( input.LA(1) ) {
            case 152:
                {
                alt467=1;
=======
            // InternalSCTX.g:17261:2: ( ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) ) )
            // InternalSCTX.g:17262:2: ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) )
            {
            // InternalSCTX.g:17262:2: ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) )
            int alt456=8;
            switch ( input.LA(1) ) {
            case 148:
                {
                alt456=1;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case 92:
                {
<<<<<<< HEAD
                alt467=2;
=======
                alt456=2;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case 94:
                {
<<<<<<< HEAD
                alt467=3;
                }
                break;
            case 153:
                {
                alt467=4;
                }
                break;
            case 154:
                {
                alt467=5;
=======
                alt456=3;
                }
                break;
            case 149:
                {
                alt456=4;
                }
                break;
            case 150:
                {
                alt456=5;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case 87:
                {
<<<<<<< HEAD
                alt467=6;
=======
                alt456=6;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case 34:
                {
<<<<<<< HEAD
                alt467=7;
=======
                alt456=7;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            case 65:
                {
<<<<<<< HEAD
                alt467=8;
=======
                alt456=8;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
<<<<<<< HEAD
                    new NoViableAltException("", 467, 0, input);
=======
                    new NoViableAltException("", 456, 0, input);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                throw nvae;
            }

<<<<<<< HEAD
            switch (alt467) {
                case 1 :
                    // InternalSCTX.g:17882:3: (enumLiteral_0= 'none' )
                    {
                    // InternalSCTX.g:17882:3: (enumLiteral_0= 'none' )
                    // InternalSCTX.g:17883:4: enumLiteral_0= 'none'
                    {
                    enumLiteral_0=(Token)match(input,152,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
            switch (alt456) {
                case 1 :
                    // InternalSCTX.g:17263:3: (enumLiteral_0= 'none' )
                    {
                    // InternalSCTX.g:17263:3: (enumLiteral_0= 'none' )
                    // InternalSCTX.g:17264:4: enumLiteral_0= 'none'
                    {
                    enumLiteral_0=(Token)match(input,148,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:17890:3: (enumLiteral_1= '+' )
                    {
                    // InternalSCTX.g:17890:3: (enumLiteral_1= '+' )
                    // InternalSCTX.g:17891:4: enumLiteral_1= '+'
=======
                    // InternalSCTX.g:17271:3: (enumLiteral_1= '+' )
                    {
                    // InternalSCTX.g:17271:3: (enumLiteral_1= '+' )
                    // InternalSCTX.g:17272:4: enumLiteral_1= '+'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    enumLiteral_1=(Token)match(input,92,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
<<<<<<< HEAD
                    // InternalSCTX.g:17898:3: (enumLiteral_2= '*' )
                    {
                    // InternalSCTX.g:17898:3: (enumLiteral_2= '*' )
                    // InternalSCTX.g:17899:4: enumLiteral_2= '*'
=======
                    // InternalSCTX.g:17279:3: (enumLiteral_2= '*' )
                    {
                    // InternalSCTX.g:17279:3: (enumLiteral_2= '*' )
                    // InternalSCTX.g:17280:4: enumLiteral_2= '*'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    enumLiteral_2=(Token)match(input,94,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
<<<<<<< HEAD
                    // InternalSCTX.g:17906:3: (enumLiteral_3= 'max' )
                    {
                    // InternalSCTX.g:17906:3: (enumLiteral_3= 'max' )
                    // InternalSCTX.g:17907:4: enumLiteral_3= 'max'
                    {
                    enumLiteral_3=(Token)match(input,153,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:17287:3: (enumLiteral_3= 'max' )
                    {
                    // InternalSCTX.g:17287:3: (enumLiteral_3= 'max' )
                    // InternalSCTX.g:17288:4: enumLiteral_3= 'max'
                    {
                    enumLiteral_3=(Token)match(input,149,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
<<<<<<< HEAD
                    // InternalSCTX.g:17914:3: (enumLiteral_4= 'min' )
                    {
                    // InternalSCTX.g:17914:3: (enumLiteral_4= 'min' )
                    // InternalSCTX.g:17915:4: enumLiteral_4= 'min'
                    {
                    enumLiteral_4=(Token)match(input,154,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:17295:3: (enumLiteral_4= 'min' )
                    {
                    // InternalSCTX.g:17295:3: (enumLiteral_4= 'min' )
                    // InternalSCTX.g:17296:4: enumLiteral_4= 'min'
                    {
                    enumLiteral_4=(Token)match(input,150,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
<<<<<<< HEAD
                    // InternalSCTX.g:17922:3: (enumLiteral_5= '|' )
                    {
                    // InternalSCTX.g:17922:3: (enumLiteral_5= '|' )
                    // InternalSCTX.g:17923:4: enumLiteral_5= '|'
=======
                    // InternalSCTX.g:17303:3: (enumLiteral_5= '|' )
                    {
                    // InternalSCTX.g:17303:3: (enumLiteral_5= '|' )
                    // InternalSCTX.g:17304:4: enumLiteral_5= '|'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    enumLiteral_5=(Token)match(input,87,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
<<<<<<< HEAD
                    // InternalSCTX.g:17930:3: (enumLiteral_6= '&' )
                    {
                    // InternalSCTX.g:17930:3: (enumLiteral_6= '&' )
                    // InternalSCTX.g:17931:4: enumLiteral_6= '&'
=======
                    // InternalSCTX.g:17311:3: (enumLiteral_6= '&' )
                    {
                    // InternalSCTX.g:17311:3: (enumLiteral_6= '&' )
                    // InternalSCTX.g:17312:4: enumLiteral_6= '&'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    enumLiteral_6=(Token)match(input,34,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
<<<<<<< HEAD
                    // InternalSCTX.g:17938:3: (enumLiteral_7= 'host' )
                    {
                    // InternalSCTX.g:17938:3: (enumLiteral_7= 'host' )
                    // InternalSCTX.g:17939:4: enumLiteral_7= 'host'
=======
                    // InternalSCTX.g:17319:3: (enumLiteral_7= 'host' )
                    {
                    // InternalSCTX.g:17319:3: (enumLiteral_7= 'host' )
                    // InternalSCTX.g:17320:4: enumLiteral_7= 'host'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    {
                    enumLiteral_7=(Token)match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_7, grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCombineOperator"


    // $ANTLR start "ruleAccessModifier"
<<<<<<< HEAD
    // InternalSCTX.g:17949:1: ruleAccessModifier returns [Enumerator current=null] : ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'protected' ) | (enumLiteral_2= 'private' ) ) ;
=======
    // InternalSCTX.g:17330:1: ruleAccessModifier returns [Enumerator current=null] : ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'protected' ) | (enumLiteral_2= 'private' ) ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final Enumerator ruleAccessModifier() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17955:2: ( ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'protected' ) | (enumLiteral_2= 'private' ) ) )
            // InternalSCTX.g:17956:2: ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'protected' ) | (enumLiteral_2= 'private' ) )
            {
            // InternalSCTX.g:17956:2: ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'protected' ) | (enumLiteral_2= 'private' ) )
            int alt468=3;
            switch ( input.LA(1) ) {
            case 155:
                {
                alt468=1;
                }
                break;
            case 156:
                {
                alt468=2;
                }
                break;
            case 157:
                {
                alt468=3;
=======
            // InternalSCTX.g:17336:2: ( ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'protected' ) | (enumLiteral_2= 'private' ) ) )
            // InternalSCTX.g:17337:2: ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'protected' ) | (enumLiteral_2= 'private' ) )
            {
            // InternalSCTX.g:17337:2: ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'protected' ) | (enumLiteral_2= 'private' ) )
            int alt457=3;
            switch ( input.LA(1) ) {
            case 151:
                {
                alt457=1;
                }
                break;
            case 152:
                {
                alt457=2;
                }
                break;
            case 153:
                {
                alt457=3;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
<<<<<<< HEAD
                    new NoViableAltException("", 468, 0, input);
=======
                    new NoViableAltException("", 457, 0, input);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                throw nvae;
            }

<<<<<<< HEAD
            switch (alt468) {
                case 1 :
                    // InternalSCTX.g:17957:3: (enumLiteral_0= 'public' )
                    {
                    // InternalSCTX.g:17957:3: (enumLiteral_0= 'public' )
                    // InternalSCTX.g:17958:4: enumLiteral_0= 'public'
                    {
                    enumLiteral_0=(Token)match(input,155,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
            switch (alt457) {
                case 1 :
                    // InternalSCTX.g:17338:3: (enumLiteral_0= 'public' )
                    {
                    // InternalSCTX.g:17338:3: (enumLiteral_0= 'public' )
                    // InternalSCTX.g:17339:4: enumLiteral_0= 'public'
                    {
                    enumLiteral_0=(Token)match(input,151,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAccessModifierAccess().getPUBLICEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getAccessModifierAccess().getPUBLICEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:17965:3: (enumLiteral_1= 'protected' )
                    {
                    // InternalSCTX.g:17965:3: (enumLiteral_1= 'protected' )
                    // InternalSCTX.g:17966:4: enumLiteral_1= 'protected'
                    {
                    enumLiteral_1=(Token)match(input,156,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:17346:3: (enumLiteral_1= 'protected' )
                    {
                    // InternalSCTX.g:17346:3: (enumLiteral_1= 'protected' )
                    // InternalSCTX.g:17347:4: enumLiteral_1= 'protected'
                    {
                    enumLiteral_1=(Token)match(input,152,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAccessModifierAccess().getPROTECTEDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getAccessModifierAccess().getPROTECTEDEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
<<<<<<< HEAD
                    // InternalSCTX.g:17973:3: (enumLiteral_2= 'private' )
                    {
                    // InternalSCTX.g:17973:3: (enumLiteral_2= 'private' )
                    // InternalSCTX.g:17974:4: enumLiteral_2= 'private'
                    {
                    enumLiteral_2=(Token)match(input,157,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:17354:3: (enumLiteral_2= 'private' )
                    {
                    // InternalSCTX.g:17354:3: (enumLiteral_2= 'private' )
                    // InternalSCTX.g:17355:4: enumLiteral_2= 'private'
                    {
                    enumLiteral_2=(Token)match(input,153,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAccessModifierAccess().getPRIVATEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getAccessModifierAccess().getPRIVATEEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAccessModifier"


    // $ANTLR start "ruleMethodReturnType"
<<<<<<< HEAD
    // InternalSCTX.g:17984:1: ruleMethodReturnType returns [Enumerator current=null] : ( (enumLiteral_0= 'void' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) ) ;
=======
    // InternalSCTX.g:17365:1: ruleMethodReturnType returns [Enumerator current=null] : ( (enumLiteral_0= 'void' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) ) ;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    public final Enumerator ruleMethodReturnType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;


        	enterRule();

        try {
<<<<<<< HEAD
            // InternalSCTX.g:17990:2: ( ( (enumLiteral_0= 'void' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) ) )
            // InternalSCTX.g:17991:2: ( (enumLiteral_0= 'void' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) )
            {
            // InternalSCTX.g:17991:2: ( (enumLiteral_0= 'void' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) )
            int alt469=5;
            switch ( input.LA(1) ) {
            case 158:
                {
                alt469=1;
                }
                break;
            case 117:
                {
                alt469=2;
                }
                break;
            case 118:
                {
                alt469=3;
                }
                break;
            case 119:
                {
                alt469=4;
                }
                break;
            case 120:
                {
                alt469=5;
=======
            // InternalSCTX.g:17371:2: ( ( (enumLiteral_0= 'void' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) ) )
            // InternalSCTX.g:17372:2: ( (enumLiteral_0= 'void' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) )
            {
            // InternalSCTX.g:17372:2: ( (enumLiteral_0= 'void' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) )
            int alt458=5;
            switch ( input.LA(1) ) {
            case 154:
                {
                alt458=1;
                }
                break;
            case 113:
                {
                alt458=2;
                }
                break;
            case 114:
                {
                alt458=3;
                }
                break;
            case 115:
                {
                alt458=4;
                }
                break;
            case 116:
                {
                alt458=5;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
<<<<<<< HEAD
                    new NoViableAltException("", 469, 0, input);
=======
                    new NoViableAltException("", 458, 0, input);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                throw nvae;
            }

<<<<<<< HEAD
            switch (alt469) {
                case 1 :
                    // InternalSCTX.g:17992:3: (enumLiteral_0= 'void' )
                    {
                    // InternalSCTX.g:17992:3: (enumLiteral_0= 'void' )
                    // InternalSCTX.g:17993:4: enumLiteral_0= 'void'
                    {
                    enumLiteral_0=(Token)match(input,158,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
            switch (alt458) {
                case 1 :
                    // InternalSCTX.g:17373:3: (enumLiteral_0= 'void' )
                    {
                    // InternalSCTX.g:17373:3: (enumLiteral_0= 'void' )
                    // InternalSCTX.g:17374:4: enumLiteral_0= 'void'
                    {
                    enumLiteral_0=(Token)match(input,154,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getMethodReturnTypeAccess().getVOIDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getMethodReturnTypeAccess().getVOIDEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
<<<<<<< HEAD
                    // InternalSCTX.g:18000:3: (enumLiteral_1= 'bool' )
                    {
                    // InternalSCTX.g:18000:3: (enumLiteral_1= 'bool' )
                    // InternalSCTX.g:18001:4: enumLiteral_1= 'bool'
                    {
                    enumLiteral_1=(Token)match(input,117,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:17381:3: (enumLiteral_1= 'bool' )
                    {
                    // InternalSCTX.g:17381:3: (enumLiteral_1= 'bool' )
                    // InternalSCTX.g:17382:4: enumLiteral_1= 'bool'
                    {
                    enumLiteral_1=(Token)match(input,113,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getMethodReturnTypeAccess().getBOOLEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getMethodReturnTypeAccess().getBOOLEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
<<<<<<< HEAD
                    // InternalSCTX.g:18008:3: (enumLiteral_2= 'int' )
                    {
                    // InternalSCTX.g:18008:3: (enumLiteral_2= 'int' )
                    // InternalSCTX.g:18009:4: enumLiteral_2= 'int'
                    {
                    enumLiteral_2=(Token)match(input,118,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:17389:3: (enumLiteral_2= 'int' )
                    {
                    // InternalSCTX.g:17389:3: (enumLiteral_2= 'int' )
                    // InternalSCTX.g:17390:4: enumLiteral_2= 'int'
                    {
                    enumLiteral_2=(Token)match(input,114,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getMethodReturnTypeAccess().getINTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getMethodReturnTypeAccess().getINTEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
<<<<<<< HEAD
                    // InternalSCTX.g:18016:3: (enumLiteral_3= 'float' )
                    {
                    // InternalSCTX.g:18016:3: (enumLiteral_3= 'float' )
                    // InternalSCTX.g:18017:4: enumLiteral_3= 'float'
                    {
                    enumLiteral_3=(Token)match(input,119,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:17397:3: (enumLiteral_3= 'float' )
                    {
                    // InternalSCTX.g:17397:3: (enumLiteral_3= 'float' )
                    // InternalSCTX.g:17398:4: enumLiteral_3= 'float'
                    {
                    enumLiteral_3=(Token)match(input,115,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getMethodReturnTypeAccess().getFLOATEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getMethodReturnTypeAccess().getFLOATEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
<<<<<<< HEAD
                    // InternalSCTX.g:18024:3: (enumLiteral_4= 'string' )
                    {
                    // InternalSCTX.g:18024:3: (enumLiteral_4= 'string' )
                    // InternalSCTX.g:18025:4: enumLiteral_4= 'string'
                    {
                    enumLiteral_4=(Token)match(input,120,FollowSets000.FOLLOW_2); if (state.failed) return current;
=======
                    // InternalSCTX.g:17405:3: (enumLiteral_4= 'string' )
                    {
                    // InternalSCTX.g:17405:3: (enumLiteral_4= 'string' )
                    // InternalSCTX.g:17406:4: enumLiteral_4= 'string'
                    {
                    enumLiteral_4=(Token)match(input,116,FollowSets000.FOLLOW_2); if (state.failed) return current;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getMethodReturnTypeAccess().getSTRINGEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getMethodReturnTypeAccess().getSTRINGEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodReturnType"

    // $ANTLR start synpred8_InternalSCTX
    public final void synpred8_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_9_0 = null;


        // InternalSCTX.g:280:4: ( (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )
        // InternalSCTX.g:280:4: (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
        {
        // InternalSCTX.g:280:4: (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
        // InternalSCTX.g:281:5: lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getRootStateAccess().getDeclarationsDeclarationOrMethodWithKeywordWOSemicolonParserRuleCall_6_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_9_0=ruleDeclarationOrMethodWithKeywordWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred8_InternalSCTX

    // $ANTLR start synpred10_InternalSCTX
    public final void synpred10_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_regions_11_0 = null;


        // InternalSCTX.g:318:4: ( ( (lv_regions_11_0= ruleImplicitControlflowRegion ) ) )
        // InternalSCTX.g:318:4: ( (lv_regions_11_0= ruleImplicitControlflowRegion ) )
        {
        // InternalSCTX.g:318:4: ( (lv_regions_11_0= ruleImplicitControlflowRegion ) )
        // InternalSCTX.g:319:5: (lv_regions_11_0= ruleImplicitControlflowRegion )
        {
        // InternalSCTX.g:319:5: (lv_regions_11_0= ruleImplicitControlflowRegion )
        // InternalSCTX.g:320:6: lv_regions_11_0= ruleImplicitControlflowRegion
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getRootStateAccess().getRegionsImplicitControlflowRegionParserRuleCall_8_0_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_regions_11_0=ruleImplicitControlflowRegion();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred10_InternalSCTX

    // $ANTLR start synpred17_InternalSCTX
    public final void synpred17_InternalSCTX_fragment() throws RecognitionException {   
        // InternalSCTX.g:457:4: ( 'state' )
        // InternalSCTX.g:457:5: 'state'
        {
        match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred17_InternalSCTX

    // $ANTLR start synpred26_InternalSCTX
    public final void synpred26_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_19_0 = null;


        // InternalSCTX.g:626:6: ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )
        // InternalSCTX.g:626:6: (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
        {
        // InternalSCTX.g:626:6: (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
        // InternalSCTX.g:627:7: lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getStateAccess().getDeclarationsDeclarationOrMethodWithKeywordWOSemicolonParserRuleCall_8_1_3_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_19_0=ruleDeclarationOrMethodWithKeywordWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred26_InternalSCTX

    // $ANTLR start synpred28_InternalSCTX
    public final void synpred28_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_regions_21_0 = null;


        // InternalSCTX.g:664:6: ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) )
        // InternalSCTX.g:664:6: ( (lv_regions_21_0= ruleImplicitControlflowRegion ) )
        {
        // InternalSCTX.g:664:6: ( (lv_regions_21_0= ruleImplicitControlflowRegion ) )
        // InternalSCTX.g:665:7: (lv_regions_21_0= ruleImplicitControlflowRegion )
        {
        // InternalSCTX.g:665:7: (lv_regions_21_0= ruleImplicitControlflowRegion )
        // InternalSCTX.g:666:8: lv_regions_21_0= ruleImplicitControlflowRegion
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getStateAccess().getRegionsImplicitControlflowRegionParserRuleCall_8_1_5_0_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_regions_21_0=ruleImplicitControlflowRegion();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred28_InternalSCTX

    // $ANTLR start synpred44_InternalSCTX
    public final void synpred44_InternalSCTX_fragment() throws RecognitionException {   
        Token lv_triggerDelay_4_0=null;

        // InternalSCTX.g:1140:5: ( (lv_triggerDelay_4_0= RULE_INT ) )
        // InternalSCTX.g:1140:5: (lv_triggerDelay_4_0= RULE_INT )
        {
        // InternalSCTX.g:1140:5: (lv_triggerDelay_4_0= RULE_INT )
        // InternalSCTX.g:1141:6: lv_triggerDelay_4_0= RULE_INT
        {
        lv_triggerDelay_4_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred44_InternalSCTX

    // $ANTLR start synpred45_InternalSCTX
    public final void synpred45_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_trigger_5_0 = null;


        // InternalSCTX.g:1158:5: ( ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) )
        // InternalSCTX.g:1158:5: ( (lv_trigger_5_0= ruleBoolScheduleExpression ) )
        {
        // InternalSCTX.g:1158:5: ( (lv_trigger_5_0= ruleBoolScheduleExpression ) )
        // InternalSCTX.g:1159:6: (lv_trigger_5_0= ruleBoolScheduleExpression )
        {
        // InternalSCTX.g:1159:6: (lv_trigger_5_0= ruleBoolScheduleExpression )
        // InternalSCTX.g:1160:7: lv_trigger_5_0= ruleBoolScheduleExpression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getTransitionAccess().getTriggerBoolScheduleExpressionParserRuleCall_3_2_0_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_trigger_5_0=ruleBoolScheduleExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred45_InternalSCTX

    // $ANTLR start synpred54_InternalSCTX
    public final void synpred54_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ControlflowRegion_0 = null;


        // InternalSCTX.g:1398:3: (this_ControlflowRegion_0= ruleControlflowRegion )
        // InternalSCTX.g:1398:3: this_ControlflowRegion_0= ruleControlflowRegion
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ControlflowRegion_0=ruleControlflowRegion();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred54_InternalSCTX

    // $ANTLR start synpred70_InternalSCTX
    public final void synpred70_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_26_0 = null;


        // InternalSCTX.g:1817:8: ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )
        // InternalSCTX.g:1817:8: (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
        {
        // InternalSCTX.g:1817:8: (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
        // InternalSCTX.g:1818:9: lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon
        {
        if ( state.backtracking==0 ) {

          									newCompositeNode(grammarAccess.getControlflowRegionAccess().getDeclarationsDeclarationOrMethodWithKeywordWOSemicolonParserRuleCall_7_1_2_0_1_0());
          								
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_26_0=ruleDeclarationOrMethodWithKeywordWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred70_InternalSCTX

    // $ANTLR start synpred72_InternalSCTX
    public final void synpred72_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_states_28_0 = null;


        // InternalSCTX.g:1855:8: ( ( (lv_states_28_0= ruleImplicitState ) ) )
        // InternalSCTX.g:1855:8: ( (lv_states_28_0= ruleImplicitState ) )
        {
        // InternalSCTX.g:1855:8: ( (lv_states_28_0= ruleImplicitState ) )
        // InternalSCTX.g:1856:9: (lv_states_28_0= ruleImplicitState )
        {
        // InternalSCTX.g:1856:9: (lv_states_28_0= ruleImplicitState )
        // InternalSCTX.g:1857:10: lv_states_28_0= ruleImplicitState
        {
        if ( state.backtracking==0 ) {

          										newCompositeNode(grammarAccess.getControlflowRegionAccess().getStatesImplicitStateParserRuleCall_7_1_2_0_3_0_0());
          									
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_states_28_0=ruleImplicitState();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred72_InternalSCTX

    // $ANTLR start synpred75_InternalSCTX
    public final void synpred75_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_32_0 = null;


        // InternalSCTX.g:1907:8: ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )
        // InternalSCTX.g:1907:8: (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
        {
        // InternalSCTX.g:1907:8: (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
        // InternalSCTX.g:1908:9: lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon
        {
        if ( state.backtracking==0 ) {

          									newCompositeNode(grammarAccess.getControlflowRegionAccess().getDeclarationsDeclarationOrMethodWithKeywordWOSemicolonParserRuleCall_7_1_2_1_1_0());
          								
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_32_0=ruleDeclarationOrMethodWithKeywordWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred75_InternalSCTX

    // $ANTLR start synpred77_InternalSCTX
    public final void synpred77_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_states_34_0 = null;


        // InternalSCTX.g:1945:8: ( (lv_states_34_0= ruleState ) )
        // InternalSCTX.g:1945:8: (lv_states_34_0= ruleState )
        {
        // InternalSCTX.g:1945:8: (lv_states_34_0= ruleState )
        // InternalSCTX.g:1946:9: lv_states_34_0= ruleState
        {
        if ( state.backtracking==0 ) {

          									newCompositeNode(grammarAccess.getControlflowRegionAccess().getStatesStateParserRuleCall_7_1_2_1_3_0());
          								
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_states_34_0=ruleState();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred77_InternalSCTX

    // $ANTLR start synpred87_InternalSCTX
    public final void synpred87_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_16_0 = null;


        // InternalSCTX.g:2189:6: ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )
        // InternalSCTX.g:2189:6: (lv_declarations_16_0= ruleDeclarationWOSemicolon )
        {
        // InternalSCTX.g:2189:6: (lv_declarations_16_0= ruleDeclarationWOSemicolon )
        // InternalSCTX.g:2190:7: lv_declarations_16_0= ruleDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getDataflowRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_9_0_1_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_16_0=ruleDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred87_InternalSCTX

    // $ANTLR start synpred90_InternalSCTX
    public final void synpred90_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_20_0 = null;


        // InternalSCTX.g:2238:6: ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )
        // InternalSCTX.g:2238:6: (lv_declarations_20_0= ruleDeclarationWOSemicolon )
        {
        // InternalSCTX.g:2238:6: (lv_declarations_20_0= ruleDeclarationWOSemicolon )
        // InternalSCTX.g:2239:7: lv_declarations_20_0= ruleDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getDataflowRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_9_1_1_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_20_0=ruleDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred90_InternalSCTX

    // $ANTLR start synpred91_InternalSCTX
    public final void synpred91_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_equations_21_0 = null;


        // InternalSCTX.g:2257:6: ( (lv_equations_21_0= ruleAssignment ) )
        // InternalSCTX.g:2257:6: (lv_equations_21_0= ruleAssignment )
        {
        // InternalSCTX.g:2257:6: (lv_equations_21_0= ruleAssignment )
        // InternalSCTX.g:2258:7: lv_equations_21_0= ruleAssignment
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getDataflowRegionAccess().getEquationsAssignmentParserRuleCall_9_1_2_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_equations_21_0=ruleAssignment();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred91_InternalSCTX

    // $ANTLR start synpred105_InternalSCTX
    public final void synpred105_InternalSCTX_fragment() throws RecognitionException {   
        Token lv_triggerDelay_4_0=null;

        // InternalSCTX.g:2671:5: ( (lv_triggerDelay_4_0= RULE_INT ) )
        // InternalSCTX.g:2671:5: (lv_triggerDelay_4_0= RULE_INT )
        {
        // InternalSCTX.g:2671:5: (lv_triggerDelay_4_0= RULE_INT )
        // InternalSCTX.g:2672:6: lv_triggerDelay_4_0= RULE_INT
        {
        lv_triggerDelay_4_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred105_InternalSCTX

    // $ANTLR start synpred118_InternalSCTX
    public final void synpred118_InternalSCTX_fragment() throws RecognitionException {   
        Token lv_triggerDelay_5_0=null;

        // InternalSCTX.g:3034:5: ( (lv_triggerDelay_5_0= RULE_INT ) )
        // InternalSCTX.g:3034:5: (lv_triggerDelay_5_0= RULE_INT )
        {
        // InternalSCTX.g:3034:5: (lv_triggerDelay_5_0= RULE_INT )
        // InternalSCTX.g:3035:6: lv_triggerDelay_5_0= RULE_INT
        {
        lv_triggerDelay_5_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred118_InternalSCTX

    // $ANTLR start synpred135_InternalSCTX
    public final void synpred135_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Declaration_0 = null;


        // InternalSCTX.g:3564:3: (this_Declaration_0= superDeclaration )
        // InternalSCTX.g:3564:3: this_Declaration_0= superDeclaration
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Declaration_0=superDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred135_InternalSCTX

    // $ANTLR start synpred136_InternalSCTX
    public final void synpred136_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_SclAssignment_0 = null;


        // InternalSCTX.g:3606:3: (this_SclAssignment_0= ruleSclAssignment )
        // InternalSCTX.g:3606:3: this_SclAssignment_0= ruleSclAssignment
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_SclAssignment_0=ruleSclAssignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred136_InternalSCTX

    // $ANTLR start synpred137_InternalSCTX
    public final void synpred137_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_SclPostfixAssignment_1 = null;


        // InternalSCTX.g:3618:3: (this_SclPostfixAssignment_1= ruleSclPostfixAssignment )
        // InternalSCTX.g:3618:3: this_SclPostfixAssignment_1= ruleSclPostfixAssignment
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_SclPostfixAssignment_1=ruleSclPostfixAssignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred137_InternalSCTX

    // $ANTLR start synpred138_InternalSCTX
    public final void synpred138_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Label_2 = null;


        // InternalSCTX.g:3630:3: (this_Label_2= ruleLabel )
        // InternalSCTX.g:3630:3: this_Label_2= ruleLabel
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Label_2=ruleLabel();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred138_InternalSCTX

    // $ANTLR start synpred139_InternalSCTX
    public final void synpred139_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Conditional_3 = null;


        // InternalSCTX.g:3642:3: (this_Conditional_3= ruleConditional )
        // InternalSCTX.g:3642:3: this_Conditional_3= ruleConditional
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Conditional_3=ruleConditional();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred139_InternalSCTX

    // $ANTLR start synpred140_InternalSCTX
    public final void synpred140_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Goto_4 = null;


        // InternalSCTX.g:3654:3: (this_Goto_4= ruleGoto )
        // InternalSCTX.g:3654:3: this_Goto_4= ruleGoto
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Goto_4=ruleGoto();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred140_InternalSCTX

    // $ANTLR start synpred141_InternalSCTX
    public final void synpred141_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ScopeStatement_5 = null;


        // InternalSCTX.g:3666:3: (this_ScopeStatement_5= ruleScopeStatement )
        // InternalSCTX.g:3666:3: this_ScopeStatement_5= ruleScopeStatement
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ScopeStatement_5=ruleScopeStatement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred141_InternalSCTX

    // $ANTLR start synpred142_InternalSCTX
    public final void synpred142_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Return_6 = null;


        // InternalSCTX.g:3678:3: (this_Return_6= ruleReturn )
        // InternalSCTX.g:3678:3: this_Return_6= ruleReturn
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Return_6=ruleReturn();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred142_InternalSCTX

    // $ANTLR start synpred144_InternalSCTX
    public final void synpred144_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Effect_0 = null;


        // InternalSCTX.g:3732:3: (this_Effect_0= superEffect )
        // InternalSCTX.g:3732:3: this_Effect_0= superEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Effect_0=superEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred144_InternalSCTX

    // $ANTLR start synpred146_InternalSCTX
    public final void synpred146_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_3_0 = null;


        // InternalSCTX.g:3808:4: ( (lv_declarations_3_0= ruleDeclaration ) )
        // InternalSCTX.g:3808:4: (lv_declarations_3_0= ruleDeclaration )
        {
        // InternalSCTX.g:3808:4: (lv_declarations_3_0= ruleDeclaration )
        // InternalSCTX.g:3809:5: lv_declarations_3_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getCodeEffectAccess().getDeclarationsDeclarationParserRuleCall_3_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_3_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred146_InternalSCTX

    // $ANTLR start synpred163_InternalSCTX
    public final void synpred163_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_21=null;
        EObject lv_valuedObjects_20_0 = null;

        EObject lv_valuedObjects_22_0 = null;


        // InternalSCTX.g:4155:4: ( ( (lv_valuedObjects_20_0= ruleValuedObject ) ) (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )* )
        // InternalSCTX.g:4155:4: ( (lv_valuedObjects_20_0= ruleValuedObject ) ) (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )*
        {
        // InternalSCTX.g:4155:4: ( (lv_valuedObjects_20_0= ruleValuedObject ) )
        // InternalSCTX.g:4156:5: (lv_valuedObjects_20_0= ruleValuedObject )
        {
        // InternalSCTX.g:4156:5: (lv_valuedObjects_20_0= ruleValuedObject )
        // InternalSCTX.g:4157:6: lv_valuedObjects_20_0= ruleValuedObject
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_10_0_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_203);
        lv_valuedObjects_20_0=ruleValuedObject();

        state._fsp--;
        if (state.failed) return ;

        }


        }

<<<<<<< HEAD
        // InternalSCTX.g:4252:4: (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )*
        loop524:
        do {
            int alt524=2;
            int LA524_0 = input.LA(1);

            if ( (LA524_0==20) ) {
                alt524=1;
            }


            switch (alt524) {
=======
        // InternalSCTX.g:4174:4: (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )*
        loop513:
        do {
            int alt513=2;
            int LA513_0 = input.LA(1);

            if ( (LA513_0==20) ) {
                alt513=1;
            }


            switch (alt513) {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        	case 1 :
        	    // InternalSCTX.g:4175:5: otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) )
        	    {
        	    otherlv_21=(Token)match(input,20,FollowSets000.FOLLOW_105); if (state.failed) return ;
        	    // InternalSCTX.g:4179:5: ( (lv_valuedObjects_22_0= ruleValuedObject ) )
        	    // InternalSCTX.g:4180:6: (lv_valuedObjects_22_0= ruleValuedObject )
        	    {
        	    // InternalSCTX.g:4180:6: (lv_valuedObjects_22_0= ruleValuedObject )
        	    // InternalSCTX.g:4181:7: lv_valuedObjects_22_0= ruleValuedObject
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_10_1_1_0());
        	      						
        	    }
        	    pushFollow(FollowSets000.FOLLOW_203);
        	    lv_valuedObjects_22_0=ruleValuedObject();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
<<<<<<< HEAD
        	    break loop524;
=======
        	    break loop513;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
        } while (true);


        }
    }
    // $ANTLR end synpred163_InternalSCTX

    // $ANTLR start synpred166_InternalSCTX
    public final void synpred166_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_4_0 = null;


        // InternalSCTX.g:4283:4: ( (lv_declarations_4_0= ruleDeclarationWOSemicolon ) )
        // InternalSCTX.g:4283:4: (lv_declarations_4_0= ruleDeclarationWOSemicolon )
        {
        // InternalSCTX.g:4283:4: (lv_declarations_4_0= ruleDeclarationWOSemicolon )
        // InternalSCTX.g:4284:5: lv_declarations_4_0= ruleDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getPolicyRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_4_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_4_0=ruleDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred166_InternalSCTX

    // $ANTLR start synpred173_InternalSCTX
    public final void synpred173_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_trigger_3_0 = null;


        // InternalSCTX.g:4489:5: ( ( (lv_trigger_3_0= ruleLogicalOrExpression ) ) )
        // InternalSCTX.g:4489:5: ( (lv_trigger_3_0= ruleLogicalOrExpression ) )
        {
        // InternalSCTX.g:4489:5: ( (lv_trigger_3_0= ruleLogicalOrExpression ) )
        // InternalSCTX.g:4490:6: (lv_trigger_3_0= ruleLogicalOrExpression )
        {
        // InternalSCTX.g:4490:6: (lv_trigger_3_0= ruleLogicalOrExpression )
        // InternalSCTX.g:4491:7: lv_trigger_3_0= ruleLogicalOrExpression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPolicyTransitionAccess().getTriggerLogicalOrExpressionParserRuleCall_2_1_0_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_trigger_3_0=ruleLogicalOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred173_InternalSCTX

    // $ANTLR start synpred178_InternalSCTX
    public final void synpred178_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_DeclarationWOSemicolon_0 = null;


        // InternalSCTX.g:4643:3: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon )
        // InternalSCTX.g:4643:3: this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_DeclarationWOSemicolon_0=ruleDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred178_InternalSCTX

    // $ANTLR start synpred187_InternalSCTX
    public final void synpred187_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_16_0 = null;


        // InternalSCTX.g:4886:5: ( (lv_declarations_16_0= ruleDeclaration ) )
        // InternalSCTX.g:4886:5: (lv_declarations_16_0= ruleDeclaration )
        {
        // InternalSCTX.g:4886:5: (lv_declarations_16_0= ruleDeclaration )
        // InternalSCTX.g:4887:6: lv_declarations_16_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getDeclarationsDeclarationParserRuleCall_8_2_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_16_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred187_InternalSCTX

    // $ANTLR start synpred192_InternalSCTX
    public final void synpred192_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_4_0 = null;


        // InternalSCTX.g:4995:4: ( (lv_declarations_4_0= ruleDeclaration ) )
        // InternalSCTX.g:4995:4: (lv_declarations_4_0= ruleDeclaration )
        {
        // InternalSCTX.g:4995:4: (lv_declarations_4_0= ruleDeclaration )
        // InternalSCTX.g:4996:5: lv_declarations_4_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getModuleAccess().getDeclarationsDeclarationParserRuleCall_4_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_4_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred192_InternalSCTX

    // $ANTLR start synpred207_InternalSCTX
    public final void synpred207_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_4_0 = null;


        // InternalSCTX.g:5540:4: ( (lv_declarations_4_0= ruleDeclaration ) )
        // InternalSCTX.g:5540:4: (lv_declarations_4_0= ruleDeclaration )
        {
        // InternalSCTX.g:5540:4: (lv_declarations_4_0= ruleDeclaration )
        // InternalSCTX.g:5541:5: lv_declarations_4_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getConditionalAccess().getDeclarationsDeclarationParserRuleCall_4_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_4_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred207_InternalSCTX

    // $ANTLR start synpred209_InternalSCTX
    public final void synpred209_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_else_7_0 = null;


        // InternalSCTX.g:5582:4: ( ( (lv_else_7_0= ruleElseScope ) ) )
        // InternalSCTX.g:5582:4: ( (lv_else_7_0= ruleElseScope ) )
        {
        // InternalSCTX.g:5582:4: ( (lv_else_7_0= ruleElseScope ) )
        // InternalSCTX.g:5583:5: (lv_else_7_0= ruleElseScope )
        {
        // InternalSCTX.g:5583:5: (lv_else_7_0= ruleElseScope )
        // InternalSCTX.g:5584:6: lv_else_7_0= ruleElseScope
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getConditionalAccess().getElseElseScopeParserRuleCall_7_0_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_else_7_0=ruleElseScope();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred209_InternalSCTX

    // $ANTLR start synpred212_InternalSCTX
    public final void synpred212_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_4_0 = null;


        // InternalSCTX.g:5674:4: ( (lv_declarations_4_0= ruleDeclaration ) )
        // InternalSCTX.g:5674:4: (lv_declarations_4_0= ruleDeclaration )
        {
        // InternalSCTX.g:5674:4: (lv_declarations_4_0= ruleDeclaration )
        // InternalSCTX.g:5675:5: lv_declarations_4_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getElseScopeAccess().getDeclarationsDeclarationParserRuleCall_4_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_4_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred212_InternalSCTX

    // $ANTLR start synpred218_InternalSCTX
    public final void synpred218_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_3_0 = null;


        // InternalSCTX.g:5855:6: ( (lv_declarations_3_0= ruleDeclaration ) )
        // InternalSCTX.g:5855:6: (lv_declarations_3_0= ruleDeclaration )
        {
        // InternalSCTX.g:5855:6: (lv_declarations_3_0= ruleDeclaration )
        // InternalSCTX.g:5856:7: lv_declarations_3_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getThreadAccess().getDeclarationsDeclarationParserRuleCall_1_0_2_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_3_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred218_InternalSCTX

    // $ANTLR start synpred220_InternalSCTX
    public final void synpred220_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_declarations_3_0 = null;

        EObject lv_statements_4_0 = null;


        // InternalSCTX.g:5830:4: ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) )
        // InternalSCTX.g:5830:4: ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
        {
        // InternalSCTX.g:5830:4: ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
        // InternalSCTX.g:5831:5: ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}'
        {
<<<<<<< HEAD
        // InternalSCTX.g:5909:5: ( (lv_annotations_1_0= ruleAnnotation ) )*
        loop536:
        do {
            int alt536=2;
            int LA536_0 = input.LA(1);

            if ( (LA536_0==RULE_COMMENT_ANNOTATION||LA536_0==106) ) {
                alt536=1;
            }


            switch (alt536) {
=======
        // InternalSCTX.g:5831:5: ( (lv_annotations_1_0= ruleAnnotation ) )*
        loop525:
        do {
            int alt525=2;
            int LA525_0 = input.LA(1);

            if ( (LA525_0==RULE_COMMENT_ANNOTATION||LA525_0==102) ) {
                alt525=1;
            }


            switch (alt525) {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        	case 1 :
        	    // InternalSCTX.g:5832:6: (lv_annotations_1_0= ruleAnnotation )
        	    {
        	    // InternalSCTX.g:5832:6: (lv_annotations_1_0= ruleAnnotation )
        	    // InternalSCTX.g:5833:7: lv_annotations_1_0= ruleAnnotation
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getThreadAccess().getAnnotationsAnnotationParserRuleCall_1_0_0_0());
        	      						
        	    }
        	    pushFollow(FollowSets000.FOLLOW_95);
        	    lv_annotations_1_0=ruleAnnotation();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
<<<<<<< HEAD
        	    break loop536;
            }
        } while (true);

        otherlv_2=(Token)match(input,21,FollowSets000.FOLLOW_98); if (state.failed) return ;
        // InternalSCTX.g:5932:5: ( (lv_declarations_3_0= ruleDeclaration ) )*
        loop537:
        do {
            int alt537=2;
            alt537 = dfa537.predict(input);
            switch (alt537) {
=======
        	    break loop525;
            }
        } while (true);

        otherlv_2=(Token)match(input,21,FollowSets000.FOLLOW_96); if (state.failed) return ;
        // InternalSCTX.g:5854:5: ( (lv_declarations_3_0= ruleDeclaration ) )*
        loop526:
        do {
            int alt526=2;
            alt526 = dfa526.predict(input);
            switch (alt526) {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        	case 1 :
        	    // InternalSCTX.g:5855:6: (lv_declarations_3_0= ruleDeclaration )
        	    {
        	    // InternalSCTX.g:5855:6: (lv_declarations_3_0= ruleDeclaration )
        	    // InternalSCTX.g:5856:7: lv_declarations_3_0= ruleDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getThreadAccess().getDeclarationsDeclarationParserRuleCall_1_0_2_0());
        	      						
        	    }
        	    pushFollow(FollowSets000.FOLLOW_96);
        	    lv_declarations_3_0=ruleDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
<<<<<<< HEAD
        	    break loop537;
            }
        } while (true);

        // InternalSCTX.g:5951:5: ( (lv_statements_4_0= ruleStatement ) )*
        loop538:
        do {
            int alt538=2;
            int LA538_0 = input.LA(1);

            if ( (LA538_0==RULE_ID||LA538_0==RULE_COMMENT_ANNOTATION||LA538_0==21||LA538_0==38||LA538_0==47||(LA538_0>=72 && LA538_0<=73)||LA538_0==75||LA538_0==106) ) {
                alt538=1;
            }


            switch (alt538) {
=======
        	    break loop526;
            }
        } while (true);

        // InternalSCTX.g:5873:5: ( (lv_statements_4_0= ruleStatement ) )*
        loop527:
        do {
            int alt527=2;
            int LA527_0 = input.LA(1);

            if ( (LA527_0==RULE_ID||LA527_0==RULE_COMMENT_ANNOTATION||LA527_0==21||LA527_0==38||LA527_0==47||(LA527_0>=71 && LA527_0<=72)||LA527_0==74||LA527_0==102) ) {
                alt527=1;
            }


            switch (alt527) {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        	case 1 :
        	    // InternalSCTX.g:5874:6: (lv_statements_4_0= ruleStatement )
        	    {
        	    // InternalSCTX.g:5874:6: (lv_statements_4_0= ruleStatement )
        	    // InternalSCTX.g:5875:7: lv_statements_4_0= ruleStatement
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getThreadAccess().getStatementsStatementParserRuleCall_1_0_3_0());
        	      						
        	    }
        	    pushFollow(FollowSets000.FOLLOW_97);
        	    lv_statements_4_0=ruleStatement();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
<<<<<<< HEAD
        	    break loop538;
=======
        	    break loop527;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            }
        } while (true);

        otherlv_5=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred220_InternalSCTX

    // $ANTLR start synpred223_InternalSCTX
    public final void synpred223_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_3_0 = null;


        // InternalSCTX.g:5971:4: ( (lv_declarations_3_0= ruleDeclaration ) )
        // InternalSCTX.g:5971:4: (lv_declarations_3_0= ruleDeclaration )
        {
        // InternalSCTX.g:5971:4: (lv_declarations_3_0= ruleDeclaration )
        // InternalSCTX.g:5972:5: lv_declarations_3_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getScopeStatementAccess().getDeclarationsDeclarationParserRuleCall_3_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_3_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred223_InternalSCTX

    // $ANTLR start synpred225_InternalSCTX
    public final void synpred225_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_initializationDeclaration_2_0 = null;


        // InternalSCTX.g:6040:4: ( ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) ) )
        // InternalSCTX.g:6040:4: ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) )
        {
        // InternalSCTX.g:6040:4: ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) )
        // InternalSCTX.g:6041:5: (lv_initializationDeclaration_2_0= ruleLoopDeclaration )
        {
        // InternalSCTX.g:6041:5: (lv_initializationDeclaration_2_0= ruleLoopDeclaration )
        // InternalSCTX.g:6042:6: lv_initializationDeclaration_2_0= ruleLoopDeclaration
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getForLoopAccess().getInitializationDeclarationLoopDeclarationParserRuleCall_2_0_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_initializationDeclaration_2_0=ruleLoopDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred225_InternalSCTX

    // $ANTLR start synpred226_InternalSCTX
    public final void synpred226_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_initialization_3_0 = null;


        // InternalSCTX.g:6060:4: ( ( (lv_initialization_3_0= ruleEffectOrAssignment ) ) )
        // InternalSCTX.g:6060:4: ( (lv_initialization_3_0= ruleEffectOrAssignment ) )
        {
        // InternalSCTX.g:6060:4: ( (lv_initialization_3_0= ruleEffectOrAssignment ) )
        // InternalSCTX.g:6061:5: (lv_initialization_3_0= ruleEffectOrAssignment )
        {
        // InternalSCTX.g:6061:5: (lv_initialization_3_0= ruleEffectOrAssignment )
        // InternalSCTX.g:6062:6: lv_initialization_3_0= ruleEffectOrAssignment
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getForLoopAccess().getInitializationEffectOrAssignmentParserRuleCall_2_1_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_initialization_3_0=ruleEffectOrAssignment();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred226_InternalSCTX

    // $ANTLR start synpred228_InternalSCTX
    public final void synpred228_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_10_0 = null;


        // InternalSCTX.g:6135:4: ( (lv_declarations_10_0= ruleDeclaration ) )
        // InternalSCTX.g:6135:4: (lv_declarations_10_0= ruleDeclaration )
        {
        // InternalSCTX.g:6135:4: (lv_declarations_10_0= ruleDeclaration )
        // InternalSCTX.g:6136:5: lv_declarations_10_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getForLoopAccess().getDeclarationsDeclarationParserRuleCall_9_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_10_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred228_InternalSCTX

    // $ANTLR start synpred233_InternalSCTX
    public final void synpred233_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_annotations_0_0 = null;


        // InternalSCTX.g:6328:4: ( (lv_annotations_0_0= ruleAnnotation ) )
        // InternalSCTX.g:6328:4: (lv_annotations_0_0= ruleAnnotation )
        {
        // InternalSCTX.g:6328:4: (lv_annotations_0_0= ruleAnnotation )
        // InternalSCTX.g:6329:5: lv_annotations_0_0= ruleAnnotation
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_annotations_0_0=ruleAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred233_InternalSCTX

    // $ANTLR start synpred234_InternalSCTX
    public final void synpred234_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_reference_1_0 = null;

        Enumerator lv_operator_2_0 = null;


        // InternalSCTX.g:6347:4: ( ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) ) )
        // InternalSCTX.g:6347:4: ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) )
        {
        // InternalSCTX.g:6347:4: ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) )
        // InternalSCTX.g:6348:5: ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) )
        {
        // InternalSCTX.g:6348:5: ( (lv_reference_1_0= ruleValuedObjectReference ) )
        // InternalSCTX.g:6349:6: (lv_reference_1_0= ruleValuedObjectReference )
        {
        // InternalSCTX.g:6349:6: (lv_reference_1_0= ruleValuedObjectReference )
        // InternalSCTX.g:6350:7: lv_reference_1_0= ruleValuedObjectReference
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0_0_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_134);
        lv_reference_1_0=ruleValuedObjectReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCTX.g:6367:5: ( (lv_operator_2_0= rulePostfixOperator ) )
        // InternalSCTX.g:6368:6: (lv_operator_2_0= rulePostfixOperator )
        {
        // InternalSCTX.g:6368:6: (lv_operator_2_0= rulePostfixOperator )
        // InternalSCTX.g:6369:7: lv_operator_2_0= rulePostfixOperator
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getOperatorPostfixOperatorEnumRuleCall_1_0_1_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_operator_2_0=rulePostfixOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred234_InternalSCTX

    // $ANTLR start synpred235_InternalSCTX
    public final void synpred235_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_reference_3_0 = null;

        Enumerator lv_operator_4_0 = null;

        EObject lv_expression_5_0 = null;


        // InternalSCTX.g:6388:4: ( ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) ) )
        // InternalSCTX.g:6388:4: ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) )
        {
        // InternalSCTX.g:6388:4: ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) )
        // InternalSCTX.g:6389:5: ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) )
        {
        // InternalSCTX.g:6389:5: ( (lv_reference_3_0= ruleValuedObjectReference ) )
        // InternalSCTX.g:6390:6: (lv_reference_3_0= ruleValuedObjectReference )
        {
        // InternalSCTX.g:6390:6: (lv_reference_3_0= ruleValuedObjectReference )
        // InternalSCTX.g:6391:7: lv_reference_3_0= ruleValuedObjectReference
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_1_0_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_131);
        lv_reference_3_0=ruleValuedObjectReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCTX.g:6408:5: ( (lv_operator_4_0= ruleAssignOperator ) )
        // InternalSCTX.g:6409:6: (lv_operator_4_0= ruleAssignOperator )
        {
        // InternalSCTX.g:6409:6: (lv_operator_4_0= ruleAssignOperator )
        // InternalSCTX.g:6410:7: lv_operator_4_0= ruleAssignOperator
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_1_1_1_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_30);
        lv_operator_4_0=ruleAssignOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCTX.g:6427:5: ( (lv_expression_5_0= ruleExpression ) )
        // InternalSCTX.g:6428:6: (lv_expression_5_0= ruleExpression )
        {
        // InternalSCTX.g:6428:6: (lv_expression_5_0= ruleExpression )
        // InternalSCTX.g:6429:7: lv_expression_5_0= ruleExpression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getExpressionExpressionParserRuleCall_1_1_2_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_expression_5_0=ruleExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred235_InternalSCTX

    // $ANTLR start synpred236_InternalSCTX
    public final void synpred236_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_5_0 = null;


        // InternalSCTX.g:6523:4: ( (lv_declarations_5_0= ruleDeclaration ) )
        // InternalSCTX.g:6523:4: (lv_declarations_5_0= ruleDeclaration )
        {
        // InternalSCTX.g:6523:4: (lv_declarations_5_0= ruleDeclaration )
        // InternalSCTX.g:6524:5: lv_declarations_5_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getWhileLoopAccess().getDeclarationsDeclarationParserRuleCall_5_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_5_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred236_InternalSCTX

    // $ANTLR start synpred243_InternalSCTX
    public final void synpred243_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_annotations_1_0 = null;


        // InternalSCTX.g:6727:4: ( (lv_annotations_1_0= ruleAnnotation ) )
        // InternalSCTX.g:6727:4: (lv_annotations_1_0= ruleAnnotation )
        {
        // InternalSCTX.g:6727:4: (lv_annotations_1_0= ruleAnnotation )
        // InternalSCTX.g:6728:5: lv_annotations_1_0= ruleAnnotation
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getAnnotationsAnnotationParserRuleCall_1_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_annotations_1_0=ruleAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred243_InternalSCTX

    // $ANTLR start synpred252_InternalSCTX
    public final void synpred252_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_16_0 = null;


        // InternalSCTX.g:6919:6: ( (lv_declarations_16_0= ruleDeclaration ) )
        // InternalSCTX.g:6919:6: (lv_declarations_16_0= ruleDeclaration )
        {
        // InternalSCTX.g:6919:6: (lv_declarations_16_0= ruleDeclaration )
        // InternalSCTX.g:6920:7: lv_declarations_16_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getMethodDeclarationAccess().getDeclarationsDeclarationParserRuleCall_7_1_2_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_16_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred252_InternalSCTX

    // $ANTLR start synpred255_InternalSCTX
    public final void synpred255_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_annotations_1_0 = null;


        // InternalSCTX.g:7011:4: ( (lv_annotations_1_0= ruleAnnotation ) )
        // InternalSCTX.g:7011:4: (lv_annotations_1_0= ruleAnnotation )
        {
        // InternalSCTX.g:7011:4: (lv_annotations_1_0= ruleAnnotation )
        // InternalSCTX.g:7012:5: lv_annotations_1_0= ruleAnnotation
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_1_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_annotations_1_0=ruleAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred255_InternalSCTX

    // $ANTLR start synpred263_InternalSCTX
    public final void synpred263_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_15_0 = null;


        // InternalSCTX.g:7197:5: ( (lv_declarations_15_0= ruleDeclaration ) )
        // InternalSCTX.g:7197:5: (lv_declarations_15_0= ruleDeclaration )
        {
        // InternalSCTX.g:7197:5: (lv_declarations_15_0= ruleDeclaration )
        // InternalSCTX.g:7198:6: lv_declarations_15_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getDeclarationsDeclarationParserRuleCall_7_2_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_15_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred263_InternalSCTX

    // $ANTLR start synpred266_InternalSCTX
    public final void synpred266_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_1_0 = null;


        // InternalSCTX.g:7269:4: ( (lv_declarations_1_0= ruleDeclaration ) )
        // InternalSCTX.g:7269:4: (lv_declarations_1_0= ruleDeclaration )
        {
        // InternalSCTX.g:7269:4: (lv_declarations_1_0= ruleDeclaration )
        // InternalSCTX.g:7270:5: lv_declarations_1_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getRootScopeAccess().getDeclarationsDeclarationParserRuleCall_1_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_1_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred266_InternalSCTX

    // $ANTLR start synpred270_InternalSCTX
    public final void synpred270_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_3_0 = null;


        // InternalSCTX.g:7383:4: ( (lv_declarations_3_0= ruleDeclaration ) )
        // InternalSCTX.g:7383:4: (lv_declarations_3_0= ruleDeclaration )
        {
        // InternalSCTX.g:7383:4: (lv_declarations_3_0= ruleDeclaration )
        // InternalSCTX.g:7384:5: lv_declarations_3_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getScopeAccess().getDeclarationsDeclarationParserRuleCall_3_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_3_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred270_InternalSCTX

    // $ANTLR start synpred273_InternalSCTX
    public final void synpred273_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_expression_0_0 = null;


        // InternalSCTX.g:7468:3: ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) )
        // InternalSCTX.g:7468:3: ( (lv_expression_0_0= ruleAnnotatedExpression ) )
        {
        // InternalSCTX.g:7468:3: ( (lv_expression_0_0= ruleAnnotatedExpression ) )
        // InternalSCTX.g:7469:4: (lv_expression_0_0= ruleAnnotatedExpression )
        {
        // InternalSCTX.g:7469:4: (lv_expression_0_0= ruleAnnotatedExpression )
        // InternalSCTX.g:7470:5: lv_expression_0_0= ruleAnnotatedExpression
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getTestEntityAccess().getExpressionAnnotatedExpressionParserRuleCall_0_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_expression_0_0=ruleAnnotatedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred273_InternalSCTX

    // $ANTLR start synpred275_InternalSCTX
    public final void synpred275_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_VariableDeclaration_0 = null;


        // InternalSCTX.g:7587:3: (this_VariableDeclaration_0= ruleVariableDeclaration )
        // InternalSCTX.g:7587:3: this_VariableDeclaration_0= ruleVariableDeclaration
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_VariableDeclaration_0=ruleVariableDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred275_InternalSCTX

    // $ANTLR start synpred276_InternalSCTX
    public final void synpred276_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ReferenceDeclaration_1 = null;


        // InternalSCTX.g:7599:3: (this_ReferenceDeclaration_1= ruleReferenceDeclaration )
        // InternalSCTX.g:7599:3: this_ReferenceDeclaration_1= ruleReferenceDeclaration
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ReferenceDeclaration_1=ruleReferenceDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred276_InternalSCTX

    // $ANTLR start synpred277_InternalSCTX
    public final void synpred277_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ScheduleDeclaration_2 = null;


        // InternalSCTX.g:7611:3: (this_ScheduleDeclaration_2= ruleScheduleDeclaration )
        // InternalSCTX.g:7611:3: this_ScheduleDeclaration_2= ruleScheduleDeclaration
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ScheduleDeclaration_2=ruleScheduleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred277_InternalSCTX

    // $ANTLR start synpred278_InternalSCTX
    public final void synpred278_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_VariableDeclarationWOSemicolon_0 = null;


        // InternalSCTX.g:7653:3: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon )
        // InternalSCTX.g:7653:3: this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_VariableDeclarationWOSemicolon_0=ruleVariableDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred278_InternalSCTX

    // $ANTLR start synpred279_InternalSCTX
    public final void synpred279_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ReferenceDeclarationWOSemicolon_1 = null;


        // InternalSCTX.g:7665:3: (this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon )
        // InternalSCTX.g:7665:3: this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ReferenceDeclarationWOSemicolon_1=ruleReferenceDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred279_InternalSCTX

    // $ANTLR start synpred280_InternalSCTX
    public final void synpred280_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ScheduleDeclarationWOSemicolon_2 = null;


        // InternalSCTX.g:7677:3: (this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon )
        // InternalSCTX.g:7677:3: this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ScheduleDeclarationWOSemicolon_2=ruleScheduleDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred280_InternalSCTX

    // $ANTLR start synpred303_InternalSCTX
    public final void synpred303_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_13=null;
        EObject lv_valuedObjects_14_0 = null;


        // InternalSCTX.g:8225:4: (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )
        // InternalSCTX.g:8225:4: otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) )
        {
        otherlv_13=(Token)match(input,20,FollowSets000.FOLLOW_105); if (state.failed) return ;
        // InternalSCTX.g:8229:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) )
        // InternalSCTX.g:8230:5: (lv_valuedObjects_14_0= ruleValuedObject )
        {
        // InternalSCTX.g:8230:5: (lv_valuedObjects_14_0= ruleValuedObject )
        // InternalSCTX.g:8231:6: lv_valuedObjects_14_0= ruleValuedObject
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_9_1_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_valuedObjects_14_0=ruleValuedObject();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred303_InternalSCTX

    // $ANTLR start synpred321_InternalSCTX
    public final void synpred321_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Declaration_0 = null;


        // InternalSCTX.g:8642:3: (this_Declaration_0= ruleDeclaration )
        // InternalSCTX.g:8642:3: this_Declaration_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Declaration_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred321_InternalSCTX

    // $ANTLR start synpred322_InternalSCTX
    public final void synpred322_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_DeclarationWOSemicolon_0 = null;


        // InternalSCTX.g:8684:3: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon )
        // InternalSCTX.g:8684:3: this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_DeclarationWOSemicolon_0=ruleDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred322_InternalSCTX

<<<<<<< HEAD
    // $ANTLR start synpred362_InternalSCTX
    public final void synpred362_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Assignment_0 = null;


        // InternalSCTX.g:9969:3: (this_Assignment_0= ruleAssignment )
        // InternalSCTX.g:9969:3: this_Assignment_0= ruleAssignment
=======
    // $ANTLR start synpred358_InternalSCTX
    public final void synpred358_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Assignment_0 = null;


        // InternalSCTX.g:9867:3: (this_Assignment_0= ruleAssignment )
        // InternalSCTX.g:9867:3: this_Assignment_0= ruleAssignment
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Assignment_0=ruleAssignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
<<<<<<< HEAD
    // $ANTLR end synpred362_InternalSCTX

    // $ANTLR start synpred363_InternalSCTX
    public final void synpred363_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_PostfixEffect_1 = null;


        // InternalSCTX.g:9981:3: (this_PostfixEffect_1= rulePostfixEffect )
        // InternalSCTX.g:9981:3: this_PostfixEffect_1= rulePostfixEffect
=======
    // $ANTLR end synpred358_InternalSCTX

    // $ANTLR start synpred359_InternalSCTX
    public final void synpred359_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_PostfixEffect_1 = null;


        // InternalSCTX.g:9879:3: (this_PostfixEffect_1= rulePostfixEffect )
        // InternalSCTX.g:9879:3: this_PostfixEffect_1= rulePostfixEffect
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_PostfixEffect_1=rulePostfixEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
<<<<<<< HEAD
    // $ANTLR end synpred363_InternalSCTX

    // $ANTLR start synpred364_InternalSCTX
    public final void synpred364_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ValuedEmission_2 = null;


        // InternalSCTX.g:9993:3: (this_ValuedEmission_2= ruleValuedEmission )
        // InternalSCTX.g:9993:3: this_ValuedEmission_2= ruleValuedEmission
=======
    // $ANTLR end synpred359_InternalSCTX

    // $ANTLR start synpred360_InternalSCTX
    public final void synpred360_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ValuedEmission_2 = null;


        // InternalSCTX.g:9891:3: (this_ValuedEmission_2= ruleValuedEmission )
        // InternalSCTX.g:9891:3: this_ValuedEmission_2= ruleValuedEmission
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedEmission_2=ruleValuedEmission();

        state._fsp--;
        if (state.failed) return ;

        }
    }
<<<<<<< HEAD
    // $ANTLR end synpred364_InternalSCTX

    // $ANTLR start synpred365_InternalSCTX
    public final void synpred365_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_HostcodeEffect_3 = null;


        // InternalSCTX.g:10005:3: (this_HostcodeEffect_3= ruleHostcodeEffect )
        // InternalSCTX.g:10005:3: this_HostcodeEffect_3= ruleHostcodeEffect
=======
    // $ANTLR end synpred360_InternalSCTX

    // $ANTLR start synpred361_InternalSCTX
    public final void synpred361_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_HostcodeEffect_3 = null;


        // InternalSCTX.g:9903:3: (this_HostcodeEffect_3= ruleHostcodeEffect )
        // InternalSCTX.g:9903:3: this_HostcodeEffect_3= ruleHostcodeEffect
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_HostcodeEffect_3=ruleHostcodeEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
<<<<<<< HEAD
    // $ANTLR end synpred365_InternalSCTX

    // $ANTLR start synpred366_InternalSCTX
    public final void synpred366_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ReferenceCallEffect_4 = null;


        // InternalSCTX.g:10017:3: (this_ReferenceCallEffect_4= ruleReferenceCallEffect )
        // InternalSCTX.g:10017:3: this_ReferenceCallEffect_4= ruleReferenceCallEffect
=======
    // $ANTLR end synpred361_InternalSCTX

    // $ANTLR start synpred362_InternalSCTX
    public final void synpred362_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ReferenceCallEffect_4 = null;


        // InternalSCTX.g:9915:3: (this_ReferenceCallEffect_4= ruleReferenceCallEffect )
        // InternalSCTX.g:9915:3: this_ReferenceCallEffect_4= ruleReferenceCallEffect
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ReferenceCallEffect_4=ruleReferenceCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
<<<<<<< HEAD
    // $ANTLR end synpred366_InternalSCTX

    // $ANTLR start synpred367_InternalSCTX
    public final void synpred367_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_FunctionCallEffect_5 = null;


        // InternalSCTX.g:10029:3: (this_FunctionCallEffect_5= ruleFunctionCallEffect )
        // InternalSCTX.g:10029:3: this_FunctionCallEffect_5= ruleFunctionCallEffect
=======
    // $ANTLR end synpred362_InternalSCTX

    // $ANTLR start synpred363_InternalSCTX
    public final void synpred363_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_FunctionCallEffect_5 = null;


        // InternalSCTX.g:9927:3: (this_FunctionCallEffect_5= ruleFunctionCallEffect )
        // InternalSCTX.g:9927:3: this_FunctionCallEffect_5= ruleFunctionCallEffect
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_FunctionCallEffect_5=ruleFunctionCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
<<<<<<< HEAD
    // $ANTLR end synpred367_InternalSCTX

    // $ANTLR start synpred368_InternalSCTX
    public final void synpred368_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_PrintCallEffect_6 = null;


        // InternalSCTX.g:10041:3: (this_PrintCallEffect_6= rulePrintCallEffect )
        // InternalSCTX.g:10041:3: this_PrintCallEffect_6= rulePrintCallEffect
=======
    // $ANTLR end synpred363_InternalSCTX

    // $ANTLR start synpred364_InternalSCTX
    public final void synpred364_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_PrintCallEffect_6 = null;


        // InternalSCTX.g:9939:3: (this_PrintCallEffect_6= rulePrintCallEffect )
        // InternalSCTX.g:9939:3: this_PrintCallEffect_6= rulePrintCallEffect
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_PrintCallEffect_6=rulePrintCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
<<<<<<< HEAD
    // $ANTLR end synpred368_InternalSCTX

    // $ANTLR start synpred369_InternalSCTX
    public final void synpred369_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_RandomizeCallEffect_7 = null;


        // InternalSCTX.g:10053:3: (this_RandomizeCallEffect_7= ruleRandomizeCallEffect )
        // InternalSCTX.g:10053:3: this_RandomizeCallEffect_7= ruleRandomizeCallEffect
=======
    // $ANTLR end synpred364_InternalSCTX

    // $ANTLR start synpred365_InternalSCTX
    public final void synpred365_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_RandomizeCallEffect_7 = null;


        // InternalSCTX.g:9951:3: (this_RandomizeCallEffect_7= ruleRandomizeCallEffect )
        // InternalSCTX.g:9951:3: this_RandomizeCallEffect_7= ruleRandomizeCallEffect
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_RandomizeCallEffect_7=ruleRandomizeCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
<<<<<<< HEAD
    // $ANTLR end synpred369_InternalSCTX

    // $ANTLR start synpred400_InternalSCTX
    public final void synpred400_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_BoolExpression_0 = null;


        // InternalSCTX.g:11117:3: (this_BoolExpression_0= ruleBoolExpression )
        // InternalSCTX.g:11117:3: this_BoolExpression_0= ruleBoolExpression
=======
    // $ANTLR end synpred365_InternalSCTX

    // $ANTLR start synpred396_InternalSCTX
    public final void synpred396_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_BoolExpression_0 = null;


        // InternalSCTX.g:11015:3: (this_BoolExpression_0= ruleBoolExpression )
        // InternalSCTX.g:11015:3: this_BoolExpression_0= ruleBoolExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_BoolExpression_0=ruleBoolExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
<<<<<<< HEAD
    // $ANTLR end synpred400_InternalSCTX

    // $ANTLR start synpred412_InternalSCTX
    public final void synpred412_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ValuedExpression_0 = null;


        // InternalSCTX.g:11802:3: (this_ValuedExpression_0= ruleValuedExpression )
        // InternalSCTX.g:11802:3: this_ValuedExpression_0= ruleValuedExpression
=======
    // $ANTLR end synpred396_InternalSCTX

    // $ANTLR start synpred408_InternalSCTX
    public final void synpred408_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ValuedExpression_0 = null;


        // InternalSCTX.g:11700:3: (this_ValuedExpression_0= ruleValuedExpression )
        // InternalSCTX.g:11700:3: this_ValuedExpression_0= ruleValuedExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedExpression_0=ruleValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
<<<<<<< HEAD
    // $ANTLR end synpred412_InternalSCTX

    // $ANTLR start synpred415_InternalSCTX
    public final void synpred415_InternalSCTX_fragment() throws RecognitionException {   
=======
    // $ANTLR end synpred408_InternalSCTX

    // $ANTLR start synpred411_InternalSCTX
    public final void synpred411_InternalSCTX_fragment() throws RecognitionException {   
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        Token otherlv_4=null;
        EObject lv_subExpressions_5_0 = null;


<<<<<<< HEAD
        // InternalSCTX.g:12096:6: (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )
        // InternalSCTX.g:12096:6: otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) )
        {
        otherlv_4=(Token)match(input,90,FollowSets000.FOLLOW_96); if (state.failed) return ;
        // InternalSCTX.g:12100:6: ( (lv_subExpressions_5_0= ruleSumExpression ) )
        // InternalSCTX.g:12101:7: (lv_subExpressions_5_0= ruleSumExpression )
        {
        // InternalSCTX.g:12101:7: (lv_subExpressions_5_0= ruleSumExpression )
        // InternalSCTX.g:12102:8: lv_subExpressions_5_0= ruleSumExpression
=======
        // InternalSCTX.g:11994:6: (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )
        // InternalSCTX.g:11994:6: otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) )
        {
        otherlv_4=(Token)match(input,89,FollowSets000.FOLLOW_94); if (state.failed) return ;
        // InternalSCTX.g:11998:6: ( (lv_subExpressions_5_0= ruleSumExpression ) )
        // InternalSCTX.g:11999:7: (lv_subExpressions_5_0= ruleSumExpression )
        {
        // InternalSCTX.g:11999:7: (lv_subExpressions_5_0= ruleSumExpression )
        // InternalSCTX.g:12000:8: lv_subExpressions_5_0= ruleSumExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_0_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_5_0=ruleSumExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
<<<<<<< HEAD
    // $ANTLR end synpred415_InternalSCTX

    // $ANTLR start synpred417_InternalSCTX
    public final void synpred417_InternalSCTX_fragment() throws RecognitionException {   
=======
    // $ANTLR end synpred411_InternalSCTX

    // $ANTLR start synpred413_InternalSCTX
    public final void synpred413_InternalSCTX_fragment() throws RecognitionException {   
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        Token otherlv_9=null;
        EObject lv_subExpressions_10_0 = null;


<<<<<<< HEAD
        // InternalSCTX.g:12172:6: (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )
        // InternalSCTX.g:12172:6: otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) )
        {
        otherlv_9=(Token)match(input,91,FollowSets000.FOLLOW_96); if (state.failed) return ;
        // InternalSCTX.g:12176:6: ( (lv_subExpressions_10_0= ruleSumExpression ) )
        // InternalSCTX.g:12177:7: (lv_subExpressions_10_0= ruleSumExpression )
        {
        // InternalSCTX.g:12177:7: (lv_subExpressions_10_0= ruleSumExpression )
        // InternalSCTX.g:12178:8: lv_subExpressions_10_0= ruleSumExpression
=======
        // InternalSCTX.g:12070:6: (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )
        // InternalSCTX.g:12070:6: otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) )
        {
        otherlv_9=(Token)match(input,90,FollowSets000.FOLLOW_94); if (state.failed) return ;
        // InternalSCTX.g:12074:6: ( (lv_subExpressions_10_0= ruleSumExpression ) )
        // InternalSCTX.g:12075:7: (lv_subExpressions_10_0= ruleSumExpression )
        {
        // InternalSCTX.g:12075:7: (lv_subExpressions_10_0= ruleSumExpression )
        // InternalSCTX.g:12076:8: lv_subExpressions_10_0= ruleSumExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_1_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_10_0=ruleSumExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
<<<<<<< HEAD
    // $ANTLR end synpred417_InternalSCTX

    // $ANTLR start synpred419_InternalSCTX
    public final void synpred419_InternalSCTX_fragment() throws RecognitionException {   
=======
    // $ANTLR end synpred413_InternalSCTX

    // $ANTLR start synpred415_InternalSCTX
    public final void synpred415_InternalSCTX_fragment() throws RecognitionException {   
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        Token otherlv_14=null;
        EObject lv_subExpressions_15_0 = null;


<<<<<<< HEAD
        // InternalSCTX.g:12248:6: (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )
        // InternalSCTX.g:12248:6: otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) )
        {
        otherlv_14=(Token)match(input,92,FollowSets000.FOLLOW_96); if (state.failed) return ;
        // InternalSCTX.g:12252:6: ( (lv_subExpressions_15_0= ruleSumExpression ) )
        // InternalSCTX.g:12253:7: (lv_subExpressions_15_0= ruleSumExpression )
        {
        // InternalSCTX.g:12253:7: (lv_subExpressions_15_0= ruleSumExpression )
        // InternalSCTX.g:12254:8: lv_subExpressions_15_0= ruleSumExpression
=======
        // InternalSCTX.g:12146:6: (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )
        // InternalSCTX.g:12146:6: otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) )
        {
        otherlv_14=(Token)match(input,91,FollowSets000.FOLLOW_94); if (state.failed) return ;
        // InternalSCTX.g:12150:6: ( (lv_subExpressions_15_0= ruleSumExpression ) )
        // InternalSCTX.g:12151:7: (lv_subExpressions_15_0= ruleSumExpression )
        {
        // InternalSCTX.g:12151:7: (lv_subExpressions_15_0= ruleSumExpression )
        // InternalSCTX.g:12152:8: lv_subExpressions_15_0= ruleSumExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_2_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_15_0=ruleSumExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
<<<<<<< HEAD
    // $ANTLR end synpred419_InternalSCTX

    // $ANTLR start synpred425_InternalSCTX
    public final void synpred425_InternalSCTX_fragment() throws RecognitionException {   
=======
    // $ANTLR end synpred415_InternalSCTX

    // $ANTLR start synpred421_InternalSCTX
    public final void synpred421_InternalSCTX_fragment() throws RecognitionException {   
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        Token otherlv_4=null;
        EObject lv_subExpressions_5_0 = null;


<<<<<<< HEAD
        // InternalSCTX.g:12569:6: (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )
        // InternalSCTX.g:12569:6: otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) )
        {
        otherlv_4=(Token)match(input,93,FollowSets000.FOLLOW_96); if (state.failed) return ;
        // InternalSCTX.g:12573:6: ( (lv_subExpressions_5_0= ruleProductExpression ) )
        // InternalSCTX.g:12574:7: (lv_subExpressions_5_0= ruleProductExpression )
        {
        // InternalSCTX.g:12574:7: (lv_subExpressions_5_0= ruleProductExpression )
        // InternalSCTX.g:12575:8: lv_subExpressions_5_0= ruleProductExpression
=======
        // InternalSCTX.g:12467:6: (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )
        // InternalSCTX.g:12467:6: otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) )
        {
        otherlv_4=(Token)match(input,92,FollowSets000.FOLLOW_94); if (state.failed) return ;
        // InternalSCTX.g:12471:6: ( (lv_subExpressions_5_0= ruleProductExpression ) )
        // InternalSCTX.g:12472:7: (lv_subExpressions_5_0= ruleProductExpression )
        {
        // InternalSCTX.g:12472:7: (lv_subExpressions_5_0= ruleProductExpression )
        // InternalSCTX.g:12473:8: lv_subExpressions_5_0= ruleProductExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_0_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_5_0=ruleProductExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
<<<<<<< HEAD
    // $ANTLR end synpred425_InternalSCTX

    // $ANTLR start synpred427_InternalSCTX
    public final void synpred427_InternalSCTX_fragment() throws RecognitionException {   
=======
    // $ANTLR end synpred421_InternalSCTX

    // $ANTLR start synpred423_InternalSCTX
    public final void synpred423_InternalSCTX_fragment() throws RecognitionException {   
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        Token otherlv_9=null;
        EObject lv_subExpressions_10_0 = null;


<<<<<<< HEAD
        // InternalSCTX.g:12645:6: (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )
        // InternalSCTX.g:12645:6: otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) )
        {
        otherlv_9=(Token)match(input,94,FollowSets000.FOLLOW_96); if (state.failed) return ;
        // InternalSCTX.g:12649:6: ( (lv_subExpressions_10_0= ruleProductExpression ) )
        // InternalSCTX.g:12650:7: (lv_subExpressions_10_0= ruleProductExpression )
        {
        // InternalSCTX.g:12650:7: (lv_subExpressions_10_0= ruleProductExpression )
        // InternalSCTX.g:12651:8: lv_subExpressions_10_0= ruleProductExpression
=======
        // InternalSCTX.g:12543:6: (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )
        // InternalSCTX.g:12543:6: otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) )
        {
        otherlv_9=(Token)match(input,93,FollowSets000.FOLLOW_94); if (state.failed) return ;
        // InternalSCTX.g:12547:6: ( (lv_subExpressions_10_0= ruleProductExpression ) )
        // InternalSCTX.g:12548:7: (lv_subExpressions_10_0= ruleProductExpression )
        {
        // InternalSCTX.g:12548:7: (lv_subExpressions_10_0= ruleProductExpression )
        // InternalSCTX.g:12549:8: lv_subExpressions_10_0= ruleProductExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_1_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_10_0=ruleProductExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
<<<<<<< HEAD
    // $ANTLR end synpred427_InternalSCTX

    // $ANTLR start synpred429_InternalSCTX
    public final void synpred429_InternalSCTX_fragment() throws RecognitionException {   
=======
    // $ANTLR end synpred423_InternalSCTX

    // $ANTLR start synpred425_InternalSCTX
    public final void synpred425_InternalSCTX_fragment() throws RecognitionException {   
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        Token otherlv_4=null;
        EObject lv_subExpressions_5_0 = null;


<<<<<<< HEAD
        // InternalSCTX.g:12752:6: (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )
        // InternalSCTX.g:12752:6: otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) )
        {
        otherlv_4=(Token)match(input,95,FollowSets000.FOLLOW_96); if (state.failed) return ;
        // InternalSCTX.g:12756:6: ( (lv_subExpressions_5_0= ruleNegExpression ) )
        // InternalSCTX.g:12757:7: (lv_subExpressions_5_0= ruleNegExpression )
        {
        // InternalSCTX.g:12757:7: (lv_subExpressions_5_0= ruleNegExpression )
        // InternalSCTX.g:12758:8: lv_subExpressions_5_0= ruleNegExpression
=======
        // InternalSCTX.g:12650:6: (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )
        // InternalSCTX.g:12650:6: otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) )
        {
        otherlv_4=(Token)match(input,94,FollowSets000.FOLLOW_94); if (state.failed) return ;
        // InternalSCTX.g:12654:6: ( (lv_subExpressions_5_0= ruleNegExpression ) )
        // InternalSCTX.g:12655:7: (lv_subExpressions_5_0= ruleNegExpression )
        {
        // InternalSCTX.g:12655:7: (lv_subExpressions_5_0= ruleNegExpression )
        // InternalSCTX.g:12656:8: lv_subExpressions_5_0= ruleNegExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_0_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_5_0=ruleNegExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
<<<<<<< HEAD
    // $ANTLR end synpred429_InternalSCTX

    // $ANTLR start synpred431_InternalSCTX
    public final void synpred431_InternalSCTX_fragment() throws RecognitionException {   
=======
    // $ANTLR end synpred425_InternalSCTX

    // $ANTLR start synpred427_InternalSCTX
    public final void synpred427_InternalSCTX_fragment() throws RecognitionException {   
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        Token otherlv_9=null;
        EObject lv_subExpressions_10_0 = null;


<<<<<<< HEAD
        // InternalSCTX.g:12828:6: (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )
        // InternalSCTX.g:12828:6: otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) )
        {
        otherlv_9=(Token)match(input,96,FollowSets000.FOLLOW_96); if (state.failed) return ;
        // InternalSCTX.g:12832:6: ( (lv_subExpressions_10_0= ruleNegExpression ) )
        // InternalSCTX.g:12833:7: (lv_subExpressions_10_0= ruleNegExpression )
        {
        // InternalSCTX.g:12833:7: (lv_subExpressions_10_0= ruleNegExpression )
        // InternalSCTX.g:12834:8: lv_subExpressions_10_0= ruleNegExpression
=======
        // InternalSCTX.g:12726:6: (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )
        // InternalSCTX.g:12726:6: otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) )
        {
        otherlv_9=(Token)match(input,95,FollowSets000.FOLLOW_94); if (state.failed) return ;
        // InternalSCTX.g:12730:6: ( (lv_subExpressions_10_0= ruleNegExpression ) )
        // InternalSCTX.g:12731:7: (lv_subExpressions_10_0= ruleNegExpression )
        {
        // InternalSCTX.g:12731:7: (lv_subExpressions_10_0= ruleNegExpression )
        // InternalSCTX.g:12732:8: lv_subExpressions_10_0= ruleNegExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_1_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_10_0=ruleNegExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
<<<<<<< HEAD
    // $ANTLR end synpred431_InternalSCTX

    // $ANTLR start synpred433_InternalSCTX
    public final void synpred433_InternalSCTX_fragment() throws RecognitionException {   
=======
    // $ANTLR end synpred427_InternalSCTX

    // $ANTLR start synpred429_InternalSCTX
    public final void synpred429_InternalSCTX_fragment() throws RecognitionException {   
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        Token otherlv_14=null;
        EObject lv_subExpressions_15_0 = null;


<<<<<<< HEAD
        // InternalSCTX.g:12904:6: (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )
        // InternalSCTX.g:12904:6: otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) )
        {
        otherlv_14=(Token)match(input,97,FollowSets000.FOLLOW_96); if (state.failed) return ;
        // InternalSCTX.g:12908:6: ( (lv_subExpressions_15_0= ruleNegExpression ) )
        // InternalSCTX.g:12909:7: (lv_subExpressions_15_0= ruleNegExpression )
        {
        // InternalSCTX.g:12909:7: (lv_subExpressions_15_0= ruleNegExpression )
        // InternalSCTX.g:12910:8: lv_subExpressions_15_0= ruleNegExpression
=======
        // InternalSCTX.g:12802:6: (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )
        // InternalSCTX.g:12802:6: otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) )
        {
        otherlv_14=(Token)match(input,96,FollowSets000.FOLLOW_94); if (state.failed) return ;
        // InternalSCTX.g:12806:6: ( (lv_subExpressions_15_0= ruleNegExpression ) )
        // InternalSCTX.g:12807:7: (lv_subExpressions_15_0= ruleNegExpression )
        {
        // InternalSCTX.g:12807:7: (lv_subExpressions_15_0= ruleNegExpression )
        // InternalSCTX.g:12808:8: lv_subExpressions_15_0= ruleNegExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_2_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_15_0=ruleNegExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
<<<<<<< HEAD
    // $ANTLR end synpred433_InternalSCTX

    // $ANTLR start synpred436_InternalSCTX
    public final void synpred436_InternalSCTX_fragment() throws RecognitionException {   
=======
    // $ANTLR end synpred429_InternalSCTX

    // $ANTLR start synpred432_InternalSCTX
    public final void synpred432_InternalSCTX_fragment() throws RecognitionException {   
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        Token otherlv_4=null;
        EObject lv_subExpressions_5_0 = null;


<<<<<<< HEAD
        // InternalSCTX.g:13099:5: (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )
        // InternalSCTX.g:13099:5: otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
        {
        otherlv_4=(Token)match(input,48,FollowSets000.FOLLOW_137); if (state.failed) return ;
        // InternalSCTX.g:13103:5: ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
        // InternalSCTX.g:13104:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
        {
        // InternalSCTX.g:13104:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
        // InternalSCTX.g:13105:7: lv_subExpressions_5_0= ruleAtomicValuedExpression
=======
        // InternalSCTX.g:12997:5: (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )
        // InternalSCTX.g:12997:5: otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
        {
        otherlv_4=(Token)match(input,48,FollowSets000.FOLLOW_137); if (state.failed) return ;
        // InternalSCTX.g:13001:5: ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
        // InternalSCTX.g:13002:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
        {
        // InternalSCTX.g:13002:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
        // InternalSCTX.g:13003:7: lv_subExpressions_5_0= ruleAtomicValuedExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_4_1_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_5_0=ruleAtomicValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
<<<<<<< HEAD
    // $ANTLR end synpred436_InternalSCTX

    // $ANTLR start synpred437_InternalSCTX
    public final void synpred437_InternalSCTX_fragment() throws RecognitionException {   
=======
    // $ANTLR end synpred432_InternalSCTX

    // $ANTLR start synpred433_InternalSCTX
    public final void synpred433_InternalSCTX_fragment() throws RecognitionException {   
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        Token otherlv_4=null;
        EObject lv_subExpressions_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


<<<<<<< HEAD
        // InternalSCTX.g:13030:3: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? ) )
        // InternalSCTX.g:13030:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? )
        {
        // InternalSCTX.g:13030:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? )
        // InternalSCTX.g:13031:4: () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )?
        {
        // InternalSCTX.g:13031:4: ()
        // InternalSCTX.g:13032:5: 
=======
        // InternalSCTX.g:12928:3: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? ) )
        // InternalSCTX.g:12928:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? )
        {
        // InternalSCTX.g:12928:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? )
        // InternalSCTX.g:12929:4: () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )?
        {
        // InternalSCTX.g:12929:4: ()
        // InternalSCTX.g:12930:5: 
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

<<<<<<< HEAD
        // InternalSCTX.g:13041:4: ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) )
        // InternalSCTX.g:13042:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
        {
        // InternalSCTX.g:13042:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
        // InternalSCTX.g:13043:6: lv_subExpressions_1_0= ruleAtomicValuedExpression
=======
        // InternalSCTX.g:12939:4: ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) )
        // InternalSCTX.g:12940:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
        {
        // InternalSCTX.g:12940:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
        // InternalSCTX.g:12941:6: lv_subExpressions_1_0= ruleAtomicValuedExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_1_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_189);
        lv_subExpressions_1_0=ruleAtomicValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

<<<<<<< HEAD
        // InternalSCTX.g:13060:4: ( (lv_operator_2_0= ruleConditionalOperator ) )
        // InternalSCTX.g:13061:5: (lv_operator_2_0= ruleConditionalOperator )
        {
        // InternalSCTX.g:13061:5: (lv_operator_2_0= ruleConditionalOperator )
        // InternalSCTX.g:13062:6: lv_operator_2_0= ruleConditionalOperator
=======
        // InternalSCTX.g:12958:4: ( (lv_operator_2_0= ruleConditionalOperator ) )
        // InternalSCTX.g:12959:5: (lv_operator_2_0= ruleConditionalOperator )
        {
        // InternalSCTX.g:12959:5: (lv_operator_2_0= ruleConditionalOperator )
        // InternalSCTX.g:12960:6: lv_operator_2_0= ruleConditionalOperator
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTernaryOperationAccess().getOperatorConditionalOperatorEnumRuleCall_0_2_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_137);
        lv_operator_2_0=ruleConditionalOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

<<<<<<< HEAD
        // InternalSCTX.g:13079:4: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
        // InternalSCTX.g:13080:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
        {
        // InternalSCTX.g:13080:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
        // InternalSCTX.g:13081:6: lv_subExpressions_3_0= ruleAtomicValuedExpression
=======
        // InternalSCTX.g:12977:4: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
        // InternalSCTX.g:12978:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
        {
        // InternalSCTX.g:12978:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
        // InternalSCTX.g:12979:6: lv_subExpressions_3_0= ruleAtomicValuedExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_3_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_157);
        lv_subExpressions_3_0=ruleAtomicValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

<<<<<<< HEAD
        // InternalSCTX.g:13098:4: (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )?
        int alt579=2;
        int LA579_0 = input.LA(1);

        if ( (LA579_0==48) ) {
            alt579=1;
        }
        switch (alt579) {
            case 1 :
                // InternalSCTX.g:13099:5: otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
                {
                otherlv_4=(Token)match(input,48,FollowSets000.FOLLOW_137); if (state.failed) return ;
                // InternalSCTX.g:13103:5: ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
                // InternalSCTX.g:13104:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                {
                // InternalSCTX.g:13104:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                // InternalSCTX.g:13105:7: lv_subExpressions_5_0= ruleAtomicValuedExpression
=======
        // InternalSCTX.g:12996:4: (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )?
        int alt568=2;
        int LA568_0 = input.LA(1);

        if ( (LA568_0==48) ) {
            alt568=1;
        }
        switch (alt568) {
            case 1 :
                // InternalSCTX.g:12997:5: otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
                {
                otherlv_4=(Token)match(input,48,FollowSets000.FOLLOW_137); if (state.failed) return ;
                // InternalSCTX.g:13001:5: ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
                // InternalSCTX.g:13002:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                {
                // InternalSCTX.g:13002:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                // InternalSCTX.g:13003:7: lv_subExpressions_5_0= ruleAtomicValuedExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_4_1_0());
                  						
                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_subExpressions_5_0=ruleAtomicValuedExpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
<<<<<<< HEAD
    // $ANTLR end synpred437_InternalSCTX

    // $ANTLR start synpred450_InternalSCTX
    public final void synpred450_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ReferenceCall_4 = null;


        // InternalSCTX.g:13738:3: (this_ReferenceCall_4= ruleReferenceCall )
        // InternalSCTX.g:13738:3: this_ReferenceCall_4= ruleReferenceCall
=======
    // $ANTLR end synpred433_InternalSCTX

    // $ANTLR start synpred434_InternalSCTX
    public final void synpred434_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_subExpressions_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;


        // InternalSCTX.g:13053:3: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) )
        // InternalSCTX.g:13053:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
        {
        // InternalSCTX.g:13053:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
        // InternalSCTX.g:13054:4: () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
        {
        // InternalSCTX.g:13054:4: ()
        // InternalSCTX.g:13055:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalSCTX.g:13064:4: ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) )
        // InternalSCTX.g:13065:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
        {
        // InternalSCTX.g:13065:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
        // InternalSCTX.g:13066:6: lv_subExpressions_1_0= ruleAtomicValuedExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getInitExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_1_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_190);
        lv_subExpressions_1_0=ruleAtomicValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCTX.g:13083:4: ( (lv_operator_2_0= ruleInitOperator ) )
        // InternalSCTX.g:13084:5: (lv_operator_2_0= ruleInitOperator )
        {
        // InternalSCTX.g:13084:5: (lv_operator_2_0= ruleInitOperator )
        // InternalSCTX.g:13085:6: lv_operator_2_0= ruleInitOperator
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getInitExpressionAccess().getOperatorInitOperatorEnumRuleCall_0_2_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_137);
        lv_operator_2_0=ruleInitOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCTX.g:13102:4: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
        // InternalSCTX.g:13103:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
        {
        // InternalSCTX.g:13103:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
        // InternalSCTX.g:13104:6: lv_subExpressions_3_0= ruleAtomicValuedExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getInitExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_3_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_3_0=ruleAtomicValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred434_InternalSCTX

    // $ANTLR start synpred437_InternalSCTX
    public final void synpred437_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ReferenceCall_4 = null;


        // InternalSCTX.g:13187:3: (this_ReferenceCall_4= ruleReferenceCall )
        // InternalSCTX.g:13187:3: this_ReferenceCall_4= ruleReferenceCall
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ReferenceCall_4=ruleReferenceCall();

        state._fsp--;
        if (state.failed) return ;

        }
    }
<<<<<<< HEAD
    // $ANTLR end synpred450_InternalSCTX

    // $ANTLR start synpred454_InternalSCTX
    public final void synpred454_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ValuedObjectTestExpression_8 = null;


        // InternalSCTX.g:13786:3: (this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression )
        // InternalSCTX.g:13786:3: this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression
=======
    // $ANTLR end synpred437_InternalSCTX

    // $ANTLR start synpred441_InternalSCTX
    public final void synpred441_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ValuedObjectTestExpression_8 = null;


        // InternalSCTX.g:13235:3: (this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression )
        // InternalSCTX.g:13235:3: this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedObjectTestExpression_8=ruleValuedObjectTestExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
<<<<<<< HEAD
    // $ANTLR end synpred454_InternalSCTX

    // $ANTLR start synpred459_InternalSCTX
    public final void synpred459_InternalSCTX_fragment() throws RecognitionException {   
=======
    // $ANTLR end synpred441_InternalSCTX

    // $ANTLR start synpred446_InternalSCTX
    public final void synpred446_InternalSCTX_fragment() throws RecognitionException {   
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject this_ValuedExpression_5 = null;


<<<<<<< HEAD
        // InternalSCTX.g:13876:3: ( (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) )
        // InternalSCTX.g:13876:3: (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' )
        {
        // InternalSCTX.g:13876:3: (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' )
        // InternalSCTX.g:13877:4: otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')'
=======
        // InternalSCTX.g:13325:3: ( (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) )
        // InternalSCTX.g:13325:3: (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' )
        {
        // InternalSCTX.g:13325:3: (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' )
        // InternalSCTX.g:13326:4: otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        {
        otherlv_4=(Token)match(input,31,FollowSets000.FOLLOW_94); if (state.failed) return ;
        pushFollow(FollowSets000.FOLLOW_32);
        this_ValuedExpression_5=ruleValuedExpression();

        state._fsp--;
        if (state.failed) return ;
        otherlv_6=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
<<<<<<< HEAD
    // $ANTLR end synpred459_InternalSCTX

    // $ANTLR start synpred478_InternalSCTX
    public final void synpred478_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_BoolExpression_0 = null;


        // InternalSCTX.g:14909:3: (this_BoolExpression_0= ruleBoolExpression )
        // InternalSCTX.g:14909:3: this_BoolExpression_0= ruleBoolExpression
=======
    // $ANTLR end synpred446_InternalSCTX

    // $ANTLR start synpred465_InternalSCTX
    public final void synpred465_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_BoolExpression_0 = null;


        // InternalSCTX.g:14358:3: (this_BoolExpression_0= ruleBoolExpression )
        // InternalSCTX.g:14358:3: this_BoolExpression_0= ruleBoolExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_BoolExpression_0=ruleBoolExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
<<<<<<< HEAD
    // $ANTLR end synpred478_InternalSCTX

    // $ANTLR start synpred479_InternalSCTX
    public final void synpred479_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ValuedExpression_1 = null;


        // InternalSCTX.g:14921:3: (this_ValuedExpression_1= ruleValuedExpression )
        // InternalSCTX.g:14921:3: this_ValuedExpression_1= ruleValuedExpression
=======
    // $ANTLR end synpred465_InternalSCTX

    // $ANTLR start synpred466_InternalSCTX
    public final void synpred466_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ValuedExpression_1 = null;


        // InternalSCTX.g:14370:3: (this_ValuedExpression_1= ruleValuedExpression )
        // InternalSCTX.g:14370:3: this_ValuedExpression_1= ruleValuedExpression
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedExpression_1=ruleValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
<<<<<<< HEAD
    // $ANTLR end synpred479_InternalSCTX

    // $ANTLR start synpred491_InternalSCTX
    public final void synpred491_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Annotation_0 = null;


        // InternalSCTX.g:15551:3: (this_Annotation_0= superAnnotation )
        // InternalSCTX.g:15551:3: this_Annotation_0= superAnnotation
=======
    // $ANTLR end synpred466_InternalSCTX

    // $ANTLR start synpred478_InternalSCTX
    public final void synpred478_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Annotation_0 = null;


        // InternalSCTX.g:15000:3: (this_Annotation_0= superAnnotation )
        // InternalSCTX.g:15000:3: this_Annotation_0= superAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Annotation_0=superAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
<<<<<<< HEAD
    // $ANTLR end synpred491_InternalSCTX

    // $ANTLR start synpred494_InternalSCTX
    public final void synpred494_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_KeyStringValueAnnotation_1 = null;


        // InternalSCTX.g:15647:3: (this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation )
        // InternalSCTX.g:15647:3: this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation
=======
    // $ANTLR end synpred478_InternalSCTX

    // $ANTLR start synpred481_InternalSCTX
    public final void synpred481_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_KeyStringValueAnnotation_1 = null;


        // InternalSCTX.g:15096:3: (this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation )
        // InternalSCTX.g:15096:3: this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_KeyStringValueAnnotation_1=ruleKeyStringValueAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
<<<<<<< HEAD
    // $ANTLR end synpred494_InternalSCTX

    // $ANTLR start synpred495_InternalSCTX
    public final void synpred495_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_TypedKeyStringValueAnnotation_2 = null;


        // InternalSCTX.g:15659:3: (this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation )
        // InternalSCTX.g:15659:3: this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation
=======
    // $ANTLR end synpred481_InternalSCTX

    // $ANTLR start synpred482_InternalSCTX
    public final void synpred482_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_TypedKeyStringValueAnnotation_2 = null;


        // InternalSCTX.g:15108:3: (this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation )
        // InternalSCTX.g:15108:3: this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_TypedKeyStringValueAnnotation_2=ruleTypedKeyStringValueAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
<<<<<<< HEAD
    // $ANTLR end synpred495_InternalSCTX

    // $ANTLR start synpred520_InternalSCTX
    public final void synpred520_InternalSCTX_fragment() throws RecognitionException {   
        Token kw=null;
        Token this_ID_3=null;

        // InternalSCTX.g:16919:4: ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )
        // InternalSCTX.g:16919:4: (kw= '.' | kw= '-' ) this_ID_3= RULE_ID
        {
        // InternalSCTX.g:16919:4: (kw= '.' | kw= '-' )
        int alt592=2;
        int LA592_0 = input.LA(1);

        if ( (LA592_0==83) ) {
            alt592=1;
        }
        else if ( (LA592_0==94) ) {
            alt592=2;
=======
    // $ANTLR end synpred482_InternalSCTX

    // $ANTLR start synpred507_InternalSCTX
    public final void synpred507_InternalSCTX_fragment() throws RecognitionException {   
        Token kw=null;
        Token this_ID_3=null;

        // InternalSCTX.g:16368:4: ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )
        // InternalSCTX.g:16368:4: (kw= '.' | kw= '-' ) this_ID_3= RULE_ID
        {
        // InternalSCTX.g:16368:4: (kw= '.' | kw= '-' )
        int alt576=2;
        int LA576_0 = input.LA(1);

        if ( (LA576_0==82) ) {
            alt576=1;
        }
        else if ( (LA576_0==93) ) {
            alt576=2;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
<<<<<<< HEAD
                new NoViableAltException("", 592, 0, input);

            throw nvae;
        }
        switch (alt592) {
            case 1 :
                // InternalSCTX.g:16920:5: kw= '.'
=======
                new NoViableAltException("", 576, 0, input);

            throw nvae;
        }
        switch (alt576) {
            case 1 :
                // InternalSCTX.g:16369:5: kw= '.'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                {
                kw=(Token)match(input,82,FollowSets000.FOLLOW_9); if (state.failed) return ;

                }
                break;
            case 2 :
<<<<<<< HEAD
                // InternalSCTX.g:16926:5: kw= '-'
=======
                // InternalSCTX.g:16375:5: kw= '-'
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                {
                kw=(Token)match(input,93,FollowSets000.FOLLOW_9); if (state.failed) return ;

                }
                break;

        }

        this_ID_3=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
<<<<<<< HEAD
    // $ANTLR end synpred520_InternalSCTX
=======
    // $ANTLR end synpred507_InternalSCTX
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

    // Delegated rules

    public final boolean synpred118_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred118_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred70_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred166_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred166_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred408_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred408_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred400_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred400_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred280_InternalSCTX() {
=======
    public final boolean synpred421_InternalSCTX() {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        state.backtracking++;
        int start = input.mark();
        try {
            synpred421_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred454_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred454_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred229_InternalSCTX() {
=======
    public final boolean synpred72_InternalSCTX() {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        state.backtracking++;
        int start = input.mark();
        try {
            synpred72_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred187_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred187_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred280_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred280_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred322_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred322_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred429_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred429_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred263_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred263_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred437_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred437_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred429_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred429_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred147_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred147_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred437_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred437_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred279_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred279_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred149_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred149_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred225_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred225_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred17_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred359_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred359_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred507_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred507_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred431_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred431_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred275_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred275_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred450_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred450_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred303_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred303_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred433_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred433_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred277_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred277_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred433_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred433_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred223_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred223_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred255_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred255_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred465_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred465_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred466_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred466_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred412_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred412_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred413_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred413_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred411_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred411_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred252_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred252_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred192_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred192_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred369_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred369_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred140_InternalSCTX() {
=======
    public final boolean synpred141_InternalSCTX() {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        state.backtracking++;
        int start = input.mark();
        try {
            synpred141_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred140_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred140_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred142_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred142_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred90_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred90_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred105_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred105_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred363_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred363_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred362_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred362_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred91_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred91_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred218_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred218_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred520_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred520_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred365_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred365_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred360_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred360_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred93_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred93_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred427_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred427_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred366_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred366_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred361_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred361_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred427_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred427_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred423_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred423_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred92_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred92_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred425_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred425_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred367_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred367_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred364_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred364_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred478_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred478_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred425_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred425_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred212_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred212_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred479_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred479_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred266_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred266_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred269_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred269_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred321_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred321_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred364_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred364_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred396_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred396_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred190_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred190_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred8_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred478_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred478_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred228_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred228_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred54_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred226_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred226_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred459_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred459_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred146_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred146_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred325_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred325_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred278_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred278_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred212_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred212_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred358_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred358_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred266_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred266_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred434_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred434_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred210_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred210_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred144_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred144_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred281_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred281_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred276_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred276_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred491_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred491_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred243_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred243_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred169_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred169_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred207_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred207_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred306_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred306_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred87_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred87_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred8_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred415_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred415_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred228_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred228_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred432_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred432_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred226_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred226_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred163_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred163_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred436_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred436_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred178_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred178_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred278_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred278_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred270_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred270_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred144_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred144_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred220_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred220_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred276_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred276_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred273_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred273_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred87_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred87_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred236_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred236_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred415_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred415_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred481_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred481_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred209_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred209_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred446_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred446_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred417_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred417_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred28_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred482_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred482_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred273_InternalSCTX() {
=======
    public final boolean synpred441_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred441_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_InternalSCTX() {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred419_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred419_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred233_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred233_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred236_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred236_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred75_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred75_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred234_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred234_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred235_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred235_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred139_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred139_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred135_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred135_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred136_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred136_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred494_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred494_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred138_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred138_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred495_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred495_InternalSCTX_fragment(); // can never throw exception
=======
    public final boolean synpred173_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred173_InternalSCTX_fragment(); // can never throw exception
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< HEAD
    public final boolean synpred283_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred283_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred75_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred75_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred139_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred139_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred138_InternalSCTX() {
=======
    public final boolean synpred77_InternalSCTX() {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        state.backtracking++;
        int start = input.mark();
        try {
            synpred77_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred137_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred137_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA7 dfa7 = new DFA7(this);
    protected DFA8 dfa8 = new DFA8(this);
    protected DFA10 dfa10 = new DFA10(this);
    protected DFA23 dfa23 = new DFA23(this);
    protected DFA24 dfa24 = new DFA24(this);
    protected DFA26 dfa26 = new DFA26(this);
    protected DFA28 dfa28 = new DFA28(this);
    protected DFA40 dfa40 = new DFA40(this);
    protected DFA41 dfa41 = new DFA41(this);
    protected DFA65 dfa65 = new DFA65(this);
    protected DFA66 dfa66 = new DFA66(this);
    protected DFA68 dfa68 = new DFA68(this);
    protected DFA69 dfa69 = new DFA69(this);
    protected DFA70 dfa70 = new DFA70(this);
    protected DFA71 dfa71 = new DFA71(this);
    protected DFA83 dfa83 = new DFA83(this);
    protected DFA85 dfa85 = new DFA85(this);
    protected DFA86 dfa86 = new DFA86(this);
    protected DFA89 dfa89 = new DFA89(this);
    protected DFA96 dfa96 = new DFA96(this);
    protected DFA109 dfa109 = new DFA109(this);
    protected DFA126 dfa126 = new DFA126(this);
    protected DFA127 dfa127 = new DFA127(this);
    protected DFA130 dfa130 = new DFA130(this);
    protected DFA147 dfa147 = new DFA147(this);
    protected DFA150 dfa150 = new DFA150(this);
    protected DFA155 dfa155 = new DFA155(this);
    protected DFA162 dfa162 = new DFA162(this);
    protected DFA169 dfa169 = new DFA169(this);
    protected DFA171 dfa171 = new DFA171(this);
    protected DFA176 dfa176 = new DFA176(this);
    protected DFA182 dfa182 = new DFA182(this);
    protected DFA186 dfa186 = new DFA186(this);
    protected DFA191 dfa191 = new DFA191(this);
    protected DFA193 dfa193 = new DFA193(this);
    protected DFA195 dfa195 = new DFA195(this);
    protected DFA204 dfa204 = new DFA204(this);
    protected DFA201 dfa201 = new DFA201(this);
    protected DFA206 dfa206 = new DFA206(this);
    protected DFA208 dfa208 = new DFA208(this);
    protected DFA210 dfa210 = new DFA210(this);
    protected DFA216 dfa216 = new DFA216(this);
    protected DFA217 dfa217 = new DFA217(this);
    protected DFA232 dfa232 = new DFA232(this);
    protected DFA242 dfa242 = new DFA242(this);
    protected DFA241 dfa241 = new DFA241(this);
    protected DFA244 dfa244 = new DFA244(this);
    protected DFA247 dfa247 = new DFA247(this);
    protected DFA251 dfa251 = new DFA251(this);
    protected DFA254 dfa254 = new DFA254(this);
    protected DFA256 dfa256 = new DFA256(this);
    protected DFA257 dfa257 = new DFA257(this);
    protected DFA278 dfa278 = new DFA278(this);
    protected DFA296 dfa296 = new DFA296(this);
    protected DFA297 dfa297 = new DFA297(this);
<<<<<<< HEAD
    protected DFA298 dfa298 = new DFA298(this);
    protected DFA335 dfa335 = new DFA335(this);
    protected DFA337 dfa337 = new DFA337(this);
    protected DFA340 dfa340 = new DFA340(this);
    protected DFA343 dfa343 = new DFA343(this);
    protected DFA346 dfa346 = new DFA346(this);
    protected DFA354 dfa354 = new DFA354(this);
    protected DFA361 dfa361 = new DFA361(this);
    protected DFA366 dfa366 = new DFA366(this);
    protected DFA378 dfa378 = new DFA378(this);
    protected DFA381 dfa381 = new DFA381(this);
    protected DFA382 dfa382 = new DFA382(this);
    protected DFA383 dfa383 = new DFA383(this);
    protected DFA389 dfa389 = new DFA389(this);
    protected DFA390 dfa390 = new DFA390(this);
    protected DFA392 dfa392 = new DFA392(this);
    protected DFA393 dfa393 = new DFA393(this);
    protected DFA394 dfa394 = new DFA394(this);
    protected DFA398 dfa398 = new DFA398(this);
    protected DFA397 dfa397 = new DFA397(this);
    protected DFA409 dfa409 = new DFA409(this);
    protected DFA410 dfa410 = new DFA410(this);
    protected DFA429 dfa429 = new DFA429(this);
    protected DFA436 dfa436 = new DFA436(this);
    protected DFA437 dfa437 = new DFA437(this);
    protected DFA438 dfa438 = new DFA438(this);
    protected DFA440 dfa440 = new DFA440(this);
    protected DFA441 dfa441 = new DFA441(this);
    protected DFA442 dfa442 = new DFA442(this);
    protected DFA443 dfa443 = new DFA443(this);
    protected DFA455 dfa455 = new DFA455(this);
    protected DFA537 dfa537 = new DFA537(this);
    static final String dfa_1s = "\56\uffff";
    static final String dfa_2s = "\1\12\13\uffff\2\0\40\uffff";
    static final String dfa_3s = "\1\u009d\13\uffff\2\0\40\uffff";
    static final String dfa_4s = "\1\uffff\1\2\26\uffff\1\1\25\uffff";
    static final String dfa_5s = "\14\uffff\1\0\1\1\40\uffff}>";
    static final String[] dfa_6s = {
            "\1\14\13\uffff\6\1\1\uffff\1\30\17\uffff\2\1\2\uffff\1\1\2\uffff\1\1\1\uffff\7\1\6\30\2\uffff\1\30\10\uffff\3\30\31\uffff\1\15\2\uffff\4\1\3\uffff\6\30\34\uffff\2\30\3\uffff\3\30",
=======
    protected DFA333 dfa333 = new DFA333(this);
    protected DFA335 dfa335 = new DFA335(this);
    protected DFA338 dfa338 = new DFA338(this);
    protected DFA341 dfa341 = new DFA341(this);
    protected DFA344 dfa344 = new DFA344(this);
    protected DFA352 dfa352 = new DFA352(this);
    protected DFA359 dfa359 = new DFA359(this);
    protected DFA364 dfa364 = new DFA364(this);
    protected DFA376 dfa376 = new DFA376(this);
    protected DFA379 dfa379 = new DFA379(this);
    protected DFA380 dfa380 = new DFA380(this);
    protected DFA381 dfa381 = new DFA381(this);
    protected DFA387 dfa387 = new DFA387(this);
    protected DFA388 dfa388 = new DFA388(this);
    protected DFA390 dfa390 = new DFA390(this);
    protected DFA391 dfa391 = new DFA391(this);
    protected DFA392 dfa392 = new DFA392(this);
    protected DFA396 dfa396 = new DFA396(this);
    protected DFA395 dfa395 = new DFA395(this);
    protected DFA397 dfa397 = new DFA397(this);
    protected DFA398 dfa398 = new DFA398(this);
    protected DFA399 dfa399 = new DFA399(this);
    protected DFA418 dfa418 = new DFA418(this);
    protected DFA425 dfa425 = new DFA425(this);
    protected DFA426 dfa426 = new DFA426(this);
    protected DFA427 dfa427 = new DFA427(this);
    protected DFA429 dfa429 = new DFA429(this);
    protected DFA430 dfa430 = new DFA430(this);
    protected DFA431 dfa431 = new DFA431(this);
    protected DFA432 dfa432 = new DFA432(this);
    protected DFA444 dfa444 = new DFA444(this);
    protected DFA526 dfa526 = new DFA526(this);
    static final String dfa_1s = "\56\uffff";
    static final String dfa_2s = "\1\12\13\uffff\2\0\40\uffff";
    static final String dfa_3s = "\1\u0099\13\uffff\2\0\40\uffff";
    static final String dfa_4s = "\1\uffff\1\2\26\uffff\1\1\25\uffff";
    static final String dfa_5s = "\14\uffff\1\0\1\1\40\uffff}>";
    static final String[] dfa_6s = {
            "\1\14\13\uffff\6\1\1\uffff\1\30\17\uffff\2\1\2\uffff\1\1\1\uffff\1\1\1\uffff\7\1\6\30\2\uffff\1\30\10\uffff\3\30\26\uffff\1\15\2\uffff\4\1\3\uffff\6\30\34\uffff\2\30\3\uffff\3\30",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA7 extends DFA {

        public DFA7(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 7;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "()* loopback of 279:3: ( (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA7_12 = input.LA(1);

                         
                        int index7_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index7_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA7_13 = input.LA(1);

                         
                        int index7_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index7_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 7, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_7s = "\65\uffff";
    static final String dfa_8s = "\2\12\1\5\2\uffff\1\4\2\5\1\6\1\5\3\12\2\4\1\45\1\4\2\5\1\6\2\5\1\6\1\4\5\12\2\45\3\12\2\5\1\6\1\4\2\5\1\6\7\12\2\5\1\6\2\12";
<<<<<<< HEAD
    static final String dfa_9s = "\2\160\1\5\2\uffff\1\160\1\5\1\7\1\6\1\5\5\160\1\151\1\136\2\5\1\6\2\5\1\6\1\136\5\160\1\151\1\45\3\160\2\5\1\6\1\136\2\5\1\6\7\160\2\5\1\6\2\160";
    static final String dfa_10s = "\3\uffff\1\2\1\1\60\uffff";
    static final String dfa_11s = "\65\uffff}>";
    static final String[] dfa_12s = {
            "\1\1\13\uffff\6\3\21\uffff\2\3\2\uffff\1\3\2\uffff\1\4\1\uffff\7\4\55\uffff\1\2\2\uffff\4\4",
            "\1\1\14\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\5",
            "",
            "",
            "\1\12\1\13\2\3\1\uffff\1\14\1\1\12\uffff\1\3\1\uffff\5\3\10\uffff\1\11\10\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\6\12\uffff\1\7\12\uffff\1\10\1\2\2\uffff\4\4",
=======
    static final String dfa_9s = "\2\154\1\5\2\uffff\1\154\1\5\1\7\1\6\1\5\5\154\1\145\1\135\2\5\1\6\2\5\1\6\1\135\5\154\1\145\1\45\3\154\2\5\1\6\1\135\2\5\1\6\7\154\2\5\1\6\2\154";
    static final String dfa_10s = "\3\uffff\1\2\1\1\60\uffff";
    static final String dfa_11s = "\65\uffff}>";
    static final String[] dfa_12s = {
            "\1\1\13\uffff\6\3\21\uffff\2\3\2\uffff\1\3\1\uffff\1\4\1\uffff\7\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\14\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\5",
            "",
            "",
            "\1\12\1\13\2\3\1\uffff\1\14\1\1\12\uffff\1\3\1\uffff\5\3\10\uffff\1\11\10\uffff\2\3\2\uffff\1\3\11\uffff\1\4\26\uffff\1\6\12\uffff\1\7\7\uffff\1\10\1\2\2\uffff\4\4",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\15",
            "\1\15\2\3",
            "\1\16",
            "\1\17",
<<<<<<< HEAD
            "\1\1\11\uffff\1\20\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\20\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\21\12\uffff\1\22\12\uffff\1\23\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\20\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\12\1\13\2\3\1\uffff\1\14\1\1\12\uffff\1\3\1\uffff\5\3\10\uffff\1\11\10\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\6\12\uffff\1\7\12\uffff\1\10\1\2\2\uffff\4\4",
            "\1\12\1\13\2\3\1\uffff\1\14\1\1\12\uffff\1\3\1\uffff\5\3\10\uffff\1\11\10\uffff\2\3\2\uffff\1\3\12\uffff\1\4\41\uffff\1\3\13\uffff\1\2\2\uffff\4\4",
            "\1\27\55\uffff\1\24\12\uffff\1\25\12\uffff\1\26",
            "\1\30\1\31\2\3\1\uffff\1\32\124\uffff\1\3",
=======
            "\1\1\11\uffff\1\20\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\20\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\26\uffff\1\21\12\uffff\1\22\7\uffff\1\23\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\20\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\12\1\13\2\3\1\uffff\1\14\1\1\12\uffff\1\3\1\uffff\5\3\10\uffff\1\11\10\uffff\2\3\2\uffff\1\3\11\uffff\1\4\26\uffff\1\6\12\uffff\1\7\7\uffff\1\10\1\2\2\uffff\4\4",
            "\1\12\1\13\2\3\1\uffff\1\14\1\1\12\uffff\1\3\1\uffff\5\3\10\uffff\1\11\10\uffff\2\3\2\uffff\1\3\11\uffff\1\4\41\uffff\1\3\10\uffff\1\2\2\uffff\4\4",
            "\1\27\54\uffff\1\24\12\uffff\1\25\7\uffff\1\26",
            "\1\30\1\31\2\3\1\uffff\1\32\123\uffff\1\3",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\33",
            "\1\33",
            "\1\34",
            "\1\35",
            "\1\35",
            "\1\36",
<<<<<<< HEAD
            "\1\37\1\40\2\3\1\uffff\1\41\124\uffff\1\3",
            "\1\1\11\uffff\1\20\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\20\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\42\12\uffff\1\43\12\uffff\1\44\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\20\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\20\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\21\12\uffff\1\22\12\uffff\1\23\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\20\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\27\55\uffff\1\24\12\uffff\1\25\12\uffff\1\26",
            "\1\27",
            "\1\1\11\uffff\1\45\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\45\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\46\12\uffff\1\47\12\uffff\1\50\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\45\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
=======
            "\1\37\1\40\2\3\1\uffff\1\41\123\uffff\1\3",
            "\1\1\11\uffff\1\20\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\20\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\26\uffff\1\42\12\uffff\1\43\7\uffff\1\44\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\20\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\20\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\26\uffff\1\21\12\uffff\1\22\7\uffff\1\23\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\20\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\27\54\uffff\1\24\12\uffff\1\25\7\uffff\1\26",
            "\1\27",
            "\1\1\11\uffff\1\45\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\45\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\26\uffff\1\46\12\uffff\1\47\7\uffff\1\50\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\45\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\51",
            "\1\51",
            "\1\52",
            "\1\53\1\54\2\3\1\uffff\1\55\123\uffff\1\3",
            "\1\56",
            "\1\56",
            "\1\57",
<<<<<<< HEAD
            "\1\1\11\uffff\1\20\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\42\12\uffff\1\43\12\uffff\1\44\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\20\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\45\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\45\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\60\12\uffff\1\61\12\uffff\1\62\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\45\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\45\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\46\12\uffff\1\47\12\uffff\1\50\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\45\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\63",
            "\1\63",
            "\1\64",
            "\1\1\11\uffff\1\45\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\60\12\uffff\1\61\12\uffff\1\62\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\45\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4"
=======
            "\1\1\11\uffff\1\20\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\26\uffff\1\42\12\uffff\1\43\7\uffff\1\44\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\20\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\45\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\45\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\26\uffff\1\60\12\uffff\1\61\7\uffff\1\62\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\45\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\45\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\26\uffff\1\46\12\uffff\1\47\7\uffff\1\50\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\45\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\63",
            "\1\63",
            "\1\64",
            "\1\1\11\uffff\1\45\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\26\uffff\1\60\12\uffff\1\61\7\uffff\1\62\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\45\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4"
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA8 extends DFA {

        public DFA8(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 8;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "()* loopback of 298:3: ( (lv_actions_10_0= ruleLocalAction ) )*";
        }
    }
    static final String dfa_13s = "\14\uffff";
    static final String dfa_14s = "\1\12\2\0\1\uffff\1\0\7\uffff";
<<<<<<< HEAD
    static final String dfa_15s = "\1\152\2\0\1\uffff\1\0\7\uffff";
    static final String dfa_16s = "\3\uffff\1\1\4\uffff\1\2\3\uffff";
    static final String dfa_17s = "\1\uffff\1\0\1\1\1\uffff\1\2\7\uffff}>";
    static final String[] dfa_18s = {
            "\1\1\13\uffff\1\10\1\3\1\4\3\3\21\uffff\2\10\2\uffff\1\10\70\uffff\1\2",
=======
    static final String dfa_15s = "\1\146\2\0\1\uffff\1\0\7\uffff";
    static final String dfa_16s = "\3\uffff\1\1\4\uffff\1\2\3\uffff";
    static final String dfa_17s = "\1\uffff\1\0\1\1\1\uffff\1\2\7\uffff}>";
    static final String[] dfa_18s = {
            "\1\1\13\uffff\1\10\1\3\1\4\3\3\21\uffff\2\10\2\uffff\1\10\64\uffff\1\2",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[][] dfa_18 = unpackEncodedStringArray(dfa_18s);

    class DFA10 extends DFA {

        public DFA10(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 10;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_17;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "317:3: ( ( (lv_regions_11_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_12_0= ruleRegion ) )* )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA10_1 = input.LA(1);

                         
                        int index10_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index10_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA10_2 = input.LA(1);

                         
                        int index10_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index10_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA10_4 = input.LA(1);

                         
                        int index10_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index10_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 10, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA23 extends DFA {

        public DFA23(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 23;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "()* loopback of 625:5: ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA23_12 = input.LA(1);

                         
                        int index23_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index23_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA23_13 = input.LA(1);

                         
                        int index23_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index23_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 23, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_19s = "\2\12\1\5\2\uffff\1\4\2\5\1\6\3\12\1\5\3\4\2\5\1\6\1\45\5\12\2\5\1\6\1\4\2\5\1\6\2\45\5\12\1\4\2\5\1\6\5\12\2\5\1\6\2\12";
<<<<<<< HEAD
    static final String dfa_20s = "\2\160\1\5\2\uffff\1\160\1\5\1\7\1\6\3\160\1\5\2\160\1\136\2\5\1\6\1\151\5\160\2\5\1\6\1\136\2\5\1\6\1\151\1\45\5\160\1\136\2\5\1\6\5\160\2\5\1\6\2\160";
    static final String[] dfa_21s = {
            "\1\1\13\uffff\6\3\21\uffff\2\3\2\uffff\1\3\2\uffff\1\4\1\uffff\7\4\55\uffff\1\2\2\uffff\4\4",
            "\1\1\14\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\5",
            "",
            "",
            "\1\11\1\12\2\3\1\uffff\1\13\1\1\12\uffff\1\3\1\uffff\5\3\10\uffff\1\14\10\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\6\12\uffff\1\7\12\uffff\1\10\1\2\2\uffff\4\4",
            "\1\15",
            "\1\15\2\3",
            "\1\16",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\20\12\uffff\1\21\12\uffff\1\22\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\23",
            "\1\11\1\12\2\3\1\uffff\1\13\1\1\12\uffff\1\3\1\uffff\5\3\10\uffff\1\14\10\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\6\12\uffff\1\7\12\uffff\1\10\1\2\2\uffff\4\4",
            "\1\11\1\12\2\3\1\uffff\1\13\1\1\12\uffff\1\3\1\uffff\5\3\10\uffff\1\14\10\uffff\2\3\2\uffff\1\3\12\uffff\1\4\41\uffff\1\3\13\uffff\1\2\2\uffff\4\4",
            "\1\24\1\25\2\3\1\uffff\1\26\124\uffff\1\3",
            "\1\27",
            "\1\27",
            "\1\30",
            "\1\34\55\uffff\1\31\12\uffff\1\32\12\uffff\1\33",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\35\12\uffff\1\36\12\uffff\1\37\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\20\12\uffff\1\21\12\uffff\1\22\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
=======
    static final String dfa_20s = "\2\154\1\5\2\uffff\1\154\1\5\1\7\1\6\3\154\1\5\2\154\1\135\2\5\1\6\1\145\5\154\2\5\1\6\1\135\2\5\1\6\1\145\1\45\5\154\1\135\2\5\1\6\5\154\2\5\1\6\2\154";
    static final String[] dfa_21s = {
            "\1\1\13\uffff\6\3\21\uffff\2\3\2\uffff\1\3\1\uffff\1\4\1\uffff\7\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\14\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\5",
            "",
            "",
            "\1\11\1\12\2\3\1\uffff\1\13\1\1\12\uffff\1\3\1\uffff\5\3\10\uffff\1\14\10\uffff\2\3\2\uffff\1\3\11\uffff\1\4\26\uffff\1\6\12\uffff\1\7\7\uffff\1\10\1\2\2\uffff\4\4",
            "\1\15",
            "\1\15\2\3",
            "\1\16",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\26\uffff\1\20\12\uffff\1\21\7\uffff\1\22\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\23",
            "\1\11\1\12\2\3\1\uffff\1\13\1\1\12\uffff\1\3\1\uffff\5\3\10\uffff\1\14\10\uffff\2\3\2\uffff\1\3\11\uffff\1\4\26\uffff\1\6\12\uffff\1\7\7\uffff\1\10\1\2\2\uffff\4\4",
            "\1\11\1\12\2\3\1\uffff\1\13\1\1\12\uffff\1\3\1\uffff\5\3\10\uffff\1\14\10\uffff\2\3\2\uffff\1\3\11\uffff\1\4\41\uffff\1\3\10\uffff\1\2\2\uffff\4\4",
            "\1\24\1\25\2\3\1\uffff\1\26\123\uffff\1\3",
            "\1\27",
            "\1\27",
            "\1\30",
            "\1\34\54\uffff\1\31\12\uffff\1\32\7\uffff\1\33",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\26\uffff\1\35\12\uffff\1\36\7\uffff\1\37\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\26\uffff\1\20\12\uffff\1\21\7\uffff\1\22\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\40",
            "\1\40",
            "\1\41",
            "\1\42\1\43\2\3\1\uffff\1\44\123\uffff\1\3",
            "\1\45",
            "\1\45",
            "\1\46",
<<<<<<< HEAD
            "\1\34\55\uffff\1\31\12\uffff\1\32\12\uffff\1\33",
            "\1\34",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\50\12\uffff\1\51\12\uffff\1\52\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\35\12\uffff\1\36\12\uffff\1\37\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\53\1\54\2\3\1\uffff\1\55\124\uffff\1\3",
            "\1\56",
            "\1\56",
            "\1\57",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\60\12\uffff\1\61\12\uffff\1\62\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\50\12\uffff\1\51\12\uffff\1\52\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\63",
            "\1\63",
            "\1\64",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\60\12\uffff\1\61\12\uffff\1\62\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4"
=======
            "\1\34\54\uffff\1\31\12\uffff\1\32\7\uffff\1\33",
            "\1\34",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\26\uffff\1\50\12\uffff\1\51\7\uffff\1\52\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\26\uffff\1\35\12\uffff\1\36\7\uffff\1\37\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\53\1\54\2\3\1\uffff\1\55\123\uffff\1\3",
            "\1\56",
            "\1\56",
            "\1\57",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\26\uffff\1\60\12\uffff\1\61\7\uffff\1\62\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\26\uffff\1\50\12\uffff\1\51\7\uffff\1\52\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\63",
            "\1\63",
            "\1\64",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\26\uffff\1\60\12\uffff\1\61\7\uffff\1\62\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4"
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    };
    static final char[] dfa_19 = DFA.unpackEncodedStringToUnsignedChars(dfa_19s);
    static final char[] dfa_20 = DFA.unpackEncodedStringToUnsignedChars(dfa_20s);
    static final short[][] dfa_21 = unpackEncodedStringArray(dfa_21s);

    class DFA24 extends DFA {

        public DFA24(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 24;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_19;
            this.max = dfa_20;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_21;
        }
        public String getDescription() {
            return "()* loopback of 644:5: ( (lv_actions_20_0= ruleLocalAction ) )*";
        }
    }

    class DFA26 extends DFA {

        public DFA26(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 26;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_17;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "663:5: ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA26_1 = input.LA(1);

                         
                        int index26_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred28_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index26_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA26_2 = input.LA(1);

                         
                        int index26_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred28_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index26_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA26_4 = input.LA(1);

                         
                        int index26_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred28_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index26_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 26, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_22s = "\1\1\64\uffff";
<<<<<<< HEAD
    static final String dfa_23s = "\1\12\1\uffff\1\12\1\5\1\uffff\1\4\2\5\1\6\1\5\3\12\2\4\1\45\1\4\2\5\1\6\2\5\1\6\1\4\5\12\2\45\3\12\2\5\1\6\1\4\2\5\1\6\7\12\2\5\1\6\2\12";
    static final String dfa_24s = "\1\160\1\uffff\1\160\1\5\1\uffff\1\160\1\5\1\7\1\6\1\5\5\160\1\151\1\136\2\5\1\6\2\5\1\6\1\136\5\160\1\151\1\45\3\160\2\5\1\6\1\136\2\5\1\6\7\160\2\5\1\6\2\160";
    static final String dfa_25s = "\1\uffff\1\2\2\uffff\1\1\60\uffff";
    static final String[] dfa_26s = {
            "\1\2\13\uffff\6\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\45\uffff\1\3\6\4",
            "",
            "\1\2\14\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\45\uffff\1\3\6\4",
            "\1\5",
            "",
            "\1\12\1\13\2\1\1\uffff\1\14\1\2\12\uffff\1\1\1\uffff\5\1\10\uffff\1\11\1\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\16\uffff\1\6\12\uffff\1\7\12\uffff\1\10\1\3\6\4",
            "\1\15",
            "\1\15\2\1",
            "\1\16",
            "\1\17",
            "\1\2\11\uffff\1\20\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\45\uffff\1\3\6\4",
            "\1\2\11\uffff\1\20\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\16\uffff\1\21\12\uffff\1\22\12\uffff\1\23\1\3\6\4",
            "\1\2\11\uffff\1\20\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\45\uffff\1\3\6\4",
            "\1\12\1\13\2\1\1\uffff\1\14\1\2\12\uffff\1\1\1\uffff\5\1\10\uffff\1\11\1\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\16\uffff\1\6\12\uffff\1\7\12\uffff\1\10\1\3\6\4",
            "\1\12\1\13\2\1\1\uffff\1\14\1\2\12\uffff\1\1\1\uffff\5\1\10\uffff\1\11\1\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\31\uffff\1\1\13\uffff\1\3\6\4",
            "\1\27\55\uffff\1\24\12\uffff\1\25\12\uffff\1\26",
            "\1\30\1\31\2\1\1\uffff\1\32\124\uffff\1\1",
            "\1\33",
            "\1\33",
            "\1\34",
            "\1\35",
            "\1\35",
            "\1\36",
            "\1\37\1\40\2\1\1\uffff\1\41\124\uffff\1\1",
            "\1\2\11\uffff\1\20\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\45\uffff\1\3\6\4",
            "\1\2\11\uffff\1\20\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\16\uffff\1\42\12\uffff\1\43\12\uffff\1\44\1\3\6\4",
            "\1\2\11\uffff\1\20\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\45\uffff\1\3\6\4",
            "\1\2\11\uffff\1\20\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\16\uffff\1\21\12\uffff\1\22\12\uffff\1\23\1\3\6\4",
            "\1\2\11\uffff\1\20\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\45\uffff\1\3\6\4",
            "\1\27\55\uffff\1\24\12\uffff\1\25\12\uffff\1\26",
            "\1\27",
            "\1\2\11\uffff\1\45\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\45\uffff\1\3\6\4",
            "\1\2\11\uffff\1\45\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\16\uffff\1\46\12\uffff\1\47\12\uffff\1\50\1\3\6\4",
            "\1\2\11\uffff\1\45\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\45\uffff\1\3\6\4",
            "\1\51",
            "\1\51",
            "\1\52",
            "\1\53\1\54\2\1\1\uffff\1\55\124\uffff\1\1",
            "\1\56",
            "\1\56",
            "\1\57",
            "\1\2\11\uffff\1\20\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\16\uffff\1\42\12\uffff\1\43\12\uffff\1\44\1\3\6\4",
            "\1\2\11\uffff\1\20\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\45\uffff\1\3\6\4",
            "\1\2\11\uffff\1\45\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\45\uffff\1\3\6\4",
            "\1\2\11\uffff\1\45\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\16\uffff\1\60\12\uffff\1\61\12\uffff\1\62\1\3\6\4",
            "\1\2\11\uffff\1\45\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\45\uffff\1\3\6\4",
            "\1\2\11\uffff\1\45\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\16\uffff\1\46\12\uffff\1\47\12\uffff\1\50\1\3\6\4",
            "\1\2\11\uffff\1\45\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\45\uffff\1\3\6\4",
            "\1\63",
            "\1\63",
            "\1\64",
            "\1\2\11\uffff\1\45\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\16\uffff\1\60\12\uffff\1\61\12\uffff\1\62\1\3\6\4",
            "\1\2\11\uffff\1\45\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\22\uffff\1\4\45\uffff\1\3\6\4"
=======
    static final String dfa_23s = "\1\12\1\uffff\1\12\1\5\1\uffff\1\4\2\5\1\6\3\12\1\5\3\4\2\5\1\6\1\45\5\12\2\5\1\6\1\4\2\5\1\6\2\45\5\12\1\4\2\5\1\6\5\12\2\5\1\6\2\12";
    static final String dfa_24s = "\1\154\1\uffff\1\154\1\5\1\uffff\1\154\1\5\1\7\1\6\3\154\1\5\2\154\1\135\2\5\1\6\1\145\5\154\2\5\1\6\1\135\2\5\1\6\1\145\1\45\5\154\1\135\2\5\1\6\5\154\2\5\1\6\2\154";
    static final String dfa_25s = "\1\uffff\1\2\2\uffff\1\1\60\uffff";
    static final String[] dfa_26s = {
            "\1\2\13\uffff\6\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\21\uffff\1\4\42\uffff\1\3\6\4",
            "",
            "\1\2\14\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\21\uffff\1\4\42\uffff\1\3\6\4",
            "\1\5",
            "",
            "\1\11\1\12\2\1\1\uffff\1\13\1\2\12\uffff\1\1\1\uffff\5\1\10\uffff\1\14\1\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\21\uffff\1\4\16\uffff\1\6\12\uffff\1\7\7\uffff\1\10\1\3\6\4",
            "\1\15",
            "\1\15\2\1",
            "\1\16",
            "\1\2\11\uffff\1\17\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\21\uffff\1\4\42\uffff\1\3\6\4",
            "\1\2\11\uffff\1\17\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\21\uffff\1\4\16\uffff\1\20\12\uffff\1\21\7\uffff\1\22\1\3\6\4",
            "\1\2\11\uffff\1\17\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\21\uffff\1\4\42\uffff\1\3\6\4",
            "\1\23",
            "\1\11\1\12\2\1\1\uffff\1\13\1\2\12\uffff\1\1\1\uffff\5\1\10\uffff\1\14\1\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\21\uffff\1\4\16\uffff\1\6\12\uffff\1\7\7\uffff\1\10\1\3\6\4",
            "\1\11\1\12\2\1\1\uffff\1\13\1\2\12\uffff\1\1\1\uffff\5\1\10\uffff\1\14\1\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\21\uffff\1\4\31\uffff\1\1\10\uffff\1\3\6\4",
            "\1\24\1\25\2\1\1\uffff\1\26\123\uffff\1\1",
            "\1\27",
            "\1\27",
            "\1\30",
            "\1\34\54\uffff\1\31\12\uffff\1\32\7\uffff\1\33",
            "\1\2\11\uffff\1\17\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\21\uffff\1\4\42\uffff\1\3\6\4",
            "\1\2\11\uffff\1\17\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\21\uffff\1\4\16\uffff\1\35\12\uffff\1\36\7\uffff\1\37\1\3\6\4",
            "\1\2\11\uffff\1\17\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\21\uffff\1\4\42\uffff\1\3\6\4",
            "\1\2\11\uffff\1\17\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\21\uffff\1\4\16\uffff\1\20\12\uffff\1\21\7\uffff\1\22\1\3\6\4",
            "\1\2\11\uffff\1\17\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\21\uffff\1\4\42\uffff\1\3\6\4",
            "\1\40",
            "\1\40",
            "\1\41",
            "\1\42\1\43\2\1\1\uffff\1\44\123\uffff\1\1",
            "\1\45",
            "\1\45",
            "\1\46",
            "\1\34\54\uffff\1\31\12\uffff\1\32\7\uffff\1\33",
            "\1\34",
            "\1\2\11\uffff\1\47\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\21\uffff\1\4\42\uffff\1\3\6\4",
            "\1\2\11\uffff\1\47\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\21\uffff\1\4\16\uffff\1\50\12\uffff\1\51\7\uffff\1\52\1\3\6\4",
            "\1\2\11\uffff\1\47\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\21\uffff\1\4\42\uffff\1\3\6\4",
            "\1\2\11\uffff\1\17\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\21\uffff\1\4\16\uffff\1\35\12\uffff\1\36\7\uffff\1\37\1\3\6\4",
            "\1\2\11\uffff\1\17\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\21\uffff\1\4\42\uffff\1\3\6\4",
            "\1\53\1\54\2\1\1\uffff\1\55\123\uffff\1\1",
            "\1\56",
            "\1\56",
            "\1\57",
            "\1\2\11\uffff\1\47\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\21\uffff\1\4\42\uffff\1\3\6\4",
            "\1\2\11\uffff\1\47\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\21\uffff\1\4\16\uffff\1\60\12\uffff\1\61\7\uffff\1\62\1\3\6\4",
            "\1\2\11\uffff\1\47\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\21\uffff\1\4\42\uffff\1\3\6\4",
            "\1\2\11\uffff\1\47\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\21\uffff\1\4\16\uffff\1\50\12\uffff\1\51\7\uffff\1\52\1\3\6\4",
            "\1\2\11\uffff\1\47\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\21\uffff\1\4\42\uffff\1\3\6\4",
            "\1\63",
            "\1\63",
            "\1\64",
            "\1\2\11\uffff\1\47\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\21\uffff\1\4\16\uffff\1\60\12\uffff\1\61\7\uffff\1\62\1\3\6\4",
            "\1\2\11\uffff\1\47\2\uffff\5\1\12\uffff\1\4\2\uffff\1\4\3\uffff\2\1\2\uffff\1\1\21\uffff\1\4\42\uffff\1\3\6\4"
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    };
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final char[] dfa_24 = DFA.unpackEncodedStringToUnsignedChars(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[][] dfa_26 = unpackEncodedStringArray(dfa_26s);

    class DFA28 extends DFA {

        public DFA28(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 28;
            this.eot = dfa_7;
            this.eof = dfa_22;
            this.min = dfa_23;
            this.max = dfa_24;
            this.accept = dfa_25;
            this.special = dfa_11;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "()* loopback of 710:3: ( (lv_outgoingTransitions_24_0= ruleTransition ) )*";
        }
    }
<<<<<<< HEAD
    static final String dfa_27s = "\26\uffff";
    static final String dfa_28s = "\1\4\1\0\24\uffff";
    static final String dfa_29s = "\1\u0095\1\0\24\uffff";
    static final String dfa_30s = "\2\uffff\1\2\22\uffff\1\1";
    static final String dfa_31s = "\1\uffff\1\0\24\uffff}>";
    static final String[] dfa_32s = {
            "\2\2\1\1\4\2\12\uffff\1\2\11\uffff\1\2\1\uffff\1\2\56\uffff\1\2\4\uffff\1\2\10\uffff\1\2\7\uffff\1\2\2\uffff\2\2\46\uffff\3\2\1\uffff\1\2",
=======
    static final String dfa_27s = "\24\uffff";
    static final String dfa_28s = "\1\4\1\0\22\uffff";
    static final String dfa_29s = "\1\u008f\1\0\22\uffff";
    static final String dfa_30s = "\2\uffff\1\2\20\uffff\1\1";
    static final String dfa_31s = "\1\uffff\1\0\22\uffff}>";
    static final String[] dfa_32s = {
            "\2\2\1\1\4\2\12\uffff\1\2\11\uffff\1\2\1\uffff\1\2\55\uffff\1\2\4\uffff\1\2\10\uffff\1\2\4\uffff\1\2\3\uffff\1\2\46\uffff\3\2",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[][] dfa_32 = unpackEncodedStringArray(dfa_32s);

    class DFA40 extends DFA {

        public DFA40(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 40;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "1139:4: ( (lv_triggerDelay_4_0= RULE_INT ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA40_1 = input.LA(1);

                         
                        int index40_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_InternalSCTX()) ) {s = 21;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index40_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 40, _s, input);
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_33s = "\1\4\5\uffff\13\0\5\uffff";
    static final String dfa_34s = "\1\u0095\5\uffff\13\0\5\uffff";
    static final String dfa_35s = "\1\uffff\1\1\23\uffff\1\2";
    static final String dfa_36s = "\6\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\5\uffff}>";
    static final String[] dfa_37s = {
            "\1\1\1\10\2\1\1\20\1\7\1\16\12\uffff\1\1\11\uffff\1\6\1\uffff\1\1\56\uffff\1\11\4\uffff\1\13\10\uffff\1\1\7\uffff\1\12\2\uffff\1\1\1\17\46\uffff\1\14\1\1\1\15\1\uffff\1\1",
=======
    static final String dfa_33s = "\1\4\5\uffff\13\0\3\uffff";
    static final String dfa_34s = "\1\u008f\5\uffff\13\0\3\uffff";
    static final String dfa_35s = "\1\uffff\1\1\21\uffff\1\2";
    static final String dfa_36s = "\6\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\3\uffff}>";
    static final String[] dfa_37s = {
            "\1\1\1\10\2\1\1\20\1\7\1\16\12\uffff\1\1\11\uffff\1\6\1\uffff\1\1\55\uffff\1\11\4\uffff\1\13\10\uffff\1\1\4\uffff\1\12\3\uffff\1\17\46\uffff\1\14\1\1\1\15",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_33 = DFA.unpackEncodedStringToUnsignedChars(dfa_33s);
    static final char[] dfa_34 = DFA.unpackEncodedStringToUnsignedChars(dfa_34s);
    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[][] dfa_37 = unpackEncodedStringArray(dfa_37s);

    class DFA41 extends DFA {

        public DFA41(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 41;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_33;
            this.max = dfa_34;
            this.accept = dfa_35;
            this.special = dfa_36;
            this.transition = dfa_37;
        }
        public String getDescription() {
            return "1157:4: ( ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) | ( (lv_trigger_6_0= ruleAtomicExpression ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA41_6 = input.LA(1);

                         
                        int index41_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred45_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index41_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA41_7 = input.LA(1);

                         
                        int index41_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred45_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index41_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA41_8 = input.LA(1);

                         
                        int index41_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred45_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index41_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA41_9 = input.LA(1);

                         
                        int index41_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred45_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index41_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA41_10 = input.LA(1);

                         
                        int index41_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred45_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index41_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA41_11 = input.LA(1);

                         
                        int index41_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred45_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index41_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA41_12 = input.LA(1);

                         
                        int index41_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred45_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index41_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA41_13 = input.LA(1);

                         
                        int index41_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred45_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index41_13);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA41_14 = input.LA(1);

                         
                        int index41_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred45_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index41_14);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA41_15 = input.LA(1);

                         
                        int index41_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred45_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index41_15);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA41_16 = input.LA(1);

                         
                        int index41_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred45_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index41_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 41, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_38s = "\55\uffff";
    static final String dfa_39s = "\1\12\13\uffff\2\0\37\uffff";
<<<<<<< HEAD
    static final String dfa_40s = "\1\u009d\13\uffff\2\0\37\uffff";
    static final String dfa_41s = "\1\uffff\1\2\25\uffff\1\1\25\uffff";
    static final String dfa_42s = "\14\uffff\1\0\1\1\37\uffff}>";
    static final String[] dfa_43s = {
            "\1\14\14\uffff\5\1\1\uffff\1\27\17\uffff\2\1\2\uffff\1\1\2\uffff\1\1\1\uffff\7\1\6\27\2\uffff\1\27\10\uffff\3\27\31\uffff\1\15\2\uffff\4\1\3\uffff\6\27\34\uffff\2\27\3\uffff\3\27",
=======
    static final String dfa_40s = "\1\u0099\13\uffff\2\0\37\uffff";
    static final String dfa_41s = "\1\uffff\1\2\25\uffff\1\1\25\uffff";
    static final String dfa_42s = "\14\uffff\1\0\1\1\37\uffff}>";
    static final String[] dfa_43s = {
            "\1\14\14\uffff\5\1\1\uffff\1\27\17\uffff\2\1\2\uffff\1\1\1\uffff\1\1\1\uffff\7\1\6\27\2\uffff\1\27\10\uffff\3\27\26\uffff\1\15\2\uffff\4\1\3\uffff\6\27\34\uffff\2\27\3\uffff\3\27",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final char[] dfa_39 = DFA.unpackEncodedStringToUnsignedChars(dfa_39s);
    static final char[] dfa_40 = DFA.unpackEncodedStringToUnsignedChars(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final short[][] dfa_43 = unpackEncodedStringArray(dfa_43s);

    class DFA65 extends DFA {

        public DFA65(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 65;
            this.eot = dfa_38;
            this.eof = dfa_38;
            this.min = dfa_39;
            this.max = dfa_40;
            this.accept = dfa_41;
            this.special = dfa_42;
            this.transition = dfa_43;
        }
        public String getDescription() {
            return "()* loopback of 1816:7: ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA65_12 = input.LA(1);

                         
                        int index65_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalSCTX()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index65_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA65_13 = input.LA(1);

                         
                        int index65_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalSCTX()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index65_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 65, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_44s = {
<<<<<<< HEAD
            "\1\1\14\uffff\5\3\21\uffff\2\3\2\uffff\1\3\2\uffff\1\4\1\uffff\7\4\55\uffff\1\2\2\uffff\4\4",
            "\1\1\14\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\5",
            "",
            "",
            "\1\11\1\12\2\3\1\uffff\1\13\1\1\12\uffff\1\3\1\uffff\5\3\10\uffff\1\14\10\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\6\12\uffff\1\7\12\uffff\1\10\1\2\2\uffff\4\4",
            "\1\15",
            "\1\15\2\3",
            "\1\16",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\20\12\uffff\1\21\12\uffff\1\22\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\23",
            "\1\11\1\12\2\3\1\uffff\1\13\1\1\12\uffff\1\3\1\uffff\5\3\10\uffff\1\14\10\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\6\12\uffff\1\7\12\uffff\1\10\1\2\2\uffff\4\4",
            "\1\11\1\12\2\3\1\uffff\1\13\1\1\12\uffff\1\3\1\uffff\5\3\10\uffff\1\14\10\uffff\2\3\2\uffff\1\3\12\uffff\1\4\41\uffff\1\3\13\uffff\1\2\2\uffff\4\4",
            "\1\24\1\25\2\3\1\uffff\1\26\124\uffff\1\3",
            "\1\27",
            "\1\27",
            "\1\30",
            "\1\34\55\uffff\1\31\12\uffff\1\32\12\uffff\1\33",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\35\12\uffff\1\36\12\uffff\1\37\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\20\12\uffff\1\21\12\uffff\1\22\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\40",
            "\1\40",
            "\1\41",
            "\1\42\1\43\2\3\1\uffff\1\44\124\uffff\1\3",
            "\1\45",
            "\1\45",
            "\1\46",
            "\1\34\55\uffff\1\31\12\uffff\1\32\12\uffff\1\33",
            "\1\34",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\50\12\uffff\1\51\12\uffff\1\52\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\35\12\uffff\1\36\12\uffff\1\37\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\53\1\54\2\3\1\uffff\1\55\124\uffff\1\3",
            "\1\56",
            "\1\56",
            "\1\57",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\60\12\uffff\1\61\12\uffff\1\62\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\50\12\uffff\1\51\12\uffff\1\52\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4",
            "\1\63",
            "\1\63",
            "\1\64",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\26\uffff\1\60\12\uffff\1\61\12\uffff\1\62\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\12\uffff\1\4\55\uffff\1\2\2\uffff\4\4"
=======
            "\1\1\14\uffff\5\3\21\uffff\2\3\2\uffff\1\3\1\uffff\1\4\1\uffff\7\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\14\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\5",
            "",
            "",
            "\1\11\1\12\2\3\1\uffff\1\13\1\1\12\uffff\1\3\1\uffff\5\3\10\uffff\1\14\10\uffff\2\3\2\uffff\1\3\11\uffff\1\4\26\uffff\1\6\12\uffff\1\7\7\uffff\1\10\1\2\2\uffff\4\4",
            "\1\15",
            "\1\15\2\3",
            "\1\16",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\26\uffff\1\20\12\uffff\1\21\7\uffff\1\22\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\23",
            "\1\11\1\12\2\3\1\uffff\1\13\1\1\12\uffff\1\3\1\uffff\5\3\10\uffff\1\14\10\uffff\2\3\2\uffff\1\3\11\uffff\1\4\26\uffff\1\6\12\uffff\1\7\7\uffff\1\10\1\2\2\uffff\4\4",
            "\1\11\1\12\2\3\1\uffff\1\13\1\1\12\uffff\1\3\1\uffff\5\3\10\uffff\1\14\10\uffff\2\3\2\uffff\1\3\11\uffff\1\4\41\uffff\1\3\10\uffff\1\2\2\uffff\4\4",
            "\1\24\1\25\2\3\1\uffff\1\26\123\uffff\1\3",
            "\1\27",
            "\1\27",
            "\1\30",
            "\1\34\54\uffff\1\31\12\uffff\1\32\7\uffff\1\33",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\26\uffff\1\35\12\uffff\1\36\7\uffff\1\37\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\26\uffff\1\20\12\uffff\1\21\7\uffff\1\22\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\40",
            "\1\40",
            "\1\41",
            "\1\42\1\43\2\3\1\uffff\1\44\123\uffff\1\3",
            "\1\45",
            "\1\45",
            "\1\46",
            "\1\34\54\uffff\1\31\12\uffff\1\32\7\uffff\1\33",
            "\1\34",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\26\uffff\1\50\12\uffff\1\51\7\uffff\1\52\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\26\uffff\1\35\12\uffff\1\36\7\uffff\1\37\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\53\1\54\2\3\1\uffff\1\55\123\uffff\1\3",
            "\1\56",
            "\1\56",
            "\1\57",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\26\uffff\1\60\12\uffff\1\61\7\uffff\1\62\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\26\uffff\1\50\12\uffff\1\51\7\uffff\1\52\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4",
            "\1\63",
            "\1\63",
            "\1\64",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\26\uffff\1\60\12\uffff\1\61\7\uffff\1\62\1\2\2\uffff\4\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\21\uffff\2\3\2\uffff\1\3\11\uffff\1\4\52\uffff\1\2\2\uffff\4\4"
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    };
    static final short[][] dfa_44 = unpackEncodedStringArray(dfa_44s);

    class DFA66 extends DFA {

        public DFA66(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 66;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_19;
            this.max = dfa_20;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_44;
        }
        public String getDescription() {
            return "()* loopback of 1835:7: ( (lv_actions_27_0= ruleLocalAction ) )*";
        }
    }
    static final String dfa_45s = "\13\uffff";
    static final String dfa_46s = "\1\12\2\0\1\uffff\1\0\6\uffff";
<<<<<<< HEAD
    static final String dfa_47s = "\1\152\2\0\1\uffff\1\0\6\uffff";
    static final String dfa_48s = "\3\uffff\1\1\3\uffff\1\2\3\uffff";
    static final String dfa_49s = "\1\uffff\1\0\1\1\1\uffff\1\2\6\uffff}>";
    static final String[] dfa_50s = {
            "\1\1\14\uffff\1\7\1\4\3\7\21\uffff\2\3\2\uffff\1\3\70\uffff\1\2",
=======
    static final String dfa_47s = "\1\146\2\0\1\uffff\1\0\6\uffff";
    static final String dfa_48s = "\3\uffff\1\1\3\uffff\1\2\3\uffff";
    static final String dfa_49s = "\1\uffff\1\0\1\1\1\uffff\1\2\6\uffff}>";
    static final String[] dfa_50s = {
            "\1\1\14\uffff\1\7\1\4\3\7\21\uffff\2\3\2\uffff\1\3\64\uffff\1\2",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final char[] dfa_46 = DFA.unpackEncodedStringToUnsignedChars(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[][] dfa_50 = unpackEncodedStringArray(dfa_50s);

    class DFA68 extends DFA {

        public DFA68(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 68;
            this.eot = dfa_45;
            this.eof = dfa_45;
            this.min = dfa_46;
            this.max = dfa_47;
            this.accept = dfa_48;
            this.special = dfa_49;
            this.transition = dfa_50;
        }
        public String getDescription() {
            return "1854:7: ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA68_1 = input.LA(1);

                         
                        int index68_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index68_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA68_2 = input.LA(1);

                         
                        int index68_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index68_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA68_4 = input.LA(1);

                         
                        int index68_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index68_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 68, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_51s = "\57\uffff";
    static final String dfa_52s = "\1\1\56\uffff";
    static final String dfa_53s = "\1\12\13\uffff\2\0\41\uffff";
<<<<<<< HEAD
    static final String dfa_54s = "\1\u009d\13\uffff\2\0\41\uffff";
    static final String dfa_55s = "\1\uffff\1\2\27\uffff\1\1\25\uffff";
    static final String dfa_56s = "\14\uffff\1\0\1\1\41\uffff}>";
    static final String[] dfa_57s = {
            "\1\14\13\uffff\6\1\1\uffff\1\31\17\uffff\2\1\2\uffff\1\1\2\uffff\1\1\1\uffff\7\1\6\31\2\uffff\1\31\10\uffff\3\31\31\uffff\1\15\2\uffff\4\1\3\uffff\6\31\34\uffff\2\31\3\uffff\3\31",
=======
    static final String dfa_54s = "\1\u0099\13\uffff\2\0\41\uffff";
    static final String dfa_55s = "\1\uffff\1\2\27\uffff\1\1\25\uffff";
    static final String dfa_56s = "\14\uffff\1\0\1\1\41\uffff}>";
    static final String[] dfa_57s = {
            "\1\14\13\uffff\6\1\1\uffff\1\31\17\uffff\2\1\2\uffff\1\1\1\uffff\1\1\1\uffff\7\1\6\31\2\uffff\1\31\10\uffff\3\31\26\uffff\1\15\2\uffff\4\1\3\uffff\6\31\34\uffff\2\31\3\uffff\3\31",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[][] dfa_57 = unpackEncodedStringArray(dfa_57s);

    class DFA69 extends DFA {

        public DFA69(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 69;
            this.eot = dfa_51;
            this.eof = dfa_52;
            this.min = dfa_53;
            this.max = dfa_54;
            this.accept = dfa_55;
            this.special = dfa_56;
            this.transition = dfa_57;
        }
        public String getDescription() {
            return "()* loopback of 1906:7: ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA69_12 = input.LA(1);

                         
                        int index69_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalSCTX()) ) {s = 25;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA69_13 = input.LA(1);

                         
                        int index69_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalSCTX()) ) {s = 25;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 69, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_58s = "\1\3\64\uffff";
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);

    class DFA70 extends DFA {

        public DFA70(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 70;
            this.eot = dfa_7;
            this.eof = dfa_58;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "()* loopback of 1925:7: ( (lv_actions_33_0= ruleLocalAction ) )*";
        }
    }
    static final String dfa_59s = "\15\uffff";
    static final String dfa_60s = "\1\1\14\uffff";
    static final String dfa_61s = "\1\12\1\uffff\2\0\1\uffff\1\0\7\uffff";
<<<<<<< HEAD
    static final String dfa_62s = "\1\152\1\uffff\2\0\1\uffff\1\0\7\uffff";
    static final String dfa_63s = "\1\uffff\1\2\7\uffff\1\1\3\uffff";
    static final String dfa_64s = "\2\uffff\1\0\1\1\1\uffff\1\2\7\uffff}>";
    static final String[] dfa_65s = {
            "\1\2\13\uffff\1\1\1\11\1\5\3\11\21\uffff\2\1\2\uffff\1\1\70\uffff\1\3",
=======
    static final String dfa_62s = "\1\146\1\uffff\2\0\1\uffff\1\0\7\uffff";
    static final String dfa_63s = "\1\uffff\1\2\7\uffff\1\1\3\uffff";
    static final String dfa_64s = "\2\uffff\1\0\1\1\1\uffff\1\2\7\uffff}>";
    static final String[] dfa_65s = {
            "\1\2\13\uffff\1\1\1\11\1\5\3\11\21\uffff\2\1\2\uffff\1\1\64\uffff\1\3",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final char[] dfa_61 = DFA.unpackEncodedStringToUnsignedChars(dfa_61s);
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[][] dfa_65 = unpackEncodedStringArray(dfa_65s);

    class DFA71 extends DFA {

        public DFA71(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 71;
            this.eot = dfa_59;
            this.eof = dfa_60;
            this.min = dfa_61;
            this.max = dfa_62;
            this.accept = dfa_63;
            this.special = dfa_64;
            this.transition = dfa_65;
        }
        public String getDescription() {
            return "()* loopback of 1944:7: ( (lv_states_34_0= ruleState ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA71_2 = input.LA(1);

                         
                        int index71_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalSCTX()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA71_3 = input.LA(1);

                         
                        int index71_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalSCTX()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA71_5 = input.LA(1);

                         
                        int index71_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalSCTX()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 71, _s, input);
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_66s = "\33\uffff";
    static final String dfa_67s = "\1\5\2\0\30\uffff";
    static final String dfa_68s = "\1\u009d\2\0\30\uffff";
    static final String dfa_69s = "\3\uffff\1\2\2\uffff\1\1\24\uffff";
    static final String dfa_70s = "\1\uffff\1\0\1\1\30\uffff}>";
    static final String[] dfa_71s = {
            "\1\3\4\uffff\1\1\13\uffff\1\3\6\uffff\1\6\25\uffff\1\3\11\uffff\6\6\13\uffff\3\6\31\uffff\1\2\11\uffff\6\6\34\uffff\2\6\3\uffff\3\6",
=======
    static final String dfa_66s = "\32\uffff";
    static final String dfa_67s = "\1\5\2\0\27\uffff";
    static final String dfa_68s = "\1\u0099\2\0\27\uffff";
    static final String dfa_69s = "\3\uffff\1\2\1\uffff\1\1\24\uffff";
    static final String dfa_70s = "\1\uffff\1\0\1\1\27\uffff}>";
    static final String[] dfa_71s = {
            "\1\3\4\uffff\1\1\13\uffff\1\3\6\uffff\1\5\36\uffff\6\5\13\uffff\3\5\26\uffff\1\2\11\uffff\6\5\34\uffff\2\5\3\uffff\3\5",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);
    static final char[] dfa_67 = DFA.unpackEncodedStringToUnsignedChars(dfa_67s);
    static final char[] dfa_68 = DFA.unpackEncodedStringToUnsignedChars(dfa_68s);
    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final short[][] dfa_71 = unpackEncodedStringArray(dfa_71s);

    class DFA83 extends DFA {

        public DFA83(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 83;
            this.eot = dfa_66;
            this.eof = dfa_66;
            this.min = dfa_67;
            this.max = dfa_68;
            this.accept = dfa_69;
            this.special = dfa_70;
            this.transition = dfa_71;
        }
        public String getDescription() {
            return "()* loopback of 2188:5: ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA83_1 = input.LA(1);

                         
                        int index83_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSCTX()) ) {s = 5;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index83_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA83_2 = input.LA(1);

                         
                        int index83_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSCTX()) ) {s = 5;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index83_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 83, _s, input);
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_72s = "\40\uffff";
    static final String dfa_73s = "\1\3\37\uffff";
    static final String dfa_74s = "\1\5\2\0\35\uffff";
    static final String dfa_75s = "\1\u009d\2\0\35\uffff";
    static final String dfa_76s = "\3\uffff\1\2\7\uffff\1\1\24\uffff";
    static final String dfa_77s = "\1\uffff\1\0\1\1\35\uffff}>";
    static final String[] dfa_78s = {
            "\1\3\4\uffff\1\1\13\uffff\1\3\1\uffff\1\3\4\uffff\1\13\17\uffff\2\3\2\uffff\1\3\1\uffff\1\3\11\uffff\6\13\13\uffff\3\13\31\uffff\1\2\11\uffff\6\13\34\uffff\2\13\3\uffff\3\13",
=======
    static final String dfa_72s = "\37\uffff";
    static final String dfa_73s = "\1\3\36\uffff";
    static final String dfa_74s = "\1\5\2\0\34\uffff";
    static final String dfa_75s = "\1\u0099\2\0\34\uffff";
    static final String dfa_76s = "\3\uffff\1\2\6\uffff\1\1\24\uffff";
    static final String dfa_77s = "\1\uffff\1\0\1\1\34\uffff}>";
    static final String[] dfa_78s = {
            "\1\3\4\uffff\1\1\13\uffff\1\3\1\uffff\1\3\4\uffff\1\12\17\uffff\2\3\2\uffff\1\3\12\uffff\6\12\13\uffff\3\12\26\uffff\1\2\11\uffff\6\12\34\uffff\2\12\3\uffff\3\12",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final char[] dfa_74 = DFA.unpackEncodedStringToUnsignedChars(dfa_74s);
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[][] dfa_78 = unpackEncodedStringArray(dfa_78s);

    class DFA85 extends DFA {

        public DFA85(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 85;
            this.eot = dfa_72;
            this.eof = dfa_73;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_78;
        }
        public String getDescription() {
            return "()* loopback of 2237:5: ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA85_1 = input.LA(1);

                         
                        int index85_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSCTX()) ) {s = 10;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index85_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA85_2 = input.LA(1);

                         
                        int index85_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSCTX()) ) {s = 10;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index85_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 85, _s, input);
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_79s = "\1\1\12\uffff";
    static final String dfa_80s = "\1\5\1\uffff\2\0\7\uffff";
    static final String dfa_81s = "\1\152\1\uffff\2\0\7\uffff";
    static final String dfa_82s = "\1\uffff\1\2\7\uffff\1\1\1\uffff";
    static final String dfa_83s = "\2\uffff\1\0\1\1\7\uffff}>";
    static final String[] dfa_84s = {
            "\1\11\4\uffff\1\2\13\uffff\1\1\1\uffff\1\1\24\uffff\2\1\2\uffff\1\1\1\uffff\1\11\66\uffff\1\3",
=======
    static final String dfa_79s = "\12\uffff";
    static final String dfa_80s = "\1\1\11\uffff";
    static final String dfa_81s = "\1\5\1\uffff\2\0\6\uffff";
    static final String dfa_82s = "\1\146\1\uffff\2\0\6\uffff";
    static final String dfa_83s = "\1\uffff\1\2\7\uffff\1\1";
    static final String dfa_84s = "\2\uffff\1\0\1\1\6\uffff}>";
    static final String[] dfa_85s = {
            "\1\11\4\uffff\1\2\13\uffff\1\1\1\uffff\1\1\24\uffff\2\1\2\uffff\1\1\64\uffff\1\3",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_79 = DFA.unpackEncodedString(dfa_79s);
    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final char[] dfa_81 = DFA.unpackEncodedStringToUnsignedChars(dfa_81s);
    static final char[] dfa_82 = DFA.unpackEncodedStringToUnsignedChars(dfa_82s);
    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final short[][] dfa_85 = unpackEncodedStringArray(dfa_85s);

    class DFA86 extends DFA {

        public DFA86(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 86;
            this.eot = dfa_79;
            this.eof = dfa_80;
            this.min = dfa_81;
            this.max = dfa_82;
            this.accept = dfa_83;
            this.special = dfa_84;
            this.transition = dfa_85;
        }
        public String getDescription() {
            return "()* loopback of 2256:5: ( (lv_equations_21_0= ruleAssignment ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA86_2 = input.LA(1);

                         
                        int index86_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred91_InternalSCTX()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index86_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA86_3 = input.LA(1);

                         
                        int index86_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred91_InternalSCTX()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index86_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 86, _s, input);
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_85s = "\1\12\1\uffff\4\66\6\uffff";
    static final String dfa_86s = "\1\160\1\uffff\4\74\6\uffff";
    static final String dfa_87s = "\1\uffff\1\1\4\uffff\1\2\1\3\1\4\1\5\1\6\1\7";
    static final String dfa_88s = "\14\uffff}>";
    static final String[] dfa_89s = {
            "\1\13\51\uffff\1\1\1\uffff\1\6\1\7\2\10\1\11\1\12\1\13\55\uffff\1\13\2\uffff\1\2\1\3\1\4\1\5",
=======
    static final String dfa_86s = "\1\12\1\uffff\4\65\6\uffff";
    static final String dfa_87s = "\1\154\1\uffff\4\73\6\uffff";
    static final String dfa_88s = "\1\uffff\1\1\4\uffff\1\2\1\3\1\4\1\5\1\6\1\7";
    static final String dfa_89s = "\14\uffff}>";
    static final String[] dfa_90s = {
            "\1\13\50\uffff\1\1\1\uffff\1\6\1\7\2\10\1\11\1\12\1\13\52\uffff\1\13\2\uffff\1\2\1\3\1\4\1\5",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "",
            "\1\6\1\uffff\2\10\2\uffff\1\13",
            "\1\6\1\uffff\2\10\2\uffff\1\13",
            "\1\6\1\uffff\2\10\2\uffff\1\13",
            "\1\6\1\uffff\2\10\2\uffff\1\13",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_86 = DFA.unpackEncodedStringToUnsignedChars(dfa_86s);
    static final char[] dfa_87 = DFA.unpackEncodedStringToUnsignedChars(dfa_87s);
    static final short[] dfa_88 = DFA.unpackEncodedString(dfa_88s);
    static final short[] dfa_89 = DFA.unpackEncodedString(dfa_89s);
    static final short[][] dfa_90 = unpackEncodedStringArray(dfa_90s);

    class DFA89 extends DFA {

        public DFA89(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 89;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_86;
            this.max = dfa_87;
            this.accept = dfa_88;
            this.special = dfa_89;
            this.transition = dfa_90;
        }
        public String getDescription() {
            return "2373:2: (this_EntryAction_0= ruleEntryAction | this_DuringAction_1= ruleDuringAction | this_ExitAction_2= ruleExitAction | this_SuspendAction_3= ruleSuspendAction | this_PrecedingAction_4= rulePrecedingAction | this_SucceedingAction_5= ruleSucceedingAction | this_PeriodAction_6= rulePeriodAction )";
        }
    }

    class DFA96 extends DFA {

        public DFA96(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 96;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "2670:4: ( (lv_triggerDelay_4_0= RULE_INT ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA96_1 = input.LA(1);

                         
                        int index96_1 = input.index();
                        input.rewind();
                        s = -1;
<<<<<<< HEAD
                        if ( (synpred108_InternalSCTX()) ) {s = 21;}
=======
                        if ( (synpred105_InternalSCTX()) ) {s = 19;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index96_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 96, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA109 extends DFA {

        public DFA109(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 109;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "3033:4: ( (lv_triggerDelay_5_0= RULE_INT ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA109_1 = input.LA(1);

                         
                        int index109_1 = input.index();
                        input.rewind();
                        s = -1;
<<<<<<< HEAD
                        if ( (synpred121_InternalSCTX()) ) {s = 21;}
=======
                        if ( (synpred118_InternalSCTX()) ) {s = 19;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index109_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 109, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_91s = "\1\12\27\0\2\uffff";
<<<<<<< HEAD
    static final String dfa_92s = "\1\u009d\27\0\2\uffff";
    static final String dfa_93s = "\30\uffff\1\1\1\2";
    static final String dfa_94s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\2\uffff}>";
    static final String[] dfa_95s = {
            "\1\1\22\uffff\1\25\37\uffff\1\6\1\7\1\10\1\11\1\12\1\22\13\uffff\1\13\1\23\1\24\31\uffff\1\2\11\uffff\1\14\1\15\1\16\1\17\1\20\1\21\34\uffff\1\27\1\26\3\uffff\1\3\1\4\1\5",
=======
    static final String dfa_92s = "\1\u0099\27\0\2\uffff";
    static final String dfa_93s = "\30\uffff\1\1\1\2";
    static final String dfa_94s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\2\uffff}>";
    static final String[] dfa_95s = {
            "\1\1\22\uffff\1\25\36\uffff\1\6\1\7\1\10\1\11\1\12\1\22\13\uffff\1\13\1\23\1\24\26\uffff\1\2\11\uffff\1\14\1\15\1\16\1\17\1\20\1\21\34\uffff\1\27\1\26\3\uffff\1\3\1\4\1\5",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_91 = DFA.unpackEncodedStringToUnsignedChars(dfa_91s);
    static final char[] dfa_92 = DFA.unpackEncodedStringToUnsignedChars(dfa_92s);
    static final short[] dfa_93 = DFA.unpackEncodedString(dfa_93s);
    static final short[] dfa_94 = DFA.unpackEncodedString(dfa_94s);
    static final short[][] dfa_95 = unpackEncodedStringArray(dfa_95s);

    class DFA126 extends DFA {

        public DFA126(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 126;
            this.eot = dfa_66;
            this.eof = dfa_66;
            this.min = dfa_91;
            this.max = dfa_92;
            this.accept = dfa_93;
            this.special = dfa_94;
            this.transition = dfa_95;
        }
        public String getDescription() {
            return "3563:2: (this_Declaration_0= superDeclaration | this_DeclarationWOSemicolon_1= ruleDeclarationWOSemicolon )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA126_1 = input.LA(1);

                         
                        int index126_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA126_2 = input.LA(1);

                         
                        int index126_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA126_3 = input.LA(1);

                         
                        int index126_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA126_4 = input.LA(1);

                         
                        int index126_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA126_5 = input.LA(1);

                         
                        int index126_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA126_6 = input.LA(1);

                         
                        int index126_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA126_7 = input.LA(1);

                         
                        int index126_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA126_8 = input.LA(1);

                         
                        int index126_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA126_9 = input.LA(1);

                         
                        int index126_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA126_10 = input.LA(1);

                         
                        int index126_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA126_11 = input.LA(1);

                         
                        int index126_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA126_12 = input.LA(1);

                         
                        int index126_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA126_13 = input.LA(1);

                         
                        int index126_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA126_14 = input.LA(1);

                         
                        int index126_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA126_15 = input.LA(1);

                         
                        int index126_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA126_16 = input.LA(1);

                         
                        int index126_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA126_17 = input.LA(1);

                         
                        int index126_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA126_18 = input.LA(1);

                         
                        int index126_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA126_19 = input.LA(1);

                         
                        int index126_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA126_20 = input.LA(1);

                         
                        int index126_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA126_21 = input.LA(1);

                         
                        int index126_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA126_22 = input.LA(1);

                         
                        int index126_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA126_23 = input.LA(1);

                         
                        int index126_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 126, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_96s = "\1\5\3\0\11\uffff";
<<<<<<< HEAD
    static final String dfa_97s = "\1\152\3\0\11\uffff";
    static final String dfa_98s = "\4\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\1\1\2\1\3";
    static final String dfa_99s = "\1\uffff\1\0\1\1\1\2\11\uffff}>";
    static final String[] dfa_100s = {
            "\1\3\4\uffff\1\1\12\uffff\1\6\20\uffff\1\4\10\uffff\1\10\30\uffff\1\5\1\7\1\uffff\1\11\36\uffff\1\2",
=======
    static final String dfa_97s = "\1\146\3\0\11\uffff";
    static final String dfa_98s = "\4\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\1\1\2\1\3";
    static final String dfa_99s = "\1\uffff\1\0\1\1\1\2\11\uffff}>";
    static final String[] dfa_100s = {
            "\1\3\4\uffff\1\1\12\uffff\1\6\20\uffff\1\4\10\uffff\1\10\27\uffff\1\5\1\7\1\uffff\1\11\33\uffff\1\2",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_96 = DFA.unpackEncodedStringToUnsignedChars(dfa_96s);
    static final char[] dfa_97 = DFA.unpackEncodedStringToUnsignedChars(dfa_97s);
    static final short[] dfa_98 = DFA.unpackEncodedString(dfa_98s);
    static final short[] dfa_99 = DFA.unpackEncodedString(dfa_99s);
    static final short[][] dfa_100 = unpackEncodedStringArray(dfa_100s);

    class DFA127 extends DFA {

        public DFA127(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 127;
            this.eot = dfa_59;
            this.eof = dfa_59;
            this.min = dfa_96;
            this.max = dfa_97;
            this.accept = dfa_98;
            this.special = dfa_99;
            this.transition = dfa_100;
        }
        public String getDescription() {
            return "3605:2: (this_SclAssignment_0= ruleSclAssignment | this_SclPostfixAssignment_1= ruleSclPostfixAssignment | this_Label_2= ruleLabel | this_Conditional_3= ruleConditional | this_Goto_4= ruleGoto | this_ScopeStatement_5= ruleScopeStatement | this_Return_6= ruleReturn | this_ForLoop_7= ruleForLoop | this_WhileLoop_8= ruleWhileLoop )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA127_1 = input.LA(1);

                         
                        int index127_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSCTX()) ) {s = 10;}

                        else if ( (synpred137_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred138_InternalSCTX()) ) {s = 12;}

                        else if ( (synpred139_InternalSCTX()) ) {s = 4;}

                        else if ( (synpred140_InternalSCTX()) ) {s = 5;}

                        else if ( (synpred141_InternalSCTX()) ) {s = 6;}

                        else if ( (synpred142_InternalSCTX()) ) {s = 7;}

                         
                        input.seek(index127_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA127_2 = input.LA(1);

                         
                        int index127_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSCTX()) ) {s = 10;}

                        else if ( (synpred137_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred138_InternalSCTX()) ) {s = 12;}

                        else if ( (synpred139_InternalSCTX()) ) {s = 4;}

                        else if ( (synpred140_InternalSCTX()) ) {s = 5;}

                        else if ( (synpred141_InternalSCTX()) ) {s = 6;}

                        else if ( (synpred142_InternalSCTX()) ) {s = 7;}

                         
                        input.seek(index127_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA127_3 = input.LA(1);

                         
                        int index127_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSCTX()) ) {s = 10;}

                        else if ( (synpred137_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred138_InternalSCTX()) ) {s = 12;}

                         
                        input.seek(index127_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 127, _s, input);
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String[] dfa_101s = {
            "\1\3\4\uffff\1\1\12\uffff\2\3\6\uffff\1\13\10\uffff\1\3\10\uffff\1\3\15\uffff\6\13\5\uffff\2\3\1\uffff\1\3\2\uffff\3\13\31\uffff\1\2\11\uffff\6\13\34\uffff\2\13\3\uffff\3\13",
=======
    static final String dfa_101s = "\40\uffff";
    static final String dfa_102s = "\1\5\2\0\35\uffff";
    static final String dfa_103s = "\1\u0099\2\0\35\uffff";
    static final String dfa_104s = "\3\uffff\1\2\7\uffff\1\1\24\uffff";
    static final String dfa_105s = "\1\uffff\1\0\1\1\35\uffff}>";
    static final String[] dfa_106s = {
            "\1\3\4\uffff\1\1\12\uffff\2\3\6\uffff\1\13\10\uffff\1\3\10\uffff\1\3\14\uffff\6\13\5\uffff\2\3\1\uffff\1\3\2\uffff\3\13\26\uffff\1\2\11\uffff\6\13\34\uffff\2\13\3\uffff\3\13",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_101 = DFA.unpackEncodedString(dfa_101s);
    static final char[] dfa_102 = DFA.unpackEncodedStringToUnsignedChars(dfa_102s);
    static final char[] dfa_103 = DFA.unpackEncodedStringToUnsignedChars(dfa_103s);
    static final short[] dfa_104 = DFA.unpackEncodedString(dfa_104s);
    static final short[] dfa_105 = DFA.unpackEncodedString(dfa_105s);
    static final short[][] dfa_106 = unpackEncodedStringArray(dfa_106s);

    class DFA130 extends DFA {

        public DFA130(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 130;
            this.eot = dfa_101;
            this.eof = dfa_101;
            this.min = dfa_102;
            this.max = dfa_103;
            this.accept = dfa_104;
            this.special = dfa_105;
            this.transition = dfa_106;
        }
        public String getDescription() {
            return "()* loopback of 3807:3: ( (lv_declarations_3_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA130_1 = input.LA(1);

                         
                        int index130_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred146_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index130_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA130_2 = input.LA(1);

                         
                        int index130_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred146_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index130_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 130, _s, input);
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_102s = "\77\uffff";
    static final String dfa_103s = "\1\4\76\uffff";
    static final String dfa_104s = "\1\5\3\0\73\uffff";
    static final String dfa_105s = "\1\u009e\3\0\73\uffff";
    static final String dfa_106s = "\4\uffff\1\2\71\uffff\1\1";
    static final String dfa_107s = "\1\uffff\1\0\1\1\1\2\73\uffff}>";
    static final String[] dfa_108s = {
            "\1\3\2\uffff\1\4\1\uffff\1\1\1\4\11\uffff\7\4\1\uffff\1\4\10\uffff\1\4\6\uffff\3\4\1\uffff\1\4\1\uffff\2\4\1\uffff\15\4\2\uffff\1\4\2\uffff\2\4\1\uffff\6\4\3\uffff\2\4\24\uffff\1\2\2\uffff\4\4\3\uffff\6\4\34\uffff\2\4\3\uffff\4\4",
=======
    static final String dfa_107s = "\76\uffff";
    static final String dfa_108s = "\1\4\75\uffff";
    static final String dfa_109s = "\1\5\3\0\72\uffff";
    static final String dfa_110s = "\1\u009a\3\0\72\uffff";
    static final String dfa_111s = "\4\uffff\1\2\70\uffff\1\1";
    static final String dfa_112s = "\1\uffff\1\0\1\1\1\2\72\uffff}>";
    static final String[] dfa_113s = {
            "\1\3\2\uffff\1\4\1\uffff\1\1\1\4\11\uffff\7\4\1\uffff\1\4\10\uffff\1\4\6\uffff\3\4\1\uffff\1\4\1\uffff\1\4\1\uffff\15\4\2\uffff\1\4\2\uffff\2\4\1\uffff\6\4\3\uffff\2\4\21\uffff\1\2\2\uffff\4\4\3\uffff\6\4\34\uffff\2\4\3\uffff\4\4",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_107 = DFA.unpackEncodedString(dfa_107s);
    static final short[] dfa_108 = DFA.unpackEncodedString(dfa_108s);
    static final char[] dfa_109 = DFA.unpackEncodedStringToUnsignedChars(dfa_109s);
    static final char[] dfa_110 = DFA.unpackEncodedStringToUnsignedChars(dfa_110s);
    static final short[] dfa_111 = DFA.unpackEncodedString(dfa_111s);
    static final short[] dfa_112 = DFA.unpackEncodedString(dfa_112s);
    static final short[][] dfa_113 = unpackEncodedStringArray(dfa_113s);

    class DFA147 extends DFA {

        public DFA147(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 147;
            this.eot = dfa_107;
            this.eof = dfa_108;
            this.min = dfa_109;
            this.max = dfa_110;
            this.accept = dfa_111;
            this.special = dfa_112;
            this.transition = dfa_113;
        }
        public String getDescription() {
            return "4154:3: ( ( (lv_valuedObjects_20_0= ruleValuedObject ) ) (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA147_1 = input.LA(1);

                         
                        int index147_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_InternalSCTX()) ) {s = 61;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index147_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA147_2 = input.LA(1);

                         
                        int index147_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_InternalSCTX()) ) {s = 61;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index147_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA147_3 = input.LA(1);

                         
                        int index147_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_InternalSCTX()) ) {s = 61;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index147_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 147, _s, input);
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_109s = "\1\12\2\0\27\uffff";
    static final String dfa_110s = "\1\u009d\2\0\27\uffff";
    static final String dfa_111s = "\3\uffff\1\2\1\uffff\1\1\24\uffff";
    static final String dfa_112s = "\1\uffff\1\0\1\1\27\uffff}>";
    static final String[] dfa_113s = {
            "\1\1\14\uffff\1\3\3\uffff\1\3\1\uffff\1\5\37\uffff\6\5\13\uffff\3\5\31\uffff\1\2\11\uffff\6\5\34\uffff\2\5\3\uffff\3\5",
=======
    static final String dfa_114s = "\1\12\2\0\27\uffff";
    static final String[] dfa_115s = {
            "\1\1\14\uffff\1\3\3\uffff\1\3\1\uffff\1\5\36\uffff\6\5\13\uffff\3\5\26\uffff\1\2\11\uffff\6\5\34\uffff\2\5\3\uffff\3\5",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_114 = DFA.unpackEncodedStringToUnsignedChars(dfa_114s);
    static final short[][] dfa_115 = unpackEncodedStringArray(dfa_115s);

    class DFA150 extends DFA {

        public DFA150(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 150;
            this.eot = dfa_66;
            this.eof = dfa_66;
            this.min = dfa_114;
            this.max = dfa_68;
            this.accept = dfa_69;
            this.special = dfa_70;
            this.transition = dfa_115;
        }
        public String getDescription() {
            return "()* loopback of 4282:3: ( (lv_declarations_4_0= ruleDeclarationWOSemicolon ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA150_1 = input.LA(1);

                         
                        int index150_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalSCTX()) ) {s = 5;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index150_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA150_2 = input.LA(1);

                         
                        int index150_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalSCTX()) ) {s = 5;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index150_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 150, _s, input);
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_114s = "\1\152\1\uffff\1\152\1\5\1\uffff\1\152\1\5\1\7\1\6\1\5\5\152\1\151\1\136\2\5\1\6\2\5\1\6\1\136\5\152\1\151\1\45\3\152\2\5\1\6\1\136\2\5\1\6\7\152\2\5\1\6\2\152";
    static final String[] dfa_115s = {
            "\1\2\13\uffff\2\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\45\uffff\1\3",
            "",
            "\1\2\14\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\45\uffff\1\3",
            "\1\5",
            "",
            "\1\12\1\13\2\1\1\uffff\1\14\1\2\12\uffff\1\1\1\uffff\1\1\3\uffff\1\1\10\uffff\1\11\1\uffff\1\4\35\uffff\1\4\16\uffff\1\6\12\uffff\1\7\12\uffff\1\10\1\3",
            "\1\15",
            "\1\15\2\1",
            "\1\16",
            "\1\17",
            "\1\2\11\uffff\1\20\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\45\uffff\1\3",
            "\1\2\11\uffff\1\20\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\16\uffff\1\21\12\uffff\1\22\12\uffff\1\23\1\3",
            "\1\2\11\uffff\1\20\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\45\uffff\1\3",
            "\1\12\1\13\2\1\1\uffff\1\14\1\2\12\uffff\1\1\1\uffff\1\1\3\uffff\1\1\10\uffff\1\11\1\uffff\1\4\35\uffff\1\4\16\uffff\1\6\12\uffff\1\7\12\uffff\1\10\1\3",
            "\1\12\1\13\2\1\1\uffff\1\14\1\2\12\uffff\1\1\1\uffff\1\1\3\uffff\1\1\10\uffff\1\11\1\uffff\1\4\35\uffff\1\4\31\uffff\1\1\13\uffff\1\3",
            "\1\27\55\uffff\1\24\12\uffff\1\25\12\uffff\1\26",
            "\1\30\1\31\2\1\1\uffff\1\32\124\uffff\1\1",
            "\1\33",
            "\1\33",
            "\1\34",
            "\1\35",
            "\1\35",
            "\1\36",
            "\1\37\1\40\2\1\1\uffff\1\41\124\uffff\1\1",
            "\1\2\11\uffff\1\20\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\45\uffff\1\3",
            "\1\2\11\uffff\1\20\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\16\uffff\1\42\12\uffff\1\43\12\uffff\1\44\1\3",
            "\1\2\11\uffff\1\20\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\45\uffff\1\3",
            "\1\2\11\uffff\1\20\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\16\uffff\1\21\12\uffff\1\22\12\uffff\1\23\1\3",
            "\1\2\11\uffff\1\20\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\45\uffff\1\3",
            "\1\27\55\uffff\1\24\12\uffff\1\25\12\uffff\1\26",
            "\1\27",
            "\1\2\11\uffff\1\45\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\45\uffff\1\3",
            "\1\2\11\uffff\1\45\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\16\uffff\1\46\12\uffff\1\47\12\uffff\1\50\1\3",
            "\1\2\11\uffff\1\45\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\45\uffff\1\3",
            "\1\51",
            "\1\51",
            "\1\52",
            "\1\53\1\54\2\1\1\uffff\1\55\124\uffff\1\1",
            "\1\56",
            "\1\56",
            "\1\57",
            "\1\2\11\uffff\1\20\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\16\uffff\1\42\12\uffff\1\43\12\uffff\1\44\1\3",
            "\1\2\11\uffff\1\20\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\45\uffff\1\3",
            "\1\2\11\uffff\1\45\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\45\uffff\1\3",
            "\1\2\11\uffff\1\45\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\16\uffff\1\60\12\uffff\1\61\12\uffff\1\62\1\3",
            "\1\2\11\uffff\1\45\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\45\uffff\1\3",
            "\1\2\11\uffff\1\45\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\16\uffff\1\46\12\uffff\1\47\12\uffff\1\50\1\3",
            "\1\2\11\uffff\1\45\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\45\uffff\1\3",
            "\1\63",
            "\1\63",
            "\1\64",
            "\1\2\11\uffff\1\45\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\16\uffff\1\60\12\uffff\1\61\12\uffff\1\62\1\3",
            "\1\2\11\uffff\1\45\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\35\uffff\1\4\45\uffff\1\3"
    };
    static final char[] dfa_114 = DFA.unpackEncodedStringToUnsignedChars(dfa_114s);
    static final short[][] dfa_115 = unpackEncodedStringArray(dfa_115s);
=======
    static final String dfa_116s = "\1\146\1\uffff\1\146\1\5\1\uffff\1\146\1\5\1\7\1\6\3\146\1\5\2\146\1\135\2\5\1\6\1\145\5\146\2\5\1\6\1\135\2\5\1\6\1\145\1\45\5\146\1\135\2\5\1\6\5\146\2\5\1\6\2\146";
    static final String[] dfa_117s = {
            "\1\2\13\uffff\2\1\3\uffff\1\1\12\uffff\1\4\34\uffff\1\4\42\uffff\1\3",
            "",
            "\1\2\14\uffff\1\1\3\uffff\1\1\12\uffff\1\4\34\uffff\1\4\42\uffff\1\3",
            "\1\5",
            "",
            "\1\11\1\12\2\1\1\uffff\1\13\1\2\12\uffff\1\1\1\uffff\1\1\3\uffff\1\1\10\uffff\1\14\1\uffff\1\4\34\uffff\1\4\16\uffff\1\6\12\uffff\1\7\7\uffff\1\10\1\3",
            "\1\15",
            "\1\15\2\1",
            "\1\16",
            "\1\2\11\uffff\1\17\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\34\uffff\1\4\42\uffff\1\3",
            "\1\2\11\uffff\1\17\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\34\uffff\1\4\16\uffff\1\20\12\uffff\1\21\7\uffff\1\22\1\3",
            "\1\2\11\uffff\1\17\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\34\uffff\1\4\42\uffff\1\3",
            "\1\23",
            "\1\11\1\12\2\1\1\uffff\1\13\1\2\12\uffff\1\1\1\uffff\1\1\3\uffff\1\1\10\uffff\1\14\1\uffff\1\4\34\uffff\1\4\16\uffff\1\6\12\uffff\1\7\7\uffff\1\10\1\3",
            "\1\11\1\12\2\1\1\uffff\1\13\1\2\12\uffff\1\1\1\uffff\1\1\3\uffff\1\1\10\uffff\1\14\1\uffff\1\4\34\uffff\1\4\31\uffff\1\1\10\uffff\1\3",
            "\1\24\1\25\2\1\1\uffff\1\26\123\uffff\1\1",
            "\1\27",
            "\1\27",
            "\1\30",
            "\1\34\54\uffff\1\31\12\uffff\1\32\7\uffff\1\33",
            "\1\2\11\uffff\1\17\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\34\uffff\1\4\42\uffff\1\3",
            "\1\2\11\uffff\1\17\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\34\uffff\1\4\16\uffff\1\35\12\uffff\1\36\7\uffff\1\37\1\3",
            "\1\2\11\uffff\1\17\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\34\uffff\1\4\42\uffff\1\3",
            "\1\2\11\uffff\1\17\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\34\uffff\1\4\16\uffff\1\20\12\uffff\1\21\7\uffff\1\22\1\3",
            "\1\2\11\uffff\1\17\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\34\uffff\1\4\42\uffff\1\3",
            "\1\40",
            "\1\40",
            "\1\41",
            "\1\42\1\43\2\1\1\uffff\1\44\123\uffff\1\1",
            "\1\45",
            "\1\45",
            "\1\46",
            "\1\34\54\uffff\1\31\12\uffff\1\32\7\uffff\1\33",
            "\1\34",
            "\1\2\11\uffff\1\47\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\34\uffff\1\4\42\uffff\1\3",
            "\1\2\11\uffff\1\47\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\34\uffff\1\4\16\uffff\1\50\12\uffff\1\51\7\uffff\1\52\1\3",
            "\1\2\11\uffff\1\47\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\34\uffff\1\4\42\uffff\1\3",
            "\1\2\11\uffff\1\17\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\34\uffff\1\4\16\uffff\1\35\12\uffff\1\36\7\uffff\1\37\1\3",
            "\1\2\11\uffff\1\17\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\34\uffff\1\4\42\uffff\1\3",
            "\1\53\1\54\2\1\1\uffff\1\55\123\uffff\1\1",
            "\1\56",
            "\1\56",
            "\1\57",
            "\1\2\11\uffff\1\47\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\34\uffff\1\4\42\uffff\1\3",
            "\1\2\11\uffff\1\47\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\34\uffff\1\4\16\uffff\1\60\12\uffff\1\61\7\uffff\1\62\1\3",
            "\1\2\11\uffff\1\47\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\34\uffff\1\4\42\uffff\1\3",
            "\1\2\11\uffff\1\47\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\34\uffff\1\4\16\uffff\1\50\12\uffff\1\51\7\uffff\1\52\1\3",
            "\1\2\11\uffff\1\47\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\34\uffff\1\4\42\uffff\1\3",
            "\1\63",
            "\1\63",
            "\1\64",
            "\1\2\11\uffff\1\47\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\34\uffff\1\4\16\uffff\1\60\12\uffff\1\61\7\uffff\1\62\1\3",
            "\1\2\11\uffff\1\47\2\uffff\1\1\3\uffff\1\1\12\uffff\1\4\34\uffff\1\4\42\uffff\1\3"
    };
    static final char[] dfa_116 = DFA.unpackEncodedStringToUnsignedChars(dfa_116s);
    static final short[][] dfa_117 = unpackEncodedStringArray(dfa_117s);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

    class DFA155 extends DFA {

        public DFA155(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 155;
            this.eot = dfa_7;
            this.eof = dfa_22;
            this.min = dfa_23;
<<<<<<< HEAD
            this.max = dfa_114;
            this.accept = dfa_25;
            this.special = dfa_11;
            this.transition = dfa_115;
=======
            this.max = dfa_116;
            this.accept = dfa_25;
            this.special = dfa_11;
            this.transition = dfa_117;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public String getDescription() {
            return "()* loopback of 4416:3: ( (lv_outgoingTransitions_5_0= rulePolicyTransition ) )*";
        }
    }
<<<<<<< HEAD
    static final String dfa_116s = "\31\uffff";
    static final String dfa_117s = "\1\12\5\0\23\uffff";
    static final String dfa_118s = "\1\u009d\5\0\23\uffff";
    static final String dfa_119s = "\6\uffff\1\1\21\uffff\1\2";
    static final String dfa_120s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\23\uffff}>";
    static final String[] dfa_121s = {
            "\1\1\22\uffff\1\6\37\uffff\6\6\2\uffff\1\30\10\uffff\3\6\31\uffff\1\2\11\uffff\6\6\34\uffff\2\6\3\uffff\1\3\1\4\1\5",
=======
    static final String dfa_118s = "\31\uffff";
    static final String dfa_119s = "\1\12\5\0\23\uffff";
    static final String dfa_120s = "\1\u0099\5\0\23\uffff";
    static final String dfa_121s = "\6\uffff\1\1\21\uffff\1\2";
    static final String dfa_122s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\23\uffff}>";
    static final String[] dfa_123s = {
            "\1\1\22\uffff\1\6\36\uffff\6\6\2\uffff\1\30\10\uffff\3\6\26\uffff\1\2\11\uffff\6\6\34\uffff\2\6\3\uffff\1\3\1\4\1\5",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

<<<<<<< HEAD
    static final short[] dfa_116 = DFA.unpackEncodedString(dfa_116s);
    static final char[] dfa_117 = DFA.unpackEncodedStringToUnsignedChars(dfa_117s);
    static final char[] dfa_118 = DFA.unpackEncodedStringToUnsignedChars(dfa_118s);
    static final short[] dfa_119 = DFA.unpackEncodedString(dfa_119s);
    static final short[] dfa_120 = DFA.unpackEncodedString(dfa_120s);
    static final short[][] dfa_121 = unpackEncodedStringArray(dfa_121s);
=======
    static final short[] dfa_118 = DFA.unpackEncodedString(dfa_118s);
    static final char[] dfa_119 = DFA.unpackEncodedStringToUnsignedChars(dfa_119s);
    static final char[] dfa_120 = DFA.unpackEncodedStringToUnsignedChars(dfa_120s);
    static final short[] dfa_121 = DFA.unpackEncodedString(dfa_121s);
    static final short[] dfa_122 = DFA.unpackEncodedString(dfa_122s);
    static final short[][] dfa_123 = unpackEncodedStringArray(dfa_123s);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

    class DFA162 extends DFA {

        public DFA162(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
<<<<<<< HEAD
            this.decisionNumber = 163;
            this.eot = dfa_116;
            this.eof = dfa_116;
            this.min = dfa_117;
            this.max = dfa_118;
            this.accept = dfa_119;
            this.special = dfa_120;
            this.transition = dfa_121;
=======
            this.decisionNumber = 162;
            this.eot = dfa_118;
            this.eof = dfa_118;
            this.min = dfa_119;
            this.max = dfa_120;
            this.accept = dfa_121;
            this.special = dfa_122;
            this.transition = dfa_123;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public String getDescription() {
            return "4642:2: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_KeywordMethodDeclarationWOSemicolon_1= ruleKeywordMethodDeclarationWOSemicolon )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA162_1 = input.LA(1);

                         
                        int index162_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred178_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index162_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA162_2 = input.LA(1);

                         
                        int index162_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred178_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index162_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA162_3 = input.LA(1);

                         
                        int index162_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred178_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index162_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA162_4 = input.LA(1);

                         
                        int index162_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred178_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index162_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA162_5 = input.LA(1);

                         
                        int index162_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred178_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index162_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 162, _s, input);
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_122s = "\6\uffff";
    static final String dfa_123s = "\1\2\2\uffff\2\2\1\uffff";
    static final String dfa_124s = "\1\12\1\4\1\uffff\2\6\1\uffff";
    static final String dfa_125s = "\1\u009d\1\152\1\uffff\2\u009d\1\uffff";
    static final String dfa_126s = "\2\uffff\1\2\2\uffff\1\1";
    static final String dfa_127s = "\6\uffff}>";
    static final String[] dfa_128s = {
            "\1\2\12\uffff\7\2\1\uffff\1\1\17\uffff\2\2\2\uffff\1\2\2\uffff\1\2\1\uffff\15\2\2\uffff\1\2\10\uffff\3\2\31\uffff\1\2\2\uffff\4\2\3\uffff\6\2\34\uffff\2\2\3\uffff\3\2",
            "\1\2\1\3\4\uffff\1\2\12\uffff\1\2\52\uffff\1\2\51\uffff\1\2",
            "",
            "\1\5\3\uffff\2\2\10\uffff\1\2\1\uffff\6\2\1\uffff\1\2\6\uffff\1\2\7\uffff\3\2\2\uffff\1\2\2\uffff\1\2\1\uffff\15\2\2\uffff\1\2\10\uffff\5\2\22\uffff\1\4\4\uffff\1\2\2\uffff\4\2\3\uffff\6\2\34\uffff\2\2\3\uffff\3\2",
            "\1\5\3\uffff\2\2\10\uffff\1\2\1\uffff\6\2\1\uffff\1\2\6\uffff\1\2\7\uffff\3\2\2\uffff\1\2\2\uffff\1\2\1\uffff\15\2\2\uffff\1\2\10\uffff\5\2\22\uffff\1\4\4\uffff\1\2\2\uffff\4\2\3\uffff\6\2\34\uffff\2\2\3\uffff\3\2",
            ""
    };

    static final short[] dfa_122 = DFA.unpackEncodedString(dfa_122s);
    static final short[] dfa_123 = DFA.unpackEncodedString(dfa_123s);
    static final char[] dfa_124 = DFA.unpackEncodedStringToUnsignedChars(dfa_124s);
    static final char[] dfa_125 = DFA.unpackEncodedStringToUnsignedChars(dfa_125s);
    static final short[] dfa_126 = DFA.unpackEncodedString(dfa_126s);
    static final short[] dfa_127 = DFA.unpackEncodedString(dfa_127s);
    static final short[][] dfa_128 = unpackEncodedStringArray(dfa_128s);
=======
    static final String dfa_124s = "\6\uffff";
    static final String dfa_125s = "\1\2\2\uffff\2\2\1\uffff";
    static final String dfa_126s = "\1\12\1\4\1\uffff\2\6\1\uffff";
    static final String dfa_127s = "\1\u0099\1\146\1\uffff\2\u0099\1\uffff";
    static final String dfa_128s = "\2\uffff\1\2\2\uffff\1\1";
    static final String dfa_129s = "\6\uffff}>";
    static final String[] dfa_130s = {
            "\1\2\12\uffff\7\2\1\uffff\1\1\17\uffff\2\2\2\uffff\1\2\1\uffff\1\2\1\uffff\15\2\2\uffff\1\2\10\uffff\3\2\26\uffff\1\2\2\uffff\4\2\3\uffff\6\2\34\uffff\2\2\3\uffff\3\2",
            "\1\2\1\3\4\uffff\1\2\12\uffff\1\2\51\uffff\1\2\46\uffff\1\2",
            "",
            "\1\5\3\uffff\2\2\10\uffff\1\2\1\uffff\6\2\1\uffff\1\2\6\uffff\1\2\10\uffff\2\2\2\uffff\1\2\1\uffff\1\2\1\uffff\15\2\2\uffff\1\2\10\uffff\5\2\17\uffff\1\4\4\uffff\1\2\2\uffff\4\2\3\uffff\6\2\34\uffff\2\2\3\uffff\3\2",
            "\1\5\3\uffff\2\2\10\uffff\1\2\1\uffff\6\2\1\uffff\1\2\6\uffff\1\2\10\uffff\2\2\2\uffff\1\2\1\uffff\1\2\1\uffff\15\2\2\uffff\1\2\10\uffff\5\2\17\uffff\1\4\4\uffff\1\2\2\uffff\4\2\3\uffff\6\2\34\uffff\2\2\3\uffff\3\2",
            ""
    };

    static final short[] dfa_124 = DFA.unpackEncodedString(dfa_124s);
    static final short[] dfa_125 = DFA.unpackEncodedString(dfa_125s);
    static final char[] dfa_126 = DFA.unpackEncodedStringToUnsignedChars(dfa_126s);
    static final char[] dfa_127 = DFA.unpackEncodedStringToUnsignedChars(dfa_127s);
    static final short[] dfa_128 = DFA.unpackEncodedString(dfa_128s);
    static final short[] dfa_129 = DFA.unpackEncodedString(dfa_129s);
    static final short[][] dfa_130 = unpackEncodedStringArray(dfa_130s);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

    class DFA169 extends DFA {

        public DFA169(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
<<<<<<< HEAD
            this.decisionNumber = 170;
            this.eot = dfa_122;
            this.eof = dfa_123;
            this.min = dfa_124;
            this.max = dfa_125;
            this.accept = dfa_126;
            this.special = dfa_127;
            this.transition = dfa_128;
=======
            this.decisionNumber = 169;
            this.eot = dfa_124;
            this.eof = dfa_125;
            this.min = dfa_126;
            this.max = dfa_127;
            this.accept = dfa_128;
            this.special = dfa_129;
            this.transition = dfa_130;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public String getDescription() {
            return "4836:3: (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )?";
        }
    }

    class DFA171 extends DFA {

        public DFA171(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 171;
            this.eot = dfa_101;
            this.eof = dfa_101;
            this.min = dfa_102;
            this.max = dfa_103;
            this.accept = dfa_104;
            this.special = dfa_105;
            this.transition = dfa_106;
        }
        public String getDescription() {
            return "()* loopback of 4885:4: ( (lv_declarations_16_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA171_1 = input.LA(1);

                         
                        int index171_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred187_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index171_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA171_2 = input.LA(1);

                         
                        int index171_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred187_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index171_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 171, _s, input);
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String[] dfa_129s = {
            "\1\3\4\uffff\1\1\12\uffff\1\3\7\uffff\1\13\10\uffff\1\3\10\uffff\1\3\15\uffff\6\13\5\uffff\2\3\1\uffff\1\3\2\uffff\3\13\31\uffff\1\2\11\uffff\6\13\34\uffff\2\13\3\uffff\3\13",
=======
    static final String dfa_131s = "\1\3\37\uffff";
    static final String[] dfa_132s = {
            "\1\3\4\uffff\1\1\12\uffff\1\3\7\uffff\1\13\10\uffff\1\3\10\uffff\1\3\14\uffff\6\13\5\uffff\2\3\1\uffff\1\3\2\uffff\3\13\26\uffff\1\2\11\uffff\6\13\34\uffff\2\13\3\uffff\3\13",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
<<<<<<< HEAD
    static final short[][] dfa_129 = unpackEncodedStringArray(dfa_129s);

    class DFA177 extends DFA {

        public DFA177(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 177;
            this.eot = dfa_72;
            this.eof = dfa_73;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_129;
        }
        public String getDescription() {
            return "()* loopback of 5072:3: ( (lv_declarations_4_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA177_1 = input.LA(1);

                         
                        int index177_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred195_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index177_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA177_2 = input.LA(1);

                         
                        int index177_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred195_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index177_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 177, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_130s = "\5\uffff";
    static final String dfa_131s = "\1\1\4\uffff";
    static final String dfa_132s = "\1\5\1\uffff\2\6\1\uffff";
    static final String dfa_133s = "\1\152\1\uffff\2\u008a\1\uffff";
    static final String dfa_134s = "\1\uffff\1\2\2\uffff\1\1";
    static final String dfa_135s = "\5\uffff}>";
    static final String[] dfa_136s = {
            "\1\2\4\uffff\1\1\12\uffff\2\1\17\uffff\1\1\3\uffff\1\1\4\uffff\1\1\30\uffff\2\1\1\uffff\1\1\36\uffff\1\1",
            "",
            "\1\4\35\uffff\1\1\13\uffff\1\1\40\uffff\1\1\1\uffff\1\1\21\uffff\1\3\26\uffff\17\1",
            "\1\4\35\uffff\1\1\54\uffff\1\1\1\uffff\1\1\21\uffff\1\3\26\uffff\17\1",
            ""
    };

    static final short[] dfa_130 = DFA.unpackEncodedString(dfa_130s);
    static final short[] dfa_131 = DFA.unpackEncodedString(dfa_131s);
    static final char[] dfa_132 = DFA.unpackEncodedStringToUnsignedChars(dfa_132s);
    static final char[] dfa_133 = DFA.unpackEncodedStringToUnsignedChars(dfa_133s);
    static final short[] dfa_134 = DFA.unpackEncodedString(dfa_134s);
    static final short[] dfa_135 = DFA.unpackEncodedString(dfa_135s);
    static final short[][] dfa_136 = unpackEncodedStringArray(dfa_136s);

    class DFA183 extends DFA {

        public DFA183(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 183;
            this.eot = dfa_130;
            this.eof = dfa_131;
            this.min = dfa_132;
            this.max = dfa_133;
            this.accept = dfa_134;
            this.special = dfa_135;
            this.transition = dfa_136;
        }
        public String getDescription() {
            return "()+ loopback of 5342:4: ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA187 extends DFA {

        public DFA187(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 187;
            this.eot = dfa_130;
            this.eof = dfa_131;
            this.min = dfa_132;
            this.max = dfa_133;
            this.accept = dfa_134;
            this.special = dfa_135;
            this.transition = dfa_136;
        }
        public String getDescription() {
            return "()+ loopback of 5457:4: ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+";
        }
    }
=======
    static final short[] dfa_131 = DFA.unpackEncodedString(dfa_131s);
    static final short[][] dfa_132 = unpackEncodedStringArray(dfa_132s);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

    class DFA176 extends DFA {

        public DFA176(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 176;
            this.eot = dfa_101;
            this.eof = dfa_131;
            this.min = dfa_102;
            this.max = dfa_103;
            this.accept = dfa_104;
            this.special = dfa_105;
            this.transition = dfa_132;
        }
        public String getDescription() {
            return "()* loopback of 4994:3: ( (lv_declarations_4_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA176_1 = input.LA(1);

                         
                        int index176_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred192_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index176_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA176_2 = input.LA(1);

                         
                        int index176_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred192_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index176_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 176, _s, input);
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_137s = "\16\uffff";
    static final String dfa_138s = "\1\5\15\uffff";
    static final String dfa_139s = "\1\5\2\0\13\uffff";
    static final String dfa_140s = "\1\152\2\0\13\uffff";
    static final String dfa_141s = "\3\uffff\1\1\1\2\1\3\10\uffff";
    static final String dfa_142s = "\1\uffff\1\0\1\1\13\uffff}>";
    static final String[] dfa_143s = {
            "\1\5\4\uffff\1\1\12\uffff\2\5\17\uffff\1\5\3\uffff\1\4\4\uffff\1\5\30\uffff\2\5\1\3\1\5\36\uffff\1\2",
=======
    static final String dfa_133s = "\5\uffff";
    static final String dfa_134s = "\1\1\4\uffff";
    static final String dfa_135s = "\1\5\1\uffff\2\6\1\uffff";
    static final String dfa_136s = "\1\146\1\uffff\2\u0086\1\uffff";
    static final String dfa_137s = "\1\uffff\1\2\2\uffff\1\1";
    static final String dfa_138s = "\5\uffff}>";
    static final String[] dfa_139s = {
            "\1\2\4\uffff\1\1\12\uffff\2\1\17\uffff\1\1\3\uffff\1\1\4\uffff\1\1\27\uffff\2\1\1\uffff\1\1\33\uffff\1\1",
            "",
            "\1\4\35\uffff\1\1\13\uffff\1\1\37\uffff\1\1\1\uffff\1\1\16\uffff\1\3\26\uffff\17\1",
            "\1\4\35\uffff\1\1\53\uffff\1\1\1\uffff\1\1\16\uffff\1\3\26\uffff\17\1",
            ""
    };

    static final short[] dfa_133 = DFA.unpackEncodedString(dfa_133s);
    static final short[] dfa_134 = DFA.unpackEncodedString(dfa_134s);
    static final char[] dfa_135 = DFA.unpackEncodedStringToUnsignedChars(dfa_135s);
    static final char[] dfa_136 = DFA.unpackEncodedStringToUnsignedChars(dfa_136s);
    static final short[] dfa_137 = DFA.unpackEncodedString(dfa_137s);
    static final short[] dfa_138 = DFA.unpackEncodedString(dfa_138s);
    static final short[][] dfa_139 = unpackEncodedStringArray(dfa_139s);

    class DFA182 extends DFA {

        public DFA182(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 182;
            this.eot = dfa_133;
            this.eof = dfa_134;
            this.min = dfa_135;
            this.max = dfa_136;
            this.accept = dfa_137;
            this.special = dfa_138;
            this.transition = dfa_139;
        }
        public String getDescription() {
            return "()+ loopback of 5264:4: ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA186 extends DFA {

        public DFA186(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 186;
            this.eot = dfa_133;
            this.eof = dfa_134;
            this.min = dfa_135;
            this.max = dfa_136;
            this.accept = dfa_137;
            this.special = dfa_138;
            this.transition = dfa_139;
        }
        public String getDescription() {
            return "()+ loopback of 5379:4: ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA191 extends DFA {

        public DFA191(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 191;
            this.eot = dfa_101;
            this.eof = dfa_101;
            this.min = dfa_102;
            this.max = dfa_103;
            this.accept = dfa_104;
            this.special = dfa_105;
            this.transition = dfa_106;
        }
        public String getDescription() {
            return "()* loopback of 5539:3: ( (lv_declarations_4_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA191_1 = input.LA(1);

                         
                        int index191_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred207_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index191_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA191_2 = input.LA(1);

                         
                        int index191_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred207_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index191_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 191, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_140s = "\16\uffff";
    static final String dfa_141s = "\1\5\15\uffff";
    static final String dfa_142s = "\1\5\2\0\13\uffff";
    static final String dfa_143s = "\1\146\2\0\13\uffff";
    static final String dfa_144s = "\3\uffff\1\1\1\2\1\3\10\uffff";
    static final String dfa_145s = "\1\uffff\1\0\1\1\13\uffff}>";
    static final String[] dfa_146s = {
            "\1\5\4\uffff\1\1\12\uffff\2\5\17\uffff\1\5\3\uffff\1\4\4\uffff\1\5\27\uffff\2\5\1\3\1\5\33\uffff\1\2",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

<<<<<<< HEAD
    static final short[] dfa_137 = DFA.unpackEncodedString(dfa_137s);
    static final short[] dfa_138 = DFA.unpackEncodedString(dfa_138s);
    static final char[] dfa_139 = DFA.unpackEncodedStringToUnsignedChars(dfa_139s);
    static final char[] dfa_140 = DFA.unpackEncodedStringToUnsignedChars(dfa_140s);
    static final short[] dfa_141 = DFA.unpackEncodedString(dfa_141s);
    static final short[] dfa_142 = DFA.unpackEncodedString(dfa_142s);
    static final short[][] dfa_143 = unpackEncodedStringArray(dfa_143s);
=======
    static final short[] dfa_140 = DFA.unpackEncodedString(dfa_140s);
    static final short[] dfa_141 = DFA.unpackEncodedString(dfa_141s);
    static final char[] dfa_142 = DFA.unpackEncodedStringToUnsignedChars(dfa_142s);
    static final char[] dfa_143 = DFA.unpackEncodedStringToUnsignedChars(dfa_143s);
    static final short[] dfa_144 = DFA.unpackEncodedString(dfa_144s);
    static final short[] dfa_145 = DFA.unpackEncodedString(dfa_145s);
    static final short[][] dfa_146 = unpackEncodedStringArray(dfa_146s);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

    class DFA193 extends DFA {

        public DFA193(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
<<<<<<< HEAD
            this.decisionNumber = 194;
            this.eot = dfa_137;
            this.eof = dfa_138;
            this.min = dfa_139;
            this.max = dfa_140;
            this.accept = dfa_141;
            this.special = dfa_142;
            this.transition = dfa_143;
=======
            this.decisionNumber = 193;
            this.eot = dfa_140;
            this.eof = dfa_141;
            this.min = dfa_142;
            this.max = dfa_143;
            this.accept = dfa_144;
            this.special = dfa_145;
            this.transition = dfa_146;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public String getDescription() {
            return "5581:3: ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA193_1 = input.LA(1);

                         
                        int index193_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred209_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index193_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA193_2 = input.LA(1);

                         
                        int index193_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred209_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index193_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 193, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA195 extends DFA {

        public DFA195(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 195;
            this.eot = dfa_101;
            this.eof = dfa_101;
            this.min = dfa_102;
            this.max = dfa_103;
            this.accept = dfa_104;
            this.special = dfa_105;
            this.transition = dfa_106;
        }
        public String getDescription() {
            return "()* loopback of 5673:3: ( (lv_declarations_4_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA195_1 = input.LA(1);

                         
                        int index195_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred212_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index195_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA195_2 = input.LA(1);

                         
                        int index195_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred212_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index195_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 195, _s, input);
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_144s = "\1\4\13\uffff";
    static final String dfa_145s = "\1\5\3\0\10\uffff";
    static final String dfa_146s = "\1\152\3\0\10\uffff";
    static final String dfa_147s = "\4\uffff\1\2\6\uffff\1\1";
    static final String dfa_148s = "\1\uffff\1\0\1\1\1\2\10\uffff}>";
    static final String[] dfa_149s = {
            "\1\4\4\uffff\1\1\12\uffff\1\3\20\uffff\1\4\10\uffff\1\4\30\uffff\2\4\1\uffff\1\4\36\uffff\1\2",
=======
    static final String dfa_147s = "\1\4\13\uffff";
    static final String dfa_148s = "\1\5\3\0\10\uffff";
    static final String dfa_149s = "\1\146\3\0\10\uffff";
    static final String dfa_150s = "\4\uffff\1\2\6\uffff\1\1";
    static final String dfa_151s = "\1\uffff\1\0\1\1\1\2\10\uffff}>";
    static final String[] dfa_152s = {
            "\1\4\4\uffff\1\1\12\uffff\1\3\20\uffff\1\4\10\uffff\1\4\27\uffff\2\4\1\uffff\1\4\33\uffff\1\2",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
<<<<<<< HEAD
    static final short[] dfa_144 = DFA.unpackEncodedString(dfa_144s);
    static final char[] dfa_145 = DFA.unpackEncodedStringToUnsignedChars(dfa_145s);
    static final char[] dfa_146 = DFA.unpackEncodedStringToUnsignedChars(dfa_146s);
    static final short[] dfa_147 = DFA.unpackEncodedString(dfa_147s);
    static final short[] dfa_148 = DFA.unpackEncodedString(dfa_148s);
    static final short[][] dfa_149 = unpackEncodedStringArray(dfa_149s);
=======
    static final short[] dfa_147 = DFA.unpackEncodedString(dfa_147s);
    static final char[] dfa_148 = DFA.unpackEncodedStringToUnsignedChars(dfa_148s);
    static final char[] dfa_149 = DFA.unpackEncodedStringToUnsignedChars(dfa_149s);
    static final short[] dfa_150 = DFA.unpackEncodedString(dfa_150s);
    static final short[] dfa_151 = DFA.unpackEncodedString(dfa_151s);
    static final short[][] dfa_152 = unpackEncodedStringArray(dfa_152s);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

    class DFA204 extends DFA {

        public DFA204(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 204;
            this.eot = dfa_13;
<<<<<<< HEAD
            this.eof = dfa_144;
            this.min = dfa_145;
            this.max = dfa_146;
            this.accept = dfa_147;
            this.special = dfa_148;
            this.transition = dfa_149;
=======
            this.eof = dfa_147;
            this.min = dfa_148;
            this.max = dfa_149;
            this.accept = dfa_150;
            this.special = dfa_151;
            this.transition = dfa_152;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public String getDescription() {
            return "5829:3: ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA204_1 = input.LA(1);

                         
                        int index204_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred220_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index204_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA204_2 = input.LA(1);

                         
                        int index204_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred220_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index204_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA204_3 = input.LA(1);

                         
                        int index204_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred220_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index204_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 204, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA201 extends DFA {

        public DFA201(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 201;
            this.eot = dfa_101;
            this.eof = dfa_101;
            this.min = dfa_102;
            this.max = dfa_103;
            this.accept = dfa_104;
            this.special = dfa_105;
            this.transition = dfa_106;
        }
        public String getDescription() {
            return "()* loopback of 5854:5: ( (lv_declarations_3_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA201_1 = input.LA(1);

                         
                        int index201_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred218_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index201_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA201_2 = input.LA(1);

                         
                        int index201_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred218_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index201_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 201, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA206 extends DFA {

        public DFA206(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 206;
            this.eot = dfa_101;
            this.eof = dfa_101;
            this.min = dfa_102;
            this.max = dfa_103;
            this.accept = dfa_104;
            this.special = dfa_105;
            this.transition = dfa_106;
        }
        public String getDescription() {
            return "()* loopback of 5970:3: ( (lv_declarations_3_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA206_1 = input.LA(1);

                         
                        int index206_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred223_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index206_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA206_2 = input.LA(1);

                         
                        int index206_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred223_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index206_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 206, _s, input);
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_150s = "\35\uffff";
    static final String dfa_151s = "\1\4\2\0\32\uffff";
    static final String dfa_152s = "\1\u0095\2\0\32\uffff";
    static final String dfa_153s = "\3\uffff\1\1\6\uffff\1\2\21\uffff\1\3";
    static final String dfa_154s = "\1\uffff\1\0\1\1\32\uffff}>";
    static final String[] dfa_155s = {
            "\6\12\1\1\12\uffff\1\12\11\uffff\1\12\1\uffff\1\12\10\uffff\1\34\27\uffff\1\3\15\uffff\1\12\4\uffff\1\12\10\uffff\1\12\7\uffff\1\12\2\uffff\1\12\1\2\11\uffff\6\3\27\uffff\3\12\1\uffff\1\12",
=======
    static final String dfa_153s = "\33\uffff";
    static final String dfa_154s = "\1\4\2\0\30\uffff";
    static final String dfa_155s = "\1\u008f\2\0\30\uffff";
    static final String dfa_156s = "\3\uffff\1\1\6\uffff\1\2\17\uffff\1\3";
    static final String dfa_157s = "\1\uffff\1\0\1\1\30\uffff}>";
    static final String[] dfa_158s = {
            "\6\12\1\1\12\uffff\1\12\11\uffff\1\12\1\uffff\1\12\10\uffff\1\32\26\uffff\1\3\15\uffff\1\12\4\uffff\1\12\10\uffff\1\12\4\uffff\1\12\3\uffff\1\2\11\uffff\6\3\27\uffff\3\12",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

<<<<<<< HEAD
    static final short[] dfa_150 = DFA.unpackEncodedString(dfa_150s);
    static final char[] dfa_151 = DFA.unpackEncodedStringToUnsignedChars(dfa_151s);
    static final char[] dfa_152 = DFA.unpackEncodedStringToUnsignedChars(dfa_152s);
    static final short[] dfa_153 = DFA.unpackEncodedString(dfa_153s);
    static final short[] dfa_154 = DFA.unpackEncodedString(dfa_154s);
    static final short[][] dfa_155 = unpackEncodedStringArray(dfa_155s);
=======
    static final short[] dfa_153 = DFA.unpackEncodedString(dfa_153s);
    static final char[] dfa_154 = DFA.unpackEncodedStringToUnsignedChars(dfa_154s);
    static final char[] dfa_155 = DFA.unpackEncodedStringToUnsignedChars(dfa_155s);
    static final short[] dfa_156 = DFA.unpackEncodedString(dfa_156s);
    static final short[] dfa_157 = DFA.unpackEncodedString(dfa_157s);
    static final short[][] dfa_158 = unpackEncodedStringArray(dfa_158s);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

    class DFA208 extends DFA {

        public DFA208(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
<<<<<<< HEAD
            this.decisionNumber = 209;
            this.eot = dfa_150;
            this.eof = dfa_150;
            this.min = dfa_151;
            this.max = dfa_152;
            this.accept = dfa_153;
            this.special = dfa_154;
            this.transition = dfa_155;
=======
            this.decisionNumber = 208;
            this.eot = dfa_153;
            this.eof = dfa_153;
            this.min = dfa_154;
            this.max = dfa_155;
            this.accept = dfa_156;
            this.special = dfa_157;
            this.transition = dfa_158;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public String getDescription() {
            return "6039:3: ( ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) ) | ( (lv_initialization_3_0= ruleEffectOrAssignment ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA208_1 = input.LA(1);

                         
                        int index208_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred225_InternalSCTX()) ) {s = 3;}

                        else if ( (synpred226_InternalSCTX()) ) {s = 10;}

                         
                        input.seek(index208_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA208_2 = input.LA(1);

                         
                        int index208_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred225_InternalSCTX()) ) {s = 3;}

                        else if ( (synpred226_InternalSCTX()) ) {s = 10;}

                         
                        input.seek(index208_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 208, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA210 extends DFA {

        public DFA210(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 210;
            this.eot = dfa_101;
            this.eof = dfa_101;
            this.min = dfa_102;
            this.max = dfa_103;
            this.accept = dfa_104;
            this.special = dfa_105;
            this.transition = dfa_106;
        }
        public String getDescription() {
            return "()* loopback of 6134:3: ( (lv_declarations_10_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA210_1 = input.LA(1);

                         
                        int index210_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred228_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index210_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA210_2 = input.LA(1);

                         
                        int index210_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred228_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index210_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 210, _s, input);
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_156s = "\27\uffff";
    static final String dfa_157s = "\1\4\1\0\25\uffff";
    static final String dfa_158s = "\1\u0095\1\0\25\uffff";
    static final String dfa_159s = "\2\uffff\1\3\22\uffff\1\1\1\2";
    static final String dfa_160s = "\1\uffff\1\0\25\uffff}>";
    static final String[] dfa_161s = {
            "\1\2\1\1\5\2\12\uffff\1\2\11\uffff\1\2\1\uffff\1\2\56\uffff\1\2\4\uffff\1\2\10\uffff\1\2\7\uffff\1\2\2\uffff\2\2\46\uffff\3\2\1\uffff\1\2",
=======
    static final String dfa_159s = "\25\uffff";
    static final String dfa_160s = "\1\4\1\0\23\uffff";
    static final String dfa_161s = "\1\u008f\1\0\23\uffff";
    static final String dfa_162s = "\2\uffff\1\3\20\uffff\1\1\1\2";
    static final String dfa_163s = "\1\uffff\1\0\23\uffff}>";
    static final String[] dfa_164s = {
            "\1\2\1\1\5\2\12\uffff\1\2\11\uffff\1\2\1\uffff\1\2\55\uffff\1\2\4\uffff\1\2\10\uffff\1\2\4\uffff\1\2\3\uffff\1\2\46\uffff\3\2",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

<<<<<<< HEAD
    static final short[] dfa_156 = DFA.unpackEncodedString(dfa_156s);
    static final char[] dfa_157 = DFA.unpackEncodedStringToUnsignedChars(dfa_157s);
    static final char[] dfa_158 = DFA.unpackEncodedStringToUnsignedChars(dfa_158s);
    static final short[] dfa_159 = DFA.unpackEncodedString(dfa_159s);
    static final short[] dfa_160 = DFA.unpackEncodedString(dfa_160s);
    static final short[][] dfa_161 = unpackEncodedStringArray(dfa_161s);
=======
    static final short[] dfa_159 = DFA.unpackEncodedString(dfa_159s);
    static final char[] dfa_160 = DFA.unpackEncodedStringToUnsignedChars(dfa_160s);
    static final char[] dfa_161 = DFA.unpackEncodedStringToUnsignedChars(dfa_161s);
    static final short[] dfa_162 = DFA.unpackEncodedString(dfa_162s);
    static final short[] dfa_163 = DFA.unpackEncodedString(dfa_163s);
    static final short[][] dfa_164 = unpackEncodedStringArray(dfa_164s);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

    class DFA216 extends DFA {

        public DFA216(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
<<<<<<< HEAD
            this.decisionNumber = 217;
            this.eot = dfa_156;
            this.eof = dfa_156;
            this.min = dfa_157;
            this.max = dfa_158;
            this.accept = dfa_159;
            this.special = dfa_160;
            this.transition = dfa_161;
=======
            this.decisionNumber = 216;
            this.eot = dfa_159;
            this.eof = dfa_159;
            this.min = dfa_160;
            this.max = dfa_161;
            this.accept = dfa_162;
            this.special = dfa_163;
            this.transition = dfa_164;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public String getDescription() {
            return "6346:3: ( ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) ) | ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) ) | ( (lv_expression_6_0= ruleExpression ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA216_1 = input.LA(1);

                         
                        int index216_1 = input.index();
                        input.rewind();
                        s = -1;
<<<<<<< HEAD
                        if ( (synpred237_InternalSCTX()) ) {s = 21;}

                        else if ( (synpred238_InternalSCTX()) ) {s = 22;}
=======
                        if ( (synpred234_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred235_InternalSCTX()) ) {s = 20;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index216_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 216, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA217 extends DFA {

        public DFA217(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 217;
            this.eot = dfa_101;
            this.eof = dfa_101;
            this.min = dfa_102;
            this.max = dfa_103;
            this.accept = dfa_104;
            this.special = dfa_105;
            this.transition = dfa_106;
        }
        public String getDescription() {
            return "()* loopback of 6522:3: ( (lv_declarations_5_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA217_1 = input.LA(1);

                         
                        int index217_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index217_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA217_2 = input.LA(1);

                         
                        int index217_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index217_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 217, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA232 extends DFA {

        public DFA232(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 232;
            this.eot = dfa_101;
            this.eof = dfa_101;
            this.min = dfa_102;
            this.max = dfa_103;
            this.accept = dfa_104;
            this.special = dfa_105;
            this.transition = dfa_106;
        }
        public String getDescription() {
            return "()* loopback of 6918:5: ( (lv_declarations_16_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA232_1 = input.LA(1);

                         
                        int index232_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred252_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index232_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA232_2 = input.LA(1);

                         
                        int index232_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred252_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index232_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 232, _s, input);
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_162s = "\1\2\5\uffff";
    static final String dfa_163s = "\1\5\1\4\1\uffff\2\5\1\uffff";
    static final String dfa_164s = "\1\u009e\1\152\1\uffff\2\u009e\1\uffff";
    static final String[] dfa_165s = {
            "\1\2\4\uffff\1\2\12\uffff\2\2\6\uffff\1\1\37\uffff\6\2\13\uffff\3\2\31\uffff\1\2\11\uffff\6\2\34\uffff\2\2\3\uffff\4\2",
            "\1\2\1\3\4\uffff\1\2\12\uffff\1\2\52\uffff\1\2\51\uffff\1\2",
            "",
            "\1\2\1\5\3\uffff\2\2\10\uffff\1\2\1\uffff\1\2\6\uffff\1\2\6\uffff\1\2\7\uffff\1\2\20\uffff\6\2\13\uffff\5\2\22\uffff\1\4\4\uffff\1\2\11\uffff\6\2\34\uffff\2\2\3\uffff\4\2",
            "\1\2\1\5\3\uffff\2\2\10\uffff\1\2\1\uffff\1\2\6\uffff\1\2\6\uffff\1\2\7\uffff\1\2\20\uffff\6\2\13\uffff\5\2\22\uffff\1\4\4\uffff\1\2\11\uffff\6\2\34\uffff\2\2\3\uffff\4\2",
            ""
    };
    static final short[] dfa_162 = DFA.unpackEncodedString(dfa_162s);
    static final char[] dfa_163 = DFA.unpackEncodedStringToUnsignedChars(dfa_163s);
    static final char[] dfa_164 = DFA.unpackEncodedStringToUnsignedChars(dfa_164s);
    static final short[][] dfa_165 = unpackEncodedStringArray(dfa_165s);
=======
    static final String dfa_165s = "\1\2\5\uffff";
    static final String dfa_166s = "\1\5\1\4\1\uffff\2\5\1\uffff";
    static final String dfa_167s = "\1\u009a\1\146\1\uffff\2\u009a\1\uffff";
    static final String[] dfa_168s = {
            "\1\2\4\uffff\1\2\12\uffff\2\2\6\uffff\1\1\36\uffff\6\2\13\uffff\3\2\26\uffff\1\2\11\uffff\6\2\34\uffff\2\2\3\uffff\4\2",
            "\1\2\1\3\4\uffff\1\2\12\uffff\1\2\51\uffff\1\2\46\uffff\1\2",
            "",
            "\1\2\1\5\3\uffff\2\2\10\uffff\1\2\1\uffff\1\2\6\uffff\1\2\6\uffff\1\2\27\uffff\6\2\13\uffff\5\2\17\uffff\1\4\4\uffff\1\2\11\uffff\6\2\34\uffff\2\2\3\uffff\4\2",
            "\1\2\1\5\3\uffff\2\2\10\uffff\1\2\1\uffff\1\2\6\uffff\1\2\6\uffff\1\2\27\uffff\6\2\13\uffff\5\2\17\uffff\1\4\4\uffff\1\2\11\uffff\6\2\34\uffff\2\2\3\uffff\4\2",
            ""
    };
    static final short[] dfa_165 = DFA.unpackEncodedString(dfa_165s);
    static final char[] dfa_166 = DFA.unpackEncodedStringToUnsignedChars(dfa_166s);
    static final char[] dfa_167 = DFA.unpackEncodedStringToUnsignedChars(dfa_167s);
    static final short[][] dfa_168 = unpackEncodedStringArray(dfa_168s);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

    class DFA242 extends DFA {

        public DFA242(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
<<<<<<< HEAD
            this.decisionNumber = 243;
            this.eot = dfa_122;
            this.eof = dfa_162;
            this.min = dfa_163;
            this.max = dfa_164;
            this.accept = dfa_126;
            this.special = dfa_127;
            this.transition = dfa_165;
=======
            this.decisionNumber = 242;
            this.eot = dfa_124;
            this.eof = dfa_165;
            this.min = dfa_166;
            this.max = dfa_167;
            this.accept = dfa_128;
            this.special = dfa_129;
            this.transition = dfa_168;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public String getDescription() {
            return "7147:3: (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )?";
        }
    }
<<<<<<< HEAD
    static final String dfa_166s = "\1\u009e\1\uffff\2\145\1\uffff";
    static final String[] dfa_167s = {
            "\1\2\4\uffff\1\1\12\uffff\2\1\6\uffff\1\1\37\uffff\6\1\13\uffff\3\1\31\uffff\1\1\11\uffff\6\1\34\uffff\2\1\3\uffff\4\1",
            "",
            "\1\4\30\uffff\1\1\46\uffff\1\1\36\uffff\1\3",
            "\1\4\30\uffff\1\1\46\uffff\1\1\36\uffff\1\3",
            ""
    };
    static final char[] dfa_166 = DFA.unpackEncodedStringToUnsignedChars(dfa_166s);
    static final short[][] dfa_167 = unpackEncodedStringArray(dfa_167s);
=======
    static final String dfa_169s = "\1\u009a\1\uffff\2\141\1\uffff";
    static final String[] dfa_170s = {
            "\1\2\4\uffff\1\1\12\uffff\2\1\6\uffff\1\1\36\uffff\6\1\13\uffff\3\1\26\uffff\1\1\11\uffff\6\1\34\uffff\2\1\3\uffff\4\1",
            "",
            "\1\4\30\uffff\1\1\45\uffff\1\1\33\uffff\1\3",
            "\1\4\30\uffff\1\1\45\uffff\1\1\33\uffff\1\3",
            ""
    };
    static final char[] dfa_169 = DFA.unpackEncodedStringToUnsignedChars(dfa_169s);
    static final short[][] dfa_170 = unpackEncodedStringArray(dfa_170s);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

    class DFA241 extends DFA {

        public DFA241(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
<<<<<<< HEAD
            this.decisionNumber = 242;
            this.eot = dfa_130;
            this.eof = dfa_131;
            this.min = dfa_132;
            this.max = dfa_166;
            this.accept = dfa_134;
            this.special = dfa_135;
            this.transition = dfa_167;
=======
            this.decisionNumber = 241;
            this.eot = dfa_133;
            this.eof = dfa_134;
            this.min = dfa_135;
            this.max = dfa_169;
            this.accept = dfa_137;
            this.special = dfa_138;
            this.transition = dfa_170;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public String getDescription() {
            return "()+ loopback of 7152:4: ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA244 extends DFA {

        public DFA244(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 244;
            this.eot = dfa_101;
            this.eof = dfa_101;
            this.min = dfa_102;
            this.max = dfa_103;
            this.accept = dfa_104;
            this.special = dfa_105;
            this.transition = dfa_106;
        }
        public String getDescription() {
            return "()* loopback of 7196:4: ( (lv_declarations_15_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA244_1 = input.LA(1);

                         
                        int index244_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred263_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index244_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA244_2 = input.LA(1);

                         
                        int index244_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred263_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index244_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 244, _s, input);
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_168s = "\1\5\2\0\3\uffff\1\0\31\uffff";
    static final String dfa_169s = "\1\u009d\2\0\3\uffff\1\0\31\uffff";
    static final String dfa_170s = "\3\uffff\1\2\10\uffff\1\1\23\uffff";
    static final String dfa_171s = "\1\uffff\1\0\1\1\3\uffff\1\2\31\uffff}>";
    static final String[] dfa_172s = {
            "\1\3\2\uffff\1\3\1\uffff\1\1\12\uffff\1\3\7\uffff\1\14\37\uffff\6\14\11\uffff\2\3\2\14\1\6\3\uffff\2\3\24\uffff\1\2\11\uffff\6\14\34\uffff\2\14\3\uffff\3\14",
=======
    static final String dfa_171s = "\1\5\2\0\3\uffff\1\0\31\uffff";
    static final String dfa_172s = "\1\u0099\2\0\3\uffff\1\0\31\uffff";
    static final String dfa_173s = "\3\uffff\1\2\10\uffff\1\1\23\uffff";
    static final String dfa_174s = "\1\uffff\1\0\1\1\3\uffff\1\2\31\uffff}>";
    static final String[] dfa_175s = {
            "\1\3\2\uffff\1\3\1\uffff\1\1\12\uffff\1\3\7\uffff\1\14\36\uffff\6\14\11\uffff\2\3\2\14\1\6\3\uffff\2\3\21\uffff\1\2\11\uffff\6\14\34\uffff\2\14\3\uffff\3\14",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
<<<<<<< HEAD
    static final char[] dfa_168 = DFA.unpackEncodedStringToUnsignedChars(dfa_168s);
    static final char[] dfa_169 = DFA.unpackEncodedStringToUnsignedChars(dfa_169s);
    static final short[] dfa_170 = DFA.unpackEncodedString(dfa_170s);
    static final short[] dfa_171 = DFA.unpackEncodedString(dfa_171s);
    static final short[][] dfa_172 = unpackEncodedStringArray(dfa_172s);
=======
    static final char[] dfa_171 = DFA.unpackEncodedStringToUnsignedChars(dfa_171s);
    static final char[] dfa_172 = DFA.unpackEncodedStringToUnsignedChars(dfa_172s);
    static final short[] dfa_173 = DFA.unpackEncodedString(dfa_173s);
    static final short[] dfa_174 = DFA.unpackEncodedString(dfa_174s);
    static final short[][] dfa_175 = unpackEncodedStringArray(dfa_175s);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

    class DFA247 extends DFA {

        public DFA247(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
<<<<<<< HEAD
            this.decisionNumber = 248;
            this.eot = dfa_72;
            this.eof = dfa_73;
            this.min = dfa_168;
            this.max = dfa_169;
            this.accept = dfa_170;
            this.special = dfa_171;
            this.transition = dfa_172;
=======
            this.decisionNumber = 247;
            this.eot = dfa_101;
            this.eof = dfa_131;
            this.min = dfa_171;
            this.max = dfa_172;
            this.accept = dfa_173;
            this.special = dfa_174;
            this.transition = dfa_175;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public String getDescription() {
            return "()* loopback of 7268:3: ( (lv_declarations_1_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA247_1 = input.LA(1);

                         
                        int index247_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred266_InternalSCTX()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index247_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA247_2 = input.LA(1);

                         
                        int index247_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred266_InternalSCTX()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index247_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA247_6 = input.LA(1);

                         
                        int index247_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred266_InternalSCTX()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index247_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 247, _s, input);
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String[] dfa_173s = {
            "\1\3\2\uffff\1\3\1\uffff\1\1\12\uffff\2\3\6\uffff\1\14\37\uffff\6\14\11\uffff\2\3\2\14\1\6\3\uffff\2\3\24\uffff\1\2\11\uffff\6\14\34\uffff\2\14\3\uffff\3\14",
=======
    static final String[] dfa_176s = {
            "\1\3\2\uffff\1\3\1\uffff\1\1\12\uffff\2\3\6\uffff\1\14\36\uffff\6\14\11\uffff\2\3\2\14\1\6\3\uffff\2\3\21\uffff\1\2\11\uffff\6\14\34\uffff\2\14\3\uffff\3\14",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
<<<<<<< HEAD
    static final short[][] dfa_173 = unpackEncodedStringArray(dfa_173s);
=======
    static final short[][] dfa_176 = unpackEncodedStringArray(dfa_176s);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

    class DFA251 extends DFA {

        public DFA251(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
<<<<<<< HEAD
            this.decisionNumber = 252;
            this.eot = dfa_72;
            this.eof = dfa_72;
            this.min = dfa_168;
            this.max = dfa_169;
            this.accept = dfa_170;
            this.special = dfa_171;
            this.transition = dfa_173;
=======
            this.decisionNumber = 251;
            this.eot = dfa_101;
            this.eof = dfa_101;
            this.min = dfa_171;
            this.max = dfa_172;
            this.accept = dfa_173;
            this.special = dfa_174;
            this.transition = dfa_176;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public String getDescription() {
            return "()* loopback of 7382:3: ( (lv_declarations_3_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA251_1 = input.LA(1);

                         
                        int index251_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalSCTX()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index251_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA251_2 = input.LA(1);

                         
                        int index251_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalSCTX()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index251_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA251_6 = input.LA(1);

                         
                        int index251_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalSCTX()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index251_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 251, _s, input);
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_174s = "\12\uffff";
    static final String dfa_175s = "\1\5\2\0\7\uffff";
    static final String dfa_176s = "\1\152\2\0\7\uffff";
    static final String dfa_177s = "\3\uffff\1\1\1\2\5\uffff";
    static final String dfa_178s = "\1\uffff\1\0\1\1\7\uffff}>";
    static final String[] dfa_179s = {
            "\1\4\2\uffff\1\4\1\uffff\1\1\12\uffff\1\4\67\uffff\1\3\2\uffff\1\4\3\uffff\2\4\24\uffff\1\2",
=======
    static final String dfa_177s = "\1\5\2\0\7\uffff";
    static final String dfa_178s = "\1\146\2\0\7\uffff";
    static final String dfa_179s = "\3\uffff\1\1\1\2\5\uffff";
    static final String dfa_180s = "\1\uffff\1\0\1\1\7\uffff}>";
    static final String[] dfa_181s = {
            "\1\4\2\uffff\1\4\1\uffff\1\1\12\uffff\1\4\66\uffff\1\3\2\uffff\1\4\3\uffff\2\4\21\uffff\1\2",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_177 = DFA.unpackEncodedStringToUnsignedChars(dfa_177s);
    static final char[] dfa_178 = DFA.unpackEncodedStringToUnsignedChars(dfa_178s);
    static final short[] dfa_179 = DFA.unpackEncodedString(dfa_179s);
    static final short[] dfa_180 = DFA.unpackEncodedString(dfa_180s);
    static final short[][] dfa_181 = unpackEncodedStringArray(dfa_181s);

<<<<<<< HEAD
    static final short[] dfa_174 = DFA.unpackEncodedString(dfa_174s);
    static final char[] dfa_175 = DFA.unpackEncodedStringToUnsignedChars(dfa_175s);
    static final char[] dfa_176 = DFA.unpackEncodedStringToUnsignedChars(dfa_176s);
    static final short[] dfa_177 = DFA.unpackEncodedString(dfa_177s);
    static final short[] dfa_178 = DFA.unpackEncodedString(dfa_178s);
    static final short[][] dfa_179 = unpackEncodedStringArray(dfa_179s);

    class DFA255 extends DFA {
=======
    class DFA254 extends DFA {
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

        public DFA254(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
<<<<<<< HEAD
            this.decisionNumber = 255;
            this.eot = dfa_174;
            this.eof = dfa_174;
            this.min = dfa_175;
            this.max = dfa_176;
            this.accept = dfa_177;
            this.special = dfa_178;
            this.transition = dfa_179;
=======
            this.decisionNumber = 254;
            this.eot = dfa_79;
            this.eof = dfa_79;
            this.min = dfa_177;
            this.max = dfa_178;
            this.accept = dfa_179;
            this.special = dfa_180;
            this.transition = dfa_181;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public String getDescription() {
            return "7467:2: ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA254_1 = input.LA(1);

                         
                        int index254_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index254_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA254_2 = input.LA(1);

                         
                        int index254_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index254_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 254, _s, input);
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_180s = "\30\uffff";
    static final String dfa_181s = "\1\12\12\0\7\uffff\1\0\5\uffff";
    static final String dfa_182s = "\1\u009d\12\0\7\uffff\1\0\5\uffff";
    static final String dfa_183s = "\13\uffff\1\1\7\uffff\1\2\1\uffff\1\3\1\4\1\uffff";
    static final String dfa_184s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\7\uffff\1\12\5\uffff}>";
    static final String[] dfa_185s = {
            "\1\1\22\uffff\1\25\37\uffff\1\6\1\7\1\10\1\11\1\12\1\22\13\uffff\1\13\2\23\31\uffff\1\2\11\uffff\6\13\34\uffff\2\26\3\uffff\1\3\1\4\1\5",
=======
    static final String dfa_182s = "\30\uffff";
    static final String dfa_183s = "\1\12\12\0\7\uffff\1\0\5\uffff";
    static final String dfa_184s = "\1\u0099\12\0\7\uffff\1\0\5\uffff";
    static final String dfa_185s = "\13\uffff\1\1\7\uffff\1\2\1\uffff\1\3\1\4\1\uffff";
    static final String dfa_186s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\7\uffff\1\12\5\uffff}>";
    static final String[] dfa_187s = {
            "\1\1\22\uffff\1\25\36\uffff\1\6\1\7\1\10\1\11\1\12\1\22\13\uffff\1\13\2\23\26\uffff\1\2\11\uffff\6\13\34\uffff\2\26\3\uffff\1\3\1\4\1\5",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

<<<<<<< HEAD
    static final short[] dfa_180 = DFA.unpackEncodedString(dfa_180s);
    static final char[] dfa_181 = DFA.unpackEncodedStringToUnsignedChars(dfa_181s);
    static final char[] dfa_182 = DFA.unpackEncodedStringToUnsignedChars(dfa_182s);
    static final short[] dfa_183 = DFA.unpackEncodedString(dfa_183s);
    static final short[] dfa_184 = DFA.unpackEncodedString(dfa_184s);
    static final short[][] dfa_185 = unpackEncodedStringArray(dfa_185s);
=======
    static final short[] dfa_182 = DFA.unpackEncodedString(dfa_182s);
    static final char[] dfa_183 = DFA.unpackEncodedStringToUnsignedChars(dfa_183s);
    static final char[] dfa_184 = DFA.unpackEncodedStringToUnsignedChars(dfa_184s);
    static final short[] dfa_185 = DFA.unpackEncodedString(dfa_185s);
    static final short[] dfa_186 = DFA.unpackEncodedString(dfa_186s);
    static final short[][] dfa_187 = unpackEncodedStringArray(dfa_187s);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

    class DFA256 extends DFA {

        public DFA256(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
<<<<<<< HEAD
            this.decisionNumber = 257;
            this.eot = dfa_180;
            this.eof = dfa_180;
            this.min = dfa_181;
            this.max = dfa_182;
            this.accept = dfa_183;
            this.special = dfa_184;
            this.transition = dfa_185;
=======
            this.decisionNumber = 256;
            this.eot = dfa_182;
            this.eof = dfa_182;
            this.min = dfa_183;
            this.max = dfa_184;
            this.accept = dfa_185;
            this.special = dfa_186;
            this.transition = dfa_187;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public String getDescription() {
            return "7586:2: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_ClassDeclaration_3= ruleClassDeclaration )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA256_1 = input.LA(1);

                         
                        int index256_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred275_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred276_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred277_InternalSCTX()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index256_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA256_2 = input.LA(1);

                         
                        int index256_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred275_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred276_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred277_InternalSCTX()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index256_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA256_3 = input.LA(1);

                         
                        int index256_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred275_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred276_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred277_InternalSCTX()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index256_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA256_4 = input.LA(1);

                         
                        int index256_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred275_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred276_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred277_InternalSCTX()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index256_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA256_5 = input.LA(1);

                         
                        int index256_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred275_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred276_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred277_InternalSCTX()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index256_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA256_6 = input.LA(1);

                         
                        int index256_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred275_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index256_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA256_7 = input.LA(1);

                         
                        int index256_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred275_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index256_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA256_8 = input.LA(1);

                         
                        int index256_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred275_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index256_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA256_9 = input.LA(1);

                         
                        int index256_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred275_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index256_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA256_10 = input.LA(1);

                         
                        int index256_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred275_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index256_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA256_18 = input.LA(1);

                         
                        int index256_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred275_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index256_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 256, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA257 extends DFA {

        public DFA257(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
<<<<<<< HEAD
            this.decisionNumber = 258;
            this.eot = dfa_180;
            this.eof = dfa_180;
            this.min = dfa_181;
            this.max = dfa_182;
            this.accept = dfa_183;
            this.special = dfa_184;
            this.transition = dfa_185;
=======
            this.decisionNumber = 257;
            this.eot = dfa_182;
            this.eof = dfa_182;
            this.min = dfa_183;
            this.max = dfa_184;
            this.accept = dfa_185;
            this.special = dfa_186;
            this.transition = dfa_187;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public String getDescription() {
            return "7652:2: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_ClassDeclarationWOSemicolon_3= ruleClassDeclarationWOSemicolon )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA257_1 = input.LA(1);

                         
                        int index257_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred279_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred280_InternalSCTX()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index257_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA257_2 = input.LA(1);

                         
                        int index257_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred279_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred280_InternalSCTX()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index257_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA257_3 = input.LA(1);

                         
                        int index257_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred279_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred280_InternalSCTX()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index257_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA257_4 = input.LA(1);

                         
                        int index257_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred279_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred280_InternalSCTX()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index257_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA257_5 = input.LA(1);

                         
                        int index257_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred279_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred280_InternalSCTX()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index257_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA257_6 = input.LA(1);

                         
                        int index257_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index257_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA257_7 = input.LA(1);

                         
                        int index257_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index257_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA257_8 = input.LA(1);

                         
                        int index257_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index257_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA257_9 = input.LA(1);

                         
                        int index257_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index257_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA257_10 = input.LA(1);

                         
                        int index257_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index257_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA257_18 = input.LA(1);

                         
                        int index257_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index257_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 257, _s, input);
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_186s = "\101\uffff";
    static final String dfa_187s = "\1\1\100\uffff";
    static final String dfa_188s = "\1\5\1\uffff\1\0\76\uffff";
    static final String dfa_189s = "\1\u009e\1\uffff\1\0\76\uffff";
    static final String dfa_190s = "\1\uffff\1\2\76\uffff\1\1";
    static final String dfa_191s = "\2\uffff\1\0\76\uffff}>";
    static final String[] dfa_192s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\1\2\7\1\1\uffff\1\1\2\uffff\1\1\5\uffff\1\1\6\uffff\3\1\1\uffff\1\1\1\uffff\2\1\1\uffff\15\1\2\uffff\1\1\2\uffff\2\1\1\uffff\6\1\3\uffff\2\1\24\uffff\1\1\2\uffff\4\1\3\uffff\6\1\34\uffff\2\1\3\uffff\4\1",
=======
    static final String dfa_188s = "\100\uffff";
    static final String dfa_189s = "\1\1\77\uffff";
    static final String dfa_190s = "\1\5\1\uffff\1\0\75\uffff";
    static final String dfa_191s = "\1\u009a\1\uffff\1\0\75\uffff";
    static final String dfa_192s = "\1\uffff\1\2\75\uffff\1\1";
    static final String dfa_193s = "\2\uffff\1\0\75\uffff}>";
    static final String[] dfa_194s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\1\2\7\1\1\uffff\1\1\2\uffff\1\1\5\uffff\1\1\6\uffff\3\1\1\uffff\1\1\1\uffff\1\1\1\uffff\15\1\2\uffff\1\1\2\uffff\2\1\1\uffff\6\1\3\uffff\2\1\21\uffff\1\1\2\uffff\4\1\3\uffff\6\1\34\uffff\2\1\3\uffff\4\1",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

<<<<<<< HEAD
    static final short[] dfa_186 = DFA.unpackEncodedString(dfa_186s);
    static final short[] dfa_187 = DFA.unpackEncodedString(dfa_187s);
    static final char[] dfa_188 = DFA.unpackEncodedStringToUnsignedChars(dfa_188s);
    static final char[] dfa_189 = DFA.unpackEncodedStringToUnsignedChars(dfa_189s);
    static final short[] dfa_190 = DFA.unpackEncodedString(dfa_190s);
    static final short[] dfa_191 = DFA.unpackEncodedString(dfa_191s);
    static final short[][] dfa_192 = unpackEncodedStringArray(dfa_192s);
=======
    static final short[] dfa_188 = DFA.unpackEncodedString(dfa_188s);
    static final short[] dfa_189 = DFA.unpackEncodedString(dfa_189s);
    static final char[] dfa_190 = DFA.unpackEncodedStringToUnsignedChars(dfa_190s);
    static final char[] dfa_191 = DFA.unpackEncodedStringToUnsignedChars(dfa_191s);
    static final short[] dfa_192 = DFA.unpackEncodedString(dfa_192s);
    static final short[] dfa_193 = DFA.unpackEncodedString(dfa_193s);
    static final short[][] dfa_194 = unpackEncodedStringArray(dfa_194s);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

    class DFA278 extends DFA {

        public DFA278(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
<<<<<<< HEAD
            this.decisionNumber = 279;
            this.eot = dfa_186;
            this.eof = dfa_187;
            this.min = dfa_188;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_191;
            this.transition = dfa_192;
=======
            this.decisionNumber = 278;
            this.eot = dfa_188;
            this.eof = dfa_189;
            this.min = dfa_190;
            this.max = dfa_191;
            this.accept = dfa_192;
            this.special = dfa_193;
            this.transition = dfa_194;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public String getDescription() {
            return "()* loopback of 8224:3: (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA278_2 = input.LA(1);

                         
                        int index278_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred303_InternalSCTX()) ) {s = 63;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index278_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 278, _s, input);
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_193s = "\1\5\5\0\7\uffff\4\0\11\uffff";
    static final String dfa_194s = "\1\u009e\5\0\7\uffff\4\0\11\uffff";
    static final String dfa_195s = "\6\uffff\1\1\21\uffff\1\2\1\uffff";
    static final String dfa_196s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\7\uffff\1\5\1\6\1\7\1\10\11\uffff}>";
    static final String[] dfa_197s = {
            "\1\30\4\uffff\1\1\22\uffff\1\6\37\uffff\6\6\13\uffff\3\6\31\uffff\1\2\11\uffff\1\6\1\15\1\16\1\17\1\20\1\6\34\uffff\2\6\3\uffff\1\3\1\4\1\5\1\30",
=======
    static final String dfa_195s = "\1\5\5\0\7\uffff\4\0\11\uffff";
    static final String dfa_196s = "\1\u009a\5\0\7\uffff\4\0\11\uffff";
    static final String dfa_197s = "\6\uffff\1\1\21\uffff\1\2\1\uffff";
    static final String dfa_198s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\7\uffff\1\5\1\6\1\7\1\10\11\uffff}>";
    static final String[] dfa_199s = {
            "\1\30\4\uffff\1\1\22\uffff\1\6\36\uffff\6\6\13\uffff\3\6\26\uffff\1\2\11\uffff\1\6\1\15\1\16\1\17\1\20\1\6\34\uffff\2\6\3\uffff\1\3\1\4\1\5\1\30",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
<<<<<<< HEAD
    static final char[] dfa_193 = DFA.unpackEncodedStringToUnsignedChars(dfa_193s);
    static final char[] dfa_194 = DFA.unpackEncodedStringToUnsignedChars(dfa_194s);
    static final short[] dfa_195 = DFA.unpackEncodedString(dfa_195s);
    static final short[] dfa_196 = DFA.unpackEncodedString(dfa_196s);
    static final short[][] dfa_197 = unpackEncodedStringArray(dfa_197s);
=======
    static final char[] dfa_195 = DFA.unpackEncodedStringToUnsignedChars(dfa_195s);
    static final char[] dfa_196 = DFA.unpackEncodedStringToUnsignedChars(dfa_196s);
    static final short[] dfa_197 = DFA.unpackEncodedString(dfa_197s);
    static final short[] dfa_198 = DFA.unpackEncodedString(dfa_198s);
    static final short[][] dfa_199 = unpackEncodedStringArray(dfa_199s);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

    class DFA296 extends DFA {

        public DFA296(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
<<<<<<< HEAD
            this.decisionNumber = 297;
            this.eot = dfa_90;
            this.eof = dfa_90;
            this.min = dfa_193;
            this.max = dfa_194;
            this.accept = dfa_195;
            this.special = dfa_196;
            this.transition = dfa_197;
=======
            this.decisionNumber = 296;
            this.eot = dfa_66;
            this.eof = dfa_66;
            this.min = dfa_195;
            this.max = dfa_196;
            this.accept = dfa_197;
            this.special = dfa_198;
            this.transition = dfa_199;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public String getDescription() {
            return "8641:2: (this_Declaration_0= ruleDeclaration | this_MethodDeclaration_1= ruleMethodDeclaration )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA296_1 = input.LA(1);

                         
                        int index296_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred321_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index296_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA296_2 = input.LA(1);

                         
                        int index296_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred321_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index296_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA296_3 = input.LA(1);

                         
                        int index296_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred321_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index296_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA296_4 = input.LA(1);

                         
                        int index296_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred321_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index296_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA296_5 = input.LA(1);

                         
                        int index296_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred321_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index296_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA296_13 = input.LA(1);

                         
                        int index296_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred321_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index296_13);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA296_14 = input.LA(1);

                         
                        int index296_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred321_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index296_14);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA296_15 = input.LA(1);

                         
                        int index296_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred321_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index296_15);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA296_16 = input.LA(1);

                         
                        int index296_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred321_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index296_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 296, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA297 extends DFA {

        public DFA297(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
<<<<<<< HEAD
            this.decisionNumber = 298;
            this.eot = dfa_90;
            this.eof = dfa_90;
            this.min = dfa_193;
            this.max = dfa_194;
            this.accept = dfa_195;
            this.special = dfa_196;
            this.transition = dfa_197;
=======
            this.decisionNumber = 297;
            this.eot = dfa_66;
            this.eof = dfa_66;
            this.min = dfa_195;
            this.max = dfa_196;
            this.accept = dfa_197;
            this.special = dfa_198;
            this.transition = dfa_199;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public String getDescription() {
            return "8683:2: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_MethodDeclarationWOSemicolon_1= ruleMethodDeclarationWOSemicolon )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA297_1 = input.LA(1);

                         
                        int index297_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred322_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index297_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA297_2 = input.LA(1);

                         
                        int index297_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred322_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index297_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA297_3 = input.LA(1);

                         
                        int index297_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred322_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index297_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA297_4 = input.LA(1);

                         
                        int index297_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred322_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index297_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA297_5 = input.LA(1);

                         
                        int index297_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred322_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index297_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA297_13 = input.LA(1);

                         
                        int index297_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred322_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index297_13);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA297_14 = input.LA(1);

                         
                        int index297_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred322_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index297_14);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA297_15 = input.LA(1);

                         
                        int index297_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred322_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index297_15);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA297_16 = input.LA(1);

                         
                        int index297_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred322_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index297_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 297, _s, input);
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_198s = "\4\uffff\1\4\1\6\1\7\1\10\1\1\1\2\1\3\1\5\1\11";
    static final String[] dfa_199s = {
            "\1\3\2\uffff\1\4\1\uffff\1\1\105\uffff\1\5\3\uffff\1\6\1\7\24\uffff\1\2",
=======
    static final String dfa_200s = "\4\uffff\1\4\1\6\1\7\1\10\1\1\1\2\1\3\1\5\1\11";
    static final String[] dfa_201s = {
            "\1\3\2\uffff\1\4\1\uffff\1\1\104\uffff\1\5\3\uffff\1\6\1\7\21\uffff\1\2",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
<<<<<<< HEAD
    static final short[] dfa_198 = DFA.unpackEncodedString(dfa_198s);
    static final short[][] dfa_199 = unpackEncodedStringArray(dfa_199s);

    class DFA335 extends DFA {

        public DFA335(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 335;
=======
    static final short[] dfa_200 = DFA.unpackEncodedString(dfa_200s);
    static final short[][] dfa_201 = unpackEncodedStringArray(dfa_201s);

    class DFA333 extends DFA {

        public DFA333(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 333;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            this.eot = dfa_59;
            this.eof = dfa_59;
            this.min = dfa_96;
            this.max = dfa_97;
<<<<<<< HEAD
            this.accept = dfa_198;
            this.special = dfa_99;
            this.transition = dfa_199;
        }
        public String getDescription() {
            return "9968:2: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission )";
=======
            this.accept = dfa_200;
            this.special = dfa_99;
            this.transition = dfa_201;
        }
        public String getDescription() {
            return "9866:2: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission )";
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
<<<<<<< HEAD
                        int LA335_1 = input.LA(1);

                         
                        int index335_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred362_InternalSCTX()) ) {s = 8;}

                        else if ( (synpred363_InternalSCTX()) ) {s = 9;}

                        else if ( (synpred364_InternalSCTX()) ) {s = 10;}

                        else if ( (synpred365_InternalSCTX()) ) {s = 4;}

                        else if ( (synpred366_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred367_InternalSCTX()) ) {s = 5;}

                        else if ( (synpred368_InternalSCTX()) ) {s = 6;}

                        else if ( (synpred369_InternalSCTX()) ) {s = 7;}
=======
                        int LA333_1 = input.LA(1);

                         
                        int index333_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred358_InternalSCTX()) ) {s = 8;}

                        else if ( (synpred359_InternalSCTX()) ) {s = 9;}

                        else if ( (synpred360_InternalSCTX()) ) {s = 10;}

                        else if ( (synpred361_InternalSCTX()) ) {s = 4;}

                        else if ( (synpred362_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred363_InternalSCTX()) ) {s = 5;}

                        else if ( (synpred364_InternalSCTX()) ) {s = 6;}

                        else if ( (synpred365_InternalSCTX()) ) {s = 7;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 12;}

                         
<<<<<<< HEAD
                        input.seek(index335_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA335_2 = input.LA(1);

                         
                        int index335_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred362_InternalSCTX()) ) {s = 8;}

                        else if ( (synpred363_InternalSCTX()) ) {s = 9;}

                        else if ( (synpred364_InternalSCTX()) ) {s = 10;}

                        else if ( (synpred365_InternalSCTX()) ) {s = 4;}

                        else if ( (synpred366_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred367_InternalSCTX()) ) {s = 5;}

                        else if ( (synpred368_InternalSCTX()) ) {s = 6;}

                        else if ( (synpred369_InternalSCTX()) ) {s = 7;}
=======
                        input.seek(index333_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA333_2 = input.LA(1);

                         
                        int index333_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred358_InternalSCTX()) ) {s = 8;}

                        else if ( (synpred359_InternalSCTX()) ) {s = 9;}

                        else if ( (synpred360_InternalSCTX()) ) {s = 10;}

                        else if ( (synpred361_InternalSCTX()) ) {s = 4;}

                        else if ( (synpred362_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred363_InternalSCTX()) ) {s = 5;}

                        else if ( (synpred364_InternalSCTX()) ) {s = 6;}

                        else if ( (synpred365_InternalSCTX()) ) {s = 7;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 12;}

                         
<<<<<<< HEAD
                        input.seek(index335_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA335_3 = input.LA(1);

                         
                        int index335_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred362_InternalSCTX()) ) {s = 8;}

                        else if ( (synpred363_InternalSCTX()) ) {s = 9;}

                        else if ( (synpred364_InternalSCTX()) ) {s = 10;}

                        else if ( (synpred366_InternalSCTX()) ) {s = 11;}
=======
                        input.seek(index333_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA333_3 = input.LA(1);

                         
                        int index333_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred358_InternalSCTX()) ) {s = 8;}

                        else if ( (synpred359_InternalSCTX()) ) {s = 9;}

                        else if ( (synpred360_InternalSCTX()) ) {s = 10;}

                        else if ( (synpred362_InternalSCTX()) ) {s = 11;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 12;}

                         
<<<<<<< HEAD
                        input.seek(index335_3);
=======
                        input.seek(index333_3);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
<<<<<<< HEAD
                new NoViableAltException(getDescription(), 335, _s, input);
=======
                new NoViableAltException(getDescription(), 333, _s, input);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_200s = "\1\1\1\uffff\2\1\1\uffff";
    static final String dfa_201s = "\1\5\1\uffff\2\5\1\uffff";
    static final String dfa_202s = "\1\160\1\uffff\2\u008a\1\uffff";
    static final String[] dfa_203s = {
            "\1\2\2\uffff\1\1\1\uffff\1\1\11\uffff\10\1\16\uffff\1\1\1\uffff\3\1\2\uffff\1\1\1\uffff\2\1\1\uffff\7\1\7\uffff\1\1\7\uffff\2\1\2\uffff\1\1\3\uffff\2\1\24\uffff\7\1",
            "",
            "\1\1\1\4\1\uffff\1\1\1\uffff\1\1\12\uffff\2\1\6\uffff\1\1\1\uffff\1\1\4\uffff\1\1\41\uffff\1\1\5\uffff\2\1\2\uffff\2\1\1\uffff\3\1\17\uffff\1\3\4\uffff\1\1\21\uffff\17\1",
            "\1\1\1\4\1\uffff\1\1\1\uffff\1\1\12\uffff\2\1\6\uffff\1\1\1\uffff\1\1\4\uffff\1\1\41\uffff\1\1\5\uffff\2\1\2\uffff\2\1\1\uffff\3\1\17\uffff\1\3\4\uffff\1\1\21\uffff\17\1",
            ""
    };
    static final short[] dfa_200 = DFA.unpackEncodedString(dfa_200s);
    static final char[] dfa_201 = DFA.unpackEncodedStringToUnsignedChars(dfa_201s);
    static final char[] dfa_202 = DFA.unpackEncodedStringToUnsignedChars(dfa_202s);
    static final short[][] dfa_203 = unpackEncodedStringArray(dfa_203s);

    class DFA337 extends DFA {

        public DFA337(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 337;
            this.eot = dfa_130;
            this.eof = dfa_200;
            this.min = dfa_201;
            this.max = dfa_202;
            this.accept = dfa_134;
            this.special = dfa_135;
            this.transition = dfa_203;
        }
        public String getDescription() {
            return "()+ loopback of 10138:4: ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+";
        }
    }
    static final String[] dfa_204s = {
            "\1\2\2\uffff\1\1\1\uffff\1\1\12\uffff\7\1\16\uffff\1\1\1\uffff\3\1\2\uffff\1\1\1\uffff\2\1\1\uffff\7\1\7\uffff\1\1\7\uffff\2\1\2\uffff\1\1\3\uffff\2\1\24\uffff\7\1",
            "",
            "\1\1\1\4\1\uffff\1\1\1\uffff\1\1\12\uffff\2\1\6\uffff\1\1\1\uffff\1\1\4\uffff\1\1\41\uffff\1\1\5\uffff\2\1\2\uffff\2\1\1\uffff\3\1\17\uffff\1\3\4\uffff\1\1\21\uffff\17\1",
            "\1\1\1\4\1\uffff\1\1\1\uffff\1\1\12\uffff\2\1\6\uffff\1\1\1\uffff\1\1\4\uffff\1\1\41\uffff\1\1\5\uffff\2\1\2\uffff\2\1\1\uffff\3\1\17\uffff\1\3\4\uffff\1\1\21\uffff\17\1",
            ""
    };
    static final short[][] dfa_204 = unpackEncodedStringArray(dfa_204s);

    class DFA340 extends DFA {

        public DFA340(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 340;
            this.eot = dfa_130;
            this.eof = dfa_200;
            this.min = dfa_201;
            this.max = dfa_202;
            this.accept = dfa_134;
            this.special = dfa_135;
            this.transition = dfa_204;
        }
        public String getDescription() {
            return "()+ loopback of 10247:4: ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA343 extends DFA {

        public DFA343(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 343;
            this.eot = dfa_130;
            this.eof = dfa_200;
            this.min = dfa_201;
            this.max = dfa_202;
            this.accept = dfa_134;
            this.special = dfa_135;
            this.transition = dfa_204;
        }
        public String getDescription() {
            return "()+ loopback of 10367:4: ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA346 extends DFA {

        public DFA346(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 346;
            this.eot = dfa_130;
            this.eof = dfa_200;
            this.min = dfa_201;
            this.max = dfa_202;
            this.accept = dfa_134;
            this.special = dfa_135;
            this.transition = dfa_204;
        }
        public String getDescription() {
            return "()+ loopback of 10468:4: ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+";
        }
    }
    static final String[] dfa_205s = {
            "\1\2\2\uffff\1\1\1\uffff\1\1\12\uffff\7\1\16\uffff\1\1\1\uffff\3\1\2\uffff\1\1\2\uffff\1\1\1\uffff\7\1\7\uffff\1\1\7\uffff\2\1\2\uffff\1\1\3\uffff\2\1\24\uffff\7\1",
            "",
            "\1\1\1\4\1\uffff\1\1\1\uffff\1\1\12\uffff\2\1\6\uffff\1\1\1\uffff\1\1\4\uffff\1\1\41\uffff\1\1\5\uffff\2\1\2\uffff\2\1\1\uffff\3\1\17\uffff\1\3\4\uffff\1\1\21\uffff\17\1",
            "\1\1\1\4\1\uffff\1\1\1\uffff\1\1\12\uffff\2\1\6\uffff\1\1\1\uffff\1\1\4\uffff\1\1\41\uffff\1\1\5\uffff\2\1\2\uffff\2\1\1\uffff\3\1\17\uffff\1\3\4\uffff\1\1\21\uffff\17\1",
            ""
    };
    static final short[][] dfa_205 = unpackEncodedStringArray(dfa_205s);

    class DFA354 extends DFA {

        public DFA354(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 354;
            this.eot = dfa_130;
            this.eof = dfa_200;
            this.min = dfa_201;
            this.max = dfa_202;
            this.accept = dfa_134;
            this.special = dfa_135;
            this.transition = dfa_205;
        }
        public String getDescription() {
            return "()+ loopback of 10721:4: ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA361 extends DFA {

        public DFA361(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 361;
            this.eot = dfa_130;
            this.eof = dfa_200;
            this.min = dfa_201;
            this.max = dfa_202;
            this.accept = dfa_134;
            this.special = dfa_135;
            this.transition = dfa_205;
        }
        public String getDescription() {
            return "()+ loopback of 10965:4: ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+";
        }
    }
    static final String dfa_206s = "\1\4\22\0\3\uffff";
    static final String dfa_207s = "\1\u0095\22\0\3\uffff";
    static final String dfa_208s = "\23\uffff\1\1\1\uffff\1\2";
    static final String dfa_209s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\3\uffff}>";
    static final String[] dfa_210s = {
            "\1\4\1\10\1\2\1\3\1\20\1\7\1\16\12\uffff\1\5\11\uffff\1\6\1\uffff\1\23\56\uffff\1\11\4\uffff\1\13\10\uffff\1\1\7\uffff\1\12\2\uffff\1\21\1\17\46\uffff\1\14\1\23\1\15\1\uffff\1\22",
            "\1\uffff",
            "\1\uffff",
=======
    static final String dfa_202s = "\1\1\1\uffff\2\1\1\uffff";
    static final String dfa_203s = "\1\5\1\uffff\2\5\1\uffff";
    static final String dfa_204s = "\1\154\1\uffff\2\u0086\1\uffff";
    static final String[] dfa_205s = {
            "\1\2\2\uffff\1\1\1\uffff\1\1\11\uffff\10\1\16\uffff\1\1\1\uffff\3\1\2\uffff\1\1\1\uffff\1\1\1\uffff\7\1\7\uffff\1\1\7\uffff\2\1\2\uffff\1\1\3\uffff\2\1\21\uffff\7\1",
            "",
            "\1\1\1\4\1\uffff\1\1\1\uffff\1\1\12\uffff\2\1\6\uffff\1\1\1\uffff\1\1\4\uffff\1\1\40\uffff\1\1\5\uffff\2\1\2\uffff\2\1\1\uffff\3\1\14\uffff\1\3\4\uffff\1\1\21\uffff\17\1",
            "\1\1\1\4\1\uffff\1\1\1\uffff\1\1\12\uffff\2\1\6\uffff\1\1\1\uffff\1\1\4\uffff\1\1\40\uffff\1\1\5\uffff\2\1\2\uffff\2\1\1\uffff\3\1\14\uffff\1\3\4\uffff\1\1\21\uffff\17\1",
            ""
    };
    static final short[] dfa_202 = DFA.unpackEncodedString(dfa_202s);
    static final char[] dfa_203 = DFA.unpackEncodedStringToUnsignedChars(dfa_203s);
    static final char[] dfa_204 = DFA.unpackEncodedStringToUnsignedChars(dfa_204s);
    static final short[][] dfa_205 = unpackEncodedStringArray(dfa_205s);

    class DFA335 extends DFA {

        public DFA335(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 335;
            this.eot = dfa_133;
            this.eof = dfa_202;
            this.min = dfa_203;
            this.max = dfa_204;
            this.accept = dfa_137;
            this.special = dfa_138;
            this.transition = dfa_205;
        }
        public String getDescription() {
            return "()+ loopback of 10036:4: ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+";
        }
    }
    static final String[] dfa_206s = {
            "\1\2\2\uffff\1\1\1\uffff\1\1\12\uffff\7\1\16\uffff\1\1\1\uffff\3\1\2\uffff\1\1\1\uffff\1\1\1\uffff\7\1\7\uffff\1\1\7\uffff\2\1\2\uffff\1\1\3\uffff\2\1\21\uffff\7\1",
            "",
            "\1\1\1\4\1\uffff\1\1\1\uffff\1\1\12\uffff\2\1\6\uffff\1\1\1\uffff\1\1\4\uffff\1\1\40\uffff\1\1\5\uffff\2\1\2\uffff\2\1\1\uffff\3\1\14\uffff\1\3\4\uffff\1\1\21\uffff\17\1",
            "\1\1\1\4\1\uffff\1\1\1\uffff\1\1\12\uffff\2\1\6\uffff\1\1\1\uffff\1\1\4\uffff\1\1\40\uffff\1\1\5\uffff\2\1\2\uffff\2\1\1\uffff\3\1\14\uffff\1\3\4\uffff\1\1\21\uffff\17\1",
            ""
    };
    static final short[][] dfa_206 = unpackEncodedStringArray(dfa_206s);

    class DFA338 extends DFA {

        public DFA338(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 338;
            this.eot = dfa_133;
            this.eof = dfa_202;
            this.min = dfa_203;
            this.max = dfa_204;
            this.accept = dfa_137;
            this.special = dfa_138;
            this.transition = dfa_206;
        }
        public String getDescription() {
            return "()+ loopback of 10145:4: ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA341 extends DFA {

        public DFA341(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 341;
            this.eot = dfa_133;
            this.eof = dfa_202;
            this.min = dfa_203;
            this.max = dfa_204;
            this.accept = dfa_137;
            this.special = dfa_138;
            this.transition = dfa_206;
        }
        public String getDescription() {
            return "()+ loopback of 10265:4: ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA344 extends DFA {

        public DFA344(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 344;
            this.eot = dfa_133;
            this.eof = dfa_202;
            this.min = dfa_203;
            this.max = dfa_204;
            this.accept = dfa_137;
            this.special = dfa_138;
            this.transition = dfa_206;
        }
        public String getDescription() {
            return "()+ loopback of 10366:4: ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA352 extends DFA {

        public DFA352(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 352;
            this.eot = dfa_133;
            this.eof = dfa_202;
            this.min = dfa_203;
            this.max = dfa_204;
            this.accept = dfa_137;
            this.special = dfa_138;
            this.transition = dfa_206;
        }
        public String getDescription() {
            return "()+ loopback of 10619:4: ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA359 extends DFA {

        public DFA359(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 359;
            this.eot = dfa_133;
            this.eof = dfa_202;
            this.min = dfa_203;
            this.max = dfa_204;
            this.accept = dfa_137;
            this.special = dfa_138;
            this.transition = dfa_206;
        }
        public String getDescription() {
            return "()+ loopback of 10863:4: ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+";
        }
    }
    static final String dfa_207s = "\1\4\20\0\3\uffff";
    static final String dfa_208s = "\1\u008f\20\0\3\uffff";
    static final String dfa_209s = "\21\uffff\1\1\1\uffff\1\2";
    static final String dfa_210s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\3\uffff}>";
    static final String[] dfa_211s = {
            "\1\4\1\10\1\2\1\3\1\20\1\7\1\16\12\uffff\1\5\11\uffff\1\6\1\uffff\1\21\55\uffff\1\11\4\uffff\1\13\10\uffff\1\1\4\uffff\1\12\3\uffff\1\17\46\uffff\1\14\1\21\1\15",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };
<<<<<<< HEAD
    static final char[] dfa_206 = DFA.unpackEncodedStringToUnsignedChars(dfa_206s);
    static final char[] dfa_207 = DFA.unpackEncodedStringToUnsignedChars(dfa_207s);
    static final short[] dfa_208 = DFA.unpackEncodedString(dfa_208s);
    static final short[] dfa_209 = DFA.unpackEncodedString(dfa_209s);
    static final short[][] dfa_210 = unpackEncodedStringArray(dfa_210s);

    class DFA366 extends DFA {

        public DFA366(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 366;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_206;
            this.max = dfa_207;
            this.accept = dfa_208;
            this.special = dfa_209;
            this.transition = dfa_210;
        }
        public String getDescription() {
            return "11116:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression )";
=======
    static final char[] dfa_207 = DFA.unpackEncodedStringToUnsignedChars(dfa_207s);
    static final char[] dfa_208 = DFA.unpackEncodedStringToUnsignedChars(dfa_208s);
    static final short[] dfa_209 = DFA.unpackEncodedString(dfa_209s);
    static final short[] dfa_210 = DFA.unpackEncodedString(dfa_210s);
    static final short[][] dfa_211 = unpackEncodedStringArray(dfa_211s);

    class DFA364 extends DFA {

        public DFA364(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 364;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_207;
            this.max = dfa_208;
            this.accept = dfa_209;
            this.special = dfa_210;
            this.transition = dfa_211;
        }
        public String getDescription() {
            return "11014:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression )";
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
<<<<<<< HEAD
                        int LA366_1 = input.LA(1);

                         
                        int index366_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 19;}
=======
                        int LA364_1 = input.LA(1);

                         
                        int index364_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred396_InternalSCTX()) ) {s = 17;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 21;}

                         
<<<<<<< HEAD
                        input.seek(index366_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA366_2 = input.LA(1);

                         
                        int index366_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 19;}
=======
                        input.seek(index364_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA364_2 = input.LA(1);

                         
                        int index364_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred396_InternalSCTX()) ) {s = 17;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 21;}

                         
<<<<<<< HEAD
                        input.seek(index366_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA366_3 = input.LA(1);

                         
                        int index366_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 19;}
=======
                        input.seek(index364_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA364_3 = input.LA(1);

                         
                        int index364_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred396_InternalSCTX()) ) {s = 17;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 21;}

                         
<<<<<<< HEAD
                        input.seek(index366_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA366_4 = input.LA(1);

                         
                        int index366_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 19;}
=======
                        input.seek(index364_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA364_4 = input.LA(1);

                         
                        int index364_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred396_InternalSCTX()) ) {s = 17;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 21;}

                         
<<<<<<< HEAD
                        input.seek(index366_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA366_5 = input.LA(1);

                         
                        int index366_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 19;}
=======
                        input.seek(index364_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA364_5 = input.LA(1);

                         
                        int index364_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred396_InternalSCTX()) ) {s = 17;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 21;}

                         
<<<<<<< HEAD
                        input.seek(index366_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA366_6 = input.LA(1);

                         
                        int index366_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 19;}
=======
                        input.seek(index364_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA364_6 = input.LA(1);

                         
                        int index364_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred396_InternalSCTX()) ) {s = 17;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 21;}

                         
<<<<<<< HEAD
                        input.seek(index366_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA366_7 = input.LA(1);

                         
                        int index366_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 19;}
=======
                        input.seek(index364_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA364_7 = input.LA(1);

                         
                        int index364_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred396_InternalSCTX()) ) {s = 17;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 21;}

                         
<<<<<<< HEAD
                        input.seek(index366_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA366_8 = input.LA(1);

                         
                        int index366_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 19;}
=======
                        input.seek(index364_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA364_8 = input.LA(1);

                         
                        int index364_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred396_InternalSCTX()) ) {s = 17;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 21;}

                         
<<<<<<< HEAD
                        input.seek(index366_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA366_9 = input.LA(1);

                         
                        int index366_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 19;}
=======
                        input.seek(index364_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA364_9 = input.LA(1);

                         
                        int index364_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred396_InternalSCTX()) ) {s = 17;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 21;}

                         
<<<<<<< HEAD
                        input.seek(index366_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA366_10 = input.LA(1);

                         
                        int index366_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 19;}
=======
                        input.seek(index364_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA364_10 = input.LA(1);

                         
                        int index364_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred396_InternalSCTX()) ) {s = 17;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 21;}

                         
<<<<<<< HEAD
                        input.seek(index366_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA366_11 = input.LA(1);

                         
                        int index366_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 19;}
=======
                        input.seek(index364_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA364_11 = input.LA(1);

                         
                        int index364_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred396_InternalSCTX()) ) {s = 17;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 21;}

                         
<<<<<<< HEAD
                        input.seek(index366_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA366_12 = input.LA(1);

                         
                        int index366_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 19;}
=======
                        input.seek(index364_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA364_12 = input.LA(1);

                         
                        int index364_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred396_InternalSCTX()) ) {s = 17;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 21;}

                         
<<<<<<< HEAD
                        input.seek(index366_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA366_13 = input.LA(1);

                         
                        int index366_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 19;}
=======
                        input.seek(index364_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA364_13 = input.LA(1);

                         
                        int index364_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred396_InternalSCTX()) ) {s = 17;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 21;}

                         
<<<<<<< HEAD
                        input.seek(index366_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA366_14 = input.LA(1);

                         
                        int index366_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 19;}
=======
                        input.seek(index364_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA364_14 = input.LA(1);

                         
                        int index364_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred396_InternalSCTX()) ) {s = 17;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 21;}

                         
<<<<<<< HEAD
                        input.seek(index366_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA366_15 = input.LA(1);

                         
                        int index366_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 19;}
=======
                        input.seek(index364_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA364_15 = input.LA(1);

                         
                        int index364_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred396_InternalSCTX()) ) {s = 17;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 21;}

                         
<<<<<<< HEAD
                        input.seek(index366_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA366_16 = input.LA(1);

                         
                        int index366_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 19;}
=======
                        input.seek(index364_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA364_16 = input.LA(1);

                         
                        int index364_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred396_InternalSCTX()) ) {s = 17;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index366_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA366_17 = input.LA(1);

                         
                        int index366_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
<<<<<<< HEAD
                        input.seek(index366_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA366_18 = input.LA(1);

                         
                        int index366_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred400_InternalSCTX()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index366_18);
=======
                        input.seek(index364_16);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
<<<<<<< HEAD
                new NoViableAltException(getDescription(), 366, _s, input);
=======
                new NoViableAltException(getDescription(), 364, _s, input);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_211s = "\25\uffff";
    static final String dfa_212s = "\1\4\5\uffff\13\0\4\uffff";
    static final String dfa_213s = "\1\u0095\5\uffff\13\0\4\uffff";
    static final String dfa_214s = "\1\uffff\1\1\21\uffff\1\2\1\uffff";
    static final String dfa_215s = "\6\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\4\uffff}>";
    static final String[] dfa_216s = {
            "\1\1\1\10\2\1\1\20\1\7\1\16\12\uffff\1\1\11\uffff\1\6\1\uffff\1\23\56\uffff\1\11\4\uffff\1\13\10\uffff\1\1\7\uffff\1\12\2\uffff\1\1\1\17\46\uffff\1\14\1\23\1\15\1\uffff\1\1",
=======
    static final String dfa_212s = "\23\uffff";
    static final String dfa_213s = "\1\4\5\uffff\13\0\2\uffff";
    static final String dfa_214s = "\1\u008f\5\uffff\13\0\2\uffff";
    static final String dfa_215s = "\1\uffff\1\1\17\uffff\1\2\1\uffff";
    static final String dfa_216s = "\6\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\2\uffff}>";
    static final String[] dfa_217s = {
            "\1\1\1\10\2\1\1\20\1\7\1\16\12\uffff\1\1\11\uffff\1\6\1\uffff\1\21\55\uffff\1\11\4\uffff\1\13\10\uffff\1\1\4\uffff\1\12\3\uffff\1\17\46\uffff\1\14\1\21\1\15",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };

<<<<<<< HEAD
    static final short[] dfa_211 = DFA.unpackEncodedString(dfa_211s);
    static final char[] dfa_212 = DFA.unpackEncodedStringToUnsignedChars(dfa_212s);
    static final char[] dfa_213 = DFA.unpackEncodedStringToUnsignedChars(dfa_213s);
    static final short[] dfa_214 = DFA.unpackEncodedString(dfa_214s);
    static final short[] dfa_215 = DFA.unpackEncodedString(dfa_215s);
    static final short[][] dfa_216 = unpackEncodedStringArray(dfa_216s);

    class DFA378 extends DFA {

        public DFA378(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 378;
            this.eot = dfa_211;
            this.eof = dfa_211;
            this.min = dfa_212;
            this.max = dfa_213;
            this.accept = dfa_214;
            this.special = dfa_215;
            this.transition = dfa_216;
        }
        public String getDescription() {
            return "11801:2: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )";
=======
    static final short[] dfa_212 = DFA.unpackEncodedString(dfa_212s);
    static final char[] dfa_213 = DFA.unpackEncodedStringToUnsignedChars(dfa_213s);
    static final char[] dfa_214 = DFA.unpackEncodedStringToUnsignedChars(dfa_214s);
    static final short[] dfa_215 = DFA.unpackEncodedString(dfa_215s);
    static final short[] dfa_216 = DFA.unpackEncodedString(dfa_216s);
    static final short[][] dfa_217 = unpackEncodedStringArray(dfa_217s);

    class DFA376 extends DFA {

        public DFA376(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 376;
            this.eot = dfa_212;
            this.eof = dfa_212;
            this.min = dfa_213;
            this.max = dfa_214;
            this.accept = dfa_215;
            this.special = dfa_216;
            this.transition = dfa_217;
        }
        public String getDescription() {
            return "11699:2: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )";
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
<<<<<<< HEAD
                        int LA378_6 = input.LA(1);

                         
                        int index378_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred412_InternalSCTX()) ) {s = 1;}
=======
                        int LA376_6 = input.LA(1);

                         
                        int index376_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred408_InternalSCTX()) ) {s = 1;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 19;}

                         
<<<<<<< HEAD
                        input.seek(index378_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA378_7 = input.LA(1);

                         
                        int index378_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred412_InternalSCTX()) ) {s = 1;}
=======
                        input.seek(index376_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA376_7 = input.LA(1);

                         
                        int index376_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred408_InternalSCTX()) ) {s = 1;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 19;}

                         
<<<<<<< HEAD
                        input.seek(index378_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA378_8 = input.LA(1);

                         
                        int index378_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred412_InternalSCTX()) ) {s = 1;}
=======
                        input.seek(index376_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA376_8 = input.LA(1);

                         
                        int index376_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred408_InternalSCTX()) ) {s = 1;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 19;}

                         
<<<<<<< HEAD
                        input.seek(index378_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA378_9 = input.LA(1);

                         
                        int index378_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred412_InternalSCTX()) ) {s = 1;}
=======
                        input.seek(index376_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA376_9 = input.LA(1);

                         
                        int index376_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred408_InternalSCTX()) ) {s = 1;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 19;}

                         
<<<<<<< HEAD
                        input.seek(index378_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA378_10 = input.LA(1);

                         
                        int index378_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred412_InternalSCTX()) ) {s = 1;}
=======
                        input.seek(index376_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA376_10 = input.LA(1);

                         
                        int index376_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred408_InternalSCTX()) ) {s = 1;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 19;}

                         
<<<<<<< HEAD
                        input.seek(index378_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA378_11 = input.LA(1);

                         
                        int index378_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred412_InternalSCTX()) ) {s = 1;}
=======
                        input.seek(index376_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA376_11 = input.LA(1);

                         
                        int index376_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred408_InternalSCTX()) ) {s = 1;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 19;}

                         
<<<<<<< HEAD
                        input.seek(index378_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA378_12 = input.LA(1);

                         
                        int index378_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred412_InternalSCTX()) ) {s = 1;}
=======
                        input.seek(index376_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA376_12 = input.LA(1);

                         
                        int index376_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred408_InternalSCTX()) ) {s = 1;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 19;}

                         
<<<<<<< HEAD
                        input.seek(index378_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA378_13 = input.LA(1);

                         
                        int index378_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred412_InternalSCTX()) ) {s = 1;}
=======
                        input.seek(index376_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA376_13 = input.LA(1);

                         
                        int index376_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred408_InternalSCTX()) ) {s = 1;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 19;}

                         
<<<<<<< HEAD
                        input.seek(index378_13);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA378_14 = input.LA(1);

                         
                        int index378_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred412_InternalSCTX()) ) {s = 1;}
=======
                        input.seek(index376_13);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA376_14 = input.LA(1);

                         
                        int index376_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred408_InternalSCTX()) ) {s = 1;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 19;}

                         
<<<<<<< HEAD
                        input.seek(index378_14);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA378_15 = input.LA(1);

                         
                        int index378_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred412_InternalSCTX()) ) {s = 1;}
=======
                        input.seek(index376_14);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA376_15 = input.LA(1);

                         
                        int index376_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred408_InternalSCTX()) ) {s = 1;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 19;}

                         
<<<<<<< HEAD
                        input.seek(index378_15);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA378_16 = input.LA(1);

                         
                        int index378_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred412_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index378_16);
=======
                        input.seek(index376_15);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA376_16 = input.LA(1);

                         
                        int index376_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred408_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index376_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 376, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_218s = "\133\uffff";
    static final String dfa_219s = "\1\1\132\uffff";
    static final String dfa_220s = "\1\5\126\uffff\1\0\3\uffff";
    static final String dfa_221s = "\1\u009a\126\uffff\1\0\3\uffff";
    static final String dfa_222s = "\1\uffff\1\2\130\uffff\1\1";
    static final String dfa_223s = "\127\uffff\1\0\3\uffff}>";
    static final String[] dfa_224s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\10\1\1\uffff\1\1\2\uffff\1\1\1\uffff\2\1\1\uffff\6\1\1\uffff\6\1\1\uffff\17\1\1\uffff\2\1\2\uffff\2\1\1\uffff\6\1\1\uffff\1\1\1\uffff\6\1\1\127\2\1\12\uffff\7\1\3\uffff\6\1\21\uffff\6\1\5\uffff\2\1\3\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_218 = DFA.unpackEncodedString(dfa_218s);
    static final short[] dfa_219 = DFA.unpackEncodedString(dfa_219s);
    static final char[] dfa_220 = DFA.unpackEncodedStringToUnsignedChars(dfa_220s);
    static final char[] dfa_221 = DFA.unpackEncodedStringToUnsignedChars(dfa_221s);
    static final short[] dfa_222 = DFA.unpackEncodedString(dfa_222s);
    static final short[] dfa_223 = DFA.unpackEncodedString(dfa_223s);
    static final short[][] dfa_224 = unpackEncodedStringArray(dfa_224s);

    class DFA379 extends DFA {

        public DFA379(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 379;
            this.eot = dfa_218;
            this.eof = dfa_219;
            this.min = dfa_220;
            this.max = dfa_221;
            this.accept = dfa_222;
            this.special = dfa_223;
            this.transition = dfa_224;
        }
        public String getDescription() {
            return "()* loopback of 11993:5: (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA379_87 = input.LA(1);

                         
                        int index379_87 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred411_InternalSCTX()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index379_87);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
<<<<<<< HEAD
                new NoViableAltException(getDescription(), 378, _s, input);
=======
                new NoViableAltException(getDescription(), 379, _s, input);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_217s = "\134\uffff";
    static final String dfa_218s = "\1\1\133\uffff";
    static final String dfa_219s = "\1\5\127\uffff\1\0\3\uffff";
    static final String dfa_220s = "\1\u009e\127\uffff\1\0\3\uffff";
    static final String dfa_221s = "\1\uffff\1\2\131\uffff\1\1";
    static final String dfa_222s = "\130\uffff\1\0\3\uffff}>";
    static final String[] dfa_223s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\10\1\1\uffff\1\1\2\uffff\1\1\1\uffff\2\1\1\uffff\6\1\1\uffff\6\1\1\uffff\20\1\1\uffff\2\1\2\uffff\2\1\1\uffff\6\1\1\uffff\1\1\1\uffff\6\1\1\130\2\1\15\uffff\7\1\3\uffff\6\1\21\uffff\6\1\5\uffff\2\1\3\uffff\4\1",
=======
    static final String dfa_225s = "\1\5\127\uffff\1\0\2\uffff";
    static final String dfa_226s = "\1\u009a\127\uffff\1\0\2\uffff";
    static final String dfa_227s = "\130\uffff\1\0\2\uffff}>";
    static final String[] dfa_228s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\10\1\1\uffff\1\1\2\uffff\1\1\1\uffff\2\1\1\uffff\6\1\1\uffff\6\1\1\uffff\17\1\1\uffff\2\1\2\uffff\2\1\1\uffff\6\1\1\uffff\1\1\1\uffff\7\1\1\130\1\1\12\uffff\7\1\3\uffff\6\1\21\uffff\6\1\5\uffff\2\1\3\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
<<<<<<< HEAD
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_217 = DFA.unpackEncodedString(dfa_217s);
    static final short[] dfa_218 = DFA.unpackEncodedString(dfa_218s);
    static final char[] dfa_219 = DFA.unpackEncodedStringToUnsignedChars(dfa_219s);
    static final char[] dfa_220 = DFA.unpackEncodedStringToUnsignedChars(dfa_220s);
    static final short[] dfa_221 = DFA.unpackEncodedString(dfa_221s);
    static final short[] dfa_222 = DFA.unpackEncodedString(dfa_222s);
    static final short[][] dfa_223 = unpackEncodedStringArray(dfa_223s);

    class DFA381 extends DFA {

        public DFA381(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 381;
            this.eot = dfa_217;
            this.eof = dfa_218;
            this.min = dfa_219;
            this.max = dfa_220;
            this.accept = dfa_221;
            this.special = dfa_222;
            this.transition = dfa_223;
        }
        public String getDescription() {
            return "()* loopback of 12095:5: (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )*";
=======
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_225 = DFA.unpackEncodedStringToUnsignedChars(dfa_225s);
    static final char[] dfa_226 = DFA.unpackEncodedStringToUnsignedChars(dfa_226s);
    static final short[] dfa_227 = DFA.unpackEncodedString(dfa_227s);
    static final short[][] dfa_228 = unpackEncodedStringArray(dfa_228s);

    class DFA380 extends DFA {

        public DFA380(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 380;
            this.eot = dfa_218;
            this.eof = dfa_219;
            this.min = dfa_225;
            this.max = dfa_226;
            this.accept = dfa_222;
            this.special = dfa_227;
            this.transition = dfa_228;
        }
        public String getDescription() {
            return "()* loopback of 12069:5: (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )*";
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
<<<<<<< HEAD
                        int LA381_88 = input.LA(1);

                         
                        int index381_88 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred415_InternalSCTX()) ) {s = 91;}
=======
                        int LA380_88 = input.LA(1);

                         
                        int index380_88 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred413_InternalSCTX()) ) {s = 90;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 1;}

                         
<<<<<<< HEAD
                        input.seek(index381_88);
=======
                        input.seek(index380_88);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
<<<<<<< HEAD
                new NoViableAltException(getDescription(), 381, _s, input);
=======
                new NoViableAltException(getDescription(), 380, _s, input);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_224s = "\1\5\130\uffff\1\0\2\uffff";
    static final String dfa_225s = "\1\u009e\130\uffff\1\0\2\uffff";
    static final String dfa_226s = "\131\uffff\1\0\2\uffff}>";
    static final String[] dfa_227s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\10\1\1\uffff\1\1\2\uffff\1\1\1\uffff\2\1\1\uffff\6\1\1\uffff\6\1\1\uffff\20\1\1\uffff\2\1\2\uffff\2\1\1\uffff\6\1\1\uffff\1\1\1\uffff\7\1\1\131\1\1\15\uffff\7\1\3\uffff\6\1\21\uffff\6\1\5\uffff\2\1\3\uffff\4\1",
=======
    static final String dfa_229s = "\1\5\130\uffff\1\0\1\uffff";
    static final String dfa_230s = "\1\u009a\130\uffff\1\0\1\uffff";
    static final String dfa_231s = "\131\uffff\1\0\1\uffff}>";
    static final String[] dfa_232s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\10\1\1\uffff\1\1\2\uffff\1\1\1\uffff\2\1\1\uffff\6\1\1\uffff\6\1\1\uffff\17\1\1\uffff\2\1\2\uffff\2\1\1\uffff\6\1\1\uffff\1\1\1\uffff\10\1\1\131\12\uffff\7\1\3\uffff\6\1\21\uffff\6\1\5\uffff\2\1\3\uffff\4\1",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };
<<<<<<< HEAD
    static final char[] dfa_224 = DFA.unpackEncodedStringToUnsignedChars(dfa_224s);
    static final char[] dfa_225 = DFA.unpackEncodedStringToUnsignedChars(dfa_225s);
    static final short[] dfa_226 = DFA.unpackEncodedString(dfa_226s);
    static final short[][] dfa_227 = unpackEncodedStringArray(dfa_227s);
=======
    static final char[] dfa_229 = DFA.unpackEncodedStringToUnsignedChars(dfa_229s);
    static final char[] dfa_230 = DFA.unpackEncodedStringToUnsignedChars(dfa_230s);
    static final short[] dfa_231 = DFA.unpackEncodedString(dfa_231s);
    static final short[][] dfa_232 = unpackEncodedStringArray(dfa_232s);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

    class DFA381 extends DFA {

        public DFA381(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
<<<<<<< HEAD
            this.decisionNumber = 382;
            this.eot = dfa_217;
            this.eof = dfa_218;
            this.min = dfa_224;
            this.max = dfa_225;
            this.accept = dfa_221;
            this.special = dfa_226;
            this.transition = dfa_227;
        }
        public String getDescription() {
            return "()* loopback of 12171:5: (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )*";
=======
            this.decisionNumber = 381;
            this.eot = dfa_218;
            this.eof = dfa_219;
            this.min = dfa_229;
            this.max = dfa_230;
            this.accept = dfa_222;
            this.special = dfa_231;
            this.transition = dfa_232;
        }
        public String getDescription() {
            return "()* loopback of 12145:5: (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )*";
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
<<<<<<< HEAD
                        int LA382_89 = input.LA(1);

                         
                        int index382_89 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred417_InternalSCTX()) ) {s = 91;}
=======
                        int LA381_89 = input.LA(1);

                         
                        int index381_89 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred415_InternalSCTX()) ) {s = 90;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 1;}

                         
<<<<<<< HEAD
                        input.seek(index382_89);
=======
                        input.seek(index381_89);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 381, _s, input);
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_228s = "\1\5\131\uffff\1\0\1\uffff";
    static final String dfa_229s = "\1\u009e\131\uffff\1\0\1\uffff";
    static final String dfa_230s = "\132\uffff\1\0\1\uffff}>";
    static final String[] dfa_231s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\10\1\1\uffff\1\1\2\uffff\1\1\1\uffff\2\1\1\uffff\6\1\1\uffff\6\1\1\uffff\20\1\1\uffff\2\1\2\uffff\2\1\1\uffff\6\1\1\uffff\1\1\1\uffff\10\1\1\132\15\uffff\7\1\3\uffff\6\1\21\uffff\6\1\5\uffff\2\1\3\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };
    static final char[] dfa_228 = DFA.unpackEncodedStringToUnsignedChars(dfa_228s);
    static final char[] dfa_229 = DFA.unpackEncodedStringToUnsignedChars(dfa_229s);
    static final short[] dfa_230 = DFA.unpackEncodedString(dfa_230s);
    static final short[][] dfa_231 = unpackEncodedStringArray(dfa_231s);

    class DFA383 extends DFA {

        public DFA383(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 383;
            this.eot = dfa_217;
            this.eof = dfa_218;
            this.min = dfa_228;
            this.max = dfa_229;
            this.accept = dfa_221;
            this.special = dfa_230;
            this.transition = dfa_231;
        }
        public String getDescription() {
            return "()* loopback of 12247:5: (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA383_90 = input.LA(1);

                         
                        int index383_90 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred419_InternalSCTX()) ) {s = 91;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index383_90);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 383, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_232s = "\136\uffff";
    static final String dfa_233s = "\1\1\135\uffff";
    static final String dfa_234s = "\1\5\132\uffff\1\0\2\uffff";
    static final String dfa_235s = "\1\u009e\132\uffff\1\0\2\uffff";
    static final String dfa_236s = "\1\uffff\1\2\133\uffff\1\1";
    static final String dfa_237s = "\133\uffff\1\0\2\uffff}>";
    static final String[] dfa_238s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\10\1\1\uffff\1\1\2\uffff\1\1\1\uffff\2\1\1\uffff\6\1\1\uffff\6\1\1\uffff\20\1\1\uffff\2\1\2\uffff\2\1\1\uffff\6\1\1\uffff\1\1\1\uffff\11\1\1\133\1\1\13\uffff\7\1\3\uffff\6\1\21\uffff\6\1\5\uffff\2\1\3\uffff\4\1",
            "",
=======
    static final String dfa_233s = "\135\uffff";
    static final String dfa_234s = "\1\1\134\uffff";
    static final String dfa_235s = "\1\5\131\uffff\1\0\2\uffff";
    static final String dfa_236s = "\1\u009a\131\uffff\1\0\2\uffff";
    static final String dfa_237s = "\1\uffff\1\2\132\uffff\1\1";
    static final String dfa_238s = "\132\uffff\1\0\2\uffff}>";
    static final String[] dfa_239s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\10\1\1\uffff\1\1\2\uffff\1\1\1\uffff\2\1\1\uffff\6\1\1\uffff\6\1\1\uffff\17\1\1\uffff\2\1\2\uffff\2\1\1\uffff\6\1\1\uffff\1\1\1\uffff\11\1\1\132\1\1\10\uffff\7\1\3\uffff\6\1\21\uffff\6\1\5\uffff\2\1\3\uffff\4\1",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };

<<<<<<< HEAD
    static final short[] dfa_232 = DFA.unpackEncodedString(dfa_232s);
    static final short[] dfa_233 = DFA.unpackEncodedString(dfa_233s);
    static final char[] dfa_234 = DFA.unpackEncodedStringToUnsignedChars(dfa_234s);
    static final char[] dfa_235 = DFA.unpackEncodedStringToUnsignedChars(dfa_235s);
    static final short[] dfa_236 = DFA.unpackEncodedString(dfa_236s);
    static final short[] dfa_237 = DFA.unpackEncodedString(dfa_237s);
    static final short[][] dfa_238 = unpackEncodedStringArray(dfa_238s);

    class DFA389 extends DFA {

        public DFA389(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 389;
            this.eot = dfa_232;
            this.eof = dfa_233;
            this.min = dfa_234;
            this.max = dfa_235;
            this.accept = dfa_236;
            this.special = dfa_237;
            this.transition = dfa_238;
        }
        public String getDescription() {
            return "()* loopback of 12568:5: (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )*";
=======
    static final short[] dfa_233 = DFA.unpackEncodedString(dfa_233s);
    static final short[] dfa_234 = DFA.unpackEncodedString(dfa_234s);
    static final char[] dfa_235 = DFA.unpackEncodedStringToUnsignedChars(dfa_235s);
    static final char[] dfa_236 = DFA.unpackEncodedStringToUnsignedChars(dfa_236s);
    static final short[] dfa_237 = DFA.unpackEncodedString(dfa_237s);
    static final short[] dfa_238 = DFA.unpackEncodedString(dfa_238s);
    static final short[][] dfa_239 = unpackEncodedStringArray(dfa_239s);

    class DFA387 extends DFA {

        public DFA387(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 387;
            this.eot = dfa_233;
            this.eof = dfa_234;
            this.min = dfa_235;
            this.max = dfa_236;
            this.accept = dfa_237;
            this.special = dfa_238;
            this.transition = dfa_239;
        }
        public String getDescription() {
            return "()* loopback of 12466:5: (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )*";
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
<<<<<<< HEAD
                        int LA389_91 = input.LA(1);

                         
                        int index389_91 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred425_InternalSCTX()) ) {s = 93;}
=======
                        int LA387_90 = input.LA(1);

                         
                        int index387_90 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred421_InternalSCTX()) ) {s = 92;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 1;}

                         
<<<<<<< HEAD
                        input.seek(index389_91);
=======
                        input.seek(index387_90);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
<<<<<<< HEAD
                new NoViableAltException(getDescription(), 389, _s, input);
=======
                new NoViableAltException(getDescription(), 387, _s, input);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_239s = "\1\5\133\uffff\1\0\1\uffff";
    static final String dfa_240s = "\1\u009e\133\uffff\1\0\1\uffff";
    static final String dfa_241s = "\134\uffff\1\0\1\uffff}>";
    static final String[] dfa_242s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\10\1\1\uffff\1\1\2\uffff\1\1\1\uffff\2\1\1\uffff\6\1\1\uffff\6\1\1\uffff\20\1\1\uffff\2\1\2\uffff\2\1\1\uffff\6\1\1\uffff\1\1\1\uffff\12\1\1\134\13\uffff\7\1\3\uffff\6\1\21\uffff\6\1\5\uffff\2\1\3\uffff\4\1",
            "",
=======
    static final String dfa_240s = "\1\5\132\uffff\1\0\1\uffff";
    static final String dfa_241s = "\1\u009a\132\uffff\1\0\1\uffff";
    static final String dfa_242s = "\133\uffff\1\0\1\uffff}>";
    static final String[] dfa_243s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\10\1\1\uffff\1\1\2\uffff\1\1\1\uffff\2\1\1\uffff\6\1\1\uffff\6\1\1\uffff\17\1\1\uffff\2\1\2\uffff\2\1\1\uffff\6\1\1\uffff\1\1\1\uffff\12\1\1\133\10\uffff\7\1\3\uffff\6\1\21\uffff\6\1\5\uffff\2\1\3\uffff\4\1",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };
<<<<<<< HEAD
    static final char[] dfa_239 = DFA.unpackEncodedStringToUnsignedChars(dfa_239s);
    static final char[] dfa_240 = DFA.unpackEncodedStringToUnsignedChars(dfa_240s);
    static final short[] dfa_241 = DFA.unpackEncodedString(dfa_241s);
    static final short[][] dfa_242 = unpackEncodedStringArray(dfa_242s);

    class DFA390 extends DFA {

        public DFA390(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 390;
            this.eot = dfa_232;
            this.eof = dfa_233;
            this.min = dfa_239;
            this.max = dfa_240;
            this.accept = dfa_236;
            this.special = dfa_241;
            this.transition = dfa_242;
        }
        public String getDescription() {
            return "()* loopback of 12644:5: (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )*";
=======
    static final char[] dfa_240 = DFA.unpackEncodedStringToUnsignedChars(dfa_240s);
    static final char[] dfa_241 = DFA.unpackEncodedStringToUnsignedChars(dfa_241s);
    static final short[] dfa_242 = DFA.unpackEncodedString(dfa_242s);
    static final short[][] dfa_243 = unpackEncodedStringArray(dfa_243s);

    class DFA388 extends DFA {

        public DFA388(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 388;
            this.eot = dfa_233;
            this.eof = dfa_234;
            this.min = dfa_240;
            this.max = dfa_241;
            this.accept = dfa_237;
            this.special = dfa_242;
            this.transition = dfa_243;
        }
        public String getDescription() {
            return "()* loopback of 12542:5: (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )*";
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
<<<<<<< HEAD
                        int LA390_92 = input.LA(1);

                         
                        int index390_92 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred427_InternalSCTX()) ) {s = 93;}
=======
                        int LA388_91 = input.LA(1);

                         
                        int index388_91 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred423_InternalSCTX()) ) {s = 92;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 1;}

                         
<<<<<<< HEAD
                        input.seek(index390_92);
=======
                        input.seek(index388_91);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
<<<<<<< HEAD
                new NoViableAltException(getDescription(), 390, _s, input);
=======
                new NoViableAltException(getDescription(), 388, _s, input);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_243s = "\141\uffff";
    static final String dfa_244s = "\1\1\140\uffff";
    static final String dfa_245s = "\1\5\134\uffff\1\0\3\uffff";
    static final String dfa_246s = "\1\u009e\134\uffff\1\0\3\uffff";
    static final String dfa_247s = "\1\uffff\1\2\136\uffff\1\1";
    static final String dfa_248s = "\135\uffff\1\0\3\uffff}>";
    static final String[] dfa_249s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\10\1\1\uffff\1\1\2\uffff\1\1\1\uffff\2\1\1\uffff\6\1\1\uffff\6\1\1\uffff\20\1\1\uffff\2\1\2\uffff\2\1\1\uffff\6\1\1\uffff\1\1\1\uffff\13\1\1\135\2\1\10\uffff\7\1\3\uffff\6\1\21\uffff\6\1\5\uffff\2\1\3\uffff\4\1",
            "",
=======
    static final String dfa_244s = "\140\uffff";
    static final String dfa_245s = "\1\1\137\uffff";
    static final String dfa_246s = "\1\5\133\uffff\1\0\3\uffff";
    static final String dfa_247s = "\1\u009a\133\uffff\1\0\3\uffff";
    static final String dfa_248s = "\1\uffff\1\2\135\uffff\1\1";
    static final String dfa_249s = "\134\uffff\1\0\3\uffff}>";
    static final String[] dfa_250s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\10\1\1\uffff\1\1\2\uffff\1\1\1\uffff\2\1\1\uffff\6\1\1\uffff\6\1\1\uffff\17\1\1\uffff\2\1\2\uffff\2\1\1\uffff\6\1\1\uffff\1\1\1\uffff\13\1\1\134\2\1\5\uffff\7\1\3\uffff\6\1\21\uffff\6\1\5\uffff\2\1\3\uffff\4\1",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

<<<<<<< HEAD
    static final short[] dfa_243 = DFA.unpackEncodedString(dfa_243s);
    static final short[] dfa_244 = DFA.unpackEncodedString(dfa_244s);
    static final char[] dfa_245 = DFA.unpackEncodedStringToUnsignedChars(dfa_245s);
    static final char[] dfa_246 = DFA.unpackEncodedStringToUnsignedChars(dfa_246s);
    static final short[] dfa_247 = DFA.unpackEncodedString(dfa_247s);
    static final short[] dfa_248 = DFA.unpackEncodedString(dfa_248s);
    static final short[][] dfa_249 = unpackEncodedStringArray(dfa_249s);

    class DFA392 extends DFA {

        public DFA392(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 392;
            this.eot = dfa_243;
            this.eof = dfa_244;
            this.min = dfa_245;
            this.max = dfa_246;
            this.accept = dfa_247;
            this.special = dfa_248;
            this.transition = dfa_249;
        }
        public String getDescription() {
            return "()* loopback of 12751:5: (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )*";
=======
    static final short[] dfa_244 = DFA.unpackEncodedString(dfa_244s);
    static final short[] dfa_245 = DFA.unpackEncodedString(dfa_245s);
    static final char[] dfa_246 = DFA.unpackEncodedStringToUnsignedChars(dfa_246s);
    static final char[] dfa_247 = DFA.unpackEncodedStringToUnsignedChars(dfa_247s);
    static final short[] dfa_248 = DFA.unpackEncodedString(dfa_248s);
    static final short[] dfa_249 = DFA.unpackEncodedString(dfa_249s);
    static final short[][] dfa_250 = unpackEncodedStringArray(dfa_250s);

    class DFA390 extends DFA {

        public DFA390(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 390;
            this.eot = dfa_244;
            this.eof = dfa_245;
            this.min = dfa_246;
            this.max = dfa_247;
            this.accept = dfa_248;
            this.special = dfa_249;
            this.transition = dfa_250;
        }
        public String getDescription() {
            return "()* loopback of 12649:5: (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )*";
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
<<<<<<< HEAD
                        int LA392_93 = input.LA(1);

                         
                        int index392_93 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred429_InternalSCTX()) ) {s = 96;}
=======
                        int LA390_92 = input.LA(1);

                         
                        int index390_92 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred425_InternalSCTX()) ) {s = 95;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 1;}

                         
<<<<<<< HEAD
                        input.seek(index392_93);
=======
                        input.seek(index390_92);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
<<<<<<< HEAD
                new NoViableAltException(getDescription(), 392, _s, input);
=======
                new NoViableAltException(getDescription(), 390, _s, input);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_250s = "\1\5\135\uffff\1\0\2\uffff";
    static final String dfa_251s = "\1\u009e\135\uffff\1\0\2\uffff";
    static final String dfa_252s = "\136\uffff\1\0\2\uffff}>";
    static final String[] dfa_253s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\10\1\1\uffff\1\1\2\uffff\1\1\1\uffff\2\1\1\uffff\6\1\1\uffff\6\1\1\uffff\20\1\1\uffff\2\1\2\uffff\2\1\1\uffff\6\1\1\uffff\1\1\1\uffff\14\1\1\136\1\1\10\uffff\7\1\3\uffff\6\1\21\uffff\6\1\5\uffff\2\1\3\uffff\4\1",
            "",
=======
    static final String dfa_251s = "\1\5\134\uffff\1\0\2\uffff";
    static final String dfa_252s = "\1\u009a\134\uffff\1\0\2\uffff";
    static final String dfa_253s = "\135\uffff\1\0\2\uffff}>";
    static final String[] dfa_254s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\10\1\1\uffff\1\1\2\uffff\1\1\1\uffff\2\1\1\uffff\6\1\1\uffff\6\1\1\uffff\17\1\1\uffff\2\1\2\uffff\2\1\1\uffff\6\1\1\uffff\1\1\1\uffff\14\1\1\135\1\1\5\uffff\7\1\3\uffff\6\1\21\uffff\6\1\5\uffff\2\1\3\uffff\4\1",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };
<<<<<<< HEAD
    static final char[] dfa_250 = DFA.unpackEncodedStringToUnsignedChars(dfa_250s);
    static final char[] dfa_251 = DFA.unpackEncodedStringToUnsignedChars(dfa_251s);
    static final short[] dfa_252 = DFA.unpackEncodedString(dfa_252s);
    static final short[][] dfa_253 = unpackEncodedStringArray(dfa_253s);

    class DFA393 extends DFA {

        public DFA393(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 393;
            this.eot = dfa_243;
            this.eof = dfa_244;
            this.min = dfa_250;
            this.max = dfa_251;
            this.accept = dfa_247;
            this.special = dfa_252;
            this.transition = dfa_253;
        }
        public String getDescription() {
            return "()* loopback of 12827:5: (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )*";
=======
    static final char[] dfa_251 = DFA.unpackEncodedStringToUnsignedChars(dfa_251s);
    static final char[] dfa_252 = DFA.unpackEncodedStringToUnsignedChars(dfa_252s);
    static final short[] dfa_253 = DFA.unpackEncodedString(dfa_253s);
    static final short[][] dfa_254 = unpackEncodedStringArray(dfa_254s);

    class DFA391 extends DFA {

        public DFA391(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 391;
            this.eot = dfa_244;
            this.eof = dfa_245;
            this.min = dfa_251;
            this.max = dfa_252;
            this.accept = dfa_248;
            this.special = dfa_253;
            this.transition = dfa_254;
        }
        public String getDescription() {
            return "()* loopback of 12725:5: (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )*";
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
<<<<<<< HEAD
                        int LA393_94 = input.LA(1);

                         
                        int index393_94 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred431_InternalSCTX()) ) {s = 96;}
=======
                        int LA391_93 = input.LA(1);

                         
                        int index391_93 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred427_InternalSCTX()) ) {s = 95;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 1;}

                         
<<<<<<< HEAD
                        input.seek(index393_94);
=======
                        input.seek(index391_93);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
<<<<<<< HEAD
                new NoViableAltException(getDescription(), 393, _s, input);
=======
                new NoViableAltException(getDescription(), 391, _s, input);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_254s = "\1\5\136\uffff\1\0\1\uffff";
    static final String dfa_255s = "\1\u009e\136\uffff\1\0\1\uffff";
    static final String dfa_256s = "\137\uffff\1\0\1\uffff}>";
    static final String[] dfa_257s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\10\1\1\uffff\1\1\2\uffff\1\1\1\uffff\2\1\1\uffff\6\1\1\uffff\6\1\1\uffff\20\1\1\uffff\2\1\2\uffff\2\1\1\uffff\6\1\1\uffff\1\1\1\uffff\15\1\1\137\10\uffff\7\1\3\uffff\6\1\21\uffff\6\1\5\uffff\2\1\3\uffff\4\1",
            "",
=======
    static final String dfa_255s = "\1\5\135\uffff\1\0\1\uffff";
    static final String dfa_256s = "\1\u009a\135\uffff\1\0\1\uffff";
    static final String dfa_257s = "\136\uffff\1\0\1\uffff}>";
    static final String[] dfa_258s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\10\1\1\uffff\1\1\2\uffff\1\1\1\uffff\2\1\1\uffff\6\1\1\uffff\6\1\1\uffff\17\1\1\uffff\2\1\2\uffff\2\1\1\uffff\6\1\1\uffff\1\1\1\uffff\15\1\1\136\5\uffff\7\1\3\uffff\6\1\21\uffff\6\1\5\uffff\2\1\3\uffff\4\1",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };
<<<<<<< HEAD
    static final char[] dfa_254 = DFA.unpackEncodedStringToUnsignedChars(dfa_254s);
    static final char[] dfa_255 = DFA.unpackEncodedStringToUnsignedChars(dfa_255s);
    static final short[] dfa_256 = DFA.unpackEncodedString(dfa_256s);
    static final short[][] dfa_257 = unpackEncodedStringArray(dfa_257s);

    class DFA394 extends DFA {

        public DFA394(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 394;
            this.eot = dfa_243;
            this.eof = dfa_244;
            this.min = dfa_254;
            this.max = dfa_255;
            this.accept = dfa_247;
            this.special = dfa_256;
            this.transition = dfa_257;
        }
        public String getDescription() {
            return "()* loopback of 12903:5: (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )*";
=======
    static final char[] dfa_255 = DFA.unpackEncodedStringToUnsignedChars(dfa_255s);
    static final char[] dfa_256 = DFA.unpackEncodedStringToUnsignedChars(dfa_256s);
    static final short[] dfa_257 = DFA.unpackEncodedString(dfa_257s);
    static final short[][] dfa_258 = unpackEncodedStringArray(dfa_258s);

    class DFA392 extends DFA {

        public DFA392(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 392;
            this.eot = dfa_244;
            this.eof = dfa_245;
            this.min = dfa_255;
            this.max = dfa_256;
            this.accept = dfa_248;
            this.special = dfa_257;
            this.transition = dfa_258;
        }
        public String getDescription() {
            return "()* loopback of 12801:5: (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )*";
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
<<<<<<< HEAD
                        int LA394_95 = input.LA(1);

                         
                        int index394_95 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred433_InternalSCTX()) ) {s = 96;}
=======
                        int LA392_94 = input.LA(1);

                         
                        int index392_94 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred429_InternalSCTX()) ) {s = 95;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 1;}

                         
<<<<<<< HEAD
                        input.seek(index394_95);
=======
                        input.seek(index392_94);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
<<<<<<< HEAD
                new NoViableAltException(getDescription(), 394, _s, input);
=======
                new NoViableAltException(getDescription(), 392, _s, input);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_258s = "\23\uffff";
    static final String dfa_259s = "\1\4\17\0\3\uffff";
    static final String dfa_260s = "\1\u0095\17\0\3\uffff";
    static final String dfa_261s = "\20\uffff\1\2\1\uffff\1\1";
    static final String dfa_262s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\3\uffff}>";
    static final String[] dfa_263s = {
            "\1\3\1\7\1\1\1\2\1\17\1\6\1\15\12\uffff\1\4\11\uffff\1\5\60\uffff\1\10\4\uffff\1\12\20\uffff\1\11\2\uffff\1\20\1\16\46\uffff\1\13\1\uffff\1\14\1\uffff\1\20",
=======
    static final String dfa_259s = "\22\uffff";
    static final String dfa_260s = "\1\4\17\0\2\uffff";
    static final String dfa_261s = "\1\u008f\17\0\2\uffff";
    static final String dfa_262s = "\20\uffff\1\1\1\2";
    static final String dfa_263s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\2\uffff}>";
    static final String[] dfa_264s = {
            "\1\3\1\7\1\1\1\2\1\17\1\6\1\15\12\uffff\1\4\11\uffff\1\5\57\uffff\1\10\4\uffff\1\12\15\uffff\1\11\3\uffff\1\16\46\uffff\1\13\1\uffff\1\14",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

<<<<<<< HEAD
    static final short[] dfa_258 = DFA.unpackEncodedString(dfa_258s);
    static final char[] dfa_259 = DFA.unpackEncodedStringToUnsignedChars(dfa_259s);
    static final char[] dfa_260 = DFA.unpackEncodedStringToUnsignedChars(dfa_260s);
    static final short[] dfa_261 = DFA.unpackEncodedString(dfa_261s);
    static final short[] dfa_262 = DFA.unpackEncodedString(dfa_262s);
    static final short[][] dfa_263 = unpackEncodedStringArray(dfa_263s);

    class DFA398 extends DFA {

        public DFA398(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 398;
            this.eot = dfa_258;
            this.eof = dfa_258;
            this.min = dfa_259;
            this.max = dfa_260;
            this.accept = dfa_261;
            this.special = dfa_262;
            this.transition = dfa_263;
        }
        public String getDescription() {
            return "13029:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? ) | this_InitExpression_6= ruleInitExpression )";
=======
    static final short[] dfa_259 = DFA.unpackEncodedString(dfa_259s);
    static final char[] dfa_260 = DFA.unpackEncodedStringToUnsignedChars(dfa_260s);
    static final char[] dfa_261 = DFA.unpackEncodedStringToUnsignedChars(dfa_261s);
    static final short[] dfa_262 = DFA.unpackEncodedString(dfa_262s);
    static final short[] dfa_263 = DFA.unpackEncodedString(dfa_263s);
    static final short[][] dfa_264 = unpackEncodedStringArray(dfa_264s);

    class DFA396 extends DFA {

        public DFA396(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 396;
            this.eot = dfa_259;
            this.eof = dfa_259;
            this.min = dfa_260;
            this.max = dfa_261;
            this.accept = dfa_262;
            this.special = dfa_263;
            this.transition = dfa_264;
        }
        public String getDescription() {
            return "12927:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? ) | this_InitExpression_6= ruleInitExpression )";
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
<<<<<<< HEAD
                        int LA398_1 = input.LA(1);

                         
                        int index398_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred437_InternalSCTX()) ) {s = 18;}
=======
                        int LA396_1 = input.LA(1);

                         
                        int index396_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred433_InternalSCTX()) ) {s = 16;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 16;}

                         
<<<<<<< HEAD
                        input.seek(index398_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA398_2 = input.LA(1);

                         
                        int index398_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred437_InternalSCTX()) ) {s = 18;}
=======
                        input.seek(index396_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA396_2 = input.LA(1);

                         
                        int index396_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred433_InternalSCTX()) ) {s = 16;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 16;}

                         
<<<<<<< HEAD
                        input.seek(index398_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA398_3 = input.LA(1);

                         
                        int index398_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred437_InternalSCTX()) ) {s = 18;}
=======
                        input.seek(index396_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA396_3 = input.LA(1);

                         
                        int index396_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred433_InternalSCTX()) ) {s = 16;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 16;}

                         
<<<<<<< HEAD
                        input.seek(index398_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA398_4 = input.LA(1);

                         
                        int index398_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred437_InternalSCTX()) ) {s = 18;}
=======
                        input.seek(index396_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA396_4 = input.LA(1);

                         
                        int index396_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred433_InternalSCTX()) ) {s = 16;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 16;}

                         
<<<<<<< HEAD
                        input.seek(index398_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA398_5 = input.LA(1);

                         
                        int index398_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred437_InternalSCTX()) ) {s = 18;}
=======
                        input.seek(index396_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA396_5 = input.LA(1);

                         
                        int index396_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred433_InternalSCTX()) ) {s = 16;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 16;}

                         
<<<<<<< HEAD
                        input.seek(index398_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA398_6 = input.LA(1);

                         
                        int index398_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred437_InternalSCTX()) ) {s = 18;}
=======
                        input.seek(index396_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA396_6 = input.LA(1);

                         
                        int index396_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred433_InternalSCTX()) ) {s = 16;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 16;}

                         
<<<<<<< HEAD
                        input.seek(index398_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA398_7 = input.LA(1);

                         
                        int index398_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred437_InternalSCTX()) ) {s = 18;}
=======
                        input.seek(index396_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA396_7 = input.LA(1);

                         
                        int index396_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred433_InternalSCTX()) ) {s = 16;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 16;}

                         
<<<<<<< HEAD
                        input.seek(index398_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA398_8 = input.LA(1);

                         
                        int index398_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred437_InternalSCTX()) ) {s = 18;}
=======
                        input.seek(index396_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA396_8 = input.LA(1);

                         
                        int index396_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred433_InternalSCTX()) ) {s = 16;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 16;}

                         
<<<<<<< HEAD
                        input.seek(index398_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA398_9 = input.LA(1);

                         
                        int index398_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred437_InternalSCTX()) ) {s = 18;}
=======
                        input.seek(index396_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA396_9 = input.LA(1);

                         
                        int index396_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred433_InternalSCTX()) ) {s = 16;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 16;}

                         
<<<<<<< HEAD
                        input.seek(index398_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA398_10 = input.LA(1);

                         
                        int index398_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred437_InternalSCTX()) ) {s = 18;}
=======
                        input.seek(index396_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA396_10 = input.LA(1);

                         
                        int index396_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred433_InternalSCTX()) ) {s = 16;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 16;}

                         
<<<<<<< HEAD
                        input.seek(index398_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA398_11 = input.LA(1);

                         
                        int index398_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred437_InternalSCTX()) ) {s = 18;}
=======
                        input.seek(index396_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA396_11 = input.LA(1);

                         
                        int index396_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred433_InternalSCTX()) ) {s = 16;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 16;}

                         
<<<<<<< HEAD
                        input.seek(index398_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA398_12 = input.LA(1);

                         
                        int index398_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred437_InternalSCTX()) ) {s = 18;}
=======
                        input.seek(index396_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA396_12 = input.LA(1);

                         
                        int index396_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred433_InternalSCTX()) ) {s = 16;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 16;}

                         
<<<<<<< HEAD
                        input.seek(index398_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA398_13 = input.LA(1);

                         
                        int index398_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred437_InternalSCTX()) ) {s = 18;}
=======
                        input.seek(index396_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA396_13 = input.LA(1);

                         
                        int index396_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred433_InternalSCTX()) ) {s = 16;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 16;}

                         
<<<<<<< HEAD
                        input.seek(index398_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA398_14 = input.LA(1);

                         
                        int index398_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred437_InternalSCTX()) ) {s = 18;}
=======
                        input.seek(index396_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA396_14 = input.LA(1);

                         
                        int index396_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred433_InternalSCTX()) ) {s = 16;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 16;}

                         
<<<<<<< HEAD
                        input.seek(index398_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA398_15 = input.LA(1);

                         
                        int index398_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred437_InternalSCTX()) ) {s = 18;}
=======
                        input.seek(index396_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA396_15 = input.LA(1);

                         
                        int index396_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred433_InternalSCTX()) ) {s = 16;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 16;}

                         
<<<<<<< HEAD
                        input.seek(index398_15);
=======
                        input.seek(index396_15);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
<<<<<<< HEAD
                new NoViableAltException(getDescription(), 398, _s, input);
=======
                new NoViableAltException(getDescription(), 396, _s, input);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_264s = "\1\2\140\uffff";
    static final String dfa_265s = "\1\5\1\0\137\uffff";
    static final String dfa_266s = "\1\u009e\1\0\137\uffff";
    static final String dfa_267s = "\2\uffff\1\2\135\uffff\1\1";
    static final String dfa_268s = "\1\uffff\1\0\137\uffff}>";
    static final String[] dfa_269s = {
            "\1\2\2\uffff\1\2\1\uffff\2\2\10\uffff\10\2\1\uffff\1\2\2\uffff\1\2\1\uffff\2\2\1\uffff\6\2\1\uffff\4\2\1\1\1\2\1\uffff\20\2\1\uffff\2\2\2\uffff\2\2\1\uffff\6\2\1\uffff\1\2\1\uffff\16\2\10\uffff\7\2\3\uffff\6\2\21\uffff\6\2\5\uffff\2\2\3\uffff\4\2",
=======
    static final String dfa_265s = "\1\2\137\uffff";
    static final String dfa_266s = "\1\5\1\0\136\uffff";
    static final String dfa_267s = "\1\u009a\1\0\136\uffff";
    static final String dfa_268s = "\2\uffff\1\2\134\uffff\1\1";
    static final String dfa_269s = "\1\uffff\1\0\136\uffff}>";
    static final String[] dfa_270s = {
            "\1\2\2\uffff\1\2\1\uffff\2\2\10\uffff\10\2\1\uffff\1\2\2\uffff\1\2\1\uffff\2\2\1\uffff\6\2\1\uffff\4\2\1\1\1\2\1\uffff\17\2\1\uffff\2\2\2\uffff\2\2\1\uffff\6\2\1\uffff\1\2\1\uffff\16\2\5\uffff\7\2\3\uffff\6\2\21\uffff\6\2\5\uffff\2\2\3\uffff\4\2",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
<<<<<<< HEAD
    static final short[] dfa_264 = DFA.unpackEncodedString(dfa_264s);
    static final char[] dfa_265 = DFA.unpackEncodedStringToUnsignedChars(dfa_265s);
    static final char[] dfa_266 = DFA.unpackEncodedStringToUnsignedChars(dfa_266s);
    static final short[] dfa_267 = DFA.unpackEncodedString(dfa_267s);
    static final short[] dfa_268 = DFA.unpackEncodedString(dfa_268s);
    static final short[][] dfa_269 = unpackEncodedStringArray(dfa_269s);

    class DFA397 extends DFA {

        public DFA397(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 397;
            this.eot = dfa_243;
            this.eof = dfa_264;
            this.min = dfa_265;
            this.max = dfa_266;
            this.accept = dfa_267;
            this.special = dfa_268;
            this.transition = dfa_269;
        }
        public String getDescription() {
            return "13098:4: (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )?";
=======
    static final short[] dfa_265 = DFA.unpackEncodedString(dfa_265s);
    static final char[] dfa_266 = DFA.unpackEncodedStringToUnsignedChars(dfa_266s);
    static final char[] dfa_267 = DFA.unpackEncodedStringToUnsignedChars(dfa_267s);
    static final short[] dfa_268 = DFA.unpackEncodedString(dfa_268s);
    static final short[] dfa_269 = DFA.unpackEncodedString(dfa_269s);
    static final short[][] dfa_270 = unpackEncodedStringArray(dfa_270s);

    class DFA395 extends DFA {

        public DFA395(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 395;
            this.eot = dfa_244;
            this.eof = dfa_265;
            this.min = dfa_266;
            this.max = dfa_267;
            this.accept = dfa_268;
            this.special = dfa_269;
            this.transition = dfa_270;
        }
        public String getDescription() {
            return "12996:4: (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )?";
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
<<<<<<< HEAD
                        int LA397_1 = input.LA(1);

                         
                        int index397_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred436_InternalSCTX()) ) {s = 96;}
=======
                        int LA395_1 = input.LA(1);

                         
                        int index395_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred432_InternalSCTX()) ) {s = 95;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 2;}

                         
<<<<<<< HEAD
                        input.seek(index397_1);
=======
                        input.seek(index395_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 395, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA397 extends DFA {

        public DFA397(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 397;
            this.eot = dfa_259;
            this.eof = dfa_259;
            this.min = dfa_260;
            this.max = dfa_261;
            this.accept = dfa_262;
            this.special = dfa_263;
            this.transition = dfa_264;
        }
        public String getDescription() {
            return "13052:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_4= ruleAtomicValuedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA397_1 = input.LA(1);

                         
                        int index397_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred434_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index397_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA397_2 = input.LA(1);

                         
                        int index397_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred434_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index397_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA397_3 = input.LA(1);

                         
                        int index397_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred434_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index397_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA397_4 = input.LA(1);

                         
                        int index397_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred434_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index397_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA397_5 = input.LA(1);

                         
                        int index397_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred434_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index397_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA397_6 = input.LA(1);

                         
                        int index397_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred434_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index397_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA397_7 = input.LA(1);

                         
                        int index397_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred434_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index397_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA397_8 = input.LA(1);

                         
                        int index397_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred434_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index397_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA397_9 = input.LA(1);

                         
                        int index397_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred434_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index397_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA397_10 = input.LA(1);

                         
                        int index397_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred434_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index397_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA397_11 = input.LA(1);

                         
                        int index397_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred434_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index397_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA397_12 = input.LA(1);

                         
                        int index397_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred434_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index397_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA397_13 = input.LA(1);

                         
                        int index397_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred434_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index397_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA397_14 = input.LA(1);

                         
                        int index397_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred434_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index397_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA397_15 = input.LA(1);

                         
                        int index397_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred434_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index397_15);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 397, _s, input);
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_270s = "\1\5\2\uffff\1\0\11\uffff";
    static final String dfa_271s = "\1\u0093\2\uffff\1\0\11\uffff";
    static final String dfa_272s = "\1\uffff\1\1\1\2\1\uffff\1\4\1\5\1\6\1\7\1\uffff\1\10\2\uffff\1\3";
    static final String dfa_273s = "\3\uffff\1\0\11\uffff}>";
    static final String[] dfa_274s = {
            "\1\3\2\uffff\1\11\1\1\1\11\24\uffff\1\2\60\uffff\1\4\4\uffff\1\6\20\uffff\1\5\3\uffff\1\11\46\uffff\1\7\1\uffff\1\7",
=======
    static final String dfa_271s = "\1\5\2\uffff\1\0\11\uffff";
    static final String dfa_272s = "\1\u008f\2\uffff\1\0\11\uffff";
    static final String dfa_273s = "\1\uffff\1\1\1\2\1\uffff\1\4\1\5\1\6\1\7\1\uffff\1\10\2\uffff\1\3";
    static final String dfa_274s = "\3\uffff\1\0\11\uffff}>";
    static final String[] dfa_275s = {
            "\1\3\2\uffff\1\11\1\1\1\11\24\uffff\1\2\57\uffff\1\4\4\uffff\1\6\15\uffff\1\5\3\uffff\1\11\46\uffff\1\7\1\uffff\1\7",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
<<<<<<< HEAD
    static final char[] dfa_270 = DFA.unpackEncodedStringToUnsignedChars(dfa_270s);
    static final char[] dfa_271 = DFA.unpackEncodedStringToUnsignedChars(dfa_271s);
    static final short[] dfa_272 = DFA.unpackEncodedString(dfa_272s);
    static final short[] dfa_273 = DFA.unpackEncodedString(dfa_273s);
    static final short[][] dfa_274 = unpackEncodedStringArray(dfa_274s);

    class DFA409 extends DFA {

        public DFA409(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 409;
            this.eot = dfa_59;
            this.eof = dfa_59;
            this.min = dfa_270;
            this.max = dfa_271;
            this.accept = dfa_272;
            this.special = dfa_273;
            this.transition = dfa_274;
        }
        public String getDescription() {
            return "13703:2: (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_FunctionCall_5= ruleFunctionCall | this_RandomCall_6= ruleRandomCall | this_RandomizeCall_7= ruleRandomizeCall | this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression | this_TextExpression_9= ruleTextExpression )";
=======
    static final char[] dfa_271 = DFA.unpackEncodedStringToUnsignedChars(dfa_271s);
    static final char[] dfa_272 = DFA.unpackEncodedStringToUnsignedChars(dfa_272s);
    static final short[] dfa_273 = DFA.unpackEncodedString(dfa_273s);
    static final short[] dfa_274 = DFA.unpackEncodedString(dfa_274s);
    static final short[][] dfa_275 = unpackEncodedStringArray(dfa_275s);

    class DFA398 extends DFA {

        public DFA398(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 398;
            this.eot = dfa_59;
            this.eof = dfa_59;
            this.min = dfa_271;
            this.max = dfa_272;
            this.accept = dfa_273;
            this.special = dfa_274;
            this.transition = dfa_275;
        }
        public String getDescription() {
            return "13152:2: (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_FunctionCall_5= ruleFunctionCall | this_RandomCall_6= ruleRandomCall | this_RandomizeCall_7= ruleRandomizeCall | this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression | this_TextExpression_9= ruleTextExpression )";
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
<<<<<<< HEAD
                        int LA409_3 = input.LA(1);

                         
                        int index409_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred450_InternalSCTX()) ) {s = 12;}

                        else if ( (synpred454_InternalSCTX()) ) {s = 7;}

                         
                        input.seek(index409_3);
=======
                        int LA398_3 = input.LA(1);

                         
                        int index398_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred437_InternalSCTX()) ) {s = 12;}

                        else if ( (synpred441_InternalSCTX()) ) {s = 7;}

                         
                        input.seek(index398_3);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
<<<<<<< HEAD
                new NoViableAltException(getDescription(), 409, _s, input);
=======
                new NoViableAltException(getDescription(), 398, _s, input);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_275s = "\21\uffff";
    static final String dfa_276s = "\1\4\4\uffff\1\0\13\uffff";
    static final String dfa_277s = "\1\u0093\4\uffff\1\0\13\uffff";
    static final String dfa_278s = "\1\uffff\1\1\1\2\1\3\1\4\1\uffff\1\6\11\uffff\1\5";
    static final String dfa_279s = "\5\uffff\1\0\13\uffff}>";
    static final String[] dfa_280s = {
            "\1\3\1\6\1\1\1\2\3\6\12\uffff\1\4\11\uffff\1\5\60\uffff\1\6\4\uffff\1\6\20\uffff\1\6\3\uffff\1\6\46\uffff\1\6\1\uffff\1\6",
=======
    static final String dfa_276s = "\21\uffff";
    static final String dfa_277s = "\1\4\4\uffff\1\0\13\uffff";
    static final String dfa_278s = "\1\u008f\4\uffff\1\0\13\uffff";
    static final String dfa_279s = "\1\uffff\1\1\1\2\1\3\1\4\1\uffff\1\6\11\uffff\1\5";
    static final String dfa_280s = "\5\uffff\1\0\13\uffff}>";
    static final String[] dfa_281s = {
            "\1\3\1\6\1\1\1\2\3\6\12\uffff\1\4\11\uffff\1\5\57\uffff\1\6\4\uffff\1\6\15\uffff\1\6\3\uffff\1\6\46\uffff\1\6\1\uffff\1\6",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

<<<<<<< HEAD
    static final short[] dfa_275 = DFA.unpackEncodedString(dfa_275s);
    static final char[] dfa_276 = DFA.unpackEncodedStringToUnsignedChars(dfa_276s);
    static final char[] dfa_277 = DFA.unpackEncodedStringToUnsignedChars(dfa_277s);
    static final short[] dfa_278 = DFA.unpackEncodedString(dfa_278s);
    static final short[] dfa_279 = DFA.unpackEncodedString(dfa_279s);
    static final short[][] dfa_280 = unpackEncodedStringArray(dfa_280s);

    class DFA410 extends DFA {

        public DFA410(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 410;
            this.eot = dfa_275;
            this.eof = dfa_275;
            this.min = dfa_276;
            this.max = dfa_277;
            this.accept = dfa_278;
            this.special = dfa_279;
            this.transition = dfa_280;
        }
        public String getDescription() {
            return "13827:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression )";
=======
    static final short[] dfa_276 = DFA.unpackEncodedString(dfa_276s);
    static final char[] dfa_277 = DFA.unpackEncodedStringToUnsignedChars(dfa_277s);
    static final char[] dfa_278 = DFA.unpackEncodedStringToUnsignedChars(dfa_278s);
    static final short[] dfa_279 = DFA.unpackEncodedString(dfa_279s);
    static final short[] dfa_280 = DFA.unpackEncodedString(dfa_280s);
    static final short[][] dfa_281 = unpackEncodedStringArray(dfa_281s);

    class DFA399 extends DFA {

        public DFA399(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 399;
            this.eot = dfa_276;
            this.eof = dfa_276;
            this.min = dfa_277;
            this.max = dfa_278;
            this.accept = dfa_279;
            this.special = dfa_280;
            this.transition = dfa_281;
        }
        public String getDescription() {
            return "13276:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression )";
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
<<<<<<< HEAD
                        int LA410_5 = input.LA(1);

                         
                        int index410_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred459_InternalSCTX()) ) {s = 16;}
=======
                        int LA399_5 = input.LA(1);

                         
                        int index399_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred446_InternalSCTX()) ) {s = 16;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 6;}

                         
<<<<<<< HEAD
                        input.seek(index410_5);
=======
                        input.seek(index399_5);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
<<<<<<< HEAD
                new NoViableAltException(getDescription(), 410, _s, input);
=======
                new NoViableAltException(getDescription(), 399, _s, input);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_281s = "\1\4\22\0\4\uffff";
    static final String dfa_282s = "\1\u0095\22\0\4\uffff";
    static final String dfa_283s = "\23\uffff\1\1\1\uffff\1\3\1\2";
    static final String dfa_284s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff}>";
    static final String[] dfa_285s = {
            "\1\4\1\10\1\2\1\3\1\20\1\7\1\16\12\uffff\1\5\11\uffff\1\6\1\uffff\1\23\56\uffff\1\11\4\uffff\1\13\10\uffff\1\1\7\uffff\1\12\1\25\1\uffff\1\21\1\17\46\uffff\1\14\1\23\1\15\1\uffff\1\22",
            "\1\uffff",
            "\1\uffff",
=======
    static final String dfa_282s = "\1\4\20\0\4\uffff";
    static final String dfa_283s = "\1\u008f\20\0\4\uffff";
    static final String dfa_284s = "\21\uffff\1\1\1\uffff\1\3\1\2";
    static final String dfa_285s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\4\uffff}>";
    static final String[] dfa_286s = {
            "\1\4\1\10\1\2\1\3\1\20\1\7\1\16\12\uffff\1\5\11\uffff\1\6\1\uffff\1\21\55\uffff\1\11\4\uffff\1\13\10\uffff\1\1\4\uffff\1\12\1\23\2\uffff\1\17\46\uffff\1\14\1\21\1\15",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };
<<<<<<< HEAD
    static final char[] dfa_281 = DFA.unpackEncodedStringToUnsignedChars(dfa_281s);
    static final char[] dfa_282 = DFA.unpackEncodedStringToUnsignedChars(dfa_282s);
    static final short[] dfa_283 = DFA.unpackEncodedString(dfa_283s);
    static final short[] dfa_284 = DFA.unpackEncodedString(dfa_284s);
    static final short[][] dfa_285 = unpackEncodedStringArray(dfa_285s);

    class DFA429 extends DFA {

        public DFA429(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 429;
            this.eot = dfa_156;
            this.eof = dfa_156;
            this.min = dfa_281;
            this.max = dfa_282;
            this.accept = dfa_283;
            this.special = dfa_284;
            this.transition = dfa_285;
        }
        public String getDescription() {
            return "14908:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue )";
=======
    static final char[] dfa_282 = DFA.unpackEncodedStringToUnsignedChars(dfa_282s);
    static final char[] dfa_283 = DFA.unpackEncodedStringToUnsignedChars(dfa_283s);
    static final short[] dfa_284 = DFA.unpackEncodedString(dfa_284s);
    static final short[] dfa_285 = DFA.unpackEncodedString(dfa_285s);
    static final short[][] dfa_286 = unpackEncodedStringArray(dfa_286s);

    class DFA418 extends DFA {

        public DFA418(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 418;
            this.eot = dfa_159;
            this.eof = dfa_159;
            this.min = dfa_282;
            this.max = dfa_283;
            this.accept = dfa_284;
            this.special = dfa_285;
            this.transition = dfa_286;
        }
        public String getDescription() {
            return "14357:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue )";
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
<<<<<<< HEAD
                        int LA429_1 = input.LA(1);

                         
                        int index429_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred478_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred479_InternalSCTX()) ) {s = 22;}

                         
                        input.seek(index429_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA429_2 = input.LA(1);

                         
                        int index429_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred478_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred479_InternalSCTX()) ) {s = 22;}

                         
                        input.seek(index429_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA429_3 = input.LA(1);

                         
                        int index429_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred478_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred479_InternalSCTX()) ) {s = 22;}

                         
                        input.seek(index429_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA429_4 = input.LA(1);

                         
                        int index429_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred478_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred479_InternalSCTX()) ) {s = 22;}

                         
                        input.seek(index429_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA429_5 = input.LA(1);

                         
                        int index429_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred478_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred479_InternalSCTX()) ) {s = 22;}

                         
                        input.seek(index429_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA429_6 = input.LA(1);

                         
                        int index429_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred478_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred479_InternalSCTX()) ) {s = 22;}

                         
                        input.seek(index429_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA429_7 = input.LA(1);

                         
                        int index429_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred478_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred479_InternalSCTX()) ) {s = 22;}

                         
                        input.seek(index429_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA429_8 = input.LA(1);

                         
                        int index429_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred478_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred479_InternalSCTX()) ) {s = 22;}

                         
                        input.seek(index429_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA429_9 = input.LA(1);

                         
                        int index429_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred478_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred479_InternalSCTX()) ) {s = 22;}

                         
                        input.seek(index429_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA429_10 = input.LA(1);

                         
                        int index429_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred478_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred479_InternalSCTX()) ) {s = 22;}

                         
                        input.seek(index429_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA429_11 = input.LA(1);

                         
                        int index429_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred478_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred479_InternalSCTX()) ) {s = 22;}

                         
                        input.seek(index429_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA429_12 = input.LA(1);

                         
                        int index429_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred478_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred479_InternalSCTX()) ) {s = 22;}

                         
                        input.seek(index429_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA429_13 = input.LA(1);

                         
                        int index429_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred478_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred479_InternalSCTX()) ) {s = 22;}

                         
                        input.seek(index429_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA429_14 = input.LA(1);

                         
                        int index429_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred478_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred479_InternalSCTX()) ) {s = 22;}

                         
                        input.seek(index429_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA429_15 = input.LA(1);

                         
                        int index429_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred478_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred479_InternalSCTX()) ) {s = 22;}

                         
                        input.seek(index429_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA429_16 = input.LA(1);

                         
                        int index429_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred478_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred479_InternalSCTX()) ) {s = 22;}

                         
                        input.seek(index429_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA429_17 = input.LA(1);

                         
                        int index429_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred478_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred479_InternalSCTX()) ) {s = 22;}

                         
                        input.seek(index429_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA429_18 = input.LA(1);

                         
                        int index429_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred478_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred479_InternalSCTX()) ) {s = 22;}

                         
                        input.seek(index429_18);
=======
                        int LA418_1 = input.LA(1);

                         
                        int index418_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred465_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred466_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index418_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA418_2 = input.LA(1);

                         
                        int index418_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred465_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred466_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index418_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA418_3 = input.LA(1);

                         
                        int index418_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred465_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred466_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index418_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA418_4 = input.LA(1);

                         
                        int index418_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred465_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred466_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index418_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA418_5 = input.LA(1);

                         
                        int index418_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred465_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred466_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index418_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA418_6 = input.LA(1);

                         
                        int index418_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred465_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred466_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index418_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA418_7 = input.LA(1);

                         
                        int index418_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred465_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred466_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index418_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA418_8 = input.LA(1);

                         
                        int index418_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred465_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred466_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index418_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA418_9 = input.LA(1);

                         
                        int index418_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred465_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred466_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index418_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA418_10 = input.LA(1);

                         
                        int index418_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred465_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred466_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index418_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA418_11 = input.LA(1);

                         
                        int index418_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred465_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred466_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index418_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA418_12 = input.LA(1);

                         
                        int index418_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred465_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred466_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index418_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA418_13 = input.LA(1);

                         
                        int index418_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred465_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred466_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index418_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA418_14 = input.LA(1);

                         
                        int index418_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred465_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred466_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index418_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA418_15 = input.LA(1);

                         
                        int index418_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred465_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred466_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index418_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA418_16 = input.LA(1);

                         
                        int index418_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred465_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred466_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index418_16);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
<<<<<<< HEAD
                new NoViableAltException(getDescription(), 429, _s, input);
=======
                new NoViableAltException(getDescription(), 418, _s, input);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_286s = "\2\uffff\1\6\5\uffff\2\6";
    static final String dfa_287s = "\1\151\1\5\1\4\3\5\2\uffff\2\4";
    static final String dfa_288s = "\1\151\1\5\1\152\1\5\1\7\1\6\2\uffff\2\152";
    static final String dfa_289s = "\6\uffff\1\1\1\2\2\uffff";
    static final String dfa_290s = "\12\uffff}>";
    static final String[] dfa_291s = {
            "\1\1",
            "\1\2",
            "\4\6\1\uffff\2\6\6\uffff\2\6\2\uffff\1\7\75\uffff\1\3\12\uffff\1\4\12\uffff\1\5\1\6",
=======
    static final String dfa_287s = "\2\uffff\1\6\5\uffff\2\6";
    static final String dfa_288s = "\1\145\1\5\1\4\3\5\2\uffff\2\4";
    static final String dfa_289s = "\1\145\1\5\1\146\1\5\1\7\1\6\2\uffff\2\146";
    static final String dfa_290s = "\6\uffff\1\1\1\2\2\uffff";
    static final String dfa_291s = "\12\uffff}>";
    static final String[] dfa_292s = {
            "\1\1",
            "\1\2",
            "\4\6\1\uffff\2\6\6\uffff\2\6\2\uffff\1\7\74\uffff\1\3\12\uffff\1\4\7\uffff\1\5\1\6",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\10",
            "\1\10\2\6",
            "\1\6\1\11",
            "",
            "",
<<<<<<< HEAD
            "\4\6\1\uffff\2\6\6\uffff\2\6\2\uffff\1\7\75\uffff\1\3\12\uffff\1\4\12\uffff\1\5\1\6",
            "\4\6\1\uffff\2\6\6\uffff\2\6\2\uffff\1\7\110\uffff\1\6\12\uffff\2\6"
    };
    static final short[] dfa_286 = DFA.unpackEncodedString(dfa_286s);
    static final char[] dfa_287 = DFA.unpackEncodedStringToUnsignedChars(dfa_287s);
    static final char[] dfa_288 = DFA.unpackEncodedStringToUnsignedChars(dfa_288s);
    static final short[] dfa_289 = DFA.unpackEncodedString(dfa_289s);
    static final short[] dfa_290 = DFA.unpackEncodedString(dfa_290s);
    static final short[][] dfa_291 = unpackEncodedStringArray(dfa_291s);

    class DFA436 extends DFA {

        public DFA436(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 436;
            this.eot = dfa_174;
            this.eof = dfa_286;
            this.min = dfa_287;
            this.max = dfa_288;
            this.accept = dfa_289;
            this.special = dfa_290;
            this.transition = dfa_291;
        }
        public String getDescription() {
            return "15508:2: (this_Pragma_0= superPragma | this_JsonPragma_1= ruleJsonPragma )";
        }
    }
    static final String dfa_292s = "\3\uffff\1\1\4\uffff\3\1\5\uffff\2\1\3\uffff\3\1\3\uffff\3\1\3\uffff\3\1\3\uffff\2\1\2\uffff\1\1\1\uffff";
    static final String dfa_293s = "\1\12\1\uffff\1\5\1\4\1\5\1\4\1\6\4\4\1\24\1\0\1\5\1\4\1\uffff\2\4\2\5\4\4\3\5\3\4\3\5\3\4\1\0\2\5\2\4\1\0\1\5\1\4\1\0";
    static final String dfa_294s = "\1\152\1\uffff\1\5\1\u009e\1\5\1\u0095\1\37\1\u009d\3\u009e\1\u0094\1\0\1\5\1\u0095\1\uffff\2\u009e\2\5\1\u0095\3\u009e\3\5\3\u009e\3\5\3\u009e\1\0\2\5\2\u009e\1\0\1\5\1\u009e\1\0";
    static final String dfa_295s = "\1\uffff\1\1\15\uffff\1\2\35\uffff";
    static final String dfa_296s = "\14\uffff\1\3\27\uffff\1\1\4\uffff\1\0\2\uffff\1\2}>";
    static final String[] dfa_297s = {
            "\1\1\137\uffff\1\2",
            "",
            "\1\3",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\1\6\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\1\1\1\uffff\4\1\2\uffff\4\1\2\uffff\1\4\2\1\10\uffff\1\5\7\uffff\1\1\2\uffff\1\6\1\1\11\uffff\6\1\27\uffff\3\1\1\uffff\3\1\3\uffff\4\1",
            "\1\10",
            "\1\1\1\11\5\1\12\uffff\1\1\11\uffff\1\1\60\uffff\1\1\4\uffff\1\1\10\uffff\1\1\7\uffff\1\1\2\uffff\2\1\46\uffff\1\1\1\uffff\1\1\1\uffff\1\1",
            "\1\12\30\uffff\1\1",
            "\1\13\6\1\12\uffff\1\1\1\14\6\uffff\1\1\1\uffff\1\1\1\uffff\1\1\4\uffff\1\1\10\uffff\1\1\15\uffff\6\1\5\uffff\2\1\1\uffff\1\1\2\uffff\3\1\4\uffff\1\1\10\uffff\1\1\7\uffff\2\1\1\uffff\2\1\11\uffff\6\1\27\uffff\3\1\1\uffff\3\1\3\uffff\3\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\1\6\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\1\1\1\uffff\4\1\2\uffff\4\1\2\uffff\1\4\2\1\10\uffff\1\5\7\uffff\1\1\2\uffff\1\6\1\1\11\uffff\6\1\27\uffff\3\1\1\uffff\3\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\15\12\1\1\16\10\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\1\6\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\1\1\1\uffff\4\1\2\uffff\4\1\3\uffff\2\1\10\uffff\1\1\7\uffff\1\1\2\uffff\2\1\11\uffff\6\1\27\uffff\3\1\1\uffff\3\1\3\uffff\4\1",
            "\1\1\1\uffff\1\1\13\uffff\1\1\15\uffff\1\17\45\uffff\17\1\46\uffff\6\1\3\uffff\1\1",
            "\1\uffff",
            "\1\20",
            "\1\1\1\21\5\1\12\uffff\1\1\11\uffff\1\1\60\uffff\1\1\4\uffff\1\1\10\uffff\1\1\7\uffff\1\1\2\uffff\2\1\46\uffff\1\1\1\uffff\1\1\1\uffff\1\1",
            "",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\22\12\1\1\16\10\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\23\12\1\1\24\10\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\1\25",
            "\1\26",
            "\1\1\1\27\5\1\12\uffff\1\1\11\uffff\1\1\60\uffff\1\1\4\uffff\1\1\10\uffff\1\1\7\uffff\1\1\2\uffff\2\1\46\uffff\1\1\1\uffff\1\1\1\uffff\1\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\30\12\1\1\16\10\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\31\12\1\1\24\10\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\32\12\1\1\24\10\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\1\33",
            "\1\34",
            "\1\35",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\36\12\1\1\16\10\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\37\12\1\1\24\10\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\40\12\1\1\24\10\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\1\41",
            "\1\42",
            "\1\43",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\44\12\1\1\16\10\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\45\12\1\1\24\10\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\46\12\1\1\24\10\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\1\uffff",
            "\1\47",
            "\1\50",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\51\12\1\1\24\10\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\52\12\1\1\24\10\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\1\uffff",
            "\1\53",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\13\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\54\12\1\1\24\10\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\1\uffff"
    };
    static final short[] dfa_292 = DFA.unpackEncodedString(dfa_292s);
    static final char[] dfa_293 = DFA.unpackEncodedStringToUnsignedChars(dfa_293s);
    static final char[] dfa_294 = DFA.unpackEncodedStringToUnsignedChars(dfa_294s);
    static final short[] dfa_295 = DFA.unpackEncodedString(dfa_295s);
    static final short[] dfa_296 = DFA.unpackEncodedString(dfa_296s);
    static final short[][] dfa_297 = unpackEncodedStringArray(dfa_297s);

    class DFA437 extends DFA {

        public DFA437(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 437;
            this.eot = dfa_38;
            this.eof = dfa_292;
            this.min = dfa_293;
            this.max = dfa_294;
            this.accept = dfa_295;
            this.special = dfa_296;
            this.transition = dfa_297;
        }
        public String getDescription() {
            return "15550:2: (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )";
=======
            "\4\6\1\uffff\2\6\6\uffff\2\6\2\uffff\1\7\74\uffff\1\3\12\uffff\1\4\7\uffff\1\5\1\6",
            "\4\6\1\uffff\2\6\6\uffff\2\6\2\uffff\1\7\107\uffff\1\6\7\uffff\2\6"
    };
    static final short[] dfa_287 = DFA.unpackEncodedString(dfa_287s);
    static final char[] dfa_288 = DFA.unpackEncodedStringToUnsignedChars(dfa_288s);
    static final char[] dfa_289 = DFA.unpackEncodedStringToUnsignedChars(dfa_289s);
    static final short[] dfa_290 = DFA.unpackEncodedString(dfa_290s);
    static final short[] dfa_291 = DFA.unpackEncodedString(dfa_291s);
    static final short[][] dfa_292 = unpackEncodedStringArray(dfa_292s);

    class DFA425 extends DFA {

        public DFA425(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 425;
            this.eot = dfa_79;
            this.eof = dfa_287;
            this.min = dfa_288;
            this.max = dfa_289;
            this.accept = dfa_290;
            this.special = dfa_291;
            this.transition = dfa_292;
        }
        public String getDescription() {
            return "14957:2: (this_Pragma_0= superPragma | this_JsonPragma_1= ruleJsonPragma )";
        }
    }
    static final String dfa_293s = "\3\uffff\1\1\4\uffff\3\1\5\uffff\2\1\3\uffff\3\1\3\uffff\3\1\3\uffff\3\1\3\uffff\2\1\2\uffff\1\1\1\uffff";
    static final String dfa_294s = "\1\12\1\uffff\1\5\1\4\1\5\1\4\1\6\4\4\1\0\1\24\1\5\1\4\1\uffff\2\4\2\5\4\4\3\5\3\4\3\5\3\4\1\0\2\5\2\4\1\0\1\5\1\4\1\0";
    static final String dfa_295s = "\1\146\1\uffff\1\5\1\u009a\1\5\1\u008f\1\6\1\u0099\3\u009a\1\0\1\u0091\1\5\1\u008f\1\uffff\2\u009a\2\5\1\u008f\3\u009a\3\5\3\u009a\3\5\3\u009a\1\0\2\5\2\u009a\1\0\1\5\1\u009a\1\0";
    static final String dfa_296s = "\1\uffff\1\1\15\uffff\1\2\35\uffff";
    static final String dfa_297s = "\13\uffff\1\2\30\uffff\1\0\4\uffff\1\1\2\uffff\1\3}>";
    static final String[] dfa_298s = {
            "\1\1\133\uffff\1\2",
            "",
            "\1\3",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\1\6\uffff\2\1\2\uffff\1\1\12\uffff\6\1\2\uffff\1\1\1\uffff\4\1\2\uffff\4\1\2\uffff\1\4\2\1\10\uffff\1\5\4\uffff\1\1\2\uffff\1\6\1\1\11\uffff\6\1\27\uffff\3\1\2\uffff\2\1\3\uffff\4\1",
            "\1\10",
            "\1\1\1\11\5\1\12\uffff\1\1\11\uffff\1\1\57\uffff\1\1\4\uffff\1\1\10\uffff\1\1\4\uffff\1\1\3\uffff\1\1\46\uffff\1\1\1\uffff\1\1",
            "\1\12",
            "\1\14\6\1\12\uffff\1\1\1\13\6\uffff\1\1\1\uffff\1\1\1\uffff\1\1\4\uffff\1\1\10\uffff\1\1\14\uffff\6\1\5\uffff\2\1\1\uffff\1\1\2\uffff\3\1\4\uffff\1\1\10\uffff\1\1\4\uffff\2\1\2\uffff\1\1\11\uffff\6\1\27\uffff\3\1\2\uffff\2\1\3\uffff\3\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\1\6\uffff\2\1\2\uffff\1\1\12\uffff\6\1\2\uffff\1\1\1\uffff\4\1\2\uffff\4\1\2\uffff\1\4\2\1\10\uffff\1\5\4\uffff\1\1\2\uffff\1\6\1\1\11\uffff\6\1\27\uffff\3\1\2\uffff\2\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\12\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\15\12\1\1\16\5\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\1\6\uffff\2\1\2\uffff\1\1\12\uffff\6\1\2\uffff\1\1\1\uffff\4\1\2\uffff\4\1\3\uffff\2\1\10\uffff\1\1\4\uffff\1\1\3\uffff\1\1\11\uffff\6\1\27\uffff\3\1\2\uffff\2\1\3\uffff\4\1",
            "\1\uffff",
            "\1\1\1\uffff\1\1\13\uffff\1\1\15\uffff\1\17\44\uffff\14\1\46\uffff\6\1\3\uffff\2\1",
            "\1\20",
            "\1\1\1\21\5\1\12\uffff\1\1\11\uffff\1\1\57\uffff\1\1\4\uffff\1\1\10\uffff\1\1\4\uffff\1\1\3\uffff\1\1\46\uffff\1\1\1\uffff\1\1",
            "",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\12\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\22\12\1\1\16\5\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\12\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\23\12\1\1\24\5\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\1\25",
            "\1\26",
            "\1\1\1\27\5\1\12\uffff\1\1\11\uffff\1\1\57\uffff\1\1\4\uffff\1\1\10\uffff\1\1\4\uffff\1\1\3\uffff\1\1\46\uffff\1\1\1\uffff\1\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\12\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\30\12\1\1\16\5\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\12\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\31\12\1\1\24\5\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\12\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\32\12\1\1\24\5\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\1\33",
            "\1\34",
            "\1\35",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\12\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\36\12\1\1\16\5\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\12\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\37\12\1\1\24\5\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\12\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\40\12\1\1\24\5\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\1\41",
            "\1\42",
            "\1\43",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\12\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\44\12\1\1\16\5\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\12\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\45\12\1\1\24\5\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\12\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\46\12\1\1\24\5\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\1\uffff",
            "\1\47",
            "\1\50",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\12\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\51\12\1\1\24\5\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\12\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\52\12\1\1\24\5\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\1\uffff",
            "\1\53",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\2\uffff\1\1\12\uffff\6\1\2\uffff\6\1\2\uffff\4\1\2\uffff\1\54\12\1\1\24\5\1\2\uffff\1\6\1\1\11\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\1\uffff"
    };
    static final short[] dfa_293 = DFA.unpackEncodedString(dfa_293s);
    static final char[] dfa_294 = DFA.unpackEncodedStringToUnsignedChars(dfa_294s);
    static final char[] dfa_295 = DFA.unpackEncodedStringToUnsignedChars(dfa_295s);
    static final short[] dfa_296 = DFA.unpackEncodedString(dfa_296s);
    static final short[] dfa_297 = DFA.unpackEncodedString(dfa_297s);
    static final short[][] dfa_298 = unpackEncodedStringArray(dfa_298s);

    class DFA426 extends DFA {

        public DFA426(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 426;
            this.eot = dfa_38;
            this.eof = dfa_293;
            this.min = dfa_294;
            this.max = dfa_295;
            this.accept = dfa_296;
            this.special = dfa_297;
            this.transition = dfa_298;
        }
        public String getDescription() {
            return "14999:2: (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )";
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
<<<<<<< HEAD
                        int LA437_41 = input.LA(1);

                         
                        int index437_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred491_InternalSCTX()) ) {s = 1;}
=======
                        int LA426_36 = input.LA(1);

                         
                        int index426_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred478_InternalSCTX()) ) {s = 1;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 15;}

                         
<<<<<<< HEAD
                        input.seek(index437_41);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA437_36 = input.LA(1);

                         
                        int index437_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred491_InternalSCTX()) ) {s = 1;}
=======
                        input.seek(index426_36);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA426_41 = input.LA(1);

                         
                        int index426_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred478_InternalSCTX()) ) {s = 1;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 15;}

                         
<<<<<<< HEAD
                        input.seek(index437_36);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA437_44 = input.LA(1);

                         
                        int index437_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred491_InternalSCTX()) ) {s = 1;}
=======
                        input.seek(index426_41);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA426_11 = input.LA(1);

                         
                        int index426_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred478_InternalSCTX()) ) {s = 1;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 15;}

                         
<<<<<<< HEAD
                        input.seek(index437_44);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA437_12 = input.LA(1);

                         
                        int index437_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred491_InternalSCTX()) ) {s = 1;}
=======
                        input.seek(index426_11);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA426_44 = input.LA(1);

                         
                        int index426_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred478_InternalSCTX()) ) {s = 1;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 15;}

                         
<<<<<<< HEAD
                        input.seek(index437_12);
=======
                        input.seek(index426_44);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
<<<<<<< HEAD
                new NoViableAltException(getDescription(), 437, _s, input);
=======
                new NoViableAltException(getDescription(), 426, _s, input);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            error(nvae);
            throw nvae;
        }
    }
<<<<<<< HEAD
    static final String dfa_298s = "\3\uffff\1\1\4\uffff\2\1";
    static final String dfa_299s = "\1\12\1\uffff\1\5\1\4\2\5\1\6\1\uffff\2\4";
    static final String dfa_300s = "\1\152\1\uffff\1\5\1\152\2\5\1\6\1\uffff\2\152";
    static final String dfa_301s = "\1\uffff\1\1\5\uffff\1\2\2\uffff";
    static final String[] dfa_302s = {
            "\1\1\137\uffff\1\2",
            "",
            "\1\3",
            "\2\1\4\uffff\1\1\12\uffff\1\7\16\uffff\1\1\56\uffff\1\4\12\uffff\1\5\12\uffff\1\6\1\1",
=======
    static final String dfa_299s = "\3\uffff\1\1\4\uffff\2\1";
    static final String dfa_300s = "\1\12\1\uffff\1\5\1\4\2\5\1\6\1\uffff\2\4";
    static final String dfa_301s = "\1\146\1\uffff\1\5\1\146\2\5\1\6\1\uffff\2\146";
    static final String dfa_302s = "\1\uffff\1\1\5\uffff\1\2\2\uffff";
    static final String[] dfa_303s = {
            "\1\1\133\uffff\1\2",
            "",
            "\1\3",
            "\2\1\4\uffff\1\1\12\uffff\1\7\16\uffff\1\1\55\uffff\1\4\12\uffff\1\5\7\uffff\1\6\1\1",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\10",
            "\1\10",
            "\1\11",
            "",
<<<<<<< HEAD
            "\2\1\4\uffff\1\1\12\uffff\1\7\16\uffff\1\1\56\uffff\1\4\12\uffff\1\5\12\uffff\1\6\1\1",
            "\2\1\4\uffff\1\1\12\uffff\1\7\16\uffff\1\1\105\uffff\1\1"
    };
    static final short[] dfa_298 = DFA.unpackEncodedString(dfa_298s);
    static final char[] dfa_299 = DFA.unpackEncodedStringToUnsignedChars(dfa_299s);
    static final char[] dfa_300 = DFA.unpackEncodedStringToUnsignedChars(dfa_300s);
    static final short[] dfa_301 = DFA.unpackEncodedString(dfa_301s);
    static final short[][] dfa_302 = unpackEncodedStringArray(dfa_302s);

    class DFA438 extends DFA {

        public DFA438(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 438;
            this.eot = dfa_174;
            this.eof = dfa_298;
            this.min = dfa_299;
            this.max = dfa_300;
            this.accept = dfa_301;
            this.special = dfa_290;
            this.transition = dfa_302;
        }
        public String getDescription() {
            return "15592:2: (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )";
        }
    }
    static final String dfa_303s = "\2\uffff\1\7\5\uffff\2\7";
    static final String[] dfa_304s = {
            "\1\1",
            "\1\2",
            "\4\6\1\uffff\1\6\1\7\6\uffff\2\7\100\uffff\1\3\12\uffff\1\4\12\uffff\1\5\1\7",
=======
            "\2\1\4\uffff\1\1\12\uffff\1\7\16\uffff\1\1\55\uffff\1\4\12\uffff\1\5\7\uffff\1\6\1\1",
            "\2\1\4\uffff\1\1\12\uffff\1\7\16\uffff\1\1\101\uffff\1\1"
    };
    static final short[] dfa_299 = DFA.unpackEncodedString(dfa_299s);
    static final char[] dfa_300 = DFA.unpackEncodedStringToUnsignedChars(dfa_300s);
    static final char[] dfa_301 = DFA.unpackEncodedStringToUnsignedChars(dfa_301s);
    static final short[] dfa_302 = DFA.unpackEncodedString(dfa_302s);
    static final short[][] dfa_303 = unpackEncodedStringArray(dfa_303s);

    class DFA427 extends DFA {

        public DFA427(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 427;
            this.eot = dfa_79;
            this.eof = dfa_299;
            this.min = dfa_300;
            this.max = dfa_301;
            this.accept = dfa_302;
            this.special = dfa_291;
            this.transition = dfa_303;
        }
        public String getDescription() {
            return "15041:2: (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )";
        }
    }
    static final String dfa_304s = "\2\uffff\1\7\5\uffff\2\7";
    static final String[] dfa_305s = {
            "\1\1",
            "\1\2",
            "\4\6\1\uffff\1\6\1\7\6\uffff\2\7\77\uffff\1\3\12\uffff\1\4\7\uffff\1\5\1\7",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\10",
            "\1\10\2\6",
            "\1\7\1\11",
            "",
            "",
<<<<<<< HEAD
            "\4\6\1\uffff\1\6\1\7\6\uffff\2\7\100\uffff\1\3\12\uffff\1\4\12\uffff\1\5\1\7",
            "\4\6\1\uffff\1\6\1\7\6\uffff\2\7\113\uffff\1\6\12\uffff\2\7"
    };
    static final short[] dfa_303 = DFA.unpackEncodedString(dfa_303s);
    static final short[][] dfa_304 = unpackEncodedStringArray(dfa_304s);

    class DFA440 extends DFA {

        public DFA440(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 440;
            this.eot = dfa_174;
            this.eof = dfa_303;
            this.min = dfa_287;
            this.max = dfa_288;
            this.accept = dfa_289;
            this.special = dfa_290;
            this.transition = dfa_304;
        }
        public String getDescription() {
            return "15700:2: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )";
        }
    }
    static final String dfa_305s = "\1\12\1\uffff\1\5\1\4\2\5\1\6\2\uffff\2\4";
    static final String dfa_306s = "\1\152\1\uffff\1\5\1\151\1\5\1\7\1\6\2\uffff\1\151\1\136";
    static final String dfa_307s = "\1\uffff\1\1\5\uffff\1\2\1\3\2\uffff";
    static final String dfa_308s = "\13\uffff}>";
    static final String[] dfa_309s = {
            "\1\1\137\uffff\1\2",
            "",
            "\1\3",
            "\4\7\1\uffff\1\7\32\uffff\1\10\56\uffff\1\4\12\uffff\1\5\12\uffff\1\6",
=======
            "\4\6\1\uffff\1\6\1\7\6\uffff\2\7\77\uffff\1\3\12\uffff\1\4\7\uffff\1\5\1\7",
            "\4\6\1\uffff\1\6\1\7\6\uffff\2\7\112\uffff\1\6\7\uffff\2\7"
    };
    static final short[] dfa_304 = DFA.unpackEncodedString(dfa_304s);
    static final short[][] dfa_305 = unpackEncodedStringArray(dfa_305s);

    class DFA429 extends DFA {

        public DFA429(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 429;
            this.eot = dfa_79;
            this.eof = dfa_304;
            this.min = dfa_288;
            this.max = dfa_289;
            this.accept = dfa_290;
            this.special = dfa_291;
            this.transition = dfa_305;
        }
        public String getDescription() {
            return "15149:2: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )";
        }
    }
    static final String dfa_306s = "\1\12\1\uffff\1\5\1\4\2\5\1\6\2\uffff\2\4";
    static final String dfa_307s = "\1\146\1\uffff\1\5\1\145\1\5\1\7\1\6\2\uffff\1\145\1\135";
    static final String dfa_308s = "\1\uffff\1\1\5\uffff\1\3\1\2\2\uffff";
    static final String dfa_309s = "\13\uffff}>";
    static final String[] dfa_310s = {
            "\1\1\133\uffff\1\2",
            "",
            "\1\3",
            "\4\10\1\uffff\1\10\32\uffff\1\7\55\uffff\1\4\12\uffff\1\5\7\uffff\1\6",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\11",
            "\1\11\2\10",
            "\1\12",
            "",
            "",
<<<<<<< HEAD
            "\4\7\1\uffff\1\7\32\uffff\1\10\56\uffff\1\4\12\uffff\1\5\12\uffff\1\6",
            "\4\7\1\uffff\1\7\32\uffff\1\10\71\uffff\1\7"
    };
    static final char[] dfa_305 = DFA.unpackEncodedStringToUnsignedChars(dfa_305s);
    static final char[] dfa_306 = DFA.unpackEncodedStringToUnsignedChars(dfa_306s);
    static final short[] dfa_307 = DFA.unpackEncodedString(dfa_307s);
    static final short[] dfa_308 = DFA.unpackEncodedString(dfa_308s);
    static final short[][] dfa_309 = unpackEncodedStringArray(dfa_309s);

    class DFA441 extends DFA {

        public DFA441(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 441;
            this.eot = dfa_45;
            this.eof = dfa_45;
            this.min = dfa_305;
            this.max = dfa_306;
            this.accept = dfa_307;
            this.special = dfa_308;
            this.transition = dfa_309;
        }
        public String getDescription() {
            return "15742:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation )";
        }
    }
    static final String dfa_310s = "\3\uffff\1\10\6\uffff\2\10";
    static final String dfa_311s = "\1\12\1\uffff\1\5\1\4\2\5\1\6\3\uffff\2\4";
    static final String dfa_312s = "\1\152\1\uffff\1\5\1\160\2\5\1\6\3\uffff\2\160";
    static final String dfa_313s = "\1\uffff\1\1\5\uffff\1\3\1\4\1\2\2\uffff";
    static final String[] dfa_314s = {
            "\1\1\137\uffff\1\2",
            "",
            "\1\3",
            "\2\11\3\uffff\1\11\1\10\31\uffff\1\7\1\uffff\1\10\2\uffff\1\10\22\uffff\1\10\7\uffff\1\10\16\uffff\1\4\12\uffff\1\5\12\uffff\1\6\7\10",
=======
            "\4\10\1\uffff\1\10\32\uffff\1\7\55\uffff\1\4\12\uffff\1\5\7\uffff\1\6",
            "\4\10\1\uffff\1\10\32\uffff\1\7\70\uffff\1\10"
    };
    static final char[] dfa_306 = DFA.unpackEncodedStringToUnsignedChars(dfa_306s);
    static final char[] dfa_307 = DFA.unpackEncodedStringToUnsignedChars(dfa_307s);
    static final short[] dfa_308 = DFA.unpackEncodedString(dfa_308s);
    static final short[] dfa_309 = DFA.unpackEncodedString(dfa_309s);
    static final short[][] dfa_310 = unpackEncodedStringArray(dfa_310s);

    class DFA430 extends DFA {

        public DFA430(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 430;
            this.eot = dfa_45;
            this.eof = dfa_45;
            this.min = dfa_306;
            this.max = dfa_307;
            this.accept = dfa_308;
            this.special = dfa_309;
            this.transition = dfa_310;
        }
        public String getDescription() {
            return "15191:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation )";
        }
    }
    static final String dfa_311s = "\3\uffff\1\10\6\uffff\2\10";
    static final String dfa_312s = "\1\12\1\uffff\1\5\1\4\2\5\1\6\3\uffff\2\4";
    static final String dfa_313s = "\1\146\1\uffff\1\5\1\154\2\5\1\6\3\uffff\2\154";
    static final String dfa_314s = "\1\uffff\1\1\5\uffff\1\3\1\4\1\2\2\uffff";
    static final String[] dfa_315s = {
            "\1\1\133\uffff\1\2",
            "",
            "\1\3",
            "\2\11\3\uffff\1\11\1\10\31\uffff\1\7\1\uffff\1\10\2\uffff\1\10\21\uffff\1\10\7\uffff\1\10\16\uffff\1\4\12\uffff\1\5\7\uffff\1\6\7\10",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\12",
            "\1\12",
            "\1\13",
            "",
            "",
            "",
<<<<<<< HEAD
            "\2\11\3\uffff\1\11\1\10\31\uffff\1\7\1\uffff\1\10\2\uffff\1\10\22\uffff\1\10\7\uffff\1\10\16\uffff\1\4\12\uffff\1\5\12\uffff\1\6\7\10",
            "\2\11\3\uffff\1\11\1\10\31\uffff\1\7\1\uffff\1\10\2\uffff\1\10\22\uffff\1\10\7\uffff\1\10\45\uffff\7\10"
    };
    static final short[] dfa_310 = DFA.unpackEncodedString(dfa_310s);
    static final char[] dfa_311 = DFA.unpackEncodedStringToUnsignedChars(dfa_311s);
    static final char[] dfa_312 = DFA.unpackEncodedStringToUnsignedChars(dfa_312s);
    static final short[] dfa_313 = DFA.unpackEncodedString(dfa_313s);
    static final short[][] dfa_314 = unpackEncodedStringArray(dfa_314s);

    class DFA442 extends DFA {

        public DFA442(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 442;
            this.eot = dfa_13;
            this.eof = dfa_310;
            this.min = dfa_311;
            this.max = dfa_312;
            this.accept = dfa_313;
            this.special = dfa_88;
            this.transition = dfa_314;
        }
        public String getDescription() {
            return "15796:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )";
        }
    }
    static final String dfa_315s = "\3\uffff\1\11\6\uffff\2\11";
    static final String dfa_316s = "\1\152\1\uffff\1\5\1\152\2\5\1\6\3\uffff\2\152";
    static final String dfa_317s = "\1\uffff\1\1\5\uffff\1\3\1\2\1\4\2\uffff";
    static final String[] dfa_318s = {
            "\1\1\137\uffff\1\2",
            "",
            "\1\3",
            "\1\10\1\11\4\uffff\1\11\31\uffff\1\7\56\uffff\1\4\12\uffff\1\5\12\uffff\1\6\1\11",
=======
            "\2\11\3\uffff\1\11\1\10\31\uffff\1\7\1\uffff\1\10\2\uffff\1\10\21\uffff\1\10\7\uffff\1\10\16\uffff\1\4\12\uffff\1\5\7\uffff\1\6\7\10",
            "\2\11\3\uffff\1\11\1\10\31\uffff\1\7\1\uffff\1\10\2\uffff\1\10\21\uffff\1\10\7\uffff\1\10\42\uffff\7\10"
    };
    static final short[] dfa_311 = DFA.unpackEncodedString(dfa_311s);
    static final char[] dfa_312 = DFA.unpackEncodedStringToUnsignedChars(dfa_312s);
    static final char[] dfa_313 = DFA.unpackEncodedStringToUnsignedChars(dfa_313s);
    static final short[] dfa_314 = DFA.unpackEncodedString(dfa_314s);
    static final short[][] dfa_315 = unpackEncodedStringArray(dfa_315s);

    class DFA431 extends DFA {

        public DFA431(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 431;
            this.eot = dfa_13;
            this.eof = dfa_311;
            this.min = dfa_312;
            this.max = dfa_313;
            this.accept = dfa_314;
            this.special = dfa_89;
            this.transition = dfa_315;
        }
        public String getDescription() {
            return "15245:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )";
        }
    }
    static final String dfa_316s = "\3\uffff\1\7\6\uffff\2\7";
    static final String dfa_317s = "\1\146\1\uffff\1\5\1\146\2\5\1\6\3\uffff\2\146";
    static final String dfa_318s = "\1\uffff\1\1\5\uffff\1\4\1\3\1\2\2\uffff";
    static final String[] dfa_319s = {
            "\1\1\133\uffff\1\2",
            "",
            "\1\3",
            "\1\11\1\7\4\uffff\1\7\31\uffff\1\10\55\uffff\1\4\12\uffff\1\5\7\uffff\1\6\1\7",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "\1\12",
            "\1\12",
            "\1\13",
            "",
            "",
            "",
<<<<<<< HEAD
            "\1\10\1\11\4\uffff\1\11\31\uffff\1\7\56\uffff\1\4\12\uffff\1\5\12\uffff\1\6\1\11",
            "\1\10\1\11\4\uffff\1\11\31\uffff\1\7\105\uffff\1\11"
    };
    static final short[] dfa_315 = DFA.unpackEncodedString(dfa_315s);
    static final char[] dfa_316 = DFA.unpackEncodedStringToUnsignedChars(dfa_316s);
    static final short[] dfa_317 = DFA.unpackEncodedString(dfa_317s);
    static final short[][] dfa_318 = unpackEncodedStringArray(dfa_318s);

    class DFA443 extends DFA {

        public DFA443(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 443;
            this.eot = dfa_13;
            this.eof = dfa_315;
            this.min = dfa_311;
            this.max = dfa_316;
            this.accept = dfa_317;
            this.special = dfa_88;
            this.transition = dfa_318;
        }
        public String getDescription() {
            return "15862:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )";
        }
    }
    static final String dfa_319s = "\117\uffff";
    static final String dfa_320s = "\1\1\116\uffff";
    static final String dfa_321s = "\1\4\55\uffff\1\0\40\uffff";
    static final String dfa_322s = "\1\u009e\55\uffff\1\0\40\uffff";
    static final String dfa_323s = "\1\uffff\1\2\114\uffff\1\1";
    static final String dfa_324s = "\56\uffff\1\0\40\uffff}>";
    static final String[] dfa_325s = {
            "\7\1\6\uffff\5\1\1\uffff\7\1\1\uffff\1\1\1\uffff\1\1\2\uffff\3\1\2\uffff\1\1\3\uffff\6\1\11\uffff\7\1\1\uffff\2\1\1\uffff\4\1\2\uffff\4\1\2\uffff\1\116\2\1\10\uffff\1\56\7\uffff\1\1\2\uffff\10\1\3\uffff\6\1\27\uffff\3\1\1\uffff\3\1\3\uffff\4\1",
=======
            "\1\11\1\7\4\uffff\1\7\31\uffff\1\10\55\uffff\1\4\12\uffff\1\5\7\uffff\1\6\1\7",
            "\1\11\1\7\4\uffff\1\7\31\uffff\1\10\101\uffff\1\7"
    };
    static final short[] dfa_316 = DFA.unpackEncodedString(dfa_316s);
    static final char[] dfa_317 = DFA.unpackEncodedStringToUnsignedChars(dfa_317s);
    static final short[] dfa_318 = DFA.unpackEncodedString(dfa_318s);
    static final short[][] dfa_319 = unpackEncodedStringArray(dfa_319s);

    class DFA432 extends DFA {

        public DFA432(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 432;
            this.eot = dfa_13;
            this.eof = dfa_316;
            this.min = dfa_312;
            this.max = dfa_317;
            this.accept = dfa_318;
            this.special = dfa_89;
            this.transition = dfa_319;
        }
        public String getDescription() {
            return "15311:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )";
        }
    }
    static final String dfa_320s = "\116\uffff";
    static final String dfa_321s = "\1\1\115\uffff";
    static final String dfa_322s = "\1\4\55\uffff\1\0\37\uffff";
    static final String dfa_323s = "\1\u009a\55\uffff\1\0\37\uffff";
    static final String dfa_324s = "\1\uffff\1\2\113\uffff\1\1";
    static final String dfa_325s = "\56\uffff\1\0\37\uffff}>";
    static final String[] dfa_326s = {
            "\7\1\6\uffff\5\1\1\uffff\7\1\1\uffff\1\1\1\uffff\1\1\2\uffff\3\1\2\uffff\1\1\3\uffff\6\1\10\uffff\7\1\1\uffff\2\1\1\uffff\4\1\2\uffff\4\1\2\uffff\1\115\2\1\10\uffff\1\56\4\uffff\1\1\2\uffff\10\1\3\uffff\6\1\27\uffff\3\1\2\uffff\2\1\3\uffff\4\1",
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

<<<<<<< HEAD
    static final short[] dfa_319 = DFA.unpackEncodedString(dfa_319s);
    static final short[] dfa_320 = DFA.unpackEncodedString(dfa_320s);
    static final char[] dfa_321 = DFA.unpackEncodedStringToUnsignedChars(dfa_321s);
    static final char[] dfa_322 = DFA.unpackEncodedStringToUnsignedChars(dfa_322s);
    static final short[] dfa_323 = DFA.unpackEncodedString(dfa_323s);
    static final short[] dfa_324 = DFA.unpackEncodedString(dfa_324s);
    static final short[][] dfa_325 = unpackEncodedStringArray(dfa_325s);

    class DFA455 extends DFA {

        public DFA455(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 455;
            this.eot = dfa_319;
            this.eof = dfa_320;
            this.min = dfa_321;
            this.max = dfa_322;
            this.accept = dfa_323;
            this.special = dfa_324;
            this.transition = dfa_325;
        }
        public String getDescription() {
            return "()* loopback of 16918:3: ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )*";
=======
    static final short[] dfa_320 = DFA.unpackEncodedString(dfa_320s);
    static final short[] dfa_321 = DFA.unpackEncodedString(dfa_321s);
    static final char[] dfa_322 = DFA.unpackEncodedStringToUnsignedChars(dfa_322s);
    static final char[] dfa_323 = DFA.unpackEncodedStringToUnsignedChars(dfa_323s);
    static final short[] dfa_324 = DFA.unpackEncodedString(dfa_324s);
    static final short[] dfa_325 = DFA.unpackEncodedString(dfa_325s);
    static final short[][] dfa_326 = unpackEncodedStringArray(dfa_326s);

    class DFA444 extends DFA {

        public DFA444(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 444;
            this.eot = dfa_320;
            this.eof = dfa_321;
            this.min = dfa_322;
            this.max = dfa_323;
            this.accept = dfa_324;
            this.special = dfa_325;
            this.transition = dfa_326;
        }
        public String getDescription() {
            return "()* loopback of 16367:3: ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )*";
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
<<<<<<< HEAD
                        int LA455_46 = input.LA(1);

                         
                        int index455_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred520_InternalSCTX()) ) {s = 78;}
=======
                        int LA444_46 = input.LA(1);

                         
                        int index444_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred507_InternalSCTX()) ) {s = 77;}
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments

                        else if ( (true) ) {s = 1;}

                         
<<<<<<< HEAD
                        input.seek(index455_46);
=======
                        input.seek(index444_46);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
<<<<<<< HEAD
                new NoViableAltException(getDescription(), 455, _s, input);
=======
                new NoViableAltException(getDescription(), 444, _s, input);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            error(nvae);
            throw nvae;
        }
    }

<<<<<<< HEAD
    class DFA537 extends DFA {

        public DFA537(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 537;
            this.eot = dfa_72;
            this.eof = dfa_72;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_101;
=======
    class DFA526 extends DFA {

        public DFA526(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 526;
            this.eot = dfa_101;
            this.eof = dfa_101;
            this.min = dfa_102;
            this.max = dfa_103;
            this.accept = dfa_104;
            this.special = dfa_105;
            this.transition = dfa_106;
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        }
        public String getDescription() {
            return "()* loopback of 5854:5: ( (lv_declarations_3_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
<<<<<<< HEAD
                        int LA537_1 = input.LA(1);

                         
                        int index537_1 = input.index();
=======
                        int LA526_1 = input.LA(1);

                         
                        int index526_1 = input.index();
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        input.rewind();
                        s = -1;
                        if ( (synpred218_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
<<<<<<< HEAD
                        input.seek(index537_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA537_2 = input.LA(1);

                         
                        int index537_2 = input.index();
=======
                        input.seek(index526_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA526_2 = input.LA(1);

                         
                        int index526_2 = input.index();
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        input.rewind();
                        s = -1;
                        if ( (synpred218_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
<<<<<<< HEAD
                        input.seek(index537_2);
=======
                        input.seek(index526_2);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
<<<<<<< HEAD
                new NoViableAltException(getDescription(), 537, _s, input);
=======
                new NoViableAltException(getDescription(), 526, _s, input);
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
            error(nvae);
            throw nvae;
        }
    }
 

    
    private static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
<<<<<<< HEAD
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000060402L,0x0000060000000000L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000040402L,0x0000040000000000L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000040400L,0x0000040000000000L});
=======
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000060402L,0x0000006000000000L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000040402L,0x0000004000000000L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000040400L,0x0000004000000000L});
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000280010L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000280000L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000300000L});
<<<<<<< HEAD
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0xFFD260002FC00400L,0x03F1E4000001C027L,0x0000000038C00000L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x1FD260000FC00400L,0x0001E40000000000L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000400000L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0002600001400400L,0x0000040000000000L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x000000000F800400L,0x0000040000000000L});
=======
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0xFFEA60002FC00400L,0x003F1E400000E013L,0x00000000038C0000L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0FEA60000FC00400L,0x00001E4000000000L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000400000L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0002600001400400L,0x0000004000000000L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x000000000F800400L,0x0000004000000000L});
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x000000000F000000L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x000000000E000000L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x000000000C000000L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000008000000L});
<<<<<<< HEAD
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000024030280412L,0x0001FC0000000010L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000024030280402L,0x0001FC0000000010L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000040000020L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000024020000402L,0x0001FC0000000010L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000024000000422L,0x0001FC0000000010L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000020300000L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000200020L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000024000000402L,0x0001FC0000000010L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0002600001000402L,0x0000040000000000L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000080000002L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x00000006802007F0L,0x0000064040210000L,0x00000000002E0000L});
=======
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000024030280412L,0x00001FC000000008L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000024030280402L,0x00001FC000000008L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000040000020L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000024020000402L,0x00001FC000000008L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000024000000422L,0x00001FC000000008L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000020300000L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000200020L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000024000000402L,0x00001FC000000008L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0002600001000402L,0x0000004000000000L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000080000002L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x00000006802007F0L,0x0000004420108000L,0x000000000000E000L});
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000100100000L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000100000000L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000400000000L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000800000002L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000001000000002L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000002000000000L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000020000002L});
<<<<<<< HEAD
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000024000000400L,0x0001FC0000000010L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x00000002802007F0L,0x0000064040210000L,0x00000000002E0000L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x000003C000000400L,0x0001FC0000000010L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000080L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000034000000400L,0x0001FC0000000010L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000200520L,0x0000040000310000L,0x00000000000A0000L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000064000000400L,0x0001FC0000000010L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000180000000002L,0x000E000000000000L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000100000000002L,0x000E000000000000L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000100000000002L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x000000000F800402L,0x0000040000000000L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000600001000400L,0x0000040000000000L});
=======
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000024000000400L,0x00001FC000000008L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x00000002802007F0L,0x0000004420108000L,0x000000000000E000L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x000003C000000400L,0x00001FC000000008L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000080L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000034000000400L,0x00001FC000000008L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000200520L,0x0000004000188000L,0x000000000000A000L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000064000000400L,0x00001FC000000008L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000180000000002L,0x0000E00000000000L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000100000000002L,0x0000E00000000000L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000100000000002L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x000000000F800402L,0x0000004000000000L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000600001000400L,0x0000004000000000L});
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000400001000000L});
        public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000400000000000L});
        public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0001800030200030L});
        public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0001800030200010L});
        public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0001800030200000L});
        public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000800020000002L});
        public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0001000000000000L});
<<<<<<< HEAD
        public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000060L,0x0000000000000000L,0x00000000000A0000L});
=======
        public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000060L,0x0000000000000000L,0x000000000000A000L});
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000820000002L});
        public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000022L});
        public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0001000820200000L});
        public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0001000020200000L});
        public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0001000000200020L});
<<<<<<< HEAD
        public static final BitSet FOLLOW_64 = new BitSet(new long[]{0xFFD260002F800400L,0x03F1E4000001C027L,0x0000000038C00000L});
        public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x1FD260000F800400L,0x0001E40000000000L});
        public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x000000000FC00400L,0x0000040000000000L});
        public static final BitSet FOLLOW_67 = new BitSet(new long[]{0xFFD000002F800402L,0x03F1E4000001C027L,0x0000000038C00000L});
        public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x1FD000000F800402L,0x0001E40000000000L});
        public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0002200000000400L,0x0000040000000000L});
=======
        public static final BitSet FOLLOW_64 = new BitSet(new long[]{0xFFEA60002F800400L,0x003F1E400000E013L,0x00000000038C0000L});
        public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0FEA60000F800400L,0x00001E4000000000L});
        public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x000000000FC00400L,0x0000004000000000L});
        public static final BitSet FOLLOW_67 = new BitSet(new long[]{0xFFE800002F800402L,0x003F1E400000E013L,0x00000000038C0000L});
        public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0FE800000F800402L,0x00001E4000000000L});
        public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0002200000000400L,0x0000004000000000L});
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
        public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0002000000000000L});
        public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0005800020200030L});
        public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0005800020200010L});
        public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0005800020200000L});
        public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0005000820200000L});
        public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0005000020200000L});
        public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0005000000200020L});
        public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0001000000200000L});
<<<<<<< HEAD
        public static final BitSet FOLLOW_78 = new BitSet(new long[]{0xE008000020400420L,0x03F004000001C007L,0x0000000038CA0000L});
        public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0008000000400420L,0x0000040000000000L,0x00000000000A0000L});
        public static final BitSet FOLLOW_80 = new BitSet(new long[]{0xE008000020000422L,0x03F004000001C007L,0x0000000038CA0000L});
        public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0008000000000422L,0x0000040000000000L,0x00000000000A0000L});
        public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000420L,0x0000040000000000L,0x00000000000A0000L});
        public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000520L,0x0000040000310000L,0x00000000000A0000L});
        public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000124000000002L});
        public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0020120000000002L});
        public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000120000000002L});
        public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000140000000002L});
        public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0040000000000000L});
        public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000128000000002L});
        public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0300000000000000L});
        public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0200000000000000L});
        public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000104000000002L});
        public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000108000000002L});
        public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x1000000000000400L,0x0001E40000000000L});
        public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x00000000802007F0L,0x0000064040210000L,0x00000000002A0000L});
        public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000200400L,0x0000040000000000L});
        public static final BitSet FOLLOW_98 = new BitSet(new long[]{0xE000804020600420L,0x03F004000001CB07L,0x0000000038CA0000L});
        public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000804000600420L,0x0000040000000B00L,0x00000000000A0000L});
        public static final BitSet FOLLOW_100 = new BitSet(new long[]{0xE000000020000400L,0x03F004000001C007L,0x0000000038C00000L});
        public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000200000L});
        public static final BitSet FOLLOW_102 = new BitSet(new long[]{0xE000000020400420L,0x03F004000001C00FL,0x0000000078C00000L});
        public static final BitSet FOLLOW_103 = new BitSet(new long[]{0xE000000020400420L,0x03F004000001C007L,0x0000000078C00000L});
        public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000C22L,0x0000040000000000L});
        public static final BitSet FOLLOW_105 = new BitSet(new long[]{0xE000000020400400L,0x03F004000001C007L,0x0000000038C00000L});
        public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000100802L});
        public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000000000420L,0x0000040000000000L});
        public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000200010L});
        public static final BitSet FOLLOW_109 = new BitSet(new long[]{0xE000000028800400L,0x03F004000001C007L,0x0000000038C00000L});
        public static final BitSet FOLLOW_110 = new BitSet(new long[]{0xE000000028C00400L,0x03F004000001C007L,0x0000000038C00000L});
        public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000008800400L,0x0000040000000000L});
        public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000004000000412L,0x0000040000000010L});
        public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000004000000402L,0x0000040000000010L});
        public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000004000000400L,0x0000040000000010L});
        public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0001000000000000L,0x0000000000000010L});
        public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000010L});
        public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000000400L,0x0000040000000020L,0x0000000038000000L});
        public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
        public static final BitSet FOLLOW_119 = new BitSet(new long[]{0xE000000020000420L,0x03F004000001C007L,0x0000000078C00000L});
        public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000080000000L,0x0000000000000040L});
        public static final BitSet FOLLOW_121 = new BitSet(new long[]{0xE000000000000400L,0x03F0040000004007L,0x0000000038000000L});
        public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000020200002L});
        public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000000000200022L});
        public static final BitSet FOLLOW_124 = new BitSet(new long[]{0xE000804020600C20L,0x03F004000001CB07L,0x0000000038CA0000L});
        public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000000000000400L,0x0000040000000080L});
        public static final BitSet FOLLOW_126 = new BitSet(new long[]{0xE001804020200422L,0x03F004000001CB07L,0x0000000038CA0000L});
        public static final BitSet FOLLOW_127 = new BitSet(new long[]{0xE000804020200422L,0x03F004000001CB07L,0x0000000038CA0000L});
        public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000804000200422L,0x0000040000000B00L,0x00000000000A0000L});
        public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000000000400L,0x0000040000000100L});
        public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000040000000002L});
        public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x0000000000000000L,0xF000000000020000L,0x00000000000001FFL});
        public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0000040020000002L});
        public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000040000000022L});
        public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000600L});
        public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000000000000400L,0x0000040000000200L});
        public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0000004000000400L,0x0000040000000000L});
        public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x00000000802007F0L,0x0000044000210000L,0x00000000000A0000L});
        public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0000040000000402L,0x0000040000000400L});
        public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0000000000000400L,0x0000040000000400L});
        public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x0000000080000000L});
        public static final BitSet FOLLOW_141 = new BitSet(new long[]{0xE0000406802007F0L,0x03F0064040214007L,0x00000000382E0000L});
        public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x0000040000000000L});
        public static final BitSet FOLLOW_143 = new BitSet(new long[]{0x00000007802007F0L,0x0000064040210000L,0x00000000002E0000L});
        public static final BitSet FOLLOW_144 = new BitSet(new long[]{0x0000040020200000L});
        public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x0000040000200020L});
        public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x0000000000000802L});
        public static final BitSet FOLLOW_147 = new BitSet(new long[]{0xE000000020200522L,0x03F004000031F007L,0x0000000038CA0000L});
        public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x0000000000200522L,0x0000040000313000L,0x00000000000A0000L});
        public static final BitSet FOLLOW_149 = new BitSet(new long[]{0x0000000000000002L,0x0000000000001000L});
        public static final BitSet FOLLOW_150 = new BitSet(new long[]{0xE000000020600520L,0x03F004000031F007L,0x0000000038CA0000L});
        public static final BitSet FOLLOW_151 = new BitSet(new long[]{0x0000000000600520L,0x0000040000313000L,0x00000000000A0000L});
        public static final BitSet FOLLOW_152 = new BitSet(new long[]{0x0000000000400000L,0x0000000000001000L});
        public static final BitSet FOLLOW_153 = new BitSet(new long[]{0x0000000000000400L,0x0000040000002000L});
        public static final BitSet FOLLOW_154 = new BitSet(new long[]{0x0000000000000000L,0x03F0000000004000L});
        public static final BitSet FOLLOW_155 = new BitSet(new long[]{0x0000040000100000L});
        public static final BitSet FOLLOW_156 = new BitSet(new long[]{0x0000040000000420L,0x0000040000000000L});
        public static final BitSet FOLLOW_157 = new BitSet(new long[]{0x0001000000000002L});
        public static final BitSet FOLLOW_158 = new BitSet(new long[]{0x0000000000000400L,0x0000040000018000L,0x0000000038000000L});
        public static final BitSet FOLLOW_159 = new BitSet(new long[]{0x0000000000000000L,0x0000000000018000L});
        public static final BitSet FOLLOW_160 = new BitSet(new long[]{0x0000000000000410L,0x0000040000000000L});
        public static final BitSet FOLLOW_161 = new BitSet(new long[]{0x0000000000100420L,0x0000040000000000L});
        public static final BitSet FOLLOW_162 = new BitSet(new long[]{0x0000000020000400L,0x0000040000000000L,0x0000000038000000L});
        public static final BitSet FOLLOW_163 = new BitSet(new long[]{0x0000000020000000L});
        public static final BitSet FOLLOW_164 = new BitSet(new long[]{0x0000000000200430L,0x0000040000000001L});
        public static final BitSet FOLLOW_165 = new BitSet(new long[]{0x0000000000200420L,0x0000040000000001L});
        public static final BitSet FOLLOW_166 = new BitSet(new long[]{0x0000000000000000L,0x0C00000000000000L});
        public static final BitSet FOLLOW_167 = new BitSet(new long[]{0x0000000000200420L,0x0000040000000000L});
        public static final BitSet FOLLOW_168 = new BitSet(new long[]{0x0000000000500000L});
        public static final BitSet FOLLOW_169 = new BitSet(new long[]{0x0000101000000002L,0x0000000000060000L});
        public static final BitSet FOLLOW_170 = new BitSet(new long[]{0x0000100000000002L,0x0000000000040000L});
        public static final BitSet FOLLOW_171 = new BitSet(new long[]{0x0000000400000000L,0x00000000A1000004L,0x0000000007000000L});
        public static final BitSet FOLLOW_172 = new BitSet(new long[]{0x0000000000000500L,0x0000040000000000L});
        public static final BitSet FOLLOW_173 = new BitSet(new long[]{0x0000001080000000L,0x0000000000080040L});
        public static final BitSet FOLLOW_174 = new BitSet(new long[]{0x0000000000000020L,0x0000000000000000L,0x00000000000A0000L});
        public static final BitSet FOLLOW_175 = new BitSet(new long[]{0x0000000000000400L,0x0000040000010000L});
        public static final BitSet FOLLOW_176 = new BitSet(new long[]{0x0000000000000400L,0x0000040000100000L});
        public static final BitSet FOLLOW_177 = new BitSet(new long[]{0x0000000000000400L,0x0000040000200000L});
        public static final BitSet FOLLOW_178 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L});
        public static final BitSet FOLLOW_179 = new BitSet(new long[]{0x0000000000000002L,0x0000000000800000L});
        public static final BitSet FOLLOW_180 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
        public static final BitSet FOLLOW_181 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
        public static final BitSet FOLLOW_182 = new BitSet(new long[]{0x0000000400000002L});
        public static final BitSet FOLLOW_183 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x000000000001F800L});
        public static final BitSet FOLLOW_184 = new BitSet(new long[]{0x0000000000000002L,0x000000001C000000L});
        public static final BitSet FOLLOW_185 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
        public static final BitSet FOLLOW_186 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
        public static final BitSet FOLLOW_187 = new BitSet(new long[]{0x0000000000000002L,0x0000000060000000L});
        public static final BitSet FOLLOW_188 = new BitSet(new long[]{0x0000000000000002L,0x0000000380000000L});
        public static final BitSet FOLLOW_189 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000100000L});
        public static final BitSet FOLLOW_190 = new BitSet(new long[]{0x0000000000000002L,0x0000000400000000L});
        public static final BitSet FOLLOW_191 = new BitSet(new long[]{0x0000000000000002L,0x0000000800000000L});
        public static final BitSet FOLLOW_192 = new BitSet(new long[]{0x0000000000000002L,0x0000001000000000L});
        public static final BitSet FOLLOW_193 = new BitSet(new long[]{0x0000000000000002L,0x0000002000000000L});
        public static final BitSet FOLLOW_194 = new BitSet(new long[]{0x0000001000000002L,0x0000000000080000L});
        public static final BitSet FOLLOW_195 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_196 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000040L});
        public static final BitSet FOLLOW_197 = new BitSet(new long[]{0x00000002802007F0L,0x000006C040210000L,0x00000000002E0000L});
        public static final BitSet FOLLOW_198 = new BitSet(new long[]{0x0000000000400010L});
        public static final BitSet FOLLOW_199 = new BitSet(new long[]{0x00000010002002D0L,0x0000010000000000L});
        public static final BitSet FOLLOW_200 = new BitSet(new long[]{0x00000030002002D0L,0x0000010000000000L});
        public static final BitSet FOLLOW_201 = new BitSet(new long[]{0x0000002000100000L});
        public static final BitSet FOLLOW_202 = new BitSet(new long[]{0x00000000000002F0L,0x0000000040000000L});
        public static final BitSet FOLLOW_203 = new BitSet(new long[]{0x0000000000100002L});
        public static final BitSet FOLLOW_204 = new BitSet(new long[]{0x0000000000000230L});
        public static final BitSet FOLLOW_205 = new BitSet(new long[]{0x0000001000000000L});
        public static final BitSet FOLLOW_206 = new BitSet(new long[]{0x0000000000000002L,0x0000020040080000L});
=======
        public static final BitSet FOLLOW_78 = new BitSet(new long[]{0xF000000020400420L,0x003F00400000E003L,0x00000000038CA000L});
        public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000400420L,0x0000004000000000L,0x000000000000A000L});
        public static final BitSet FOLLOW_80 = new BitSet(new long[]{0xF000000020000422L,0x003F00400000E003L,0x00000000038CA000L});
        public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000422L,0x0000004000000000L,0x000000000000A000L});
        public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000124000000002L});
        public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0010120000000002L});
        public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000120000000002L});
        public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000140000000002L});
        public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0020000000000000L});
        public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000128000000002L});
        public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0180000000000000L});
        public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0100000000000000L});
        public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000104000000002L});
        public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000108000000002L});
        public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0800000000000400L,0x00001E4000000000L});
        public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x00000000802007F0L,0x0000004420108000L,0x000000000000A000L});
        public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000000200400L,0x0000004000000000L});
        public static final BitSet FOLLOW_96 = new BitSet(new long[]{0xF000804020600420L,0x003F00400000E583L,0x00000000038CA000L});
        public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000804000600420L,0x0000004000000580L,0x000000000000A000L});
        public static final BitSet FOLLOW_98 = new BitSet(new long[]{0xF000000020000400L,0x003F00400000E003L,0x00000000038C0000L});
        public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000200000L});
        public static final BitSet FOLLOW_100 = new BitSet(new long[]{0xF000000020400420L,0x003F00400000E007L,0x00000000078C0000L});
        public static final BitSet FOLLOW_101 = new BitSet(new long[]{0xF000000020400420L,0x003F00400000E003L,0x00000000078C0000L});
        public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000000000C22L,0x0000004000000000L});
        public static final BitSet FOLLOW_103 = new BitSet(new long[]{0xF000000020400400L,0x003F00400000E003L,0x00000000038C0000L});
        public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000100802L});
        public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000000420L,0x0000004000000000L});
        public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000200010L});
        public static final BitSet FOLLOW_107 = new BitSet(new long[]{0xF000000028800400L,0x003F00400000E003L,0x00000000038C0000L});
        public static final BitSet FOLLOW_108 = new BitSet(new long[]{0xF000000028C00400L,0x003F00400000E003L,0x00000000038C0000L});
        public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000008800400L,0x0000004000000000L});
        public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000004000000412L,0x0000004000000008L});
        public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000004000000402L,0x0000004000000008L});
        public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000004000000400L,0x0000004000000008L});
        public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0001000000000000L,0x0000000000000008L});
        public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000000520L,0x0000004000188000L,0x000000000000A000L});
        public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000008L});
        public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000000000400L,0x0000004000000010L,0x0000000003800000L});
        public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
        public static final BitSet FOLLOW_118 = new BitSet(new long[]{0xF000000020000420L,0x003F00400000E003L,0x00000000078C0000L});
        public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000080000000L,0x0000000000000020L});
        public static final BitSet FOLLOW_120 = new BitSet(new long[]{0xF000000000000400L,0x003F004000002003L,0x0000000003800000L});
        public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000000020200002L});
        public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000200022L});
        public static final BitSet FOLLOW_123 = new BitSet(new long[]{0xF000804020600C20L,0x003F00400000E583L,0x00000000038CA000L});
        public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000000000400L,0x0000004000000040L});
        public static final BitSet FOLLOW_125 = new BitSet(new long[]{0xF001804020200422L,0x003F00400000E583L,0x00000000038CA000L});
        public static final BitSet FOLLOW_126 = new BitSet(new long[]{0xF000804020200422L,0x003F00400000E583L,0x00000000038CA000L});
        public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000804000200422L,0x0000004000000580L,0x000000000000A000L});
        public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000000000000400L,0x0000004000000080L});
        public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000040000000002L});
        public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000000000000420L,0x0000004000000000L,0x000000000000A000L});
        public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x0000000000000000L,0xFF00000000010000L,0x000000000000001FL});
        public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0000040020000002L});
        public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000040000000022L});
        public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000060L});
        public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000000000000400L,0x0000004000000100L});
        public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0000004000000400L,0x0000004000000000L});
        public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x00000000802007F0L,0x0000004400108000L,0x000000000000A000L});
        public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0000040000000402L,0x0000004000000200L});
        public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0000000000000400L,0x0000004000000200L});
        public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x0000000080000000L});
        public static final BitSet FOLLOW_141 = new BitSet(new long[]{0xF0000406802007F0L,0x003F00442010A003L,0x000000000380E000L});
        public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x0000040000000000L});
        public static final BitSet FOLLOW_143 = new BitSet(new long[]{0x00000007802007F0L,0x0000004420108000L,0x000000000000E000L});
        public static final BitSet FOLLOW_144 = new BitSet(new long[]{0x0000040020200000L});
        public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x0000040000200020L});
        public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x0000000000000802L});
        public static final BitSet FOLLOW_147 = new BitSet(new long[]{0xF000000020200522L,0x003F00400018F803L,0x00000000038CA000L});
        public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x0000000000200522L,0x0000004000189800L,0x000000000000A000L});
        public static final BitSet FOLLOW_149 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000800L});
        public static final BitSet FOLLOW_150 = new BitSet(new long[]{0xF000000020600520L,0x003F00400018F803L,0x00000000038CA000L});
        public static final BitSet FOLLOW_151 = new BitSet(new long[]{0x0000000000600520L,0x0000004000189800L,0x000000000000A000L});
        public static final BitSet FOLLOW_152 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000800L});
        public static final BitSet FOLLOW_153 = new BitSet(new long[]{0x0000000000000400L,0x0000004000001000L});
        public static final BitSet FOLLOW_154 = new BitSet(new long[]{0x0000000000000000L,0x003F000000002000L});
        public static final BitSet FOLLOW_155 = new BitSet(new long[]{0x0000040000100000L});
        public static final BitSet FOLLOW_156 = new BitSet(new long[]{0x0000040000000420L,0x0000004000000000L});
        public static final BitSet FOLLOW_157 = new BitSet(new long[]{0x0001000000000002L});
        public static final BitSet FOLLOW_158 = new BitSet(new long[]{0x0000000000000400L,0x000000400000C000L,0x0000000003800000L});
        public static final BitSet FOLLOW_159 = new BitSet(new long[]{0x0000000000000000L,0x000000000000C000L});
        public static final BitSet FOLLOW_160 = new BitSet(new long[]{0x0000000000000410L,0x0000004000000000L});
        public static final BitSet FOLLOW_161 = new BitSet(new long[]{0x0000000000100420L,0x0000004000000000L});
        public static final BitSet FOLLOW_162 = new BitSet(new long[]{0x0000000020000400L,0x0000004000000000L,0x0000000003800000L});
        public static final BitSet FOLLOW_163 = new BitSet(new long[]{0x0000000020000000L});
        public static final BitSet FOLLOW_164 = new BitSet(new long[]{0x8000000000200430L,0x0000004000000000L});
        public static final BitSet FOLLOW_165 = new BitSet(new long[]{0x8000000000200420L,0x0000004000000000L});
        public static final BitSet FOLLOW_166 = new BitSet(new long[]{0x0000000000000000L,0x00C0000000000000L});
        public static final BitSet FOLLOW_167 = new BitSet(new long[]{0x0000000000200420L,0x0000004000000000L});
        public static final BitSet FOLLOW_168 = new BitSet(new long[]{0x0000000000500000L});
        public static final BitSet FOLLOW_169 = new BitSet(new long[]{0x0000001000000002L,0x0000000000030000L});
        public static final BitSet FOLLOW_170 = new BitSet(new long[]{0x0000000000000002L,0x0000000000020000L});
        public static final BitSet FOLLOW_171 = new BitSet(new long[]{0x0000000400000000L,0x0000000050800002L,0x0000000000700000L});
        public static final BitSet FOLLOW_172 = new BitSet(new long[]{0x0000000000000500L,0x0000004000000000L});
        public static final BitSet FOLLOW_173 = new BitSet(new long[]{0x0000001080000000L,0x0000000000040020L});
        public static final BitSet FOLLOW_174 = new BitSet(new long[]{0x0000000000000020L,0x0000000000000000L,0x000000000000A000L});
        public static final BitSet FOLLOW_175 = new BitSet(new long[]{0x0000000000000400L,0x0000004000008000L});
        public static final BitSet FOLLOW_176 = new BitSet(new long[]{0x0000000000000400L,0x0000004000080000L});
        public static final BitSet FOLLOW_177 = new BitSet(new long[]{0x0000000000000400L,0x0000004000100000L});
        public static final BitSet FOLLOW_178 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
        public static final BitSet FOLLOW_179 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L});
        public static final BitSet FOLLOW_180 = new BitSet(new long[]{0x0000000000000002L,0x0000000000800000L});
        public static final BitSet FOLLOW_181 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
        public static final BitSet FOLLOW_182 = new BitSet(new long[]{0x0000000400000002L});
        public static final BitSet FOLLOW_183 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000001F80L});
        public static final BitSet FOLLOW_184 = new BitSet(new long[]{0x0000000000000002L,0x000000000E000000L});
        public static final BitSet FOLLOW_185 = new BitSet(new long[]{0x0000000000000002L,0x0000000004000000L});
        public static final BitSet FOLLOW_186 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
        public static final BitSet FOLLOW_187 = new BitSet(new long[]{0x0000000000000002L,0x0000000030000000L});
        public static final BitSet FOLLOW_188 = new BitSet(new long[]{0x0000000000000002L,0x00000001C0000000L});
        public static final BitSet FOLLOW_189 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000010000L});
        public static final BitSet FOLLOW_190 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
        public static final BitSet FOLLOW_191 = new BitSet(new long[]{0x0000000000000002L,0x0000000200000000L});
        public static final BitSet FOLLOW_192 = new BitSet(new long[]{0x0000001000000002L,0x0000000000040000L});
        public static final BitSet FOLLOW_193 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_194 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
        public static final BitSet FOLLOW_195 = new BitSet(new long[]{0x00000002802007F0L,0x0000004C20108000L,0x000000000000E000L});
        public static final BitSet FOLLOW_196 = new BitSet(new long[]{0x0000000000400010L});
        public static final BitSet FOLLOW_197 = new BitSet(new long[]{0x00000010002002D0L,0x0000001000000000L});
        public static final BitSet FOLLOW_198 = new BitSet(new long[]{0x00000030002002D0L,0x0000001000000000L});
        public static final BitSet FOLLOW_199 = new BitSet(new long[]{0x0000002000100000L});
        public static final BitSet FOLLOW_200 = new BitSet(new long[]{0x00000000000002F0L,0x0000000020000000L});
        public static final BitSet FOLLOW_201 = new BitSet(new long[]{0x0000000000100002L});
        public static final BitSet FOLLOW_202 = new BitSet(new long[]{0x0000000000000230L});
        public static final BitSet FOLLOW_203 = new BitSet(new long[]{0x0000001000000000L});
        public static final BitSet FOLLOW_204 = new BitSet(new long[]{0x0000000000000002L,0x0000002020040000L});
>>>>>>> parent of f198eaaf77... scc df: changed df regions to contain effects instead of assignments
    }


}