package de.cau.cs.kieler.sccharts.text.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.cau.cs.kieler.sccharts.text.services.SCTXGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalSCTXParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_STRING", "RULE_ID", "RULE_INT", "RULE_HOSTCODE", "RULE_FLOAT", "RULE_BOOLEAN", "RULE_COMMENT_ANNOTATION", "RULE_SL_COMMENT_ANNOTATION", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_NUMBER", "RULE_WS", "RULE_ANY_OTHER", "'scchart'", "'{'", "'}'", "'initial'", "'final'", "'violation'", "'connector'", "'state'", "'is'", "'('", "','", "')'", "'!'", "'&'", "'to'", "'['", "']'", "'deferred'", "'if'", "'do'", "';'", "'entry'", "'during'", "'exit'", "'weak'", "'suspend'", "'preceding'", "'succeeding'", "'region'", "':'", "'dataflow'", "'scope'", "'expression'", "'const'", "'input'", "'output'", "'static'", "'signal'", "'ref'", "'extern'", "'schedule'", "'prio'", "'='", "'combine'", "'.'", "'()'", "'<'", "'>'", "'||'", "'&&'", "'|'", "'+'", "'-'", "'*'", "'/'", "'%'", "'\\''", "'@'", "'#'", "'go to'", "'abort to'", "'join to'", "'-->'", "'o->'", "'>->'", "'undefined'", "'delayed'", "'immediate'", "'auto'", "'reset'", "'shallow history'", "'history'", "'conflict'", "'confluent'", "'+='", "'-='", "'*='", "'/='", "'%='", "'&='", "'|='", "'^='", "'min='", "'max='", "'++'", "'--'", "'=='", "'<='", "'>='", "'!='", "'pre'", "'val'", "'pure'", "'bool'", "'unsigned'", "'int'", "'float'", "'string'", "'host'", "'none'", "'max'", "'min'"
    };
    public static final int T__50=50;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=5;
    public static final int RULE_INT=6;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=12;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int RULE_COMMENT_ANNOTATION=10;
    public static final int T__37=37;
    public static final int RULE_SL_COMMENT_ANNOTATION=11;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int RULE_FLOAT=8;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int RULE_BOOLEAN=9;
    public static final int T__19=19;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__26=26;
    public static final int RULE_HOSTCODE=7;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=4;
    public static final int RULE_SL_COMMENT=13;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__118=118;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__117=117;
    public static final int T__76=76;
    public static final int T__116=116;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=15;
    public static final int RULE_ANY_OTHER=16;
    public static final int RULE_NUMBER=14;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalSCTXParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSCTXParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSCTXParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSCTX.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */
     
     	private SCTXGrammarAccess grammarAccess;
     	
        public InternalSCTXParser(TokenStream input, SCTXGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }
        
        @Override
        protected String getFirstRuleName() {
        	return "SCCharts";	
       	}
       	
       	@Override
       	protected SCTXGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}



    // $ANTLR start "entryRuleSCCharts"
    // InternalSCTX.g:74:1: entryRuleSCCharts returns [EObject current=null] : iv_ruleSCCharts= ruleSCCharts EOF ;
    public final EObject entryRuleSCCharts() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSCCharts = null;


        try {
            // InternalSCTX.g:75:2: (iv_ruleSCCharts= ruleSCCharts EOF )
            // InternalSCTX.g:76:2: iv_ruleSCCharts= ruleSCCharts EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSCChartsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSCCharts=ruleSCCharts();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSCCharts; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSCCharts"


    // $ANTLR start "ruleSCCharts"
    // InternalSCTX.g:83:1: ruleSCCharts returns [EObject current=null] : ( ( (lv_pragmas_0_0= rulePragma ) )* ( (lv_rootStates_1_0= ruleRootState ) )* ) ;
    public final EObject ruleSCCharts() throws RecognitionException {
        EObject current = null;

        EObject lv_pragmas_0_0 = null;

        EObject lv_rootStates_1_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:86:28: ( ( ( (lv_pragmas_0_0= rulePragma ) )* ( (lv_rootStates_1_0= ruleRootState ) )* ) )
            // InternalSCTX.g:87:1: ( ( (lv_pragmas_0_0= rulePragma ) )* ( (lv_rootStates_1_0= ruleRootState ) )* )
            {
            // InternalSCTX.g:87:1: ( ( (lv_pragmas_0_0= rulePragma ) )* ( (lv_rootStates_1_0= ruleRootState ) )* )
            // InternalSCTX.g:87:2: ( (lv_pragmas_0_0= rulePragma ) )* ( (lv_rootStates_1_0= ruleRootState ) )*
            {
            // InternalSCTX.g:87:2: ( (lv_pragmas_0_0= rulePragma ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==75) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalSCTX.g:88:1: (lv_pragmas_0_0= rulePragma )
            	    {
            	    // InternalSCTX.g:88:1: (lv_pragmas_0_0= rulePragma )
            	    // InternalSCTX.g:89:3: lv_pragmas_0_0= rulePragma
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSCChartsAccess().getPragmasPragmaParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    lv_pragmas_0_0=rulePragma();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSCChartsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"pragmas",
            	              		lv_pragmas_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Pragma");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            // InternalSCTX.g:105:3: ( (lv_rootStates_1_0= ruleRootState ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==RULE_COMMENT_ANNOTATION||LA2_0==17||LA2_0==74) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalSCTX.g:106:1: (lv_rootStates_1_0= ruleRootState )
            	    {
            	    // InternalSCTX.g:106:1: (lv_rootStates_1_0= ruleRootState )
            	    // InternalSCTX.g:107:3: lv_rootStates_1_0= ruleRootState
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSCChartsAccess().getRootStatesRootStateParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    lv_rootStates_1_0=ruleRootState();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSCChartsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"rootStates",
            	              		lv_rootStates_1_0, 
            	              		"de.cau.cs.kieler.sccharts.text.SCTX.RootState");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSCCharts"


    // $ANTLR start "entryRuleRootState"
    // InternalSCTX.g:131:1: entryRuleRootState returns [EObject current=null] : iv_ruleRootState= ruleRootState EOF ;
    public final EObject entryRuleRootState() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRootState = null;


        try {
            // InternalSCTX.g:132:2: (iv_ruleRootState= ruleRootState EOF )
            // InternalSCTX.g:133:2: iv_ruleRootState= ruleRootState EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRootStateRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRootState=ruleRootState();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRootState; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRootState"


    // $ANTLR start "ruleRootState"
    // InternalSCTX.g:140:1: ruleRootState returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'scchart' ( (lv_name_2_0= ruleExtendedID ) ) ( (lv_label_3_0= RULE_STRING ) )? otherlv_4= '{' ( (lv_declarations_5_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_6_0= ruleLocalAction ) )* ( ( (lv_regions_7_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_8_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_9_0= ruleRegion ) )* ) otherlv_10= '}' ) ;
    public final EObject ruleRootState() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_label_3_0=null;
        Token otherlv_4=null;
        Token otherlv_10=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_declarations_5_0 = null;

        EObject lv_actions_6_0 = null;

        EObject lv_regions_7_0 = null;

        EObject lv_regions_8_0 = null;

        EObject lv_regions_9_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:143:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'scchart' ( (lv_name_2_0= ruleExtendedID ) ) ( (lv_label_3_0= RULE_STRING ) )? otherlv_4= '{' ( (lv_declarations_5_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_6_0= ruleLocalAction ) )* ( ( (lv_regions_7_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_8_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_9_0= ruleRegion ) )* ) otherlv_10= '}' ) )
            // InternalSCTX.g:144:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'scchart' ( (lv_name_2_0= ruleExtendedID ) ) ( (lv_label_3_0= RULE_STRING ) )? otherlv_4= '{' ( (lv_declarations_5_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_6_0= ruleLocalAction ) )* ( ( (lv_regions_7_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_8_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_9_0= ruleRegion ) )* ) otherlv_10= '}' )
            {
            // InternalSCTX.g:144:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'scchart' ( (lv_name_2_0= ruleExtendedID ) ) ( (lv_label_3_0= RULE_STRING ) )? otherlv_4= '{' ( (lv_declarations_5_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_6_0= ruleLocalAction ) )* ( ( (lv_regions_7_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_8_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_9_0= ruleRegion ) )* ) otherlv_10= '}' )
            // InternalSCTX.g:144:2: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'scchart' ( (lv_name_2_0= ruleExtendedID ) ) ( (lv_label_3_0= RULE_STRING ) )? otherlv_4= '{' ( (lv_declarations_5_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_6_0= ruleLocalAction ) )* ( ( (lv_regions_7_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_8_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_9_0= ruleRegion ) )* ) otherlv_10= '}'
            {
            // InternalSCTX.g:144:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==RULE_COMMENT_ANNOTATION||LA3_0==74) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // InternalSCTX.g:145:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:145:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:146:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRootStateAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_5);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRootStateRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);

            otherlv_1=(Token)match(input,17,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getRootStateAccess().getScchartKeyword_1());
                  
            }
            // InternalSCTX.g:166:1: ( (lv_name_2_0= ruleExtendedID ) )
            // InternalSCTX.g:167:1: (lv_name_2_0= ruleExtendedID )
            {
            // InternalSCTX.g:167:1: (lv_name_2_0= ruleExtendedID )
            // InternalSCTX.g:168:3: lv_name_2_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRootStateAccess().getNameExtendedIDParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_7);
            lv_name_2_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRootStateRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:184:2: ( (lv_label_3_0= RULE_STRING ) )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==RULE_STRING) ) {
                alt4=1;
            }
            switch (alt4) {
                case 1 :
                    // InternalSCTX.g:185:1: (lv_label_3_0= RULE_STRING )
                    {
                    // InternalSCTX.g:185:1: (lv_label_3_0= RULE_STRING )
                    // InternalSCTX.g:186:3: lv_label_3_0= RULE_STRING
                    {
                    lv_label_3_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_label_3_0, grammarAccess.getRootStateAccess().getLabelSTRINGTerminalRuleCall_3_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getRootStateRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"label",
                              		lv_label_3_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.STRING");
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,18,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getRootStateAccess().getLeftCurlyBracketKeyword_4());
                  
            }
            // InternalSCTX.g:206:1: ( (lv_declarations_5_0= ruleDeclarationWOSemicolon ) )*
            loop5:
            do {
                int alt5=2;
                alt5 = dfa5.predict(input);
                switch (alt5) {
            	case 1 :
            	    // InternalSCTX.g:207:1: (lv_declarations_5_0= ruleDeclarationWOSemicolon )
            	    {
            	    // InternalSCTX.g:207:1: (lv_declarations_5_0= ruleDeclarationWOSemicolon )
            	    // InternalSCTX.g:208:3: lv_declarations_5_0= ruleDeclarationWOSemicolon
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRootStateAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_5_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_9);
            	    lv_declarations_5_0=ruleDeclarationWOSemicolon();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRootStateRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declarations",
            	              		lv_declarations_5_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop5;
                }
            } while (true);

            // InternalSCTX.g:224:3: ( (lv_actions_6_0= ruleLocalAction ) )*
            loop6:
            do {
                int alt6=2;
                int LA6_0 = input.LA(1);

                if ( ((LA6_0>=38 && LA6_0<=44)||(LA6_0>=82 && LA6_0<=85)) ) {
                    alt6=1;
                }


                switch (alt6) {
            	case 1 :
            	    // InternalSCTX.g:225:1: (lv_actions_6_0= ruleLocalAction )
            	    {
            	    // InternalSCTX.g:225:1: (lv_actions_6_0= ruleLocalAction )
            	    // InternalSCTX.g:226:3: lv_actions_6_0= ruleLocalAction
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRootStateAccess().getActionsLocalActionParserRuleCall_6_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_10);
            	    lv_actions_6_0=ruleLocalAction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRootStateRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"actions",
            	              		lv_actions_6_0, 
            	              		"de.cau.cs.kieler.sccharts.text.SCTX.LocalAction");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop6;
                }
            } while (true);

            // InternalSCTX.g:242:3: ( ( (lv_regions_7_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_8_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_9_0= ruleRegion ) )* )
            int alt8=3;
            alt8 = dfa8.predict(input);
            switch (alt8) {
                case 1 :
                    // InternalSCTX.g:242:4: ( (lv_regions_7_0= ruleSingleControlflowRegion ) )
                    {
                    // InternalSCTX.g:242:4: ( (lv_regions_7_0= ruleSingleControlflowRegion ) )
                    // InternalSCTX.g:243:1: (lv_regions_7_0= ruleSingleControlflowRegion )
                    {
                    // InternalSCTX.g:243:1: (lv_regions_7_0= ruleSingleControlflowRegion )
                    // InternalSCTX.g:244:3: lv_regions_7_0= ruleSingleControlflowRegion
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getRootStateAccess().getRegionsSingleControlflowRegionParserRuleCall_7_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_regions_7_0=ruleSingleControlflowRegion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getRootStateRule());
                      	        }
                             		add(
                             			current, 
                             			"regions",
                              		lv_regions_7_0, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.SingleControlflowRegion");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:261:6: ( (lv_regions_8_0= ruleSingleDataflowRegion ) )
                    {
                    // InternalSCTX.g:261:6: ( (lv_regions_8_0= ruleSingleDataflowRegion ) )
                    // InternalSCTX.g:262:1: (lv_regions_8_0= ruleSingleDataflowRegion )
                    {
                    // InternalSCTX.g:262:1: (lv_regions_8_0= ruleSingleDataflowRegion )
                    // InternalSCTX.g:263:3: lv_regions_8_0= ruleSingleDataflowRegion
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getRootStateAccess().getRegionsSingleDataflowRegionParserRuleCall_7_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_regions_8_0=ruleSingleDataflowRegion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getRootStateRule());
                      	        }
                             		add(
                             			current, 
                             			"regions",
                              		lv_regions_8_0, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.SingleDataflowRegion");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:280:6: ( (lv_regions_9_0= ruleRegion ) )*
                    {
                    // InternalSCTX.g:280:6: ( (lv_regions_9_0= ruleRegion ) )*
                    loop7:
                    do {
                        int alt7=2;
                        int LA7_0 = input.LA(1);

                        if ( (LA7_0==RULE_COMMENT_ANNOTATION||LA7_0==45||LA7_0==47||LA7_0==74) ) {
                            alt7=1;
                        }


                        switch (alt7) {
                    	case 1 :
                    	    // InternalSCTX.g:281:1: (lv_regions_9_0= ruleRegion )
                    	    {
                    	    // InternalSCTX.g:281:1: (lv_regions_9_0= ruleRegion )
                    	    // InternalSCTX.g:282:3: lv_regions_9_0= ruleRegion
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getRootStateAccess().getRegionsRegionParserRuleCall_7_2_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_12);
                    	    lv_regions_9_0=ruleRegion();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getRootStateRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"regions",
                    	              		lv_regions_9_0, 
                    	              		"de.cau.cs.kieler.sccharts.text.SCTX.Region");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop7;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_10=(Token)match(input,19,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_10, grammarAccess.getRootStateAccess().getRightCurlyBracketKeyword_8());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRootState"


    // $ANTLR start "entryRuleState"
    // InternalSCTX.g:310:1: entryRuleState returns [EObject current=null] : iv_ruleState= ruleState EOF ;
    public final EObject entryRuleState() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleState = null;


        try {
            // InternalSCTX.g:311:2: (iv_ruleState= ruleState EOF )
            // InternalSCTX.g:312:2: iv_ruleState= ruleState EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStateRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleState=ruleState();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleState; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleState"


    // $ANTLR start "ruleState"
    // InternalSCTX.g:319:1: ruleState returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? ( (lv_final_2_0= 'final' ) )? ( (lv_violation_3_0= 'violation' ) )? ( (lv_connector_4_0= 'connector' ) )? otherlv_5= 'state' ( (lv_name_6_0= RULE_ID ) ) ( (lv_label_7_0= RULE_STRING ) )? ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) ) | (otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_12_0= ruleLocalAction ) )* ( ( (lv_regions_13_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_14_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* ) otherlv_16= '}' ) )? ( (lv_outgoingTransitions_17_0= ruleTransition ) )* ) ;
    public final EObject ruleState() throws RecognitionException {
        EObject current = null;

        Token lv_initial_1_0=null;
        Token lv_final_2_0=null;
        Token lv_violation_3_0=null;
        Token lv_connector_4_0=null;
        Token otherlv_5=null;
        Token lv_name_6_0=null;
        Token lv_label_7_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_16=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_9_0 = null;

        EObject lv_declarations_11_0 = null;

        EObject lv_actions_12_0 = null;

        EObject lv_regions_13_0 = null;

        EObject lv_regions_14_0 = null;

        EObject lv_regions_15_0 = null;

        EObject lv_outgoingTransitions_17_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:322:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? ( (lv_final_2_0= 'final' ) )? ( (lv_violation_3_0= 'violation' ) )? ( (lv_connector_4_0= 'connector' ) )? otherlv_5= 'state' ( (lv_name_6_0= RULE_ID ) ) ( (lv_label_7_0= RULE_STRING ) )? ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) ) | (otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_12_0= ruleLocalAction ) )* ( ( (lv_regions_13_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_14_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* ) otherlv_16= '}' ) )? ( (lv_outgoingTransitions_17_0= ruleTransition ) )* ) )
            // InternalSCTX.g:323:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? ( (lv_final_2_0= 'final' ) )? ( (lv_violation_3_0= 'violation' ) )? ( (lv_connector_4_0= 'connector' ) )? otherlv_5= 'state' ( (lv_name_6_0= RULE_ID ) ) ( (lv_label_7_0= RULE_STRING ) )? ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) ) | (otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_12_0= ruleLocalAction ) )* ( ( (lv_regions_13_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_14_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* ) otherlv_16= '}' ) )? ( (lv_outgoingTransitions_17_0= ruleTransition ) )* )
            {
            // InternalSCTX.g:323:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? ( (lv_final_2_0= 'final' ) )? ( (lv_violation_3_0= 'violation' ) )? ( (lv_connector_4_0= 'connector' ) )? otherlv_5= 'state' ( (lv_name_6_0= RULE_ID ) ) ( (lv_label_7_0= RULE_STRING ) )? ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) ) | (otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_12_0= ruleLocalAction ) )* ( ( (lv_regions_13_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_14_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* ) otherlv_16= '}' ) )? ( (lv_outgoingTransitions_17_0= ruleTransition ) )* )
            // InternalSCTX.g:323:2: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? ( (lv_final_2_0= 'final' ) )? ( (lv_violation_3_0= 'violation' ) )? ( (lv_connector_4_0= 'connector' ) )? otherlv_5= 'state' ( (lv_name_6_0= RULE_ID ) ) ( (lv_label_7_0= RULE_STRING ) )? ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) ) | (otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_12_0= ruleLocalAction ) )* ( ( (lv_regions_13_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_14_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* ) otherlv_16= '}' ) )? ( (lv_outgoingTransitions_17_0= ruleTransition ) )*
            {
            // InternalSCTX.g:323:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop9:
            do {
                int alt9=2;
                int LA9_0 = input.LA(1);

                if ( (LA9_0==RULE_COMMENT_ANNOTATION||LA9_0==74) ) {
                    alt9=1;
                }


                switch (alt9) {
            	case 1 :
            	    // InternalSCTX.g:324:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:324:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:325:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getStateAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_13);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getStateRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop9;
                }
            } while (true);

            // InternalSCTX.g:341:3: ( (lv_initial_1_0= 'initial' ) )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==20) ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // InternalSCTX.g:342:1: (lv_initial_1_0= 'initial' )
                    {
                    // InternalSCTX.g:342:1: (lv_initial_1_0= 'initial' )
                    // InternalSCTX.g:343:3: lv_initial_1_0= 'initial'
                    {
                    lv_initial_1_0=(Token)match(input,20,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_initial_1_0, grammarAccess.getStateAccess().getInitialInitialKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getStateRule());
                      	        }
                             		setWithLastConsumed(current, "initial", true, "initial");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:356:3: ( (lv_final_2_0= 'final' ) )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==21) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // InternalSCTX.g:357:1: (lv_final_2_0= 'final' )
                    {
                    // InternalSCTX.g:357:1: (lv_final_2_0= 'final' )
                    // InternalSCTX.g:358:3: lv_final_2_0= 'final'
                    {
                    lv_final_2_0=(Token)match(input,21,FollowSets000.FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_final_2_0, grammarAccess.getStateAccess().getFinalFinalKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getStateRule());
                      	        }
                             		setWithLastConsumed(current, "final", true, "final");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:371:3: ( (lv_violation_3_0= 'violation' ) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==22) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalSCTX.g:372:1: (lv_violation_3_0= 'violation' )
                    {
                    // InternalSCTX.g:372:1: (lv_violation_3_0= 'violation' )
                    // InternalSCTX.g:373:3: lv_violation_3_0= 'violation'
                    {
                    lv_violation_3_0=(Token)match(input,22,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_violation_3_0, grammarAccess.getStateAccess().getViolationViolationKeyword_3_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getStateRule());
                      	        }
                             		setWithLastConsumed(current, "violation", true, "violation");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:386:3: ( (lv_connector_4_0= 'connector' ) )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==23) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // InternalSCTX.g:387:1: (lv_connector_4_0= 'connector' )
                    {
                    // InternalSCTX.g:387:1: (lv_connector_4_0= 'connector' )
                    // InternalSCTX.g:388:3: lv_connector_4_0= 'connector'
                    {
                    lv_connector_4_0=(Token)match(input,23,FollowSets000.FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_connector_4_0, grammarAccess.getStateAccess().getConnectorConnectorKeyword_4_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getStateRule());
                      	        }
                             		setWithLastConsumed(current, "connector", true, "connector");
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,24,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getStateAccess().getStateKeyword_5());
                  
            }
            // InternalSCTX.g:405:1: ( (lv_name_6_0= RULE_ID ) )
            // InternalSCTX.g:406:1: (lv_name_6_0= RULE_ID )
            {
            // InternalSCTX.g:406:1: (lv_name_6_0= RULE_ID )
            // InternalSCTX.g:407:3: lv_name_6_0= RULE_ID
            {
            lv_name_6_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_6_0, grammarAccess.getStateAccess().getNameIDTerminalRuleCall_6_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getStateRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_6_0, 
                      		"org.eclipse.xtext.common.Terminals.ID");
              	    
            }

            }


            }

            // InternalSCTX.g:423:2: ( (lv_label_7_0= RULE_STRING ) )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==RULE_STRING) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // InternalSCTX.g:424:1: (lv_label_7_0= RULE_STRING )
                    {
                    // InternalSCTX.g:424:1: (lv_label_7_0= RULE_STRING )
                    // InternalSCTX.g:425:3: lv_label_7_0= RULE_STRING
                    {
                    lv_label_7_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_label_7_0, grammarAccess.getStateAccess().getLabelSTRINGTerminalRuleCall_7_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getStateRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"label",
                              		lv_label_7_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.STRING");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:441:3: ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) ) | (otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_12_0= ruleLocalAction ) )* ( ( (lv_regions_13_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_14_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* ) otherlv_16= '}' ) )?
            int alt19=3;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==25) ) {
                alt19=1;
            }
            else if ( (LA19_0==18) ) {
                alt19=2;
            }
            switch (alt19) {
                case 1 :
                    // InternalSCTX.g:441:4: (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) )
                    {
                    // InternalSCTX.g:441:4: (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) )
                    // InternalSCTX.g:441:6: otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) )
                    {
                    otherlv_8=(Token)match(input,25,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getStateAccess().getIsKeyword_8_0_0());
                          
                    }
                    // InternalSCTX.g:445:1: ( (lv_reference_9_0= ruleScopeCall ) )
                    // InternalSCTX.g:446:1: (lv_reference_9_0= ruleScopeCall )
                    {
                    // InternalSCTX.g:446:1: (lv_reference_9_0= ruleScopeCall )
                    // InternalSCTX.g:447:3: lv_reference_9_0= ruleScopeCall
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getStateAccess().getReferenceScopeCallParserRuleCall_8_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_20);
                    lv_reference_9_0=ruleScopeCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getStateRule());
                      	        }
                             		set(
                             			current, 
                             			"reference",
                              		lv_reference_9_0, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.ScopeCall");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:464:6: (otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_12_0= ruleLocalAction ) )* ( ( (lv_regions_13_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_14_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* ) otherlv_16= '}' )
                    {
                    // InternalSCTX.g:464:6: (otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_12_0= ruleLocalAction ) )* ( ( (lv_regions_13_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_14_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* ) otherlv_16= '}' )
                    // InternalSCTX.g:464:8: otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_12_0= ruleLocalAction ) )* ( ( (lv_regions_13_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_14_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* ) otherlv_16= '}'
                    {
                    otherlv_10=(Token)match(input,18,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_8_1_0());
                          
                    }
                    // InternalSCTX.g:468:1: ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )*
                    loop15:
                    do {
                        int alt15=2;
                        alt15 = dfa15.predict(input);
                        switch (alt15) {
                    	case 1 :
                    	    // InternalSCTX.g:469:1: (lv_declarations_11_0= ruleDeclarationWOSemicolon )
                    	    {
                    	    // InternalSCTX.g:469:1: (lv_declarations_11_0= ruleDeclarationWOSemicolon )
                    	    // InternalSCTX.g:470:3: lv_declarations_11_0= ruleDeclarationWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getStateAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_8_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_9);
                    	    lv_declarations_11_0=ruleDeclarationWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getStateRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declarations",
                    	              		lv_declarations_11_0, 
                    	              		"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop15;
                        }
                    } while (true);

                    // InternalSCTX.g:486:3: ( (lv_actions_12_0= ruleLocalAction ) )*
                    loop16:
                    do {
                        int alt16=2;
                        int LA16_0 = input.LA(1);

                        if ( ((LA16_0>=38 && LA16_0<=44)||(LA16_0>=82 && LA16_0<=85)) ) {
                            alt16=1;
                        }


                        switch (alt16) {
                    	case 1 :
                    	    // InternalSCTX.g:487:1: (lv_actions_12_0= ruleLocalAction )
                    	    {
                    	    // InternalSCTX.g:487:1: (lv_actions_12_0= ruleLocalAction )
                    	    // InternalSCTX.g:488:3: lv_actions_12_0= ruleLocalAction
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getStateAccess().getActionsLocalActionParserRuleCall_8_1_2_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_10);
                    	    lv_actions_12_0=ruleLocalAction();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getStateRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"actions",
                    	              		lv_actions_12_0, 
                    	              		"de.cau.cs.kieler.sccharts.text.SCTX.LocalAction");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop16;
                        }
                    } while (true);

                    // InternalSCTX.g:504:3: ( ( (lv_regions_13_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_14_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* )
                    int alt18=3;
                    alt18 = dfa18.predict(input);
                    switch (alt18) {
                        case 1 :
                            // InternalSCTX.g:504:4: ( (lv_regions_13_0= ruleSingleControlflowRegion ) )
                            {
                            // InternalSCTX.g:504:4: ( (lv_regions_13_0= ruleSingleControlflowRegion ) )
                            // InternalSCTX.g:505:1: (lv_regions_13_0= ruleSingleControlflowRegion )
                            {
                            // InternalSCTX.g:505:1: (lv_regions_13_0= ruleSingleControlflowRegion )
                            // InternalSCTX.g:506:3: lv_regions_13_0= ruleSingleControlflowRegion
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getStateAccess().getRegionsSingleControlflowRegionParserRuleCall_8_1_3_0_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_11);
                            lv_regions_13_0=ruleSingleControlflowRegion();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getStateRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"regions",
                                      		lv_regions_13_0, 
                                      		"de.cau.cs.kieler.sccharts.text.SCTX.SingleControlflowRegion");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:523:6: ( (lv_regions_14_0= ruleSingleDataflowRegion ) )
                            {
                            // InternalSCTX.g:523:6: ( (lv_regions_14_0= ruleSingleDataflowRegion ) )
                            // InternalSCTX.g:524:1: (lv_regions_14_0= ruleSingleDataflowRegion )
                            {
                            // InternalSCTX.g:524:1: (lv_regions_14_0= ruleSingleDataflowRegion )
                            // InternalSCTX.g:525:3: lv_regions_14_0= ruleSingleDataflowRegion
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getStateAccess().getRegionsSingleDataflowRegionParserRuleCall_8_1_3_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_11);
                            lv_regions_14_0=ruleSingleDataflowRegion();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getStateRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"regions",
                                      		lv_regions_14_0, 
                                      		"de.cau.cs.kieler.sccharts.text.SCTX.SingleDataflowRegion");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalSCTX.g:542:6: ( (lv_regions_15_0= ruleRegion ) )*
                            {
                            // InternalSCTX.g:542:6: ( (lv_regions_15_0= ruleRegion ) )*
                            loop17:
                            do {
                                int alt17=2;
                                int LA17_0 = input.LA(1);

                                if ( (LA17_0==RULE_COMMENT_ANNOTATION||LA17_0==45||LA17_0==47||LA17_0==74) ) {
                                    alt17=1;
                                }


                                switch (alt17) {
                            	case 1 :
                            	    // InternalSCTX.g:543:1: (lv_regions_15_0= ruleRegion )
                            	    {
                            	    // InternalSCTX.g:543:1: (lv_regions_15_0= ruleRegion )
                            	    // InternalSCTX.g:544:3: lv_regions_15_0= ruleRegion
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getStateAccess().getRegionsRegionParserRuleCall_8_1_3_2_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_12);
                            	    lv_regions_15_0=ruleRegion();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getStateRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"regions",
                            	              		lv_regions_15_0, 
                            	              		"de.cau.cs.kieler.sccharts.text.SCTX.Region");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop17;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_16=(Token)match(input,19,FollowSets000.FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_16, grammarAccess.getStateAccess().getRightCurlyBracketKeyword_8_1_4());
                          
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:564:4: ( (lv_outgoingTransitions_17_0= ruleTransition ) )*
            loop20:
            do {
                int alt20=2;
                alt20 = dfa20.predict(input);
                switch (alt20) {
            	case 1 :
            	    // InternalSCTX.g:565:1: (lv_outgoingTransitions_17_0= ruleTransition )
            	    {
            	    // InternalSCTX.g:565:1: (lv_outgoingTransitions_17_0= ruleTransition )
            	    // InternalSCTX.g:566:3: lv_outgoingTransitions_17_0= ruleTransition
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getStateAccess().getOutgoingTransitionsTransitionParserRuleCall_9_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_20);
            	    lv_outgoingTransitions_17_0=ruleTransition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getStateRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"outgoingTransitions",
            	              		lv_outgoingTransitions_17_0, 
            	              		"de.cau.cs.kieler.sccharts.text.SCTX.Transition");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop20;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleState"


    // $ANTLR start "entryRuleScopeCall"
    // InternalSCTX.g:590:1: entryRuleScopeCall returns [EObject current=null] : iv_ruleScopeCall= ruleScopeCall EOF ;
    public final EObject entryRuleScopeCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScopeCall = null;


        try {
            // InternalSCTX.g:591:2: (iv_ruleScopeCall= ruleScopeCall EOF )
            // InternalSCTX.g:592:2: iv_ruleScopeCall= ruleScopeCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScopeCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScopeCall=ruleScopeCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScopeCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScopeCall"


    // $ANTLR start "ruleScopeCall"
    // InternalSCTX.g:599:1: ruleScopeCall returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | (otherlv_6= '(' otherlv_7= ')' ) )? ) ;
    public final EObject ruleScopeCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_parameters_2_0 = null;

        EObject lv_parameters_4_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:602:28: ( ( ( (otherlv_0= RULE_ID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | (otherlv_6= '(' otherlv_7= ')' ) )? ) )
            // InternalSCTX.g:603:1: ( ( (otherlv_0= RULE_ID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | (otherlv_6= '(' otherlv_7= ')' ) )? )
            {
            // InternalSCTX.g:603:1: ( ( (otherlv_0= RULE_ID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | (otherlv_6= '(' otherlv_7= ')' ) )? )
            // InternalSCTX.g:603:2: ( (otherlv_0= RULE_ID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | (otherlv_6= '(' otherlv_7= ')' ) )?
            {
            // InternalSCTX.g:603:2: ( (otherlv_0= RULE_ID ) )
            // InternalSCTX.g:604:1: (otherlv_0= RULE_ID )
            {
            // InternalSCTX.g:604:1: (otherlv_0= RULE_ID )
            // InternalSCTX.g:605:3: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getScopeCallRule());
              	        }
                      
            }
            otherlv_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_21); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_0, grammarAccess.getScopeCallAccess().getScopeStateCrossReference_0_0()); 
              	
            }

            }


            }

            // InternalSCTX.g:619:2: ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | (otherlv_6= '(' otherlv_7= ')' ) )?
            int alt22=3;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==26) ) {
                int LA22_1 = input.LA(2);

                if ( (LA22_1==28) ) {
                    alt22=2;
                }
                else if ( ((LA22_1>=RULE_STRING && LA22_1<=RULE_BOOLEAN)||LA22_1==26||(LA22_1>=29 && LA22_1<=30)||LA22_1==56||LA22_1==63||LA22_1==69||(LA22_1>=107 && LA22_1<=108)) ) {
                    alt22=1;
                }
            }
            switch (alt22) {
                case 1 :
                    // InternalSCTX.g:619:3: (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' )
                    {
                    // InternalSCTX.g:619:3: (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' )
                    // InternalSCTX.g:619:5: otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')'
                    {
                    otherlv_1=(Token)match(input,26,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getScopeCallAccess().getLeftParenthesisKeyword_1_0_0());
                          
                    }
                    // InternalSCTX.g:623:1: ( (lv_parameters_2_0= ruleParameter ) )
                    // InternalSCTX.g:624:1: (lv_parameters_2_0= ruleParameter )
                    {
                    // InternalSCTX.g:624:1: (lv_parameters_2_0= ruleParameter )
                    // InternalSCTX.g:625:3: lv_parameters_2_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getScopeCallAccess().getParametersParameterParserRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_23);
                    lv_parameters_2_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getScopeCallRule());
                      	        }
                             		add(
                             			current, 
                             			"parameters",
                              		lv_parameters_2_0, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:641:2: (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )*
                    loop21:
                    do {
                        int alt21=2;
                        int LA21_0 = input.LA(1);

                        if ( (LA21_0==27) ) {
                            alt21=1;
                        }


                        switch (alt21) {
                    	case 1 :
                    	    // InternalSCTX.g:641:4: otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) )
                    	    {
                    	    otherlv_3=(Token)match(input,27,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getScopeCallAccess().getCommaKeyword_1_0_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:645:1: ( (lv_parameters_4_0= ruleParameter ) )
                    	    // InternalSCTX.g:646:1: (lv_parameters_4_0= ruleParameter )
                    	    {
                    	    // InternalSCTX.g:646:1: (lv_parameters_4_0= ruleParameter )
                    	    // InternalSCTX.g:647:3: lv_parameters_4_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getScopeCallAccess().getParametersParameterParserRuleCall_1_0_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_23);
                    	    lv_parameters_4_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getScopeCallRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"parameters",
                    	              		lv_parameters_4_0, 
                    	              		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop21;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getScopeCallAccess().getRightParenthesisKeyword_1_0_3());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:668:6: (otherlv_6= '(' otherlv_7= ')' )
                    {
                    // InternalSCTX.g:668:6: (otherlv_6= '(' otherlv_7= ')' )
                    // InternalSCTX.g:668:8: otherlv_6= '(' otherlv_7= ')'
                    {
                    otherlv_6=(Token)match(input,26,FollowSets000.FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getScopeCallAccess().getLeftParenthesisKeyword_1_1_0());
                          
                    }
                    otherlv_7=(Token)match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getScopeCallAccess().getRightParenthesisKeyword_1_1_1());
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScopeCall"


    // $ANTLR start "entryRuleParameter"
    // InternalSCTX.g:684:1: entryRuleParameter returns [EObject current=null] : iv_ruleParameter= ruleParameter EOF ;
    public final EObject entryRuleParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameter = null;


        try {
            // InternalSCTX.g:685:2: (iv_ruleParameter= ruleParameter EOF )
            // InternalSCTX.g:686:2: iv_ruleParameter= ruleParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleParameter=ruleParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameter"


    // $ANTLR start "ruleParameter"
    // InternalSCTX.g:693:1: ruleParameter returns [EObject current=null] : ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? ) ;
    public final EObject ruleParameter() throws RecognitionException {
        EObject current = null;

        Token lv_pureOutput_0_0=null;
        Token lv_callByReference_1_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_expression_2_0 = null;

        EObject lv_explicitBindingIndices_6_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:696:28: ( ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? ) )
            // InternalSCTX.g:697:1: ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? )
            {
            // InternalSCTX.g:697:1: ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? )
            // InternalSCTX.g:697:2: ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )?
            {
            // InternalSCTX.g:697:2: ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==29) ) {
                int LA24_1 = input.LA(2);

                if ( (LA24_1==30) ) {
                    alt24=1;
                }
            }
            else if ( (LA24_0==30) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // InternalSCTX.g:697:3: ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) )
                    {
                    // InternalSCTX.g:697:3: ( (lv_pureOutput_0_0= '!' ) )?
                    int alt23=2;
                    int LA23_0 = input.LA(1);

                    if ( (LA23_0==29) ) {
                        alt23=1;
                    }
                    switch (alt23) {
                        case 1 :
                            // InternalSCTX.g:698:1: (lv_pureOutput_0_0= '!' )
                            {
                            // InternalSCTX.g:698:1: (lv_pureOutput_0_0= '!' )
                            // InternalSCTX.g:699:3: lv_pureOutput_0_0= '!'
                            {
                            lv_pureOutput_0_0=(Token)match(input,29,FollowSets000.FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_pureOutput_0_0, grammarAccess.getParameterAccess().getPureOutputExclamationMarkKeyword_0_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getParameterRule());
                              	        }
                                     		setWithLastConsumed(current, "pureOutput", true, "!");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:712:3: ( (lv_callByReference_1_0= '&' ) )
                    // InternalSCTX.g:713:1: (lv_callByReference_1_0= '&' )
                    {
                    // InternalSCTX.g:713:1: (lv_callByReference_1_0= '&' )
                    // InternalSCTX.g:714:3: lv_callByReference_1_0= '&'
                    {
                    lv_callByReference_1_0=(Token)match(input,30,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_callByReference_1_0, grammarAccess.getParameterAccess().getCallByReferenceAmpersandKeyword_0_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getParameterRule());
                      	        }
                             		setWithLastConsumed(current, "callByReference", true, "&");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:727:4: ( (lv_expression_2_0= ruleExpression ) )
            // InternalSCTX.g:728:1: (lv_expression_2_0= ruleExpression )
            {
            // InternalSCTX.g:728:1: (lv_expression_2_0= ruleExpression )
            // InternalSCTX.g:729:3: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParameterAccess().getExpressionExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_26);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParameterRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:745:2: (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==31) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // InternalSCTX.g:745:4: otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )*
                    {
                    otherlv_3=(Token)match(input,31,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getParameterAccess().getToKeyword_2_0());
                          
                    }
                    // InternalSCTX.g:749:1: ( (otherlv_4= RULE_ID ) )
                    // InternalSCTX.g:750:1: (otherlv_4= RULE_ID )
                    {
                    // InternalSCTX.g:750:1: (otherlv_4= RULE_ID )
                    // InternalSCTX.g:751:3: otherlv_4= RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       
                      		  /* */ 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getParameterRule());
                      	        }
                              
                    }
                    otherlv_4=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_4, grammarAccess.getParameterAccess().getExplicitBindingValuedObjectCrossReference_2_1_0()); 
                      	
                    }

                    }


                    }

                    // InternalSCTX.g:765:2: (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )*
                    loop25:
                    do {
                        int alt25=2;
                        int LA25_0 = input.LA(1);

                        if ( (LA25_0==32) ) {
                            alt25=1;
                        }


                        switch (alt25) {
                    	case 1 :
                    	    // InternalSCTX.g:765:4: otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']'
                    	    {
                    	    otherlv_5=(Token)match(input,32,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_5, grammarAccess.getParameterAccess().getLeftSquareBracketKeyword_2_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:769:1: ( (lv_explicitBindingIndices_6_0= ruleExpression ) )
                    	    // InternalSCTX.g:770:1: (lv_explicitBindingIndices_6_0= ruleExpression )
                    	    {
                    	    // InternalSCTX.g:770:1: (lv_explicitBindingIndices_6_0= ruleExpression )
                    	    // InternalSCTX.g:771:3: lv_explicitBindingIndices_6_0= ruleExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getParameterAccess().getExplicitBindingIndicesExpressionParserRuleCall_2_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_28);
                    	    lv_explicitBindingIndices_6_0=ruleExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getParameterRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"explicitBindingIndices",
                    	              		lv_explicitBindingIndices_6_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }

                    	    otherlv_7=(Token)match(input,33,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_7, grammarAccess.getParameterAccess().getRightSquareBracketKeyword_2_2_2());
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop25;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameter"


    // $ANTLR start "entryRuleTransition"
    // InternalSCTX.g:799:1: entryRuleTransition returns [EObject current=null] : iv_ruleTransition= ruleTransition EOF ;
    public final EObject entryRuleTransition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTransition = null;


        try {
            // InternalSCTX.g:800:2: (iv_ruleTransition= ruleTransition EOF )
            // InternalSCTX.g:801:2: iv_ruleTransition= ruleTransition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTransitionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTransition=ruleTransition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTransition; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTransition"


    // $ANTLR start "ruleTransition"
    // InternalSCTX.g:808:1: ruleTransition returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleRestrictedTypeAnnotation ) )* ( ( (lv_preemption_1_1= rulePreemptionType | lv_preemption_1_2= rulePreemptionTypeLegacy ) ) ) ( (otherlv_2= RULE_ID ) ) ( (lv_delay_3_0= ruleDelayType ) )? ( (lv_deferred_4_0= 'deferred' ) )? ( (lv_history_5_0= ruleHistoryType ) )? ( ( (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( ( (lv_trigger_8_0= ruleBoolExpression ) ) | ( (lv_trigger_9_0= ruleAtomicExpression ) ) ) )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )? ) | (otherlv_14= 'if' ( (lv_label_15_0= RULE_STRING ) ) ) )? ) ;
    public final EObject ruleTransition() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_deferred_4_0=null;
        Token otherlv_6=null;
        Token lv_triggerDelay_7_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token lv_label_15_0=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_preemption_1_1 = null;

        Enumerator lv_preemption_1_2 = null;

        Enumerator lv_delay_3_0 = null;

        Enumerator lv_history_5_0 = null;

        EObject lv_trigger_8_0 = null;

        EObject lv_trigger_9_0 = null;

        EObject lv_effects_11_0 = null;

        EObject lv_effects_13_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:811:28: ( ( ( (lv_annotations_0_0= ruleRestrictedTypeAnnotation ) )* ( ( (lv_preemption_1_1= rulePreemptionType | lv_preemption_1_2= rulePreemptionTypeLegacy ) ) ) ( (otherlv_2= RULE_ID ) ) ( (lv_delay_3_0= ruleDelayType ) )? ( (lv_deferred_4_0= 'deferred' ) )? ( (lv_history_5_0= ruleHistoryType ) )? ( ( (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( ( (lv_trigger_8_0= ruleBoolExpression ) ) | ( (lv_trigger_9_0= ruleAtomicExpression ) ) ) )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )? ) | (otherlv_14= 'if' ( (lv_label_15_0= RULE_STRING ) ) ) )? ) )
            // InternalSCTX.g:812:1: ( ( (lv_annotations_0_0= ruleRestrictedTypeAnnotation ) )* ( ( (lv_preemption_1_1= rulePreemptionType | lv_preemption_1_2= rulePreemptionTypeLegacy ) ) ) ( (otherlv_2= RULE_ID ) ) ( (lv_delay_3_0= ruleDelayType ) )? ( (lv_deferred_4_0= 'deferred' ) )? ( (lv_history_5_0= ruleHistoryType ) )? ( ( (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( ( (lv_trigger_8_0= ruleBoolExpression ) ) | ( (lv_trigger_9_0= ruleAtomicExpression ) ) ) )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )? ) | (otherlv_14= 'if' ( (lv_label_15_0= RULE_STRING ) ) ) )? )
            {
            // InternalSCTX.g:812:1: ( ( (lv_annotations_0_0= ruleRestrictedTypeAnnotation ) )* ( ( (lv_preemption_1_1= rulePreemptionType | lv_preemption_1_2= rulePreemptionTypeLegacy ) ) ) ( (otherlv_2= RULE_ID ) ) ( (lv_delay_3_0= ruleDelayType ) )? ( (lv_deferred_4_0= 'deferred' ) )? ( (lv_history_5_0= ruleHistoryType ) )? ( ( (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( ( (lv_trigger_8_0= ruleBoolExpression ) ) | ( (lv_trigger_9_0= ruleAtomicExpression ) ) ) )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )? ) | (otherlv_14= 'if' ( (lv_label_15_0= RULE_STRING ) ) ) )? )
            // InternalSCTX.g:812:2: ( (lv_annotations_0_0= ruleRestrictedTypeAnnotation ) )* ( ( (lv_preemption_1_1= rulePreemptionType | lv_preemption_1_2= rulePreemptionTypeLegacy ) ) ) ( (otherlv_2= RULE_ID ) ) ( (lv_delay_3_0= ruleDelayType ) )? ( (lv_deferred_4_0= 'deferred' ) )? ( (lv_history_5_0= ruleHistoryType ) )? ( ( (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( ( (lv_trigger_8_0= ruleBoolExpression ) ) | ( (lv_trigger_9_0= ruleAtomicExpression ) ) ) )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )? ) | (otherlv_14= 'if' ( (lv_label_15_0= RULE_STRING ) ) ) )?
            {
            // InternalSCTX.g:812:2: ( (lv_annotations_0_0= ruleRestrictedTypeAnnotation ) )*
            loop27:
            do {
                int alt27=2;
                int LA27_0 = input.LA(1);

                if ( (LA27_0==RULE_COMMENT_ANNOTATION||LA27_0==74) ) {
                    alt27=1;
                }


                switch (alt27) {
            	case 1 :
            	    // InternalSCTX.g:813:1: (lv_annotations_0_0= ruleRestrictedTypeAnnotation )
            	    {
            	    // InternalSCTX.g:813:1: (lv_annotations_0_0= ruleRestrictedTypeAnnotation )
            	    // InternalSCTX.g:814:3: lv_annotations_0_0= ruleRestrictedTypeAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getTransitionAccess().getAnnotationsRestrictedTypeAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_29);
            	    lv_annotations_0_0=ruleRestrictedTypeAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTransitionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.RestrictedTypeAnnotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);

            // InternalSCTX.g:830:3: ( ( (lv_preemption_1_1= rulePreemptionType | lv_preemption_1_2= rulePreemptionTypeLegacy ) ) )
            // InternalSCTX.g:831:1: ( (lv_preemption_1_1= rulePreemptionType | lv_preemption_1_2= rulePreemptionTypeLegacy ) )
            {
            // InternalSCTX.g:831:1: ( (lv_preemption_1_1= rulePreemptionType | lv_preemption_1_2= rulePreemptionTypeLegacy ) )
            // InternalSCTX.g:832:1: (lv_preemption_1_1= rulePreemptionType | lv_preemption_1_2= rulePreemptionTypeLegacy )
            {
            // InternalSCTX.g:832:1: (lv_preemption_1_1= rulePreemptionType | lv_preemption_1_2= rulePreemptionTypeLegacy )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( ((LA28_0>=76 && LA28_0<=78)) ) {
                alt28=1;
            }
            else if ( ((LA28_0>=79 && LA28_0<=81)) ) {
                alt28=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }
            switch (alt28) {
                case 1 :
                    // InternalSCTX.g:833:3: lv_preemption_1_1= rulePreemptionType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTransitionAccess().getPreemptionPreemptionTypeEnumRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_6);
                    lv_preemption_1_1=rulePreemptionType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTransitionRule());
                      	        }
                             		set(
                             			current, 
                             			"preemption",
                              		lv_preemption_1_1, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.PreemptionType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:848:8: lv_preemption_1_2= rulePreemptionTypeLegacy
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTransitionAccess().getPreemptionPreemptionTypeLegacyEnumRuleCall_1_0_1()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_6);
                    lv_preemption_1_2=rulePreemptionTypeLegacy();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTransitionRule());
                      	        }
                             		set(
                             			current, 
                             			"preemption",
                              		lv_preemption_1_2, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.PreemptionTypeLegacy");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }
                    break;

            }


            }


            }

            // InternalSCTX.g:866:2: ( (otherlv_2= RULE_ID ) )
            // InternalSCTX.g:867:1: (otherlv_2= RULE_ID )
            {
            // InternalSCTX.g:867:1: (otherlv_2= RULE_ID )
            // InternalSCTX.g:868:3: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getTransitionRule());
              	        }
                      
            }
            otherlv_2=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_2, grammarAccess.getTransitionAccess().getTargetStateStateCrossReference_2_0()); 
              	
            }

            }


            }

            // InternalSCTX.g:882:2: ( (lv_delay_3_0= ruleDelayType ) )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( ((LA29_0>=82 && LA29_0<=85)) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // InternalSCTX.g:883:1: (lv_delay_3_0= ruleDelayType )
                    {
                    // InternalSCTX.g:883:1: (lv_delay_3_0= ruleDelayType )
                    // InternalSCTX.g:884:3: lv_delay_3_0= ruleDelayType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTransitionAccess().getDelayDelayTypeEnumRuleCall_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_delay_3_0=ruleDelayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTransitionRule());
                      	        }
                             		set(
                             			current, 
                             			"delay",
                              		lv_delay_3_0, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.DelayType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:900:3: ( (lv_deferred_4_0= 'deferred' ) )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==34) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // InternalSCTX.g:901:1: (lv_deferred_4_0= 'deferred' )
                    {
                    // InternalSCTX.g:901:1: (lv_deferred_4_0= 'deferred' )
                    // InternalSCTX.g:902:3: lv_deferred_4_0= 'deferred'
                    {
                    lv_deferred_4_0=(Token)match(input,34,FollowSets000.FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_deferred_4_0, grammarAccess.getTransitionAccess().getDeferredDeferredKeyword_4_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getTransitionRule());
                      	        }
                             		setWithLastConsumed(current, "deferred", true, "deferred");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:915:3: ( (lv_history_5_0= ruleHistoryType ) )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( ((LA31_0>=86 && LA31_0<=88)) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // InternalSCTX.g:916:1: (lv_history_5_0= ruleHistoryType )
                    {
                    // InternalSCTX.g:916:1: (lv_history_5_0= ruleHistoryType )
                    // InternalSCTX.g:917:3: lv_history_5_0= ruleHistoryType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTransitionAccess().getHistoryHistoryTypeEnumRuleCall_5_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_33);
                    lv_history_5_0=ruleHistoryType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTransitionRule());
                      	        }
                             		set(
                             			current, 
                             			"history",
                              		lv_history_5_0, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.HistoryType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:933:3: ( ( (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( ( (lv_trigger_8_0= ruleBoolExpression ) ) | ( (lv_trigger_9_0= ruleAtomicExpression ) ) ) )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )? ) | (otherlv_14= 'if' ( (lv_label_15_0= RULE_STRING ) ) ) )?
            int alt37=3;
            alt37 = dfa37.predict(input);
            switch (alt37) {
                case 1 :
                    // InternalSCTX.g:933:4: ( (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( ( (lv_trigger_8_0= ruleBoolExpression ) ) | ( (lv_trigger_9_0= ruleAtomicExpression ) ) ) )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )? )
                    {
                    // InternalSCTX.g:933:4: ( (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( ( (lv_trigger_8_0= ruleBoolExpression ) ) | ( (lv_trigger_9_0= ruleAtomicExpression ) ) ) )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )? )
                    // InternalSCTX.g:933:5: (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( ( (lv_trigger_8_0= ruleBoolExpression ) ) | ( (lv_trigger_9_0= ruleAtomicExpression ) ) ) )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )?
                    {
                    // InternalSCTX.g:933:5: (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( ( (lv_trigger_8_0= ruleBoolExpression ) ) | ( (lv_trigger_9_0= ruleAtomicExpression ) ) ) )?
                    int alt34=2;
                    int LA34_0 = input.LA(1);

                    if ( (LA34_0==35) ) {
                        alt34=1;
                    }
                    switch (alt34) {
                        case 1 :
                            // InternalSCTX.g:933:7: otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( ( (lv_trigger_8_0= ruleBoolExpression ) ) | ( (lv_trigger_9_0= ruleAtomicExpression ) ) )
                            {
                            otherlv_6=(Token)match(input,35,FollowSets000.FOLLOW_34); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_6, grammarAccess.getTransitionAccess().getIfKeyword_6_0_0_0());
                                  
                            }
                            // InternalSCTX.g:937:1: ( (lv_triggerDelay_7_0= RULE_INT ) )?
                            int alt32=2;
                            alt32 = dfa32.predict(input);
                            switch (alt32) {
                                case 1 :
                                    // InternalSCTX.g:938:1: (lv_triggerDelay_7_0= RULE_INT )
                                    {
                                    // InternalSCTX.g:938:1: (lv_triggerDelay_7_0= RULE_INT )
                                    // InternalSCTX.g:939:3: lv_triggerDelay_7_0= RULE_INT
                                    {
                                    lv_triggerDelay_7_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_34); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      			newLeafNode(lv_triggerDelay_7_0, grammarAccess.getTransitionAccess().getTriggerDelayINTTerminalRuleCall_6_0_0_1_0()); 
                                      		
                                    }
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElement(grammarAccess.getTransitionRule());
                                      	        }
                                             		setWithLastConsumed(
                                             			current, 
                                             			"triggerDelay",
                                              		lv_triggerDelay_7_0, 
                                              		"de.cau.cs.kieler.annotations.Annotations.INT");
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }

                            // InternalSCTX.g:955:3: ( ( (lv_trigger_8_0= ruleBoolExpression ) ) | ( (lv_trigger_9_0= ruleAtomicExpression ) ) )
                            int alt33=2;
                            alt33 = dfa33.predict(input);
                            switch (alt33) {
                                case 1 :
                                    // InternalSCTX.g:955:4: ( (lv_trigger_8_0= ruleBoolExpression ) )
                                    {
                                    // InternalSCTX.g:955:4: ( (lv_trigger_8_0= ruleBoolExpression ) )
                                    // InternalSCTX.g:956:1: (lv_trigger_8_0= ruleBoolExpression )
                                    {
                                    // InternalSCTX.g:956:1: (lv_trigger_8_0= ruleBoolExpression )
                                    // InternalSCTX.g:957:3: lv_trigger_8_0= ruleBoolExpression
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getTransitionAccess().getTriggerBoolExpressionParserRuleCall_6_0_0_2_0_0()); 
                                      	    
                                    }
                                    pushFollow(FollowSets000.FOLLOW_35);
                                    lv_trigger_8_0=ruleBoolExpression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getTransitionRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"trigger",
                                              		lv_trigger_8_0, 
                                              		"de.cau.cs.kieler.kexpressions.KExpressions.BoolExpression");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalSCTX.g:974:6: ( (lv_trigger_9_0= ruleAtomicExpression ) )
                                    {
                                    // InternalSCTX.g:974:6: ( (lv_trigger_9_0= ruleAtomicExpression ) )
                                    // InternalSCTX.g:975:1: (lv_trigger_9_0= ruleAtomicExpression )
                                    {
                                    // InternalSCTX.g:975:1: (lv_trigger_9_0= ruleAtomicExpression )
                                    // InternalSCTX.g:976:3: lv_trigger_9_0= ruleAtomicExpression
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getTransitionAccess().getTriggerAtomicExpressionParserRuleCall_6_0_0_2_1_0()); 
                                      	    
                                    }
                                    pushFollow(FollowSets000.FOLLOW_35);
                                    lv_trigger_9_0=ruleAtomicExpression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getTransitionRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"trigger",
                                              		lv_trigger_9_0, 
                                              		"de.cau.cs.kieler.kexpressions.KExpressions.AtomicExpression");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:992:5: (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )?
                    int alt36=2;
                    int LA36_0 = input.LA(1);

                    if ( (LA36_0==36) ) {
                        alt36=1;
                    }
                    switch (alt36) {
                        case 1 :
                            // InternalSCTX.g:992:7: otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )*
                            {
                            otherlv_10=(Token)match(input,36,FollowSets000.FOLLOW_36); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_10, grammarAccess.getTransitionAccess().getDoKeyword_6_0_1_0());
                                  
                            }
                            // InternalSCTX.g:996:1: ( (lv_effects_11_0= ruleEffect ) )
                            // InternalSCTX.g:997:1: (lv_effects_11_0= ruleEffect )
                            {
                            // InternalSCTX.g:997:1: (lv_effects_11_0= ruleEffect )
                            // InternalSCTX.g:998:3: lv_effects_11_0= ruleEffect
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTransitionAccess().getEffectsEffectParserRuleCall_6_0_1_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_37);
                            lv_effects_11_0=ruleEffect();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTransitionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"effects",
                                      		lv_effects_11_0, 
                                      		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalSCTX.g:1014:2: (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )*
                            loop35:
                            do {
                                int alt35=2;
                                int LA35_0 = input.LA(1);

                                if ( (LA35_0==37) ) {
                                    alt35=1;
                                }


                                switch (alt35) {
                            	case 1 :
                            	    // InternalSCTX.g:1014:4: otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) )
                            	    {
                            	    otherlv_12=(Token)match(input,37,FollowSets000.FOLLOW_36); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_12, grammarAccess.getTransitionAccess().getSemicolonKeyword_6_0_1_2_0());
                            	          
                            	    }
                            	    // InternalSCTX.g:1018:1: ( (lv_effects_13_0= ruleEffect ) )
                            	    // InternalSCTX.g:1019:1: (lv_effects_13_0= ruleEffect )
                            	    {
                            	    // InternalSCTX.g:1019:1: (lv_effects_13_0= ruleEffect )
                            	    // InternalSCTX.g:1020:3: lv_effects_13_0= ruleEffect
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getTransitionAccess().getEffectsEffectParserRuleCall_6_0_1_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_37);
                            	    lv_effects_13_0=ruleEffect();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getTransitionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"effects",
                            	              		lv_effects_13_0, 
                            	              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop35;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:1037:6: (otherlv_14= 'if' ( (lv_label_15_0= RULE_STRING ) ) )
                    {
                    // InternalSCTX.g:1037:6: (otherlv_14= 'if' ( (lv_label_15_0= RULE_STRING ) ) )
                    // InternalSCTX.g:1037:8: otherlv_14= 'if' ( (lv_label_15_0= RULE_STRING ) )
                    {
                    otherlv_14=(Token)match(input,35,FollowSets000.FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_14, grammarAccess.getTransitionAccess().getIfKeyword_6_1_0());
                          
                    }
                    // InternalSCTX.g:1041:1: ( (lv_label_15_0= RULE_STRING ) )
                    // InternalSCTX.g:1042:1: (lv_label_15_0= RULE_STRING )
                    {
                    // InternalSCTX.g:1042:1: (lv_label_15_0= RULE_STRING )
                    // InternalSCTX.g:1043:3: lv_label_15_0= RULE_STRING
                    {
                    lv_label_15_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_label_15_0, grammarAccess.getTransitionAccess().getLabelSTRINGTerminalRuleCall_6_1_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getTransitionRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"label",
                              		lv_label_15_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.STRING");
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTransition"


    // $ANTLR start "entryRuleLocalAction"
    // InternalSCTX.g:1067:1: entryRuleLocalAction returns [EObject current=null] : iv_ruleLocalAction= ruleLocalAction EOF ;
    public final EObject entryRuleLocalAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLocalAction = null;


        try {
            // InternalSCTX.g:1068:2: (iv_ruleLocalAction= ruleLocalAction EOF )
            // InternalSCTX.g:1069:2: iv_ruleLocalAction= ruleLocalAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocalActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLocalAction=ruleLocalAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocalAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLocalAction"


    // $ANTLR start "ruleLocalAction"
    // InternalSCTX.g:1076:1: ruleLocalAction returns [EObject current=null] : (this_EntryAction_0= ruleEntryAction | this_DuringAction_1= ruleDuringAction | this_ExitAction_2= ruleExitAction | this_SuspendAction_3= ruleSuspendAction | this_PrecedingAction_4= rulePrecedingAction | this_SucceedingAction_5= ruleSucceedingAction ) ;
    public final EObject ruleLocalAction() throws RecognitionException {
        EObject current = null;

        EObject this_EntryAction_0 = null;

        EObject this_DuringAction_1 = null;

        EObject this_ExitAction_2 = null;

        EObject this_SuspendAction_3 = null;

        EObject this_PrecedingAction_4 = null;

        EObject this_SucceedingAction_5 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:1079:28: ( (this_EntryAction_0= ruleEntryAction | this_DuringAction_1= ruleDuringAction | this_ExitAction_2= ruleExitAction | this_SuspendAction_3= ruleSuspendAction | this_PrecedingAction_4= rulePrecedingAction | this_SucceedingAction_5= ruleSucceedingAction ) )
            // InternalSCTX.g:1080:1: (this_EntryAction_0= ruleEntryAction | this_DuringAction_1= ruleDuringAction | this_ExitAction_2= ruleExitAction | this_SuspendAction_3= ruleSuspendAction | this_PrecedingAction_4= rulePrecedingAction | this_SucceedingAction_5= ruleSucceedingAction )
            {
            // InternalSCTX.g:1080:1: (this_EntryAction_0= ruleEntryAction | this_DuringAction_1= ruleDuringAction | this_ExitAction_2= ruleExitAction | this_SuspendAction_3= ruleSuspendAction | this_PrecedingAction_4= rulePrecedingAction | this_SucceedingAction_5= ruleSucceedingAction )
            int alt38=6;
            alt38 = dfa38.predict(input);
            switch (alt38) {
                case 1 :
                    // InternalSCTX.g:1081:2: this_EntryAction_0= ruleEntryAction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLocalActionAccess().getEntryActionParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EntryAction_0=ruleEntryAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_EntryAction_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:1094:2: this_DuringAction_1= ruleDuringAction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLocalActionAccess().getDuringActionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DuringAction_1=ruleDuringAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_DuringAction_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:1107:2: this_ExitAction_2= ruleExitAction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLocalActionAccess().getExitActionParserRuleCall_2()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExitAction_2=ruleExitAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ExitAction_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:1120:2: this_SuspendAction_3= ruleSuspendAction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLocalActionAccess().getSuspendActionParserRuleCall_3()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SuspendAction_3=ruleSuspendAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_SuspendAction_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalSCTX.g:1133:2: this_PrecedingAction_4= rulePrecedingAction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLocalActionAccess().getPrecedingActionParserRuleCall_4()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrecedingAction_4=rulePrecedingAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_PrecedingAction_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalSCTX.g:1146:2: this_SucceedingAction_5= ruleSucceedingAction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLocalActionAccess().getSucceedingActionParserRuleCall_5()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SucceedingAction_5=ruleSucceedingAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_SucceedingAction_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocalAction"


    // $ANTLR start "entryRuleEntryAction"
    // InternalSCTX.g:1165:1: entryRuleEntryAction returns [EObject current=null] : iv_ruleEntryAction= ruleEntryAction EOF ;
    public final EObject entryRuleEntryAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEntryAction = null;


        try {
            // InternalSCTX.g:1166:2: (iv_ruleEntryAction= ruleEntryAction EOF )
            // InternalSCTX.g:1167:2: iv_ruleEntryAction= ruleEntryAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEntryActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEntryAction=ruleEntryAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEntryAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEntryAction"


    // $ANTLR start "ruleEntryAction"
    // InternalSCTX.g:1174:1: ruleEntryAction returns [EObject current=null] : ( () otherlv_1= 'entry' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? ) ;
    public final EObject ruleEntryAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_trigger_3_0 = null;

        EObject lv_effects_5_0 = null;

        EObject lv_effects_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:1177:28: ( ( () otherlv_1= 'entry' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? ) )
            // InternalSCTX.g:1178:1: ( () otherlv_1= 'entry' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? )
            {
            // InternalSCTX.g:1178:1: ( () otherlv_1= 'entry' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? )
            // InternalSCTX.g:1178:2: () otherlv_1= 'entry' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )?
            {
            // InternalSCTX.g:1178:2: ()
            // InternalSCTX.g:1179:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getEntryActionAccess().getEntryActionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,38,FollowSets000.FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getEntryActionAccess().getEntryKeyword_1());
                  
            }
            // InternalSCTX.g:1191:1: (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==35) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalSCTX.g:1191:3: otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) )
                    {
                    otherlv_2=(Token)match(input,35,FollowSets000.FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getEntryActionAccess().getIfKeyword_2_0());
                          
                    }
                    // InternalSCTX.g:1195:1: ( (lv_trigger_3_0= ruleBoolExpression ) )
                    // InternalSCTX.g:1196:1: (lv_trigger_3_0= ruleBoolExpression )
                    {
                    // InternalSCTX.g:1196:1: (lv_trigger_3_0= ruleBoolExpression )
                    // InternalSCTX.g:1197:3: lv_trigger_3_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getEntryActionAccess().getTriggerBoolExpressionParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_35);
                    lv_trigger_3_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getEntryActionRule());
                      	        }
                             		set(
                             			current, 
                             			"trigger",
                              		lv_trigger_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.BoolExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:1213:4: (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==36) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // InternalSCTX.g:1213:6: otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )*
                    {
                    otherlv_4=(Token)match(input,36,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getEntryActionAccess().getDoKeyword_3_0());
                          
                    }
                    // InternalSCTX.g:1217:1: ( (lv_effects_5_0= ruleEffect ) )
                    // InternalSCTX.g:1218:1: (lv_effects_5_0= ruleEffect )
                    {
                    // InternalSCTX.g:1218:1: (lv_effects_5_0= ruleEffect )
                    // InternalSCTX.g:1219:3: lv_effects_5_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getEntryActionAccess().getEffectsEffectParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_37);
                    lv_effects_5_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getEntryActionRule());
                      	        }
                             		add(
                             			current, 
                             			"effects",
                              		lv_effects_5_0, 
                              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:1235:2: (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )*
                    loop40:
                    do {
                        int alt40=2;
                        int LA40_0 = input.LA(1);

                        if ( (LA40_0==37) ) {
                            alt40=1;
                        }


                        switch (alt40) {
                    	case 1 :
                    	    // InternalSCTX.g:1235:4: otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) )
                    	    {
                    	    otherlv_6=(Token)match(input,37,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getEntryActionAccess().getSemicolonKeyword_3_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:1239:1: ( (lv_effects_7_0= ruleEffect ) )
                    	    // InternalSCTX.g:1240:1: (lv_effects_7_0= ruleEffect )
                    	    {
                    	    // InternalSCTX.g:1240:1: (lv_effects_7_0= ruleEffect )
                    	    // InternalSCTX.g:1241:3: lv_effects_7_0= ruleEffect
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getEntryActionAccess().getEffectsEffectParserRuleCall_3_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_37);
                    	    lv_effects_7_0=ruleEffect();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getEntryActionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"effects",
                    	              		lv_effects_7_0, 
                    	              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop40;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEntryAction"


    // $ANTLR start "entryRuleDuringAction"
    // InternalSCTX.g:1265:1: entryRuleDuringAction returns [EObject current=null] : iv_ruleDuringAction= ruleDuringAction EOF ;
    public final EObject entryRuleDuringAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDuringAction = null;


        try {
            // InternalSCTX.g:1266:2: (iv_ruleDuringAction= ruleDuringAction EOF )
            // InternalSCTX.g:1267:2: iv_ruleDuringAction= ruleDuringAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDuringActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDuringAction=ruleDuringAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDuringAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDuringAction"


    // $ANTLR start "ruleDuringAction"
    // InternalSCTX.g:1274:1: ruleDuringAction returns [EObject current=null] : ( () ( (lv_delay_1_0= ruleDelayType ) )? otherlv_2= 'during' (otherlv_3= 'if' ( (lv_trigger_4_0= ruleBoolExpression ) ) )? (otherlv_5= 'do' ( (lv_effects_6_0= ruleEffect ) ) (otherlv_7= ';' ( (lv_effects_8_0= ruleEffect ) ) )* )? ) ;
    public final EObject ruleDuringAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Enumerator lv_delay_1_0 = null;

        EObject lv_trigger_4_0 = null;

        EObject lv_effects_6_0 = null;

        EObject lv_effects_8_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:1277:28: ( ( () ( (lv_delay_1_0= ruleDelayType ) )? otherlv_2= 'during' (otherlv_3= 'if' ( (lv_trigger_4_0= ruleBoolExpression ) ) )? (otherlv_5= 'do' ( (lv_effects_6_0= ruleEffect ) ) (otherlv_7= ';' ( (lv_effects_8_0= ruleEffect ) ) )* )? ) )
            // InternalSCTX.g:1278:1: ( () ( (lv_delay_1_0= ruleDelayType ) )? otherlv_2= 'during' (otherlv_3= 'if' ( (lv_trigger_4_0= ruleBoolExpression ) ) )? (otherlv_5= 'do' ( (lv_effects_6_0= ruleEffect ) ) (otherlv_7= ';' ( (lv_effects_8_0= ruleEffect ) ) )* )? )
            {
            // InternalSCTX.g:1278:1: ( () ( (lv_delay_1_0= ruleDelayType ) )? otherlv_2= 'during' (otherlv_3= 'if' ( (lv_trigger_4_0= ruleBoolExpression ) ) )? (otherlv_5= 'do' ( (lv_effects_6_0= ruleEffect ) ) (otherlv_7= ';' ( (lv_effects_8_0= ruleEffect ) ) )* )? )
            // InternalSCTX.g:1278:2: () ( (lv_delay_1_0= ruleDelayType ) )? otherlv_2= 'during' (otherlv_3= 'if' ( (lv_trigger_4_0= ruleBoolExpression ) ) )? (otherlv_5= 'do' ( (lv_effects_6_0= ruleEffect ) ) (otherlv_7= ';' ( (lv_effects_8_0= ruleEffect ) ) )* )?
            {
            // InternalSCTX.g:1278:2: ()
            // InternalSCTX.g:1279:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getDuringActionAccess().getDuringActionAction_0(),
                          current);
                  
            }

            }

            // InternalSCTX.g:1287:2: ( (lv_delay_1_0= ruleDelayType ) )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( ((LA42_0>=82 && LA42_0<=85)) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // InternalSCTX.g:1288:1: (lv_delay_1_0= ruleDelayType )
                    {
                    // InternalSCTX.g:1288:1: (lv_delay_1_0= ruleDelayType )
                    // InternalSCTX.g:1289:3: lv_delay_1_0= ruleDelayType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDuringActionAccess().getDelayDelayTypeEnumRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_39);
                    lv_delay_1_0=ruleDelayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDuringActionRule());
                      	        }
                             		set(
                             			current, 
                             			"delay",
                              		lv_delay_1_0, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.DelayType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,39,FollowSets000.FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getDuringActionAccess().getDuringKeyword_2());
                  
            }
            // InternalSCTX.g:1309:1: (otherlv_3= 'if' ( (lv_trigger_4_0= ruleBoolExpression ) ) )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==35) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // InternalSCTX.g:1309:3: otherlv_3= 'if' ( (lv_trigger_4_0= ruleBoolExpression ) )
                    {
                    otherlv_3=(Token)match(input,35,FollowSets000.FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getDuringActionAccess().getIfKeyword_3_0());
                          
                    }
                    // InternalSCTX.g:1313:1: ( (lv_trigger_4_0= ruleBoolExpression ) )
                    // InternalSCTX.g:1314:1: (lv_trigger_4_0= ruleBoolExpression )
                    {
                    // InternalSCTX.g:1314:1: (lv_trigger_4_0= ruleBoolExpression )
                    // InternalSCTX.g:1315:3: lv_trigger_4_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDuringActionAccess().getTriggerBoolExpressionParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_35);
                    lv_trigger_4_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDuringActionRule());
                      	        }
                             		set(
                             			current, 
                             			"trigger",
                              		lv_trigger_4_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.BoolExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:1331:4: (otherlv_5= 'do' ( (lv_effects_6_0= ruleEffect ) ) (otherlv_7= ';' ( (lv_effects_8_0= ruleEffect ) ) )* )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==36) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // InternalSCTX.g:1331:6: otherlv_5= 'do' ( (lv_effects_6_0= ruleEffect ) ) (otherlv_7= ';' ( (lv_effects_8_0= ruleEffect ) ) )*
                    {
                    otherlv_5=(Token)match(input,36,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getDuringActionAccess().getDoKeyword_4_0());
                          
                    }
                    // InternalSCTX.g:1335:1: ( (lv_effects_6_0= ruleEffect ) )
                    // InternalSCTX.g:1336:1: (lv_effects_6_0= ruleEffect )
                    {
                    // InternalSCTX.g:1336:1: (lv_effects_6_0= ruleEffect )
                    // InternalSCTX.g:1337:3: lv_effects_6_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDuringActionAccess().getEffectsEffectParserRuleCall_4_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_37);
                    lv_effects_6_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDuringActionRule());
                      	        }
                             		add(
                             			current, 
                             			"effects",
                              		lv_effects_6_0, 
                              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:1353:2: (otherlv_7= ';' ( (lv_effects_8_0= ruleEffect ) ) )*
                    loop44:
                    do {
                        int alt44=2;
                        int LA44_0 = input.LA(1);

                        if ( (LA44_0==37) ) {
                            alt44=1;
                        }


                        switch (alt44) {
                    	case 1 :
                    	    // InternalSCTX.g:1353:4: otherlv_7= ';' ( (lv_effects_8_0= ruleEffect ) )
                    	    {
                    	    otherlv_7=(Token)match(input,37,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_7, grammarAccess.getDuringActionAccess().getSemicolonKeyword_4_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:1357:1: ( (lv_effects_8_0= ruleEffect ) )
                    	    // InternalSCTX.g:1358:1: (lv_effects_8_0= ruleEffect )
                    	    {
                    	    // InternalSCTX.g:1358:1: (lv_effects_8_0= ruleEffect )
                    	    // InternalSCTX.g:1359:3: lv_effects_8_0= ruleEffect
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getDuringActionAccess().getEffectsEffectParserRuleCall_4_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_37);
                    	    lv_effects_8_0=ruleEffect();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getDuringActionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"effects",
                    	              		lv_effects_8_0, 
                    	              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop44;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDuringAction"


    // $ANTLR start "entryRuleExitAction"
    // InternalSCTX.g:1383:1: entryRuleExitAction returns [EObject current=null] : iv_ruleExitAction= ruleExitAction EOF ;
    public final EObject entryRuleExitAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExitAction = null;


        try {
            // InternalSCTX.g:1384:2: (iv_ruleExitAction= ruleExitAction EOF )
            // InternalSCTX.g:1385:2: iv_ruleExitAction= ruleExitAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExitActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExitAction=ruleExitAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExitAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExitAction"


    // $ANTLR start "ruleExitAction"
    // InternalSCTX.g:1392:1: ruleExitAction returns [EObject current=null] : ( () otherlv_1= 'exit' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? ) ;
    public final EObject ruleExitAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_trigger_3_0 = null;

        EObject lv_effects_5_0 = null;

        EObject lv_effects_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:1395:28: ( ( () otherlv_1= 'exit' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? ) )
            // InternalSCTX.g:1396:1: ( () otherlv_1= 'exit' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? )
            {
            // InternalSCTX.g:1396:1: ( () otherlv_1= 'exit' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? )
            // InternalSCTX.g:1396:2: () otherlv_1= 'exit' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )?
            {
            // InternalSCTX.g:1396:2: ()
            // InternalSCTX.g:1397:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getExitActionAccess().getExitActionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,40,FollowSets000.FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getExitActionAccess().getExitKeyword_1());
                  
            }
            // InternalSCTX.g:1409:1: (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==35) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalSCTX.g:1409:3: otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) )
                    {
                    otherlv_2=(Token)match(input,35,FollowSets000.FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getExitActionAccess().getIfKeyword_2_0());
                          
                    }
                    // InternalSCTX.g:1413:1: ( (lv_trigger_3_0= ruleBoolExpression ) )
                    // InternalSCTX.g:1414:1: (lv_trigger_3_0= ruleBoolExpression )
                    {
                    // InternalSCTX.g:1414:1: (lv_trigger_3_0= ruleBoolExpression )
                    // InternalSCTX.g:1415:3: lv_trigger_3_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExitActionAccess().getTriggerBoolExpressionParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_35);
                    lv_trigger_3_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExitActionRule());
                      	        }
                             		set(
                             			current, 
                             			"trigger",
                              		lv_trigger_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.BoolExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:1431:4: (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==36) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalSCTX.g:1431:6: otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )*
                    {
                    otherlv_4=(Token)match(input,36,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getExitActionAccess().getDoKeyword_3_0());
                          
                    }
                    // InternalSCTX.g:1435:1: ( (lv_effects_5_0= ruleEffect ) )
                    // InternalSCTX.g:1436:1: (lv_effects_5_0= ruleEffect )
                    {
                    // InternalSCTX.g:1436:1: (lv_effects_5_0= ruleEffect )
                    // InternalSCTX.g:1437:3: lv_effects_5_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExitActionAccess().getEffectsEffectParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_37);
                    lv_effects_5_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExitActionRule());
                      	        }
                             		add(
                             			current, 
                             			"effects",
                              		lv_effects_5_0, 
                              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:1453:2: (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )*
                    loop47:
                    do {
                        int alt47=2;
                        int LA47_0 = input.LA(1);

                        if ( (LA47_0==37) ) {
                            alt47=1;
                        }


                        switch (alt47) {
                    	case 1 :
                    	    // InternalSCTX.g:1453:4: otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) )
                    	    {
                    	    otherlv_6=(Token)match(input,37,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getExitActionAccess().getSemicolonKeyword_3_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:1457:1: ( (lv_effects_7_0= ruleEffect ) )
                    	    // InternalSCTX.g:1458:1: (lv_effects_7_0= ruleEffect )
                    	    {
                    	    // InternalSCTX.g:1458:1: (lv_effects_7_0= ruleEffect )
                    	    // InternalSCTX.g:1459:3: lv_effects_7_0= ruleEffect
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getExitActionAccess().getEffectsEffectParserRuleCall_3_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_37);
                    	    lv_effects_7_0=ruleEffect();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getExitActionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"effects",
                    	              		lv_effects_7_0, 
                    	              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop47;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExitAction"


    // $ANTLR start "entryRuleSuspendAction"
    // InternalSCTX.g:1483:1: entryRuleSuspendAction returns [EObject current=null] : iv_ruleSuspendAction= ruleSuspendAction EOF ;
    public final EObject entryRuleSuspendAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSuspendAction = null;


        try {
            // InternalSCTX.g:1484:2: (iv_ruleSuspendAction= ruleSuspendAction EOF )
            // InternalSCTX.g:1485:2: iv_ruleSuspendAction= ruleSuspendAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSuspendActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSuspendAction=ruleSuspendAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSuspendAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSuspendAction"


    // $ANTLR start "ruleSuspendAction"
    // InternalSCTX.g:1492:1: ruleSuspendAction returns [EObject current=null] : ( () ( (lv_delay_1_0= ruleDelayType ) )? ( (lv_weak_2_0= 'weak' ) )? otherlv_3= 'suspend' (otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolExpression ) ) )? ) ;
    public final EObject ruleSuspendAction() throws RecognitionException {
        EObject current = null;

        Token lv_weak_2_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Enumerator lv_delay_1_0 = null;

        EObject lv_trigger_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:1495:28: ( ( () ( (lv_delay_1_0= ruleDelayType ) )? ( (lv_weak_2_0= 'weak' ) )? otherlv_3= 'suspend' (otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolExpression ) ) )? ) )
            // InternalSCTX.g:1496:1: ( () ( (lv_delay_1_0= ruleDelayType ) )? ( (lv_weak_2_0= 'weak' ) )? otherlv_3= 'suspend' (otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolExpression ) ) )? )
            {
            // InternalSCTX.g:1496:1: ( () ( (lv_delay_1_0= ruleDelayType ) )? ( (lv_weak_2_0= 'weak' ) )? otherlv_3= 'suspend' (otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolExpression ) ) )? )
            // InternalSCTX.g:1496:2: () ( (lv_delay_1_0= ruleDelayType ) )? ( (lv_weak_2_0= 'weak' ) )? otherlv_3= 'suspend' (otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolExpression ) ) )?
            {
            // InternalSCTX.g:1496:2: ()
            // InternalSCTX.g:1497:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getSuspendActionAccess().getSuspendActionAction_0(),
                          current);
                  
            }

            }

            // InternalSCTX.g:1505:2: ( (lv_delay_1_0= ruleDelayType ) )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( ((LA49_0>=82 && LA49_0<=85)) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalSCTX.g:1506:1: (lv_delay_1_0= ruleDelayType )
                    {
                    // InternalSCTX.g:1506:1: (lv_delay_1_0= ruleDelayType )
                    // InternalSCTX.g:1507:3: lv_delay_1_0= ruleDelayType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSuspendActionAccess().getDelayDelayTypeEnumRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_40);
                    lv_delay_1_0=ruleDelayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSuspendActionRule());
                      	        }
                             		set(
                             			current, 
                             			"delay",
                              		lv_delay_1_0, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.DelayType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:1523:3: ( (lv_weak_2_0= 'weak' ) )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==41) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // InternalSCTX.g:1524:1: (lv_weak_2_0= 'weak' )
                    {
                    // InternalSCTX.g:1524:1: (lv_weak_2_0= 'weak' )
                    // InternalSCTX.g:1525:3: lv_weak_2_0= 'weak'
                    {
                    lv_weak_2_0=(Token)match(input,41,FollowSets000.FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_weak_2_0, grammarAccess.getSuspendActionAccess().getWeakWeakKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getSuspendActionRule());
                      	        }
                             		setWithLastConsumed(current, "weak", true, "weak");
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,42,FollowSets000.FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getSuspendActionAccess().getSuspendKeyword_3());
                  
            }
            // InternalSCTX.g:1542:1: (otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolExpression ) ) )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==35) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalSCTX.g:1542:3: otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolExpression ) )
                    {
                    otherlv_4=(Token)match(input,35,FollowSets000.FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getSuspendActionAccess().getIfKeyword_4_0());
                          
                    }
                    // InternalSCTX.g:1546:1: ( (lv_trigger_5_0= ruleBoolExpression ) )
                    // InternalSCTX.g:1547:1: (lv_trigger_5_0= ruleBoolExpression )
                    {
                    // InternalSCTX.g:1547:1: (lv_trigger_5_0= ruleBoolExpression )
                    // InternalSCTX.g:1548:3: lv_trigger_5_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSuspendActionAccess().getTriggerBoolExpressionParserRuleCall_4_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_trigger_5_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSuspendActionRule());
                      	        }
                             		set(
                             			current, 
                             			"trigger",
                              		lv_trigger_5_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.BoolExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSuspendAction"


    // $ANTLR start "entryRulePrecedingAction"
    // InternalSCTX.g:1572:1: entryRulePrecedingAction returns [EObject current=null] : iv_rulePrecedingAction= rulePrecedingAction EOF ;
    public final EObject entryRulePrecedingAction() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrecedingAction = null;


        try {
            // InternalSCTX.g:1573:2: (iv_rulePrecedingAction= rulePrecedingAction EOF )
            // InternalSCTX.g:1574:2: iv_rulePrecedingAction= rulePrecedingAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrecedingActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrecedingAction=rulePrecedingAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrecedingAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrecedingAction"


    // $ANTLR start "rulePrecedingAction"
    // InternalSCTX.g:1581:1: rulePrecedingAction returns [EObject current=null] : ( () otherlv_1= 'preceding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? ) ;
    public final EObject rulePrecedingAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_trigger_3_0 = null;

        EObject lv_effects_5_0 = null;

        EObject lv_effects_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:1584:28: ( ( () otherlv_1= 'preceding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? ) )
            // InternalSCTX.g:1585:1: ( () otherlv_1= 'preceding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? )
            {
            // InternalSCTX.g:1585:1: ( () otherlv_1= 'preceding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? )
            // InternalSCTX.g:1585:2: () otherlv_1= 'preceding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )?
            {
            // InternalSCTX.g:1585:2: ()
            // InternalSCTX.g:1586:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPrecedingActionAccess().getPrecedingActionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,43,FollowSets000.FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPrecedingActionAccess().getPrecedingKeyword_1());
                  
            }
            // InternalSCTX.g:1598:1: (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==35) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalSCTX.g:1598:3: otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) )
                    {
                    otherlv_2=(Token)match(input,35,FollowSets000.FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getPrecedingActionAccess().getIfKeyword_2_0());
                          
                    }
                    // InternalSCTX.g:1602:1: ( (lv_trigger_3_0= ruleBoolExpression ) )
                    // InternalSCTX.g:1603:1: (lv_trigger_3_0= ruleBoolExpression )
                    {
                    // InternalSCTX.g:1603:1: (lv_trigger_3_0= ruleBoolExpression )
                    // InternalSCTX.g:1604:3: lv_trigger_3_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPrecedingActionAccess().getTriggerBoolExpressionParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_35);
                    lv_trigger_3_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPrecedingActionRule());
                      	        }
                             		set(
                             			current, 
                             			"trigger",
                              		lv_trigger_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.BoolExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:1620:4: (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==36) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalSCTX.g:1620:6: otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )*
                    {
                    otherlv_4=(Token)match(input,36,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getPrecedingActionAccess().getDoKeyword_3_0());
                          
                    }
                    // InternalSCTX.g:1624:1: ( (lv_effects_5_0= ruleEffect ) )
                    // InternalSCTX.g:1625:1: (lv_effects_5_0= ruleEffect )
                    {
                    // InternalSCTX.g:1625:1: (lv_effects_5_0= ruleEffect )
                    // InternalSCTX.g:1626:3: lv_effects_5_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPrecedingActionAccess().getEffectsEffectParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_37);
                    lv_effects_5_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPrecedingActionRule());
                      	        }
                             		add(
                             			current, 
                             			"effects",
                              		lv_effects_5_0, 
                              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:1642:2: (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )*
                    loop53:
                    do {
                        int alt53=2;
                        int LA53_0 = input.LA(1);

                        if ( (LA53_0==37) ) {
                            alt53=1;
                        }


                        switch (alt53) {
                    	case 1 :
                    	    // InternalSCTX.g:1642:4: otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) )
                    	    {
                    	    otherlv_6=(Token)match(input,37,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getPrecedingActionAccess().getSemicolonKeyword_3_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:1646:1: ( (lv_effects_7_0= ruleEffect ) )
                    	    // InternalSCTX.g:1647:1: (lv_effects_7_0= ruleEffect )
                    	    {
                    	    // InternalSCTX.g:1647:1: (lv_effects_7_0= ruleEffect )
                    	    // InternalSCTX.g:1648:3: lv_effects_7_0= ruleEffect
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPrecedingActionAccess().getEffectsEffectParserRuleCall_3_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_37);
                    	    lv_effects_7_0=ruleEffect();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPrecedingActionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"effects",
                    	              		lv_effects_7_0, 
                    	              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop53;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrecedingAction"


    // $ANTLR start "entryRuleSucceedingAction"
    // InternalSCTX.g:1672:1: entryRuleSucceedingAction returns [EObject current=null] : iv_ruleSucceedingAction= ruleSucceedingAction EOF ;
    public final EObject entryRuleSucceedingAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSucceedingAction = null;


        try {
            // InternalSCTX.g:1673:2: (iv_ruleSucceedingAction= ruleSucceedingAction EOF )
            // InternalSCTX.g:1674:2: iv_ruleSucceedingAction= ruleSucceedingAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSucceedingActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSucceedingAction=ruleSucceedingAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSucceedingAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSucceedingAction"


    // $ANTLR start "ruleSucceedingAction"
    // InternalSCTX.g:1681:1: ruleSucceedingAction returns [EObject current=null] : ( () otherlv_1= 'succeeding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? ) ;
    public final EObject ruleSucceedingAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_trigger_3_0 = null;

        EObject lv_effects_5_0 = null;

        EObject lv_effects_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:1684:28: ( ( () otherlv_1= 'succeeding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? ) )
            // InternalSCTX.g:1685:1: ( () otherlv_1= 'succeeding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? )
            {
            // InternalSCTX.g:1685:1: ( () otherlv_1= 'succeeding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? )
            // InternalSCTX.g:1685:2: () otherlv_1= 'succeeding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )?
            {
            // InternalSCTX.g:1685:2: ()
            // InternalSCTX.g:1686:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getSucceedingActionAccess().getSucceedingActionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,44,FollowSets000.FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getSucceedingActionAccess().getSucceedingKeyword_1());
                  
            }
            // InternalSCTX.g:1698:1: (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==35) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // InternalSCTX.g:1698:3: otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) )
                    {
                    otherlv_2=(Token)match(input,35,FollowSets000.FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getSucceedingActionAccess().getIfKeyword_2_0());
                          
                    }
                    // InternalSCTX.g:1702:1: ( (lv_trigger_3_0= ruleBoolExpression ) )
                    // InternalSCTX.g:1703:1: (lv_trigger_3_0= ruleBoolExpression )
                    {
                    // InternalSCTX.g:1703:1: (lv_trigger_3_0= ruleBoolExpression )
                    // InternalSCTX.g:1704:3: lv_trigger_3_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSucceedingActionAccess().getTriggerBoolExpressionParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_35);
                    lv_trigger_3_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSucceedingActionRule());
                      	        }
                             		set(
                             			current, 
                             			"trigger",
                              		lv_trigger_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.BoolExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:1720:4: (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==36) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // InternalSCTX.g:1720:6: otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )*
                    {
                    otherlv_4=(Token)match(input,36,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getSucceedingActionAccess().getDoKeyword_3_0());
                          
                    }
                    // InternalSCTX.g:1724:1: ( (lv_effects_5_0= ruleEffect ) )
                    // InternalSCTX.g:1725:1: (lv_effects_5_0= ruleEffect )
                    {
                    // InternalSCTX.g:1725:1: (lv_effects_5_0= ruleEffect )
                    // InternalSCTX.g:1726:3: lv_effects_5_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSucceedingActionAccess().getEffectsEffectParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_37);
                    lv_effects_5_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSucceedingActionRule());
                      	        }
                             		add(
                             			current, 
                             			"effects",
                              		lv_effects_5_0, 
                              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:1742:2: (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )*
                    loop56:
                    do {
                        int alt56=2;
                        int LA56_0 = input.LA(1);

                        if ( (LA56_0==37) ) {
                            alt56=1;
                        }


                        switch (alt56) {
                    	case 1 :
                    	    // InternalSCTX.g:1742:4: otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) )
                    	    {
                    	    otherlv_6=(Token)match(input,37,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getSucceedingActionAccess().getSemicolonKeyword_3_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:1746:1: ( (lv_effects_7_0= ruleEffect ) )
                    	    // InternalSCTX.g:1747:1: (lv_effects_7_0= ruleEffect )
                    	    {
                    	    // InternalSCTX.g:1747:1: (lv_effects_7_0= ruleEffect )
                    	    // InternalSCTX.g:1748:3: lv_effects_7_0= ruleEffect
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getSucceedingActionAccess().getEffectsEffectParserRuleCall_3_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_37);
                    	    lv_effects_7_0=ruleEffect();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getSucceedingActionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"effects",
                    	              		lv_effects_7_0, 
                    	              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop56;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSucceedingAction"


    // $ANTLR start "entryRuleRegion"
    // InternalSCTX.g:1772:1: entryRuleRegion returns [EObject current=null] : iv_ruleRegion= ruleRegion EOF ;
    public final EObject entryRuleRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRegion = null;


        try {
            // InternalSCTX.g:1773:2: (iv_ruleRegion= ruleRegion EOF )
            // InternalSCTX.g:1774:2: iv_ruleRegion= ruleRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRegionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRegion=ruleRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRegion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRegion"


    // $ANTLR start "ruleRegion"
    // InternalSCTX.g:1781:1: ruleRegion returns [EObject current=null] : (this_ControlflowRegion_0= ruleControlflowRegion | this_DataflowRegion_1= ruleDataflowRegion ) ;
    public final EObject ruleRegion() throws RecognitionException {
        EObject current = null;

        EObject this_ControlflowRegion_0 = null;

        EObject this_DataflowRegion_1 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:1784:28: ( (this_ControlflowRegion_0= ruleControlflowRegion | this_DataflowRegion_1= ruleDataflowRegion ) )
            // InternalSCTX.g:1785:1: (this_ControlflowRegion_0= ruleControlflowRegion | this_DataflowRegion_1= ruleDataflowRegion )
            {
            // InternalSCTX.g:1785:1: (this_ControlflowRegion_0= ruleControlflowRegion | this_DataflowRegion_1= ruleDataflowRegion )
            int alt58=2;
            alt58 = dfa58.predict(input);
            switch (alt58) {
                case 1 :
                    // InternalSCTX.g:1786:2: this_ControlflowRegion_0= ruleControlflowRegion
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRegionAccess().getControlflowRegionParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ControlflowRegion_0=ruleControlflowRegion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ControlflowRegion_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:1799:2: this_DataflowRegion_1= ruleDataflowRegion
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRegionAccess().getDataflowRegionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DataflowRegion_1=ruleDataflowRegion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_DataflowRegion_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRegion"


    // $ANTLR start "entryRuleSingleControlflowRegion"
    // InternalSCTX.g:1818:1: entryRuleSingleControlflowRegion returns [EObject current=null] : iv_ruleSingleControlflowRegion= ruleSingleControlflowRegion EOF ;
    public final EObject entryRuleSingleControlflowRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSingleControlflowRegion = null;


        try {
            // InternalSCTX.g:1819:2: (iv_ruleSingleControlflowRegion= ruleSingleControlflowRegion EOF )
            // InternalSCTX.g:1820:2: iv_ruleSingleControlflowRegion= ruleSingleControlflowRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSingleControlflowRegionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSingleControlflowRegion=ruleSingleControlflowRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSingleControlflowRegion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSingleControlflowRegion"


    // $ANTLR start "ruleSingleControlflowRegion"
    // InternalSCTX.g:1827:1: ruleSingleControlflowRegion returns [EObject current=null] : ( () ( (lv_states_1_0= ruleState ) )+ ) ;
    public final EObject ruleSingleControlflowRegion() throws RecognitionException {
        EObject current = null;

        EObject lv_states_1_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:1830:28: ( ( () ( (lv_states_1_0= ruleState ) )+ ) )
            // InternalSCTX.g:1831:1: ( () ( (lv_states_1_0= ruleState ) )+ )
            {
            // InternalSCTX.g:1831:1: ( () ( (lv_states_1_0= ruleState ) )+ )
            // InternalSCTX.g:1831:2: () ( (lv_states_1_0= ruleState ) )+
            {
            // InternalSCTX.g:1831:2: ()
            // InternalSCTX.g:1832:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getSingleControlflowRegionAccess().getControlflowRegionAction_0(),
                          current);
                  
            }

            }

            // InternalSCTX.g:1840:2: ( (lv_states_1_0= ruleState ) )+
            int cnt59=0;
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==RULE_COMMENT_ANNOTATION||(LA59_0>=20 && LA59_0<=24)||LA59_0==74) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalSCTX.g:1841:1: (lv_states_1_0= ruleState )
            	    {
            	    // InternalSCTX.g:1841:1: (lv_states_1_0= ruleState )
            	    // InternalSCTX.g:1842:3: lv_states_1_0= ruleState
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSingleControlflowRegionAccess().getStatesStateParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_43);
            	    lv_states_1_0=ruleState();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSingleControlflowRegionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"states",
            	              		lv_states_1_0, 
            	              		"de.cau.cs.kieler.sccharts.text.SCTX.State");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt59 >= 1 ) break loop59;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(59, input);
                        throw eee;
                }
                cnt59++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSingleControlflowRegion"


    // $ANTLR start "entryRuleSingleDataflowRegion"
    // InternalSCTX.g:1866:1: entryRuleSingleDataflowRegion returns [EObject current=null] : iv_ruleSingleDataflowRegion= ruleSingleDataflowRegion EOF ;
    public final EObject entryRuleSingleDataflowRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSingleDataflowRegion = null;


        try {
            // InternalSCTX.g:1867:2: (iv_ruleSingleDataflowRegion= ruleSingleDataflowRegion EOF )
            // InternalSCTX.g:1868:2: iv_ruleSingleDataflowRegion= ruleSingleDataflowRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSingleDataflowRegionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSingleDataflowRegion=ruleSingleDataflowRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSingleDataflowRegion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSingleDataflowRegion"


    // $ANTLR start "ruleSingleDataflowRegion"
    // InternalSCTX.g:1875:1: ruleSingleDataflowRegion returns [EObject current=null] : ( () ( (lv_equations_1_0= ruleEquation ) )+ ) ;
    public final EObject ruleSingleDataflowRegion() throws RecognitionException {
        EObject current = null;

        EObject lv_equations_1_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:1878:28: ( ( () ( (lv_equations_1_0= ruleEquation ) )+ ) )
            // InternalSCTX.g:1879:1: ( () ( (lv_equations_1_0= ruleEquation ) )+ )
            {
            // InternalSCTX.g:1879:1: ( () ( (lv_equations_1_0= ruleEquation ) )+ )
            // InternalSCTX.g:1879:2: () ( (lv_equations_1_0= ruleEquation ) )+
            {
            // InternalSCTX.g:1879:2: ()
            // InternalSCTX.g:1880:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getSingleDataflowRegionAccess().getDataflowRegionAction_0(),
                          current);
                  
            }

            }

            // InternalSCTX.g:1888:2: ( (lv_equations_1_0= ruleEquation ) )+
            int cnt60=0;
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==RULE_ID||LA60_0==RULE_COMMENT_ANNOTATION||LA60_0==74) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // InternalSCTX.g:1889:1: (lv_equations_1_0= ruleEquation )
            	    {
            	    // InternalSCTX.g:1889:1: (lv_equations_1_0= ruleEquation )
            	    // InternalSCTX.g:1890:3: lv_equations_1_0= ruleEquation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSingleDataflowRegionAccess().getEquationsEquationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_44);
            	    lv_equations_1_0=ruleEquation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSingleDataflowRegionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"equations",
            	              		lv_equations_1_0, 
            	              		"de.cau.cs.kieler.sccharts.text.SCTX.Equation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt60 >= 1 ) break loop60;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(60, input);
                        throw eee;
                }
                cnt60++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSingleDataflowRegion"


    // $ANTLR start "entryRuleControlflowRegion"
    // InternalSCTX.g:1914:1: entryRuleControlflowRegion returns [EObject current=null] : iv_ruleControlflowRegion= ruleControlflowRegion EOF ;
    public final EObject entryRuleControlflowRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleControlflowRegion = null;


        try {
            // InternalSCTX.g:1915:2: (iv_ruleControlflowRegion= ruleControlflowRegion EOF )
            // InternalSCTX.g:1916:2: iv_ruleControlflowRegion= ruleControlflowRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getControlflowRegionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleControlflowRegion=ruleControlflowRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleControlflowRegion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleControlflowRegion"


    // $ANTLR start "ruleControlflowRegion"
    // InternalSCTX.g:1923:1: ruleControlflowRegion returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'region' ( (lv_name_3_0= ruleExtendedID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= ':' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( (lv_states_7_0= ruleState ) )+ ) ;
    public final EObject ruleControlflowRegion() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        EObject lv_annotations_1_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_declarations_6_0 = null;

        EObject lv_states_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:1926:28: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'region' ( (lv_name_3_0= ruleExtendedID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= ':' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( (lv_states_7_0= ruleState ) )+ ) )
            // InternalSCTX.g:1927:1: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'region' ( (lv_name_3_0= ruleExtendedID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= ':' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( (lv_states_7_0= ruleState ) )+ )
            {
            // InternalSCTX.g:1927:1: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'region' ( (lv_name_3_0= ruleExtendedID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= ':' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( (lv_states_7_0= ruleState ) )+ )
            // InternalSCTX.g:1927:2: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'region' ( (lv_name_3_0= ruleExtendedID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= ':' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( (lv_states_7_0= ruleState ) )+
            {
            // InternalSCTX.g:1927:2: ()
            // InternalSCTX.g:1928:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getControlflowRegionAccess().getControlflowRegionAction_0(),
                          current);
                  
            }

            }

            // InternalSCTX.g:1936:2: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( (LA61_0==RULE_COMMENT_ANNOTATION||LA61_0==74) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // InternalSCTX.g:1937:1: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:1937:1: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:1938:3: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getControlflowRegionAccess().getAnnotationsAnnotationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_45);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_1_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);

            otherlv_2=(Token)match(input,45,FollowSets000.FOLLOW_46); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getControlflowRegionAccess().getRegionKeyword_2());
                  
            }
            // InternalSCTX.g:1958:1: ( (lv_name_3_0= ruleExtendedID ) )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==RULE_ID) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // InternalSCTX.g:1959:1: (lv_name_3_0= ruleExtendedID )
                    {
                    // InternalSCTX.g:1959:1: (lv_name_3_0= ruleExtendedID )
                    // InternalSCTX.g:1960:3: lv_name_3_0= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getControlflowRegionAccess().getNameExtendedIDParserRuleCall_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_47);
                    lv_name_3_0=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_3_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:1976:3: ( (lv_label_4_0= RULE_STRING ) )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==RULE_STRING) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalSCTX.g:1977:1: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalSCTX.g:1977:1: (lv_label_4_0= RULE_STRING )
                    // InternalSCTX.g:1978:3: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_label_4_0, grammarAccess.getControlflowRegionAccess().getLabelSTRINGTerminalRuleCall_4_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getControlflowRegionRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"label",
                              		lv_label_4_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.STRING");
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,46,FollowSets000.FOLLOW_49); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getControlflowRegionAccess().getColonKeyword_5());
                  
            }
            // InternalSCTX.g:1998:1: ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )*
            loop64:
            do {
                int alt64=2;
                alt64 = dfa64.predict(input);
                switch (alt64) {
            	case 1 :
            	    // InternalSCTX.g:1999:1: (lv_declarations_6_0= ruleDeclarationWOSemicolon )
            	    {
            	    // InternalSCTX.g:1999:1: (lv_declarations_6_0= ruleDeclarationWOSemicolon )
            	    // InternalSCTX.g:2000:3: lv_declarations_6_0= ruleDeclarationWOSemicolon
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getControlflowRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_6_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_49);
            	    lv_declarations_6_0=ruleDeclarationWOSemicolon();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declarations",
            	              		lv_declarations_6_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);

            // InternalSCTX.g:2016:3: ( (lv_states_7_0= ruleState ) )+
            int cnt65=0;
            loop65:
            do {
                int alt65=2;
                alt65 = dfa65.predict(input);
                switch (alt65) {
            	case 1 :
            	    // InternalSCTX.g:2017:1: (lv_states_7_0= ruleState )
            	    {
            	    // InternalSCTX.g:2017:1: (lv_states_7_0= ruleState )
            	    // InternalSCTX.g:2018:3: lv_states_7_0= ruleState
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getControlflowRegionAccess().getStatesStateParserRuleCall_7_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_43);
            	    lv_states_7_0=ruleState();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"states",
            	              		lv_states_7_0, 
            	              		"de.cau.cs.kieler.sccharts.text.SCTX.State");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt65 >= 1 ) break loop65;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(65, input);
                        throw eee;
                }
                cnt65++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleControlflowRegion"


    // $ANTLR start "entryRuleDataflowRegion"
    // InternalSCTX.g:2042:1: entryRuleDataflowRegion returns [EObject current=null] : iv_ruleDataflowRegion= ruleDataflowRegion EOF ;
    public final EObject entryRuleDataflowRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDataflowRegion = null;


        try {
            // InternalSCTX.g:2043:2: (iv_ruleDataflowRegion= ruleDataflowRegion EOF )
            // InternalSCTX.g:2044:2: iv_ruleDataflowRegion= ruleDataflowRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDataflowRegionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDataflowRegion=ruleDataflowRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDataflowRegion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDataflowRegion"


    // $ANTLR start "ruleDataflowRegion"
    // InternalSCTX.g:2051:1: ruleDataflowRegion returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'dataflow' ( (lv_name_3_0= ruleExtendedID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= ':' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_7_0= ruleEquation ) )+ ) ;
    public final EObject ruleDataflowRegion() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        EObject lv_annotations_1_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_declarations_6_0 = null;

        EObject lv_equations_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:2054:28: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'dataflow' ( (lv_name_3_0= ruleExtendedID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= ':' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_7_0= ruleEquation ) )+ ) )
            // InternalSCTX.g:2055:1: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'dataflow' ( (lv_name_3_0= ruleExtendedID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= ':' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_7_0= ruleEquation ) )+ )
            {
            // InternalSCTX.g:2055:1: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'dataflow' ( (lv_name_3_0= ruleExtendedID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= ':' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_7_0= ruleEquation ) )+ )
            // InternalSCTX.g:2055:2: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'dataflow' ( (lv_name_3_0= ruleExtendedID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= ':' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_7_0= ruleEquation ) )+
            {
            // InternalSCTX.g:2055:2: ()
            // InternalSCTX.g:2056:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getDataflowRegionAccess().getDataflowRegionAction_0(),
                          current);
                  
            }

            }

            // InternalSCTX.g:2064:2: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( (LA66_0==RULE_COMMENT_ANNOTATION||LA66_0==74) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // InternalSCTX.g:2065:1: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:2065:1: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:2066:3: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getDataflowRegionAccess().getAnnotationsAnnotationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_50);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_1_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

            otherlv_2=(Token)match(input,47,FollowSets000.FOLLOW_46); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getDataflowRegionAccess().getDataflowKeyword_2());
                  
            }
            // InternalSCTX.g:2086:1: ( (lv_name_3_0= ruleExtendedID ) )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==RULE_ID) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalSCTX.g:2087:1: (lv_name_3_0= ruleExtendedID )
                    {
                    // InternalSCTX.g:2087:1: (lv_name_3_0= ruleExtendedID )
                    // InternalSCTX.g:2088:3: lv_name_3_0= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDataflowRegionAccess().getNameExtendedIDParserRuleCall_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_47);
                    lv_name_3_0=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_3_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2104:3: ( (lv_label_4_0= RULE_STRING ) )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==RULE_STRING) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // InternalSCTX.g:2105:1: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalSCTX.g:2105:1: (lv_label_4_0= RULE_STRING )
                    // InternalSCTX.g:2106:3: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_label_4_0, grammarAccess.getDataflowRegionAccess().getLabelSTRINGTerminalRuleCall_4_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDataflowRegionRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"label",
                              		lv_label_4_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.STRING");
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,46,FollowSets000.FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getDataflowRegionAccess().getColonKeyword_5());
                  
            }
            // InternalSCTX.g:2126:1: ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )*
            loop69:
            do {
                int alt69=2;
                alt69 = dfa69.predict(input);
                switch (alt69) {
            	case 1 :
            	    // InternalSCTX.g:2127:1: (lv_declarations_6_0= ruleDeclarationWOSemicolon )
            	    {
            	    // InternalSCTX.g:2127:1: (lv_declarations_6_0= ruleDeclarationWOSemicolon )
            	    // InternalSCTX.g:2128:3: lv_declarations_6_0= ruleDeclarationWOSemicolon
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getDataflowRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_6_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_51);
            	    lv_declarations_6_0=ruleDeclarationWOSemicolon();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declarations",
            	              		lv_declarations_6_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);

            // InternalSCTX.g:2144:3: ( (lv_equations_7_0= ruleEquation ) )+
            int cnt70=0;
            loop70:
            do {
                int alt70=2;
                alt70 = dfa70.predict(input);
                switch (alt70) {
            	case 1 :
            	    // InternalSCTX.g:2145:1: (lv_equations_7_0= ruleEquation )
            	    {
            	    // InternalSCTX.g:2145:1: (lv_equations_7_0= ruleEquation )
            	    // InternalSCTX.g:2146:3: lv_equations_7_0= ruleEquation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getDataflowRegionAccess().getEquationsEquationParserRuleCall_7_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_44);
            	    lv_equations_7_0=ruleEquation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"equations",
            	              		lv_equations_7_0, 
            	              		"de.cau.cs.kieler.sccharts.text.SCTX.Equation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt70 >= 1 ) break loop70;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(70, input);
                        throw eee;
                }
                cnt70++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDataflowRegion"


    // $ANTLR start "entryRuleEquation"
    // InternalSCTX.g:2172:1: entryRuleEquation returns [EObject current=null] : iv_ruleEquation= ruleEquation EOF ;
    public final EObject entryRuleEquation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEquation = null;


        try {
            // InternalSCTX.g:2173:2: (iv_ruleEquation= ruleEquation EOF )
            // InternalSCTX.g:2174:2: iv_ruleEquation= ruleEquation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEquationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEquation=ruleEquation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEquation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEquation"


    // $ANTLR start "ruleEquation"
    // InternalSCTX.g:2181:1: ruleEquation returns [EObject current=null] : this_SubReferenceAssignment_0= ruleSubReferenceAssignment ;
    public final EObject ruleEquation() throws RecognitionException {
        EObject current = null;

        EObject this_SubReferenceAssignment_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:2184:28: (this_SubReferenceAssignment_0= ruleSubReferenceAssignment )
            // InternalSCTX.g:2186:2: this_SubReferenceAssignment_0= ruleSubReferenceAssignment
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getEquationAccess().getSubReferenceAssignmentParserRuleCall()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_SubReferenceAssignment_0=ruleSubReferenceAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_SubReferenceAssignment_0; 
                      afterParserOrEnumRuleCall();
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEquation"


    // $ANTLR start "entryRuleRootScope"
    // InternalSCTX.g:2209:1: entryRuleRootScope returns [EObject current=null] : iv_ruleRootScope= ruleRootScope EOF ;
    public final EObject entryRuleRootScope() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRootScope = null;


        try {
            // InternalSCTX.g:2210:2: (iv_ruleRootScope= ruleRootScope EOF )
            // InternalSCTX.g:2211:2: iv_ruleRootScope= ruleRootScope EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRootScopeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRootScope=ruleRootScope();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRootScope; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRootScope"


    // $ANTLR start "ruleRootScope"
    // InternalSCTX.g:2218:1: ruleRootScope returns [EObject current=null] : ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* ) ;
    public final EObject ruleRootScope() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        EObject lv_declarations_1_0 = null;

        EObject lv_entities_2_0 = null;

        EObject lv_scopes_4_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:2221:28: ( ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* ) )
            // InternalSCTX.g:2222:1: ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* )
            {
            // InternalSCTX.g:2222:1: ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* )
            // InternalSCTX.g:2222:2: () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )*
            {
            // InternalSCTX.g:2222:2: ()
            // InternalSCTX.g:2223:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getRootScopeAccess().getKExtScopeAction_0(),
                          current);
                  
            }

            }

            // InternalSCTX.g:2231:2: ( (lv_declarations_1_0= ruleDeclaration ) )*
            loop71:
            do {
                int alt71=2;
                alt71 = dfa71.predict(input);
                switch (alt71) {
            	case 1 :
            	    // InternalSCTX.g:2232:1: (lv_declarations_1_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:2232:1: (lv_declarations_1_0= ruleDeclaration )
            	    // InternalSCTX.g:2233:3: lv_declarations_1_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRootScopeAccess().getDeclarationsDeclarationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_52);
            	    lv_declarations_1_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declarations",
            	              		lv_declarations_1_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.Declaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);

            // InternalSCTX.g:2249:3: ( (lv_entities_2_0= ruleTestEntity ) )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==RULE_ID||LA72_0==RULE_HOSTCODE||LA72_0==RULE_COMMENT_ANNOTATION||LA72_0==49||LA72_0==56||LA72_0==63||LA72_0==74) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // InternalSCTX.g:2250:1: (lv_entities_2_0= ruleTestEntity )
            	    {
            	    // InternalSCTX.g:2250:1: (lv_entities_2_0= ruleTestEntity )
            	    // InternalSCTX.g:2251:3: lv_entities_2_0= ruleTestEntity
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRootScopeAccess().getEntitiesTestEntityParserRuleCall_2_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_53);
            	    lv_entities_2_0=ruleTestEntity();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"entities",
            	              		lv_entities_2_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.TestEntity");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            // InternalSCTX.g:2267:3: (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )*
            loop73:
            do {
                int alt73=2;
                int LA73_0 = input.LA(1);

                if ( (LA73_0==48) ) {
                    alt73=1;
                }


                switch (alt73) {
            	case 1 :
            	    // InternalSCTX.g:2267:5: otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) )
            	    {
            	    otherlv_3=(Token)match(input,48,FollowSets000.FOLLOW_54); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getRootScopeAccess().getScopeKeyword_3_0());
            	          
            	    }
            	    // InternalSCTX.g:2271:1: ( (lv_scopes_4_0= ruleScope ) )
            	    // InternalSCTX.g:2272:1: (lv_scopes_4_0= ruleScope )
            	    {
            	    // InternalSCTX.g:2272:1: (lv_scopes_4_0= ruleScope )
            	    // InternalSCTX.g:2273:3: lv_scopes_4_0= ruleScope
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRootScopeAccess().getScopesScopeParserRuleCall_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_55);
            	    lv_scopes_4_0=ruleScope();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"scopes",
            	              		lv_scopes_4_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.Scope");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop73;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRootScope"


    // $ANTLR start "entryRuleScope"
    // InternalSCTX.g:2297:1: entryRuleScope returns [EObject current=null] : iv_ruleScope= ruleScope EOF ;
    public final EObject entryRuleScope() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScope = null;


        try {
            // InternalSCTX.g:2298:2: (iv_ruleScope= ruleScope EOF )
            // InternalSCTX.g:2299:2: iv_ruleScope= ruleScope EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScopeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScope=ruleScope();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScope; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScope"


    // $ANTLR start "ruleScope"
    // InternalSCTX.g:2306:1: ruleScope returns [EObject current=null] : ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' ) ;
    public final EObject ruleScope() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_declarations_3_0 = null;

        EObject lv_entities_4_0 = null;

        EObject lv_scopes_6_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:2309:28: ( ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' ) )
            // InternalSCTX.g:2310:1: ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' )
            {
            // InternalSCTX.g:2310:1: ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' )
            // InternalSCTX.g:2310:2: () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}'
            {
            // InternalSCTX.g:2310:2: ()
            // InternalSCTX.g:2311:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getScopeAccess().getKExtScopeAction_0(),
                          current);
                  
            }

            }

            // InternalSCTX.g:2319:2: ( (lv_name_1_0= RULE_ID ) )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==RULE_ID) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // InternalSCTX.g:2320:1: (lv_name_1_0= RULE_ID )
                    {
                    // InternalSCTX.g:2320:1: (lv_name_1_0= RULE_ID )
                    // InternalSCTX.g:2321:3: lv_name_1_0= RULE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_1_0, grammarAccess.getScopeAccess().getNameIDTerminalRuleCall_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getScopeRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_1_0, 
                              		"org.eclipse.xtext.common.Terminals.ID");
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_56); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getScopeAccess().getLeftCurlyBracketKeyword_2());
                  
            }
            // InternalSCTX.g:2341:1: ( (lv_declarations_3_0= ruleDeclaration ) )*
            loop75:
            do {
                int alt75=2;
                alt75 = dfa75.predict(input);
                switch (alt75) {
            	case 1 :
            	    // InternalSCTX.g:2342:1: (lv_declarations_3_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:2342:1: (lv_declarations_3_0= ruleDeclaration )
            	    // InternalSCTX.g:2343:3: lv_declarations_3_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getScopeAccess().getDeclarationsDeclarationParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_56);
            	    lv_declarations_3_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getScopeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declarations",
            	              		lv_declarations_3_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.Declaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);

            // InternalSCTX.g:2359:3: ( (lv_entities_4_0= ruleTestEntity ) )*
            loop76:
            do {
                int alt76=2;
                int LA76_0 = input.LA(1);

                if ( (LA76_0==RULE_ID||LA76_0==RULE_HOSTCODE||LA76_0==RULE_COMMENT_ANNOTATION||LA76_0==49||LA76_0==56||LA76_0==63||LA76_0==74) ) {
                    alt76=1;
                }


                switch (alt76) {
            	case 1 :
            	    // InternalSCTX.g:2360:1: (lv_entities_4_0= ruleTestEntity )
            	    {
            	    // InternalSCTX.g:2360:1: (lv_entities_4_0= ruleTestEntity )
            	    // InternalSCTX.g:2361:3: lv_entities_4_0= ruleTestEntity
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getScopeAccess().getEntitiesTestEntityParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_57);
            	    lv_entities_4_0=ruleTestEntity();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getScopeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"entities",
            	              		lv_entities_4_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.TestEntity");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop76;
                }
            } while (true);

            // InternalSCTX.g:2377:3: (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )*
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( (LA77_0==48) ) {
                    alt77=1;
                }


                switch (alt77) {
            	case 1 :
            	    // InternalSCTX.g:2377:5: otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) )
            	    {
            	    otherlv_5=(Token)match(input,48,FollowSets000.FOLLOW_54); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_5, grammarAccess.getScopeAccess().getScopeKeyword_5_0());
            	          
            	    }
            	    // InternalSCTX.g:2381:1: ( (lv_scopes_6_0= ruleScope ) )
            	    // InternalSCTX.g:2382:1: (lv_scopes_6_0= ruleScope )
            	    {
            	    // InternalSCTX.g:2382:1: (lv_scopes_6_0= ruleScope )
            	    // InternalSCTX.g:2383:3: lv_scopes_6_0= ruleScope
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getScopeAccess().getScopesScopeParserRuleCall_5_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_58);
            	    lv_scopes_6_0=ruleScope();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getScopeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"scopes",
            	              		lv_scopes_6_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.Scope");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);

            otherlv_7=(Token)match(input,19,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getScopeAccess().getRightCurlyBracketKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScope"


    // $ANTLR start "entryRuleTestEntity"
    // InternalSCTX.g:2411:1: entryRuleTestEntity returns [EObject current=null] : iv_ruleTestEntity= ruleTestEntity EOF ;
    public final EObject entryRuleTestEntity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTestEntity = null;


        try {
            // InternalSCTX.g:2412:2: (iv_ruleTestEntity= ruleTestEntity EOF )
            // InternalSCTX.g:2413:2: iv_ruleTestEntity= ruleTestEntity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTestEntityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTestEntity=ruleTestEntity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTestEntity; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTestEntity"


    // $ANTLR start "ruleTestEntity"
    // InternalSCTX.g:2420:1: ruleTestEntity returns [EObject current=null] : ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) ) ;
    public final EObject ruleTestEntity() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;

        EObject lv_effect_1_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:2423:28: ( ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) ) )
            // InternalSCTX.g:2424:1: ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) )
            {
            // InternalSCTX.g:2424:1: ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) )
            int alt78=2;
            alt78 = dfa78.predict(input);
            switch (alt78) {
                case 1 :
                    // InternalSCTX.g:2424:2: ( (lv_expression_0_0= ruleAnnotatedExpression ) )
                    {
                    // InternalSCTX.g:2424:2: ( (lv_expression_0_0= ruleAnnotatedExpression ) )
                    // InternalSCTX.g:2425:1: (lv_expression_0_0= ruleAnnotatedExpression )
                    {
                    // InternalSCTX.g:2425:1: (lv_expression_0_0= ruleAnnotatedExpression )
                    // InternalSCTX.g:2426:3: lv_expression_0_0= ruleAnnotatedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTestEntityAccess().getExpressionAnnotatedExpressionParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expression_0_0=ruleAnnotatedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTestEntityRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_0_0, 
                              		"de.cau.cs.kieler.kexpressions.kext.KExt.AnnotatedExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:2443:6: ( (lv_effect_1_0= ruleEffect ) )
                    {
                    // InternalSCTX.g:2443:6: ( (lv_effect_1_0= ruleEffect ) )
                    // InternalSCTX.g:2444:1: (lv_effect_1_0= ruleEffect )
                    {
                    // InternalSCTX.g:2444:1: (lv_effect_1_0= ruleEffect )
                    // InternalSCTX.g:2445:3: lv_effect_1_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTestEntityAccess().getEffectEffectParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_effect_1_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTestEntityRule());
                      	        }
                             		set(
                             			current, 
                             			"effect",
                              		lv_effect_1_0, 
                              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTestEntity"


    // $ANTLR start "entryRuleAnnotatedExpression"
    // InternalSCTX.g:2469:1: entryRuleAnnotatedExpression returns [EObject current=null] : iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF ;
    public final EObject entryRuleAnnotatedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedExpression = null;


        try {
            // InternalSCTX.g:2470:2: (iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF )
            // InternalSCTX.g:2471:2: iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotatedExpression=ruleAnnotatedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotatedExpression"


    // $ANTLR start "ruleAnnotatedExpression"
    // InternalSCTX.g:2478:1: ruleAnnotatedExpression returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) ) ;
    public final EObject ruleAnnotatedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:2481:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) ) )
            // InternalSCTX.g:2482:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) )
            {
            // InternalSCTX.g:2482:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) )
            // InternalSCTX.g:2482:2: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) )
            {
            // InternalSCTX.g:2482:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop79:
            do {
                int alt79=2;
                int LA79_0 = input.LA(1);

                if ( (LA79_0==RULE_COMMENT_ANNOTATION||LA79_0==74) ) {
                    alt79=1;
                }


                switch (alt79) {
            	case 1 :
            	    // InternalSCTX.g:2483:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:2483:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:2484:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_59);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAnnotatedExpressionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop79;
                }
            } while (true);

            otherlv_1=(Token)match(input,49,FollowSets000.FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAnnotatedExpressionAccess().getExpressionKeyword_1());
                  
            }
            // InternalSCTX.g:2504:1: ( (lv_expression_2_0= ruleExpression ) )
            // InternalSCTX.g:2505:1: (lv_expression_2_0= ruleExpression )
            {
            // InternalSCTX.g:2505:1: (lv_expression_2_0= ruleExpression )
            // InternalSCTX.g:2506:3: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getExpressionExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAnnotatedExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotatedExpression"


    // $ANTLR start "entryRuleDeclaration"
    // InternalSCTX.g:2530:1: entryRuleDeclaration returns [EObject current=null] : iv_ruleDeclaration= ruleDeclaration EOF ;
    public final EObject entryRuleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclaration = null;


        try {
            // InternalSCTX.g:2531:2: (iv_ruleDeclaration= ruleDeclaration EOF )
            // InternalSCTX.g:2532:2: iv_ruleDeclaration= ruleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclaration=ruleDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclaration"


    // $ANTLR start "ruleDeclaration"
    // InternalSCTX.g:2539:1: ruleDeclaration returns [EObject current=null] : (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration ) ;
    public final EObject ruleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclaration_0 = null;

        EObject this_ReferenceDeclaration_1 = null;

        EObject this_ScheduleDeclaration_2 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:2542:28: ( (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration ) )
            // InternalSCTX.g:2543:1: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration )
            {
            // InternalSCTX.g:2543:1: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration )
            int alt80=3;
            alt80 = dfa80.predict(input);
            switch (alt80) {
                case 1 :
                    // InternalSCTX.g:2544:2: this_VariableDeclaration_0= ruleVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDeclarationAccess().getVariableDeclarationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_VariableDeclaration_0=ruleVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_VariableDeclaration_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:2557:2: this_ReferenceDeclaration_1= ruleReferenceDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDeclarationAccess().getReferenceDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceDeclaration_1=ruleReferenceDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ReferenceDeclaration_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:2570:2: this_ScheduleDeclaration_2= ruleScheduleDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDeclarationAccess().getScheduleDeclarationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ScheduleDeclaration_2=ruleScheduleDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ScheduleDeclaration_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclaration"


    // $ANTLR start "entryRuleDeclarationWOSemicolon"
    // InternalSCTX.g:2589:1: entryRuleDeclarationWOSemicolon returns [EObject current=null] : iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF ;
    public final EObject entryRuleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclarationWOSemicolon = null;


        try {
            // InternalSCTX.g:2590:2: (iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF )
            // InternalSCTX.g:2591:2: iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclarationWOSemicolon=ruleDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclarationWOSemicolon"


    // $ANTLR start "ruleDeclarationWOSemicolon"
    // InternalSCTX.g:2598:1: ruleDeclarationWOSemicolon returns [EObject current=null] : (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon ) ;
    public final EObject ruleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationWOSemicolon_0 = null;

        EObject this_ReferenceDeclarationWOSemicolon_1 = null;

        EObject this_ScheduleDeclarationWOSemicolon_2 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:2601:28: ( (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon ) )
            // InternalSCTX.g:2602:1: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon )
            {
            // InternalSCTX.g:2602:1: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon )
            int alt81=3;
            alt81 = dfa81.predict(input);
            switch (alt81) {
                case 1 :
                    // InternalSCTX.g:2603:2: this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getVariableDeclarationWOSemicolonParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_VariableDeclarationWOSemicolon_0=ruleVariableDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_VariableDeclarationWOSemicolon_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:2616:2: this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getReferenceDeclarationWOSemicolonParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceDeclarationWOSemicolon_1=ruleReferenceDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ReferenceDeclarationWOSemicolon_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:2629:2: this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getScheduleDeclarationWOSemicolonParserRuleCall_2()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ScheduleDeclarationWOSemicolon_2=ruleScheduleDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ScheduleDeclarationWOSemicolon_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclarationWOSemicolon"


    // $ANTLR start "entryRuleVariableDeclaration"
    // InternalSCTX.g:2648:1: entryRuleVariableDeclaration returns [EObject current=null] : iv_ruleVariableDeclaration= ruleVariableDeclaration EOF ;
    public final EObject entryRuleVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableDeclaration = null;


        try {
            // InternalSCTX.g:2649:2: (iv_ruleVariableDeclaration= ruleVariableDeclaration EOF )
            // InternalSCTX.g:2650:2: iv_ruleVariableDeclaration= ruleVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVariableDeclaration=ruleVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableDeclaration"


    // $ANTLR start "ruleVariableDeclaration"
    // InternalSCTX.g:2657:1: ruleVariableDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_const_1_0= 'const' ) )? ( (lv_input_2_0= 'input' ) )? ( (lv_output_3_0= 'output' ) )? ( (lv_static_4_0= 'static' ) )? ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_const_1_0=null;
        Token lv_input_2_0=null;
        Token lv_output_3_0=null;
        Token lv_static_4_0=null;
        Token lv_signal_5_0=null;
        Token lv_signal_7_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_type_6_0 = null;

        EObject lv_valuedObjects_8_0 = null;

        EObject lv_valuedObjects_10_0 = null;

        EObject lv_annotations_12_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:2660:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_const_1_0= 'const' ) )? ( (lv_input_2_0= 'input' ) )? ( (lv_output_3_0= 'output' ) )? ( (lv_static_4_0= 'static' ) )? ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:2661:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_const_1_0= 'const' ) )? ( (lv_input_2_0= 'input' ) )? ( (lv_output_3_0= 'output' ) )? ( (lv_static_4_0= 'static' ) )? ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:2661:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_const_1_0= 'const' ) )? ( (lv_input_2_0= 'input' ) )? ( (lv_output_3_0= 'output' ) )? ( (lv_static_4_0= 'static' ) )? ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:2661:2: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_const_1_0= 'const' ) )? ( (lv_input_2_0= 'input' ) )? ( (lv_output_3_0= 'output' ) )? ( (lv_static_4_0= 'static' ) )? ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:2661:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop82:
            do {
                int alt82=2;
                int LA82_0 = input.LA(1);

                if ( (LA82_0==RULE_COMMENT_ANNOTATION||LA82_0==74) ) {
                    alt82=1;
                }


                switch (alt82) {
            	case 1 :
            	    // InternalSCTX.g:2662:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:2662:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:2663:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_60);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop82;
                }
            } while (true);

            // InternalSCTX.g:2679:3: ( (lv_const_1_0= 'const' ) )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==50) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalSCTX.g:2680:1: (lv_const_1_0= 'const' )
                    {
                    // InternalSCTX.g:2680:1: (lv_const_1_0= 'const' )
                    // InternalSCTX.g:2681:3: lv_const_1_0= 'const'
                    {
                    lv_const_1_0=(Token)match(input,50,FollowSets000.FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_const_1_0, grammarAccess.getVariableDeclarationAccess().getConstConstKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "const", true, "const");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2694:3: ( (lv_input_2_0= 'input' ) )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==51) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalSCTX.g:2695:1: (lv_input_2_0= 'input' )
                    {
                    // InternalSCTX.g:2695:1: (lv_input_2_0= 'input' )
                    // InternalSCTX.g:2696:3: lv_input_2_0= 'input'
                    {
                    lv_input_2_0=(Token)match(input,51,FollowSets000.FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_input_2_0, grammarAccess.getVariableDeclarationAccess().getInputInputKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "input", true, "input");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2709:3: ( (lv_output_3_0= 'output' ) )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==52) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalSCTX.g:2710:1: (lv_output_3_0= 'output' )
                    {
                    // InternalSCTX.g:2710:1: (lv_output_3_0= 'output' )
                    // InternalSCTX.g:2711:3: lv_output_3_0= 'output'
                    {
                    lv_output_3_0=(Token)match(input,52,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_output_3_0, grammarAccess.getVariableDeclarationAccess().getOutputOutputKeyword_3_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "output", true, "output");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2724:3: ( (lv_static_4_0= 'static' ) )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==53) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // InternalSCTX.g:2725:1: (lv_static_4_0= 'static' )
                    {
                    // InternalSCTX.g:2725:1: (lv_static_4_0= 'static' )
                    // InternalSCTX.g:2726:3: lv_static_4_0= 'static'
                    {
                    lv_static_4_0=(Token)match(input,53,FollowSets000.FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_static_4_0, grammarAccess.getVariableDeclarationAccess().getStaticStaticKeyword_4_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "static", true, "static");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2739:3: ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) )
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==54) ) {
                int LA88_1 = input.LA(2);

                if ( ((LA88_1>=109 && LA88_1<=115)) ) {
                    alt88=1;
                }
                else if ( (LA88_1==RULE_ID||LA88_1==RULE_COMMENT_ANNOTATION||LA88_1==74) ) {
                    alt88=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 88, 1, input);

                    throw nvae;
                }
            }
            else if ( ((LA88_0>=109 && LA88_0<=115)) ) {
                alt88=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 88, 0, input);

                throw nvae;
            }
            switch (alt88) {
                case 1 :
                    // InternalSCTX.g:2739:4: ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) )
                    {
                    // InternalSCTX.g:2739:4: ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) )
                    // InternalSCTX.g:2739:5: ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) )
                    {
                    // InternalSCTX.g:2739:5: ( (lv_signal_5_0= 'signal' ) )?
                    int alt87=2;
                    int LA87_0 = input.LA(1);

                    if ( (LA87_0==54) ) {
                        alt87=1;
                    }
                    switch (alt87) {
                        case 1 :
                            // InternalSCTX.g:2740:1: (lv_signal_5_0= 'signal' )
                            {
                            // InternalSCTX.g:2740:1: (lv_signal_5_0= 'signal' )
                            // InternalSCTX.g:2741:3: lv_signal_5_0= 'signal'
                            {
                            lv_signal_5_0=(Token)match(input,54,FollowSets000.FOLLOW_64); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_signal_5_0, grammarAccess.getVariableDeclarationAccess().getSignalSignalKeyword_5_0_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getVariableDeclarationRule());
                              	        }
                                     		setWithLastConsumed(current, "signal", true, "signal");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:2754:3: ( (lv_type_6_0= ruleValueType ) )
                    // InternalSCTX.g:2755:1: (lv_type_6_0= ruleValueType )
                    {
                    // InternalSCTX.g:2755:1: (lv_type_6_0= ruleValueType )
                    // InternalSCTX.g:2756:3: lv_type_6_0= ruleValueType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationAccess().getTypeValueTypeEnumRuleCall_5_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_65);
                    lv_type_6_0=ruleValueType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"type",
                              		lv_type_6_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.ValueType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:2773:6: ( (lv_signal_7_0= 'signal' ) )
                    {
                    // InternalSCTX.g:2773:6: ( (lv_signal_7_0= 'signal' ) )
                    // InternalSCTX.g:2774:1: (lv_signal_7_0= 'signal' )
                    {
                    // InternalSCTX.g:2774:1: (lv_signal_7_0= 'signal' )
                    // InternalSCTX.g:2775:3: lv_signal_7_0= 'signal'
                    {
                    lv_signal_7_0=(Token)match(input,54,FollowSets000.FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_signal_7_0, grammarAccess.getVariableDeclarationAccess().getSignalSignalKeyword_5_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "signal", true, "signal");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:2788:3: ( (lv_valuedObjects_8_0= ruleValuedObject ) )
            // InternalSCTX.g:2789:1: (lv_valuedObjects_8_0= ruleValuedObject )
            {
            // InternalSCTX.g:2789:1: (lv_valuedObjects_8_0= ruleValuedObject )
            // InternalSCTX.g:2790:3: lv_valuedObjects_8_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_6_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_66);
            lv_valuedObjects_8_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
              	        }
                     		add(
                     			current, 
                     			"valuedObjects",
                      		lv_valuedObjects_8_0, 
                      		"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:2806:2: (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )*
            loop89:
            do {
                int alt89=2;
                int LA89_0 = input.LA(1);

                if ( (LA89_0==27) ) {
                    alt89=1;
                }


                switch (alt89) {
            	case 1 :
            	    // InternalSCTX.g:2806:4: otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    {
            	    otherlv_9=(Token)match(input,27,FollowSets000.FOLLOW_65); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_9, grammarAccess.getVariableDeclarationAccess().getCommaKeyword_7_0());
            	          
            	    }
            	    // InternalSCTX.g:2810:1: ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    // InternalSCTX.g:2811:1: (lv_valuedObjects_10_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:2811:1: (lv_valuedObjects_10_0= ruleValuedObject )
            	    // InternalSCTX.g:2812:3: lv_valuedObjects_10_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_7_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_66);
            	    lv_valuedObjects_10_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"valuedObjects",
            	              		lv_valuedObjects_10_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop89;
                }
            } while (true);

            otherlv_11=(Token)match(input,37,FollowSets000.FOLLOW_67); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_11, grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_8());
                  
            }
            // InternalSCTX.g:2832:1: ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalSCTX.g:2833:1: (lv_annotations_12_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:2833:1: (lv_annotations_12_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:2834:3: lv_annotations_12_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_9_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_12_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
                      	        }
                             		add(
                             			current, 
                             			"annotations",
                              		lv_annotations_12_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableDeclaration"


    // $ANTLR start "entryRuleVariableDeclarationWOSemicolon"
    // InternalSCTX.g:2858:1: entryRuleVariableDeclarationWOSemicolon returns [EObject current=null] : iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF ;
    public final EObject entryRuleVariableDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableDeclarationWOSemicolon = null;


        try {
            // InternalSCTX.g:2859:2: (iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF )
            // InternalSCTX.g:2860:2: iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVariableDeclarationWOSemicolon=ruleVariableDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableDeclarationWOSemicolon"


    // $ANTLR start "ruleVariableDeclarationWOSemicolon"
    // InternalSCTX.g:2867:1: ruleVariableDeclarationWOSemicolon returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_const_1_0= 'const' ) )? ( (lv_input_2_0= 'input' ) )? ( (lv_output_3_0= 'output' ) )? ( (lv_static_4_0= 'static' ) )? ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleVariableDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token lv_const_1_0=null;
        Token lv_input_2_0=null;
        Token lv_output_3_0=null;
        Token lv_static_4_0=null;
        Token lv_signal_5_0=null;
        Token lv_signal_7_0=null;
        Token otherlv_9=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_type_6_0 = null;

        EObject lv_valuedObjects_8_0 = null;

        EObject lv_valuedObjects_10_0 = null;

        EObject lv_annotations_11_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:2870:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_const_1_0= 'const' ) )? ( (lv_input_2_0= 'input' ) )? ( (lv_output_3_0= 'output' ) )? ( (lv_static_4_0= 'static' ) )? ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:2871:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_const_1_0= 'const' ) )? ( (lv_input_2_0= 'input' ) )? ( (lv_output_3_0= 'output' ) )? ( (lv_static_4_0= 'static' ) )? ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:2871:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_const_1_0= 'const' ) )? ( (lv_input_2_0= 'input' ) )? ( (lv_output_3_0= 'output' ) )? ( (lv_static_4_0= 'static' ) )? ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:2871:2: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_const_1_0= 'const' ) )? ( (lv_input_2_0= 'input' ) )? ( (lv_output_3_0= 'output' ) )? ( (lv_static_4_0= 'static' ) )? ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:2871:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( (LA91_0==RULE_COMMENT_ANNOTATION||LA91_0==74) ) {
                    alt91=1;
                }


                switch (alt91) {
            	case 1 :
            	    // InternalSCTX.g:2872:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:2872:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:2873:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_60);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);

            // InternalSCTX.g:2889:3: ( (lv_const_1_0= 'const' ) )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==50) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // InternalSCTX.g:2890:1: (lv_const_1_0= 'const' )
                    {
                    // InternalSCTX.g:2890:1: (lv_const_1_0= 'const' )
                    // InternalSCTX.g:2891:3: lv_const_1_0= 'const'
                    {
                    lv_const_1_0=(Token)match(input,50,FollowSets000.FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_const_1_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getConstConstKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      	        }
                             		setWithLastConsumed(current, "const", true, "const");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2904:3: ( (lv_input_2_0= 'input' ) )?
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==51) ) {
                alt93=1;
            }
            switch (alt93) {
                case 1 :
                    // InternalSCTX.g:2905:1: (lv_input_2_0= 'input' )
                    {
                    // InternalSCTX.g:2905:1: (lv_input_2_0= 'input' )
                    // InternalSCTX.g:2906:3: lv_input_2_0= 'input'
                    {
                    lv_input_2_0=(Token)match(input,51,FollowSets000.FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_input_2_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getInputInputKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      	        }
                             		setWithLastConsumed(current, "input", true, "input");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2919:3: ( (lv_output_3_0= 'output' ) )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==52) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // InternalSCTX.g:2920:1: (lv_output_3_0= 'output' )
                    {
                    // InternalSCTX.g:2920:1: (lv_output_3_0= 'output' )
                    // InternalSCTX.g:2921:3: lv_output_3_0= 'output'
                    {
                    lv_output_3_0=(Token)match(input,52,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_output_3_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getOutputOutputKeyword_3_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      	        }
                             		setWithLastConsumed(current, "output", true, "output");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2934:3: ( (lv_static_4_0= 'static' ) )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==53) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // InternalSCTX.g:2935:1: (lv_static_4_0= 'static' )
                    {
                    // InternalSCTX.g:2935:1: (lv_static_4_0= 'static' )
                    // InternalSCTX.g:2936:3: lv_static_4_0= 'static'
                    {
                    lv_static_4_0=(Token)match(input,53,FollowSets000.FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_static_4_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getStaticStaticKeyword_4_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      	        }
                             		setWithLastConsumed(current, "static", true, "static");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2949:3: ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) )
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==54) ) {
                int LA97_1 = input.LA(2);

                if ( (LA97_1==RULE_ID||LA97_1==RULE_COMMENT_ANNOTATION||LA97_1==74) ) {
                    alt97=2;
                }
                else if ( ((LA97_1>=109 && LA97_1<=115)) ) {
                    alt97=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 97, 1, input);

                    throw nvae;
                }
            }
            else if ( ((LA97_0>=109 && LA97_0<=115)) ) {
                alt97=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 97, 0, input);

                throw nvae;
            }
            switch (alt97) {
                case 1 :
                    // InternalSCTX.g:2949:4: ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) )
                    {
                    // InternalSCTX.g:2949:4: ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) )
                    // InternalSCTX.g:2949:5: ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) )
                    {
                    // InternalSCTX.g:2949:5: ( (lv_signal_5_0= 'signal' ) )?
                    int alt96=2;
                    int LA96_0 = input.LA(1);

                    if ( (LA96_0==54) ) {
                        alt96=1;
                    }
                    switch (alt96) {
                        case 1 :
                            // InternalSCTX.g:2950:1: (lv_signal_5_0= 'signal' )
                            {
                            // InternalSCTX.g:2950:1: (lv_signal_5_0= 'signal' )
                            // InternalSCTX.g:2951:3: lv_signal_5_0= 'signal'
                            {
                            lv_signal_5_0=(Token)match(input,54,FollowSets000.FOLLOW_64); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_signal_5_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalSignalKeyword_5_0_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                              	        }
                                     		setWithLastConsumed(current, "signal", true, "signal");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:2964:3: ( (lv_type_6_0= ruleValueType ) )
                    // InternalSCTX.g:2965:1: (lv_type_6_0= ruleValueType )
                    {
                    // InternalSCTX.g:2965:1: (lv_type_6_0= ruleValueType )
                    // InternalSCTX.g:2966:3: lv_type_6_0= ruleValueType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getTypeValueTypeEnumRuleCall_5_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_65);
                    lv_type_6_0=ruleValueType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      	        }
                             		set(
                             			current, 
                             			"type",
                              		lv_type_6_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.ValueType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:2983:6: ( (lv_signal_7_0= 'signal' ) )
                    {
                    // InternalSCTX.g:2983:6: ( (lv_signal_7_0= 'signal' ) )
                    // InternalSCTX.g:2984:1: (lv_signal_7_0= 'signal' )
                    {
                    // InternalSCTX.g:2984:1: (lv_signal_7_0= 'signal' )
                    // InternalSCTX.g:2985:3: lv_signal_7_0= 'signal'
                    {
                    lv_signal_7_0=(Token)match(input,54,FollowSets000.FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_signal_7_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalSignalKeyword_5_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      	        }
                             		setWithLastConsumed(current, "signal", true, "signal");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:2998:3: ( (lv_valuedObjects_8_0= ruleValuedObject ) )
            // InternalSCTX.g:2999:1: (lv_valuedObjects_8_0= ruleValuedObject )
            {
            // InternalSCTX.g:2999:1: (lv_valuedObjects_8_0= ruleValuedObject )
            // InternalSCTX.g:3000:3: lv_valuedObjects_8_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_6_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_68);
            lv_valuedObjects_8_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
              	        }
                     		add(
                     			current, 
                     			"valuedObjects",
                      		lv_valuedObjects_8_0, 
                      		"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:3016:2: (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )*
            loop98:
            do {
                int alt98=2;
                int LA98_0 = input.LA(1);

                if ( (LA98_0==27) ) {
                    alt98=1;
                }


                switch (alt98) {
            	case 1 :
            	    // InternalSCTX.g:3016:4: otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    {
            	    otherlv_9=(Token)match(input,27,FollowSets000.FOLLOW_65); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_9, grammarAccess.getVariableDeclarationWOSemicolonAccess().getCommaKeyword_7_0());
            	          
            	    }
            	    // InternalSCTX.g:3020:1: ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    // InternalSCTX.g:3021:1: (lv_valuedObjects_10_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:3021:1: (lv_valuedObjects_10_0= ruleValuedObject )
            	    // InternalSCTX.g:3022:3: lv_valuedObjects_10_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_7_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_68);
            	    lv_valuedObjects_10_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"valuedObjects",
            	              		lv_valuedObjects_10_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop98;
                }
            } while (true);

            // InternalSCTX.g:3038:4: ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt99=1;
            }
            switch (alt99) {
                case 1 :
                    // InternalSCTX.g:3039:1: (lv_annotations_11_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:3039:1: (lv_annotations_11_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:3040:3: lv_annotations_11_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_8_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_11_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      	        }
                             		add(
                             			current, 
                             			"annotations",
                              		lv_annotations_11_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableDeclarationWOSemicolon"


    // $ANTLR start "entryRuleNamespaceID"
    // InternalSCTX.g:3064:1: entryRuleNamespaceID returns [String current=null] : iv_ruleNamespaceID= ruleNamespaceID EOF ;
    public final String entryRuleNamespaceID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNamespaceID = null;


        try {
            // InternalSCTX.g:3065:2: (iv_ruleNamespaceID= ruleNamespaceID EOF )
            // InternalSCTX.g:3066:2: iv_ruleNamespaceID= ruleNamespaceID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNamespaceID=ruleNamespaceID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespaceID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamespaceID"


    // $ANTLR start "ruleNamespaceID"
    // InternalSCTX.g:3073:1: ruleNamespaceID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (kw= ':' this_PrimeID_2= rulePrimeID )* ) ;
    public final AntlrDatatypeRuleToken ruleNamespaceID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;
        AntlrDatatypeRuleToken this_PrimeID_2 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:3076:28: ( (this_ID_0= RULE_ID (kw= ':' this_PrimeID_2= rulePrimeID )* ) )
            // InternalSCTX.g:3077:1: (this_ID_0= RULE_ID (kw= ':' this_PrimeID_2= rulePrimeID )* )
            {
            // InternalSCTX.g:3077:1: (this_ID_0= RULE_ID (kw= ':' this_PrimeID_2= rulePrimeID )* )
            // InternalSCTX.g:3077:6: this_ID_0= RULE_ID (kw= ':' this_PrimeID_2= rulePrimeID )*
            {
            this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_69); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ID_0, grammarAccess.getNamespaceIDAccess().getIDTerminalRuleCall_0()); 
                  
            }
            // InternalSCTX.g:3084:1: (kw= ':' this_PrimeID_2= rulePrimeID )*
            loop100:
            do {
                int alt100=2;
                int LA100_0 = input.LA(1);

                if ( (LA100_0==46) ) {
                    alt100=1;
                }


                switch (alt100) {
            	case 1 :
            	    // InternalSCTX.g:3085:2: kw= ':' this_PrimeID_2= rulePrimeID
            	    {
            	    kw=(Token)match(input,46,FollowSets000.FOLLOW_65); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              current.merge(kw);
            	              newLeafNode(kw, grammarAccess.getNamespaceIDAccess().getColonKeyword_1_0()); 
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	              newCompositeNode(grammarAccess.getNamespaceIDAccess().getPrimeIDParserRuleCall_1_1()); 
            	          
            	    }
            	    pushFollow(FollowSets000.FOLLOW_69);
            	    this_PrimeID_2=rulePrimeID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_PrimeID_2);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	              afterParserOrEnumRuleCall();
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop100;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceID"


    // $ANTLR start "entryRuleReferenceDeclaration"
    // InternalSCTX.g:3109:1: entryRuleReferenceDeclaration returns [EObject current=null] : iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF ;
    public final EObject entryRuleReferenceDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceDeclaration = null;


        try {
            // InternalSCTX.g:3110:2: (iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF )
            // InternalSCTX.g:3111:2: iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceDeclaration=ruleReferenceDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceDeclaration"


    // $ANTLR start "ruleReferenceDeclaration"
    // InternalSCTX.g:3118:1: ruleReferenceDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* otherlv_8= ';' ( (lv_annotations_9_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleReferenceDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_extern_4_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_valuedObjects_5_0 = null;

        EObject lv_valuedObjects_7_0 = null;

        EObject lv_annotations_9_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:3121:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* otherlv_8= ';' ( (lv_annotations_9_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:3122:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* otherlv_8= ';' ( (lv_annotations_9_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:3122:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* otherlv_8= ';' ( (lv_annotations_9_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:3122:2: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* otherlv_8= ';' ( (lv_annotations_9_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:3122:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop101:
            do {
                int alt101=2;
                int LA101_0 = input.LA(1);

                if ( (LA101_0==RULE_COMMENT_ANNOTATION||LA101_0==74) ) {
                    alt101=1;
                }


                switch (alt101) {
            	case 1 :
            	    // InternalSCTX.g:3123:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:3123:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:3124:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_70);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop101;
                }
            } while (true);

            // InternalSCTX.g:3140:3: ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) )
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==55) ) {
                alt102=1;
            }
            else if ( (LA102_0==56) ) {
                alt102=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 102, 0, input);

                throw nvae;
            }
            switch (alt102) {
                case 1 :
                    // InternalSCTX.g:3140:4: (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) )
                    {
                    // InternalSCTX.g:3140:4: (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) )
                    // InternalSCTX.g:3140:6: otherlv_1= 'ref' ( ( ruleNamespaceID ) )
                    {
                    otherlv_1=(Token)match(input,55,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getReferenceDeclarationAccess().getRefKeyword_1_0_0());
                          
                    }
                    // InternalSCTX.g:3144:1: ( ( ruleNamespaceID ) )
                    // InternalSCTX.g:3145:1: ( ruleNamespaceID )
                    {
                    // InternalSCTX.g:3145:1: ( ruleNamespaceID )
                    // InternalSCTX.g:3146:3: ruleNamespaceID
                    {
                    if ( state.backtracking==0 ) {
                       
                      		  /* */ 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getReferenceDeclarationRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getReferenceNamedObjectCrossReference_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_65);
                    ruleNamespaceID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:3163:6: (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) )
                    {
                    // InternalSCTX.g:3163:6: (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) )
                    // InternalSCTX.g:3163:8: otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,56,FollowSets000.FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getReferenceDeclarationAccess().getExternKeyword_1_1_0());
                          
                    }
                    // InternalSCTX.g:3167:1: ( (lv_extern_4_0= RULE_STRING ) )
                    // InternalSCTX.g:3168:1: (lv_extern_4_0= RULE_STRING )
                    {
                    // InternalSCTX.g:3168:1: (lv_extern_4_0= RULE_STRING )
                    // InternalSCTX.g:3169:3: lv_extern_4_0= RULE_STRING
                    {
                    lv_extern_4_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_extern_4_0, grammarAccess.getReferenceDeclarationAccess().getExternSTRINGTerminalRuleCall_1_1_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getReferenceDeclarationRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"extern",
                              		lv_extern_4_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.STRING");
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:3185:4: ( (lv_valuedObjects_5_0= ruleValuedObject ) )
            // InternalSCTX.g:3186:1: (lv_valuedObjects_5_0= ruleValuedObject )
            {
            // InternalSCTX.g:3186:1: (lv_valuedObjects_5_0= ruleValuedObject )
            // InternalSCTX.g:3187:3: lv_valuedObjects_5_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_66);
            lv_valuedObjects_5_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
              	        }
                     		add(
                     			current, 
                     			"valuedObjects",
                      		lv_valuedObjects_5_0, 
                      		"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:3203:2: (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )*
            loop103:
            do {
                int alt103=2;
                int LA103_0 = input.LA(1);

                if ( (LA103_0==27) ) {
                    alt103=1;
                }


                switch (alt103) {
            	case 1 :
            	    // InternalSCTX.g:3203:4: otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) )
            	    {
            	    otherlv_6=(Token)match(input,27,FollowSets000.FOLLOW_65); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_6, grammarAccess.getReferenceDeclarationAccess().getCommaKeyword_3_0());
            	          
            	    }
            	    // InternalSCTX.g:3207:1: ( (lv_valuedObjects_7_0= ruleValuedObject ) )
            	    // InternalSCTX.g:3208:1: (lv_valuedObjects_7_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:3208:1: (lv_valuedObjects_7_0= ruleValuedObject )
            	    // InternalSCTX.g:3209:3: lv_valuedObjects_7_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_66);
            	    lv_valuedObjects_7_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"valuedObjects",
            	              		lv_valuedObjects_7_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop103;
                }
            } while (true);

            otherlv_8=(Token)match(input,37,FollowSets000.FOLLOW_67); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getReferenceDeclarationAccess().getSemicolonKeyword_4());
                  
            }
            // InternalSCTX.g:3229:1: ( (lv_annotations_9_0= ruleCommentAnnotatonSL ) )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalSCTX.g:3230:1: (lv_annotations_9_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:3230:1: (lv_annotations_9_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:3231:3: lv_annotations_9_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_5_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_9_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                      	        }
                             		add(
                             			current, 
                             			"annotations",
                              		lv_annotations_9_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceDeclaration"


    // $ANTLR start "entryRuleReferenceDeclarationWOSemicolon"
    // InternalSCTX.g:3255:1: entryRuleReferenceDeclarationWOSemicolon returns [EObject current=null] : iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF ;
    public final EObject entryRuleReferenceDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceDeclarationWOSemicolon = null;


        try {
            // InternalSCTX.g:3256:2: (iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF )
            // InternalSCTX.g:3257:2: iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceDeclarationWOSemicolon=ruleReferenceDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceDeclarationWOSemicolon"


    // $ANTLR start "ruleReferenceDeclarationWOSemicolon"
    // InternalSCTX.g:3264:1: ruleReferenceDeclarationWOSemicolon returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* ( (lv_annotations_8_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleReferenceDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_extern_4_0=null;
        Token otherlv_6=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_valuedObjects_5_0 = null;

        EObject lv_valuedObjects_7_0 = null;

        EObject lv_annotations_8_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:3267:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* ( (lv_annotations_8_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:3268:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* ( (lv_annotations_8_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:3268:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* ( (lv_annotations_8_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:3268:2: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* ( (lv_annotations_8_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:3268:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop105:
            do {
                int alt105=2;
                int LA105_0 = input.LA(1);

                if ( (LA105_0==RULE_COMMENT_ANNOTATION||LA105_0==74) ) {
                    alt105=1;
                }


                switch (alt105) {
            	case 1 :
            	    // InternalSCTX.g:3269:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:3269:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:3270:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_70);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop105;
                }
            } while (true);

            // InternalSCTX.g:3286:3: ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) )
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==55) ) {
                alt106=1;
            }
            else if ( (LA106_0==56) ) {
                alt106=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 106, 0, input);

                throw nvae;
            }
            switch (alt106) {
                case 1 :
                    // InternalSCTX.g:3286:4: (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) )
                    {
                    // InternalSCTX.g:3286:4: (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) )
                    // InternalSCTX.g:3286:6: otherlv_1= 'ref' ( ( ruleNamespaceID ) )
                    {
                    otherlv_1=(Token)match(input,55,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getRefKeyword_1_0_0());
                          
                    }
                    // InternalSCTX.g:3290:1: ( ( ruleNamespaceID ) )
                    // InternalSCTX.g:3291:1: ( ruleNamespaceID )
                    {
                    // InternalSCTX.g:3291:1: ( ruleNamespaceID )
                    // InternalSCTX.g:3292:3: ruleNamespaceID
                    {
                    if ( state.backtracking==0 ) {
                       
                      		  /* */ 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getReferenceNamedObjectCrossReference_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_65);
                    ruleNamespaceID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:3309:6: (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) )
                    {
                    // InternalSCTX.g:3309:6: (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) )
                    // InternalSCTX.g:3309:8: otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,56,FollowSets000.FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternKeyword_1_1_0());
                          
                    }
                    // InternalSCTX.g:3313:1: ( (lv_extern_4_0= RULE_STRING ) )
                    // InternalSCTX.g:3314:1: (lv_extern_4_0= RULE_STRING )
                    {
                    // InternalSCTX.g:3314:1: (lv_extern_4_0= RULE_STRING )
                    // InternalSCTX.g:3315:3: lv_extern_4_0= RULE_STRING
                    {
                    lv_extern_4_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_extern_4_0, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternSTRINGTerminalRuleCall_1_1_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"extern",
                              		lv_extern_4_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.STRING");
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:3331:4: ( (lv_valuedObjects_5_0= ruleValuedObject ) )
            // InternalSCTX.g:3332:1: (lv_valuedObjects_5_0= ruleValuedObject )
            {
            // InternalSCTX.g:3332:1: (lv_valuedObjects_5_0= ruleValuedObject )
            // InternalSCTX.g:3333:3: lv_valuedObjects_5_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_68);
            lv_valuedObjects_5_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
              	        }
                     		add(
                     			current, 
                     			"valuedObjects",
                      		lv_valuedObjects_5_0, 
                      		"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:3349:2: (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )*
            loop107:
            do {
                int alt107=2;
                int LA107_0 = input.LA(1);

                if ( (LA107_0==27) ) {
                    alt107=1;
                }


                switch (alt107) {
            	case 1 :
            	    // InternalSCTX.g:3349:4: otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) )
            	    {
            	    otherlv_6=(Token)match(input,27,FollowSets000.FOLLOW_65); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_6, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getCommaKeyword_3_0());
            	          
            	    }
            	    // InternalSCTX.g:3353:1: ( (lv_valuedObjects_7_0= ruleValuedObject ) )
            	    // InternalSCTX.g:3354:1: (lv_valuedObjects_7_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:3354:1: (lv_valuedObjects_7_0= ruleValuedObject )
            	    // InternalSCTX.g:3355:3: lv_valuedObjects_7_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_68);
            	    lv_valuedObjects_7_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"valuedObjects",
            	              		lv_valuedObjects_7_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop107;
                }
            } while (true);

            // InternalSCTX.g:3371:4: ( (lv_annotations_8_0= ruleCommentAnnotatonSL ) )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalSCTX.g:3372:1: (lv_annotations_8_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:3372:1: (lv_annotations_8_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:3373:3: lv_annotations_8_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_4_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_8_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      	        }
                             		add(
                             			current, 
                             			"annotations",
                              		lv_annotations_8_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceDeclarationWOSemicolon"


    // $ANTLR start "entryRuleScheduleDeclaration"
    // InternalSCTX.g:3397:1: entryRuleScheduleDeclaration returns [EObject current=null] : iv_ruleScheduleDeclaration= ruleScheduleDeclaration EOF ;
    public final EObject entryRuleScheduleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScheduleDeclaration = null;


        try {
            // InternalSCTX.g:3398:2: (iv_ruleScheduleDeclaration= ruleScheduleDeclaration EOF )
            // InternalSCTX.g:3399:2: iv_ruleScheduleDeclaration= ruleScheduleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScheduleDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScheduleDeclaration=ruleScheduleDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScheduleDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScheduleDeclaration"


    // $ANTLR start "ruleScheduleDeclaration"
    // InternalSCTX.g:3406:1: ruleScheduleDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'schedule' ( (lv_name_2_0= rulePrimeID ) ) ( (lv_global_3_0= ruleSchedulePriorityType ) )? ( (lv_priorities_4_0= ruleSchedulePriority ) )* ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* otherlv_8= ';' ( (lv_annotations_9_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleScheduleDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        Enumerator lv_global_3_0 = null;

        EObject lv_priorities_4_0 = null;

        EObject lv_valuedObjects_5_0 = null;

        EObject lv_valuedObjects_7_0 = null;

        EObject lv_annotations_9_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:3409:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'schedule' ( (lv_name_2_0= rulePrimeID ) ) ( (lv_global_3_0= ruleSchedulePriorityType ) )? ( (lv_priorities_4_0= ruleSchedulePriority ) )* ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* otherlv_8= ';' ( (lv_annotations_9_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:3410:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'schedule' ( (lv_name_2_0= rulePrimeID ) ) ( (lv_global_3_0= ruleSchedulePriorityType ) )? ( (lv_priorities_4_0= ruleSchedulePriority ) )* ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* otherlv_8= ';' ( (lv_annotations_9_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:3410:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'schedule' ( (lv_name_2_0= rulePrimeID ) ) ( (lv_global_3_0= ruleSchedulePriorityType ) )? ( (lv_priorities_4_0= ruleSchedulePriority ) )* ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* otherlv_8= ';' ( (lv_annotations_9_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:3410:2: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'schedule' ( (lv_name_2_0= rulePrimeID ) ) ( (lv_global_3_0= ruleSchedulePriorityType ) )? ( (lv_priorities_4_0= ruleSchedulePriority ) )* ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* otherlv_8= ';' ( (lv_annotations_9_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:3410:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop109:
            do {
                int alt109=2;
                int LA109_0 = input.LA(1);

                if ( (LA109_0==RULE_COMMENT_ANNOTATION||LA109_0==74) ) {
                    alt109=1;
                }


                switch (alt109) {
            	case 1 :
            	    // InternalSCTX.g:3411:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:3411:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:3412:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_71);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop109;
                }
            } while (true);

            otherlv_1=(Token)match(input,57,FollowSets000.FOLLOW_65); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getScheduleDeclarationAccess().getScheduleKeyword_1());
                  
            }
            // InternalSCTX.g:3432:1: ( (lv_name_2_0= rulePrimeID ) )
            // InternalSCTX.g:3433:1: (lv_name_2_0= rulePrimeID )
            {
            // InternalSCTX.g:3433:1: (lv_name_2_0= rulePrimeID )
            // InternalSCTX.g:3434:3: lv_name_2_0= rulePrimeID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getNamePrimeIDParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_72);
            lv_name_2_0=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:3450:2: ( (lv_global_3_0= ruleSchedulePriorityType ) )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( ((LA110_0>=89 && LA110_0<=90)) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // InternalSCTX.g:3451:1: (lv_global_3_0= ruleSchedulePriorityType )
                    {
                    // InternalSCTX.g:3451:1: (lv_global_3_0= ruleSchedulePriorityType )
                    // InternalSCTX.g:3452:3: lv_global_3_0= ruleSchedulePriorityType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getGlobalSchedulePriorityTypeEnumRuleCall_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_73);
                    lv_global_3_0=ruleSchedulePriorityType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"global",
                              		lv_global_3_0, 
                              		"de.cau.cs.kieler.kexpressions.kext.KExt.SchedulePriorityType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3468:3: ( (lv_priorities_4_0= ruleSchedulePriority ) )*
            loop111:
            do {
                int alt111=2;
                int LA111_0 = input.LA(1);

                if ( (LA111_0==58) ) {
                    alt111=1;
                }


                switch (alt111) {
            	case 1 :
            	    // InternalSCTX.g:3469:1: (lv_priorities_4_0= ruleSchedulePriority )
            	    {
            	    // InternalSCTX.g:3469:1: (lv_priorities_4_0= ruleSchedulePriority )
            	    // InternalSCTX.g:3470:3: lv_priorities_4_0= ruleSchedulePriority
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getPrioritiesSchedulePriorityParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_73);
            	    lv_priorities_4_0=ruleSchedulePriority();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"priorities",
            	              		lv_priorities_4_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.SchedulePriority");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop111;
                }
            } while (true);

            // InternalSCTX.g:3486:3: ( (lv_valuedObjects_5_0= ruleValuedObject ) )
            // InternalSCTX.g:3487:1: (lv_valuedObjects_5_0= ruleValuedObject )
            {
            // InternalSCTX.g:3487:1: (lv_valuedObjects_5_0= ruleValuedObject )
            // InternalSCTX.g:3488:3: lv_valuedObjects_5_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_66);
            lv_valuedObjects_5_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
              	        }
                     		add(
                     			current, 
                     			"valuedObjects",
                      		lv_valuedObjects_5_0, 
                      		"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:3504:2: (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )*
            loop112:
            do {
                int alt112=2;
                int LA112_0 = input.LA(1);

                if ( (LA112_0==27) ) {
                    alt112=1;
                }


                switch (alt112) {
            	case 1 :
            	    // InternalSCTX.g:3504:4: otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) )
            	    {
            	    otherlv_6=(Token)match(input,27,FollowSets000.FOLLOW_65); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_6, grammarAccess.getScheduleDeclarationAccess().getCommaKeyword_6_0());
            	          
            	    }
            	    // InternalSCTX.g:3508:1: ( (lv_valuedObjects_7_0= ruleValuedObject ) )
            	    // InternalSCTX.g:3509:1: (lv_valuedObjects_7_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:3509:1: (lv_valuedObjects_7_0= ruleValuedObject )
            	    // InternalSCTX.g:3510:3: lv_valuedObjects_7_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_6_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_66);
            	    lv_valuedObjects_7_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"valuedObjects",
            	              		lv_valuedObjects_7_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop112;
                }
            } while (true);

            otherlv_8=(Token)match(input,37,FollowSets000.FOLLOW_67); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getScheduleDeclarationAccess().getSemicolonKeyword_7());
                  
            }
            // InternalSCTX.g:3530:1: ( (lv_annotations_9_0= ruleCommentAnnotatonSL ) )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalSCTX.g:3531:1: (lv_annotations_9_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:3531:1: (lv_annotations_9_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:3532:3: lv_annotations_9_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_8_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_9_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      	        }
                             		add(
                             			current, 
                             			"annotations",
                              		lv_annotations_9_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScheduleDeclaration"


    // $ANTLR start "entryRuleScheduleDeclarationWOSemicolon"
    // InternalSCTX.g:3556:1: entryRuleScheduleDeclarationWOSemicolon returns [EObject current=null] : iv_ruleScheduleDeclarationWOSemicolon= ruleScheduleDeclarationWOSemicolon EOF ;
    public final EObject entryRuleScheduleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScheduleDeclarationWOSemicolon = null;


        try {
            // InternalSCTX.g:3557:2: (iv_ruleScheduleDeclarationWOSemicolon= ruleScheduleDeclarationWOSemicolon EOF )
            // InternalSCTX.g:3558:2: iv_ruleScheduleDeclarationWOSemicolon= ruleScheduleDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScheduleDeclarationWOSemicolon=ruleScheduleDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScheduleDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScheduleDeclarationWOSemicolon"


    // $ANTLR start "ruleScheduleDeclarationWOSemicolon"
    // InternalSCTX.g:3565:1: ruleScheduleDeclarationWOSemicolon returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'schedule' ( (lv_name_2_0= rulePrimeID ) ) ( (lv_global_3_0= ruleSchedulePriorityType ) )? ( (lv_priorities_4_0= ruleSchedulePriority ) )* ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* ( (lv_annotations_8_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleScheduleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_6=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        Enumerator lv_global_3_0 = null;

        EObject lv_priorities_4_0 = null;

        EObject lv_valuedObjects_5_0 = null;

        EObject lv_valuedObjects_7_0 = null;

        EObject lv_annotations_8_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:3568:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'schedule' ( (lv_name_2_0= rulePrimeID ) ) ( (lv_global_3_0= ruleSchedulePriorityType ) )? ( (lv_priorities_4_0= ruleSchedulePriority ) )* ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* ( (lv_annotations_8_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:3569:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'schedule' ( (lv_name_2_0= rulePrimeID ) ) ( (lv_global_3_0= ruleSchedulePriorityType ) )? ( (lv_priorities_4_0= ruleSchedulePriority ) )* ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* ( (lv_annotations_8_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:3569:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'schedule' ( (lv_name_2_0= rulePrimeID ) ) ( (lv_global_3_0= ruleSchedulePriorityType ) )? ( (lv_priorities_4_0= ruleSchedulePriority ) )* ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* ( (lv_annotations_8_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:3569:2: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'schedule' ( (lv_name_2_0= rulePrimeID ) ) ( (lv_global_3_0= ruleSchedulePriorityType ) )? ( (lv_priorities_4_0= ruleSchedulePriority ) )* ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* ( (lv_annotations_8_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:3569:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop114:
            do {
                int alt114=2;
                int LA114_0 = input.LA(1);

                if ( (LA114_0==RULE_COMMENT_ANNOTATION||LA114_0==74) ) {
                    alt114=1;
                }


                switch (alt114) {
            	case 1 :
            	    // InternalSCTX.g:3570:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:3570:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:3571:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_71);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop114;
                }
            } while (true);

            otherlv_1=(Token)match(input,57,FollowSets000.FOLLOW_65); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getScheduleKeyword_1());
                  
            }
            // InternalSCTX.g:3591:1: ( (lv_name_2_0= rulePrimeID ) )
            // InternalSCTX.g:3592:1: (lv_name_2_0= rulePrimeID )
            {
            // InternalSCTX.g:3592:1: (lv_name_2_0= rulePrimeID )
            // InternalSCTX.g:3593:3: lv_name_2_0= rulePrimeID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getNamePrimeIDParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_72);
            lv_name_2_0=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:3609:2: ( (lv_global_3_0= ruleSchedulePriorityType ) )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( ((LA115_0>=89 && LA115_0<=90)) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // InternalSCTX.g:3610:1: (lv_global_3_0= ruleSchedulePriorityType )
                    {
                    // InternalSCTX.g:3610:1: (lv_global_3_0= ruleSchedulePriorityType )
                    // InternalSCTX.g:3611:3: lv_global_3_0= ruleSchedulePriorityType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getGlobalSchedulePriorityTypeEnumRuleCall_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_73);
                    lv_global_3_0=ruleSchedulePriorityType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      	        }
                             		set(
                             			current, 
                             			"global",
                              		lv_global_3_0, 
                              		"de.cau.cs.kieler.kexpressions.kext.KExt.SchedulePriorityType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3627:3: ( (lv_priorities_4_0= ruleSchedulePriority ) )*
            loop116:
            do {
                int alt116=2;
                int LA116_0 = input.LA(1);

                if ( (LA116_0==58) ) {
                    alt116=1;
                }


                switch (alt116) {
            	case 1 :
            	    // InternalSCTX.g:3628:1: (lv_priorities_4_0= ruleSchedulePriority )
            	    {
            	    // InternalSCTX.g:3628:1: (lv_priorities_4_0= ruleSchedulePriority )
            	    // InternalSCTX.g:3629:3: lv_priorities_4_0= ruleSchedulePriority
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getPrioritiesSchedulePriorityParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_73);
            	    lv_priorities_4_0=ruleSchedulePriority();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"priorities",
            	              		lv_priorities_4_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.SchedulePriority");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop116;
                }
            } while (true);

            // InternalSCTX.g:3645:3: ( (lv_valuedObjects_5_0= ruleValuedObject ) )
            // InternalSCTX.g:3646:1: (lv_valuedObjects_5_0= ruleValuedObject )
            {
            // InternalSCTX.g:3646:1: (lv_valuedObjects_5_0= ruleValuedObject )
            // InternalSCTX.g:3647:3: lv_valuedObjects_5_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_68);
            lv_valuedObjects_5_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
              	        }
                     		add(
                     			current, 
                     			"valuedObjects",
                      		lv_valuedObjects_5_0, 
                      		"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:3663:2: (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )*
            loop117:
            do {
                int alt117=2;
                int LA117_0 = input.LA(1);

                if ( (LA117_0==27) ) {
                    alt117=1;
                }


                switch (alt117) {
            	case 1 :
            	    // InternalSCTX.g:3663:4: otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) )
            	    {
            	    otherlv_6=(Token)match(input,27,FollowSets000.FOLLOW_65); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_6, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getCommaKeyword_6_0());
            	          
            	    }
            	    // InternalSCTX.g:3667:1: ( (lv_valuedObjects_7_0= ruleValuedObject ) )
            	    // InternalSCTX.g:3668:1: (lv_valuedObjects_7_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:3668:1: (lv_valuedObjects_7_0= ruleValuedObject )
            	    // InternalSCTX.g:3669:3: lv_valuedObjects_7_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_6_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_68);
            	    lv_valuedObjects_7_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"valuedObjects",
            	              		lv_valuedObjects_7_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop117;
                }
            } while (true);

            // InternalSCTX.g:3685:4: ( (lv_annotations_8_0= ruleCommentAnnotatonSL ) )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalSCTX.g:3686:1: (lv_annotations_8_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:3686:1: (lv_annotations_8_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:3687:3: lv_annotations_8_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_7_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_8_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      	        }
                             		add(
                             			current, 
                             			"annotations",
                              		lv_annotations_8_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScheduleDeclarationWOSemicolon"


    // $ANTLR start "entryRuleSchedulePriority"
    // InternalSCTX.g:3711:1: entryRuleSchedulePriority returns [EObject current=null] : iv_ruleSchedulePriority= ruleSchedulePriority EOF ;
    public final EObject entryRuleSchedulePriority() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSchedulePriority = null;


        try {
            // InternalSCTX.g:3712:2: (iv_ruleSchedulePriority= ruleSchedulePriority EOF )
            // InternalSCTX.g:3713:2: iv_ruleSchedulePriority= ruleSchedulePriority EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSchedulePriorityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSchedulePriority=ruleSchedulePriority();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSchedulePriority; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSchedulePriority"


    // $ANTLR start "ruleSchedulePriority"
    // InternalSCTX.g:3720:1: ruleSchedulePriority returns [EObject current=null] : (otherlv_0= 'prio' ( (lv_priority_1_0= RULE_INT ) ) ( (lv_type_2_0= ruleSchedulePriorityType ) ) ) ;
    public final EObject ruleSchedulePriority() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_priority_1_0=null;
        Enumerator lv_type_2_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:3723:28: ( (otherlv_0= 'prio' ( (lv_priority_1_0= RULE_INT ) ) ( (lv_type_2_0= ruleSchedulePriorityType ) ) ) )
            // InternalSCTX.g:3724:1: (otherlv_0= 'prio' ( (lv_priority_1_0= RULE_INT ) ) ( (lv_type_2_0= ruleSchedulePriorityType ) ) )
            {
            // InternalSCTX.g:3724:1: (otherlv_0= 'prio' ( (lv_priority_1_0= RULE_INT ) ) ( (lv_type_2_0= ruleSchedulePriorityType ) ) )
            // InternalSCTX.g:3724:3: otherlv_0= 'prio' ( (lv_priority_1_0= RULE_INT ) ) ( (lv_type_2_0= ruleSchedulePriorityType ) )
            {
            otherlv_0=(Token)match(input,58,FollowSets000.FOLLOW_74); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getSchedulePriorityAccess().getPrioKeyword_0());
                  
            }
            // InternalSCTX.g:3728:1: ( (lv_priority_1_0= RULE_INT ) )
            // InternalSCTX.g:3729:1: (lv_priority_1_0= RULE_INT )
            {
            // InternalSCTX.g:3729:1: (lv_priority_1_0= RULE_INT )
            // InternalSCTX.g:3730:3: lv_priority_1_0= RULE_INT
            {
            lv_priority_1_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_75); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_priority_1_0, grammarAccess.getSchedulePriorityAccess().getPriorityINTTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getSchedulePriorityRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"priority",
                      		lv_priority_1_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.INT");
              	    
            }

            }


            }

            // InternalSCTX.g:3746:2: ( (lv_type_2_0= ruleSchedulePriorityType ) )
            // InternalSCTX.g:3747:1: (lv_type_2_0= ruleSchedulePriorityType )
            {
            // InternalSCTX.g:3747:1: (lv_type_2_0= ruleSchedulePriorityType )
            // InternalSCTX.g:3748:3: lv_type_2_0= ruleSchedulePriorityType
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSchedulePriorityAccess().getTypeSchedulePriorityTypeEnumRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_type_2_0=ruleSchedulePriorityType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSchedulePriorityRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_2_0, 
                      		"de.cau.cs.kieler.kexpressions.kext.KExt.SchedulePriorityType");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSchedulePriority"


    // $ANTLR start "entryRuleValuedObject"
    // InternalSCTX.g:3772:1: entryRuleValuedObject returns [EObject current=null] : iv_ruleValuedObject= ruleValuedObject EOF ;
    public final EObject entryRuleValuedObject() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObject = null;


        try {
            // InternalSCTX.g:3773:2: (iv_ruleValuedObject= ruleValuedObject EOF )
            // InternalSCTX.g:3774:2: iv_ruleValuedObject= ruleValuedObject EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObject=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObject; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObject"


    // $ANTLR start "ruleValuedObject"
    // InternalSCTX.g:3781:1: ruleValuedObject returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? ) ;
    public final EObject ruleValuedObject() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_cardinalities_3_0 = null;

        EObject lv_initialValue_6_0 = null;

        Enumerator lv_combineOperator_8_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:3784:28: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? ) )
            // InternalSCTX.g:3785:1: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? )
            {
            // InternalSCTX.g:3785:1: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? )
            // InternalSCTX.g:3785:2: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )?
            {
            // InternalSCTX.g:3785:2: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop119:
            do {
                int alt119=2;
                int LA119_0 = input.LA(1);

                if ( (LA119_0==RULE_COMMENT_ANNOTATION||LA119_0==74) ) {
                    alt119=1;
                }


                switch (alt119) {
            	case 1 :
            	    // InternalSCTX.g:3786:1: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalSCTX.g:3786:1: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalSCTX.g:3787:3: lv_annotations_0_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getValuedObjectAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_65);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getValuedObjectRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.QuotedStringAnnotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop119;
                }
            } while (true);

            // InternalSCTX.g:3803:3: ( (lv_name_1_0= rulePrimeID ) )
            // InternalSCTX.g:3804:1: (lv_name_1_0= rulePrimeID )
            {
            // InternalSCTX.g:3804:1: (lv_name_1_0= rulePrimeID )
            // InternalSCTX.g:3805:3: lv_name_1_0= rulePrimeID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getValuedObjectAccess().getNamePrimeIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_76);
            lv_name_1_0=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getValuedObjectRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:3821:2: (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )*
            loop120:
            do {
                int alt120=2;
                int LA120_0 = input.LA(1);

                if ( (LA120_0==32) ) {
                    alt120=1;
                }


                switch (alt120) {
            	case 1 :
            	    // InternalSCTX.g:3821:4: otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']'
            	    {
            	    otherlv_2=(Token)match(input,32,FollowSets000.FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getValuedObjectAccess().getLeftSquareBracketKeyword_2_0());
            	          
            	    }
            	    // InternalSCTX.g:3825:1: ( (lv_cardinalities_3_0= ruleExpression ) )
            	    // InternalSCTX.g:3826:1: (lv_cardinalities_3_0= ruleExpression )
            	    {
            	    // InternalSCTX.g:3826:1: (lv_cardinalities_3_0= ruleExpression )
            	    // InternalSCTX.g:3827:3: lv_cardinalities_3_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getValuedObjectAccess().getCardinalitiesExpressionParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_28);
            	    lv_cardinalities_3_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getValuedObjectRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"cardinalities",
            	              		lv_cardinalities_3_0, 
            	              		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,33,FollowSets000.FOLLOW_76); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_4, grammarAccess.getValuedObjectAccess().getRightSquareBracketKeyword_2_2());
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop120;
                }
            } while (true);

            // InternalSCTX.g:3847:3: (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==59) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // InternalSCTX.g:3847:5: otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) )
                    {
                    otherlv_5=(Token)match(input,59,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getValuedObjectAccess().getEqualsSignKeyword_3_0());
                          
                    }
                    // InternalSCTX.g:3851:1: ( (lv_initialValue_6_0= ruleExpression ) )
                    // InternalSCTX.g:3852:1: (lv_initialValue_6_0= ruleExpression )
                    {
                    // InternalSCTX.g:3852:1: (lv_initialValue_6_0= ruleExpression )
                    // InternalSCTX.g:3853:3: lv_initialValue_6_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getValuedObjectAccess().getInitialValueExpressionParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_77);
                    lv_initialValue_6_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getValuedObjectRule());
                      	        }
                             		set(
                             			current, 
                             			"initialValue",
                              		lv_initialValue_6_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:3869:4: (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==60) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // InternalSCTX.g:3869:6: otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) )
                    {
                    otherlv_7=(Token)match(input,60,FollowSets000.FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getValuedObjectAccess().getCombineKeyword_4_0());
                          
                    }
                    // InternalSCTX.g:3873:1: ( (lv_combineOperator_8_0= ruleCombineOperator ) )
                    // InternalSCTX.g:3874:1: (lv_combineOperator_8_0= ruleCombineOperator )
                    {
                    // InternalSCTX.g:3874:1: (lv_combineOperator_8_0= ruleCombineOperator )
                    // InternalSCTX.g:3875:3: lv_combineOperator_8_0= ruleCombineOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getValuedObjectAccess().getCombineOperatorCombineOperatorEnumRuleCall_4_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_combineOperator_8_0=ruleCombineOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getValuedObjectRule());
                      	        }
                             		set(
                             			current, 
                             			"combineOperator",
                              		lv_combineOperator_8_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.CombineOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObject"


    // $ANTLR start "entryRuleEffect"
    // InternalSCTX.g:3899:1: entryRuleEffect returns [EObject current=null] : iv_ruleEffect= ruleEffect EOF ;
    public final EObject entryRuleEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEffect = null;


        try {
            // InternalSCTX.g:3900:2: (iv_ruleEffect= ruleEffect EOF )
            // InternalSCTX.g:3901:2: iv_ruleEffect= ruleEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEffect=ruleEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEffect"


    // $ANTLR start "ruleEffect"
    // InternalSCTX.g:3908:1: ruleEffect returns [EObject current=null] : (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_Emission_2= ruleEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect ) ;
    public final EObject ruleEffect() throws RecognitionException {
        EObject current = null;

        EObject this_Assignment_0 = null;

        EObject this_PostfixEffect_1 = null;

        EObject this_Emission_2 = null;

        EObject this_HostcodeEffect_3 = null;

        EObject this_ReferenceCallEffect_4 = null;

        EObject this_FunctionCallEffect_5 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:3911:28: ( (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_Emission_2= ruleEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect ) )
            // InternalSCTX.g:3912:1: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_Emission_2= ruleEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect )
            {
            // InternalSCTX.g:3912:1: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_Emission_2= ruleEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect )
            int alt123=6;
            alt123 = dfa123.predict(input);
            switch (alt123) {
                case 1 :
                    // InternalSCTX.g:3913:2: this_Assignment_0= ruleAssignment
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEffectAccess().getAssignmentParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Assignment_0=ruleAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Assignment_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:3926:2: this_PostfixEffect_1= rulePostfixEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEffectAccess().getPostfixEffectParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PostfixEffect_1=rulePostfixEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_PostfixEffect_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:3939:2: this_Emission_2= ruleEmission
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEffectAccess().getEmissionParserRuleCall_2()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Emission_2=ruleEmission();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Emission_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:3952:2: this_HostcodeEffect_3= ruleHostcodeEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEffectAccess().getHostcodeEffectParserRuleCall_3()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_HostcodeEffect_3=ruleHostcodeEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_HostcodeEffect_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalSCTX.g:3965:2: this_ReferenceCallEffect_4= ruleReferenceCallEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEffectAccess().getReferenceCallEffectParserRuleCall_4()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceCallEffect_4=ruleReferenceCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ReferenceCallEffect_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalSCTX.g:3978:2: this_FunctionCallEffect_5= ruleFunctionCallEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEffectAccess().getFunctionCallEffectParserRuleCall_5()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FunctionCallEffect_5=ruleFunctionCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_FunctionCallEffect_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEffect"


    // $ANTLR start "entryRuleEmission"
    // InternalSCTX.g:3997:1: entryRuleEmission returns [EObject current=null] : iv_ruleEmission= ruleEmission EOF ;
    public final EObject entryRuleEmission() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmission = null;


        try {
            // InternalSCTX.g:3998:2: (iv_ruleEmission= ruleEmission EOF )
            // InternalSCTX.g:3999:2: iv_ruleEmission= ruleEmission EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmissionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEmission=ruleEmission();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmission; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmission"


    // $ANTLR start "ruleEmission"
    // InternalSCTX.g:4006:1: ruleEmission returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' )? (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject ruleEmission() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_newValue_3_0 = null;

        EObject lv_schedule_6_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:4009:28: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' )? (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:4010:1: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' )? (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:4010:1: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' )? (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:4010:2: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' )? (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:4010:2: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop124:
            do {
                int alt124=2;
                int LA124_0 = input.LA(1);

                if ( (LA124_0==RULE_COMMENT_ANNOTATION||LA124_0==74) ) {
                    alt124=1;
                }


                switch (alt124) {
            	case 1 :
            	    // InternalSCTX.g:4011:1: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalSCTX.g:4011:1: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalSCTX.g:4012:3: lv_annotations_0_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEmissionAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_65);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEmissionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.QuotedStringAnnotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop124;
                }
            } while (true);

            // InternalSCTX.g:4028:3: ( ( rulePrimeID ) )
            // InternalSCTX.g:4029:1: ( rulePrimeID )
            {
            // InternalSCTX.g:4029:1: ( rulePrimeID )
            // InternalSCTX.g:4030:3: rulePrimeID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getEmissionRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getEmissionAccess().getValuedObjectValuedObjectCrossReference_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_79);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:4046:2: (otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==26) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // InternalSCTX.g:4046:4: otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,26,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getEmissionAccess().getLeftParenthesisKeyword_2_0());
                          
                    }
                    // InternalSCTX.g:4050:1: ( (lv_newValue_3_0= ruleExpression ) )
                    // InternalSCTX.g:4051:1: (lv_newValue_3_0= ruleExpression )
                    {
                    // InternalSCTX.g:4051:1: (lv_newValue_3_0= ruleExpression )
                    // InternalSCTX.g:4052:3: lv_newValue_3_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getEmissionAccess().getNewValueExpressionParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_24);
                    lv_newValue_3_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getEmissionRule());
                      	        }
                             		set(
                             			current, 
                             			"newValue",
                              		lv_newValue_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,28,FollowSets000.FOLLOW_80); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getEmissionAccess().getRightParenthesisKeyword_2_2());
                          
                    }

                    }
                    break;

            }

            // InternalSCTX.g:4072:3: (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )?
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==57) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    // InternalSCTX.g:4072:5: otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_5=(Token)match(input,57,FollowSets000.FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getEmissionAccess().getScheduleKeyword_3_0());
                          
                    }
                    // InternalSCTX.g:4076:1: ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+
                    int cnt126=0;
                    loop126:
                    do {
                        int alt126=2;
                        alt126 = dfa126.predict(input);
                        switch (alt126) {
                    	case 1 :
                    	    // InternalSCTX.g:4077:1: (lv_schedule_6_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:4077:1: (lv_schedule_6_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:4078:3: lv_schedule_6_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getEmissionAccess().getScheduleScheduleObjectReferenceParserRuleCall_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_44);
                    	    lv_schedule_6_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getEmissionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"schedule",
                    	              		lv_schedule_6_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt126 >= 1 ) break loop126;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(126, input);
                                throw eee;
                        }
                        cnt126++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmission"


    // $ANTLR start "entryRuleAssignment"
    // InternalSCTX.g:4102:1: entryRuleAssignment returns [EObject current=null] : iv_ruleAssignment= ruleAssignment EOF ;
    public final EObject entryRuleAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssignment = null;


        try {
            // InternalSCTX.g:4103:2: (iv_ruleAssignment= ruleAssignment EOF )
            // InternalSCTX.g:4104:2: iv_ruleAssignment= ruleAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignmentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAssignment=ruleAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssignment; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssignment"


    // $ANTLR start "ruleAssignment"
    // InternalSCTX.g:4111:1: ruleAssignment returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* ( (lv_operator_5_0= ruleAssignOperator ) ) ( (lv_expression_6_0= ruleExpression ) ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject ruleAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_7=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_indices_3_0 = null;

        Enumerator lv_operator_5_0 = null;

        EObject lv_expression_6_0 = null;

        EObject lv_schedule_8_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:4114:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* ( (lv_operator_5_0= ruleAssignOperator ) ) ( (lv_expression_6_0= ruleExpression ) ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:4115:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* ( (lv_operator_5_0= ruleAssignOperator ) ) ( (lv_expression_6_0= ruleExpression ) ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:4115:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* ( (lv_operator_5_0= ruleAssignOperator ) ) ( (lv_expression_6_0= ruleExpression ) ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:4115:2: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* ( (lv_operator_5_0= ruleAssignOperator ) ) ( (lv_expression_6_0= ruleExpression ) ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:4115:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop128:
            do {
                int alt128=2;
                int LA128_0 = input.LA(1);

                if ( (LA128_0==RULE_COMMENT_ANNOTATION||LA128_0==74) ) {
                    alt128=1;
                }


                switch (alt128) {
            	case 1 :
            	    // InternalSCTX.g:4116:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:4116:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:4117:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_65);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAssignmentRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop128;
                }
            } while (true);

            // InternalSCTX.g:4133:3: ( ( rulePrimeID ) )
            // InternalSCTX.g:4134:1: ( rulePrimeID )
            {
            // InternalSCTX.g:4134:1: ( rulePrimeID )
            // InternalSCTX.g:4135:3: rulePrimeID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getAssignmentRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAssignmentAccess().getValuedObjectValuedObjectCrossReference_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_81);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:4151:2: (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )*
            loop129:
            do {
                int alt129=2;
                int LA129_0 = input.LA(1);

                if ( (LA129_0==32) ) {
                    alt129=1;
                }


                switch (alt129) {
            	case 1 :
            	    // InternalSCTX.g:4151:4: otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']'
            	    {
            	    otherlv_2=(Token)match(input,32,FollowSets000.FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getAssignmentAccess().getLeftSquareBracketKeyword_2_0());
            	          
            	    }
            	    // InternalSCTX.g:4155:1: ( (lv_indices_3_0= ruleExpression ) )
            	    // InternalSCTX.g:4156:1: (lv_indices_3_0= ruleExpression )
            	    {
            	    // InternalSCTX.g:4156:1: (lv_indices_3_0= ruleExpression )
            	    // InternalSCTX.g:4157:3: lv_indices_3_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAssignmentAccess().getIndicesExpressionParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_28);
            	    lv_indices_3_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAssignmentRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"indices",
            	              		lv_indices_3_0, 
            	              		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,33,FollowSets000.FOLLOW_81); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_4, grammarAccess.getAssignmentAccess().getRightSquareBracketKeyword_2_2());
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop129;
                }
            } while (true);

            // InternalSCTX.g:4177:3: ( (lv_operator_5_0= ruleAssignOperator ) )
            // InternalSCTX.g:4178:1: (lv_operator_5_0= ruleAssignOperator )
            {
            // InternalSCTX.g:4178:1: (lv_operator_5_0= ruleAssignOperator )
            // InternalSCTX.g:4179:3: lv_operator_5_0= ruleAssignOperator
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_3_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_22);
            lv_operator_5_0=ruleAssignOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAssignmentRule());
              	        }
                     		set(
                     			current, 
                     			"operator",
                      		lv_operator_5_0, 
                      		"de.cau.cs.kieler.kexpressions.keffects.KEffects.AssignOperator");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:4195:2: ( (lv_expression_6_0= ruleExpression ) )
            // InternalSCTX.g:4196:1: (lv_expression_6_0= ruleExpression )
            {
            // InternalSCTX.g:4196:1: (lv_expression_6_0= ruleExpression )
            // InternalSCTX.g:4197:3: lv_expression_6_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_80);
            lv_expression_6_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAssignmentRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_6_0, 
                      		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:4213:2: (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==57) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // InternalSCTX.g:4213:4: otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_7=(Token)match(input,57,FollowSets000.FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getAssignmentAccess().getScheduleKeyword_5_0());
                          
                    }
                    // InternalSCTX.g:4217:1: ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+
                    int cnt130=0;
                    loop130:
                    do {
                        int alt130=2;
                        alt130 = dfa130.predict(input);
                        switch (alt130) {
                    	case 1 :
                    	    // InternalSCTX.g:4218:1: (lv_schedule_8_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:4218:1: (lv_schedule_8_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:4219:3: lv_schedule_8_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAssignmentAccess().getScheduleScheduleObjectReferenceParserRuleCall_5_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_44);
                    	    lv_schedule_8_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAssignmentRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"schedule",
                    	              		lv_schedule_8_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt130 >= 1 ) break loop130;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(130, input);
                                throw eee;
                        }
                        cnt130++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssignment"


    // $ANTLR start "entryRuleSubReferenceAssignment"
    // InternalSCTX.g:4243:1: entryRuleSubReferenceAssignment returns [EObject current=null] : iv_ruleSubReferenceAssignment= ruleSubReferenceAssignment EOF ;
    public final EObject entryRuleSubReferenceAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSubReferenceAssignment = null;


        try {
            // InternalSCTX.g:4244:2: (iv_ruleSubReferenceAssignment= ruleSubReferenceAssignment EOF )
            // InternalSCTX.g:4245:2: iv_ruleSubReferenceAssignment= ruleSubReferenceAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSubReferenceAssignmentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSubReferenceAssignment=ruleSubReferenceAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSubReferenceAssignment; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSubReferenceAssignment"


    // $ANTLR start "ruleSubReferenceAssignment"
    // InternalSCTX.g:4252:1: ruleSubReferenceAssignment returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (lv_operator_7_0= ruleAssignOperator ) ) ( (lv_expression_8_0= ruleExpression ) ) (otherlv_9= 'schedule' ( (lv_schedule_10_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject ruleSubReferenceAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_9=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_indices_3_0 = null;

        EObject lv_subReference_6_0 = null;

        Enumerator lv_operator_7_0 = null;

        EObject lv_expression_8_0 = null;

        EObject lv_schedule_10_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:4255:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (lv_operator_7_0= ruleAssignOperator ) ) ( (lv_expression_8_0= ruleExpression ) ) (otherlv_9= 'schedule' ( (lv_schedule_10_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:4256:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (lv_operator_7_0= ruleAssignOperator ) ) ( (lv_expression_8_0= ruleExpression ) ) (otherlv_9= 'schedule' ( (lv_schedule_10_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:4256:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (lv_operator_7_0= ruleAssignOperator ) ) ( (lv_expression_8_0= ruleExpression ) ) (otherlv_9= 'schedule' ( (lv_schedule_10_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:4256:2: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (lv_operator_7_0= ruleAssignOperator ) ) ( (lv_expression_8_0= ruleExpression ) ) (otherlv_9= 'schedule' ( (lv_schedule_10_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:4256:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop132:
            do {
                int alt132=2;
                int LA132_0 = input.LA(1);

                if ( (LA132_0==RULE_COMMENT_ANNOTATION||LA132_0==74) ) {
                    alt132=1;
                }


                switch (alt132) {
            	case 1 :
            	    // InternalSCTX.g:4257:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:4257:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:4258:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSubReferenceAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_65);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSubReferenceAssignmentRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop132;
                }
            } while (true);

            // InternalSCTX.g:4274:3: ( ( rulePrimeID ) )
            // InternalSCTX.g:4275:1: ( rulePrimeID )
            {
            // InternalSCTX.g:4275:1: ( rulePrimeID )
            // InternalSCTX.g:4276:3: rulePrimeID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getSubReferenceAssignmentRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSubReferenceAssignmentAccess().getValuedObjectValuedObjectCrossReference_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_82);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:4292:2: (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )*
            loop133:
            do {
                int alt133=2;
                int LA133_0 = input.LA(1);

                if ( (LA133_0==32) ) {
                    alt133=1;
                }


                switch (alt133) {
            	case 1 :
            	    // InternalSCTX.g:4292:4: otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']'
            	    {
            	    otherlv_2=(Token)match(input,32,FollowSets000.FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getSubReferenceAssignmentAccess().getLeftSquareBracketKeyword_2_0());
            	          
            	    }
            	    // InternalSCTX.g:4296:1: ( (lv_indices_3_0= ruleExpression ) )
            	    // InternalSCTX.g:4297:1: (lv_indices_3_0= ruleExpression )
            	    {
            	    // InternalSCTX.g:4297:1: (lv_indices_3_0= ruleExpression )
            	    // InternalSCTX.g:4298:3: lv_indices_3_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSubReferenceAssignmentAccess().getIndicesExpressionParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_28);
            	    lv_indices_3_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSubReferenceAssignmentRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"indices",
            	              		lv_indices_3_0, 
            	              		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,33,FollowSets000.FOLLOW_82); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_4, grammarAccess.getSubReferenceAssignmentAccess().getRightSquareBracketKeyword_2_2());
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop133;
                }
            } while (true);

            // InternalSCTX.g:4318:3: (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==61) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // InternalSCTX.g:4318:5: otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) )
                    {
                    otherlv_5=(Token)match(input,61,FollowSets000.FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getSubReferenceAssignmentAccess().getFullStopKeyword_3_0());
                          
                    }
                    // InternalSCTX.g:4322:1: ( (lv_subReference_6_0= ruleValuedObjectReference ) )
                    // InternalSCTX.g:4323:1: (lv_subReference_6_0= ruleValuedObjectReference )
                    {
                    // InternalSCTX.g:4323:1: (lv_subReference_6_0= ruleValuedObjectReference )
                    // InternalSCTX.g:4324:3: lv_subReference_6_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSubReferenceAssignmentAccess().getSubReferenceValuedObjectReferenceParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_81);
                    lv_subReference_6_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSubReferenceAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"subReference",
                              		lv_subReference_6_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:4340:4: ( (lv_operator_7_0= ruleAssignOperator ) )
            // InternalSCTX.g:4341:1: (lv_operator_7_0= ruleAssignOperator )
            {
            // InternalSCTX.g:4341:1: (lv_operator_7_0= ruleAssignOperator )
            // InternalSCTX.g:4342:3: lv_operator_7_0= ruleAssignOperator
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSubReferenceAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_4_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_22);
            lv_operator_7_0=ruleAssignOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSubReferenceAssignmentRule());
              	        }
                     		set(
                     			current, 
                     			"operator",
                      		lv_operator_7_0, 
                      		"de.cau.cs.kieler.kexpressions.keffects.KEffects.AssignOperator");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:4358:2: ( (lv_expression_8_0= ruleExpression ) )
            // InternalSCTX.g:4359:1: (lv_expression_8_0= ruleExpression )
            {
            // InternalSCTX.g:4359:1: (lv_expression_8_0= ruleExpression )
            // InternalSCTX.g:4360:3: lv_expression_8_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSubReferenceAssignmentAccess().getExpressionExpressionParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_80);
            lv_expression_8_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSubReferenceAssignmentRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_8_0, 
                      		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:4376:2: (otherlv_9= 'schedule' ( (lv_schedule_10_0= ruleScheduleObjectReference ) )+ )?
            int alt136=2;
            int LA136_0 = input.LA(1);

            if ( (LA136_0==57) ) {
                alt136=1;
            }
            switch (alt136) {
                case 1 :
                    // InternalSCTX.g:4376:4: otherlv_9= 'schedule' ( (lv_schedule_10_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_9=(Token)match(input,57,FollowSets000.FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getSubReferenceAssignmentAccess().getScheduleKeyword_6_0());
                          
                    }
                    // InternalSCTX.g:4380:1: ( (lv_schedule_10_0= ruleScheduleObjectReference ) )+
                    int cnt135=0;
                    loop135:
                    do {
                        int alt135=2;
                        alt135 = dfa135.predict(input);
                        switch (alt135) {
                    	case 1 :
                    	    // InternalSCTX.g:4381:1: (lv_schedule_10_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:4381:1: (lv_schedule_10_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:4382:3: lv_schedule_10_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getSubReferenceAssignmentAccess().getScheduleScheduleObjectReferenceParserRuleCall_6_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_44);
                    	    lv_schedule_10_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getSubReferenceAssignmentRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"schedule",
                    	              		lv_schedule_10_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt135 >= 1 ) break loop135;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(135, input);
                                throw eee;
                        }
                        cnt135++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubReferenceAssignment"


    // $ANTLR start "entryRulePostfixEffect"
    // InternalSCTX.g:4406:1: entryRulePostfixEffect returns [EObject current=null] : iv_rulePostfixEffect= rulePostfixEffect EOF ;
    public final EObject entryRulePostfixEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePostfixEffect = null;


        try {
            // InternalSCTX.g:4407:2: (iv_rulePostfixEffect= rulePostfixEffect EOF )
            // InternalSCTX.g:4408:2: iv_rulePostfixEffect= rulePostfixEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPostfixEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePostfixEffect=rulePostfixEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePostfixEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePostfixEffect"


    // $ANTLR start "rulePostfixEffect"
    // InternalSCTX.g:4415:1: rulePostfixEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* ( (lv_operator_5_0= rulePostfixOperator ) ) (otherlv_6= 'schedule' ( (lv_schedule_7_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject rulePostfixEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_indices_3_0 = null;

        Enumerator lv_operator_5_0 = null;

        EObject lv_schedule_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:4418:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* ( (lv_operator_5_0= rulePostfixOperator ) ) (otherlv_6= 'schedule' ( (lv_schedule_7_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:4419:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* ( (lv_operator_5_0= rulePostfixOperator ) ) (otherlv_6= 'schedule' ( (lv_schedule_7_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:4419:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* ( (lv_operator_5_0= rulePostfixOperator ) ) (otherlv_6= 'schedule' ( (lv_schedule_7_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:4419:2: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* ( (lv_operator_5_0= rulePostfixOperator ) ) (otherlv_6= 'schedule' ( (lv_schedule_7_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:4419:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop137:
            do {
                int alt137=2;
                int LA137_0 = input.LA(1);

                if ( (LA137_0==RULE_COMMENT_ANNOTATION||LA137_0==74) ) {
                    alt137=1;
                }


                switch (alt137) {
            	case 1 :
            	    // InternalSCTX.g:4420:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:4420:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:4421:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPostfixEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_65);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop137;
                }
            } while (true);

            // InternalSCTX.g:4437:3: ( ( rulePrimeID ) )
            // InternalSCTX.g:4438:1: ( rulePrimeID )
            {
            // InternalSCTX.g:4438:1: ( rulePrimeID )
            // InternalSCTX.g:4439:3: rulePrimeID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getPostfixEffectRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPostfixEffectAccess().getValuedObjectValuedObjectCrossReference_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_84);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:4455:2: (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )*
            loop138:
            do {
                int alt138=2;
                int LA138_0 = input.LA(1);

                if ( (LA138_0==32) ) {
                    alt138=1;
                }


                switch (alt138) {
            	case 1 :
            	    // InternalSCTX.g:4455:4: otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']'
            	    {
            	    otherlv_2=(Token)match(input,32,FollowSets000.FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getPostfixEffectAccess().getLeftSquareBracketKeyword_2_0());
            	          
            	    }
            	    // InternalSCTX.g:4459:1: ( (lv_indices_3_0= ruleExpression ) )
            	    // InternalSCTX.g:4460:1: (lv_indices_3_0= ruleExpression )
            	    {
            	    // InternalSCTX.g:4460:1: (lv_indices_3_0= ruleExpression )
            	    // InternalSCTX.g:4461:3: lv_indices_3_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPostfixEffectAccess().getIndicesExpressionParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_28);
            	    lv_indices_3_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"indices",
            	              		lv_indices_3_0, 
            	              		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,33,FollowSets000.FOLLOW_84); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_4, grammarAccess.getPostfixEffectAccess().getRightSquareBracketKeyword_2_2());
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop138;
                }
            } while (true);

            // InternalSCTX.g:4481:3: ( (lv_operator_5_0= rulePostfixOperator ) )
            // InternalSCTX.g:4482:1: (lv_operator_5_0= rulePostfixOperator )
            {
            // InternalSCTX.g:4482:1: (lv_operator_5_0= rulePostfixOperator )
            // InternalSCTX.g:4483:3: lv_operator_5_0= rulePostfixOperator
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPostfixEffectAccess().getOperatorPostfixOperatorEnumRuleCall_3_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_80);
            lv_operator_5_0=rulePostfixOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
              	        }
                     		set(
                     			current, 
                     			"operator",
                      		lv_operator_5_0, 
                      		"de.cau.cs.kieler.kexpressions.keffects.KEffects.PostfixOperator");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:4499:2: (otherlv_6= 'schedule' ( (lv_schedule_7_0= ruleScheduleObjectReference ) )+ )?
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( (LA140_0==57) ) {
                alt140=1;
            }
            switch (alt140) {
                case 1 :
                    // InternalSCTX.g:4499:4: otherlv_6= 'schedule' ( (lv_schedule_7_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_6=(Token)match(input,57,FollowSets000.FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getPostfixEffectAccess().getScheduleKeyword_4_0());
                          
                    }
                    // InternalSCTX.g:4503:1: ( (lv_schedule_7_0= ruleScheduleObjectReference ) )+
                    int cnt139=0;
                    loop139:
                    do {
                        int alt139=2;
                        alt139 = dfa139.predict(input);
                        switch (alt139) {
                    	case 1 :
                    	    // InternalSCTX.g:4504:1: (lv_schedule_7_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:4504:1: (lv_schedule_7_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:4505:3: lv_schedule_7_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPostfixEffectAccess().getScheduleScheduleObjectReferenceParserRuleCall_4_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_44);
                    	    lv_schedule_7_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"schedule",
                    	              		lv_schedule_7_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt139 >= 1 ) break loop139;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(139, input);
                                throw eee;
                        }
                        cnt139++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePostfixEffect"


    // $ANTLR start "entryRuleHostcodeEffect"
    // InternalSCTX.g:4529:1: entryRuleHostcodeEffect returns [EObject current=null] : iv_ruleHostcodeEffect= ruleHostcodeEffect EOF ;
    public final EObject entryRuleHostcodeEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHostcodeEffect = null;


        try {
            // InternalSCTX.g:4530:2: (iv_ruleHostcodeEffect= ruleHostcodeEffect EOF )
            // InternalSCTX.g:4531:2: iv_ruleHostcodeEffect= ruleHostcodeEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHostcodeEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleHostcodeEffect=ruleHostcodeEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHostcodeEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHostcodeEffect"


    // $ANTLR start "ruleHostcodeEffect"
    // InternalSCTX.g:4538:1: ruleHostcodeEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) ;
    public final EObject ruleHostcodeEffect() throws RecognitionException {
        EObject current = null;

        Token lv_text_1_0=null;
        EObject lv_annotations_0_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:4541:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) )
            // InternalSCTX.g:4542:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            {
            // InternalSCTX.g:4542:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            // InternalSCTX.g:4542:2: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) )
            {
            // InternalSCTX.g:4542:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop141:
            do {
                int alt141=2;
                int LA141_0 = input.LA(1);

                if ( (LA141_0==RULE_COMMENT_ANNOTATION||LA141_0==74) ) {
                    alt141=1;
                }


                switch (alt141) {
            	case 1 :
            	    // InternalSCTX.g:4543:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:4543:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:4544:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getHostcodeEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_85);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getHostcodeEffectRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop141;
                }
            } while (true);

            // InternalSCTX.g:4560:3: ( (lv_text_1_0= RULE_HOSTCODE ) )
            // InternalSCTX.g:4561:1: (lv_text_1_0= RULE_HOSTCODE )
            {
            // InternalSCTX.g:4561:1: (lv_text_1_0= RULE_HOSTCODE )
            // InternalSCTX.g:4562:3: lv_text_1_0= RULE_HOSTCODE
            {
            lv_text_1_0=(Token)match(input,RULE_HOSTCODE,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_text_1_0, grammarAccess.getHostcodeEffectAccess().getTextHOSTCODETerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getHostcodeEffectRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"text",
                      		lv_text_1_0, 
                      		"de.cau.cs.kieler.kexpressions.KExpressions.HOSTCODE");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHostcodeEffect"


    // $ANTLR start "entryRuleReferenceCallEffect"
    // InternalSCTX.g:4586:1: entryRuleReferenceCallEffect returns [EObject current=null] : iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF ;
    public final EObject entryRuleReferenceCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceCallEffect = null;


        try {
            // InternalSCTX.g:4587:2: (iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF )
            // InternalSCTX.g:4588:2: iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceCallEffect=ruleReferenceCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceCallEffect"


    // $ANTLR start "ruleReferenceCallEffect"
    // InternalSCTX.g:4595:1: ruleReferenceCallEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) ;
    public final EObject ruleReferenceCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:4598:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) )
            // InternalSCTX.g:4599:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) )
            {
            // InternalSCTX.g:4599:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) )
            // InternalSCTX.g:4599:2: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' )
            {
            // InternalSCTX.g:4599:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop142:
            do {
                int alt142=2;
                int LA142_0 = input.LA(1);

                if ( (LA142_0==RULE_COMMENT_ANNOTATION||LA142_0==74) ) {
                    alt142=1;
                }


                switch (alt142) {
            	case 1 :
            	    // InternalSCTX.g:4600:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:4600:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:4601:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_65);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop142;
                }
            } while (true);

            // InternalSCTX.g:4617:3: ( ( rulePrimeID ) )
            // InternalSCTX.g:4618:1: ( rulePrimeID )
            {
            // InternalSCTX.g:4618:1: ( rulePrimeID )
            // InternalSCTX.g:4619:3: rulePrimeID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getReferenceCallEffectRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getValuedObjectValuedObjectCrossReference_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_86);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:4635:2: ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' )
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( (LA144_0==26) ) {
                alt144=1;
            }
            else if ( (LA144_0==62) ) {
                alt144=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 144, 0, input);

                throw nvae;
            }
            switch (alt144) {
                case 1 :
                    // InternalSCTX.g:4635:3: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
                    {
                    // InternalSCTX.g:4635:3: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
                    // InternalSCTX.g:4635:5: otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')'
                    {
                    otherlv_2=(Token)match(input,26,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getReferenceCallEffectAccess().getLeftParenthesisKeyword_2_0_0());
                          
                    }
                    // InternalSCTX.g:4639:1: ( (lv_parameters_3_0= ruleParameter ) )
                    // InternalSCTX.g:4640:1: (lv_parameters_3_0= ruleParameter )
                    {
                    // InternalSCTX.g:4640:1: (lv_parameters_3_0= ruleParameter )
                    // InternalSCTX.g:4641:3: lv_parameters_3_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getParametersParameterParserRuleCall_2_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_23);
                    lv_parameters_3_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                      	        }
                             		add(
                             			current, 
                             			"parameters",
                              		lv_parameters_3_0, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:4657:2: (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )*
                    loop143:
                    do {
                        int alt143=2;
                        int LA143_0 = input.LA(1);

                        if ( (LA143_0==27) ) {
                            alt143=1;
                        }


                        switch (alt143) {
                    	case 1 :
                    	    // InternalSCTX.g:4657:4: otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) )
                    	    {
                    	    otherlv_4=(Token)match(input,27,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getReferenceCallEffectAccess().getCommaKeyword_2_0_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:4661:1: ( (lv_parameters_5_0= ruleParameter ) )
                    	    // InternalSCTX.g:4662:1: (lv_parameters_5_0= ruleParameter )
                    	    {
                    	    // InternalSCTX.g:4662:1: (lv_parameters_5_0= ruleParameter )
                    	    // InternalSCTX.g:4663:3: lv_parameters_5_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getParametersParameterParserRuleCall_2_0_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_23);
                    	    lv_parameters_5_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"parameters",
                    	              		lv_parameters_5_0, 
                    	              		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop143;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getReferenceCallEffectAccess().getRightParenthesisKeyword_2_0_3());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:4684:7: otherlv_7= '()'
                    {
                    otherlv_7=(Token)match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getReferenceCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_2_1());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceCallEffect"


    // $ANTLR start "entryRuleFunctionCallEffect"
    // InternalSCTX.g:4696:1: entryRuleFunctionCallEffect returns [EObject current=null] : iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF ;
    public final EObject entryRuleFunctionCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionCallEffect = null;


        try {
            // InternalSCTX.g:4697:2: (iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF )
            // InternalSCTX.g:4698:2: iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunctionCallEffect=ruleFunctionCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionCallEffect"


    // $ANTLR start "ruleFunctionCallEffect"
    // InternalSCTX.g:4705:1: ruleFunctionCallEffect returns [EObject current=null] : ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ) | (otherlv_9= '<' ( (lv_functionName_10_0= RULE_ID ) ) ( (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' ) | otherlv_16= '()' ) otherlv_17= '>' ) ) ;
    public final EObject ruleFunctionCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_functionName_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token lv_functionName_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parameters_4_0 = null;

        EObject lv_parameters_6_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_parameters_14_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:4708:28: ( ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ) | (otherlv_9= '<' ( (lv_functionName_10_0= RULE_ID ) ) ( (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' ) | otherlv_16= '()' ) otherlv_17= '>' ) ) )
            // InternalSCTX.g:4709:1: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ) | (otherlv_9= '<' ( (lv_functionName_10_0= RULE_ID ) ) ( (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' ) | otherlv_16= '()' ) otherlv_17= '>' ) )
            {
            // InternalSCTX.g:4709:1: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ) | (otherlv_9= '<' ( (lv_functionName_10_0= RULE_ID ) ) ( (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' ) | otherlv_16= '()' ) otherlv_17= '>' ) )
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( (LA150_0==RULE_COMMENT_ANNOTATION||LA150_0==56||LA150_0==74) ) {
                alt150=1;
            }
            else if ( (LA150_0==63) ) {
                alt150=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 150, 0, input);

                throw nvae;
            }
            switch (alt150) {
                case 1 :
                    // InternalSCTX.g:4709:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
                    {
                    // InternalSCTX.g:4709:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
                    // InternalSCTX.g:4709:3: ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
                    {
                    // InternalSCTX.g:4709:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
                    loop145:
                    do {
                        int alt145=2;
                        int LA145_0 = input.LA(1);

                        if ( (LA145_0==RULE_COMMENT_ANNOTATION||LA145_0==74) ) {
                            alt145=1;
                        }


                        switch (alt145) {
                    	case 1 :
                    	    // InternalSCTX.g:4710:1: (lv_annotations_0_0= ruleAnnotation )
                    	    {
                    	    // InternalSCTX.g:4710:1: (lv_annotations_0_0= ruleAnnotation )
                    	    // InternalSCTX.g:4711:3: lv_annotations_0_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_87);
                    	    lv_annotations_0_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"annotations",
                    	              		lv_annotations_0_0, 
                    	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop145;
                        }
                    } while (true);

                    // InternalSCTX.g:4727:3: (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
                    // InternalSCTX.g:4727:5: otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
                    {
                    otherlv_1=(Token)match(input,56,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getFunctionCallEffectAccess().getExternKeyword_0_1_0());
                          
                    }
                    // InternalSCTX.g:4731:1: ( (lv_functionName_2_0= RULE_ID ) )
                    // InternalSCTX.g:4732:1: (lv_functionName_2_0= RULE_ID )
                    {
                    // InternalSCTX.g:4732:1: (lv_functionName_2_0= RULE_ID )
                    // InternalSCTX.g:4733:3: lv_functionName_2_0= RULE_ID
                    {
                    lv_functionName_2_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_86); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_functionName_2_0, grammarAccess.getFunctionCallEffectAccess().getFunctionNameIDTerminalRuleCall_0_1_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getFunctionCallEffectRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"functionName",
                              		lv_functionName_2_0, 
                              		"org.eclipse.xtext.common.Terminals.ID");
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:4749:2: ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
                    int alt147=2;
                    int LA147_0 = input.LA(1);

                    if ( (LA147_0==26) ) {
                        alt147=1;
                    }
                    else if ( (LA147_0==62) ) {
                        alt147=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 147, 0, input);

                        throw nvae;
                    }
                    switch (alt147) {
                        case 1 :
                            // InternalSCTX.g:4749:3: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                            {
                            // InternalSCTX.g:4749:3: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                            // InternalSCTX.g:4749:5: otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')'
                            {
                            otherlv_3=(Token)match(input,26,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_3, grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisKeyword_0_1_2_0_0());
                                  
                            }
                            // InternalSCTX.g:4753:1: ( (lv_parameters_4_0= ruleParameter ) )
                            // InternalSCTX.g:4754:1: (lv_parameters_4_0= ruleParameter )
                            {
                            // InternalSCTX.g:4754:1: (lv_parameters_4_0= ruleParameter )
                            // InternalSCTX.g:4755:3: lv_parameters_4_0= ruleParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_0_1_2_0_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_23);
                            lv_parameters_4_0=ruleParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"parameters",
                                      		lv_parameters_4_0, 
                                      		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalSCTX.g:4771:2: (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )*
                            loop146:
                            do {
                                int alt146=2;
                                int LA146_0 = input.LA(1);

                                if ( (LA146_0==27) ) {
                                    alt146=1;
                                }


                                switch (alt146) {
                            	case 1 :
                            	    // InternalSCTX.g:4771:4: otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) )
                            	    {
                            	    otherlv_5=(Token)match(input,27,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_5, grammarAccess.getFunctionCallEffectAccess().getCommaKeyword_0_1_2_0_2_0());
                            	          
                            	    }
                            	    // InternalSCTX.g:4775:1: ( (lv_parameters_6_0= ruleParameter ) )
                            	    // InternalSCTX.g:4776:1: (lv_parameters_6_0= ruleParameter )
                            	    {
                            	    // InternalSCTX.g:4776:1: (lv_parameters_6_0= ruleParameter )
                            	    // InternalSCTX.g:4777:3: lv_parameters_6_0= ruleParameter
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_0_1_2_0_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_23);
                            	    lv_parameters_6_0=ruleParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"parameters",
                            	              		lv_parameters_6_0, 
                            	              		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop146;
                                }
                            } while (true);

                            otherlv_7=(Token)match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_7, grammarAccess.getFunctionCallEffectAccess().getRightParenthesisKeyword_0_1_2_0_3());
                                  
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:4798:7: otherlv_8= '()'
                            {
                            otherlv_8=(Token)match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_8, grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_0_1_2_1());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:4803:6: (otherlv_9= '<' ( (lv_functionName_10_0= RULE_ID ) ) ( (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' ) | otherlv_16= '()' ) otherlv_17= '>' )
                    {
                    // InternalSCTX.g:4803:6: (otherlv_9= '<' ( (lv_functionName_10_0= RULE_ID ) ) ( (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' ) | otherlv_16= '()' ) otherlv_17= '>' )
                    // InternalSCTX.g:4803:8: otherlv_9= '<' ( (lv_functionName_10_0= RULE_ID ) ) ( (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' ) | otherlv_16= '()' ) otherlv_17= '>'
                    {
                    otherlv_9=(Token)match(input,63,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getFunctionCallEffectAccess().getLessThanSignKeyword_1_0());
                          
                    }
                    // InternalSCTX.g:4807:1: ( (lv_functionName_10_0= RULE_ID ) )
                    // InternalSCTX.g:4808:1: (lv_functionName_10_0= RULE_ID )
                    {
                    // InternalSCTX.g:4808:1: (lv_functionName_10_0= RULE_ID )
                    // InternalSCTX.g:4809:3: lv_functionName_10_0= RULE_ID
                    {
                    lv_functionName_10_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_86); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_functionName_10_0, grammarAccess.getFunctionCallEffectAccess().getFunctionNameIDTerminalRuleCall_1_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getFunctionCallEffectRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"functionName",
                              		lv_functionName_10_0, 
                              		"org.eclipse.xtext.common.Terminals.ID");
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:4825:2: ( (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' ) | otherlv_16= '()' )
                    int alt149=2;
                    int LA149_0 = input.LA(1);

                    if ( (LA149_0==26) ) {
                        alt149=1;
                    }
                    else if ( (LA149_0==62) ) {
                        alt149=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 149, 0, input);

                        throw nvae;
                    }
                    switch (alt149) {
                        case 1 :
                            // InternalSCTX.g:4825:3: (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' )
                            {
                            // InternalSCTX.g:4825:3: (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' )
                            // InternalSCTX.g:4825:5: otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')'
                            {
                            otherlv_11=(Token)match(input,26,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_11, grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisKeyword_1_2_0_0());
                                  
                            }
                            // InternalSCTX.g:4829:1: ( (lv_parameters_12_0= ruleParameter ) )
                            // InternalSCTX.g:4830:1: (lv_parameters_12_0= ruleParameter )
                            {
                            // InternalSCTX.g:4830:1: (lv_parameters_12_0= ruleParameter )
                            // InternalSCTX.g:4831:3: lv_parameters_12_0= ruleParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_1_2_0_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_23);
                            lv_parameters_12_0=ruleParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"parameters",
                                      		lv_parameters_12_0, 
                                      		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalSCTX.g:4847:2: (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )*
                            loop148:
                            do {
                                int alt148=2;
                                int LA148_0 = input.LA(1);

                                if ( (LA148_0==27) ) {
                                    alt148=1;
                                }


                                switch (alt148) {
                            	case 1 :
                            	    // InternalSCTX.g:4847:4: otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) )
                            	    {
                            	    otherlv_13=(Token)match(input,27,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_13, grammarAccess.getFunctionCallEffectAccess().getCommaKeyword_1_2_0_2_0());
                            	          
                            	    }
                            	    // InternalSCTX.g:4851:1: ( (lv_parameters_14_0= ruleParameter ) )
                            	    // InternalSCTX.g:4852:1: (lv_parameters_14_0= ruleParameter )
                            	    {
                            	    // InternalSCTX.g:4852:1: (lv_parameters_14_0= ruleParameter )
                            	    // InternalSCTX.g:4853:3: lv_parameters_14_0= ruleParameter
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_1_2_0_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_23);
                            	    lv_parameters_14_0=ruleParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"parameters",
                            	              		lv_parameters_14_0, 
                            	              		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop148;
                                }
                            } while (true);

                            otherlv_15=(Token)match(input,28,FollowSets000.FOLLOW_88); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_15, grammarAccess.getFunctionCallEffectAccess().getRightParenthesisKeyword_1_2_0_3());
                                  
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:4874:7: otherlv_16= '()'
                            {
                            otherlv_16=(Token)match(input,62,FollowSets000.FOLLOW_88); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_16, grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_1_2_1());
                                  
                            }

                            }
                            break;

                    }

                    otherlv_17=(Token)match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_17, grammarAccess.getFunctionCallEffectAccess().getGreaterThanSignKeyword_1_3());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionCallEffect"


    // $ANTLR start "entryRuleExpression"
    // InternalSCTX.g:4892:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalSCTX.g:4893:2: (iv_ruleExpression= ruleExpression EOF )
            // InternalSCTX.g:4894:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalSCTX.g:4901:1: ruleExpression returns [EObject current=null] : ( (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_BoolExpression_0 = null;

        EObject this_ValuedExpression_1 = null;

        EObject lv_schedule_3_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:4904:28: ( ( (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:4905:1: ( (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:4905:1: ( (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:4905:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:4905:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression )
            int alt151=2;
            alt151 = dfa151.predict(input);
            switch (alt151) {
                case 1 :
                    // InternalSCTX.g:4906:2: this_BoolExpression_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExpressionAccess().getBoolExpressionParserRuleCall_0_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_80);
                    this_BoolExpression_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_BoolExpression_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:4919:2: this_ValuedExpression_1= ruleValuedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExpressionAccess().getValuedExpressionParserRuleCall_0_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_80);
                    this_ValuedExpression_1=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ValuedExpression_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            // InternalSCTX.g:4930:2: (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )?
            int alt153=2;
            alt153 = dfa153.predict(input);
            switch (alt153) {
                case 1 :
                    // InternalSCTX.g:4930:4: otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_2=(Token)match(input,57,FollowSets000.FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getExpressionAccess().getScheduleKeyword_1_0());
                          
                    }
                    // InternalSCTX.g:4934:1: ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+
                    int cnt152=0;
                    loop152:
                    do {
                        int alt152=2;
                        alt152 = dfa152.predict(input);
                        switch (alt152) {
                    	case 1 :
                    	    // InternalSCTX.g:4935:1: (lv_schedule_3_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:4935:1: (lv_schedule_3_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:4936:3: lv_schedule_3_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getExpressionAccess().getScheduleScheduleObjectReferenceParserRuleCall_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_44);
                    	    lv_schedule_3_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"schedule",
                    	              		lv_schedule_3_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt152 >= 1 ) break loop152;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(152, input);
                                throw eee;
                        }
                        cnt152++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleBoolExpression"
    // InternalSCTX.g:4960:1: entryRuleBoolExpression returns [EObject current=null] : iv_ruleBoolExpression= ruleBoolExpression EOF ;
    public final EObject entryRuleBoolExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBoolExpression = null;


        try {
            // InternalSCTX.g:4961:2: (iv_ruleBoolExpression= ruleBoolExpression EOF )
            // InternalSCTX.g:4962:2: iv_ruleBoolExpression= ruleBoolExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBoolExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBoolExpression=ruleBoolExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBoolExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBoolExpression"


    // $ANTLR start "ruleBoolExpression"
    // InternalSCTX.g:4969:1: ruleBoolExpression returns [EObject current=null] : this_LogicalOrExpression_0= ruleLogicalOrExpression ;
    public final EObject ruleBoolExpression() throws RecognitionException {
        EObject current = null;

        EObject this_LogicalOrExpression_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:4972:28: (this_LogicalOrExpression_0= ruleLogicalOrExpression )
            // InternalSCTX.g:4974:2: this_LogicalOrExpression_0= ruleLogicalOrExpression
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBoolExpressionAccess().getLogicalOrExpressionParserRuleCall()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_LogicalOrExpression_0=ruleLogicalOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_LogicalOrExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBoolExpression"


    // $ANTLR start "entryRuleLogicalOrExpression"
    // InternalSCTX.g:4993:1: entryRuleLogicalOrExpression returns [EObject current=null] : iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF ;
    public final EObject entryRuleLogicalOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalOrExpression = null;


        try {
            // InternalSCTX.g:4994:2: (iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF )
            // InternalSCTX.g:4995:2: iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLogicalOrExpression=ruleLogicalOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalOrExpression"


    // $ANTLR start "ruleLogicalOrExpression"
    // InternalSCTX.g:5002:1: ruleLogicalOrExpression returns [EObject current=null] : (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? ) ;
    public final EObject ruleLogicalOrExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_LogicalAndExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5005:28: ( (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? ) )
            // InternalSCTX.g:5006:1: (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? )
            {
            // InternalSCTX.g:5006:1: (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? )
            // InternalSCTX.g:5007:2: this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_89);
            this_LogicalAndExpression_0=ruleLogicalAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_LogicalAndExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSCTX.g:5018:1: ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )?
            int alt155=2;
            int LA155_0 = input.LA(1);

            if ( (LA155_0==65) ) {
                alt155=1;
            }
            switch (alt155) {
                case 1 :
                    // InternalSCTX.g:5018:2: () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )*
                    {
                    // InternalSCTX.g:5018:2: ()
                    // InternalSCTX.g:5019:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getLogicalOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:5027:2: ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) )
                    // InternalSCTX.g:5027:3: ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) )
                    {
                    // InternalSCTX.g:5027:3: ( (lv_operator_2_0= ruleLogicalOrOperator ) )
                    // InternalSCTX.g:5028:1: (lv_operator_2_0= ruleLogicalOrOperator )
                    {
                    // InternalSCTX.g:5028:1: (lv_operator_2_0= ruleLogicalOrOperator )
                    // InternalSCTX.g:5029:3: lv_operator_2_0= ruleLogicalOrOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getOperatorLogicalOrOperatorEnumRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_34);
                    lv_operator_2_0=ruleLogicalOrOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.LogicalOrOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:5045:2: ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) )
                    // InternalSCTX.g:5046:1: (lv_subExpressions_3_0= ruleLogicalAndExpression )
                    {
                    // InternalSCTX.g:5046:1: (lv_subExpressions_3_0= ruleLogicalAndExpression )
                    // InternalSCTX.g:5047:3: lv_subExpressions_3_0= ruleLogicalAndExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_89);
                    lv_subExpressions_3_0=ruleLogicalAndExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.LogicalAndExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:5063:3: (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )*
                    loop154:
                    do {
                        int alt154=2;
                        int LA154_0 = input.LA(1);

                        if ( (LA154_0==65) ) {
                            alt154=1;
                        }


                        switch (alt154) {
                    	case 1 :
                    	    // InternalSCTX.g:5063:5: otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,65,FollowSets000.FOLLOW_34); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getLogicalOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:5067:1: ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) )
                    	    // InternalSCTX.g:5068:1: (lv_subExpressions_5_0= ruleLogicalAndExpression )
                    	    {
                    	    // InternalSCTX.g:5068:1: (lv_subExpressions_5_0= ruleLogicalAndExpression )
                    	    // InternalSCTX.g:5069:3: lv_subExpressions_5_0= ruleLogicalAndExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_89);
                    	    lv_subExpressions_5_0=ruleLogicalAndExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"subExpressions",
                    	              		lv_subExpressions_5_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.LogicalAndExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop154;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalOrExpression"


    // $ANTLR start "entryRuleLogicalAndExpression"
    // InternalSCTX.g:5093:1: entryRuleLogicalAndExpression returns [EObject current=null] : iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF ;
    public final EObject entryRuleLogicalAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalAndExpression = null;


        try {
            // InternalSCTX.g:5094:2: (iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF )
            // InternalSCTX.g:5095:2: iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalAndExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLogicalAndExpression=ruleLogicalAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalAndExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalAndExpression"


    // $ANTLR start "ruleLogicalAndExpression"
    // InternalSCTX.g:5102:1: ruleLogicalAndExpression returns [EObject current=null] : (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? ) ;
    public final EObject ruleLogicalAndExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_BitwiseOrExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5105:28: ( (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? ) )
            // InternalSCTX.g:5106:1: (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? )
            {
            // InternalSCTX.g:5106:1: (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? )
            // InternalSCTX.g:5107:2: this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getBitwiseOrExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_90);
            this_BitwiseOrExpression_0=ruleBitwiseOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_BitwiseOrExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSCTX.g:5118:1: ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )?
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==66) ) {
                alt157=1;
            }
            switch (alt157) {
                case 1 :
                    // InternalSCTX.g:5118:2: () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )*
                    {
                    // InternalSCTX.g:5118:2: ()
                    // InternalSCTX.g:5119:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getLogicalAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:5127:2: ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) )
                    // InternalSCTX.g:5127:3: ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) )
                    {
                    // InternalSCTX.g:5127:3: ( (lv_operator_2_0= ruleLogicalAndOperator ) )
                    // InternalSCTX.g:5128:1: (lv_operator_2_0= ruleLogicalAndOperator )
                    {
                    // InternalSCTX.g:5128:1: (lv_operator_2_0= ruleLogicalAndOperator )
                    // InternalSCTX.g:5129:3: lv_operator_2_0= ruleLogicalAndOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getOperatorLogicalAndOperatorEnumRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_34);
                    lv_operator_2_0=ruleLogicalAndOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.LogicalAndOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:5145:2: ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) )
                    // InternalSCTX.g:5146:1: (lv_subExpressions_3_0= ruleBitwiseOrExpression )
                    {
                    // InternalSCTX.g:5146:1: (lv_subExpressions_3_0= ruleBitwiseOrExpression )
                    // InternalSCTX.g:5147:3: lv_subExpressions_3_0= ruleBitwiseOrExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsBitwiseOrExpressionParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_90);
                    lv_subExpressions_3_0=ruleBitwiseOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseOrExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:5163:3: (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )*
                    loop156:
                    do {
                        int alt156=2;
                        int LA156_0 = input.LA(1);

                        if ( (LA156_0==66) ) {
                            alt156=1;
                        }


                        switch (alt156) {
                    	case 1 :
                    	    // InternalSCTX.g:5163:5: otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,66,FollowSets000.FOLLOW_34); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getLogicalAndExpressionAccess().getAmpersandAmpersandKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:5167:1: ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) )
                    	    // InternalSCTX.g:5168:1: (lv_subExpressions_5_0= ruleBitwiseOrExpression )
                    	    {
                    	    // InternalSCTX.g:5168:1: (lv_subExpressions_5_0= ruleBitwiseOrExpression )
                    	    // InternalSCTX.g:5169:3: lv_subExpressions_5_0= ruleBitwiseOrExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsBitwiseOrExpressionParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_90);
                    	    lv_subExpressions_5_0=ruleBitwiseOrExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"subExpressions",
                    	              		lv_subExpressions_5_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseOrExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop156;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalAndExpression"


    // $ANTLR start "entryRuleBitwiseOrExpression"
    // InternalSCTX.g:5193:1: entryRuleBitwiseOrExpression returns [EObject current=null] : iv_ruleBitwiseOrExpression= ruleBitwiseOrExpression EOF ;
    public final EObject entryRuleBitwiseOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseOrExpression = null;


        try {
            // InternalSCTX.g:5194:2: (iv_ruleBitwiseOrExpression= ruleBitwiseOrExpression EOF )
            // InternalSCTX.g:5195:2: iv_ruleBitwiseOrExpression= ruleBitwiseOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseOrExpression=ruleBitwiseOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseOrExpression"


    // $ANTLR start "ruleBitwiseOrExpression"
    // InternalSCTX.g:5202:1: ruleBitwiseOrExpression returns [EObject current=null] : (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? ) ;
    public final EObject ruleBitwiseOrExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_BitwiseAndExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5205:28: ( (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? ) )
            // InternalSCTX.g:5206:1: (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? )
            {
            // InternalSCTX.g:5206:1: (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? )
            // InternalSCTX.g:5207:2: this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getBitwiseAndExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_91);
            this_BitwiseAndExpression_0=ruleBitwiseAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_BitwiseAndExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSCTX.g:5218:1: ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )?
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==67) ) {
                alt159=1;
            }
            switch (alt159) {
                case 1 :
                    // InternalSCTX.g:5218:2: () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )*
                    {
                    // InternalSCTX.g:5218:2: ()
                    // InternalSCTX.g:5219:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getBitwiseOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:5227:2: ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) )
                    // InternalSCTX.g:5227:3: ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) )
                    {
                    // InternalSCTX.g:5227:3: ( (lv_operator_2_0= ruleBitwiseOrOperator ) )
                    // InternalSCTX.g:5228:1: (lv_operator_2_0= ruleBitwiseOrOperator )
                    {
                    // InternalSCTX.g:5228:1: (lv_operator_2_0= ruleBitwiseOrOperator )
                    // InternalSCTX.g:5229:3: lv_operator_2_0= ruleBitwiseOrOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getOperatorBitwiseOrOperatorEnumRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_34);
                    lv_operator_2_0=ruleBitwiseOrOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBitwiseOrExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseOrOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:5245:2: ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) )
                    // InternalSCTX.g:5246:1: (lv_subExpressions_3_0= ruleBitwiseAndExpression )
                    {
                    // InternalSCTX.g:5246:1: (lv_subExpressions_3_0= ruleBitwiseAndExpression )
                    // InternalSCTX.g:5247:3: lv_subExpressions_3_0= ruleBitwiseAndExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_91);
                    lv_subExpressions_3_0=ruleBitwiseAndExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBitwiseOrExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:5263:3: (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )*
                    loop158:
                    do {
                        int alt158=2;
                        int LA158_0 = input.LA(1);

                        if ( (LA158_0==67) ) {
                            alt158=1;
                        }


                        switch (alt158) {
                    	case 1 :
                    	    // InternalSCTX.g:5263:5: otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,67,FollowSets000.FOLLOW_34); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getBitwiseOrExpressionAccess().getVerticalLineKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:5267:1: ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) )
                    	    // InternalSCTX.g:5268:1: (lv_subExpressions_5_0= ruleBitwiseAndExpression )
                    	    {
                    	    // InternalSCTX.g:5268:1: (lv_subExpressions_5_0= ruleBitwiseAndExpression )
                    	    // InternalSCTX.g:5269:3: lv_subExpressions_5_0= ruleBitwiseAndExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_91);
                    	    lv_subExpressions_5_0=ruleBitwiseAndExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getBitwiseOrExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"subExpressions",
                    	              		lv_subExpressions_5_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop158;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseOrExpression"


    // $ANTLR start "entryRuleBitwiseAndExpression"
    // InternalSCTX.g:5293:1: entryRuleBitwiseAndExpression returns [EObject current=null] : iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF ;
    public final EObject entryRuleBitwiseAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseAndExpression = null;


        try {
            // InternalSCTX.g:5294:2: (iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF )
            // InternalSCTX.g:5295:2: iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseAndExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseAndExpression=ruleBitwiseAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseAndExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseAndExpression"


    // $ANTLR start "ruleBitwiseAndExpression"
    // InternalSCTX.g:5302:1: ruleBitwiseAndExpression returns [EObject current=null] : (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? ) ;
    public final EObject ruleBitwiseAndExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_CompareOperation_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5305:28: ( (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? ) )
            // InternalSCTX.g:5306:1: (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? )
            {
            // InternalSCTX.g:5306:1: (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? )
            // InternalSCTX.g:5307:2: this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getCompareOperationParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_92);
            this_CompareOperation_0=ruleCompareOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_CompareOperation_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSCTX.g:5318:1: ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )?
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( (LA161_0==30) ) {
                alt161=1;
            }
            switch (alt161) {
                case 1 :
                    // InternalSCTX.g:5318:2: () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )*
                    {
                    // InternalSCTX.g:5318:2: ()
                    // InternalSCTX.g:5319:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getBitwiseAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:5327:2: ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) )
                    // InternalSCTX.g:5327:3: ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) )
                    {
                    // InternalSCTX.g:5327:3: ( (lv_operator_2_0= ruleBitwiseAndOperator ) )
                    // InternalSCTX.g:5328:1: (lv_operator_2_0= ruleBitwiseAndOperator )
                    {
                    // InternalSCTX.g:5328:1: (lv_operator_2_0= ruleBitwiseAndOperator )
                    // InternalSCTX.g:5329:3: lv_operator_2_0= ruleBitwiseAndOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getOperatorBitwiseAndOperatorEnumRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_34);
                    lv_operator_2_0=ruleBitwiseAndOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:5345:2: ( (lv_subExpressions_3_0= ruleCompareOperation ) )
                    // InternalSCTX.g:5346:1: (lv_subExpressions_3_0= ruleCompareOperation )
                    {
                    // InternalSCTX.g:5346:1: (lv_subExpressions_3_0= ruleCompareOperation )
                    // InternalSCTX.g:5347:3: lv_subExpressions_3_0= ruleCompareOperation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_92);
                    lv_subExpressions_3_0=ruleCompareOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperation");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:5363:3: (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )*
                    loop160:
                    do {
                        int alt160=2;
                        int LA160_0 = input.LA(1);

                        if ( (LA160_0==30) ) {
                            alt160=1;
                        }


                        switch (alt160) {
                    	case 1 :
                    	    // InternalSCTX.g:5363:5: otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) )
                    	    {
                    	    otherlv_4=(Token)match(input,30,FollowSets000.FOLLOW_34); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getBitwiseAndExpressionAccess().getAmpersandKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:5367:1: ( (lv_subExpressions_5_0= ruleCompareOperation ) )
                    	    // InternalSCTX.g:5368:1: (lv_subExpressions_5_0= ruleCompareOperation )
                    	    {
                    	    // InternalSCTX.g:5368:1: (lv_subExpressions_5_0= ruleCompareOperation )
                    	    // InternalSCTX.g:5369:3: lv_subExpressions_5_0= ruleCompareOperation
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_92);
                    	    lv_subExpressions_5_0=ruleCompareOperation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"subExpressions",
                    	              		lv_subExpressions_5_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperation");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop160;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseAndExpression"


    // $ANTLR start "entryRuleCompareOperation"
    // InternalSCTX.g:5393:1: entryRuleCompareOperation returns [EObject current=null] : iv_ruleCompareOperation= ruleCompareOperation EOF ;
    public final EObject entryRuleCompareOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompareOperation = null;


        try {
            // InternalSCTX.g:5394:2: (iv_ruleCompareOperation= ruleCompareOperation EOF )
            // InternalSCTX.g:5395:2: iv_ruleCompareOperation= ruleCompareOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompareOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCompareOperation=ruleCompareOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCompareOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCompareOperation"


    // $ANTLR start "ruleCompareOperation"
    // InternalSCTX.g:5402:1: ruleCompareOperation returns [EObject current=null] : (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? ) ;
    public final EObject ruleCompareOperation() throws RecognitionException {
        EObject current = null;

        EObject this_NotOrValuedExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5405:28: ( (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? ) )
            // InternalSCTX.g:5406:1: (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? )
            {
            // InternalSCTX.g:5406:1: (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? )
            // InternalSCTX.g:5407:2: this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getCompareOperationAccess().getNotOrValuedExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_93);
            this_NotOrValuedExpression_0=ruleNotOrValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_NotOrValuedExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSCTX.g:5418:1: ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )?
            int alt162=2;
            alt162 = dfa162.predict(input);
            switch (alt162) {
                case 1 :
                    // InternalSCTX.g:5418:2: () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) )
                    {
                    // InternalSCTX.g:5418:2: ()
                    // InternalSCTX.g:5419:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getCompareOperationAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:5427:2: ( (lv_operator_2_0= ruleCompareOperator ) )
                    // InternalSCTX.g:5428:1: (lv_operator_2_0= ruleCompareOperator )
                    {
                    // InternalSCTX.g:5428:1: (lv_operator_2_0= ruleCompareOperator )
                    // InternalSCTX.g:5429:3: lv_operator_2_0= ruleCompareOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCompareOperationAccess().getOperatorCompareOperatorEnumRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_34);
                    lv_operator_2_0=ruleCompareOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCompareOperationRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:5445:2: ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) )
                    // InternalSCTX.g:5446:1: (lv_subExpressions_3_0= ruleNotOrValuedExpression )
                    {
                    // InternalSCTX.g:5446:1: (lv_subExpressions_3_0= ruleNotOrValuedExpression )
                    // InternalSCTX.g:5447:3: lv_subExpressions_3_0= ruleNotOrValuedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCompareOperationAccess().getSubExpressionsNotOrValuedExpressionParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_3_0=ruleNotOrValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCompareOperationRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.NotOrValuedExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompareOperation"


    // $ANTLR start "entryRuleNotOrValuedExpression"
    // InternalSCTX.g:5471:1: entryRuleNotOrValuedExpression returns [EObject current=null] : iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF ;
    public final EObject entryRuleNotOrValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNotOrValuedExpression = null;


        try {
            // InternalSCTX.g:5472:2: (iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF )
            // InternalSCTX.g:5473:2: iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNotOrValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNotOrValuedExpression=ruleNotOrValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNotOrValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNotOrValuedExpression"


    // $ANTLR start "ruleNotOrValuedExpression"
    // InternalSCTX.g:5480:1: ruleNotOrValuedExpression returns [EObject current=null] : (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression ) ;
    public final EObject ruleNotOrValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ValuedExpression_0 = null;

        EObject this_NotExpression_1 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5483:28: ( (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression ) )
            // InternalSCTX.g:5484:1: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )
            {
            // InternalSCTX.g:5484:1: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )
            int alt163=2;
            alt163 = dfa163.predict(input);
            switch (alt163) {
                case 1 :
                    // InternalSCTX.g:5485:2: this_ValuedExpression_0= ruleValuedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNotOrValuedExpressionAccess().getValuedExpressionParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedExpression_0=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ValuedExpression_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:5498:2: this_NotExpression_1= ruleNotExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNotOrValuedExpressionAccess().getNotExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NotExpression_1=ruleNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_NotExpression_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotOrValuedExpression"


    // $ANTLR start "entryRuleNotExpression"
    // InternalSCTX.g:5517:1: entryRuleNotExpression returns [EObject current=null] : iv_ruleNotExpression= ruleNotExpression EOF ;
    public final EObject entryRuleNotExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNotExpression = null;


        try {
            // InternalSCTX.g:5518:2: (iv_ruleNotExpression= ruleNotExpression EOF )
            // InternalSCTX.g:5519:2: iv_ruleNotExpression= ruleNotExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNotExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNotExpression=ruleNotExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNotExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNotExpression"


    // $ANTLR start "ruleNotExpression"
    // InternalSCTX.g:5526:1: ruleNotExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression ) ;
    public final EObject ruleNotExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_AtomicExpression_3 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5529:28: ( ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression ) )
            // InternalSCTX.g:5530:1: ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression )
            {
            // InternalSCTX.g:5530:1: ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression )
            int alt164=2;
            int LA164_0 = input.LA(1);

            if ( (LA164_0==29) ) {
                alt164=1;
            }
            else if ( (LA164_0==RULE_ID||LA164_0==RULE_HOSTCODE||LA164_0==RULE_BOOLEAN||LA164_0==26||LA164_0==56||LA164_0==63||(LA164_0>=107 && LA164_0<=108)) ) {
                alt164=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 164, 0, input);

                throw nvae;
            }
            switch (alt164) {
                case 1 :
                    // InternalSCTX.g:5530:2: ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) )
                    {
                    // InternalSCTX.g:5530:2: ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) )
                    // InternalSCTX.g:5530:3: () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) )
                    {
                    // InternalSCTX.g:5530:3: ()
                    // InternalSCTX.g:5531:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getNotExpressionAccess().getOperatorExpressionAction_0_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:5539:2: ( (lv_operator_1_0= ruleNotOperator ) )
                    // InternalSCTX.g:5540:1: (lv_operator_1_0= ruleNotOperator )
                    {
                    // InternalSCTX.g:5540:1: (lv_operator_1_0= ruleNotOperator )
                    // InternalSCTX.g:5541:3: lv_operator_1_0= ruleNotOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getNotExpressionAccess().getOperatorNotOperatorEnumRuleCall_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_34);
                    lv_operator_1_0=ruleNotOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNotExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_1_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.NotOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:5557:2: ( (lv_subExpressions_2_0= ruleNotExpression ) )
                    // InternalSCTX.g:5558:1: (lv_subExpressions_2_0= ruleNotExpression )
                    {
                    // InternalSCTX.g:5558:1: (lv_subExpressions_2_0= ruleNotExpression )
                    // InternalSCTX.g:5559:3: lv_subExpressions_2_0= ruleNotExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getNotExpressionAccess().getSubExpressionsNotExpressionParserRuleCall_0_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNotExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.NotExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:5577:2: this_AtomicExpression_3= ruleAtomicExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNotExpressionAccess().getAtomicExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicExpression_3=ruleAtomicExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_AtomicExpression_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotExpression"


    // $ANTLR start "entryRuleValuedExpression"
    // InternalSCTX.g:5596:1: entryRuleValuedExpression returns [EObject current=null] : iv_ruleValuedExpression= ruleValuedExpression EOF ;
    public final EObject entryRuleValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedExpression = null;


        try {
            // InternalSCTX.g:5597:2: (iv_ruleValuedExpression= ruleValuedExpression EOF )
            // InternalSCTX.g:5598:2: iv_ruleValuedExpression= ruleValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedExpression=ruleValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedExpression"


    // $ANTLR start "ruleValuedExpression"
    // InternalSCTX.g:5605:1: ruleValuedExpression returns [EObject current=null] : this_AddExpression_0= ruleAddExpression ;
    public final EObject ruleValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AddExpression_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5608:28: (this_AddExpression_0= ruleAddExpression )
            // InternalSCTX.g:5610:2: this_AddExpression_0= ruleAddExpression
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getValuedExpressionAccess().getAddExpressionParserRuleCall()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_AddExpression_0=ruleAddExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_AddExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedExpression"


    // $ANTLR start "entryRuleAddExpression"
    // InternalSCTX.g:5629:1: entryRuleAddExpression returns [EObject current=null] : iv_ruleAddExpression= ruleAddExpression EOF ;
    public final EObject entryRuleAddExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAddExpression = null;


        try {
            // InternalSCTX.g:5630:2: (iv_ruleAddExpression= ruleAddExpression EOF )
            // InternalSCTX.g:5631:2: iv_ruleAddExpression= ruleAddExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAddExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAddExpression=ruleAddExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAddExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAddExpression"


    // $ANTLR start "ruleAddExpression"
    // InternalSCTX.g:5638:1: ruleAddExpression returns [EObject current=null] : (this_SubExpression_0= ruleSubExpression ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )* )? ) ;
    public final EObject ruleAddExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_SubExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5641:28: ( (this_SubExpression_0= ruleSubExpression ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )* )? ) )
            // InternalSCTX.g:5642:1: (this_SubExpression_0= ruleSubExpression ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )* )? )
            {
            // InternalSCTX.g:5642:1: (this_SubExpression_0= ruleSubExpression ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )* )? )
            // InternalSCTX.g:5643:2: this_SubExpression_0= ruleSubExpression ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAddExpressionAccess().getSubExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_94);
            this_SubExpression_0=ruleSubExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_SubExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSCTX.g:5654:1: ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )* )?
            int alt166=2;
            int LA166_0 = input.LA(1);

            if ( (LA166_0==68) ) {
                alt166=1;
            }
            switch (alt166) {
                case 1 :
                    // InternalSCTX.g:5654:2: () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )*
                    {
                    // InternalSCTX.g:5654:2: ()
                    // InternalSCTX.g:5655:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getAddExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:5663:2: ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) )
                    // InternalSCTX.g:5663:3: ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) )
                    {
                    // InternalSCTX.g:5663:3: ( (lv_operator_2_0= ruleAddOperator ) )
                    // InternalSCTX.g:5664:1: (lv_operator_2_0= ruleAddOperator )
                    {
                    // InternalSCTX.g:5664:1: (lv_operator_2_0= ruleAddOperator )
                    // InternalSCTX.g:5665:3: lv_operator_2_0= ruleAddOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAddExpressionAccess().getOperatorAddOperatorEnumRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_95);
                    lv_operator_2_0=ruleAddOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAddExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.AddOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:5681:2: ( (lv_subExpressions_3_0= ruleSubExpression ) )
                    // InternalSCTX.g:5682:1: (lv_subExpressions_3_0= ruleSubExpression )
                    {
                    // InternalSCTX.g:5682:1: (lv_subExpressions_3_0= ruleSubExpression )
                    // InternalSCTX.g:5683:3: lv_subExpressions_3_0= ruleSubExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAddExpressionAccess().getSubExpressionsSubExpressionParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_94);
                    lv_subExpressions_3_0=ruleSubExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAddExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.SubExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:5699:3: (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )*
                    loop165:
                    do {
                        int alt165=2;
                        int LA165_0 = input.LA(1);

                        if ( (LA165_0==68) ) {
                            alt165=1;
                        }


                        switch (alt165) {
                    	case 1 :
                    	    // InternalSCTX.g:5699:5: otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,68,FollowSets000.FOLLOW_95); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getAddExpressionAccess().getPlusSignKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:5703:1: ( (lv_subExpressions_5_0= ruleSubExpression ) )
                    	    // InternalSCTX.g:5704:1: (lv_subExpressions_5_0= ruleSubExpression )
                    	    {
                    	    // InternalSCTX.g:5704:1: (lv_subExpressions_5_0= ruleSubExpression )
                    	    // InternalSCTX.g:5705:3: lv_subExpressions_5_0= ruleSubExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAddExpressionAccess().getSubExpressionsSubExpressionParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_94);
                    	    lv_subExpressions_5_0=ruleSubExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAddExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"subExpressions",
                    	              		lv_subExpressions_5_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.SubExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop165;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAddExpression"


    // $ANTLR start "entryRuleSubExpression"
    // InternalSCTX.g:5729:1: entryRuleSubExpression returns [EObject current=null] : iv_ruleSubExpression= ruleSubExpression EOF ;
    public final EObject entryRuleSubExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSubExpression = null;


        try {
            // InternalSCTX.g:5730:2: (iv_ruleSubExpression= ruleSubExpression EOF )
            // InternalSCTX.g:5731:2: iv_ruleSubExpression= ruleSubExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSubExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSubExpression=ruleSubExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSubExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSubExpression"


    // $ANTLR start "ruleSubExpression"
    // InternalSCTX.g:5738:1: ruleSubExpression returns [EObject current=null] : (this_MultExpression_0= ruleMultExpression ( () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) ) )* )? ) ;
    public final EObject ruleSubExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_MultExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5741:28: ( (this_MultExpression_0= ruleMultExpression ( () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) ) )* )? ) )
            // InternalSCTX.g:5742:1: (this_MultExpression_0= ruleMultExpression ( () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) ) )* )? )
            {
            // InternalSCTX.g:5742:1: (this_MultExpression_0= ruleMultExpression ( () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) ) )* )? )
            // InternalSCTX.g:5743:2: this_MultExpression_0= ruleMultExpression ( () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getSubExpressionAccess().getMultExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_96);
            this_MultExpression_0=ruleMultExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_MultExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSCTX.g:5754:1: ( () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) ) )* )?
            int alt168=2;
            int LA168_0 = input.LA(1);

            if ( (LA168_0==69) ) {
                alt168=1;
            }
            switch (alt168) {
                case 1 :
                    // InternalSCTX.g:5754:2: () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) ) )*
                    {
                    // InternalSCTX.g:5754:2: ()
                    // InternalSCTX.g:5755:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getSubExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:5763:2: ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) )
                    // InternalSCTX.g:5763:3: ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) )
                    {
                    // InternalSCTX.g:5763:3: ( (lv_operator_2_0= ruleSubOperator ) )
                    // InternalSCTX.g:5764:1: (lv_operator_2_0= ruleSubOperator )
                    {
                    // InternalSCTX.g:5764:1: (lv_operator_2_0= ruleSubOperator )
                    // InternalSCTX.g:5765:3: lv_operator_2_0= ruleSubOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSubExpressionAccess().getOperatorSubOperatorEnumRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_95);
                    lv_operator_2_0=ruleSubOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSubExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.SubOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:5781:2: ( (lv_subExpressions_3_0= ruleMultExpression ) )
                    // InternalSCTX.g:5782:1: (lv_subExpressions_3_0= ruleMultExpression )
                    {
                    // InternalSCTX.g:5782:1: (lv_subExpressions_3_0= ruleMultExpression )
                    // InternalSCTX.g:5783:3: lv_subExpressions_3_0= ruleMultExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSubExpressionAccess().getSubExpressionsMultExpressionParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_96);
                    lv_subExpressions_3_0=ruleMultExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSubExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.MultExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:5799:3: (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) ) )*
                    loop167:
                    do {
                        int alt167=2;
                        int LA167_0 = input.LA(1);

                        if ( (LA167_0==69) ) {
                            alt167=1;
                        }


                        switch (alt167) {
                    	case 1 :
                    	    // InternalSCTX.g:5799:5: otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,69,FollowSets000.FOLLOW_95); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getSubExpressionAccess().getHyphenMinusKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:5803:1: ( (lv_subExpressions_5_0= ruleMultExpression ) )
                    	    // InternalSCTX.g:5804:1: (lv_subExpressions_5_0= ruleMultExpression )
                    	    {
                    	    // InternalSCTX.g:5804:1: (lv_subExpressions_5_0= ruleMultExpression )
                    	    // InternalSCTX.g:5805:3: lv_subExpressions_5_0= ruleMultExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getSubExpressionAccess().getSubExpressionsMultExpressionParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_96);
                    	    lv_subExpressions_5_0=ruleMultExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getSubExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"subExpressions",
                    	              		lv_subExpressions_5_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.MultExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop167;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubExpression"


    // $ANTLR start "entryRuleMultExpression"
    // InternalSCTX.g:5829:1: entryRuleMultExpression returns [EObject current=null] : iv_ruleMultExpression= ruleMultExpression EOF ;
    public final EObject entryRuleMultExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultExpression = null;


        try {
            // InternalSCTX.g:5830:2: (iv_ruleMultExpression= ruleMultExpression EOF )
            // InternalSCTX.g:5831:2: iv_ruleMultExpression= ruleMultExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMultExpression=ruleMultExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultExpression"


    // $ANTLR start "ruleMultExpression"
    // InternalSCTX.g:5838:1: ruleMultExpression returns [EObject current=null] : (this_DivExpression_0= ruleDivExpression ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) ) )* )? ) ;
    public final EObject ruleMultExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_DivExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5841:28: ( (this_DivExpression_0= ruleDivExpression ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) ) )* )? ) )
            // InternalSCTX.g:5842:1: (this_DivExpression_0= ruleDivExpression ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) ) )* )? )
            {
            // InternalSCTX.g:5842:1: (this_DivExpression_0= ruleDivExpression ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) ) )* )? )
            // InternalSCTX.g:5843:2: this_DivExpression_0= ruleDivExpression ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getMultExpressionAccess().getDivExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_97);
            this_DivExpression_0=ruleDivExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_DivExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSCTX.g:5854:1: ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) ) )* )?
            int alt170=2;
            int LA170_0 = input.LA(1);

            if ( (LA170_0==70) ) {
                alt170=1;
            }
            switch (alt170) {
                case 1 :
                    // InternalSCTX.g:5854:2: () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) ) )*
                    {
                    // InternalSCTX.g:5854:2: ()
                    // InternalSCTX.g:5855:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getMultExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:5863:2: ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) )
                    // InternalSCTX.g:5863:3: ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) )
                    {
                    // InternalSCTX.g:5863:3: ( (lv_operator_2_0= ruleMultOperator ) )
                    // InternalSCTX.g:5864:1: (lv_operator_2_0= ruleMultOperator )
                    {
                    // InternalSCTX.g:5864:1: (lv_operator_2_0= ruleMultOperator )
                    // InternalSCTX.g:5865:3: lv_operator_2_0= ruleMultOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMultExpressionAccess().getOperatorMultOperatorEnumRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_95);
                    lv_operator_2_0=ruleMultOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMultExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.MultOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:5881:2: ( (lv_subExpressions_3_0= ruleDivExpression ) )
                    // InternalSCTX.g:5882:1: (lv_subExpressions_3_0= ruleDivExpression )
                    {
                    // InternalSCTX.g:5882:1: (lv_subExpressions_3_0= ruleDivExpression )
                    // InternalSCTX.g:5883:3: lv_subExpressions_3_0= ruleDivExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMultExpressionAccess().getSubExpressionsDivExpressionParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_97);
                    lv_subExpressions_3_0=ruleDivExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMultExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.DivExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:5899:3: (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) ) )*
                    loop169:
                    do {
                        int alt169=2;
                        int LA169_0 = input.LA(1);

                        if ( (LA169_0==70) ) {
                            alt169=1;
                        }


                        switch (alt169) {
                    	case 1 :
                    	    // InternalSCTX.g:5899:5: otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,70,FollowSets000.FOLLOW_95); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getMultExpressionAccess().getAsteriskKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:5903:1: ( (lv_subExpressions_5_0= ruleDivExpression ) )
                    	    // InternalSCTX.g:5904:1: (lv_subExpressions_5_0= ruleDivExpression )
                    	    {
                    	    // InternalSCTX.g:5904:1: (lv_subExpressions_5_0= ruleDivExpression )
                    	    // InternalSCTX.g:5905:3: lv_subExpressions_5_0= ruleDivExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMultExpressionAccess().getSubExpressionsDivExpressionParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_97);
                    	    lv_subExpressions_5_0=ruleDivExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMultExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"subExpressions",
                    	              		lv_subExpressions_5_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.DivExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop169;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultExpression"


    // $ANTLR start "entryRuleDivExpression"
    // InternalSCTX.g:5929:1: entryRuleDivExpression returns [EObject current=null] : iv_ruleDivExpression= ruleDivExpression EOF ;
    public final EObject entryRuleDivExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDivExpression = null;


        try {
            // InternalSCTX.g:5930:2: (iv_ruleDivExpression= ruleDivExpression EOF )
            // InternalSCTX.g:5931:2: iv_ruleDivExpression= ruleDivExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDivExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDivExpression=ruleDivExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDivExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDivExpression"


    // $ANTLR start "ruleDivExpression"
    // InternalSCTX.g:5938:1: ruleDivExpression returns [EObject current=null] : (this_ModExpression_0= ruleModExpression ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) ) )* )? ) ;
    public final EObject ruleDivExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_ModExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5941:28: ( (this_ModExpression_0= ruleModExpression ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) ) )* )? ) )
            // InternalSCTX.g:5942:1: (this_ModExpression_0= ruleModExpression ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) ) )* )? )
            {
            // InternalSCTX.g:5942:1: (this_ModExpression_0= ruleModExpression ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) ) )* )? )
            // InternalSCTX.g:5943:2: this_ModExpression_0= ruleModExpression ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getDivExpressionAccess().getModExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_98);
            this_ModExpression_0=ruleModExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_ModExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSCTX.g:5954:1: ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) ) )* )?
            int alt172=2;
            int LA172_0 = input.LA(1);

            if ( (LA172_0==71) ) {
                alt172=1;
            }
            switch (alt172) {
                case 1 :
                    // InternalSCTX.g:5954:2: () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) ) )*
                    {
                    // InternalSCTX.g:5954:2: ()
                    // InternalSCTX.g:5955:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getDivExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:5963:2: ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) )
                    // InternalSCTX.g:5963:3: ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) )
                    {
                    // InternalSCTX.g:5963:3: ( (lv_operator_2_0= ruleDivOperator ) )
                    // InternalSCTX.g:5964:1: (lv_operator_2_0= ruleDivOperator )
                    {
                    // InternalSCTX.g:5964:1: (lv_operator_2_0= ruleDivOperator )
                    // InternalSCTX.g:5965:3: lv_operator_2_0= ruleDivOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDivExpressionAccess().getOperatorDivOperatorEnumRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_95);
                    lv_operator_2_0=ruleDivOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDivExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.DivOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:5981:2: ( (lv_subExpressions_3_0= ruleModExpression ) )
                    // InternalSCTX.g:5982:1: (lv_subExpressions_3_0= ruleModExpression )
                    {
                    // InternalSCTX.g:5982:1: (lv_subExpressions_3_0= ruleModExpression )
                    // InternalSCTX.g:5983:3: lv_subExpressions_3_0= ruleModExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDivExpressionAccess().getSubExpressionsModExpressionParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_98);
                    lv_subExpressions_3_0=ruleModExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDivExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.ModExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:5999:3: (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) ) )*
                    loop171:
                    do {
                        int alt171=2;
                        int LA171_0 = input.LA(1);

                        if ( (LA171_0==71) ) {
                            alt171=1;
                        }


                        switch (alt171) {
                    	case 1 :
                    	    // InternalSCTX.g:5999:5: otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,71,FollowSets000.FOLLOW_95); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getDivExpressionAccess().getSolidusKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:6003:1: ( (lv_subExpressions_5_0= ruleModExpression ) )
                    	    // InternalSCTX.g:6004:1: (lv_subExpressions_5_0= ruleModExpression )
                    	    {
                    	    // InternalSCTX.g:6004:1: (lv_subExpressions_5_0= ruleModExpression )
                    	    // InternalSCTX.g:6005:3: lv_subExpressions_5_0= ruleModExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getDivExpressionAccess().getSubExpressionsModExpressionParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_98);
                    	    lv_subExpressions_5_0=ruleModExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getDivExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"subExpressions",
                    	              		lv_subExpressions_5_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.ModExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop171;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDivExpression"


    // $ANTLR start "entryRuleModExpression"
    // InternalSCTX.g:6029:1: entryRuleModExpression returns [EObject current=null] : iv_ruleModExpression= ruleModExpression EOF ;
    public final EObject entryRuleModExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModExpression = null;


        try {
            // InternalSCTX.g:6030:2: (iv_ruleModExpression= ruleModExpression EOF )
            // InternalSCTX.g:6031:2: iv_ruleModExpression= ruleModExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleModExpression=ruleModExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModExpression"


    // $ANTLR start "ruleModExpression"
    // InternalSCTX.g:6038:1: ruleModExpression returns [EObject current=null] : (this_NegExpression_0= ruleNegExpression ( () ( ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )? ) ;
    public final EObject ruleModExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_NegExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:6041:28: ( (this_NegExpression_0= ruleNegExpression ( () ( ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )? ) )
            // InternalSCTX.g:6042:1: (this_NegExpression_0= ruleNegExpression ( () ( ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )? )
            {
            // InternalSCTX.g:6042:1: (this_NegExpression_0= ruleNegExpression ( () ( ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )? )
            // InternalSCTX.g:6043:2: this_NegExpression_0= ruleNegExpression ( () ( ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getModExpressionAccess().getNegExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_99);
            this_NegExpression_0=ruleNegExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_NegExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSCTX.g:6054:1: ( () ( ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )?
            int alt174=2;
            int LA174_0 = input.LA(1);

            if ( (LA174_0==72) ) {
                alt174=1;
            }
            switch (alt174) {
                case 1 :
                    // InternalSCTX.g:6054:2: () ( ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )*
                    {
                    // InternalSCTX.g:6054:2: ()
                    // InternalSCTX.g:6055:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getModExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:6063:2: ( ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
                    // InternalSCTX.g:6063:3: ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    {
                    // InternalSCTX.g:6063:3: ( (lv_operator_2_0= ruleModOperator ) )
                    // InternalSCTX.g:6064:1: (lv_operator_2_0= ruleModOperator )
                    {
                    // InternalSCTX.g:6064:1: (lv_operator_2_0= ruleModOperator )
                    // InternalSCTX.g:6065:3: lv_operator_2_0= ruleModOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getModExpressionAccess().getOperatorModOperatorEnumRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_95);
                    lv_operator_2_0=ruleModOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getModExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.ModOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:6081:2: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    // InternalSCTX.g:6082:1: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    {
                    // InternalSCTX.g:6082:1: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    // InternalSCTX.g:6083:3: lv_subExpressions_3_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getModExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_99);
                    lv_subExpressions_3_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getModExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:6099:3: (otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )*
                    loop173:
                    do {
                        int alt173=2;
                        int LA173_0 = input.LA(1);

                        if ( (LA173_0==72) ) {
                            alt173=1;
                        }


                        switch (alt173) {
                    	case 1 :
                    	    // InternalSCTX.g:6099:5: otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,72,FollowSets000.FOLLOW_95); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getModExpressionAccess().getPercentSignKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:6103:1: ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
                    	    // InternalSCTX.g:6104:1: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                    	    {
                    	    // InternalSCTX.g:6104:1: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                    	    // InternalSCTX.g:6105:3: lv_subExpressions_5_0= ruleAtomicValuedExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getModExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_99);
                    	    lv_subExpressions_5_0=ruleAtomicValuedExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getModExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"subExpressions",
                    	              		lv_subExpressions_5_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop173;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModExpression"


    // $ANTLR start "entryRuleNegExpression"
    // InternalSCTX.g:6129:1: entryRuleNegExpression returns [EObject current=null] : iv_ruleNegExpression= ruleNegExpression EOF ;
    public final EObject entryRuleNegExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNegExpression = null;


        try {
            // InternalSCTX.g:6130:2: (iv_ruleNegExpression= ruleNegExpression EOF )
            // InternalSCTX.g:6131:2: iv_ruleNegExpression= ruleNegExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNegExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNegExpression=ruleNegExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNegExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNegExpression"


    // $ANTLR start "ruleNegExpression"
    // InternalSCTX.g:6138:1: ruleNegExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_AtomicValuedExpression_3= ruleAtomicValuedExpression ) ;
    public final EObject ruleNegExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_AtomicValuedExpression_3 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:6141:28: ( ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_AtomicValuedExpression_3= ruleAtomicValuedExpression ) )
            // InternalSCTX.g:6142:1: ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_AtomicValuedExpression_3= ruleAtomicValuedExpression )
            {
            // InternalSCTX.g:6142:1: ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_AtomicValuedExpression_3= ruleAtomicValuedExpression )
            int alt175=2;
            int LA175_0 = input.LA(1);

            if ( (LA175_0==69) ) {
                alt175=1;
            }
            else if ( ((LA175_0>=RULE_STRING && LA175_0<=RULE_BOOLEAN)||LA175_0==26||LA175_0==56||LA175_0==63||(LA175_0>=107 && LA175_0<=108)) ) {
                alt175=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 175, 0, input);

                throw nvae;
            }
            switch (alt175) {
                case 1 :
                    // InternalSCTX.g:6142:2: ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) )
                    {
                    // InternalSCTX.g:6142:2: ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) )
                    // InternalSCTX.g:6142:3: () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) )
                    {
                    // InternalSCTX.g:6142:3: ()
                    // InternalSCTX.g:6143:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getNegExpressionAccess().getOperatorExpressionAction_0_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:6151:2: ( (lv_operator_1_0= ruleSubOperator ) )
                    // InternalSCTX.g:6152:1: (lv_operator_1_0= ruleSubOperator )
                    {
                    // InternalSCTX.g:6152:1: (lv_operator_1_0= ruleSubOperator )
                    // InternalSCTX.g:6153:3: lv_operator_1_0= ruleSubOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getNegExpressionAccess().getOperatorSubOperatorEnumRuleCall_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_95);
                    lv_operator_1_0=ruleSubOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNegExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_1_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.SubOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:6169:2: ( (lv_subExpressions_2_0= ruleNegExpression ) )
                    // InternalSCTX.g:6170:1: (lv_subExpressions_2_0= ruleNegExpression )
                    {
                    // InternalSCTX.g:6170:1: (lv_subExpressions_2_0= ruleNegExpression )
                    // InternalSCTX.g:6171:3: lv_subExpressions_2_0= ruleNegExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getNegExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_0_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleNegExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNegExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.NegExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6189:2: this_AtomicValuedExpression_3= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNegExpressionAccess().getAtomicValuedExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicValuedExpression_3=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_AtomicValuedExpression_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNegExpression"


    // $ANTLR start "entryRuleAtomicExpression"
    // InternalSCTX.g:6208:1: entryRuleAtomicExpression returns [EObject current=null] : iv_ruleAtomicExpression= ruleAtomicExpression EOF ;
    public final EObject entryRuleAtomicExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAtomicExpression = null;


        try {
            // InternalSCTX.g:6209:2: (iv_ruleAtomicExpression= ruleAtomicExpression EOF )
            // InternalSCTX.g:6210:2: iv_ruleAtomicExpression= ruleAtomicExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAtomicExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAtomicExpression=ruleAtomicExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAtomicExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAtomicExpression"


    // $ANTLR start "ruleAtomicExpression"
    // InternalSCTX.g:6217:1: ruleAtomicExpression returns [EObject current=null] : (this_BoolValue_0= ruleBoolValue | this_ValuedObjectTestExpression_1= ruleValuedObjectTestExpression | (otherlv_2= '(' this_BoolExpression_3= ruleBoolExpression otherlv_4= ')' ) | this_ReferenceCall_5= ruleReferenceCall | this_FunctionCall_6= ruleFunctionCall | this_TextExpression_7= ruleTextExpression ) ;
    public final EObject ruleAtomicExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_BoolValue_0 = null;

        EObject this_ValuedObjectTestExpression_1 = null;

        EObject this_BoolExpression_3 = null;

        EObject this_ReferenceCall_5 = null;

        EObject this_FunctionCall_6 = null;

        EObject this_TextExpression_7 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:6220:28: ( (this_BoolValue_0= ruleBoolValue | this_ValuedObjectTestExpression_1= ruleValuedObjectTestExpression | (otherlv_2= '(' this_BoolExpression_3= ruleBoolExpression otherlv_4= ')' ) | this_ReferenceCall_5= ruleReferenceCall | this_FunctionCall_6= ruleFunctionCall | this_TextExpression_7= ruleTextExpression ) )
            // InternalSCTX.g:6221:1: (this_BoolValue_0= ruleBoolValue | this_ValuedObjectTestExpression_1= ruleValuedObjectTestExpression | (otherlv_2= '(' this_BoolExpression_3= ruleBoolExpression otherlv_4= ')' ) | this_ReferenceCall_5= ruleReferenceCall | this_FunctionCall_6= ruleFunctionCall | this_TextExpression_7= ruleTextExpression )
            {
            // InternalSCTX.g:6221:1: (this_BoolValue_0= ruleBoolValue | this_ValuedObjectTestExpression_1= ruleValuedObjectTestExpression | (otherlv_2= '(' this_BoolExpression_3= ruleBoolExpression otherlv_4= ')' ) | this_ReferenceCall_5= ruleReferenceCall | this_FunctionCall_6= ruleFunctionCall | this_TextExpression_7= ruleTextExpression )
            int alt176=6;
            alt176 = dfa176.predict(input);
            switch (alt176) {
                case 1 :
                    // InternalSCTX.g:6222:2: this_BoolValue_0= ruleBoolValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicExpressionAccess().getBoolValueParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolValue_0=ruleBoolValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_BoolValue_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6235:2: this_ValuedObjectTestExpression_1= ruleValuedObjectTestExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicExpressionAccess().getValuedObjectTestExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedObjectTestExpression_1=ruleValuedObjectTestExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ValuedObjectTestExpression_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:6247:6: (otherlv_2= '(' this_BoolExpression_3= ruleBoolExpression otherlv_4= ')' )
                    {
                    // InternalSCTX.g:6247:6: (otherlv_2= '(' this_BoolExpression_3= ruleBoolExpression otherlv_4= ')' )
                    // InternalSCTX.g:6247:8: otherlv_2= '(' this_BoolExpression_3= ruleBoolExpression otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,26,FollowSets000.FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicExpressionAccess().getBoolExpressionParserRuleCall_2_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_24);
                    this_BoolExpression_3=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_BoolExpression_3; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_4=(Token)match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getAtomicExpressionAccess().getRightParenthesisKeyword_2_2());
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCTX.g:6269:2: this_ReferenceCall_5= ruleReferenceCall
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicExpressionAccess().getReferenceCallParserRuleCall_3()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceCall_5=ruleReferenceCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ReferenceCall_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalSCTX.g:6282:2: this_FunctionCall_6= ruleFunctionCall
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicExpressionAccess().getFunctionCallParserRuleCall_4()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FunctionCall_6=ruleFunctionCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_FunctionCall_6; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalSCTX.g:6295:2: this_TextExpression_7= ruleTextExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicExpressionAccess().getTextExpressionParserRuleCall_5()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TextExpression_7=ruleTextExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TextExpression_7; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAtomicExpression"


    // $ANTLR start "entryRuleAtomicValuedExpression"
    // InternalSCTX.g:6314:1: entryRuleAtomicValuedExpression returns [EObject current=null] : iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF ;
    public final EObject entryRuleAtomicValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAtomicValuedExpression = null;


        try {
            // InternalSCTX.g:6315:2: (iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF )
            // InternalSCTX.g:6316:2: iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAtomicValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAtomicValuedExpression=ruleAtomicValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAtomicValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAtomicValuedExpression"


    // $ANTLR start "ruleAtomicValuedExpression"
    // InternalSCTX.g:6323:1: ruleAtomicValuedExpression returns [EObject current=null] : (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | (otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')' ) | this_AtomicExpression_6= ruleAtomicExpression ) ;
    public final EObject ruleAtomicValuedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject this_IntValue_0 = null;

        EObject this_FloatValue_1 = null;

        EObject this_StringValue_2 = null;

        EObject this_ValuedExpression_4 = null;

        EObject this_AtomicExpression_6 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:6326:28: ( (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | (otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')' ) | this_AtomicExpression_6= ruleAtomicExpression ) )
            // InternalSCTX.g:6327:1: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | (otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')' ) | this_AtomicExpression_6= ruleAtomicExpression )
            {
            // InternalSCTX.g:6327:1: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | (otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')' ) | this_AtomicExpression_6= ruleAtomicExpression )
            int alt177=5;
            alt177 = dfa177.predict(input);
            switch (alt177) {
                case 1 :
                    // InternalSCTX.g:6328:2: this_IntValue_0= ruleIntValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getIntValueParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IntValue_0=ruleIntValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_IntValue_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6341:2: this_FloatValue_1= ruleFloatValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getFloatValueParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FloatValue_1=ruleFloatValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_FloatValue_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:6354:2: this_StringValue_2= ruleStringValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getStringValueParserRuleCall_2()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringValue_2=ruleStringValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_StringValue_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:6366:6: (otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')' )
                    {
                    // InternalSCTX.g:6366:6: (otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')' )
                    // InternalSCTX.g:6366:8: otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')'
                    {
                    otherlv_3=(Token)match(input,26,FollowSets000.FOLLOW_95); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getAtomicValuedExpressionAccess().getLeftParenthesisKeyword_3_0());
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getValuedExpressionParserRuleCall_3_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_24);
                    this_ValuedExpression_4=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ValuedExpression_4; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_5=(Token)match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getAtomicValuedExpressionAccess().getRightParenthesisKeyword_3_2());
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCTX.g:6388:2: this_AtomicExpression_6= ruleAtomicExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getAtomicExpressionParserRuleCall_4()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicExpression_6=ruleAtomicExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_AtomicExpression_6; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAtomicValuedExpression"


    // $ANTLR start "entryRuleValuedObjectTestExpression"
    // InternalSCTX.g:6407:1: entryRuleValuedObjectTestExpression returns [EObject current=null] : iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF ;
    public final EObject entryRuleValuedObjectTestExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObjectTestExpression = null;


        try {
            // InternalSCTX.g:6408:2: (iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF )
            // InternalSCTX.g:6409:2: iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectTestExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObjectTestExpression=ruleValuedObjectTestExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObjectTestExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObjectTestExpression"


    // $ANTLR start "ruleValuedObjectTestExpression"
    // InternalSCTX.g:6416:1: ruleValuedObjectTestExpression returns [EObject current=null] : ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' ) | this_ValuedObjectReference_5= ruleValuedObjectReference ) ;
    public final EObject ruleValuedObjectTestExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Enumerator lv_operator_1_1 = null;

        Enumerator lv_operator_1_2 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject this_ValuedObjectReference_5 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:6419:28: ( ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' ) | this_ValuedObjectReference_5= ruleValuedObjectReference ) )
            // InternalSCTX.g:6420:1: ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' ) | this_ValuedObjectReference_5= ruleValuedObjectReference )
            {
            // InternalSCTX.g:6420:1: ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' ) | this_ValuedObjectReference_5= ruleValuedObjectReference )
            int alt179=2;
            int LA179_0 = input.LA(1);

            if ( ((LA179_0>=107 && LA179_0<=108)) ) {
                alt179=1;
            }
            else if ( (LA179_0==RULE_ID) ) {
                alt179=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 179, 0, input);

                throw nvae;
            }
            switch (alt179) {
                case 1 :
                    // InternalSCTX.g:6420:2: ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' )
                    {
                    // InternalSCTX.g:6420:2: ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' )
                    // InternalSCTX.g:6420:3: () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')'
                    {
                    // InternalSCTX.g:6420:3: ()
                    // InternalSCTX.g:6421:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getValuedObjectTestExpressionAccess().getOperatorExpressionAction_0_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:6429:2: ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) )
                    // InternalSCTX.g:6430:1: ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) )
                    {
                    // InternalSCTX.g:6430:1: ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) )
                    // InternalSCTX.g:6431:1: (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator )
                    {
                    // InternalSCTX.g:6431:1: (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator )
                    int alt178=2;
                    int LA178_0 = input.LA(1);

                    if ( (LA178_0==107) ) {
                        alt178=1;
                    }
                    else if ( (LA178_0==108) ) {
                        alt178=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 178, 0, input);

                        throw nvae;
                    }
                    switch (alt178) {
                        case 1 :
                            // InternalSCTX.g:6432:3: lv_operator_1_1= rulePreOperator
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorPreOperatorEnumRuleCall_0_1_0_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_100);
                            lv_operator_1_1=rulePreOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"operator",
                                      		lv_operator_1_1, 
                                      		"de.cau.cs.kieler.kexpressions.KExpressions.PreOperator");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:6447:8: lv_operator_1_2= ruleValOperator
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorValOperatorEnumRuleCall_0_1_0_1()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_100);
                            lv_operator_1_2=ruleValOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"operator",
                                      		lv_operator_1_2, 
                                      		"de.cau.cs.kieler.kexpressions.KExpressions.ValOperator");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }

                    otherlv_2=(Token)match(input,26,FollowSets000.FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getValuedObjectTestExpressionAccess().getLeftParenthesisKeyword_0_2());
                          
                    }
                    // InternalSCTX.g:6469:1: ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) )
                    // InternalSCTX.g:6470:1: (lv_subExpressions_3_0= ruleValuedObjectTestExpression )
                    {
                    // InternalSCTX.g:6470:1: (lv_subExpressions_3_0= ruleValuedObjectTestExpression )
                    // InternalSCTX.g:6471:3: lv_subExpressions_3_0= ruleValuedObjectTestExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectTestExpressionParserRuleCall_0_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_24);
                    lv_subExpressions_3_0=ruleValuedObjectTestExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectTestExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getValuedObjectTestExpressionAccess().getRightParenthesisKeyword_0_4());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6493:2: this_ValuedObjectReference_5= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getValuedObjectReferenceParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedObjectReference_5=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ValuedObjectReference_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObjectTestExpression"


    // $ANTLR start "entryRulePrimeID"
    // InternalSCTX.g:6512:1: entryRulePrimeID returns [String current=null] : iv_rulePrimeID= rulePrimeID EOF ;
    public final String entryRulePrimeID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePrimeID = null;


        try {
            // InternalSCTX.g:6513:2: (iv_rulePrimeID= rulePrimeID EOF )
            // InternalSCTX.g:6514:2: iv_rulePrimeID= rulePrimeID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimeIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrimeID=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimeID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimeID"


    // $ANTLR start "rulePrimeID"
    // InternalSCTX.g:6521:1: rulePrimeID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (kw= '\\'' )* ) ;
    public final AntlrDatatypeRuleToken rulePrimeID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:6524:28: ( (this_ID_0= RULE_ID (kw= '\\'' )* ) )
            // InternalSCTX.g:6525:1: (this_ID_0= RULE_ID (kw= '\\'' )* )
            {
            // InternalSCTX.g:6525:1: (this_ID_0= RULE_ID (kw= '\\'' )* )
            // InternalSCTX.g:6525:6: this_ID_0= RULE_ID (kw= '\\'' )*
            {
            this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_101); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ID_0, grammarAccess.getPrimeIDAccess().getIDTerminalRuleCall_0()); 
                  
            }
            // InternalSCTX.g:6532:1: (kw= '\\'' )*
            loop180:
            do {
                int alt180=2;
                int LA180_0 = input.LA(1);

                if ( (LA180_0==73) ) {
                    alt180=1;
                }


                switch (alt180) {
            	case 1 :
            	    // InternalSCTX.g:6533:2: kw= '\\''
            	    {
            	    kw=(Token)match(input,73,FollowSets000.FOLLOW_101); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              current.merge(kw);
            	              newLeafNode(kw, grammarAccess.getPrimeIDAccess().getApostropheKeyword_1()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop180;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimeID"


    // $ANTLR start "entryRuleValuedObjectReference"
    // InternalSCTX.g:6546:1: entryRuleValuedObjectReference returns [EObject current=null] : iv_ruleValuedObjectReference= ruleValuedObjectReference EOF ;
    public final EObject entryRuleValuedObjectReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObjectReference = null;


        try {
            // InternalSCTX.g:6547:2: (iv_ruleValuedObjectReference= ruleValuedObjectReference EOF )
            // InternalSCTX.g:6548:2: iv_ruleValuedObjectReference= ruleValuedObjectReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObjectReference=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObjectReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObjectReference"


    // $ANTLR start "ruleValuedObjectReference"
    // InternalSCTX.g:6555:1: ruleValuedObjectReference returns [EObject current=null] : ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ) ;
    public final EObject ruleValuedObjectReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_indices_2_0 = null;

        EObject lv_subReference_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:6558:28: ( ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ) )
            // InternalSCTX.g:6559:1: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? )
            {
            // InternalSCTX.g:6559:1: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? )
            // InternalSCTX.g:6559:2: ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            {
            // InternalSCTX.g:6559:2: ( ( rulePrimeID ) )
            // InternalSCTX.g:6560:1: ( rulePrimeID )
            {
            // InternalSCTX.g:6560:1: ( rulePrimeID )
            // InternalSCTX.g:6561:3: rulePrimeID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getValuedObjectReferenceRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_102);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:6577:2: (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )*
            loop181:
            do {
                int alt181=2;
                int LA181_0 = input.LA(1);

                if ( (LA181_0==32) ) {
                    alt181=1;
                }


                switch (alt181) {
            	case 1 :
            	    // InternalSCTX.g:6577:4: otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']'
            	    {
            	    otherlv_1=(Token)match(input,32,FollowSets000.FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getValuedObjectReferenceAccess().getLeftSquareBracketKeyword_1_0());
            	          
            	    }
            	    // InternalSCTX.g:6581:1: ( (lv_indices_2_0= ruleExpression ) )
            	    // InternalSCTX.g:6582:1: (lv_indices_2_0= ruleExpression )
            	    {
            	    // InternalSCTX.g:6582:1: (lv_indices_2_0= ruleExpression )
            	    // InternalSCTX.g:6583:3: lv_indices_2_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getIndicesExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_28);
            	    lv_indices_2_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getValuedObjectReferenceRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"indices",
            	              		lv_indices_2_0, 
            	              		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,33,FollowSets000.FOLLOW_102); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getValuedObjectReferenceAccess().getRightSquareBracketKeyword_1_2());
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop181;
                }
            } while (true);

            // InternalSCTX.g:6603:3: (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            int alt182=2;
            int LA182_0 = input.LA(1);

            if ( (LA182_0==61) ) {
                alt182=1;
            }
            switch (alt182) {
                case 1 :
                    // InternalSCTX.g:6603:5: otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    {
                    otherlv_4=(Token)match(input,61,FollowSets000.FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getValuedObjectReferenceAccess().getFullStopKeyword_2_0());
                          
                    }
                    // InternalSCTX.g:6607:1: ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    // InternalSCTX.g:6608:1: (lv_subReference_5_0= ruleValuedObjectReference )
                    {
                    // InternalSCTX.g:6608:1: (lv_subReference_5_0= ruleValuedObjectReference )
                    // InternalSCTX.g:6609:3: lv_subReference_5_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getSubReferenceValuedObjectReferenceParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subReference_5_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getValuedObjectReferenceRule());
                      	        }
                             		set(
                             			current, 
                             			"subReference",
                              		lv_subReference_5_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObjectReference"


    // $ANTLR start "entryRuleScheduleObjectReference"
    // InternalSCTX.g:6633:1: entryRuleScheduleObjectReference returns [EObject current=null] : iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF ;
    public final EObject entryRuleScheduleObjectReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScheduleObjectReference = null;


        try {
            // InternalSCTX.g:6634:2: (iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF )
            // InternalSCTX.g:6635:2: iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScheduleObjectReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScheduleObjectReference=ruleScheduleObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScheduleObjectReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScheduleObjectReference"


    // $ANTLR start "ruleScheduleObjectReference"
    // InternalSCTX.g:6642:1: ruleScheduleObjectReference returns [EObject current=null] : ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) ) ;
    public final EObject ruleScheduleObjectReference() throws RecognitionException {
        EObject current = null;

        Token lv_priority_1_0=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:6645:28: ( ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) ) )
            // InternalSCTX.g:6646:1: ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) )
            {
            // InternalSCTX.g:6646:1: ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) )
            // InternalSCTX.g:6646:2: ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) )
            {
            // InternalSCTX.g:6646:2: ( ( rulePrimeID ) )
            // InternalSCTX.g:6647:1: ( rulePrimeID )
            {
            // InternalSCTX.g:6647:1: ( rulePrimeID )
            // InternalSCTX.g:6648:3: rulePrimeID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getScheduleObjectReferenceRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getScheduleObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_74);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:6664:2: ( (lv_priority_1_0= RULE_INT ) )
            // InternalSCTX.g:6665:1: (lv_priority_1_0= RULE_INT )
            {
            // InternalSCTX.g:6665:1: (lv_priority_1_0= RULE_INT )
            // InternalSCTX.g:6666:3: lv_priority_1_0= RULE_INT
            {
            lv_priority_1_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_priority_1_0, grammarAccess.getScheduleObjectReferenceAccess().getPriorityINTTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getScheduleObjectReferenceRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"priority",
                      		lv_priority_1_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.INT");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScheduleObjectReference"


    // $ANTLR start "entryRuleReferenceCall"
    // InternalSCTX.g:6690:1: entryRuleReferenceCall returns [EObject current=null] : iv_ruleReferenceCall= ruleReferenceCall EOF ;
    public final EObject entryRuleReferenceCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceCall = null;


        try {
            // InternalSCTX.g:6691:2: (iv_ruleReferenceCall= ruleReferenceCall EOF )
            // InternalSCTX.g:6692:2: iv_ruleReferenceCall= ruleReferenceCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceCall=ruleReferenceCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceCall"


    // $ANTLR start "ruleReferenceCall"
    // InternalSCTX.g:6699:1: ruleReferenceCall returns [EObject current=null] : ( ( ( rulePrimeID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | otherlv_6= '()' ) ) ;
    public final EObject ruleReferenceCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_parameters_2_0 = null;

        EObject lv_parameters_4_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:6702:28: ( ( ( ( rulePrimeID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | otherlv_6= '()' ) ) )
            // InternalSCTX.g:6703:1: ( ( ( rulePrimeID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | otherlv_6= '()' ) )
            {
            // InternalSCTX.g:6703:1: ( ( ( rulePrimeID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | otherlv_6= '()' ) )
            // InternalSCTX.g:6703:2: ( ( rulePrimeID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | otherlv_6= '()' )
            {
            // InternalSCTX.g:6703:2: ( ( rulePrimeID ) )
            // InternalSCTX.g:6704:1: ( rulePrimeID )
            {
            // InternalSCTX.g:6704:1: ( rulePrimeID )
            // InternalSCTX.g:6705:3: rulePrimeID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getReferenceCallRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getReferenceCallAccess().getValuedObjectValuedObjectCrossReference_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_86);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:6721:2: ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | otherlv_6= '()' )
            int alt184=2;
            int LA184_0 = input.LA(1);

            if ( (LA184_0==26) ) {
                alt184=1;
            }
            else if ( (LA184_0==62) ) {
                alt184=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 184, 0, input);

                throw nvae;
            }
            switch (alt184) {
                case 1 :
                    // InternalSCTX.g:6721:3: (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' )
                    {
                    // InternalSCTX.g:6721:3: (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' )
                    // InternalSCTX.g:6721:5: otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')'
                    {
                    otherlv_1=(Token)match(input,26,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getReferenceCallAccess().getLeftParenthesisKeyword_1_0_0());
                          
                    }
                    // InternalSCTX.g:6725:1: ( (lv_parameters_2_0= ruleParameter ) )
                    // InternalSCTX.g:6726:1: (lv_parameters_2_0= ruleParameter )
                    {
                    // InternalSCTX.g:6726:1: (lv_parameters_2_0= ruleParameter )
                    // InternalSCTX.g:6727:3: lv_parameters_2_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getReferenceCallAccess().getParametersParameterParserRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_23);
                    lv_parameters_2_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getReferenceCallRule());
                      	        }
                             		add(
                             			current, 
                             			"parameters",
                              		lv_parameters_2_0, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:6743:2: (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )*
                    loop183:
                    do {
                        int alt183=2;
                        int LA183_0 = input.LA(1);

                        if ( (LA183_0==27) ) {
                            alt183=1;
                        }


                        switch (alt183) {
                    	case 1 :
                    	    // InternalSCTX.g:6743:4: otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) )
                    	    {
                    	    otherlv_3=(Token)match(input,27,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getReferenceCallAccess().getCommaKeyword_1_0_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:6747:1: ( (lv_parameters_4_0= ruleParameter ) )
                    	    // InternalSCTX.g:6748:1: (lv_parameters_4_0= ruleParameter )
                    	    {
                    	    // InternalSCTX.g:6748:1: (lv_parameters_4_0= ruleParameter )
                    	    // InternalSCTX.g:6749:3: lv_parameters_4_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getReferenceCallAccess().getParametersParameterParserRuleCall_1_0_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_23);
                    	    lv_parameters_4_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getReferenceCallRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"parameters",
                    	              		lv_parameters_4_0, 
                    	              		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop183;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getReferenceCallAccess().getRightParenthesisKeyword_1_0_3());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6770:7: otherlv_6= '()'
                    {
                    otherlv_6=(Token)match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getReferenceCallAccess().getLeftParenthesisRightParenthesisKeyword_1_1());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceCall"


    // $ANTLR start "entryRuleFunctionCall"
    // InternalSCTX.g:6782:1: entryRuleFunctionCall returns [EObject current=null] : iv_ruleFunctionCall= ruleFunctionCall EOF ;
    public final EObject entryRuleFunctionCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionCall = null;


        try {
            // InternalSCTX.g:6783:2: (iv_ruleFunctionCall= ruleFunctionCall EOF )
            // InternalSCTX.g:6784:2: iv_ruleFunctionCall= ruleFunctionCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunctionCall=ruleFunctionCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionCall"


    // $ANTLR start "ruleFunctionCall"
    // InternalSCTX.g:6791:1: ruleFunctionCall returns [EObject current=null] : ( (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) | (otherlv_8= '<' ( (lv_functionName_9_0= RULE_ID ) ) ( (otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')' ) | otherlv_15= '()' ) otherlv_16= '>' ) ) ;
    public final EObject ruleFunctionCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_functionName_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token lv_functionName_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;

        EObject lv_parameters_11_0 = null;

        EObject lv_parameters_13_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:6794:28: ( ( (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) | (otherlv_8= '<' ( (lv_functionName_9_0= RULE_ID ) ) ( (otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')' ) | otherlv_15= '()' ) otherlv_16= '>' ) ) )
            // InternalSCTX.g:6795:1: ( (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) | (otherlv_8= '<' ( (lv_functionName_9_0= RULE_ID ) ) ( (otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')' ) | otherlv_15= '()' ) otherlv_16= '>' ) )
            {
            // InternalSCTX.g:6795:1: ( (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) | (otherlv_8= '<' ( (lv_functionName_9_0= RULE_ID ) ) ( (otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')' ) | otherlv_15= '()' ) otherlv_16= '>' ) )
            int alt189=2;
            int LA189_0 = input.LA(1);

            if ( (LA189_0==56) ) {
                alt189=1;
            }
            else if ( (LA189_0==63) ) {
                alt189=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 189, 0, input);

                throw nvae;
            }
            switch (alt189) {
                case 1 :
                    // InternalSCTX.g:6795:2: (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) )
                    {
                    // InternalSCTX.g:6795:2: (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) )
                    // InternalSCTX.g:6795:4: otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' )
                    {
                    otherlv_0=(Token)match(input,56,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getFunctionCallAccess().getExternKeyword_0_0());
                          
                    }
                    // InternalSCTX.g:6799:1: ( (lv_functionName_1_0= RULE_ID ) )
                    // InternalSCTX.g:6800:1: (lv_functionName_1_0= RULE_ID )
                    {
                    // InternalSCTX.g:6800:1: (lv_functionName_1_0= RULE_ID )
                    // InternalSCTX.g:6801:3: lv_functionName_1_0= RULE_ID
                    {
                    lv_functionName_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_86); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_functionName_1_0, grammarAccess.getFunctionCallAccess().getFunctionNameIDTerminalRuleCall_0_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getFunctionCallRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"functionName",
                              		lv_functionName_1_0, 
                              		"org.eclipse.xtext.common.Terminals.ID");
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:6817:2: ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' )
                    int alt186=2;
                    int LA186_0 = input.LA(1);

                    if ( (LA186_0==26) ) {
                        alt186=1;
                    }
                    else if ( (LA186_0==62) ) {
                        alt186=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 186, 0, input);

                        throw nvae;
                    }
                    switch (alt186) {
                        case 1 :
                            // InternalSCTX.g:6817:3: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
                            {
                            // InternalSCTX.g:6817:3: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
                            // InternalSCTX.g:6817:5: otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')'
                            {
                            otherlv_2=(Token)match(input,26,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_2, grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_0_2_0_0());
                                  
                            }
                            // InternalSCTX.g:6821:1: ( (lv_parameters_3_0= ruleParameter ) )
                            // InternalSCTX.g:6822:1: (lv_parameters_3_0= ruleParameter )
                            {
                            // InternalSCTX.g:6822:1: (lv_parameters_3_0= ruleParameter )
                            // InternalSCTX.g:6823:3: lv_parameters_3_0= ruleParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_0_2_0_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_23);
                            lv_parameters_3_0=ruleParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getFunctionCallRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"parameters",
                                      		lv_parameters_3_0, 
                                      		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalSCTX.g:6839:2: (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )*
                            loop185:
                            do {
                                int alt185=2;
                                int LA185_0 = input.LA(1);

                                if ( (LA185_0==27) ) {
                                    alt185=1;
                                }


                                switch (alt185) {
                            	case 1 :
                            	    // InternalSCTX.g:6839:4: otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) )
                            	    {
                            	    otherlv_4=(Token)match(input,27,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_4, grammarAccess.getFunctionCallAccess().getCommaKeyword_0_2_0_2_0());
                            	          
                            	    }
                            	    // InternalSCTX.g:6843:1: ( (lv_parameters_5_0= ruleParameter ) )
                            	    // InternalSCTX.g:6844:1: (lv_parameters_5_0= ruleParameter )
                            	    {
                            	    // InternalSCTX.g:6844:1: (lv_parameters_5_0= ruleParameter )
                            	    // InternalSCTX.g:6845:3: lv_parameters_5_0= ruleParameter
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_0_2_0_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_23);
                            	    lv_parameters_5_0=ruleParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getFunctionCallRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"parameters",
                            	              		lv_parameters_5_0, 
                            	              		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop185;
                                }
                            } while (true);

                            otherlv_6=(Token)match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_6, grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_0_2_0_3());
                                  
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:6866:7: otherlv_7= '()'
                            {
                            otherlv_7=(Token)match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_7, grammarAccess.getFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_0_2_1());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6871:6: (otherlv_8= '<' ( (lv_functionName_9_0= RULE_ID ) ) ( (otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')' ) | otherlv_15= '()' ) otherlv_16= '>' )
                    {
                    // InternalSCTX.g:6871:6: (otherlv_8= '<' ( (lv_functionName_9_0= RULE_ID ) ) ( (otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')' ) | otherlv_15= '()' ) otherlv_16= '>' )
                    // InternalSCTX.g:6871:8: otherlv_8= '<' ( (lv_functionName_9_0= RULE_ID ) ) ( (otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')' ) | otherlv_15= '()' ) otherlv_16= '>'
                    {
                    otherlv_8=(Token)match(input,63,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getFunctionCallAccess().getLessThanSignKeyword_1_0());
                          
                    }
                    // InternalSCTX.g:6875:1: ( (lv_functionName_9_0= RULE_ID ) )
                    // InternalSCTX.g:6876:1: (lv_functionName_9_0= RULE_ID )
                    {
                    // InternalSCTX.g:6876:1: (lv_functionName_9_0= RULE_ID )
                    // InternalSCTX.g:6877:3: lv_functionName_9_0= RULE_ID
                    {
                    lv_functionName_9_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_86); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_functionName_9_0, grammarAccess.getFunctionCallAccess().getFunctionNameIDTerminalRuleCall_1_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getFunctionCallRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"functionName",
                              		lv_functionName_9_0, 
                              		"org.eclipse.xtext.common.Terminals.ID");
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:6893:2: ( (otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')' ) | otherlv_15= '()' )
                    int alt188=2;
                    int LA188_0 = input.LA(1);

                    if ( (LA188_0==26) ) {
                        alt188=1;
                    }
                    else if ( (LA188_0==62) ) {
                        alt188=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 188, 0, input);

                        throw nvae;
                    }
                    switch (alt188) {
                        case 1 :
                            // InternalSCTX.g:6893:3: (otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')' )
                            {
                            // InternalSCTX.g:6893:3: (otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')' )
                            // InternalSCTX.g:6893:5: otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')'
                            {
                            otherlv_10=(Token)match(input,26,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_10, grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1_2_0_0());
                                  
                            }
                            // InternalSCTX.g:6897:1: ( (lv_parameters_11_0= ruleParameter ) )
                            // InternalSCTX.g:6898:1: (lv_parameters_11_0= ruleParameter )
                            {
                            // InternalSCTX.g:6898:1: (lv_parameters_11_0= ruleParameter )
                            // InternalSCTX.g:6899:3: lv_parameters_11_0= ruleParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_1_2_0_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_23);
                            lv_parameters_11_0=ruleParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getFunctionCallRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"parameters",
                                      		lv_parameters_11_0, 
                                      		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalSCTX.g:6915:2: (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )*
                            loop187:
                            do {
                                int alt187=2;
                                int LA187_0 = input.LA(1);

                                if ( (LA187_0==27) ) {
                                    alt187=1;
                                }


                                switch (alt187) {
                            	case 1 :
                            	    // InternalSCTX.g:6915:4: otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) )
                            	    {
                            	    otherlv_12=(Token)match(input,27,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_12, grammarAccess.getFunctionCallAccess().getCommaKeyword_1_2_0_2_0());
                            	          
                            	    }
                            	    // InternalSCTX.g:6919:1: ( (lv_parameters_13_0= ruleParameter ) )
                            	    // InternalSCTX.g:6920:1: (lv_parameters_13_0= ruleParameter )
                            	    {
                            	    // InternalSCTX.g:6920:1: (lv_parameters_13_0= ruleParameter )
                            	    // InternalSCTX.g:6921:3: lv_parameters_13_0= ruleParameter
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_1_2_0_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_23);
                            	    lv_parameters_13_0=ruleParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getFunctionCallRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"parameters",
                            	              		lv_parameters_13_0, 
                            	              		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop187;
                                }
                            } while (true);

                            otherlv_14=(Token)match(input,28,FollowSets000.FOLLOW_88); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_14, grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_1_2_0_3());
                                  
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:6942:7: otherlv_15= '()'
                            {
                            otherlv_15=(Token)match(input,62,FollowSets000.FOLLOW_88); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_15, grammarAccess.getFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_1_2_1());
                                  
                            }

                            }
                            break;

                    }

                    otherlv_16=(Token)match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_16, grammarAccess.getFunctionCallAccess().getGreaterThanSignKeyword_1_3());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionCall"


    // $ANTLR start "entryRuleTextExpression"
    // InternalSCTX.g:6958:1: entryRuleTextExpression returns [EObject current=null] : iv_ruleTextExpression= ruleTextExpression EOF ;
    public final EObject entryRuleTextExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTextExpression = null;


        try {
            // InternalSCTX.g:6959:2: (iv_ruleTextExpression= ruleTextExpression EOF )
            // InternalSCTX.g:6960:2: iv_ruleTextExpression= ruleTextExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTextExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTextExpression=ruleTextExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTextExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTextExpression"


    // $ANTLR start "ruleTextExpression"
    // InternalSCTX.g:6967:1: ruleTextExpression returns [EObject current=null] : ( (lv_text_0_0= RULE_HOSTCODE ) ) ;
    public final EObject ruleTextExpression() throws RecognitionException {
        EObject current = null;

        Token lv_text_0_0=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:6970:28: ( ( (lv_text_0_0= RULE_HOSTCODE ) ) )
            // InternalSCTX.g:6971:1: ( (lv_text_0_0= RULE_HOSTCODE ) )
            {
            // InternalSCTX.g:6971:1: ( (lv_text_0_0= RULE_HOSTCODE ) )
            // InternalSCTX.g:6972:1: (lv_text_0_0= RULE_HOSTCODE )
            {
            // InternalSCTX.g:6972:1: (lv_text_0_0= RULE_HOSTCODE )
            // InternalSCTX.g:6973:3: lv_text_0_0= RULE_HOSTCODE
            {
            lv_text_0_0=(Token)match(input,RULE_HOSTCODE,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_text_0_0, grammarAccess.getTextExpressionAccess().getTextHOSTCODETerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getTextExpressionRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"text",
                      		lv_text_0_0, 
                      		"de.cau.cs.kieler.kexpressions.KExpressions.HOSTCODE");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTextExpression"


    // $ANTLR start "entryRuleIntValue"
    // InternalSCTX.g:6997:1: entryRuleIntValue returns [EObject current=null] : iv_ruleIntValue= ruleIntValue EOF ;
    public final EObject entryRuleIntValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntValue = null;


        try {
            // InternalSCTX.g:6998:2: (iv_ruleIntValue= ruleIntValue EOF )
            // InternalSCTX.g:6999:2: iv_ruleIntValue= ruleIntValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIntValue=ruleIntValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntValue"


    // $ANTLR start "ruleIntValue"
    // InternalSCTX.g:7006:1: ruleIntValue returns [EObject current=null] : ( (lv_value_0_0= RULE_INT ) ) ;
    public final EObject ruleIntValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:7009:28: ( ( (lv_value_0_0= RULE_INT ) ) )
            // InternalSCTX.g:7010:1: ( (lv_value_0_0= RULE_INT ) )
            {
            // InternalSCTX.g:7010:1: ( (lv_value_0_0= RULE_INT ) )
            // InternalSCTX.g:7011:1: (lv_value_0_0= RULE_INT )
            {
            // InternalSCTX.g:7011:1: (lv_value_0_0= RULE_INT )
            // InternalSCTX.g:7012:3: lv_value_0_0= RULE_INT
            {
            lv_value_0_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getIntValueRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.INT");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntValue"


    // $ANTLR start "entryRuleFloatValue"
    // InternalSCTX.g:7036:1: entryRuleFloatValue returns [EObject current=null] : iv_ruleFloatValue= ruleFloatValue EOF ;
    public final EObject entryRuleFloatValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFloatValue = null;


        try {
            // InternalSCTX.g:7037:2: (iv_ruleFloatValue= ruleFloatValue EOF )
            // InternalSCTX.g:7038:2: iv_ruleFloatValue= ruleFloatValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFloatValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFloatValue=ruleFloatValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFloatValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFloatValue"


    // $ANTLR start "ruleFloatValue"
    // InternalSCTX.g:7045:1: ruleFloatValue returns [EObject current=null] : ( (lv_value_0_0= RULE_FLOAT ) ) ;
    public final EObject ruleFloatValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:7048:28: ( ( (lv_value_0_0= RULE_FLOAT ) ) )
            // InternalSCTX.g:7049:1: ( (lv_value_0_0= RULE_FLOAT ) )
            {
            // InternalSCTX.g:7049:1: ( (lv_value_0_0= RULE_FLOAT ) )
            // InternalSCTX.g:7050:1: (lv_value_0_0= RULE_FLOAT )
            {
            // InternalSCTX.g:7050:1: (lv_value_0_0= RULE_FLOAT )
            // InternalSCTX.g:7051:3: lv_value_0_0= RULE_FLOAT
            {
            lv_value_0_0=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getFloatValueAccess().getValueFLOATTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getFloatValueRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.FLOAT");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFloatValue"


    // $ANTLR start "entryRuleBoolValue"
    // InternalSCTX.g:7075:1: entryRuleBoolValue returns [EObject current=null] : iv_ruleBoolValue= ruleBoolValue EOF ;
    public final EObject entryRuleBoolValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBoolValue = null;


        try {
            // InternalSCTX.g:7076:2: (iv_ruleBoolValue= ruleBoolValue EOF )
            // InternalSCTX.g:7077:2: iv_ruleBoolValue= ruleBoolValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBoolValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBoolValue=ruleBoolValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBoolValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBoolValue"


    // $ANTLR start "ruleBoolValue"
    // InternalSCTX.g:7084:1: ruleBoolValue returns [EObject current=null] : ( (lv_value_0_0= RULE_BOOLEAN ) ) ;
    public final EObject ruleBoolValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:7087:28: ( ( (lv_value_0_0= RULE_BOOLEAN ) ) )
            // InternalSCTX.g:7088:1: ( (lv_value_0_0= RULE_BOOLEAN ) )
            {
            // InternalSCTX.g:7088:1: ( (lv_value_0_0= RULE_BOOLEAN ) )
            // InternalSCTX.g:7089:1: (lv_value_0_0= RULE_BOOLEAN )
            {
            // InternalSCTX.g:7089:1: (lv_value_0_0= RULE_BOOLEAN )
            // InternalSCTX.g:7090:3: lv_value_0_0= RULE_BOOLEAN
            {
            lv_value_0_0=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getBoolValueAccess().getValueBOOLEANTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getBoolValueRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.BOOLEAN");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBoolValue"


    // $ANTLR start "entryRuleStringValue"
    // InternalSCTX.g:7114:1: entryRuleStringValue returns [EObject current=null] : iv_ruleStringValue= ruleStringValue EOF ;
    public final EObject entryRuleStringValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringValue = null;


        try {
            // InternalSCTX.g:7115:2: (iv_ruleStringValue= ruleStringValue EOF )
            // InternalSCTX.g:7116:2: iv_ruleStringValue= ruleStringValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringValue=ruleStringValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringValue"


    // $ANTLR start "ruleStringValue"
    // InternalSCTX.g:7123:1: ruleStringValue returns [EObject current=null] : ( (lv_value_0_0= RULE_STRING ) ) ;
    public final EObject ruleStringValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:7126:28: ( ( (lv_value_0_0= RULE_STRING ) ) )
            // InternalSCTX.g:7127:1: ( (lv_value_0_0= RULE_STRING ) )
            {
            // InternalSCTX.g:7127:1: ( (lv_value_0_0= RULE_STRING ) )
            // InternalSCTX.g:7128:1: (lv_value_0_0= RULE_STRING )
            {
            // InternalSCTX.g:7128:1: (lv_value_0_0= RULE_STRING )
            // InternalSCTX.g:7129:3: lv_value_0_0= RULE_STRING
            {
            lv_value_0_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getStringValueRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.STRING");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringValue"


    // $ANTLR start "entryRuleAnnotation"
    // InternalSCTX.g:7157:1: entryRuleAnnotation returns [EObject current=null] : iv_ruleAnnotation= ruleAnnotation EOF ;
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotation = null;


        try {
            // InternalSCTX.g:7158:2: (iv_ruleAnnotation= ruleAnnotation EOF )
            // InternalSCTX.g:7159:2: iv_ruleAnnotation= ruleAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotation"


    // $ANTLR start "ruleAnnotation"
    // InternalSCTX.g:7166:1: ruleAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) ;
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_KeyStringValueAnnotation_1 = null;

        EObject this_TypedKeyStringValueAnnotation_2 = null;

        EObject this_TagAnnotation_3 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:7169:28: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) )
            // InternalSCTX.g:7170:1: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            {
            // InternalSCTX.g:7170:1: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            int alt190=4;
            alt190 = dfa190.predict(input);
            switch (alt190) {
                case 1 :
                    // InternalSCTX.g:7171:2: this_CommentAnnotation_0= ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAnnotationAccess().getCommentAnnotationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_CommentAnnotation_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7184:2: this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_KeyStringValueAnnotation_1=ruleKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_KeyStringValueAnnotation_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:7197:2: this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypedKeyStringValueAnnotation_2=ruleTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TypedKeyStringValueAnnotation_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:7210:2: this_TagAnnotation_3= ruleTagAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAnnotationAccess().getTagAnnotationParserRuleCall_3()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TagAnnotation_3=ruleTagAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TagAnnotation_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotation"


    // $ANTLR start "entryRulePragma"
    // InternalSCTX.g:7229:1: entryRulePragma returns [EObject current=null] : iv_rulePragma= rulePragma EOF ;
    public final EObject entryRulePragma() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePragma = null;


        try {
            // InternalSCTX.g:7230:2: (iv_rulePragma= rulePragma EOF )
            // InternalSCTX.g:7231:2: iv_rulePragma= rulePragma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePragma=rulePragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePragma; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePragma"


    // $ANTLR start "rulePragma"
    // InternalSCTX.g:7238:1: rulePragma returns [EObject current=null] : (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag ) ;
    public final EObject rulePragma() throws RecognitionException {
        EObject current = null;

        EObject this_StringPragma_0 = null;

        EObject this_PragmaTag_1 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:7241:28: ( (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag ) )
            // InternalSCTX.g:7242:1: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )
            {
            // InternalSCTX.g:7242:1: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )
            int alt191=2;
            alt191 = dfa191.predict(input);
            switch (alt191) {
                case 1 :
                    // InternalSCTX.g:7243:2: this_StringPragma_0= ruleStringPragma
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPragmaAccess().getStringPragmaParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringPragma_0=ruleStringPragma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_StringPragma_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7256:2: this_PragmaTag_1= rulePragmaTag
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPragmaAccess().getPragmaTagParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PragmaTag_1=rulePragmaTag();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_PragmaTag_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePragma"


    // $ANTLR start "entryRuleRestrictedTypeAnnotation"
    // InternalSCTX.g:7277:1: entryRuleRestrictedTypeAnnotation returns [EObject current=null] : iv_ruleRestrictedTypeAnnotation= ruleRestrictedTypeAnnotation EOF ;
    public final EObject entryRuleRestrictedTypeAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictedTypeAnnotation = null;


        try {
            // InternalSCTX.g:7278:2: (iv_ruleRestrictedTypeAnnotation= ruleRestrictedTypeAnnotation EOF )
            // InternalSCTX.g:7279:2: iv_ruleRestrictedTypeAnnotation= ruleRestrictedTypeAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictedTypeAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRestrictedTypeAnnotation=ruleRestrictedTypeAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictedTypeAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictedTypeAnnotation"


    // $ANTLR start "ruleRestrictedTypeAnnotation"
    // InternalSCTX.g:7286:1: ruleRestrictedTypeAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) ;
    public final EObject ruleRestrictedTypeAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_RestrictedKeyStringValueAnnotation_1 = null;

        EObject this_RestrictedTypedKeyStringValueAnnotation_2 = null;

        EObject this_TagAnnotation_3 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:7289:28: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) )
            // InternalSCTX.g:7290:1: (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            {
            // InternalSCTX.g:7290:1: (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            int alt192=4;
            alt192 = dfa192.predict(input);
            switch (alt192) {
                case 1 :
                    // InternalSCTX.g:7291:2: this_CommentAnnotation_0= ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRestrictedTypeAnnotationAccess().getCommentAnnotationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_CommentAnnotation_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7304:2: this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRestrictedTypeAnnotationAccess().getRestrictedKeyStringValueAnnotationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RestrictedKeyStringValueAnnotation_1=ruleRestrictedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_RestrictedKeyStringValueAnnotation_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:7317:2: this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRestrictedTypeAnnotationAccess().getRestrictedTypedKeyStringValueAnnotationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RestrictedTypedKeyStringValueAnnotation_2=ruleRestrictedTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_RestrictedTypedKeyStringValueAnnotation_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:7330:2: this_TagAnnotation_3= ruleTagAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRestrictedTypeAnnotationAccess().getTagAnnotationParserRuleCall_3()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TagAnnotation_3=ruleTagAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TagAnnotation_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictedTypeAnnotation"


    // $ANTLR start "entryRuleQuotedStringAnnotation"
    // InternalSCTX.g:7349:1: entryRuleQuotedStringAnnotation returns [EObject current=null] : iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF ;
    public final EObject entryRuleQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedStringAnnotation = null;


        try {
            // InternalSCTX.g:7350:2: (iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF )
            // InternalSCTX.g:7351:2: iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedStringAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedStringAnnotation=ruleQuotedStringAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedStringAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedStringAnnotation"


    // $ANTLR start "ruleQuotedStringAnnotation"
    // InternalSCTX.g:7358:1: ruleQuotedStringAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) ;
    public final EObject ruleQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_QuotedKeyStringValueAnnotation_1 = null;

        EObject this_QuotedTypedKeyStringValueAnnotation_2 = null;

        EObject this_TagAnnotation_3 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:7361:28: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) )
            // InternalSCTX.g:7362:1: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            {
            // InternalSCTX.g:7362:1: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            int alt193=4;
            alt193 = dfa193.predict(input);
            switch (alt193) {
                case 1 :
                    // InternalSCTX.g:7363:2: this_CommentAnnotation_0= ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getCommentAnnotationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_CommentAnnotation_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7376:2: this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getQuotedKeyStringValueAnnotationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QuotedKeyStringValueAnnotation_1=ruleQuotedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_QuotedKeyStringValueAnnotation_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:7389:2: this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getQuotedTypedKeyStringValueAnnotationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QuotedTypedKeyStringValueAnnotation_2=ruleQuotedTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_QuotedTypedKeyStringValueAnnotation_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:7402:2: this_TagAnnotation_3= ruleTagAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getTagAnnotationParserRuleCall_3()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TagAnnotation_3=ruleTagAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TagAnnotation_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedStringAnnotation"


    // $ANTLR start "entryRuleCommentAnnotation"
    // InternalSCTX.g:7421:1: entryRuleCommentAnnotation returns [EObject current=null] : iv_ruleCommentAnnotation= ruleCommentAnnotation EOF ;
    public final EObject entryRuleCommentAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommentAnnotation = null;


        try {
            // InternalSCTX.g:7422:2: (iv_ruleCommentAnnotation= ruleCommentAnnotation EOF )
            // InternalSCTX.g:7423:2: iv_ruleCommentAnnotation= ruleCommentAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommentAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCommentAnnotation=ruleCommentAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommentAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommentAnnotation"


    // $ANTLR start "ruleCommentAnnotation"
    // InternalSCTX.g:7430:1: ruleCommentAnnotation returns [EObject current=null] : ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) ) ;
    public final EObject ruleCommentAnnotation() throws RecognitionException {
        EObject current = null;

        Token lv_values_0_0=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:7433:28: ( ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) ) )
            // InternalSCTX.g:7434:1: ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) )
            {
            // InternalSCTX.g:7434:1: ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) )
            // InternalSCTX.g:7435:1: (lv_values_0_0= RULE_COMMENT_ANNOTATION )
            {
            // InternalSCTX.g:7435:1: (lv_values_0_0= RULE_COMMENT_ANNOTATION )
            // InternalSCTX.g:7436:3: lv_values_0_0= RULE_COMMENT_ANNOTATION
            {
            lv_values_0_0=(Token)match(input,RULE_COMMENT_ANNOTATION,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_values_0_0, grammarAccess.getCommentAnnotationAccess().getValuesCOMMENT_ANNOTATIONTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getCommentAnnotationRule());
              	        }
                     		addWithLastConsumed(
                     			current, 
                     			"values",
                      		lv_values_0_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.COMMENT_ANNOTATION");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommentAnnotation"


    // $ANTLR start "entryRuleCommentAnnotatonSL"
    // InternalSCTX.g:7460:1: entryRuleCommentAnnotatonSL returns [EObject current=null] : iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF ;
    public final EObject entryRuleCommentAnnotatonSL() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommentAnnotatonSL = null;


        try {
            // InternalSCTX.g:7461:2: (iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF )
            // InternalSCTX.g:7462:2: iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommentAnnotatonSLRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCommentAnnotatonSL=ruleCommentAnnotatonSL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommentAnnotatonSL; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommentAnnotatonSL"


    // $ANTLR start "ruleCommentAnnotatonSL"
    // InternalSCTX.g:7469:1: ruleCommentAnnotatonSL returns [EObject current=null] : ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) ) ;
    public final EObject ruleCommentAnnotatonSL() throws RecognitionException {
        EObject current = null;

        Token lv_values_0_0=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:7472:28: ( ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) ) )
            // InternalSCTX.g:7473:1: ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) )
            {
            // InternalSCTX.g:7473:1: ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) )
            // InternalSCTX.g:7474:1: (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION )
            {
            // InternalSCTX.g:7474:1: (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION )
            // InternalSCTX.g:7475:3: lv_values_0_0= RULE_SL_COMMENT_ANNOTATION
            {
            lv_values_0_0=(Token)match(input,RULE_SL_COMMENT_ANNOTATION,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_values_0_0, grammarAccess.getCommentAnnotatonSLAccess().getValuesSL_COMMENT_ANNOTATIONTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getCommentAnnotatonSLRule());
              	        }
                     		addWithLastConsumed(
                     			current, 
                     			"values",
                      		lv_values_0_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.SL_COMMENT_ANNOTATION");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommentAnnotatonSL"


    // $ANTLR start "entryRuleTagAnnotation"
    // InternalSCTX.g:7499:1: entryRuleTagAnnotation returns [EObject current=null] : iv_ruleTagAnnotation= ruleTagAnnotation EOF ;
    public final EObject entryRuleTagAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTagAnnotation = null;


        try {
            // InternalSCTX.g:7500:2: (iv_ruleTagAnnotation= ruleTagAnnotation EOF )
            // InternalSCTX.g:7501:2: iv_ruleTagAnnotation= ruleTagAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTagAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTagAnnotation=ruleTagAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTagAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTagAnnotation"


    // $ANTLR start "ruleTagAnnotation"
    // InternalSCTX.g:7508:1: ruleTagAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ) ;
    public final EObject ruleTagAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:7511:28: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ) )
            // InternalSCTX.g:7512:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) )
            {
            // InternalSCTX.g:7512:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) )
            // InternalSCTX.g:7512:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) )
            {
            otherlv_0=(Token)match(input,74,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTagAnnotationAccess().getCommercialAtKeyword_0());
                  
            }
            // InternalSCTX.g:7516:1: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:7517:1: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:7517:1: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:7518:3: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTagAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTagAnnotationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTagAnnotation"


    // $ANTLR start "entryRulePragmaTag"
    // InternalSCTX.g:7542:1: entryRulePragmaTag returns [EObject current=null] : iv_rulePragmaTag= rulePragmaTag EOF ;
    public final EObject entryRulePragmaTag() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePragmaTag = null;


        try {
            // InternalSCTX.g:7543:2: (iv_rulePragmaTag= rulePragmaTag EOF )
            // InternalSCTX.g:7544:2: iv_rulePragmaTag= rulePragmaTag EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPragmaTagRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePragmaTag=rulePragmaTag();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePragmaTag; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePragmaTag"


    // $ANTLR start "rulePragmaTag"
    // InternalSCTX.g:7551:1: rulePragmaTag returns [EObject current=null] : (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ) ;
    public final EObject rulePragmaTag() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:7554:28: ( (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ) )
            // InternalSCTX.g:7555:1: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) )
            {
            // InternalSCTX.g:7555:1: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) )
            // InternalSCTX.g:7555:3: otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) )
            {
            otherlv_0=(Token)match(input,75,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getPragmaTagAccess().getNumberSignKeyword_0());
                  
            }
            // InternalSCTX.g:7559:1: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:7560:1: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:7560:1: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:7561:3: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPragmaTagAccess().getNameExtendedIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPragmaTagRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePragmaTag"


    // $ANTLR start "entryRuleKeyStringValueAnnotation"
    // InternalSCTX.g:7585:1: entryRuleKeyStringValueAnnotation returns [EObject current=null] : iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF ;
    public final EObject entryRuleKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeyStringValueAnnotation = null;


        try {
            // InternalSCTX.g:7586:2: (iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF )
            // InternalSCTX.g:7587:2: iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleKeyStringValueAnnotation=ruleKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeyStringValueAnnotation"


    // $ANTLR start "ruleKeyStringValueAnnotation"
    // InternalSCTX.g:7594:1: ruleKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) ;
    public final EObject ruleKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:7597:28: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) )
            // InternalSCTX.g:7598:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalSCTX.g:7598:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            // InternalSCTX.g:7598:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,74,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
                  
            }
            // InternalSCTX.g:7602:1: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:7603:1: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:7603:1: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:7604:3: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_103);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:7620:2: ( (lv_values_2_0= ruleEStringAllTypes ) )
            // InternalSCTX.g:7621:1: (lv_values_2_0= ruleEStringAllTypes )
            {
            // InternalSCTX.g:7621:1: (lv_values_2_0= ruleEStringAllTypes )
            // InternalSCTX.g:7622:3: lv_values_2_0= ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_104);
            lv_values_2_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
              	        }
                     		add(
                     			current, 
                     			"values",
                      		lv_values_2_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:7638:2: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            loop194:
            do {
                int alt194=2;
                int LA194_0 = input.LA(1);

                if ( (LA194_0==27) ) {
                    alt194=1;
                }


                switch (alt194) {
            	case 1 :
            	    // InternalSCTX.g:7638:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    {
            	    otherlv_3=(Token)match(input,27,FollowSets000.FOLLOW_103); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	          
            	    }
            	    // InternalSCTX.g:7642:1: ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    // InternalSCTX.g:7643:1: (lv_values_4_0= ruleEStringAllTypes )
            	    {
            	    // InternalSCTX.g:7643:1: (lv_values_4_0= ruleEStringAllTypes )
            	    // InternalSCTX.g:7644:3: lv_values_4_0= ruleEStringAllTypes
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_104);
            	    lv_values_4_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"values",
            	              		lv_values_4_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop194;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeyStringValueAnnotation"


    // $ANTLR start "entryRuleRestrictedKeyStringValueAnnotation"
    // InternalSCTX.g:7668:1: entryRuleRestrictedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleRestrictedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictedKeyStringValueAnnotation = null;


        try {
            // InternalSCTX.g:7669:2: (iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:7670:2: iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRestrictedKeyStringValueAnnotation=ruleRestrictedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictedKeyStringValueAnnotation"


    // $ANTLR start "ruleRestrictedKeyStringValueAnnotation"
    // InternalSCTX.g:7677:1: ruleRestrictedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* ) ;
    public final EObject ruleRestrictedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:7680:28: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* ) )
            // InternalSCTX.g:7681:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* )
            {
            // InternalSCTX.g:7681:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* )
            // InternalSCTX.g:7681:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )*
            {
            otherlv_0=(Token)match(input,74,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
                  
            }
            // InternalSCTX.g:7685:1: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:7686:1: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:7686:1: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:7687:3: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_105);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:7703:2: ( (lv_values_2_0= ruleEStringBoolean ) )
            // InternalSCTX.g:7704:1: (lv_values_2_0= ruleEStringBoolean )
            {
            // InternalSCTX.g:7704:1: (lv_values_2_0= ruleEStringBoolean )
            // InternalSCTX.g:7705:3: lv_values_2_0= ruleEStringBoolean
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_104);
            lv_values_2_0=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
              	        }
                     		add(
                     			current, 
                     			"values",
                      		lv_values_2_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:7721:2: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )*
            loop195:
            do {
                int alt195=2;
                int LA195_0 = input.LA(1);

                if ( (LA195_0==27) ) {
                    alt195=1;
                }


                switch (alt195) {
            	case 1 :
            	    // InternalSCTX.g:7721:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) )
            	    {
            	    otherlv_3=(Token)match(input,27,FollowSets000.FOLLOW_105); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	          
            	    }
            	    // InternalSCTX.g:7725:1: ( (lv_values_4_0= ruleEStringBoolean ) )
            	    // InternalSCTX.g:7726:1: (lv_values_4_0= ruleEStringBoolean )
            	    {
            	    // InternalSCTX.g:7726:1: (lv_values_4_0= ruleEStringBoolean )
            	    // InternalSCTX.g:7727:3: lv_values_4_0= ruleEStringBoolean
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_104);
            	    lv_values_4_0=ruleEStringBoolean();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"values",
            	              		lv_values_4_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop195;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleStringPragma"
    // InternalSCTX.g:7751:1: entryRuleStringPragma returns [EObject current=null] : iv_ruleStringPragma= ruleStringPragma EOF ;
    public final EObject entryRuleStringPragma() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringPragma = null;


        try {
            // InternalSCTX.g:7752:2: (iv_ruleStringPragma= ruleStringPragma EOF )
            // InternalSCTX.g:7753:2: iv_ruleStringPragma= ruleStringPragma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringPragma=ruleStringPragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringPragma; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringPragma"


    // $ANTLR start "ruleStringPragma"
    // InternalSCTX.g:7760:1: ruleStringPragma returns [EObject current=null] : (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) ;
    public final EObject ruleStringPragma() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:7763:28: ( (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) )
            // InternalSCTX.g:7764:1: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalSCTX.g:7764:1: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            // InternalSCTX.g:7764:3: otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,75,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getStringPragmaAccess().getNumberSignKeyword_0());
                  
            }
            // InternalSCTX.g:7768:1: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:7769:1: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:7769:1: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:7770:3: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getStringPragmaAccess().getNameExtendedIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_103);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getStringPragmaRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:7786:2: ( (lv_values_2_0= ruleEStringAllTypes ) )
            // InternalSCTX.g:7787:1: (lv_values_2_0= ruleEStringAllTypes )
            {
            // InternalSCTX.g:7787:1: (lv_values_2_0= ruleEStringAllTypes )
            // InternalSCTX.g:7788:3: lv_values_2_0= ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getStringPragmaAccess().getValuesEStringAllTypesParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_104);
            lv_values_2_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getStringPragmaRule());
              	        }
                     		add(
                     			current, 
                     			"values",
                      		lv_values_2_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:7804:2: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            loop196:
            do {
                int alt196=2;
                int LA196_0 = input.LA(1);

                if ( (LA196_0==27) ) {
                    alt196=1;
                }


                switch (alt196) {
            	case 1 :
            	    // InternalSCTX.g:7804:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    {
            	    otherlv_3=(Token)match(input,27,FollowSets000.FOLLOW_103); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getStringPragmaAccess().getCommaKeyword_3_0());
            	          
            	    }
            	    // InternalSCTX.g:7808:1: ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    // InternalSCTX.g:7809:1: (lv_values_4_0= ruleEStringAllTypes )
            	    {
            	    // InternalSCTX.g:7809:1: (lv_values_4_0= ruleEStringAllTypes )
            	    // InternalSCTX.g:7810:3: lv_values_4_0= ruleEStringAllTypes
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getStringPragmaAccess().getValuesEStringAllTypesParserRuleCall_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_104);
            	    lv_values_4_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getStringPragmaRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"values",
            	              		lv_values_4_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop196;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringPragma"


    // $ANTLR start "entryRuleTypedKeyStringValueAnnotation"
    // InternalSCTX.g:7834:1: entryRuleTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypedKeyStringValueAnnotation = null;


        try {
            // InternalSCTX.g:7835:2: (iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:7836:2: iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypedKeyStringValueAnnotation=ruleTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleTypedKeyStringValueAnnotation"
    // InternalSCTX.g:7843:1: ruleTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* ) ;
    public final EObject ruleTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_values_5_0 = null;

        AntlrDatatypeRuleToken lv_values_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:7846:28: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* ) )
            // InternalSCTX.g:7847:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalSCTX.g:7847:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* )
            // InternalSCTX.g:7847:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,74,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
                  
            }
            // InternalSCTX.g:7851:1: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:7852:1: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:7852:1: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:7853:3: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_106);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,32,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
                  
            }
            // InternalSCTX.g:7873:1: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalSCTX.g:7874:1: (lv_type_3_0= ruleExtendedID )
            {
            // InternalSCTX.g:7874:1: (lv_type_3_0= ruleExtendedID )
            // InternalSCTX.g:7875:3: lv_type_3_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_28);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_3_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,33,FollowSets000.FOLLOW_103); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
                  
            }
            // InternalSCTX.g:7895:1: ( (lv_values_5_0= ruleEStringAllTypes ) )
            // InternalSCTX.g:7896:1: (lv_values_5_0= ruleEStringAllTypes )
            {
            // InternalSCTX.g:7896:1: (lv_values_5_0= ruleEStringAllTypes )
            // InternalSCTX.g:7897:3: lv_values_5_0= ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_104);
            lv_values_5_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              	        }
                     		add(
                     			current, 
                     			"values",
                      		lv_values_5_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:7913:2: (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )*
            loop197:
            do {
                int alt197=2;
                int LA197_0 = input.LA(1);

                if ( (LA197_0==27) ) {
                    alt197=1;
                }


                switch (alt197) {
            	case 1 :
            	    // InternalSCTX.g:7913:4: otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) )
            	    {
            	    otherlv_6=(Token)match(input,27,FollowSets000.FOLLOW_103); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_6, grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	          
            	    }
            	    // InternalSCTX.g:7917:1: ( (lv_values_7_0= ruleEStringAllTypes ) )
            	    // InternalSCTX.g:7918:1: (lv_values_7_0= ruleEStringAllTypes )
            	    {
            	    // InternalSCTX.g:7918:1: (lv_values_7_0= ruleEStringAllTypes )
            	    // InternalSCTX.g:7919:3: lv_values_7_0= ruleEStringAllTypes
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_6_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_104);
            	    lv_values_7_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"values",
            	              		lv_values_7_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop197;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleRestrictedTypedKeyStringValueAnnotation"
    // InternalSCTX.g:7943:1: entryRuleRestrictedTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleRestrictedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictedTypedKeyStringValueAnnotation = null;


        try {
            // InternalSCTX.g:7944:2: (iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:7945:2: iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRestrictedTypedKeyStringValueAnnotation=ruleRestrictedTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictedTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictedTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleRestrictedTypedKeyStringValueAnnotation"
    // InternalSCTX.g:7952:1: ruleRestrictedTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* ) ;
    public final EObject ruleRestrictedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_values_5_0 = null;

        AntlrDatatypeRuleToken lv_values_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:7955:28: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* ) )
            // InternalSCTX.g:7956:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* )
            {
            // InternalSCTX.g:7956:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* )
            // InternalSCTX.g:7956:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )*
            {
            otherlv_0=(Token)match(input,74,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
                  
            }
            // InternalSCTX.g:7960:1: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:7961:1: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:7961:1: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:7962:3: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_106);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,32,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
                  
            }
            // InternalSCTX.g:7982:1: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalSCTX.g:7983:1: (lv_type_3_0= ruleExtendedID )
            {
            // InternalSCTX.g:7983:1: (lv_type_3_0= ruleExtendedID )
            // InternalSCTX.g:7984:3: lv_type_3_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_28);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_3_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,33,FollowSets000.FOLLOW_105); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
                  
            }
            // InternalSCTX.g:8004:1: ( (lv_values_5_0= ruleEStringBoolean ) )
            // InternalSCTX.g:8005:1: (lv_values_5_0= ruleEStringBoolean )
            {
            // InternalSCTX.g:8005:1: (lv_values_5_0= ruleEStringBoolean )
            // InternalSCTX.g:8006:3: lv_values_5_0= ruleEStringBoolean
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_104);
            lv_values_5_0=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              	        }
                     		add(
                     			current, 
                     			"values",
                      		lv_values_5_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:8022:2: (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )*
            loop198:
            do {
                int alt198=2;
                int LA198_0 = input.LA(1);

                if ( (LA198_0==27) ) {
                    alt198=1;
                }


                switch (alt198) {
            	case 1 :
            	    // InternalSCTX.g:8022:4: otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) )
            	    {
            	    otherlv_6=(Token)match(input,27,FollowSets000.FOLLOW_105); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_6, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	          
            	    }
            	    // InternalSCTX.g:8026:1: ( (lv_values_7_0= ruleEStringBoolean ) )
            	    // InternalSCTX.g:8027:1: (lv_values_7_0= ruleEStringBoolean )
            	    {
            	    // InternalSCTX.g:8027:1: (lv_values_7_0= ruleEStringBoolean )
            	    // InternalSCTX.g:8028:3: lv_values_7_0= ruleEStringBoolean
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_6_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_104);
            	    lv_values_7_0=ruleEStringBoolean();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"values",
            	              		lv_values_7_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop198;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictedTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleQuotedKeyStringValueAnnotation"
    // InternalSCTX.g:8052:1: entryRuleQuotedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleQuotedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedKeyStringValueAnnotation = null;


        try {
            // InternalSCTX.g:8053:2: (iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:8054:2: iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedKeyStringValueAnnotation=ruleQuotedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedKeyStringValueAnnotation"


    // $ANTLR start "ruleQuotedKeyStringValueAnnotation"
    // InternalSCTX.g:8061:1: ruleQuotedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* ) ;
    public final EObject ruleQuotedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_values_2_0=null;
        Token otherlv_3=null;
        Token lv_values_4_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:8064:28: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* ) )
            // InternalSCTX.g:8065:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* )
            {
            // InternalSCTX.g:8065:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* )
            // InternalSCTX.g:8065:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )*
            {
            otherlv_0=(Token)match(input,74,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
                  
            }
            // InternalSCTX.g:8069:1: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:8070:1: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:8070:1: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:8071:3: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_38);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getQuotedKeyStringValueAnnotationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:8087:2: ( (lv_values_2_0= RULE_STRING ) )
            // InternalSCTX.g:8088:1: (lv_values_2_0= RULE_STRING )
            {
            // InternalSCTX.g:8088:1: (lv_values_2_0= RULE_STRING )
            // InternalSCTX.g:8089:3: lv_values_2_0= RULE_STRING
            {
            lv_values_2_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_104); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_values_2_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getQuotedKeyStringValueAnnotationRule());
              	        }
                     		addWithLastConsumed(
                     			current, 
                     			"values",
                      		lv_values_2_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.STRING");
              	    
            }

            }


            }

            // InternalSCTX.g:8105:2: (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )*
            loop199:
            do {
                int alt199=2;
                int LA199_0 = input.LA(1);

                if ( (LA199_0==27) ) {
                    alt199=1;
                }


                switch (alt199) {
            	case 1 :
            	    // InternalSCTX.g:8105:4: otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) )
            	    {
            	    otherlv_3=(Token)match(input,27,FollowSets000.FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	          
            	    }
            	    // InternalSCTX.g:8109:1: ( (lv_values_4_0= RULE_STRING ) )
            	    // InternalSCTX.g:8110:1: (lv_values_4_0= RULE_STRING )
            	    {
            	    // InternalSCTX.g:8110:1: (lv_values_4_0= RULE_STRING )
            	    // InternalSCTX.g:8111:3: lv_values_4_0= RULE_STRING
            	    {
            	    lv_values_4_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_104); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			newLeafNode(lv_values_4_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_3_1_0()); 
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getQuotedKeyStringValueAnnotationRule());
            	      	        }
            	             		addWithLastConsumed(
            	             			current, 
            	             			"values",
            	              		lv_values_4_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.STRING");
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop199;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleQuotedTypedKeyStringValueAnnotation"
    // InternalSCTX.g:8135:1: entryRuleQuotedTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleQuotedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedTypedKeyStringValueAnnotation = null;


        try {
            // InternalSCTX.g:8136:2: (iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:8137:2: iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedTypedKeyStringValueAnnotation=ruleQuotedTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleQuotedTypedKeyStringValueAnnotation"
    // InternalSCTX.g:8144:1: ruleQuotedTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* ) ;
    public final EObject ruleQuotedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_values_5_0=null;
        Token otherlv_6=null;
        Token lv_values_7_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:8147:28: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* ) )
            // InternalSCTX.g:8148:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* )
            {
            // InternalSCTX.g:8148:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* )
            // InternalSCTX.g:8148:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )*
            {
            otherlv_0=(Token)match(input,74,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
                  
            }
            // InternalSCTX.g:8152:1: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:8153:1: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:8153:1: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:8154:3: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_106);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,32,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
                  
            }
            // InternalSCTX.g:8174:1: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalSCTX.g:8175:1: (lv_type_3_0= ruleExtendedID )
            {
            // InternalSCTX.g:8175:1: (lv_type_3_0= ruleExtendedID )
            // InternalSCTX.g:8176:3: lv_type_3_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_28);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_3_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,33,FollowSets000.FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
                  
            }
            // InternalSCTX.g:8196:1: ( (lv_values_5_0= RULE_STRING ) )
            // InternalSCTX.g:8197:1: (lv_values_5_0= RULE_STRING )
            {
            // InternalSCTX.g:8197:1: (lv_values_5_0= RULE_STRING )
            // InternalSCTX.g:8198:3: lv_values_5_0= RULE_STRING
            {
            lv_values_5_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_104); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_values_5_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_5_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              	        }
                     		addWithLastConsumed(
                     			current, 
                     			"values",
                      		lv_values_5_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.STRING");
              	    
            }

            }


            }

            // InternalSCTX.g:8214:2: (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )*
            loop200:
            do {
                int alt200=2;
                int LA200_0 = input.LA(1);

                if ( (LA200_0==27) ) {
                    alt200=1;
                }


                switch (alt200) {
            	case 1 :
            	    // InternalSCTX.g:8214:4: otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) )
            	    {
            	    otherlv_6=(Token)match(input,27,FollowSets000.FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_6, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	          
            	    }
            	    // InternalSCTX.g:8218:1: ( (lv_values_7_0= RULE_STRING ) )
            	    // InternalSCTX.g:8219:1: (lv_values_7_0= RULE_STRING )
            	    {
            	    // InternalSCTX.g:8219:1: (lv_values_7_0= RULE_STRING )
            	    // InternalSCTX.g:8220:3: lv_values_7_0= RULE_STRING
            	    {
            	    lv_values_7_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_104); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			newLeafNode(lv_values_7_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_6_1_0()); 
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
            	      	        }
            	             		addWithLastConsumed(
            	             			current, 
            	             			"values",
            	              		lv_values_7_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.STRING");
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop200;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleEStringBoolean"
    // InternalSCTX.g:8246:1: entryRuleEStringBoolean returns [String current=null] : iv_ruleEStringBoolean= ruleEStringBoolean EOF ;
    public final String entryRuleEStringBoolean() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEStringBoolean = null;


        try {
            // InternalSCTX.g:8247:2: (iv_ruleEStringBoolean= ruleEStringBoolean EOF )
            // InternalSCTX.g:8248:2: iv_ruleEStringBoolean= ruleEStringBoolean EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEStringBooleanRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEStringBoolean=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEStringBoolean.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEStringBoolean"


    // $ANTLR start "ruleEStringBoolean"
    // InternalSCTX.g:8255:1: ruleEStringBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN ) ;
    public final AntlrDatatypeRuleToken ruleEStringBoolean() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_BOOLEAN_2=null;
        AntlrDatatypeRuleToken this_ExtendedID_1 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:8258:28: ( (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN ) )
            // InternalSCTX.g:8259:1: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN )
            {
            // InternalSCTX.g:8259:1: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN )
            int alt201=3;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt201=1;
                }
                break;
            case RULE_ID:
                {
                alt201=2;
                }
                break;
            case RULE_BOOLEAN:
                {
                alt201=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 201, 0, input);

                throw nvae;
            }

            switch (alt201) {
                case 1 :
                    // InternalSCTX.g:8259:6: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_STRING_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STRING_0, grammarAccess.getEStringBooleanAccess().getSTRINGTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8268:5: this_ExtendedID_1= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEStringBooleanAccess().getExtendedIDParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExtendedID_1=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ExtendedID_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:8279:10: this_BOOLEAN_2= RULE_BOOLEAN
                    {
                    this_BOOLEAN_2=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_BOOLEAN_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_BOOLEAN_2, grammarAccess.getEStringBooleanAccess().getBOOLEANTerminalRuleCall_2()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEStringBoolean"


    // $ANTLR start "entryRuleEStringAllTypes"
    // InternalSCTX.g:8294:1: entryRuleEStringAllTypes returns [String current=null] : iv_ruleEStringAllTypes= ruleEStringAllTypes EOF ;
    public final String entryRuleEStringAllTypes() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEStringAllTypes = null;


        try {
            // InternalSCTX.g:8295:2: (iv_ruleEStringAllTypes= ruleEStringAllTypes EOF )
            // InternalSCTX.g:8296:2: iv_ruleEStringAllTypes= ruleEStringAllTypes EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEStringAllTypesRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEStringAllTypes=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEStringAllTypes.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEStringAllTypes"


    // $ANTLR start "ruleEStringAllTypes"
    // InternalSCTX.g:8303:1: ruleEStringAllTypes returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger ) ;
    public final AntlrDatatypeRuleToken ruleEStringAllTypes() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_BOOLEAN_2=null;
        AntlrDatatypeRuleToken this_ExtendedID_1 = null;

        AntlrDatatypeRuleToken this_Integer_3 = null;

        AntlrDatatypeRuleToken this_Floateger_4 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:8306:28: ( (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger ) )
            // InternalSCTX.g:8307:1: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger )
            {
            // InternalSCTX.g:8307:1: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger )
            int alt202=5;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt202=1;
                }
                break;
            case RULE_ID:
                {
                alt202=2;
                }
                break;
            case RULE_BOOLEAN:
                {
                alt202=3;
                }
                break;
            case 69:
                {
                int LA202_4 = input.LA(2);

                if ( (LA202_4==RULE_INT) ) {
                    alt202=4;
                }
                else if ( (LA202_4==RULE_FLOAT) ) {
                    alt202=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 202, 4, input);

                    throw nvae;
                }
                }
                break;
            case RULE_INT:
                {
                alt202=4;
                }
                break;
            case RULE_FLOAT:
                {
                alt202=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 202, 0, input);

                throw nvae;
            }

            switch (alt202) {
                case 1 :
                    // InternalSCTX.g:8307:6: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_STRING_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STRING_0, grammarAccess.getEStringAllTypesAccess().getSTRINGTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8316:5: this_ExtendedID_1= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEStringAllTypesAccess().getExtendedIDParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExtendedID_1=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ExtendedID_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:8327:10: this_BOOLEAN_2= RULE_BOOLEAN
                    {
                    this_BOOLEAN_2=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_BOOLEAN_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_BOOLEAN_2, grammarAccess.getEStringAllTypesAccess().getBOOLEANTerminalRuleCall_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:8336:5: this_Integer_3= ruleInteger
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEStringAllTypesAccess().getIntegerParserRuleCall_3()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Integer_3=ruleInteger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_Integer_3);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalSCTX.g:8348:5: this_Floateger_4= ruleFloateger
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEStringAllTypesAccess().getFloategerParserRuleCall_4()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Floateger_4=ruleFloateger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_Floateger_4);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEStringAllTypes"


    // $ANTLR start "entryRuleExtendedID"
    // InternalSCTX.g:8366:1: entryRuleExtendedID returns [String current=null] : iv_ruleExtendedID= ruleExtendedID EOF ;
    public final String entryRuleExtendedID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleExtendedID = null;


        try {
            // InternalSCTX.g:8367:2: (iv_ruleExtendedID= ruleExtendedID EOF )
            // InternalSCTX.g:8368:2: iv_ruleExtendedID= ruleExtendedID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendedIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExtendedID=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExtendedID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExtendedID"


    // $ANTLR start "ruleExtendedID"
    // InternalSCTX.g:8375:1: ruleExtendedID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (kw= '.' | (kw= '-' this_ID_3= RULE_ID ) )* (kw= '#' this_INT_5= RULE_INT )? ) ;
    public final AntlrDatatypeRuleToken ruleExtendedID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;
        Token this_ID_3=null;
        Token this_INT_5=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:8378:28: ( (this_ID_0= RULE_ID (kw= '.' | (kw= '-' this_ID_3= RULE_ID ) )* (kw= '#' this_INT_5= RULE_INT )? ) )
            // InternalSCTX.g:8379:1: (this_ID_0= RULE_ID (kw= '.' | (kw= '-' this_ID_3= RULE_ID ) )* (kw= '#' this_INT_5= RULE_INT )? )
            {
            // InternalSCTX.g:8379:1: (this_ID_0= RULE_ID (kw= '.' | (kw= '-' this_ID_3= RULE_ID ) )* (kw= '#' this_INT_5= RULE_INT )? )
            // InternalSCTX.g:8379:6: this_ID_0= RULE_ID (kw= '.' | (kw= '-' this_ID_3= RULE_ID ) )* (kw= '#' this_INT_5= RULE_INT )?
            {
            this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_107); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ID_0, grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_0()); 
                  
            }
            // InternalSCTX.g:8386:1: (kw= '.' | (kw= '-' this_ID_3= RULE_ID ) )*
            loop203:
            do {
                int alt203=3;
                int LA203_0 = input.LA(1);

                if ( (LA203_0==69) ) {
                    int LA203_2 = input.LA(2);

                    if ( (LA203_2==RULE_ID) ) {
                        alt203=2;
                    }


                }
                else if ( (LA203_0==61) ) {
                    alt203=1;
                }


                switch (alt203) {
            	case 1 :
            	    // InternalSCTX.g:8387:2: kw= '.'
            	    {
            	    kw=(Token)match(input,61,FollowSets000.FOLLOW_107); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              current.merge(kw);
            	              newLeafNode(kw, grammarAccess.getExtendedIDAccess().getFullStopKeyword_1_0()); 
            	          
            	    }

            	    }
            	    break;
            	case 2 :
            	    // InternalSCTX.g:8393:6: (kw= '-' this_ID_3= RULE_ID )
            	    {
            	    // InternalSCTX.g:8393:6: (kw= '-' this_ID_3= RULE_ID )
            	    // InternalSCTX.g:8394:2: kw= '-' this_ID_3= RULE_ID
            	    {
            	    kw=(Token)match(input,69,FollowSets000.FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              current.merge(kw);
            	              newLeafNode(kw, grammarAccess.getExtendedIDAccess().getHyphenMinusKeyword_1_1_0()); 
            	          
            	    }
            	    this_ID_3=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_107); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_ID_3);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_ID_3, grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_1_1_1()); 
            	          
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop203;
                }
            } while (true);

            // InternalSCTX.g:8406:4: (kw= '#' this_INT_5= RULE_INT )?
            int alt204=2;
            int LA204_0 = input.LA(1);

            if ( (LA204_0==75) ) {
                int LA204_1 = input.LA(2);

                if ( (LA204_1==RULE_INT) ) {
                    alt204=1;
                }
            }
            switch (alt204) {
                case 1 :
                    // InternalSCTX.g:8407:2: kw= '#' this_INT_5= RULE_INT
                    {
                    kw=(Token)match(input,75,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getExtendedIDAccess().getNumberSignKeyword_2_0()); 
                          
                    }
                    this_INT_5=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_INT_5);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_INT_5, grammarAccess.getExtendedIDAccess().getINTTerminalRuleCall_2_1()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExtendedID"


    // $ANTLR start "entryRuleInteger"
    // InternalSCTX.g:8429:1: entryRuleInteger returns [String current=null] : iv_ruleInteger= ruleInteger EOF ;
    public final String entryRuleInteger() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleInteger = null;


        try {
            // InternalSCTX.g:8430:2: (iv_ruleInteger= ruleInteger EOF )
            // InternalSCTX.g:8431:2: iv_ruleInteger= ruleInteger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInteger=ruleInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInteger.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInteger"


    // $ANTLR start "ruleInteger"
    // InternalSCTX.g:8438:1: ruleInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_INT_1= RULE_INT ) ;
    public final AntlrDatatypeRuleToken ruleInteger() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_1=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:8441:28: ( ( (kw= '-' )? this_INT_1= RULE_INT ) )
            // InternalSCTX.g:8442:1: ( (kw= '-' )? this_INT_1= RULE_INT )
            {
            // InternalSCTX.g:8442:1: ( (kw= '-' )? this_INT_1= RULE_INT )
            // InternalSCTX.g:8442:2: (kw= '-' )? this_INT_1= RULE_INT
            {
            // InternalSCTX.g:8442:2: (kw= '-' )?
            int alt205=2;
            int LA205_0 = input.LA(1);

            if ( (LA205_0==69) ) {
                alt205=1;
            }
            switch (alt205) {
                case 1 :
                    // InternalSCTX.g:8443:2: kw= '-'
                    {
                    kw=(Token)match(input,69,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getIntegerAccess().getHyphenMinusKeyword_0()); 
                          
                    }

                    }
                    break;

            }

            this_INT_1=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_INT_1);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_INT_1, grammarAccess.getIntegerAccess().getINTTerminalRuleCall_1()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInteger"


    // $ANTLR start "entryRuleFloateger"
    // InternalSCTX.g:8463:1: entryRuleFloateger returns [String current=null] : iv_ruleFloateger= ruleFloateger EOF ;
    public final String entryRuleFloateger() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFloateger = null;


        try {
            // InternalSCTX.g:8464:2: (iv_ruleFloateger= ruleFloateger EOF )
            // InternalSCTX.g:8465:2: iv_ruleFloateger= ruleFloateger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFloategerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFloateger=ruleFloateger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFloateger.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFloateger"


    // $ANTLR start "ruleFloateger"
    // InternalSCTX.g:8472:1: ruleFloateger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT ) ;
    public final AntlrDatatypeRuleToken ruleFloateger() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_FLOAT_1=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:8475:28: ( ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT ) )
            // InternalSCTX.g:8476:1: ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT )
            {
            // InternalSCTX.g:8476:1: ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT )
            // InternalSCTX.g:8476:2: (kw= '-' )? this_FLOAT_1= RULE_FLOAT
            {
            // InternalSCTX.g:8476:2: (kw= '-' )?
            int alt206=2;
            int LA206_0 = input.LA(1);

            if ( (LA206_0==69) ) {
                alt206=1;
            }
            switch (alt206) {
                case 1 :
                    // InternalSCTX.g:8477:2: kw= '-'
                    {
                    kw=(Token)match(input,69,FollowSets000.FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getFloategerAccess().getHyphenMinusKeyword_0()); 
                          
                    }

                    }
                    break;

            }

            this_FLOAT_1=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_FLOAT_1);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_FLOAT_1, grammarAccess.getFloategerAccess().getFLOATTerminalRuleCall_1()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFloateger"


    // $ANTLR start "rulePreemptionType"
    // InternalSCTX.g:8497:1: rulePreemptionType returns [Enumerator current=null] : ( (enumLiteral_0= 'go to' ) | (enumLiteral_1= 'abort to' ) | (enumLiteral_2= 'join to' ) ) ;
    public final Enumerator rulePreemptionType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8499:28: ( ( (enumLiteral_0= 'go to' ) | (enumLiteral_1= 'abort to' ) | (enumLiteral_2= 'join to' ) ) )
            // InternalSCTX.g:8500:1: ( (enumLiteral_0= 'go to' ) | (enumLiteral_1= 'abort to' ) | (enumLiteral_2= 'join to' ) )
            {
            // InternalSCTX.g:8500:1: ( (enumLiteral_0= 'go to' ) | (enumLiteral_1= 'abort to' ) | (enumLiteral_2= 'join to' ) )
            int alt207=3;
            switch ( input.LA(1) ) {
            case 76:
                {
                alt207=1;
                }
                break;
            case 77:
                {
                alt207=2;
                }
                break;
            case 78:
                {
                alt207=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 207, 0, input);

                throw nvae;
            }

            switch (alt207) {
                case 1 :
                    // InternalSCTX.g:8500:2: (enumLiteral_0= 'go to' )
                    {
                    // InternalSCTX.g:8500:2: (enumLiteral_0= 'go to' )
                    // InternalSCTX.g:8500:4: enumLiteral_0= 'go to'
                    {
                    enumLiteral_0=(Token)match(input,76,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getPreemptionTypeAccess().getWEAKABORTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getPreemptionTypeAccess().getWEAKABORTEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8506:6: (enumLiteral_1= 'abort to' )
                    {
                    // InternalSCTX.g:8506:6: (enumLiteral_1= 'abort to' )
                    // InternalSCTX.g:8506:8: enumLiteral_1= 'abort to'
                    {
                    enumLiteral_1=(Token)match(input,77,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getPreemptionTypeAccess().getSTRONGABORTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getPreemptionTypeAccess().getSTRONGABORTEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:8512:6: (enumLiteral_2= 'join to' )
                    {
                    // InternalSCTX.g:8512:6: (enumLiteral_2= 'join to' )
                    // InternalSCTX.g:8512:8: enumLiteral_2= 'join to'
                    {
                    enumLiteral_2=(Token)match(input,78,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getPreemptionTypeAccess().getTERMINATIONEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getPreemptionTypeAccess().getTERMINATIONEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePreemptionType"


    // $ANTLR start "rulePreemptionTypeLegacy"
    // InternalSCTX.g:8522:1: rulePreemptionTypeLegacy returns [Enumerator current=null] : ( (enumLiteral_0= '-->' ) | (enumLiteral_1= 'o->' ) | (enumLiteral_2= '>->' ) ) ;
    public final Enumerator rulePreemptionTypeLegacy() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8524:28: ( ( (enumLiteral_0= '-->' ) | (enumLiteral_1= 'o->' ) | (enumLiteral_2= '>->' ) ) )
            // InternalSCTX.g:8525:1: ( (enumLiteral_0= '-->' ) | (enumLiteral_1= 'o->' ) | (enumLiteral_2= '>->' ) )
            {
            // InternalSCTX.g:8525:1: ( (enumLiteral_0= '-->' ) | (enumLiteral_1= 'o->' ) | (enumLiteral_2= '>->' ) )
            int alt208=3;
            switch ( input.LA(1) ) {
            case 79:
                {
                alt208=1;
                }
                break;
            case 80:
                {
                alt208=2;
                }
                break;
            case 81:
                {
                alt208=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 208, 0, input);

                throw nvae;
            }

            switch (alt208) {
                case 1 :
                    // InternalSCTX.g:8525:2: (enumLiteral_0= '-->' )
                    {
                    // InternalSCTX.g:8525:2: (enumLiteral_0= '-->' )
                    // InternalSCTX.g:8525:4: enumLiteral_0= '-->'
                    {
                    enumLiteral_0=(Token)match(input,79,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getPreemptionTypeLegacyAccess().getWEAKABORTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getPreemptionTypeLegacyAccess().getWEAKABORTEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8531:6: (enumLiteral_1= 'o->' )
                    {
                    // InternalSCTX.g:8531:6: (enumLiteral_1= 'o->' )
                    // InternalSCTX.g:8531:8: enumLiteral_1= 'o->'
                    {
                    enumLiteral_1=(Token)match(input,80,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getPreemptionTypeLegacyAccess().getSTRONGABORTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getPreemptionTypeLegacyAccess().getSTRONGABORTEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:8537:6: (enumLiteral_2= '>->' )
                    {
                    // InternalSCTX.g:8537:6: (enumLiteral_2= '>->' )
                    // InternalSCTX.g:8537:8: enumLiteral_2= '>->'
                    {
                    enumLiteral_2=(Token)match(input,81,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getPreemptionTypeLegacyAccess().getTERMINATIONEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getPreemptionTypeLegacyAccess().getTERMINATIONEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePreemptionTypeLegacy"


    // $ANTLR start "ruleDelayType"
    // InternalSCTX.g:8547:1: ruleDelayType returns [Enumerator current=null] : ( (enumLiteral_0= 'undefined' ) | (enumLiteral_1= 'delayed' ) | (enumLiteral_2= 'immediate' ) | (enumLiteral_3= 'auto' ) ) ;
    public final Enumerator ruleDelayType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8549:28: ( ( (enumLiteral_0= 'undefined' ) | (enumLiteral_1= 'delayed' ) | (enumLiteral_2= 'immediate' ) | (enumLiteral_3= 'auto' ) ) )
            // InternalSCTX.g:8550:1: ( (enumLiteral_0= 'undefined' ) | (enumLiteral_1= 'delayed' ) | (enumLiteral_2= 'immediate' ) | (enumLiteral_3= 'auto' ) )
            {
            // InternalSCTX.g:8550:1: ( (enumLiteral_0= 'undefined' ) | (enumLiteral_1= 'delayed' ) | (enumLiteral_2= 'immediate' ) | (enumLiteral_3= 'auto' ) )
            int alt209=4;
            switch ( input.LA(1) ) {
            case 82:
                {
                alt209=1;
                }
                break;
            case 83:
                {
                alt209=2;
                }
                break;
            case 84:
                {
                alt209=3;
                }
                break;
            case 85:
                {
                alt209=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 209, 0, input);

                throw nvae;
            }

            switch (alt209) {
                case 1 :
                    // InternalSCTX.g:8550:2: (enumLiteral_0= 'undefined' )
                    {
                    // InternalSCTX.g:8550:2: (enumLiteral_0= 'undefined' )
                    // InternalSCTX.g:8550:4: enumLiteral_0= 'undefined'
                    {
                    enumLiteral_0=(Token)match(input,82,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getDelayTypeAccess().getUNDEFINEDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getDelayTypeAccess().getUNDEFINEDEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8556:6: (enumLiteral_1= 'delayed' )
                    {
                    // InternalSCTX.g:8556:6: (enumLiteral_1= 'delayed' )
                    // InternalSCTX.g:8556:8: enumLiteral_1= 'delayed'
                    {
                    enumLiteral_1=(Token)match(input,83,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getDelayTypeAccess().getDELAYEDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getDelayTypeAccess().getDELAYEDEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:8562:6: (enumLiteral_2= 'immediate' )
                    {
                    // InternalSCTX.g:8562:6: (enumLiteral_2= 'immediate' )
                    // InternalSCTX.g:8562:8: enumLiteral_2= 'immediate'
                    {
                    enumLiteral_2=(Token)match(input,84,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getDelayTypeAccess().getIMMEDIATEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getDelayTypeAccess().getIMMEDIATEEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCTX.g:8568:6: (enumLiteral_3= 'auto' )
                    {
                    // InternalSCTX.g:8568:6: (enumLiteral_3= 'auto' )
                    // InternalSCTX.g:8568:8: enumLiteral_3= 'auto'
                    {
                    enumLiteral_3=(Token)match(input,85,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getDelayTypeAccess().getAUTOMATICEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_3, grammarAccess.getDelayTypeAccess().getAUTOMATICEnumLiteralDeclaration_3()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDelayType"


    // $ANTLR start "ruleHistoryType"
    // InternalSCTX.g:8578:1: ruleHistoryType returns [Enumerator current=null] : ( (enumLiteral_0= 'reset' ) | (enumLiteral_1= 'shallow history' ) | (enumLiteral_2= 'history' ) ) ;
    public final Enumerator ruleHistoryType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8580:28: ( ( (enumLiteral_0= 'reset' ) | (enumLiteral_1= 'shallow history' ) | (enumLiteral_2= 'history' ) ) )
            // InternalSCTX.g:8581:1: ( (enumLiteral_0= 'reset' ) | (enumLiteral_1= 'shallow history' ) | (enumLiteral_2= 'history' ) )
            {
            // InternalSCTX.g:8581:1: ( (enumLiteral_0= 'reset' ) | (enumLiteral_1= 'shallow history' ) | (enumLiteral_2= 'history' ) )
            int alt210=3;
            switch ( input.LA(1) ) {
            case 86:
                {
                alt210=1;
                }
                break;
            case 87:
                {
                alt210=2;
                }
                break;
            case 88:
                {
                alt210=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 210, 0, input);

                throw nvae;
            }

            switch (alt210) {
                case 1 :
                    // InternalSCTX.g:8581:2: (enumLiteral_0= 'reset' )
                    {
                    // InternalSCTX.g:8581:2: (enumLiteral_0= 'reset' )
                    // InternalSCTX.g:8581:4: enumLiteral_0= 'reset'
                    {
                    enumLiteral_0=(Token)match(input,86,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getHistoryTypeAccess().getRESETEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getHistoryTypeAccess().getRESETEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8587:6: (enumLiteral_1= 'shallow history' )
                    {
                    // InternalSCTX.g:8587:6: (enumLiteral_1= 'shallow history' )
                    // InternalSCTX.g:8587:8: enumLiteral_1= 'shallow history'
                    {
                    enumLiteral_1=(Token)match(input,87,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getHistoryTypeAccess().getSHALLOWEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getHistoryTypeAccess().getSHALLOWEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:8593:6: (enumLiteral_2= 'history' )
                    {
                    // InternalSCTX.g:8593:6: (enumLiteral_2= 'history' )
                    // InternalSCTX.g:8593:8: enumLiteral_2= 'history'
                    {
                    enumLiteral_2=(Token)match(input,88,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getHistoryTypeAccess().getDEEPEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getHistoryTypeAccess().getDEEPEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHistoryType"


    // $ANTLR start "ruleSchedulePriorityType"
    // InternalSCTX.g:8603:1: ruleSchedulePriorityType returns [Enumerator current=null] : ( (enumLiteral_0= 'conflict' ) | (enumLiteral_1= 'confluent' ) ) ;
    public final Enumerator ruleSchedulePriorityType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8605:28: ( ( (enumLiteral_0= 'conflict' ) | (enumLiteral_1= 'confluent' ) ) )
            // InternalSCTX.g:8606:1: ( (enumLiteral_0= 'conflict' ) | (enumLiteral_1= 'confluent' ) )
            {
            // InternalSCTX.g:8606:1: ( (enumLiteral_0= 'conflict' ) | (enumLiteral_1= 'confluent' ) )
            int alt211=2;
            int LA211_0 = input.LA(1);

            if ( (LA211_0==89) ) {
                alt211=1;
            }
            else if ( (LA211_0==90) ) {
                alt211=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 211, 0, input);

                throw nvae;
            }
            switch (alt211) {
                case 1 :
                    // InternalSCTX.g:8606:2: (enumLiteral_0= 'conflict' )
                    {
                    // InternalSCTX.g:8606:2: (enumLiteral_0= 'conflict' )
                    // InternalSCTX.g:8606:4: enumLiteral_0= 'conflict'
                    {
                    enumLiteral_0=(Token)match(input,89,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getSchedulePriorityTypeAccess().getCONFLICTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getSchedulePriorityTypeAccess().getCONFLICTEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8612:6: (enumLiteral_1= 'confluent' )
                    {
                    // InternalSCTX.g:8612:6: (enumLiteral_1= 'confluent' )
                    // InternalSCTX.g:8612:8: enumLiteral_1= 'confluent'
                    {
                    enumLiteral_1=(Token)match(input,90,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getSchedulePriorityTypeAccess().getCONFLUENTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getSchedulePriorityTypeAccess().getCONFLUENTEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSchedulePriorityType"


    // $ANTLR start "ruleAssignOperator"
    // InternalSCTX.g:8622:1: ruleAssignOperator returns [Enumerator current=null] : ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= 'min=' ) | (enumLiteral_10= 'max=' ) ) ;
    public final Enumerator ruleAssignOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;
        Token enumLiteral_8=null;
        Token enumLiteral_9=null;
        Token enumLiteral_10=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8624:28: ( ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= 'min=' ) | (enumLiteral_10= 'max=' ) ) )
            // InternalSCTX.g:8625:1: ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= 'min=' ) | (enumLiteral_10= 'max=' ) )
            {
            // InternalSCTX.g:8625:1: ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= 'min=' ) | (enumLiteral_10= 'max=' ) )
            int alt212=11;
            switch ( input.LA(1) ) {
            case 59:
                {
                alt212=1;
                }
                break;
            case 91:
                {
                alt212=2;
                }
                break;
            case 92:
                {
                alt212=3;
                }
                break;
            case 93:
                {
                alt212=4;
                }
                break;
            case 94:
                {
                alt212=5;
                }
                break;
            case 95:
                {
                alt212=6;
                }
                break;
            case 96:
                {
                alt212=7;
                }
                break;
            case 97:
                {
                alt212=8;
                }
                break;
            case 98:
                {
                alt212=9;
                }
                break;
            case 99:
                {
                alt212=10;
                }
                break;
            case 100:
                {
                alt212=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 212, 0, input);

                throw nvae;
            }

            switch (alt212) {
                case 1 :
                    // InternalSCTX.g:8625:2: (enumLiteral_0= '=' )
                    {
                    // InternalSCTX.g:8625:2: (enumLiteral_0= '=' )
                    // InternalSCTX.g:8625:4: enumLiteral_0= '='
                    {
                    enumLiteral_0=(Token)match(input,59,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getAssignOperatorAccess().getASSIGNEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8631:6: (enumLiteral_1= '+=' )
                    {
                    // InternalSCTX.g:8631:6: (enumLiteral_1= '+=' )
                    // InternalSCTX.g:8631:8: enumLiteral_1= '+='
                    {
                    enumLiteral_1=(Token)match(input,91,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNADDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getAssignOperatorAccess().getASSIGNADDEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:8637:6: (enumLiteral_2= '-=' )
                    {
                    // InternalSCTX.g:8637:6: (enumLiteral_2= '-=' )
                    // InternalSCTX.g:8637:8: enumLiteral_2= '-='
                    {
                    enumLiteral_2=(Token)match(input,92,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNSUBEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getAssignOperatorAccess().getASSIGNSUBEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCTX.g:8643:6: (enumLiteral_3= '*=' )
                    {
                    // InternalSCTX.g:8643:6: (enumLiteral_3= '*=' )
                    // InternalSCTX.g:8643:8: enumLiteral_3= '*='
                    {
                    enumLiteral_3=(Token)match(input,93,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNMULEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_3, grammarAccess.getAssignOperatorAccess().getASSIGNMULEnumLiteralDeclaration_3()); 
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCTX.g:8649:6: (enumLiteral_4= '/=' )
                    {
                    // InternalSCTX.g:8649:6: (enumLiteral_4= '/=' )
                    // InternalSCTX.g:8649:8: enumLiteral_4= '/='
                    {
                    enumLiteral_4=(Token)match(input,94,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNDIVEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_4, grammarAccess.getAssignOperatorAccess().getASSIGNDIVEnumLiteralDeclaration_4()); 
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSCTX.g:8655:6: (enumLiteral_5= '%=' )
                    {
                    // InternalSCTX.g:8655:6: (enumLiteral_5= '%=' )
                    // InternalSCTX.g:8655:8: enumLiteral_5= '%='
                    {
                    enumLiteral_5=(Token)match(input,95,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNMODEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_5, grammarAccess.getAssignOperatorAccess().getASSIGNMODEnumLiteralDeclaration_5()); 
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSCTX.g:8661:6: (enumLiteral_6= '&=' )
                    {
                    // InternalSCTX.g:8661:6: (enumLiteral_6= '&=' )
                    // InternalSCTX.g:8661:8: enumLiteral_6= '&='
                    {
                    enumLiteral_6=(Token)match(input,96,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNANDEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_6, grammarAccess.getAssignOperatorAccess().getASSIGNANDEnumLiteralDeclaration_6()); 
                          
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSCTX.g:8667:6: (enumLiteral_7= '|=' )
                    {
                    // InternalSCTX.g:8667:6: (enumLiteral_7= '|=' )
                    // InternalSCTX.g:8667:8: enumLiteral_7= '|='
                    {
                    enumLiteral_7=(Token)match(input,97,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNOREnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_7, grammarAccess.getAssignOperatorAccess().getASSIGNOREnumLiteralDeclaration_7()); 
                          
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSCTX.g:8673:6: (enumLiteral_8= '^=' )
                    {
                    // InternalSCTX.g:8673:6: (enumLiteral_8= '^=' )
                    // InternalSCTX.g:8673:8: enumLiteral_8= '^='
                    {
                    enumLiteral_8=(Token)match(input,98,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNXOREnumLiteralDeclaration_8().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_8, grammarAccess.getAssignOperatorAccess().getASSIGNXOREnumLiteralDeclaration_8()); 
                          
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSCTX.g:8679:6: (enumLiteral_9= 'min=' )
                    {
                    // InternalSCTX.g:8679:6: (enumLiteral_9= 'min=' )
                    // InternalSCTX.g:8679:8: enumLiteral_9= 'min='
                    {
                    enumLiteral_9=(Token)match(input,99,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNMINEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_9, grammarAccess.getAssignOperatorAccess().getASSIGNMINEnumLiteralDeclaration_9()); 
                          
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalSCTX.g:8685:6: (enumLiteral_10= 'max=' )
                    {
                    // InternalSCTX.g:8685:6: (enumLiteral_10= 'max=' )
                    // InternalSCTX.g:8685:8: enumLiteral_10= 'max='
                    {
                    enumLiteral_10=(Token)match(input,100,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNMAXEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_10, grammarAccess.getAssignOperatorAccess().getASSIGNMAXEnumLiteralDeclaration_10()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssignOperator"


    // $ANTLR start "rulePostfixOperator"
    // InternalSCTX.g:8695:1: rulePostfixOperator returns [Enumerator current=null] : ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) ) ;
    public final Enumerator rulePostfixOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8697:28: ( ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) ) )
            // InternalSCTX.g:8698:1: ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) )
            {
            // InternalSCTX.g:8698:1: ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) )
            int alt213=2;
            int LA213_0 = input.LA(1);

            if ( (LA213_0==101) ) {
                alt213=1;
            }
            else if ( (LA213_0==102) ) {
                alt213=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 213, 0, input);

                throw nvae;
            }
            switch (alt213) {
                case 1 :
                    // InternalSCTX.g:8698:2: (enumLiteral_0= '++' )
                    {
                    // InternalSCTX.g:8698:2: (enumLiteral_0= '++' )
                    // InternalSCTX.g:8698:4: enumLiteral_0= '++'
                    {
                    enumLiteral_0=(Token)match(input,101,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getPostfixOperatorAccess().getPOSTFIXADDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getPostfixOperatorAccess().getPOSTFIXADDEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8704:6: (enumLiteral_1= '--' )
                    {
                    // InternalSCTX.g:8704:6: (enumLiteral_1= '--' )
                    // InternalSCTX.g:8704:8: enumLiteral_1= '--'
                    {
                    enumLiteral_1=(Token)match(input,102,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getPostfixOperatorAccess().getPOSTFIXSUBEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getPostfixOperatorAccess().getPOSTFIXSUBEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePostfixOperator"


    // $ANTLR start "ruleCompareOperator"
    // InternalSCTX.g:8714:1: ruleCompareOperator returns [Enumerator current=null] : ( (enumLiteral_0= '==' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '!=' ) ) ;
    public final Enumerator ruleCompareOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8716:28: ( ( (enumLiteral_0= '==' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '!=' ) ) )
            // InternalSCTX.g:8717:1: ( (enumLiteral_0= '==' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '!=' ) )
            {
            // InternalSCTX.g:8717:1: ( (enumLiteral_0= '==' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '!=' ) )
            int alt214=6;
            switch ( input.LA(1) ) {
            case 103:
                {
                alt214=1;
                }
                break;
            case 63:
                {
                alt214=2;
                }
                break;
            case 104:
                {
                alt214=3;
                }
                break;
            case 64:
                {
                alt214=4;
                }
                break;
            case 105:
                {
                alt214=5;
                }
                break;
            case 106:
                {
                alt214=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 214, 0, input);

                throw nvae;
            }

            switch (alt214) {
                case 1 :
                    // InternalSCTX.g:8717:2: (enumLiteral_0= '==' )
                    {
                    // InternalSCTX.g:8717:2: (enumLiteral_0= '==' )
                    // InternalSCTX.g:8717:4: enumLiteral_0= '=='
                    {
                    enumLiteral_0=(Token)match(input,103,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8723:6: (enumLiteral_1= '<' )
                    {
                    // InternalSCTX.g:8723:6: (enumLiteral_1= '<' )
                    // InternalSCTX.g:8723:8: enumLiteral_1= '<'
                    {
                    enumLiteral_1=(Token)match(input,63,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:8729:6: (enumLiteral_2= '<=' )
                    {
                    // InternalSCTX.g:8729:6: (enumLiteral_2= '<=' )
                    // InternalSCTX.g:8729:8: enumLiteral_2= '<='
                    {
                    enumLiteral_2=(Token)match(input,104,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCTX.g:8735:6: (enumLiteral_3= '>' )
                    {
                    // InternalSCTX.g:8735:6: (enumLiteral_3= '>' )
                    // InternalSCTX.g:8735:8: enumLiteral_3= '>'
                    {
                    enumLiteral_3=(Token)match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_3, grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3()); 
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCTX.g:8741:6: (enumLiteral_4= '>=' )
                    {
                    // InternalSCTX.g:8741:6: (enumLiteral_4= '>=' )
                    // InternalSCTX.g:8741:8: enumLiteral_4= '>='
                    {
                    enumLiteral_4=(Token)match(input,105,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_4, grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4()); 
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSCTX.g:8747:6: (enumLiteral_5= '!=' )
                    {
                    // InternalSCTX.g:8747:6: (enumLiteral_5= '!=' )
                    // InternalSCTX.g:8747:8: enumLiteral_5= '!='
                    {
                    enumLiteral_5=(Token)match(input,106,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_5, grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompareOperator"


    // $ANTLR start "rulePreOperator"
    // InternalSCTX.g:8757:1: rulePreOperator returns [Enumerator current=null] : (enumLiteral_0= 'pre' ) ;
    public final Enumerator rulePreOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8759:28: ( (enumLiteral_0= 'pre' ) )
            // InternalSCTX.g:8760:1: (enumLiteral_0= 'pre' )
            {
            // InternalSCTX.g:8760:1: (enumLiteral_0= 'pre' )
            // InternalSCTX.g:8760:3: enumLiteral_0= 'pre'
            {
            enumLiteral_0=(Token)match(input,107,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePreOperator"


    // $ANTLR start "ruleBitwiseOrOperator"
    // InternalSCTX.g:8770:1: ruleBitwiseOrOperator returns [Enumerator current=null] : (enumLiteral_0= '|' ) ;
    public final Enumerator ruleBitwiseOrOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8772:28: ( (enumLiteral_0= '|' ) )
            // InternalSCTX.g:8773:1: (enumLiteral_0= '|' )
            {
            // InternalSCTX.g:8773:1: (enumLiteral_0= '|' )
            // InternalSCTX.g:8773:3: enumLiteral_0= '|'
            {
            enumLiteral_0=(Token)match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getBitwiseOrOperatorAccess().getBITWISE_OREnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getBitwiseOrOperatorAccess().getBITWISE_OREnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseOrOperator"


    // $ANTLR start "ruleBitwiseAndOperator"
    // InternalSCTX.g:8783:1: ruleBitwiseAndOperator returns [Enumerator current=null] : (enumLiteral_0= '&' ) ;
    public final Enumerator ruleBitwiseAndOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8785:28: ( (enumLiteral_0= '&' ) )
            // InternalSCTX.g:8786:1: (enumLiteral_0= '&' )
            {
            // InternalSCTX.g:8786:1: (enumLiteral_0= '&' )
            // InternalSCTX.g:8786:3: enumLiteral_0= '&'
            {
            enumLiteral_0=(Token)match(input,30,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getBitwiseAndOperatorAccess().getBITWISE_ANDEnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getBitwiseAndOperatorAccess().getBITWISE_ANDEnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseAndOperator"


    // $ANTLR start "ruleNotOperator"
    // InternalSCTX.g:8796:1: ruleNotOperator returns [Enumerator current=null] : (enumLiteral_0= '!' ) ;
    public final Enumerator ruleNotOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8798:28: ( (enumLiteral_0= '!' ) )
            // InternalSCTX.g:8799:1: (enumLiteral_0= '!' )
            {
            // InternalSCTX.g:8799:1: (enumLiteral_0= '!' )
            // InternalSCTX.g:8799:3: enumLiteral_0= '!'
            {
            enumLiteral_0=(Token)match(input,29,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getNotOperatorAccess().getNOTEnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getNotOperatorAccess().getNOTEnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotOperator"


    // $ANTLR start "ruleAddOperator"
    // InternalSCTX.g:8809:1: ruleAddOperator returns [Enumerator current=null] : (enumLiteral_0= '+' ) ;
    public final Enumerator ruleAddOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8811:28: ( (enumLiteral_0= '+' ) )
            // InternalSCTX.g:8812:1: (enumLiteral_0= '+' )
            {
            // InternalSCTX.g:8812:1: (enumLiteral_0= '+' )
            // InternalSCTX.g:8812:3: enumLiteral_0= '+'
            {
            enumLiteral_0=(Token)match(input,68,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getAddOperatorAccess().getADDEnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getAddOperatorAccess().getADDEnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAddOperator"


    // $ANTLR start "ruleSubOperator"
    // InternalSCTX.g:8822:1: ruleSubOperator returns [Enumerator current=null] : (enumLiteral_0= '-' ) ;
    public final Enumerator ruleSubOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8824:28: ( (enumLiteral_0= '-' ) )
            // InternalSCTX.g:8825:1: (enumLiteral_0= '-' )
            {
            // InternalSCTX.g:8825:1: (enumLiteral_0= '-' )
            // InternalSCTX.g:8825:3: enumLiteral_0= '-'
            {
            enumLiteral_0=(Token)match(input,69,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getSubOperatorAccess().getSUBEnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getSubOperatorAccess().getSUBEnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubOperator"


    // $ANTLR start "ruleMultOperator"
    // InternalSCTX.g:8835:1: ruleMultOperator returns [Enumerator current=null] : (enumLiteral_0= '*' ) ;
    public final Enumerator ruleMultOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8837:28: ( (enumLiteral_0= '*' ) )
            // InternalSCTX.g:8838:1: (enumLiteral_0= '*' )
            {
            // InternalSCTX.g:8838:1: (enumLiteral_0= '*' )
            // InternalSCTX.g:8838:3: enumLiteral_0= '*'
            {
            enumLiteral_0=(Token)match(input,70,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultOperator"


    // $ANTLR start "ruleModOperator"
    // InternalSCTX.g:8848:1: ruleModOperator returns [Enumerator current=null] : (enumLiteral_0= '%' ) ;
    public final Enumerator ruleModOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8850:28: ( (enumLiteral_0= '%' ) )
            // InternalSCTX.g:8851:1: (enumLiteral_0= '%' )
            {
            // InternalSCTX.g:8851:1: (enumLiteral_0= '%' )
            // InternalSCTX.g:8851:3: enumLiteral_0= '%'
            {
            enumLiteral_0=(Token)match(input,72,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getModOperatorAccess().getMODEnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getModOperatorAccess().getMODEnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModOperator"


    // $ANTLR start "ruleDivOperator"
    // InternalSCTX.g:8861:1: ruleDivOperator returns [Enumerator current=null] : (enumLiteral_0= '/' ) ;
    public final Enumerator ruleDivOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8863:28: ( (enumLiteral_0= '/' ) )
            // InternalSCTX.g:8864:1: (enumLiteral_0= '/' )
            {
            // InternalSCTX.g:8864:1: (enumLiteral_0= '/' )
            // InternalSCTX.g:8864:3: enumLiteral_0= '/'
            {
            enumLiteral_0=(Token)match(input,71,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDivOperator"


    // $ANTLR start "ruleValOperator"
    // InternalSCTX.g:8874:1: ruleValOperator returns [Enumerator current=null] : (enumLiteral_0= 'val' ) ;
    public final Enumerator ruleValOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8876:28: ( (enumLiteral_0= 'val' ) )
            // InternalSCTX.g:8877:1: (enumLiteral_0= 'val' )
            {
            // InternalSCTX.g:8877:1: (enumLiteral_0= 'val' )
            // InternalSCTX.g:8877:3: enumLiteral_0= 'val'
            {
            enumLiteral_0=(Token)match(input,108,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getValOperatorAccess().getVALEnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getValOperatorAccess().getVALEnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValOperator"


    // $ANTLR start "ruleLogicalOrOperator"
    // InternalSCTX.g:8887:1: ruleLogicalOrOperator returns [Enumerator current=null] : (enumLiteral_0= '||' ) ;
    public final Enumerator ruleLogicalOrOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8889:28: ( (enumLiteral_0= '||' ) )
            // InternalSCTX.g:8890:1: (enumLiteral_0= '||' )
            {
            // InternalSCTX.g:8890:1: (enumLiteral_0= '||' )
            // InternalSCTX.g:8890:3: enumLiteral_0= '||'
            {
            enumLiteral_0=(Token)match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getLogicalOrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getLogicalOrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalOrOperator"


    // $ANTLR start "ruleLogicalAndOperator"
    // InternalSCTX.g:8900:1: ruleLogicalAndOperator returns [Enumerator current=null] : (enumLiteral_0= '&&' ) ;
    public final Enumerator ruleLogicalAndOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8902:28: ( (enumLiteral_0= '&&' ) )
            // InternalSCTX.g:8903:1: (enumLiteral_0= '&&' )
            {
            // InternalSCTX.g:8903:1: (enumLiteral_0= '&&' )
            // InternalSCTX.g:8903:3: enumLiteral_0= '&&'
            {
            enumLiteral_0=(Token)match(input,66,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getLogicalAndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getLogicalAndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalAndOperator"


    // $ANTLR start "ruleValueType"
    // InternalSCTX.g:8917:1: ruleValueType returns [Enumerator current=null] : ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'unsigned' ) | (enumLiteral_3= 'int' ) | (enumLiteral_4= 'float' ) | (enumLiteral_5= 'string' ) | (enumLiteral_6= 'host' ) ) ;
    public final Enumerator ruleValueType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8919:28: ( ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'unsigned' ) | (enumLiteral_3= 'int' ) | (enumLiteral_4= 'float' ) | (enumLiteral_5= 'string' ) | (enumLiteral_6= 'host' ) ) )
            // InternalSCTX.g:8920:1: ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'unsigned' ) | (enumLiteral_3= 'int' ) | (enumLiteral_4= 'float' ) | (enumLiteral_5= 'string' ) | (enumLiteral_6= 'host' ) )
            {
            // InternalSCTX.g:8920:1: ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'unsigned' ) | (enumLiteral_3= 'int' ) | (enumLiteral_4= 'float' ) | (enumLiteral_5= 'string' ) | (enumLiteral_6= 'host' ) )
            int alt215=7;
            switch ( input.LA(1) ) {
            case 109:
                {
                alt215=1;
                }
                break;
            case 110:
                {
                alt215=2;
                }
                break;
            case 111:
                {
                alt215=3;
                }
                break;
            case 112:
                {
                alt215=4;
                }
                break;
            case 113:
                {
                alt215=5;
                }
                break;
            case 114:
                {
                alt215=6;
                }
                break;
            case 115:
                {
                alt215=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 215, 0, input);

                throw nvae;
            }

            switch (alt215) {
                case 1 :
                    // InternalSCTX.g:8920:2: (enumLiteral_0= 'pure' )
                    {
                    // InternalSCTX.g:8920:2: (enumLiteral_0= 'pure' )
                    // InternalSCTX.g:8920:4: enumLiteral_0= 'pure'
                    {
                    enumLiteral_0=(Token)match(input,109,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getValueTypeAccess().getPUREEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getValueTypeAccess().getPUREEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8926:6: (enumLiteral_1= 'bool' )
                    {
                    // InternalSCTX.g:8926:6: (enumLiteral_1= 'bool' )
                    // InternalSCTX.g:8926:8: enumLiteral_1= 'bool'
                    {
                    enumLiteral_1=(Token)match(input,110,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:8932:6: (enumLiteral_2= 'unsigned' )
                    {
                    // InternalSCTX.g:8932:6: (enumLiteral_2= 'unsigned' )
                    // InternalSCTX.g:8932:8: enumLiteral_2= 'unsigned'
                    {
                    enumLiteral_2=(Token)match(input,111,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getValueTypeAccess().getUNSIGNEDEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getValueTypeAccess().getUNSIGNEDEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCTX.g:8938:6: (enumLiteral_3= 'int' )
                    {
                    // InternalSCTX.g:8938:6: (enumLiteral_3= 'int' )
                    // InternalSCTX.g:8938:8: enumLiteral_3= 'int'
                    {
                    enumLiteral_3=(Token)match(input,112,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_3, grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_3()); 
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCTX.g:8944:6: (enumLiteral_4= 'float' )
                    {
                    // InternalSCTX.g:8944:6: (enumLiteral_4= 'float' )
                    // InternalSCTX.g:8944:8: enumLiteral_4= 'float'
                    {
                    enumLiteral_4=(Token)match(input,113,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_4, grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_4()); 
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSCTX.g:8950:6: (enumLiteral_5= 'string' )
                    {
                    // InternalSCTX.g:8950:6: (enumLiteral_5= 'string' )
                    // InternalSCTX.g:8950:8: enumLiteral_5= 'string'
                    {
                    enumLiteral_5=(Token)match(input,114,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_5, grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_5()); 
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSCTX.g:8956:6: (enumLiteral_6= 'host' )
                    {
                    // InternalSCTX.g:8956:6: (enumLiteral_6= 'host' )
                    // InternalSCTX.g:8956:8: enumLiteral_6= 'host'
                    {
                    enumLiteral_6=(Token)match(input,115,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getValueTypeAccess().getHOSTEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_6, grammarAccess.getValueTypeAccess().getHOSTEnumLiteralDeclaration_6()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueType"


    // $ANTLR start "ruleCombineOperator"
    // InternalSCTX.g:8968:1: ruleCombineOperator returns [Enumerator current=null] : ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) ) ;
    public final Enumerator ruleCombineOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8970:28: ( ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) ) )
            // InternalSCTX.g:8971:1: ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) )
            {
            // InternalSCTX.g:8971:1: ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) )
            int alt216=8;
            switch ( input.LA(1) ) {
            case 116:
                {
                alt216=1;
                }
                break;
            case 68:
                {
                alt216=2;
                }
                break;
            case 70:
                {
                alt216=3;
                }
                break;
            case 117:
                {
                alt216=4;
                }
                break;
            case 118:
                {
                alt216=5;
                }
                break;
            case 67:
                {
                alt216=6;
                }
                break;
            case 30:
                {
                alt216=7;
                }
                break;
            case 115:
                {
                alt216=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 216, 0, input);

                throw nvae;
            }

            switch (alt216) {
                case 1 :
                    // InternalSCTX.g:8971:2: (enumLiteral_0= 'none' )
                    {
                    // InternalSCTX.g:8971:2: (enumLiteral_0= 'none' )
                    // InternalSCTX.g:8971:4: enumLiteral_0= 'none'
                    {
                    enumLiteral_0=(Token)match(input,116,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8977:6: (enumLiteral_1= '+' )
                    {
                    // InternalSCTX.g:8977:6: (enumLiteral_1= '+' )
                    // InternalSCTX.g:8977:8: enumLiteral_1= '+'
                    {
                    enumLiteral_1=(Token)match(input,68,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:8983:6: (enumLiteral_2= '*' )
                    {
                    // InternalSCTX.g:8983:6: (enumLiteral_2= '*' )
                    // InternalSCTX.g:8983:8: enumLiteral_2= '*'
                    {
                    enumLiteral_2=(Token)match(input,70,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCTX.g:8989:6: (enumLiteral_3= 'max' )
                    {
                    // InternalSCTX.g:8989:6: (enumLiteral_3= 'max' )
                    // InternalSCTX.g:8989:8: enumLiteral_3= 'max'
                    {
                    enumLiteral_3=(Token)match(input,117,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_3, grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3()); 
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCTX.g:8995:6: (enumLiteral_4= 'min' )
                    {
                    // InternalSCTX.g:8995:6: (enumLiteral_4= 'min' )
                    // InternalSCTX.g:8995:8: enumLiteral_4= 'min'
                    {
                    enumLiteral_4=(Token)match(input,118,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_4, grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4()); 
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSCTX.g:9001:6: (enumLiteral_5= '|' )
                    {
                    // InternalSCTX.g:9001:6: (enumLiteral_5= '|' )
                    // InternalSCTX.g:9001:8: enumLiteral_5= '|'
                    {
                    enumLiteral_5=(Token)match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_5, grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5()); 
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSCTX.g:9007:6: (enumLiteral_6= '&' )
                    {
                    // InternalSCTX.g:9007:6: (enumLiteral_6= '&' )
                    // InternalSCTX.g:9007:8: enumLiteral_6= '&'
                    {
                    enumLiteral_6=(Token)match(input,30,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_6, grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6()); 
                          
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSCTX.g:9013:6: (enumLiteral_7= 'host' )
                    {
                    // InternalSCTX.g:9013:6: (enumLiteral_7= 'host' )
                    // InternalSCTX.g:9013:8: enumLiteral_7= 'host'
                    {
                    enumLiteral_7=(Token)match(input,115,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_7, grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCombineOperator"

    // $ANTLR start synpred36_InternalSCTX
    public final void synpred36_InternalSCTX_fragment() throws RecognitionException {   
        Token lv_triggerDelay_7_0=null;

        // InternalSCTX.g:938:1: ( (lv_triggerDelay_7_0= RULE_INT ) )
        // InternalSCTX.g:938:1: (lv_triggerDelay_7_0= RULE_INT )
        {
        // InternalSCTX.g:938:1: (lv_triggerDelay_7_0= RULE_INT )
        // InternalSCTX.g:939:3: lv_triggerDelay_7_0= RULE_INT
        {
        lv_triggerDelay_7_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred36_InternalSCTX

    // $ANTLR start synpred37_InternalSCTX
    public final void synpred37_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_trigger_8_0 = null;


        // InternalSCTX.g:955:4: ( ( (lv_trigger_8_0= ruleBoolExpression ) ) )
        // InternalSCTX.g:955:4: ( (lv_trigger_8_0= ruleBoolExpression ) )
        {
        // InternalSCTX.g:955:4: ( (lv_trigger_8_0= ruleBoolExpression ) )
        // InternalSCTX.g:956:1: (lv_trigger_8_0= ruleBoolExpression )
        {
        // InternalSCTX.g:956:1: (lv_trigger_8_0= ruleBoolExpression )
        // InternalSCTX.g:957:3: lv_trigger_8_0= ruleBoolExpression
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getTransitionAccess().getTriggerBoolExpressionParserRuleCall_6_0_0_2_0_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_trigger_8_0=ruleBoolExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred37_InternalSCTX

    // $ANTLR start synpred41_InternalSCTX
    public final void synpred41_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_6=null;
        Token lv_triggerDelay_7_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_trigger_8_0 = null;

        EObject lv_trigger_9_0 = null;

        EObject lv_effects_11_0 = null;

        EObject lv_effects_13_0 = null;


        // InternalSCTX.g:933:4: ( ( (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( ( (lv_trigger_8_0= ruleBoolExpression ) ) | ( (lv_trigger_9_0= ruleAtomicExpression ) ) ) )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )? ) )
        // InternalSCTX.g:933:4: ( (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( ( (lv_trigger_8_0= ruleBoolExpression ) ) | ( (lv_trigger_9_0= ruleAtomicExpression ) ) ) )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )? )
        {
        // InternalSCTX.g:933:4: ( (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( ( (lv_trigger_8_0= ruleBoolExpression ) ) | ( (lv_trigger_9_0= ruleAtomicExpression ) ) ) )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )? )
        // InternalSCTX.g:933:5: (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( ( (lv_trigger_8_0= ruleBoolExpression ) ) | ( (lv_trigger_9_0= ruleAtomicExpression ) ) ) )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )?
        {
        // InternalSCTX.g:933:5: (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( ( (lv_trigger_8_0= ruleBoolExpression ) ) | ( (lv_trigger_9_0= ruleAtomicExpression ) ) ) )?
        int alt229=2;
        int LA229_0 = input.LA(1);

        if ( (LA229_0==35) ) {
            alt229=1;
        }
        switch (alt229) {
            case 1 :
                // InternalSCTX.g:933:7: otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( ( (lv_trigger_8_0= ruleBoolExpression ) ) | ( (lv_trigger_9_0= ruleAtomicExpression ) ) )
                {
                otherlv_6=(Token)match(input,35,FollowSets000.FOLLOW_34); if (state.failed) return ;
                // InternalSCTX.g:937:1: ( (lv_triggerDelay_7_0= RULE_INT ) )?
                int alt227=2;
                alt227 = dfa227.predict(input);
                switch (alt227) {
                    case 1 :
                        // InternalSCTX.g:938:1: (lv_triggerDelay_7_0= RULE_INT )
                        {
                        // InternalSCTX.g:938:1: (lv_triggerDelay_7_0= RULE_INT )
                        // InternalSCTX.g:939:3: lv_triggerDelay_7_0= RULE_INT
                        {
                        lv_triggerDelay_7_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_34); if (state.failed) return ;

                        }


                        }
                        break;

                }

                // InternalSCTX.g:955:3: ( ( (lv_trigger_8_0= ruleBoolExpression ) ) | ( (lv_trigger_9_0= ruleAtomicExpression ) ) )
                int alt228=2;
                alt228 = dfa228.predict(input);
                switch (alt228) {
                    case 1 :
                        // InternalSCTX.g:955:4: ( (lv_trigger_8_0= ruleBoolExpression ) )
                        {
                        // InternalSCTX.g:955:4: ( (lv_trigger_8_0= ruleBoolExpression ) )
                        // InternalSCTX.g:956:1: (lv_trigger_8_0= ruleBoolExpression )
                        {
                        // InternalSCTX.g:956:1: (lv_trigger_8_0= ruleBoolExpression )
                        // InternalSCTX.g:957:3: lv_trigger_8_0= ruleBoolExpression
                        {
                        if ( state.backtracking==0 ) {
                           
                          	        newCompositeNode(grammarAccess.getTransitionAccess().getTriggerBoolExpressionParserRuleCall_6_0_0_2_0_0()); 
                          	    
                        }
                        pushFollow(FollowSets000.FOLLOW_35);
                        lv_trigger_8_0=ruleBoolExpression();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalSCTX.g:974:6: ( (lv_trigger_9_0= ruleAtomicExpression ) )
                        {
                        // InternalSCTX.g:974:6: ( (lv_trigger_9_0= ruleAtomicExpression ) )
                        // InternalSCTX.g:975:1: (lv_trigger_9_0= ruleAtomicExpression )
                        {
                        // InternalSCTX.g:975:1: (lv_trigger_9_0= ruleAtomicExpression )
                        // InternalSCTX.g:976:3: lv_trigger_9_0= ruleAtomicExpression
                        {
                        if ( state.backtracking==0 ) {
                           
                          	        newCompositeNode(grammarAccess.getTransitionAccess().getTriggerAtomicExpressionParserRuleCall_6_0_0_2_1_0()); 
                          	    
                        }
                        pushFollow(FollowSets000.FOLLOW_35);
                        lv_trigger_9_0=ruleAtomicExpression();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }
                break;

        }

        // InternalSCTX.g:992:5: (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )?
        int alt231=2;
        int LA231_0 = input.LA(1);

        if ( (LA231_0==36) ) {
            alt231=1;
        }
        switch (alt231) {
            case 1 :
                // InternalSCTX.g:992:7: otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )*
                {
                otherlv_10=(Token)match(input,36,FollowSets000.FOLLOW_36); if (state.failed) return ;
                // InternalSCTX.g:996:1: ( (lv_effects_11_0= ruleEffect ) )
                // InternalSCTX.g:997:1: (lv_effects_11_0= ruleEffect )
                {
                // InternalSCTX.g:997:1: (lv_effects_11_0= ruleEffect )
                // InternalSCTX.g:998:3: lv_effects_11_0= ruleEffect
                {
                if ( state.backtracking==0 ) {
                   
                  	        newCompositeNode(grammarAccess.getTransitionAccess().getEffectsEffectParserRuleCall_6_0_1_1_0()); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_37);
                lv_effects_11_0=ruleEffect();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalSCTX.g:1014:2: (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )*
                loop230:
                do {
                    int alt230=2;
                    int LA230_0 = input.LA(1);

                    if ( (LA230_0==37) ) {
                        alt230=1;
                    }


                    switch (alt230) {
                	case 1 :
                	    // InternalSCTX.g:1014:4: otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) )
                	    {
                	    otherlv_12=(Token)match(input,37,FollowSets000.FOLLOW_36); if (state.failed) return ;
                	    // InternalSCTX.g:1018:1: ( (lv_effects_13_0= ruleEffect ) )
                	    // InternalSCTX.g:1019:1: (lv_effects_13_0= ruleEffect )
                	    {
                	    // InternalSCTX.g:1019:1: (lv_effects_13_0= ruleEffect )
                	    // InternalSCTX.g:1020:3: lv_effects_13_0= ruleEffect
                	    {
                	    if ( state.backtracking==0 ) {
                	       
                	      	        newCompositeNode(grammarAccess.getTransitionAccess().getEffectsEffectParserRuleCall_6_0_1_2_1_0()); 
                	      	    
                	    }
                	    pushFollow(FollowSets000.FOLLOW_37);
                	    lv_effects_13_0=ruleEffect();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop230;
                    }
                } while (true);


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred41_InternalSCTX

    // $ANTLR start synpred42_InternalSCTX
    public final void synpred42_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        Token lv_label_15_0=null;

        // InternalSCTX.g:1037:6: ( (otherlv_14= 'if' ( (lv_label_15_0= RULE_STRING ) ) ) )
        // InternalSCTX.g:1037:6: (otherlv_14= 'if' ( (lv_label_15_0= RULE_STRING ) ) )
        {
        // InternalSCTX.g:1037:6: (otherlv_14= 'if' ( (lv_label_15_0= RULE_STRING ) ) )
        // InternalSCTX.g:1037:8: otherlv_14= 'if' ( (lv_label_15_0= RULE_STRING ) )
        {
        otherlv_14=(Token)match(input,35,FollowSets000.FOLLOW_38); if (state.failed) return ;
        // InternalSCTX.g:1041:1: ( (lv_label_15_0= RULE_STRING ) )
        // InternalSCTX.g:1042:1: (lv_label_15_0= RULE_STRING )
        {
        // InternalSCTX.g:1042:1: (lv_label_15_0= RULE_STRING )
        // InternalSCTX.g:1043:3: lv_label_15_0= RULE_STRING
        {
        lv_label_15_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred42_InternalSCTX

    // $ANTLR start synpred87_InternalSCTX
    public final void synpred87_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_expression_0_0 = null;


        // InternalSCTX.g:2424:2: ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) )
        // InternalSCTX.g:2424:2: ( (lv_expression_0_0= ruleAnnotatedExpression ) )
        {
        // InternalSCTX.g:2424:2: ( (lv_expression_0_0= ruleAnnotatedExpression ) )
        // InternalSCTX.g:2425:1: (lv_expression_0_0= ruleAnnotatedExpression )
        {
        // InternalSCTX.g:2425:1: (lv_expression_0_0= ruleAnnotatedExpression )
        // InternalSCTX.g:2426:3: lv_expression_0_0= ruleAnnotatedExpression
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getTestEntityAccess().getExpressionAnnotatedExpressionParserRuleCall_0_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_expression_0_0=ruleAnnotatedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred87_InternalSCTX

    // $ANTLR start synpred134_InternalSCTX
    public final void synpred134_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Assignment_0 = null;


        // InternalSCTX.g:3913:2: (this_Assignment_0= ruleAssignment )
        // InternalSCTX.g:3913:2: this_Assignment_0= ruleAssignment
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Assignment_0=ruleAssignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred134_InternalSCTX

    // $ANTLR start synpred135_InternalSCTX
    public final void synpred135_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_PostfixEffect_1 = null;


        // InternalSCTX.g:3926:2: (this_PostfixEffect_1= rulePostfixEffect )
        // InternalSCTX.g:3926:2: this_PostfixEffect_1= rulePostfixEffect
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_PostfixEffect_1=rulePostfixEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred135_InternalSCTX

    // $ANTLR start synpred136_InternalSCTX
    public final void synpred136_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Emission_2 = null;


        // InternalSCTX.g:3939:2: (this_Emission_2= ruleEmission )
        // InternalSCTX.g:3939:2: this_Emission_2= ruleEmission
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Emission_2=ruleEmission();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred136_InternalSCTX

    // $ANTLR start synpred137_InternalSCTX
    public final void synpred137_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_HostcodeEffect_3 = null;


        // InternalSCTX.g:3952:2: (this_HostcodeEffect_3= ruleHostcodeEffect )
        // InternalSCTX.g:3952:2: this_HostcodeEffect_3= ruleHostcodeEffect
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_HostcodeEffect_3=ruleHostcodeEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred137_InternalSCTX

    // $ANTLR start synpred138_InternalSCTX
    public final void synpred138_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ReferenceCallEffect_4 = null;


        // InternalSCTX.g:3965:2: (this_ReferenceCallEffect_4= ruleReferenceCallEffect )
        // InternalSCTX.g:3965:2: this_ReferenceCallEffect_4= ruleReferenceCallEffect
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ReferenceCallEffect_4=ruleReferenceCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred138_InternalSCTX

    // $ANTLR start synpred166_InternalSCTX
    public final void synpred166_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_BoolExpression_0 = null;


        // InternalSCTX.g:4906:2: (this_BoolExpression_0= ruleBoolExpression )
        // InternalSCTX.g:4906:2: this_BoolExpression_0= ruleBoolExpression
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_BoolExpression_0=ruleBoolExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred166_InternalSCTX

    // $ANTLR start synpred168_InternalSCTX
    public final void synpred168_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_schedule_3_0 = null;


        // InternalSCTX.g:4930:4: (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )
        // InternalSCTX.g:4930:4: otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+
        {
        otherlv_2=(Token)match(input,57,FollowSets000.FOLLOW_65); if (state.failed) return ;
        // InternalSCTX.g:4934:1: ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+
        int cnt249=0;
        loop249:
        do {
            int alt249=2;
            int LA249_0 = input.LA(1);

            if ( (LA249_0==RULE_ID) ) {
                alt249=1;
            }


            switch (alt249) {
        	case 1 :
        	    // InternalSCTX.g:4935:1: (lv_schedule_3_0= ruleScheduleObjectReference )
        	    {
        	    // InternalSCTX.g:4935:1: (lv_schedule_3_0= ruleScheduleObjectReference )
        	    // InternalSCTX.g:4936:3: lv_schedule_3_0= ruleScheduleObjectReference
        	    {
        	    if ( state.backtracking==0 ) {
        	       
        	      	        newCompositeNode(grammarAccess.getExpressionAccess().getScheduleScheduleObjectReferenceParserRuleCall_1_1_0()); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_44);
        	    lv_schedule_3_0=ruleScheduleObjectReference();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    if ( cnt249 >= 1 ) break loop249;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(249, input);
                    throw eee;
            }
            cnt249++;
        } while (true);


        }
    }
    // $ANTLR end synpred168_InternalSCTX

    // $ANTLR start synpred177_InternalSCTX
    public final void synpred177_InternalSCTX_fragment() throws RecognitionException {   
        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;


        // InternalSCTX.g:5418:2: ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )
        // InternalSCTX.g:5418:2: () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) )
        {
        // InternalSCTX.g:5418:2: ()
        // InternalSCTX.g:5419:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        // InternalSCTX.g:5427:2: ( (lv_operator_2_0= ruleCompareOperator ) )
        // InternalSCTX.g:5428:1: (lv_operator_2_0= ruleCompareOperator )
        {
        // InternalSCTX.g:5428:1: (lv_operator_2_0= ruleCompareOperator )
        // InternalSCTX.g:5429:3: lv_operator_2_0= ruleCompareOperator
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getCompareOperationAccess().getOperatorCompareOperatorEnumRuleCall_1_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_34);
        lv_operator_2_0=ruleCompareOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCTX.g:5445:2: ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) )
        // InternalSCTX.g:5446:1: (lv_subExpressions_3_0= ruleNotOrValuedExpression )
        {
        // InternalSCTX.g:5446:1: (lv_subExpressions_3_0= ruleNotOrValuedExpression )
        // InternalSCTX.g:5447:3: lv_subExpressions_3_0= ruleNotOrValuedExpression
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getCompareOperationAccess().getSubExpressionsNotOrValuedExpressionParserRuleCall_1_2_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_3_0=ruleNotOrValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred177_InternalSCTX

    // $ANTLR start synpred178_InternalSCTX
    public final void synpred178_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ValuedExpression_0 = null;


        // InternalSCTX.g:5485:2: (this_ValuedExpression_0= ruleValuedExpression )
        // InternalSCTX.g:5485:2: this_ValuedExpression_0= ruleValuedExpression
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedExpression_0=ruleValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred178_InternalSCTX

    // $ANTLR start synpred199_InternalSCTX
    public final void synpred199_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject this_ValuedExpression_4 = null;


        // InternalSCTX.g:6366:6: ( (otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')' ) )
        // InternalSCTX.g:6366:6: (otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')' )
        {
        // InternalSCTX.g:6366:6: (otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')' )
        // InternalSCTX.g:6366:8: otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')'
        {
        otherlv_3=(Token)match(input,26,FollowSets000.FOLLOW_95); if (state.failed) return ;
        pushFollow(FollowSets000.FOLLOW_24);
        this_ValuedExpression_4=ruleValuedExpression();

        state._fsp--;
        if (state.failed) return ;
        otherlv_5=(Token)match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred199_InternalSCTX

    // $ANTLR start synpred213_InternalSCTX
    public final void synpred213_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_KeyStringValueAnnotation_1 = null;


        // InternalSCTX.g:7184:2: (this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation )
        // InternalSCTX.g:7184:2: this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_KeyStringValueAnnotation_1=ruleKeyStringValueAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred213_InternalSCTX

    // Delegated rules

    public final boolean synpred177_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred177_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred178_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred178_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred134_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred134_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred166_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred166_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred37_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred168_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred168_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred199_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred199_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred135_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred135_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred136_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred136_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred138_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred138_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred213_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred213_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred87_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred87_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred41_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred137_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred137_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA5 dfa5 = new DFA5(this);
    protected DFA8 dfa8 = new DFA8(this);
    protected DFA15 dfa15 = new DFA15(this);
    protected DFA18 dfa18 = new DFA18(this);
    protected DFA20 dfa20 = new DFA20(this);
    protected DFA37 dfa37 = new DFA37(this);
    protected DFA32 dfa32 = new DFA32(this);
    protected DFA33 dfa33 = new DFA33(this);
    protected DFA38 dfa38 = new DFA38(this);
    protected DFA58 dfa58 = new DFA58(this);
    protected DFA64 dfa64 = new DFA64(this);
    protected DFA65 dfa65 = new DFA65(this);
    protected DFA69 dfa69 = new DFA69(this);
    protected DFA70 dfa70 = new DFA70(this);
    protected DFA71 dfa71 = new DFA71(this);
    protected DFA75 dfa75 = new DFA75(this);
    protected DFA78 dfa78 = new DFA78(this);
    protected DFA80 dfa80 = new DFA80(this);
    protected DFA81 dfa81 = new DFA81(this);
    protected DFA123 dfa123 = new DFA123(this);
    protected DFA126 dfa126 = new DFA126(this);
    protected DFA130 dfa130 = new DFA130(this);
    protected DFA135 dfa135 = new DFA135(this);
    protected DFA139 dfa139 = new DFA139(this);
    protected DFA151 dfa151 = new DFA151(this);
    protected DFA153 dfa153 = new DFA153(this);
    protected DFA152 dfa152 = new DFA152(this);
    protected DFA162 dfa162 = new DFA162(this);
    protected DFA163 dfa163 = new DFA163(this);
    protected DFA176 dfa176 = new DFA176(this);
    protected DFA177 dfa177 = new DFA177(this);
    protected DFA190 dfa190 = new DFA190(this);
    protected DFA191 dfa191 = new DFA191(this);
    protected DFA192 dfa192 = new DFA192(this);
    protected DFA193 dfa193 = new DFA193(this);
    protected DFA227 dfa227 = new DFA227(this);
    protected DFA228 dfa228 = new DFA228(this);
    static final String dfa_1s = "\102\uffff";
    static final String dfa_2s = "\1\5\1\uffff\2\5\1\uffff\2\4\1\5\1\6\6\5\3\4\2\5\1\6\1\41\1\6\3\5\1\6\5\5\1\41\1\5\1\6\1\4\2\5\1\6\2\41\3\5\1\6\4\5\1\4\2\5\1\6\3\5\1\6\6\5\1\6\2\5";
    static final String dfa_3s = "\1\163\1\uffff\1\163\1\5\1\uffff\2\163\1\10\1\6\5\163\1\5\2\163\1\105\1\163\1\5\1\6\1\113\1\10\3\163\1\10\5\163\1\113\1\5\1\6\1\105\1\163\1\5\1\6\1\113\1\41\3\163\1\10\4\163\1\105\1\163\1\5\1\6\3\163\1\10\5\163\1\5\1\6\2\163";
    static final String dfa_4s = "\1\uffff\1\2\2\uffff\1\1\75\uffff";
    static final String dfa_5s = "\102\uffff}>";
    static final String[] dfa_6s = {
            "\1\1\4\uffff\1\2\10\uffff\6\1\15\uffff\10\1\1\uffff\1\1\2\uffff\10\4\20\uffff\1\3\7\uffff\4\1\27\uffff\7\4",
            "",
            "\1\1\4\uffff\1\2\11\uffff\5\1\24\uffff\1\1\1\uffff\1\1\2\uffff\10\4\20\uffff\1\3\42\uffff\7\4",
            "\1\5",
            "",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\2\11\uffff\5\1\7\uffff\1\16\14\uffff\1\1\1\uffff\1\1\2\uffff\10\4\3\uffff\1\6\7\uffff\1\7\4\uffff\1\3\1\10\41\uffff\7\4",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\2\11\uffff\5\1\7\uffff\1\16\14\uffff\1\1\1\uffff\1\1\2\uffff\10\4\3\uffff\1\6\7\uffff\1\7\4\uffff\1\3\1\10\41\uffff\7\4",
            "\1\17\1\14\1\uffff\1\15",
            "\1\20",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\2\uffff\10\4\20\uffff\1\3\42\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\4\uffff\1\1\14\uffff\1\1\1\uffff\1\1\2\uffff\10\4\1\uffff\1\1\1\uffff\1\22\7\uffff\1\23\3\uffff\1\1\1\3\1\24\17\uffff\12\1\10\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\2\uffff\10\4\20\uffff\1\3\42\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\2\uffff\10\4\20\uffff\1\3\42\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\2\uffff\10\4\20\uffff\1\3\42\uffff\7\4",
            "\1\25",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\2\11\uffff\5\1\7\uffff\1\16\14\uffff\1\1\1\uffff\1\1\2\uffff\10\4\3\uffff\1\6\7\uffff\1\7\4\uffff\1\3\1\10\41\uffff\7\4",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\2\11\uffff\5\1\7\uffff\1\16\14\uffff\1\1\1\uffff\1\1\2\uffff\10\4\13\uffff\1\26\4\uffff\1\3\42\uffff\7\4",
            "\1\27\1\30\1\33\1\uffff\1\34\1\31\73\uffff\1\32",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\2\uffff\10\4\3\uffff\1\35\7\uffff\1\23\4\uffff\1\3\1\24\41\uffff\7\4",
            "\1\36",
            "\1\37",
            "\1\43\33\uffff\1\40\7\uffff\1\41\5\uffff\1\42",
            "\1\14\1\uffff\1\15",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\2\uffff\10\4\20\uffff\1\3\42\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\2\uffff\10\4\3\uffff\1\44\7\uffff\1\45\4\uffff\1\3\1\46\41\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\2\uffff\10\4\20\uffff\1\3\42\uffff\7\4",
            "\1\33\1\uffff\1\34",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\2\uffff\10\4\20\uffff\1\3\42\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\2\uffff\10\4\20\uffff\1\3\42\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\2\uffff\10\4\3\uffff\1\35\7\uffff\1\23\4\uffff\1\3\1\24\41\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\2\uffff\10\4\3\uffff\1\35\7\uffff\1\23\4\uffff\1\3\1\24\41\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\2\uffff\10\4\20\uffff\1\3\42\uffff\7\4",
            "\1\43\33\uffff\1\40\7\uffff\1\41\5\uffff\1\42",
            "\1\47",
            "\1\50",
            "\1\51\1\52\1\55\1\uffff\1\56\1\53\73\uffff\1\54",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\2\uffff\10\4\3\uffff\1\44\7\uffff\1\45\4\uffff\1\3\1\46\41\uffff\7\4",
            "\1\57",
            "\1\60",
            "\1\43\33\uffff\1\40\7\uffff\1\41\5\uffff\1\42",
            "\1\43",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\61\21\uffff\1\1\1\uffff\1\1\2\uffff\10\4\20\uffff\1\3\42\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\61\21\uffff\1\1\1\uffff\1\1\2\uffff\10\4\3\uffff\1\62\7\uffff\1\63\4\uffff\1\3\1\64\41\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\61\21\uffff\1\1\1\uffff\1\1\2\uffff\10\4\20\uffff\1\3\42\uffff\7\4",
            "\1\55\1\uffff\1\56",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\61\21\uffff\1\1\1\uffff\1\1\2\uffff\10\4\20\uffff\1\3\42\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\61\21\uffff\1\1\1\uffff\1\1\2\uffff\10\4\20\uffff\1\3\42\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\2\uffff\10\4\3\uffff\1\44\7\uffff\1\45\4\uffff\1\3\1\46\41\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\2\uffff\10\4\20\uffff\1\3\42\uffff\7\4",
            "\1\65\1\66\1\71\1\uffff\1\72\1\67\73\uffff\1\70",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\61\21\uffff\1\1\1\uffff\1\1\2\uffff\10\4\3\uffff\1\62\7\uffff\1\63\4\uffff\1\3\1\64\41\uffff\7\4",
            "\1\73",
            "\1\74",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\61\21\uffff\1\1\1\uffff\1\1\2\uffff\10\4\20\uffff\1\3\42\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\61\21\uffff\1\1\1\uffff\1\1\2\uffff\10\4\3\uffff\1\75\7\uffff\1\76\4\uffff\1\3\1\77\41\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\61\21\uffff\1\1\1\uffff\1\1\2\uffff\10\4\20\uffff\1\3\42\uffff\7\4",
            "\1\71\1\uffff\1\72",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\61\21\uffff\1\1\1\uffff\1\1\2\uffff\10\4\20\uffff\1\3\42\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\61\21\uffff\1\1\1\uffff\1\1\2\uffff\10\4\20\uffff\1\3\42\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\61\21\uffff\1\1\1\uffff\1\1\2\uffff\10\4\3\uffff\1\62\7\uffff\1\63\4\uffff\1\3\1\64\41\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\61\21\uffff\1\1\1\uffff\1\1\2\uffff\10\4\20\uffff\1\3\42\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\61\21\uffff\1\1\1\uffff\1\1\2\uffff\10\4\3\uffff\1\75\7\uffff\1\76\4\uffff\1\3\1\77\41\uffff\7\4",
            "\1\100",
            "\1\101",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\61\21\uffff\1\1\1\uffff\1\1\2\uffff\10\4\3\uffff\1\75\7\uffff\1\76\4\uffff\1\3\1\77\41\uffff\7\4",
            "\1\1\4\uffff\1\2\11\uffff\5\1\2\uffff\1\61\21\uffff\1\1\1\uffff\1\1\2\uffff\10\4\20\uffff\1\3\42\uffff\7\4"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA5 extends DFA {

        public DFA5(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 5;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "()* loopback of 206:1: ( (lv_declarations_5_0= ruleDeclarationWOSemicolon ) )*";
        }
    }
    static final String dfa_7s = "\103\uffff";
    static final String dfa_8s = "\3\5\3\uffff\2\4\1\5\1\6\6\5\2\4\1\41\1\4\2\5\2\6\1\41\1\5\1\6\1\4\3\5\1\6\5\5\2\41\3\5\1\6\4\5\1\6\1\4\2\5\1\6\5\5\1\6\6\5\1\6\2\5";
    static final String dfa_9s = "\2\112\1\5\3\uffff\2\113\1\10\1\6\1\5\1\112\1\144\3\112\1\113\1\112\1\113\1\105\1\113\1\5\1\6\1\10\1\113\1\5\1\6\1\105\1\112\1\113\1\112\1\10\2\112\2\113\1\112\1\113\1\41\1\112\1\113\1\112\1\10\2\112\1\113\1\5\1\6\1\105\1\113\1\5\1\6\1\113\2\112\1\113\1\112\1\10\2\112\1\113\1\112\1\113\1\5\1\6\1\113\1\112";
    static final String dfa_10s = "\3\uffff\1\1\1\2\1\3\75\uffff";
    static final String dfa_11s = "\103\uffff}>";
    static final String[] dfa_12s = {
            "\1\4\4\uffff\1\1\10\uffff\1\5\5\3\24\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\24\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\6",
            "",
            "",
            "",
            "\1\13\1\14\1\16\1\uffff\1\17\1\15\1\1\11\uffff\5\3\7\uffff\1\12\14\uffff\1\5\1\uffff\1\5\15\uffff\1\7\7\uffff\1\10\4\uffff\1\2\1\11",
            "\1\13\1\14\1\16\1\uffff\1\17\1\15\1\1\11\uffff\5\3\7\uffff\1\12\14\uffff\1\5\1\uffff\1\5\15\uffff\1\7\7\uffff\1\10\4\uffff\1\2\1\11",
            "\1\20\1\16\1\uffff\1\17",
            "\1\21",
            "\1\22",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\23\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\23\4\uffff\1\4\14\uffff\1\5\1\uffff\1\5\13\uffff\1\4\1\uffff\1\24\7\uffff\1\25\3\uffff\1\4\1\2\1\26\17\uffff\12\4",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\23\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\23\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\23\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\13\1\14\1\16\1\uffff\1\17\1\15\1\1\11\uffff\5\3\7\uffff\1\12\14\uffff\1\5\1\uffff\1\5\15\uffff\1\7\7\uffff\1\10\4\uffff\1\2\1\11",
            "\1\13\1\14\1\16\1\uffff\1\17\1\15\1\1\11\uffff\5\3\7\uffff\1\12\14\uffff\1\5\1\uffff\1\5\25\uffff\1\27\4\uffff\1\2",
            "\1\33\33\uffff\1\30\7\uffff\1\31\5\uffff\1\32",
            "\1\34\1\35\1\40\1\uffff\1\41\1\36\73\uffff\1\37",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\23\21\uffff\1\5\1\uffff\1\5\15\uffff\1\42\7\uffff\1\25\4\uffff\1\2\1\26",
            "\1\43",
            "\1\44",
            "\1\16\1\uffff\1\17",
            "\1\33\33\uffff\1\30\7\uffff\1\31\5\uffff\1\32",
            "\1\45",
            "\1\46",
            "\1\47\1\50\1\53\1\uffff\1\54\1\51\73\uffff\1\52",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\23\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\23\21\uffff\1\5\1\uffff\1\5\15\uffff\1\55\7\uffff\1\56\4\uffff\1\2\1\57",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\23\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\40\1\uffff\1\41",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\23\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\23\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\23\21\uffff\1\5\1\uffff\1\5\15\uffff\1\42\7\uffff\1\25\4\uffff\1\2\1\26",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\23\21\uffff\1\5\1\uffff\1\5\15\uffff\1\42\7\uffff\1\25\4\uffff\1\2\1\26",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\23\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\33\33\uffff\1\30\7\uffff\1\31\5\uffff\1\32",
            "\1\33",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\60\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\60\21\uffff\1\5\1\uffff\1\5\15\uffff\1\61\7\uffff\1\62\4\uffff\1\2\1\63",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\60\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\53\1\uffff\1\54",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\60\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\60\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\23\21\uffff\1\5\1\uffff\1\5\15\uffff\1\55\7\uffff\1\56\4\uffff\1\2\1\57",
            "\1\64",
            "\1\65",
            "\1\66\1\67\1\72\1\uffff\1\73\1\70\73\uffff\1\71",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\60\21\uffff\1\5\1\uffff\1\5\15\uffff\1\61\7\uffff\1\62\4\uffff\1\2\1\63",
            "\1\74",
            "\1\75",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\23\21\uffff\1\5\1\uffff\1\5\15\uffff\1\55\7\uffff\1\56\4\uffff\1\2\1\57",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\23\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\60\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\60\21\uffff\1\5\1\uffff\1\5\15\uffff\1\76\7\uffff\1\77\4\uffff\1\2\1\100",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\60\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\72\1\uffff\1\73",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\60\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\60\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\60\21\uffff\1\5\1\uffff\1\5\15\uffff\1\61\7\uffff\1\62\4\uffff\1\2\1\63",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\60\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\60\21\uffff\1\5\1\uffff\1\5\15\uffff\1\76\7\uffff\1\77\4\uffff\1\2\1\100",
            "\1\101",
            "\1\102",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\60\21\uffff\1\5\1\uffff\1\5\15\uffff\1\76\7\uffff\1\77\4\uffff\1\2\1\100",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\60\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2"
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA8 extends DFA {

        public DFA8(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 8;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "242:3: ( ( (lv_regions_7_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_8_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_9_0= ruleRegion ) )* )";
        }
    }

    class DFA15 extends DFA {

        public DFA15(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 15;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "()* loopback of 468:1: ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )*";
        }
    }
    static final String dfa_13s = "\3\5\3\uffff\2\4\1\5\1\6\6\5\3\4\2\5\1\6\1\41\1\6\3\5\1\6\5\5\1\41\1\5\1\6\1\4\2\5\1\6\2\41\3\5\1\6\4\5\1\4\2\5\1\6\3\5\1\6\6\5\1\6\2\5";
    static final String dfa_14s = "\2\112\1\5\3\uffff\2\113\1\10\1\6\1\112\1\144\3\112\1\5\1\113\1\112\1\105\1\113\1\5\1\6\1\113\1\10\1\112\1\113\1\112\1\10\2\112\2\113\1\112\1\113\1\5\1\6\1\105\1\113\1\5\1\6\1\113\1\41\1\112\1\113\1\112\1\10\2\112\1\113\1\112\1\105\1\113\1\5\1\6\1\112\1\113\1\112\1\10\2\112\1\113\1\112\1\113\1\5\1\6\1\113\1\112";
    static final String[] dfa_15s = {
            "\1\4\4\uffff\1\1\10\uffff\1\5\5\3\24\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\24\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\6",
            "",
            "",
            "",
            "\1\12\1\13\1\15\1\uffff\1\16\1\14\1\1\11\uffff\5\3\7\uffff\1\17\14\uffff\1\5\1\uffff\1\5\15\uffff\1\7\7\uffff\1\10\4\uffff\1\2\1\11",
            "\1\12\1\13\1\15\1\uffff\1\16\1\14\1\1\11\uffff\5\3\7\uffff\1\17\14\uffff\1\5\1\uffff\1\5\15\uffff\1\7\7\uffff\1\10\4\uffff\1\2\1\11",
            "\1\20\1\15\1\uffff\1\16",
            "\1\21",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\4\uffff\1\4\14\uffff\1\5\1\uffff\1\5\13\uffff\1\4\1\uffff\1\23\7\uffff\1\24\3\uffff\1\4\1\2\1\25\17\uffff\12\4",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\26",
            "\1\12\1\13\1\15\1\uffff\1\16\1\14\1\1\11\uffff\5\3\7\uffff\1\17\14\uffff\1\5\1\uffff\1\5\15\uffff\1\7\7\uffff\1\10\4\uffff\1\2\1\11",
            "\1\12\1\13\1\15\1\uffff\1\16\1\14\1\1\11\uffff\5\3\7\uffff\1\17\14\uffff\1\5\1\uffff\1\5\25\uffff\1\27\4\uffff\1\2",
            "\1\30\1\31\1\34\1\uffff\1\35\1\32\73\uffff\1\33",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\21\uffff\1\5\1\uffff\1\5\15\uffff\1\36\7\uffff\1\24\4\uffff\1\2\1\25",
            "\1\37",
            "\1\40",
            "\1\44\33\uffff\1\41\7\uffff\1\42\5\uffff\1\43",
            "\1\15\1\uffff\1\16",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\21\uffff\1\5\1\uffff\1\5\15\uffff\1\45\7\uffff\1\46\4\uffff\1\2\1\47",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\34\1\uffff\1\35",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\21\uffff\1\5\1\uffff\1\5\15\uffff\1\36\7\uffff\1\24\4\uffff\1\2\1\25",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\21\uffff\1\5\1\uffff\1\5\15\uffff\1\36\7\uffff\1\24\4\uffff\1\2\1\25",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\44\33\uffff\1\41\7\uffff\1\42\5\uffff\1\43",
            "\1\50",
            "\1\51",
            "\1\52\1\53\1\56\1\uffff\1\57\1\54\73\uffff\1\55",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\21\uffff\1\5\1\uffff\1\5\15\uffff\1\45\7\uffff\1\46\4\uffff\1\2\1\47",
            "\1\60",
            "\1\61",
            "\1\44\33\uffff\1\41\7\uffff\1\42\5\uffff\1\43",
            "\1\44",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\62\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\62\21\uffff\1\5\1\uffff\1\5\15\uffff\1\63\7\uffff\1\64\4\uffff\1\2\1\65",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\62\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\56\1\uffff\1\57",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\62\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\62\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\21\uffff\1\5\1\uffff\1\5\15\uffff\1\45\7\uffff\1\46\4\uffff\1\2\1\47",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\22\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\66\1\67\1\72\1\uffff\1\73\1\70\73\uffff\1\71",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\62\21\uffff\1\5\1\uffff\1\5\15\uffff\1\63\7\uffff\1\64\4\uffff\1\2\1\65",
            "\1\74",
            "\1\75",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\62\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\62\21\uffff\1\5\1\uffff\1\5\15\uffff\1\76\7\uffff\1\77\4\uffff\1\2\1\100",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\62\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\72\1\uffff\1\73",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\62\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\62\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\62\21\uffff\1\5\1\uffff\1\5\15\uffff\1\63\7\uffff\1\64\4\uffff\1\2\1\65",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\62\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\62\21\uffff\1\5\1\uffff\1\5\15\uffff\1\76\7\uffff\1\77\4\uffff\1\2\1\100",
            "\1\101",
            "\1\102",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\62\21\uffff\1\5\1\uffff\1\5\15\uffff\1\76\7\uffff\1\77\4\uffff\1\2\1\100",
            "\1\4\4\uffff\1\1\11\uffff\5\3\2\uffff\1\62\21\uffff\1\5\1\uffff\1\5\32\uffff\1\2"
    };
    static final char[] dfa_13 = DFA.unpackEncodedStringToUnsignedChars(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final short[][] dfa_15 = unpackEncodedStringArray(dfa_15s);

    class DFA18 extends DFA {

        public DFA18(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 18;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_13;
            this.max = dfa_14;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_15;
        }
        public String getDescription() {
            return "504:3: ( ( (lv_regions_13_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_14_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* )";
        }
    }
    static final String dfa_16s = "\65\uffff";
    static final String dfa_17s = "\1\1\64\uffff";
    static final String dfa_18s = "\1\12\1\uffff\1\12\1\5\1\uffff\2\4\1\5\1\6\3\12\1\5\3\4\1\12\1\5\1\6\1\41\5\12\1\41\1\5\1\6\1\4\1\12\1\5\1\6\2\41\5\12\1\4\1\12\1\5\1\6\6\12\1\5\1\6\2\12";
    static final String dfa_19s = "\1\121\1\uffff\1\121\1\5\1\uffff\2\121\1\10\1\6\3\121\1\5\2\121\1\105\1\121\1\5\1\6\1\113\5\121\1\113\1\5\1\6\1\105\1\121\1\5\1\6\1\113\1\41\5\121\1\105\1\121\1\5\1\6\6\121\1\5\1\6\2\121";
    static final String dfa_20s = "\1\uffff\1\2\2\uffff\1\1\60\uffff";
    static final String dfa_21s = "\65\uffff}>";
    static final String[] dfa_22s = {
            "\1\2\10\uffff\6\1\24\uffff\1\1\1\uffff\1\1\32\uffff\1\3\1\uffff\6\4",
            "",
            "\1\2\11\uffff\5\1\24\uffff\1\1\1\uffff\1\1\32\uffff\1\3\1\uffff\6\4",
            "\1\5",
            "",
            "\1\11\1\12\1\1\1\uffff\1\1\1\13\1\2\11\uffff\5\1\7\uffff\1\14\14\uffff\1\1\1\uffff\1\1\15\uffff\1\6\7\uffff\1\7\4\uffff\1\3\1\10\6\4",
            "\1\11\1\12\1\1\1\uffff\1\1\1\13\1\2\11\uffff\5\1\7\uffff\1\14\14\uffff\1\1\1\uffff\1\1\15\uffff\1\6\7\uffff\1\7\4\uffff\1\3\1\10\6\4",
            "\1\15\1\1\1\uffff\1\1",
            "\1\16",
            "\1\2\11\uffff\5\1\2\uffff\1\17\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3\1\uffff\6\4",
            "\1\2\11\uffff\5\1\2\uffff\1\17\21\uffff\1\1\1\uffff\1\1\15\uffff\1\20\7\uffff\1\21\4\uffff\1\3\1\22\6\4",
            "\1\2\11\uffff\5\1\2\uffff\1\17\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3\1\uffff\6\4",
            "\1\23",
            "\1\11\1\12\1\1\1\uffff\1\1\1\13\1\2\11\uffff\5\1\7\uffff\1\14\14\uffff\1\1\1\uffff\1\1\15\uffff\1\6\7\uffff\1\7\4\uffff\1\3\1\10\6\4",
            "\1\11\1\12\1\1\1\uffff\1\1\1\13\1\2\11\uffff\5\1\7\uffff\1\14\14\uffff\1\1\1\uffff\1\1\25\uffff\1\1\4\uffff\1\3\1\uffff\6\4",
            "\1\24\1\25\1\1\1\uffff\1\1\1\26\73\uffff\1\1",
            "\1\2\11\uffff\5\1\2\uffff\1\17\21\uffff\1\1\1\uffff\1\1\15\uffff\1\20\7\uffff\1\21\4\uffff\1\3\1\22\6\4",
            "\1\27",
            "\1\30",
            "\1\34\33\uffff\1\31\7\uffff\1\32\5\uffff\1\33",
            "\1\2\11\uffff\5\1\2\uffff\1\17\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3\1\uffff\6\4",
            "\1\2\11\uffff\5\1\2\uffff\1\17\21\uffff\1\1\1\uffff\1\1\15\uffff\1\35\7\uffff\1\36\4\uffff\1\3\1\37\6\4",
            "\1\2\11\uffff\5\1\2\uffff\1\17\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3\1\uffff\6\4",
            "\1\2\11\uffff\5\1\2\uffff\1\17\21\uffff\1\1\1\uffff\1\1\15\uffff\1\20\7\uffff\1\21\4\uffff\1\3\1\22\6\4",
            "\1\2\11\uffff\5\1\2\uffff\1\17\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3\1\uffff\6\4",
            "\1\34\33\uffff\1\31\7\uffff\1\32\5\uffff\1\33",
            "\1\40",
            "\1\41",
            "\1\42\1\43\1\1\1\uffff\1\1\1\44\73\uffff\1\1",
            "\1\2\11\uffff\5\1\2\uffff\1\17\21\uffff\1\1\1\uffff\1\1\15\uffff\1\35\7\uffff\1\36\4\uffff\1\3\1\37\6\4",
            "\1\45",
            "\1\46",
            "\1\34\33\uffff\1\31\7\uffff\1\32\5\uffff\1\33",
            "\1\34",
            "\1\2\11\uffff\5\1\2\uffff\1\47\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3\1\uffff\6\4",
            "\1\2\11\uffff\5\1\2\uffff\1\47\21\uffff\1\1\1\uffff\1\1\15\uffff\1\50\7\uffff\1\51\4\uffff\1\3\1\52\6\4",
            "\1\2\11\uffff\5\1\2\uffff\1\47\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3\1\uffff\6\4",
            "\1\2\11\uffff\5\1\2\uffff\1\17\21\uffff\1\1\1\uffff\1\1\15\uffff\1\35\7\uffff\1\36\4\uffff\1\3\1\37\6\4",
            "\1\2\11\uffff\5\1\2\uffff\1\17\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3\1\uffff\6\4",
            "\1\53\1\54\1\1\1\uffff\1\1\1\55\73\uffff\1\1",
            "\1\2\11\uffff\5\1\2\uffff\1\47\21\uffff\1\1\1\uffff\1\1\15\uffff\1\50\7\uffff\1\51\4\uffff\1\3\1\52\6\4",
            "\1\56",
            "\1\57",
            "\1\2\11\uffff\5\1\2\uffff\1\47\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3\1\uffff\6\4",
            "\1\2\11\uffff\5\1\2\uffff\1\47\21\uffff\1\1\1\uffff\1\1\15\uffff\1\60\7\uffff\1\61\4\uffff\1\3\1\62\6\4",
            "\1\2\11\uffff\5\1\2\uffff\1\47\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3\1\uffff\6\4",
            "\1\2\11\uffff\5\1\2\uffff\1\47\21\uffff\1\1\1\uffff\1\1\15\uffff\1\50\7\uffff\1\51\4\uffff\1\3\1\52\6\4",
            "\1\2\11\uffff\5\1\2\uffff\1\47\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3\1\uffff\6\4",
            "\1\2\11\uffff\5\1\2\uffff\1\47\21\uffff\1\1\1\uffff\1\1\15\uffff\1\60\7\uffff\1\61\4\uffff\1\3\1\62\6\4",
            "\1\63",
            "\1\64",
            "\1\2\11\uffff\5\1\2\uffff\1\47\21\uffff\1\1\1\uffff\1\1\15\uffff\1\60\7\uffff\1\61\4\uffff\1\3\1\62\6\4",
            "\1\2\11\uffff\5\1\2\uffff\1\47\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3\1\uffff\6\4"
    };

    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final char[] dfa_18 = DFA.unpackEncodedStringToUnsignedChars(dfa_18s);
    static final char[] dfa_19 = DFA.unpackEncodedStringToUnsignedChars(dfa_19s);
    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final short[][] dfa_22 = unpackEncodedStringArray(dfa_22s);

    class DFA20 extends DFA {

        public DFA20(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 20;
            this.eot = dfa_16;
            this.eof = dfa_17;
            this.min = dfa_18;
            this.max = dfa_19;
            this.accept = dfa_20;
            this.special = dfa_21;
            this.transition = dfa_22;
        }
        public String getDescription() {
            return "()* loopback of 564:4: ( (lv_outgoingTransitions_17_0= ruleTransition ) )*";
        }
    }
    static final String dfa_23s = "\27\uffff";
    static final String dfa_24s = "\1\3\26\uffff";
    static final String dfa_25s = "\1\12\1\4\1\uffff\22\0\2\uffff";
    static final String dfa_26s = "\1\121\1\154\1\uffff\22\0\2\uffff";
    static final String dfa_27s = "\2\uffff\1\1\22\uffff\1\3\1\2";
    static final String dfa_28s = "\3\uffff\1\0\1\15\1\5\1\4\1\7\1\14\1\21\1\10\1\1\1\20\1\16\1\6\1\2\1\17\1\13\1\12\1\3\1\11\2\uffff}>";
    static final String[] dfa_29s = {
            "\1\5\10\uffff\1\4\1\7\1\10\1\11\1\12\1\13\12\uffff\1\1\1\2\10\uffff\1\14\1\uffff\1\15\32\uffff\1\6\1\uffff\1\16\1\17\1\20\1\21\1\22\1\23",
            "\1\24\5\2\20\uffff\1\2\2\uffff\1\2\32\uffff\1\2\6\uffff\1\2\5\uffff\1\2\45\uffff\2\2",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final char[] dfa_25 = DFA.unpackEncodedStringToUnsignedChars(dfa_25s);
    static final char[] dfa_26 = DFA.unpackEncodedStringToUnsignedChars(dfa_26s);
    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final short[][] dfa_29 = unpackEncodedStringArray(dfa_29s);

    class DFA37 extends DFA {

        public DFA37(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 37;
            this.eot = dfa_23;
            this.eof = dfa_24;
            this.min = dfa_25;
            this.max = dfa_26;
            this.accept = dfa_27;
            this.special = dfa_28;
            this.transition = dfa_29;
        }
        public String getDescription() {
            return "933:3: ( ( (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( ( (lv_trigger_8_0= ruleBoolExpression ) ) | ( (lv_trigger_9_0= ruleAtomicExpression ) ) ) )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )? ) | (otherlv_14= 'if' ( (lv_label_15_0= RULE_STRING ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA37_3 = input.LA(1);

                         
                        int index37_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index37_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA37_11 = input.LA(1);

                         
                        int index37_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index37_11);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA37_15 = input.LA(1);

                         
                        int index37_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index37_15);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA37_19 = input.LA(1);

                         
                        int index37_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index37_19);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA37_6 = input.LA(1);

                         
                        int index37_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index37_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA37_5 = input.LA(1);

                         
                        int index37_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index37_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA37_14 = input.LA(1);

                         
                        int index37_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index37_14);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA37_7 = input.LA(1);

                         
                        int index37_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index37_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA37_10 = input.LA(1);

                         
                        int index37_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index37_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA37_20 = input.LA(1);

                         
                        int index37_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalSCTX()) ) {s = 2;}

                        else if ( (synpred42_InternalSCTX()) ) {s = 22;}

                         
                        input.seek(index37_20);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA37_18 = input.LA(1);

                         
                        int index37_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index37_18);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA37_17 = input.LA(1);

                         
                        int index37_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index37_17);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA37_8 = input.LA(1);

                         
                        int index37_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index37_8);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA37_4 = input.LA(1);

                         
                        int index37_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index37_4);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA37_13 = input.LA(1);

                         
                        int index37_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index37_13);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA37_16 = input.LA(1);

                         
                        int index37_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index37_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA37_12 = input.LA(1);

                         
                        int index37_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index37_12);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA37_9 = input.LA(1);

                         
                        int index37_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index37_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 37, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_30s = "\17\uffff";
    static final String dfa_31s = "\1\4\1\0\15\uffff";
    static final String dfa_32s = "\1\154\1\0\15\uffff";
    static final String dfa_33s = "\2\uffff\1\2\13\uffff\1\1";
    static final String dfa_34s = "\1\uffff\1\0\15\uffff}>";
    static final String[] dfa_35s = {
            "\2\2\1\1\3\2\20\uffff\1\2\2\uffff\1\2\32\uffff\1\2\6\uffff\1\2\5\uffff\1\2\45\uffff\2\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final char[] dfa_31 = DFA.unpackEncodedStringToUnsignedChars(dfa_31s);
    static final char[] dfa_32 = DFA.unpackEncodedStringToUnsignedChars(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[][] dfa_35 = unpackEncodedStringArray(dfa_35s);

    class DFA32 extends DFA {

        public DFA32(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 32;
            this.eot = dfa_30;
            this.eof = dfa_30;
            this.min = dfa_31;
            this.max = dfa_32;
            this.accept = dfa_33;
            this.special = dfa_34;
            this.transition = dfa_35;
        }
        public String getDescription() {
            return "937:1: ( (lv_triggerDelay_7_0= RULE_INT ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA32_1 = input.LA(1);

                         
                        int index32_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalSCTX()) ) {s = 14;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index32_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 32, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_36s = "\1\4\4\uffff\10\0\2\uffff";
    static final String dfa_37s = "\1\154\4\uffff\10\0\2\uffff";
    static final String dfa_38s = "\1\uffff\1\1\14\uffff\1\2";
    static final String dfa_39s = "\5\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\2\uffff}>";
    static final String[] dfa_40s = {
            "\1\1\1\11\1\1\1\14\1\1\1\6\20\uffff\1\5\2\uffff\1\1\32\uffff\1\12\6\uffff\1\13\5\uffff\1\1\45\uffff\1\7\1\10",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final char[] dfa_37 = DFA.unpackEncodedStringToUnsignedChars(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[][] dfa_40 = unpackEncodedStringArray(dfa_40s);

    class DFA33 extends DFA {

        public DFA33(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 33;
            this.eot = dfa_30;
            this.eof = dfa_30;
            this.min = dfa_36;
            this.max = dfa_37;
            this.accept = dfa_38;
            this.special = dfa_39;
            this.transition = dfa_40;
        }
        public String getDescription() {
            return "955:3: ( ( (lv_trigger_8_0= ruleBoolExpression ) ) | ( (lv_trigger_9_0= ruleAtomicExpression ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA33_5 = input.LA(1);

                         
                        int index33_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index33_5);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA33_6 = input.LA(1);

                         
                        int index33_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index33_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA33_7 = input.LA(1);

                         
                        int index33_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index33_7);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA33_8 = input.LA(1);

                         
                        int index33_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index33_8);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA33_9 = input.LA(1);

                         
                        int index33_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index33_9);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA33_10 = input.LA(1);

                         
                        int index33_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index33_10);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA33_11 = input.LA(1);

                         
                        int index33_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index33_11);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA33_12 = input.LA(1);

                         
                        int index33_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index33_12);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 33, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_41s = "\13\uffff";
    static final String dfa_42s = "\1\46\1\uffff\4\47\5\uffff";
    static final String dfa_43s = "\1\125\1\uffff\4\52\5\uffff";
    static final String dfa_44s = "\1\uffff\1\1\4\uffff\1\2\1\3\1\4\1\5\1\6";
    static final String dfa_45s = "\13\uffff}>";
    static final String[] dfa_46s = {
            "\1\1\1\6\1\7\2\10\1\11\1\12\45\uffff\1\2\1\3\1\4\1\5",
            "",
            "\1\6\1\uffff\2\10",
            "\1\6\1\uffff\2\10",
            "\1\6\1\uffff\2\10",
            "\1\6\1\uffff\2\10",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final char[] dfa_43 = DFA.unpackEncodedStringToUnsignedChars(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final short[][] dfa_46 = unpackEncodedStringArray(dfa_46s);

    class DFA38 extends DFA {

        public DFA38(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 38;
            this.eot = dfa_41;
            this.eof = dfa_41;
            this.min = dfa_42;
            this.max = dfa_43;
            this.accept = dfa_44;
            this.special = dfa_45;
            this.transition = dfa_46;
        }
        public String getDescription() {
            return "1080:1: (this_EntryAction_0= ruleEntryAction | this_DuringAction_1= ruleDuringAction | this_ExitAction_2= ruleExitAction | this_SuspendAction_3= ruleSuspendAction | this_PrecedingAction_4= rulePrecedingAction | this_SucceedingAction_5= ruleSucceedingAction )";
        }
    }
    static final String dfa_47s = "\101\uffff";
    static final String dfa_48s = "\2\12\1\5\2\uffff\2\4\1\5\1\6\5\12\1\5\3\4\1\12\1\5\1\6\1\41\1\6\3\12\1\6\4\12\1\41\1\5\1\6\1\4\1\12\1\5\1\6\2\41\3\12\1\6\4\12\1\4\1\12\1\5\1\6\3\12\1\6\5\12\1\5\1\6\2\12";
    static final String dfa_49s = "\2\112\1\5\2\uffff\2\113\1\10\1\6\1\112\1\113\3\112\1\5\1\113\1\112\1\105\1\113\1\5\1\6\1\113\1\10\1\112\1\113\1\112\1\10\2\112\1\113\1\112\1\113\1\5\1\6\1\105\1\113\1\5\1\6\1\113\1\41\1\112\1\113\1\112\1\10\2\112\1\113\1\112\1\105\1\113\1\5\1\6\1\112\1\113\1\112\1\10\2\112\1\113\1\112\1\113\1\5\1\6\1\113\1\112";
    static final String dfa_50s = "\3\uffff\1\1\1\2\74\uffff";
    static final String dfa_51s = "\101\uffff}>";
    static final String[] dfa_52s = {
            "\1\1\42\uffff\1\3\1\uffff\1\4\32\uffff\1\2",
            "\1\1\42\uffff\1\3\1\uffff\1\4\32\uffff\1\2",
            "\1\5",
            "",
            "",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\1\25\uffff\1\16\14\uffff\1\3\1\uffff\1\4\15\uffff\1\6\7\uffff\1\7\4\uffff\1\2\1\10",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\1\25\uffff\1\16\14\uffff\1\3\1\uffff\1\4\15\uffff\1\6\7\uffff\1\7\4\uffff\1\2\1\10",
            "\1\17\1\14\1\uffff\1\15",
            "\1\20",
            "\1\1\20\uffff\1\21\21\uffff\1\3\1\uffff\1\4\32\uffff\1\2",
            "\1\1\20\uffff\1\21\21\uffff\1\3\1\uffff\1\4\15\uffff\1\22\7\uffff\1\23\4\uffff\1\2\1\24",
            "\1\1\20\uffff\1\21\21\uffff\1\3\1\uffff\1\4\32\uffff\1\2",
            "\1\1\20\uffff\1\21\21\uffff\1\3\1\uffff\1\4\32\uffff\1\2",
            "\1\1\20\uffff\1\21\21\uffff\1\3\1\uffff\1\4\32\uffff\1\2",
            "\1\25",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\1\25\uffff\1\16\14\uffff\1\3\1\uffff\1\4\15\uffff\1\6\7\uffff\1\7\4\uffff\1\2\1\10",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\1\25\uffff\1\16\14\uffff\1\3\1\uffff\1\4\25\uffff\1\26\4\uffff\1\2",
            "\1\27\1\30\1\33\1\uffff\1\34\1\31\73\uffff\1\32",
            "\1\1\20\uffff\1\21\21\uffff\1\3\1\uffff\1\4\15\uffff\1\22\7\uffff\1\23\4\uffff\1\2\1\24",
            "\1\35",
            "\1\36",
            "\1\42\33\uffff\1\37\7\uffff\1\40\5\uffff\1\41",
            "\1\14\1\uffff\1\15",
            "\1\1\20\uffff\1\21\21\uffff\1\3\1\uffff\1\4\32\uffff\1\2",
            "\1\1\20\uffff\1\21\21\uffff\1\3\1\uffff\1\4\15\uffff\1\43\7\uffff\1\44\4\uffff\1\2\1\45",
            "\1\1\20\uffff\1\21\21\uffff\1\3\1\uffff\1\4\32\uffff\1\2",
            "\1\33\1\uffff\1\34",
            "\1\1\20\uffff\1\21\21\uffff\1\3\1\uffff\1\4\32\uffff\1\2",
            "\1\1\20\uffff\1\21\21\uffff\1\3\1\uffff\1\4\32\uffff\1\2",
            "\1\1\20\uffff\1\21\21\uffff\1\3\1\uffff\1\4\15\uffff\1\22\7\uffff\1\23\4\uffff\1\2\1\24",
            "\1\1\20\uffff\1\21\21\uffff\1\3\1\uffff\1\4\32\uffff\1\2",
            "\1\42\33\uffff\1\37\7\uffff\1\40\5\uffff\1\41",
            "\1\46",
            "\1\47",
            "\1\50\1\51\1\54\1\uffff\1\55\1\52\73\uffff\1\53",
            "\1\1\20\uffff\1\21\21\uffff\1\3\1\uffff\1\4\15\uffff\1\43\7\uffff\1\44\4\uffff\1\2\1\45",
            "\1\56",
            "\1\57",
            "\1\42\33\uffff\1\37\7\uffff\1\40\5\uffff\1\41",
            "\1\42",
            "\1\1\20\uffff\1\60\21\uffff\1\3\1\uffff\1\4\32\uffff\1\2",
            "\1\1\20\uffff\1\60\21\uffff\1\3\1\uffff\1\4\15\uffff\1\61\7\uffff\1\62\4\uffff\1\2\1\63",
            "\1\1\20\uffff\1\60\21\uffff\1\3\1\uffff\1\4\32\uffff\1\2",
            "\1\54\1\uffff\1\55",
            "\1\1\20\uffff\1\60\21\uffff\1\3\1\uffff\1\4\32\uffff\1\2",
            "\1\1\20\uffff\1\60\21\uffff\1\3\1\uffff\1\4\32\uffff\1\2",
            "\1\1\20\uffff\1\21\21\uffff\1\3\1\uffff\1\4\15\uffff\1\43\7\uffff\1\44\4\uffff\1\2\1\45",
            "\1\1\20\uffff\1\21\21\uffff\1\3\1\uffff\1\4\32\uffff\1\2",
            "\1\64\1\65\1\70\1\uffff\1\71\1\66\73\uffff\1\67",
            "\1\1\20\uffff\1\60\21\uffff\1\3\1\uffff\1\4\15\uffff\1\61\7\uffff\1\62\4\uffff\1\2\1\63",
            "\1\72",
            "\1\73",
            "\1\1\20\uffff\1\60\21\uffff\1\3\1\uffff\1\4\32\uffff\1\2",
            "\1\1\20\uffff\1\60\21\uffff\1\3\1\uffff\1\4\15\uffff\1\74\7\uffff\1\75\4\uffff\1\2\1\76",
            "\1\1\20\uffff\1\60\21\uffff\1\3\1\uffff\1\4\32\uffff\1\2",
            "\1\70\1\uffff\1\71",
            "\1\1\20\uffff\1\60\21\uffff\1\3\1\uffff\1\4\32\uffff\1\2",
            "\1\1\20\uffff\1\60\21\uffff\1\3\1\uffff\1\4\32\uffff\1\2",
            "\1\1\20\uffff\1\60\21\uffff\1\3\1\uffff\1\4\15\uffff\1\61\7\uffff\1\62\4\uffff\1\2\1\63",
            "\1\1\20\uffff\1\60\21\uffff\1\3\1\uffff\1\4\32\uffff\1\2",
            "\1\1\20\uffff\1\60\21\uffff\1\3\1\uffff\1\4\15\uffff\1\74\7\uffff\1\75\4\uffff\1\2\1\76",
            "\1\77",
            "\1\100",
            "\1\1\20\uffff\1\60\21\uffff\1\3\1\uffff\1\4\15\uffff\1\74\7\uffff\1\75\4\uffff\1\2\1\76",
            "\1\1\20\uffff\1\60\21\uffff\1\3\1\uffff\1\4\32\uffff\1\2"
    };

    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final char[] dfa_48 = DFA.unpackEncodedStringToUnsignedChars(dfa_48s);
    static final char[] dfa_49 = DFA.unpackEncodedStringToUnsignedChars(dfa_49s);
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[][] dfa_52 = unpackEncodedStringArray(dfa_52s);

    class DFA58 extends DFA {

        public DFA58(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 58;
            this.eot = dfa_47;
            this.eof = dfa_47;
            this.min = dfa_48;
            this.max = dfa_49;
            this.accept = dfa_50;
            this.special = dfa_51;
            this.transition = dfa_52;
        }
        public String getDescription() {
            return "1785:1: (this_ControlflowRegion_0= ruleControlflowRegion | this_DataflowRegion_1= ruleDataflowRegion )";
        }
    }
    static final String dfa_53s = "\2\163\1\5\2\uffff\2\163\1\10\1\6\5\163\1\5\2\163\1\105\1\163\1\5\1\6\1\113\1\10\3\163\1\10\4\163\1\113\1\5\1\6\1\105\1\163\1\5\1\6\1\113\1\41\3\163\1\10\4\163\1\105\1\163\1\5\1\6\3\163\1\10\5\163\1\5\1\6\2\163";
    static final String dfa_54s = "\3\uffff\1\2\1\1\74\uffff";
    static final String[] dfa_55s = {
            "\1\1\11\uffff\5\3\31\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\31\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\5",
            "",
            "",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\1\11\uffff\5\3\7\uffff\1\16\21\uffff\10\4\3\uffff\1\6\7\uffff\1\7\4\uffff\1\2\1\10\41\uffff\7\4",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\1\11\uffff\5\3\7\uffff\1\16\21\uffff\10\4\3\uffff\1\6\7\uffff\1\7\4\uffff\1\2\1\10\41\uffff\7\4",
            "\1\17\1\14\1\uffff\1\15",
            "\1\20",
            "\1\1\11\uffff\5\3\2\uffff\1\21\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\21\26\uffff\10\4\3\uffff\1\22\7\uffff\1\23\4\uffff\1\2\1\24\41\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\21\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\21\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\21\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\25",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\1\11\uffff\5\3\7\uffff\1\16\21\uffff\10\4\3\uffff\1\6\7\uffff\1\7\4\uffff\1\2\1\10\41\uffff\7\4",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\1\11\uffff\5\3\7\uffff\1\16\21\uffff\10\4\13\uffff\1\26\4\uffff\1\2\42\uffff\7\4",
            "\1\27\1\30\1\33\1\uffff\1\34\1\31\73\uffff\1\32",
            "\1\1\11\uffff\5\3\2\uffff\1\21\26\uffff\10\4\3\uffff\1\22\7\uffff\1\23\4\uffff\1\2\1\24\41\uffff\7\4",
            "\1\35",
            "\1\36",
            "\1\42\33\uffff\1\37\7\uffff\1\40\5\uffff\1\41",
            "\1\14\1\uffff\1\15",
            "\1\1\11\uffff\5\3\2\uffff\1\21\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\21\26\uffff\10\4\3\uffff\1\43\7\uffff\1\44\4\uffff\1\2\1\45\41\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\21\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\33\1\uffff\1\34",
            "\1\1\11\uffff\5\3\2\uffff\1\21\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\21\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\21\26\uffff\10\4\3\uffff\1\22\7\uffff\1\23\4\uffff\1\2\1\24\41\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\21\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\42\33\uffff\1\37\7\uffff\1\40\5\uffff\1\41",
            "\1\46",
            "\1\47",
            "\1\50\1\51\1\54\1\uffff\1\55\1\52\73\uffff\1\53",
            "\1\1\11\uffff\5\3\2\uffff\1\21\26\uffff\10\4\3\uffff\1\43\7\uffff\1\44\4\uffff\1\2\1\45\41\uffff\7\4",
            "\1\56",
            "\1\57",
            "\1\42\33\uffff\1\37\7\uffff\1\40\5\uffff\1\41",
            "\1\42",
            "\1\1\11\uffff\5\3\2\uffff\1\60\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\60\26\uffff\10\4\3\uffff\1\61\7\uffff\1\62\4\uffff\1\2\1\63\41\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\60\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\54\1\uffff\1\55",
            "\1\1\11\uffff\5\3\2\uffff\1\60\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\60\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\21\26\uffff\10\4\3\uffff\1\43\7\uffff\1\44\4\uffff\1\2\1\45\41\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\21\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\64\1\65\1\70\1\uffff\1\71\1\66\73\uffff\1\67",
            "\1\1\11\uffff\5\3\2\uffff\1\60\26\uffff\10\4\3\uffff\1\61\7\uffff\1\62\4\uffff\1\2\1\63\41\uffff\7\4",
            "\1\72",
            "\1\73",
            "\1\1\11\uffff\5\3\2\uffff\1\60\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\60\26\uffff\10\4\3\uffff\1\74\7\uffff\1\75\4\uffff\1\2\1\76\41\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\60\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\70\1\uffff\1\71",
            "\1\1\11\uffff\5\3\2\uffff\1\60\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\60\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\60\26\uffff\10\4\3\uffff\1\61\7\uffff\1\62\4\uffff\1\2\1\63\41\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\60\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\60\26\uffff\10\4\3\uffff\1\74\7\uffff\1\75\4\uffff\1\2\1\76\41\uffff\7\4",
            "\1\77",
            "\1\100",
            "\1\1\11\uffff\5\3\2\uffff\1\60\26\uffff\10\4\3\uffff\1\74\7\uffff\1\75\4\uffff\1\2\1\76\41\uffff\7\4",
            "\1\1\11\uffff\5\3\2\uffff\1\60\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4"
    };
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final short[][] dfa_55 = unpackEncodedStringArray(dfa_55s);

    class DFA64 extends DFA {

        public DFA64(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 64;
            this.eot = dfa_47;
            this.eof = dfa_47;
            this.min = dfa_48;
            this.max = dfa_53;
            this.accept = dfa_54;
            this.special = dfa_51;
            this.transition = dfa_55;
        }
        public String getDescription() {
            return "()* loopback of 1998:1: ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )*";
        }
    }
    static final String dfa_56s = "\1\1\100\uffff";
    static final String dfa_57s = "\1\12\1\uffff\1\12\1\5\1\uffff\2\4\1\5\1\6\5\12\1\5\3\4\1\12\1\5\1\6\1\41\1\6\3\12\1\6\4\12\1\41\1\5\1\6\1\4\1\12\1\5\1\6\2\41\3\12\1\6\4\12\1\4\1\12\1\5\1\6\3\12\1\6\5\12\1\5\1\6\2\12";
    static final String dfa_58s = "\1\112\1\uffff\1\112\1\5\1\uffff\2\113\1\10\1\6\1\112\1\113\3\112\1\5\1\113\1\112\1\105\1\113\1\5\1\6\1\113\1\10\1\112\1\113\1\112\1\10\2\112\1\113\1\112\1\113\1\5\1\6\1\105\1\113\1\5\1\6\1\113\1\41\1\112\1\113\1\112\1\10\2\112\1\113\1\112\1\105\1\113\1\5\1\6\1\112\1\113\1\112\1\10\2\112\1\113\1\112\1\113\1\5\1\6\1\113\1\112";
    static final String dfa_59s = "\1\uffff\1\2\2\uffff\1\1\74\uffff";
    static final String[] dfa_60s = {
            "\1\2\10\uffff\1\1\5\4\24\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "",
            "\1\2\11\uffff\5\4\24\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\5",
            "",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\2\11\uffff\5\4\7\uffff\1\16\14\uffff\1\1\1\uffff\1\1\15\uffff\1\6\7\uffff\1\7\4\uffff\1\3\1\10",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\2\11\uffff\5\4\7\uffff\1\16\14\uffff\1\1\1\uffff\1\1\15\uffff\1\6\7\uffff\1\7\4\uffff\1\3\1\10",
            "\1\17\1\14\1\uffff\1\15",
            "\1\20",
            "\1\2\11\uffff\5\4\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\2\11\uffff\5\4\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\15\uffff\1\22\7\uffff\1\23\4\uffff\1\3\1\24",
            "\1\2\11\uffff\5\4\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\2\11\uffff\5\4\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\2\11\uffff\5\4\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\25",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\2\11\uffff\5\4\7\uffff\1\16\14\uffff\1\1\1\uffff\1\1\15\uffff\1\6\7\uffff\1\7\4\uffff\1\3\1\10",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\2\11\uffff\5\4\7\uffff\1\16\14\uffff\1\1\1\uffff\1\1\25\uffff\1\26\4\uffff\1\3",
            "\1\27\1\30\1\33\1\uffff\1\34\1\31\73\uffff\1\32",
            "\1\2\11\uffff\5\4\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\15\uffff\1\22\7\uffff\1\23\4\uffff\1\3\1\24",
            "\1\35",
            "\1\36",
            "\1\42\33\uffff\1\37\7\uffff\1\40\5\uffff\1\41",
            "\1\14\1\uffff\1\15",
            "\1\2\11\uffff\5\4\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\2\11\uffff\5\4\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\15\uffff\1\43\7\uffff\1\44\4\uffff\1\3\1\45",
            "\1\2\11\uffff\5\4\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\33\1\uffff\1\34",
            "\1\2\11\uffff\5\4\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\2\11\uffff\5\4\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\2\11\uffff\5\4\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\15\uffff\1\22\7\uffff\1\23\4\uffff\1\3\1\24",
            "\1\2\11\uffff\5\4\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\42\33\uffff\1\37\7\uffff\1\40\5\uffff\1\41",
            "\1\46",
            "\1\47",
            "\1\50\1\51\1\54\1\uffff\1\55\1\52\73\uffff\1\53",
            "\1\2\11\uffff\5\4\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\15\uffff\1\43\7\uffff\1\44\4\uffff\1\3\1\45",
            "\1\56",
            "\1\57",
            "\1\42\33\uffff\1\37\7\uffff\1\40\5\uffff\1\41",
            "\1\42",
            "\1\2\11\uffff\5\4\2\uffff\1\60\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\2\11\uffff\5\4\2\uffff\1\60\21\uffff\1\1\1\uffff\1\1\15\uffff\1\61\7\uffff\1\62\4\uffff\1\3\1\63",
            "\1\2\11\uffff\5\4\2\uffff\1\60\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\54\1\uffff\1\55",
            "\1\2\11\uffff\5\4\2\uffff\1\60\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\2\11\uffff\5\4\2\uffff\1\60\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\2\11\uffff\5\4\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\15\uffff\1\43\7\uffff\1\44\4\uffff\1\3\1\45",
            "\1\2\11\uffff\5\4\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\64\1\65\1\70\1\uffff\1\71\1\66\73\uffff\1\67",
            "\1\2\11\uffff\5\4\2\uffff\1\60\21\uffff\1\1\1\uffff\1\1\15\uffff\1\61\7\uffff\1\62\4\uffff\1\3\1\63",
            "\1\72",
            "\1\73",
            "\1\2\11\uffff\5\4\2\uffff\1\60\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\2\11\uffff\5\4\2\uffff\1\60\21\uffff\1\1\1\uffff\1\1\15\uffff\1\74\7\uffff\1\75\4\uffff\1\3\1\76",
            "\1\2\11\uffff\5\4\2\uffff\1\60\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\70\1\uffff\1\71",
            "\1\2\11\uffff\5\4\2\uffff\1\60\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\2\11\uffff\5\4\2\uffff\1\60\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\2\11\uffff\5\4\2\uffff\1\60\21\uffff\1\1\1\uffff\1\1\15\uffff\1\61\7\uffff\1\62\4\uffff\1\3\1\63",
            "\1\2\11\uffff\5\4\2\uffff\1\60\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\2\11\uffff\5\4\2\uffff\1\60\21\uffff\1\1\1\uffff\1\1\15\uffff\1\74\7\uffff\1\75\4\uffff\1\3\1\76",
            "\1\77",
            "\1\100",
            "\1\2\11\uffff\5\4\2\uffff\1\60\21\uffff\1\1\1\uffff\1\1\15\uffff\1\74\7\uffff\1\75\4\uffff\1\3\1\76",
            "\1\2\11\uffff\5\4\2\uffff\1\60\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3"
    };
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final char[] dfa_57 = DFA.unpackEncodedStringToUnsignedChars(dfa_57s);
    static final char[] dfa_58 = DFA.unpackEncodedStringToUnsignedChars(dfa_58s);
    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final short[][] dfa_60 = unpackEncodedStringArray(dfa_60s);

    class DFA65 extends DFA {

        public DFA65(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 65;
            this.eot = dfa_47;
            this.eof = dfa_56;
            this.min = dfa_57;
            this.max = dfa_58;
            this.accept = dfa_59;
            this.special = dfa_51;
            this.transition = dfa_60;
        }
        public String getDescription() {
            return "()+ loopback of 2016:3: ( (lv_states_7_0= ruleState ) )+";
        }
    }
    static final String dfa_61s = "\3\5\2\uffff\2\4\1\5\1\6\6\5\3\4\2\5\1\6\1\41\1\6\3\5\1\6\5\5\1\41\1\5\1\6\1\4\2\5\1\6\2\41\3\5\1\6\4\5\1\4\2\5\1\6\3\5\1\6\6\5\1\6\2\5";
    static final String dfa_62s = "\2\163\1\5\2\uffff\2\163\1\10\1\6\5\163\1\5\2\163\1\105\1\163\1\5\1\6\1\113\1\10\3\163\1\10\5\163\1\113\1\5\1\6\1\105\1\163\1\5\1\6\1\113\1\41\3\163\1\10\4\163\1\105\1\163\1\5\1\6\3\163\1\10\5\163\1\5\1\6\2\163";
    static final String dfa_63s = "\3\uffff\1\2\1\1\75\uffff";
    static final String[] dfa_64s = {
            "\1\3\4\uffff\1\1\47\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\3\4\uffff\1\1\47\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\5",
            "",
            "",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\1\25\uffff\1\16\21\uffff\10\4\3\uffff\1\6\7\uffff\1\7\4\uffff\1\2\1\10\41\uffff\7\4",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\1\25\uffff\1\16\21\uffff\10\4\3\uffff\1\6\7\uffff\1\7\4\uffff\1\2\1\10\41\uffff\7\4",
            "\1\17\1\14\1\uffff\1\15",
            "\1\20",
            "\1\3\4\uffff\1\1\20\uffff\1\21\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\21\4\uffff\1\3\21\uffff\10\4\1\uffff\1\3\1\uffff\1\22\7\uffff\1\23\3\uffff\1\3\1\2\1\24\17\uffff\12\3\10\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\21\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\21\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\21\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\25",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\1\25\uffff\1\16\21\uffff\10\4\3\uffff\1\6\7\uffff\1\7\4\uffff\1\2\1\10\41\uffff\7\4",
            "\1\11\1\12\1\14\1\uffff\1\15\1\13\1\1\25\uffff\1\16\21\uffff\10\4\13\uffff\1\26\4\uffff\1\2\42\uffff\7\4",
            "\1\27\1\30\1\33\1\uffff\1\34\1\31\73\uffff\1\32",
            "\1\3\4\uffff\1\1\20\uffff\1\21\26\uffff\10\4\3\uffff\1\35\7\uffff\1\23\4\uffff\1\2\1\24\41\uffff\7\4",
            "\1\36",
            "\1\37",
            "\1\43\33\uffff\1\40\7\uffff\1\41\5\uffff\1\42",
            "\1\14\1\uffff\1\15",
            "\1\3\4\uffff\1\1\20\uffff\1\21\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\21\26\uffff\10\4\3\uffff\1\44\7\uffff\1\45\4\uffff\1\2\1\46\41\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\21\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\33\1\uffff\1\34",
            "\1\3\4\uffff\1\1\20\uffff\1\21\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\21\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\21\26\uffff\10\4\3\uffff\1\35\7\uffff\1\23\4\uffff\1\2\1\24\41\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\21\26\uffff\10\4\3\uffff\1\35\7\uffff\1\23\4\uffff\1\2\1\24\41\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\21\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\43\33\uffff\1\40\7\uffff\1\41\5\uffff\1\42",
            "\1\47",
            "\1\50",
            "\1\51\1\52\1\55\1\uffff\1\56\1\53\73\uffff\1\54",
            "\1\3\4\uffff\1\1\20\uffff\1\21\26\uffff\10\4\3\uffff\1\44\7\uffff\1\45\4\uffff\1\2\1\46\41\uffff\7\4",
            "\1\57",
            "\1\60",
            "\1\43\33\uffff\1\40\7\uffff\1\41\5\uffff\1\42",
            "\1\43",
            "\1\3\4\uffff\1\1\20\uffff\1\61\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\61\26\uffff\10\4\3\uffff\1\62\7\uffff\1\63\4\uffff\1\2\1\64\41\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\61\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\55\1\uffff\1\56",
            "\1\3\4\uffff\1\1\20\uffff\1\61\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\61\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\21\26\uffff\10\4\3\uffff\1\44\7\uffff\1\45\4\uffff\1\2\1\46\41\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\21\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\65\1\66\1\71\1\uffff\1\72\1\67\73\uffff\1\70",
            "\1\3\4\uffff\1\1\20\uffff\1\61\26\uffff\10\4\3\uffff\1\62\7\uffff\1\63\4\uffff\1\2\1\64\41\uffff\7\4",
            "\1\73",
            "\1\74",
            "\1\3\4\uffff\1\1\20\uffff\1\61\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\61\26\uffff\10\4\3\uffff\1\75\7\uffff\1\76\4\uffff\1\2\1\77\41\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\61\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\71\1\uffff\1\72",
            "\1\3\4\uffff\1\1\20\uffff\1\61\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\61\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\61\26\uffff\10\4\3\uffff\1\62\7\uffff\1\63\4\uffff\1\2\1\64\41\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\61\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\61\26\uffff\10\4\3\uffff\1\75\7\uffff\1\76\4\uffff\1\2\1\77\41\uffff\7\4",
            "\1\100",
            "\1\101",
            "\1\3\4\uffff\1\1\20\uffff\1\61\26\uffff\10\4\3\uffff\1\75\7\uffff\1\76\4\uffff\1\2\1\77\41\uffff\7\4",
            "\1\3\4\uffff\1\1\20\uffff\1\61\26\uffff\10\4\20\uffff\1\2\42\uffff\7\4"
    };
    static final char[] dfa_61 = DFA.unpackEncodedStringToUnsignedChars(dfa_61s);
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final short[][] dfa_64 = unpackEncodedStringArray(dfa_64s);

    class DFA69 extends DFA {

        public DFA69(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 69;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_61;
            this.max = dfa_62;
            this.accept = dfa_63;
            this.special = dfa_5;
            this.transition = dfa_64;
        }
        public String getDescription() {
            return "()* loopback of 2126:1: ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )*";
        }
    }
    static final String dfa_65s = "\1\1\101\uffff";
    static final String dfa_66s = "\1\5\1\uffff\2\5\1\uffff\2\4\1\5\1\6\6\5\2\4\1\41\1\4\2\5\2\6\1\41\1\5\1\6\1\4\3\5\1\6\5\5\2\41\3\5\1\6\4\5\1\6\1\4\2\5\1\6\5\5\1\6\6\5\1\6\2\5";
    static final String dfa_67s = "\1\112\1\uffff\1\112\1\5\1\uffff\2\113\1\10\1\6\1\5\1\112\1\144\3\112\1\113\1\112\1\113\1\105\1\113\1\5\1\6\1\10\1\113\1\5\1\6\1\105\1\112\1\113\1\112\1\10\2\112\2\113\1\112\1\113\1\41\1\112\1\113\1\112\1\10\2\112\1\113\1\5\1\6\1\105\1\113\1\5\1\6\1\113\2\112\1\113\1\112\1\10\2\112\1\113\1\112\1\113\1\5\1\6\1\113\1\112";
    static final String[] dfa_68s = {
            "\1\4\4\uffff\1\2\10\uffff\1\1\31\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "",
            "\1\4\4\uffff\1\2\42\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\5",
            "",
            "\1\12\1\13\1\15\1\uffff\1\16\1\14\1\2\25\uffff\1\11\14\uffff\1\1\1\uffff\1\1\15\uffff\1\6\7\uffff\1\7\4\uffff\1\3\1\10",
            "\1\12\1\13\1\15\1\uffff\1\16\1\14\1\2\25\uffff\1\11\14\uffff\1\1\1\uffff\1\1\15\uffff\1\6\7\uffff\1\7\4\uffff\1\3\1\10",
            "\1\17\1\15\1\uffff\1\16",
            "\1\20",
            "\1\21",
            "\1\4\4\uffff\1\2\20\uffff\1\22\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\4\4\uffff\1\2\20\uffff\1\22\4\uffff\1\4\14\uffff\1\1\1\uffff\1\1\13\uffff\1\4\1\uffff\1\23\7\uffff\1\24\3\uffff\1\4\1\3\1\25\17\uffff\12\4",
            "\1\4\4\uffff\1\2\20\uffff\1\22\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\4\4\uffff\1\2\20\uffff\1\22\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\4\4\uffff\1\2\20\uffff\1\22\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\12\1\13\1\15\1\uffff\1\16\1\14\1\2\25\uffff\1\11\14\uffff\1\1\1\uffff\1\1\15\uffff\1\6\7\uffff\1\7\4\uffff\1\3\1\10",
            "\1\12\1\13\1\15\1\uffff\1\16\1\14\1\2\25\uffff\1\11\14\uffff\1\1\1\uffff\1\1\25\uffff\1\26\4\uffff\1\3",
            "\1\32\33\uffff\1\27\7\uffff\1\30\5\uffff\1\31",
            "\1\33\1\34\1\37\1\uffff\1\40\1\35\73\uffff\1\36",
            "\1\4\4\uffff\1\2\20\uffff\1\22\21\uffff\1\1\1\uffff\1\1\15\uffff\1\41\7\uffff\1\24\4\uffff\1\3\1\25",
            "\1\42",
            "\1\43",
            "\1\15\1\uffff\1\16",
            "\1\32\33\uffff\1\27\7\uffff\1\30\5\uffff\1\31",
            "\1\44",
            "\1\45",
            "\1\46\1\47\1\52\1\uffff\1\53\1\50\73\uffff\1\51",
            "\1\4\4\uffff\1\2\20\uffff\1\22\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\4\4\uffff\1\2\20\uffff\1\22\21\uffff\1\1\1\uffff\1\1\15\uffff\1\54\7\uffff\1\55\4\uffff\1\3\1\56",
            "\1\4\4\uffff\1\2\20\uffff\1\22\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\37\1\uffff\1\40",
            "\1\4\4\uffff\1\2\20\uffff\1\22\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\4\4\uffff\1\2\20\uffff\1\22\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\4\4\uffff\1\2\20\uffff\1\22\21\uffff\1\1\1\uffff\1\1\15\uffff\1\41\7\uffff\1\24\4\uffff\1\3\1\25",
            "\1\4\4\uffff\1\2\20\uffff\1\22\21\uffff\1\1\1\uffff\1\1\15\uffff\1\41\7\uffff\1\24\4\uffff\1\3\1\25",
            "\1\4\4\uffff\1\2\20\uffff\1\22\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\32\33\uffff\1\27\7\uffff\1\30\5\uffff\1\31",
            "\1\32",
            "\1\4\4\uffff\1\2\20\uffff\1\57\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\4\4\uffff\1\2\20\uffff\1\57\21\uffff\1\1\1\uffff\1\1\15\uffff\1\60\7\uffff\1\61\4\uffff\1\3\1\62",
            "\1\4\4\uffff\1\2\20\uffff\1\57\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\52\1\uffff\1\53",
            "\1\4\4\uffff\1\2\20\uffff\1\57\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\4\4\uffff\1\2\20\uffff\1\57\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\4\4\uffff\1\2\20\uffff\1\22\21\uffff\1\1\1\uffff\1\1\15\uffff\1\54\7\uffff\1\55\4\uffff\1\3\1\56",
            "\1\63",
            "\1\64",
            "\1\65\1\66\1\71\1\uffff\1\72\1\67\73\uffff\1\70",
            "\1\4\4\uffff\1\2\20\uffff\1\57\21\uffff\1\1\1\uffff\1\1\15\uffff\1\60\7\uffff\1\61\4\uffff\1\3\1\62",
            "\1\73",
            "\1\74",
            "\1\4\4\uffff\1\2\20\uffff\1\22\21\uffff\1\1\1\uffff\1\1\15\uffff\1\54\7\uffff\1\55\4\uffff\1\3\1\56",
            "\1\4\4\uffff\1\2\20\uffff\1\22\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\4\4\uffff\1\2\20\uffff\1\57\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\4\4\uffff\1\2\20\uffff\1\57\21\uffff\1\1\1\uffff\1\1\15\uffff\1\75\7\uffff\1\76\4\uffff\1\3\1\77",
            "\1\4\4\uffff\1\2\20\uffff\1\57\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\71\1\uffff\1\72",
            "\1\4\4\uffff\1\2\20\uffff\1\57\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\4\4\uffff\1\2\20\uffff\1\57\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\4\4\uffff\1\2\20\uffff\1\57\21\uffff\1\1\1\uffff\1\1\15\uffff\1\60\7\uffff\1\61\4\uffff\1\3\1\62",
            "\1\4\4\uffff\1\2\20\uffff\1\57\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3",
            "\1\4\4\uffff\1\2\20\uffff\1\57\21\uffff\1\1\1\uffff\1\1\15\uffff\1\75\7\uffff\1\76\4\uffff\1\3\1\77",
            "\1\100",
            "\1\101",
            "\1\4\4\uffff\1\2\20\uffff\1\57\21\uffff\1\1\1\uffff\1\1\15\uffff\1\75\7\uffff\1\76\4\uffff\1\3\1\77",
            "\1\4\4\uffff\1\2\20\uffff\1\57\21\uffff\1\1\1\uffff\1\1\32\uffff\1\3"
    };
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final char[] dfa_66 = DFA.unpackEncodedStringToUnsignedChars(dfa_66s);
    static final char[] dfa_67 = DFA.unpackEncodedStringToUnsignedChars(dfa_67s);
    static final short[][] dfa_68 = unpackEncodedStringArray(dfa_68s);

    class DFA70 extends DFA {

        public DFA70(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 70;
            this.eot = dfa_1;
            this.eof = dfa_65;
            this.min = dfa_66;
            this.max = dfa_67;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_68;
        }
        public String getDescription() {
            return "()+ loopback of 2144:3: ( (lv_equations_7_0= ruleEquation ) )+";
        }
    }
    static final String dfa_69s = "\134\uffff";
    static final String dfa_70s = "\1\3\12\uffff\1\3\120\uffff";
    static final String dfa_71s = "\3\5\1\uffff\1\4\1\uffff\2\4\1\5\1\6\6\5\3\4\2\5\1\6\1\4\3\5\1\41\1\6\3\5\1\6\6\5\1\4\1\41\1\5\1\6\1\4\2\5\1\6\1\5\1\4\1\5\1\6\3\5\2\41\3\5\1\6\4\5\2\4\1\41\1\4\2\5\1\6\1\4\1\41\1\5\1\6\1\4\3\5\1\6\5\5\2\41\3\5\1\6\2\5";
    static final String dfa_72s = "\2\163\1\5\1\uffff\1\5\1\uffff\2\163\1\10\1\6\5\163\1\5\2\163\1\105\1\163\1\5\1\6\1\105\1\5\1\163\1\5\1\113\1\10\3\163\1\10\5\163\1\132\1\163\1\113\1\5\1\6\1\105\1\163\1\5\1\6\1\132\1\163\1\10\1\6\2\163\1\5\1\113\1\41\3\163\1\10\6\163\1\113\1\105\1\163\1\5\1\6\1\105\1\113\1\5\1\6\1\105\3\163\1\10\5\163\1\113\1\41\2\163\1\5\1\6\2\163";
    static final String dfa_73s = "\3\uffff\1\2\1\uffff\1\1\126\uffff";
    static final String dfa_74s = "\134\uffff}>";
    static final String[] dfa_75s = {
            "\1\3\1\uffff\1\3\2\uffff\1\1\45\uffff\2\3\6\5\1\4\1\5\5\uffff\1\3\12\uffff\1\2\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\1\46\uffff\1\3\6\5\1\4\1\5\20\uffff\1\2\42\uffff\7\5",
            "\1\6",
            "",
            "\1\5\1\3",
            "",
            "\1\12\1\13\1\15\1\3\1\16\1\14\1\1\25\uffff\1\17\20\uffff\1\3\6\5\1\4\1\5\3\uffff\1\7\7\uffff\1\10\4\uffff\1\2\1\11\41\uffff\7\5",
            "\1\12\1\13\1\15\1\3\1\16\1\14\1\1\25\uffff\1\17\20\uffff\1\3\6\5\1\4\1\5\3\uffff\1\7\7\uffff\1\10\4\uffff\1\2\1\11\41\uffff\7\5",
            "\1\20\1\15\1\uffff\1\16",
            "\1\21",
            "\1\3\1\uffff\1\3\2\uffff\1\1\20\uffff\1\22\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\2\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\1\17\uffff\1\3\1\26\4\uffff\1\3\17\uffff\2\3\6\5\1\4\1\27\1\uffff\1\3\1\uffff\1\23\2\3\5\uffff\1\24\3\uffff\1\3\1\2\1\25\17\uffff\14\3\6\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\26\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\26\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\26\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\32",
            "\1\12\1\13\1\15\1\3\1\16\1\14\1\1\25\uffff\1\17\20\uffff\1\3\6\5\1\4\1\5\3\uffff\1\7\7\uffff\1\10\4\uffff\1\2\1\11\41\uffff\7\5",
            "\1\12\1\13\1\15\1\3\1\16\1\14\1\1\25\uffff\1\17\20\uffff\1\3\6\5\1\4\1\5\13\uffff\1\33\4\uffff\1\2\42\uffff\7\5",
            "\1\34\1\35\1\40\1\uffff\1\41\1\36\73\uffff\1\37",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\26\25\uffff\1\3\6\5\1\4\1\5\3\uffff\1\23\7\uffff\1\24\4\uffff\1\31\1\25\41\uffff\7\5",
            "\1\42",
            "\1\43",
            "\1\44\1\35\1\40\1\uffff\1\41\1\36\73\uffff\1\37",
            "\1\45",
            "\1\3\1\uffff\1\3\2\uffff\1\30\46\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\46",
            "\1\52\33\uffff\1\47\7\uffff\1\50\5\uffff\1\51",
            "\1\15\1\uffff\1\16",
            "\1\3\1\uffff\1\3\2\uffff\1\1\20\uffff\1\22\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\2\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\26\25\uffff\1\3\6\5\1\4\1\5\3\uffff\1\53\7\uffff\1\54\4\uffff\1\31\1\55\41\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\26\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\40\1\uffff\1\41",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\26\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\26\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\26\25\uffff\1\3\6\5\1\4\1\5\3\uffff\1\23\7\uffff\1\24\4\uffff\1\31\1\25\41\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\26\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\26\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\5\1\3\3\uffff\1\5\57\uffff\1\5\16\uffff\1\56\1\5\16\uffff\2\5",
            "\1\62\1\63\1\15\1\3\1\16\1\14\1\30\25\uffff\1\64\20\uffff\1\3\6\5\1\4\1\5\3\uffff\1\57\7\uffff\1\60\4\uffff\1\31\1\61\41\uffff\7\5",
            "\1\52\33\uffff\1\47\7\uffff\1\50\5\uffff\1\51",
            "\1\65",
            "\1\66",
            "\1\67\1\70\1\73\1\uffff\1\74\1\71\73\uffff\1\72",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\26\25\uffff\1\3\6\5\1\4\1\5\3\uffff\1\53\7\uffff\1\54\4\uffff\1\31\1\55\41\uffff\7\5",
            "\1\75",
            "\1\76",
            "\1\5\1\3\3\uffff\1\5\57\uffff\1\5\16\uffff\1\56\1\5\16\uffff\2\5",
            "\1\62\1\63\1\15\1\3\1\16\1\14\1\30\25\uffff\1\64\20\uffff\1\3\6\5\1\4\1\5\3\uffff\1\57\7\uffff\1\60\4\uffff\1\31\1\61\41\uffff\7\5",
            "\1\77\1\15\1\uffff\1\16",
            "\1\100",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\26\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\17\uffff\1\3\1\26\4\uffff\1\3\20\uffff\1\3\6\5\1\4\1\5\1\uffff\1\3\1\uffff\1\23\1\3\6\uffff\1\24\3\uffff\1\3\1\31\1\25\17\uffff\14\3\6\uffff\7\5",
            "\1\101",
            "\1\52\33\uffff\1\47\7\uffff\1\50\5\uffff\1\51",
            "\1\52",
            "\1\3\1\uffff\1\3\2\uffff\1\1\20\uffff\1\102\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\2\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\106\25\uffff\1\3\6\5\1\4\1\5\3\uffff\1\103\7\uffff\1\104\4\uffff\1\31\1\105\41\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\106\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\73\1\uffff\1\74",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\106\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\106\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\26\25\uffff\1\3\6\5\1\4\1\5\3\uffff\1\53\7\uffff\1\54\4\uffff\1\31\1\55\41\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\26\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\62\1\63\1\15\1\3\1\16\1\14\1\30\25\uffff\1\64\20\uffff\1\3\6\5\1\4\1\5\3\uffff\1\57\7\uffff\1\60\4\uffff\1\31\1\61\41\uffff\7\5",
            "\1\62\1\63\1\15\1\3\1\16\1\14\1\30\25\uffff\1\64\20\uffff\1\3\6\5\1\4\1\5\13\uffff\1\33\4\uffff\1\31\42\uffff\7\5",
            "\1\112\33\uffff\1\107\7\uffff\1\110\5\uffff\1\111",
            "\1\113\1\114\1\117\1\uffff\1\120\1\115\73\uffff\1\116",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\106\25\uffff\1\3\6\5\1\4\1\5\3\uffff\1\103\7\uffff\1\104\4\uffff\1\31\1\105\41\uffff\7\5",
            "\1\121",
            "\1\122",
            "\1\123\1\114\1\117\1\uffff\1\120\1\115\73\uffff\1\116",
            "\1\112\33\uffff\1\107\7\uffff\1\110\5\uffff\1\111",
            "\1\124",
            "\1\125",
            "\1\126\1\70\1\73\1\uffff\1\74\1\71\73\uffff\1\72",
            "\1\3\1\uffff\1\3\2\uffff\1\1\20\uffff\1\102\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\2\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\106\25\uffff\1\3\6\5\1\4\1\5\3\uffff\1\127\7\uffff\1\130\4\uffff\1\31\1\131\41\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\106\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\117\1\uffff\1\120",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\106\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\106\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\106\25\uffff\1\3\6\5\1\4\1\5\3\uffff\1\103\7\uffff\1\104\4\uffff\1\31\1\105\41\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\106\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\106\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\112\33\uffff\1\107\7\uffff\1\110\5\uffff\1\111",
            "\1\112",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\106\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\106\25\uffff\1\3\6\5\1\4\1\5\3\uffff\1\127\7\uffff\1\130\4\uffff\1\31\1\131\41\uffff\7\5",
            "\1\132",
            "\1\133",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\106\25\uffff\1\3\6\5\1\4\1\5\3\uffff\1\127\7\uffff\1\130\4\uffff\1\31\1\131\41\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\106\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5"
    };

    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final char[] dfa_71 = DFA.unpackEncodedStringToUnsignedChars(dfa_71s);
    static final char[] dfa_72 = DFA.unpackEncodedStringToUnsignedChars(dfa_72s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final short[] dfa_74 = DFA.unpackEncodedString(dfa_74s);
    static final short[][] dfa_75 = unpackEncodedStringArray(dfa_75s);

    class DFA71 extends DFA {

        public DFA71(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 71;
            this.eot = dfa_69;
            this.eof = dfa_70;
            this.min = dfa_71;
            this.max = dfa_72;
            this.accept = dfa_73;
            this.special = dfa_74;
            this.transition = dfa_75;
        }
        public String getDescription() {
            return "()* loopback of 2231:2: ( (lv_declarations_1_0= ruleDeclaration ) )*";
        }
    }
    static final String[] dfa_76s = {
            "\1\3\1\uffff\1\3\2\uffff\1\1\10\uffff\1\3\34\uffff\2\3\6\5\1\4\1\5\5\uffff\1\3\12\uffff\1\2\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\1\46\uffff\1\3\6\5\1\4\1\5\20\uffff\1\2\42\uffff\7\5",
            "\1\6",
            "",
            "\1\5\1\3",
            "",
            "\1\12\1\13\1\15\1\3\1\16\1\14\1\1\25\uffff\1\17\20\uffff\1\3\6\5\1\4\1\5\3\uffff\1\7\7\uffff\1\10\4\uffff\1\2\1\11\41\uffff\7\5",
            "\1\12\1\13\1\15\1\3\1\16\1\14\1\1\25\uffff\1\17\20\uffff\1\3\6\5\1\4\1\5\3\uffff\1\7\7\uffff\1\10\4\uffff\1\2\1\11\41\uffff\7\5",
            "\1\20\1\15\1\uffff\1\16",
            "\1\21",
            "\1\3\1\uffff\1\3\2\uffff\1\1\20\uffff\1\22\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\2\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\1\10\uffff\1\3\6\uffff\1\3\1\26\4\uffff\1\3\17\uffff\2\3\6\5\1\4\1\27\1\uffff\1\3\1\uffff\1\23\2\3\5\uffff\1\24\3\uffff\1\3\1\2\1\25\17\uffff\14\3\6\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\26\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\26\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\26\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\32",
            "\1\12\1\13\1\15\1\3\1\16\1\14\1\1\25\uffff\1\17\20\uffff\1\3\6\5\1\4\1\5\3\uffff\1\7\7\uffff\1\10\4\uffff\1\2\1\11\41\uffff\7\5",
            "\1\12\1\13\1\15\1\3\1\16\1\14\1\1\25\uffff\1\17\20\uffff\1\3\6\5\1\4\1\5\13\uffff\1\33\4\uffff\1\2\42\uffff\7\5",
            "\1\34\1\35\1\40\1\uffff\1\41\1\36\73\uffff\1\37",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\26\25\uffff\1\3\6\5\1\4\1\5\3\uffff\1\23\7\uffff\1\24\4\uffff\1\31\1\25\41\uffff\7\5",
            "\1\42",
            "\1\43",
            "\1\44\1\35\1\40\1\uffff\1\41\1\36\73\uffff\1\37",
            "\1\45",
            "\1\3\1\uffff\1\3\2\uffff\1\30\46\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\46",
            "\1\52\33\uffff\1\47\7\uffff\1\50\5\uffff\1\51",
            "\1\15\1\uffff\1\16",
            "\1\3\1\uffff\1\3\2\uffff\1\1\20\uffff\1\22\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\2\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\26\25\uffff\1\3\6\5\1\4\1\5\3\uffff\1\53\7\uffff\1\54\4\uffff\1\31\1\55\41\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\26\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\40\1\uffff\1\41",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\26\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\26\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\26\25\uffff\1\3\6\5\1\4\1\5\3\uffff\1\23\7\uffff\1\24\4\uffff\1\31\1\25\41\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\26\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\26\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\5\1\3\3\uffff\1\5\57\uffff\1\5\16\uffff\1\56\1\5\16\uffff\2\5",
            "\1\62\1\63\1\15\1\3\1\16\1\14\1\30\25\uffff\1\64\20\uffff\1\3\6\5\1\4\1\5\3\uffff\1\57\7\uffff\1\60\4\uffff\1\31\1\61\41\uffff\7\5",
            "\1\52\33\uffff\1\47\7\uffff\1\50\5\uffff\1\51",
            "\1\65",
            "\1\66",
            "\1\67\1\70\1\73\1\uffff\1\74\1\71\73\uffff\1\72",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\26\25\uffff\1\3\6\5\1\4\1\5\3\uffff\1\53\7\uffff\1\54\4\uffff\1\31\1\55\41\uffff\7\5",
            "\1\75",
            "\1\76",
            "\1\5\1\3\3\uffff\1\5\57\uffff\1\5\16\uffff\1\56\1\5\16\uffff\2\5",
            "\1\62\1\63\1\15\1\3\1\16\1\14\1\30\25\uffff\1\64\20\uffff\1\3\6\5\1\4\1\5\3\uffff\1\57\7\uffff\1\60\4\uffff\1\31\1\61\41\uffff\7\5",
            "\1\77\1\15\1\uffff\1\16",
            "\1\100",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\26\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\17\uffff\1\3\1\26\4\uffff\1\3\20\uffff\1\3\6\5\1\4\1\5\1\uffff\1\3\1\uffff\1\23\1\3\6\uffff\1\24\3\uffff\1\3\1\31\1\25\17\uffff\14\3\6\uffff\7\5",
            "\1\101",
            "\1\52\33\uffff\1\47\7\uffff\1\50\5\uffff\1\51",
            "\1\52",
            "\1\3\1\uffff\1\3\2\uffff\1\1\20\uffff\1\102\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\2\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\106\25\uffff\1\3\6\5\1\4\1\5\3\uffff\1\103\7\uffff\1\104\4\uffff\1\31\1\105\41\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\106\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\73\1\uffff\1\74",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\106\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\106\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\26\25\uffff\1\3\6\5\1\4\1\5\3\uffff\1\53\7\uffff\1\54\4\uffff\1\31\1\55\41\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\26\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\62\1\63\1\15\1\3\1\16\1\14\1\30\25\uffff\1\64\20\uffff\1\3\6\5\1\4\1\5\3\uffff\1\57\7\uffff\1\60\4\uffff\1\31\1\61\41\uffff\7\5",
            "\1\62\1\63\1\15\1\3\1\16\1\14\1\30\25\uffff\1\64\20\uffff\1\3\6\5\1\4\1\5\13\uffff\1\33\4\uffff\1\31\42\uffff\7\5",
            "\1\112\33\uffff\1\107\7\uffff\1\110\5\uffff\1\111",
            "\1\113\1\114\1\117\1\uffff\1\120\1\115\73\uffff\1\116",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\106\25\uffff\1\3\6\5\1\4\1\5\3\uffff\1\103\7\uffff\1\104\4\uffff\1\31\1\105\41\uffff\7\5",
            "\1\121",
            "\1\122",
            "\1\123\1\114\1\117\1\uffff\1\120\1\115\73\uffff\1\116",
            "\1\112\33\uffff\1\107\7\uffff\1\110\5\uffff\1\111",
            "\1\124",
            "\1\125",
            "\1\126\1\70\1\73\1\uffff\1\74\1\71\73\uffff\1\72",
            "\1\3\1\uffff\1\3\2\uffff\1\1\20\uffff\1\102\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\2\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\106\25\uffff\1\3\6\5\1\4\1\5\3\uffff\1\127\7\uffff\1\130\4\uffff\1\31\1\131\41\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\106\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\117\1\uffff\1\120",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\106\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\106\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\106\25\uffff\1\3\6\5\1\4\1\5\3\uffff\1\103\7\uffff\1\104\4\uffff\1\31\1\105\41\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\106\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\106\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\112\33\uffff\1\107\7\uffff\1\110\5\uffff\1\111",
            "\1\112",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\106\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\106\25\uffff\1\3\6\5\1\4\1\5\3\uffff\1\127\7\uffff\1\130\4\uffff\1\31\1\131\41\uffff\7\5",
            "\1\132",
            "\1\133",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\106\25\uffff\1\3\6\5\1\4\1\5\3\uffff\1\127\7\uffff\1\130\4\uffff\1\31\1\131\41\uffff\7\5",
            "\1\3\1\uffff\1\3\2\uffff\1\30\20\uffff\1\106\25\uffff\1\3\6\5\1\4\1\5\20\uffff\1\31\42\uffff\7\5"
    };
    static final short[][] dfa_76 = unpackEncodedStringArray(dfa_76s);

    class DFA75 extends DFA {

        public DFA75(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 75;
            this.eot = dfa_69;
            this.eof = dfa_69;
            this.min = dfa_71;
            this.max = dfa_72;
            this.accept = dfa_73;
            this.special = dfa_74;
            this.transition = dfa_76;
        }
        public String getDescription() {
            return "()* loopback of 2341:1: ( (lv_declarations_3_0= ruleDeclaration ) )*";
        }
    }
    static final String dfa_77s = "\130\uffff";
    static final String dfa_78s = "\3\5\2\uffff\2\4\1\5\1\6\1\5\1\0\4\5\2\4\1\41\2\4\2\5\1\6\1\41\1\5\1\6\1\4\3\5\1\6\3\5\1\4\2\41\3\5\1\6\4\5\1\6\1\4\1\5\1\6\3\5\1\4\2\5\1\6\1\4\2\5\2\4\1\41\2\5\1\6\3\5\1\6\5\5\1\41\1\5\1\6\1\4\4\5\1\6\2\41\3\5";
    static final String dfa_79s = "\2\112\1\5\2\uffff\2\113\1\10\1\6\1\5\1\0\4\112\1\113\1\112\1\113\2\105\1\112\1\5\1\10\1\113\1\5\1\6\1\105\1\112\1\113\1\112\1\10\3\112\2\113\1\41\1\112\1\113\1\112\1\10\2\112\1\113\1\5\1\6\1\113\1\10\1\6\1\5\1\112\1\146\1\105\1\113\1\5\1\6\1\105\1\113\1\112\1\113\1\112\2\113\1\5\1\6\1\112\1\113\1\112\1\10\2\112\1\113\2\112\1\113\1\5\1\6\1\105\1\113\1\112\1\113\1\5\1\6\1\113\1\41\1\112\1\113\1\112";
    static final String dfa_80s = "\3\uffff\1\1\1\2\123\uffff";
    static final String dfa_81s = "\12\uffff\1\0\115\uffff}>";
    static final String[] dfa_82s = {
            "\1\4\1\uffff\1\4\2\uffff\1\1\46\uffff\1\3\6\uffff\1\4\6\uffff\1\4\12\uffff\1\2",
            "\1\4\1\uffff\1\4\2\uffff\1\1\46\uffff\1\3\6\uffff\1\4\21\uffff\1\2",
            "\1\5",
            "",
            "",
            "\1\13\1\12\1\15\1\4\1\16\1\14\1\1\25\uffff\1\11\20\uffff\1\3\6\uffff\1\4\4\uffff\1\6\7\uffff\1\7\4\uffff\1\2\1\10",
            "\1\13\1\12\1\15\1\4\1\16\1\14\1\1\25\uffff\1\11\20\uffff\1\3\6\uffff\1\4\4\uffff\1\6\7\uffff\1\7\4\uffff\1\2\1\10",
            "\1\17\1\15\1\uffff\1\16",
            "\1\20",
            "\1\21",
            "\1\uffff",
            "\1\4\1\uffff\1\4\2\uffff\1\1\20\uffff\1\22\25\uffff\1\3\6\uffff\1\4\21\uffff\1\2",
            "\1\4\1\uffff\1\4\2\uffff\1\24\20\uffff\1\23\25\uffff\1\3\6\uffff\1\4\21\uffff\1\25",
            "\1\4\1\uffff\1\4\2\uffff\1\24\20\uffff\1\23\25\uffff\1\3\6\uffff\1\4\21\uffff\1\25",
            "\1\4\1\uffff\1\4\2\uffff\1\24\20\uffff\1\23\25\uffff\1\3\6\uffff\1\4\21\uffff\1\25",
            "\1\13\1\12\1\15\1\4\1\16\1\14\1\1\25\uffff\1\11\20\uffff\1\3\6\uffff\1\4\4\uffff\1\6\7\uffff\1\7\4\uffff\1\2\1\10",
            "\1\13\1\12\1\15\1\4\1\16\1\14\1\1\25\uffff\1\11\20\uffff\1\3\6\uffff\1\4\14\uffff\1\26\4\uffff\1\2",
            "\1\32\33\uffff\1\27\7\uffff\1\30\5\uffff\1\31",
            "\1\33\1\34\1\37\1\uffff\1\40\1\35\73\uffff\1\36",
            "\1\41\1\34\1\37\1\uffff\1\40\1\35\73\uffff\1\36",
            "\1\4\1\uffff\1\4\2\uffff\1\24\46\uffff\1\3\6\uffff\1\4\21\uffff\1\25",
            "\1\42",
            "\1\15\1\uffff\1\16",
            "\1\32\33\uffff\1\27\7\uffff\1\30\5\uffff\1\31",
            "\1\43",
            "\1\44",
            "\1\45\1\46\1\51\1\uffff\1\52\1\47\73\uffff\1\50",
            "\1\4\1\uffff\1\4\2\uffff\1\1\20\uffff\1\22\25\uffff\1\3\6\uffff\1\4\21\uffff\1\2",
            "\1\4\1\uffff\1\4\2\uffff\1\24\20\uffff\1\23\25\uffff\1\3\6\uffff\1\4\4\uffff\1\53\7\uffff\1\54\4\uffff\1\25\1\55",
            "\1\4\1\uffff\1\4\2\uffff\1\24\20\uffff\1\23\25\uffff\1\3\6\uffff\1\4\21\uffff\1\25",
            "\1\37\1\uffff\1\40",
            "\1\4\1\uffff\1\4\2\uffff\1\24\20\uffff\1\23\25\uffff\1\3\6\uffff\1\4\21\uffff\1\25",
            "\1\4\1\uffff\1\4\2\uffff\1\24\20\uffff\1\23\25\uffff\1\3\6\uffff\1\4\21\uffff\1\25",
            "\1\4\1\uffff\1\4\2\uffff\1\24\20\uffff\1\23\25\uffff\1\3\6\uffff\1\4\21\uffff\1\25",
            "\1\62\1\63\1\15\1\4\1\16\1\14\1\24\25\uffff\1\61\20\uffff\1\3\6\uffff\1\4\4\uffff\1\56\7\uffff\1\57\4\uffff\1\25\1\60",
            "\1\32\33\uffff\1\27\7\uffff\1\30\5\uffff\1\31",
            "\1\32",
            "\1\4\1\uffff\1\4\2\uffff\1\1\20\uffff\1\64\25\uffff\1\3\6\uffff\1\4\21\uffff\1\2",
            "\1\4\1\uffff\1\4\2\uffff\1\24\20\uffff\1\70\25\uffff\1\3\6\uffff\1\4\4\uffff\1\65\7\uffff\1\66\4\uffff\1\25\1\67",
            "\1\4\1\uffff\1\4\2\uffff\1\24\20\uffff\1\70\25\uffff\1\3\6\uffff\1\4\21\uffff\1\25",
            "\1\51\1\uffff\1\52",
            "\1\4\1\uffff\1\4\2\uffff\1\24\20\uffff\1\70\25\uffff\1\3\6\uffff\1\4\21\uffff\1\25",
            "\1\4\1\uffff\1\4\2\uffff\1\24\20\uffff\1\70\25\uffff\1\3\6\uffff\1\4\21\uffff\1\25",
            "\1\4\1\uffff\1\4\2\uffff\1\24\20\uffff\1\23\25\uffff\1\3\6\uffff\1\4\4\uffff\1\53\7\uffff\1\54\4\uffff\1\25\1\55",
            "\1\71",
            "\1\72",
            "\1\62\1\63\1\15\1\4\1\16\1\14\1\24\25\uffff\1\61\20\uffff\1\3\6\uffff\1\4\4\uffff\1\56\7\uffff\1\57\4\uffff\1\25\1\60",
            "\1\73\1\15\1\uffff\1\16",
            "\1\74",
            "\1\75",
            "\1\4\1\uffff\1\4\2\uffff\1\24\20\uffff\1\23\25\uffff\1\3\6\uffff\1\4\21\uffff\1\25",
            "\1\4\1\uffff\1\4\2\uffff\1\24\17\uffff\1\4\1\23\4\uffff\1\4\20\uffff\1\3\6\uffff\1\4\2\uffff\1\4\1\uffff\1\76\1\4\6\uffff\1\77\3\uffff\1\4\1\25\1\100\17\uffff\14\4",
            "\1\101\1\102\1\105\1\uffff\1\106\1\103\73\uffff\1\104",
            "\1\4\1\uffff\1\4\2\uffff\1\24\20\uffff\1\70\25\uffff\1\3\6\uffff\1\4\4\uffff\1\65\7\uffff\1\66\4\uffff\1\25\1\67",
            "\1\107",
            "\1\110",
            "\1\111\1\102\1\105\1\uffff\1\106\1\103\73\uffff\1\104",
            "\1\4\1\uffff\1\4\2\uffff\1\24\20\uffff\1\23\25\uffff\1\3\6\uffff\1\4\4\uffff\1\53\7\uffff\1\54\4\uffff\1\25\1\55",
            "\1\4\1\uffff\1\4\2\uffff\1\24\20\uffff\1\23\25\uffff\1\3\6\uffff\1\4\21\uffff\1\25",
            "\1\62\1\63\1\15\1\4\1\16\1\14\1\24\25\uffff\1\61\20\uffff\1\3\6\uffff\1\4\4\uffff\1\56\7\uffff\1\57\4\uffff\1\25\1\60",
            "\1\62\1\63\1\15\1\4\1\16\1\14\1\24\25\uffff\1\61\20\uffff\1\3\6\uffff\1\4\14\uffff\1\26\4\uffff\1\25",
            "\1\115\33\uffff\1\112\7\uffff\1\113\5\uffff\1\114",
            "\1\4\1\uffff\1\4\2\uffff\1\24\20\uffff\1\23\25\uffff\1\3\6\uffff\1\4\4\uffff\1\76\7\uffff\1\77\4\uffff\1\25\1\100",
            "\1\116",
            "\1\117",
            "\1\4\1\uffff\1\4\2\uffff\1\1\20\uffff\1\64\25\uffff\1\3\6\uffff\1\4\21\uffff\1\2",
            "\1\4\1\uffff\1\4\2\uffff\1\24\20\uffff\1\70\25\uffff\1\3\6\uffff\1\4\4\uffff\1\120\7\uffff\1\121\4\uffff\1\25\1\122",
            "\1\4\1\uffff\1\4\2\uffff\1\24\20\uffff\1\70\25\uffff\1\3\6\uffff\1\4\21\uffff\1\25",
            "\1\105\1\uffff\1\106",
            "\1\4\1\uffff\1\4\2\uffff\1\24\20\uffff\1\70\25\uffff\1\3\6\uffff\1\4\21\uffff\1\25",
            "\1\4\1\uffff\1\4\2\uffff\1\24\20\uffff\1\70\25\uffff\1\3\6\uffff\1\4\21\uffff\1\25",
            "\1\4\1\uffff\1\4\2\uffff\1\24\20\uffff\1\70\25\uffff\1\3\6\uffff\1\4\4\uffff\1\65\7\uffff\1\66\4\uffff\1\25\1\67",
            "\1\4\1\uffff\1\4\2\uffff\1\24\20\uffff\1\70\25\uffff\1\3\6\uffff\1\4\21\uffff\1\25",
            "\1\4\1\uffff\1\4\2\uffff\1\24\20\uffff\1\70\25\uffff\1\3\6\uffff\1\4\21\uffff\1\25",
            "\1\115\33\uffff\1\112\7\uffff\1\113\5\uffff\1\114",
            "\1\123",
            "\1\124",
            "\1\125\1\46\1\51\1\uffff\1\52\1\47\73\uffff\1\50",
            "\1\4\1\uffff\1\4\2\uffff\1\24\20\uffff\1\23\25\uffff\1\3\6\uffff\1\4\4\uffff\1\76\7\uffff\1\77\4\uffff\1\25\1\100",
            "\1\4\1\uffff\1\4\2\uffff\1\24\20\uffff\1\23\25\uffff\1\3\6\uffff\1\4\21\uffff\1\25",
            "\1\4\1\uffff\1\4\2\uffff\1\24\20\uffff\1\70\25\uffff\1\3\6\uffff\1\4\4\uffff\1\120\7\uffff\1\121\4\uffff\1\25\1\122",
            "\1\126",
            "\1\127",
            "\1\115\33\uffff\1\112\7\uffff\1\113\5\uffff\1\114",
            "\1\115",
            "\1\4\1\uffff\1\4\2\uffff\1\24\20\uffff\1\70\25\uffff\1\3\6\uffff\1\4\21\uffff\1\25",
            "\1\4\1\uffff\1\4\2\uffff\1\24\20\uffff\1\70\25\uffff\1\3\6\uffff\1\4\4\uffff\1\120\7\uffff\1\121\4\uffff\1\25\1\122",
            "\1\4\1\uffff\1\4\2\uffff\1\24\20\uffff\1\70\25\uffff\1\3\6\uffff\1\4\21\uffff\1\25"
    };

    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final char[] dfa_78 = DFA.unpackEncodedStringToUnsignedChars(dfa_78s);
    static final char[] dfa_79 = DFA.unpackEncodedStringToUnsignedChars(dfa_79s);
    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final short[][] dfa_82 = unpackEncodedStringArray(dfa_82s);

    class DFA78 extends DFA {

        public DFA78(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 78;
            this.eot = dfa_77;
            this.eof = dfa_77;
            this.min = dfa_78;
            this.max = dfa_79;
            this.accept = dfa_80;
            this.special = dfa_81;
            this.transition = dfa_82;
        }
        public String getDescription() {
            return "2424:1: ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA78_10 = input.LA(1);

                         
                        int index78_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index78_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 78, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_83s = "\2\12\1\5\3\uffff\2\4\1\5\1\6\5\12\1\5\3\4\1\12\1\5\1\6\1\41\1\6\3\12\1\6\4\12\1\41\1\5\1\6\1\4\1\12\1\5\1\6\2\41\3\12\1\6\4\12\1\4\1\12\1\5\1\6\3\12\1\6\5\12\1\5\1\6\2\12";
    static final String dfa_84s = "\2\163\1\5\3\uffff\2\163\1\10\1\6\5\163\1\5\2\163\1\105\1\163\1\5\1\6\1\113\1\10\3\163\1\10\4\163\1\113\1\5\1\6\1\105\1\163\1\5\1\6\1\113\1\41\3\163\1\10\4\163\1\105\1\163\1\5\1\6\3\163\1\10\5\163\1\5\1\6\2\163";
    static final String dfa_85s = "\3\uffff\1\1\1\2\1\3\74\uffff";
    static final String[] dfa_86s = {
            "\1\1\47\uffff\5\3\2\4\1\5\20\uffff\1\2\42\uffff\7\3",
            "\1\1\47\uffff\5\3\2\4\1\5\20\uffff\1\2\42\uffff\7\3",
            "\1\6",
            "",
            "",
            "",
            "\1\12\1\13\1\15\1\uffff\1\16\1\14\1\1\25\uffff\1\17\21\uffff\5\3\2\4\1\5\3\uffff\1\7\7\uffff\1\10\4\uffff\1\2\1\11\41\uffff\7\3",
            "\1\12\1\13\1\15\1\uffff\1\16\1\14\1\1\25\uffff\1\17\21\uffff\5\3\2\4\1\5\3\uffff\1\7\7\uffff\1\10\4\uffff\1\2\1\11\41\uffff\7\3",
            "\1\20\1\15\1\uffff\1\16",
            "\1\21",
            "\1\1\20\uffff\1\22\26\uffff\5\3\2\4\1\5\20\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\22\26\uffff\5\3\2\4\1\5\3\uffff\1\23\7\uffff\1\24\4\uffff\1\2\1\25\41\uffff\7\3",
            "\1\1\20\uffff\1\22\26\uffff\5\3\2\4\1\5\20\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\22\26\uffff\5\3\2\4\1\5\20\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\22\26\uffff\5\3\2\4\1\5\20\uffff\1\2\42\uffff\7\3",
            "\1\26",
            "\1\12\1\13\1\15\1\uffff\1\16\1\14\1\1\25\uffff\1\17\21\uffff\5\3\2\4\1\5\3\uffff\1\7\7\uffff\1\10\4\uffff\1\2\1\11\41\uffff\7\3",
            "\1\12\1\13\1\15\1\uffff\1\16\1\14\1\1\25\uffff\1\17\21\uffff\5\3\2\4\1\5\13\uffff\1\27\4\uffff\1\2\42\uffff\7\3",
            "\1\30\1\31\1\34\1\uffff\1\35\1\32\73\uffff\1\33",
            "\1\1\20\uffff\1\22\26\uffff\5\3\2\4\1\5\3\uffff\1\23\7\uffff\1\24\4\uffff\1\2\1\25\41\uffff\7\3",
            "\1\36",
            "\1\37",
            "\1\43\33\uffff\1\40\7\uffff\1\41\5\uffff\1\42",
            "\1\15\1\uffff\1\16",
            "\1\1\20\uffff\1\22\26\uffff\5\3\2\4\1\5\20\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\22\26\uffff\5\3\2\4\1\5\3\uffff\1\44\7\uffff\1\45\4\uffff\1\2\1\46\41\uffff\7\3",
            "\1\1\20\uffff\1\22\26\uffff\5\3\2\4\1\5\20\uffff\1\2\42\uffff\7\3",
            "\1\34\1\uffff\1\35",
            "\1\1\20\uffff\1\22\26\uffff\5\3\2\4\1\5\20\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\22\26\uffff\5\3\2\4\1\5\20\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\22\26\uffff\5\3\2\4\1\5\3\uffff\1\23\7\uffff\1\24\4\uffff\1\2\1\25\41\uffff\7\3",
            "\1\1\20\uffff\1\22\26\uffff\5\3\2\4\1\5\20\uffff\1\2\42\uffff\7\3",
            "\1\43\33\uffff\1\40\7\uffff\1\41\5\uffff\1\42",
            "\1\47",
            "\1\50",
            "\1\51\1\52\1\55\1\uffff\1\56\1\53\73\uffff\1\54",
            "\1\1\20\uffff\1\22\26\uffff\5\3\2\4\1\5\3\uffff\1\44\7\uffff\1\45\4\uffff\1\2\1\46\41\uffff\7\3",
            "\1\57",
            "\1\60",
            "\1\43\33\uffff\1\40\7\uffff\1\41\5\uffff\1\42",
            "\1\43",
            "\1\1\20\uffff\1\61\26\uffff\5\3\2\4\1\5\20\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\61\26\uffff\5\3\2\4\1\5\3\uffff\1\62\7\uffff\1\63\4\uffff\1\2\1\64\41\uffff\7\3",
            "\1\1\20\uffff\1\61\26\uffff\5\3\2\4\1\5\20\uffff\1\2\42\uffff\7\3",
            "\1\55\1\uffff\1\56",
            "\1\1\20\uffff\1\61\26\uffff\5\3\2\4\1\5\20\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\61\26\uffff\5\3\2\4\1\5\20\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\22\26\uffff\5\3\2\4\1\5\3\uffff\1\44\7\uffff\1\45\4\uffff\1\2\1\46\41\uffff\7\3",
            "\1\1\20\uffff\1\22\26\uffff\5\3\2\4\1\5\20\uffff\1\2\42\uffff\7\3",
            "\1\65\1\66\1\71\1\uffff\1\72\1\67\73\uffff\1\70",
            "\1\1\20\uffff\1\61\26\uffff\5\3\2\4\1\5\3\uffff\1\62\7\uffff\1\63\4\uffff\1\2\1\64\41\uffff\7\3",
            "\1\73",
            "\1\74",
            "\1\1\20\uffff\1\61\26\uffff\5\3\2\4\1\5\20\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\61\26\uffff\5\3\2\4\1\5\3\uffff\1\75\7\uffff\1\76\4\uffff\1\2\1\77\41\uffff\7\3",
            "\1\1\20\uffff\1\61\26\uffff\5\3\2\4\1\5\20\uffff\1\2\42\uffff\7\3",
            "\1\71\1\uffff\1\72",
            "\1\1\20\uffff\1\61\26\uffff\5\3\2\4\1\5\20\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\61\26\uffff\5\3\2\4\1\5\20\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\61\26\uffff\5\3\2\4\1\5\3\uffff\1\62\7\uffff\1\63\4\uffff\1\2\1\64\41\uffff\7\3",
            "\1\1\20\uffff\1\61\26\uffff\5\3\2\4\1\5\20\uffff\1\2\42\uffff\7\3",
            "\1\1\20\uffff\1\61\26\uffff\5\3\2\4\1\5\3\uffff\1\75\7\uffff\1\76\4\uffff\1\2\1\77\41\uffff\7\3",
            "\1\100",
            "\1\101",
            "\1\1\20\uffff\1\61\26\uffff\5\3\2\4\1\5\3\uffff\1\75\7\uffff\1\76\4\uffff\1\2\1\77\41\uffff\7\3",
            "\1\1\20\uffff\1\61\26\uffff\5\3\2\4\1\5\20\uffff\1\2\42\uffff\7\3"
    };
    static final char[] dfa_83 = DFA.unpackEncodedStringToUnsignedChars(dfa_83s);
    static final char[] dfa_84 = DFA.unpackEncodedStringToUnsignedChars(dfa_84s);
    static final short[] dfa_85 = DFA.unpackEncodedString(dfa_85s);
    static final short[][] dfa_86 = unpackEncodedStringArray(dfa_86s);

    class DFA80 extends DFA {

        public DFA80(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 80;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_83;
            this.max = dfa_84;
            this.accept = dfa_85;
            this.special = dfa_5;
            this.transition = dfa_86;
        }
        public String getDescription() {
            return "2543:1: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration )";
        }
    }

    class DFA81 extends DFA {

        public DFA81(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 81;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_83;
            this.max = dfa_84;
            this.accept = dfa_85;
            this.special = dfa_5;
            this.transition = dfa_86;
        }
        public String getDescription() {
            return "2602:1: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon )";
        }
    }
    static final String dfa_87s = "\1\5\3\0\7\uffff";
    static final String dfa_88s = "\1\112\3\0\7\uffff";
    static final String dfa_89s = "\4\uffff\1\4\1\6\1\uffff\1\1\1\2\1\3\1\5";
    static final String dfa_90s = "\1\uffff\1\0\1\1\1\2\7\uffff}>";
    static final String[] dfa_91s = {
            "\1\3\1\uffff\1\4\2\uffff\1\1\55\uffff\1\5\6\uffff\1\5\12\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_87 = DFA.unpackEncodedStringToUnsignedChars(dfa_87s);
    static final char[] dfa_88 = DFA.unpackEncodedStringToUnsignedChars(dfa_88s);
    static final short[] dfa_89 = DFA.unpackEncodedString(dfa_89s);
    static final short[] dfa_90 = DFA.unpackEncodedString(dfa_90s);
    static final short[][] dfa_91 = unpackEncodedStringArray(dfa_91s);

    class DFA123 extends DFA {

        public DFA123(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 123;
            this.eot = dfa_41;
            this.eof = dfa_41;
            this.min = dfa_87;
            this.max = dfa_88;
            this.accept = dfa_89;
            this.special = dfa_90;
            this.transition = dfa_91;
        }
        public String getDescription() {
            return "3912:1: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_Emission_2= ruleEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA123_1 = input.LA(1);

                         
                        int index123_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_InternalSCTX()) ) {s = 7;}

                        else if ( (synpred135_InternalSCTX()) ) {s = 8;}

                        else if ( (synpred136_InternalSCTX()) ) {s = 9;}

                        else if ( (synpred137_InternalSCTX()) ) {s = 4;}

                        else if ( (synpred138_InternalSCTX()) ) {s = 10;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index123_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA123_2 = input.LA(1);

                         
                        int index123_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_InternalSCTX()) ) {s = 7;}

                        else if ( (synpred135_InternalSCTX()) ) {s = 8;}

                        else if ( (synpred136_InternalSCTX()) ) {s = 9;}

                        else if ( (synpred137_InternalSCTX()) ) {s = 4;}

                        else if ( (synpred138_InternalSCTX()) ) {s = 10;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index123_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA123_3 = input.LA(1);

                         
                        int index123_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_InternalSCTX()) ) {s = 7;}

                        else if ( (synpred135_InternalSCTX()) ) {s = 8;}

                        else if ( (synpred136_InternalSCTX()) ) {s = 9;}

                        else if ( (synpred138_InternalSCTX()) ) {s = 10;}

                         
                        input.seek(index123_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 123, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_92s = "\5\uffff";
    static final String dfa_93s = "\1\1\1\uffff\2\1\1\uffff";
    static final String dfa_94s = "\1\5\1\uffff\2\5\1\uffff";
    static final String dfa_95s = "\1\125\1\uffff\2\146\1\uffff";
    static final String dfa_96s = "\1\uffff\1\2\2\uffff\1\1";
    static final String dfa_97s = "\5\uffff}>";
    static final String[] dfa_98s = {
            "\1\2\1\uffff\1\1\2\uffff\1\1\10\uffff\6\1\14\uffff\11\1\1\uffff\3\1\6\uffff\1\1\6\uffff\1\1\12\uffff\1\1\1\uffff\12\1",
            "",
            "\1\1\1\4\1\1\2\uffff\1\1\10\uffff\1\1\6\uffff\1\1\5\uffff\1\1\17\uffff\2\1\6\uffff\2\1\1\uffff\1\1\1\uffff\3\1\11\uffff\1\3\1\1\20\uffff\14\1",
            "\1\1\1\4\1\1\2\uffff\1\1\10\uffff\1\1\6\uffff\1\1\5\uffff\1\1\17\uffff\2\1\6\uffff\2\1\1\uffff\1\1\1\uffff\3\1\11\uffff\1\3\1\1\20\uffff\14\1",
            ""
    };

    static final short[] dfa_92 = DFA.unpackEncodedString(dfa_92s);
    static final short[] dfa_93 = DFA.unpackEncodedString(dfa_93s);
    static final char[] dfa_94 = DFA.unpackEncodedStringToUnsignedChars(dfa_94s);
    static final char[] dfa_95 = DFA.unpackEncodedStringToUnsignedChars(dfa_95s);
    static final short[] dfa_96 = DFA.unpackEncodedString(dfa_96s);
    static final short[] dfa_97 = DFA.unpackEncodedString(dfa_97s);
    static final short[][] dfa_98 = unpackEncodedStringArray(dfa_98s);

    class DFA126 extends DFA {

        public DFA126(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 126;
            this.eot = dfa_92;
            this.eof = dfa_93;
            this.min = dfa_94;
            this.max = dfa_95;
            this.accept = dfa_96;
            this.special = dfa_97;
            this.transition = dfa_98;
        }
        public String getDescription() {
            return "()+ loopback of 4076:1: ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA130 extends DFA {

        public DFA130(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 130;
            this.eot = dfa_92;
            this.eof = dfa_93;
            this.min = dfa_94;
            this.max = dfa_95;
            this.accept = dfa_96;
            this.special = dfa_97;
            this.transition = dfa_98;
        }
        public String getDescription() {
            return "()+ loopback of 4217:1: ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+";
        }
    }
    static final String dfa_99s = "\1\1\4\uffff";
    static final String dfa_100s = "\1\5\1\uffff\2\6\1\uffff";
    static final String dfa_101s = "\1\112\1\uffff\2\144\1\uffff";
    static final String[] dfa_102s = {
            "\1\2\4\uffff\1\1\10\uffff\1\1\31\uffff\1\1\1\uffff\1\1\32\uffff\1\1",
            "",
            "\1\4\31\uffff\1\1\32\uffff\1\1\1\uffff\1\1\13\uffff\1\3\21\uffff\12\1",
            "\1\4\31\uffff\1\1\32\uffff\1\1\1\uffff\1\1\13\uffff\1\3\21\uffff\12\1",
            ""
    };
    static final short[] dfa_99 = DFA.unpackEncodedString(dfa_99s);
    static final char[] dfa_100 = DFA.unpackEncodedStringToUnsignedChars(dfa_100s);
    static final char[] dfa_101 = DFA.unpackEncodedStringToUnsignedChars(dfa_101s);
    static final short[][] dfa_102 = unpackEncodedStringArray(dfa_102s);

    class DFA135 extends DFA {

        public DFA135(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 135;
            this.eot = dfa_92;
            this.eof = dfa_99;
            this.min = dfa_100;
            this.max = dfa_101;
            this.accept = dfa_96;
            this.special = dfa_97;
            this.transition = dfa_102;
        }
        public String getDescription() {
            return "()+ loopback of 4380:1: ( (lv_schedule_10_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA139 extends DFA {

        public DFA139(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 139;
            this.eot = dfa_92;
            this.eof = dfa_93;
            this.min = dfa_94;
            this.max = dfa_95;
            this.accept = dfa_96;
            this.special = dfa_97;
            this.transition = dfa_98;
        }
        public String getDescription() {
            return "()+ loopback of 4503:1: ( (lv_schedule_7_0= ruleScheduleObjectReference ) )+";
        }
    }
    static final String dfa_103s = "\1\4\14\0\2\uffff";
    static final String dfa_104s = "\1\154\14\0\2\uffff";
    static final String dfa_105s = "\15\uffff\1\1\1\2";
    static final String dfa_106s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\2\uffff}>";
    static final String[] dfa_107s = {
            "\1\4\1\11\1\2\1\14\1\3\1\6\20\uffff\1\5\2\uffff\1\15\32\uffff\1\12\6\uffff\1\13\5\uffff\1\1\45\uffff\1\7\1\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_103 = DFA.unpackEncodedStringToUnsignedChars(dfa_103s);
    static final char[] dfa_104 = DFA.unpackEncodedStringToUnsignedChars(dfa_104s);
    static final short[] dfa_105 = DFA.unpackEncodedString(dfa_105s);
    static final short[] dfa_106 = DFA.unpackEncodedString(dfa_106s);
    static final short[][] dfa_107 = unpackEncodedStringArray(dfa_107s);

    class DFA151 extends DFA {

        public DFA151(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 151;
            this.eot = dfa_30;
            this.eof = dfa_30;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_106;
            this.transition = dfa_107;
        }
        public String getDescription() {
            return "4905:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA151_1 = input.LA(1);

                         
                        int index151_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index151_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA151_2 = input.LA(1);

                         
                        int index151_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index151_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA151_3 = input.LA(1);

                         
                        int index151_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index151_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA151_4 = input.LA(1);

                         
                        int index151_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index151_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA151_5 = input.LA(1);

                         
                        int index151_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index151_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA151_6 = input.LA(1);

                         
                        int index151_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index151_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA151_7 = input.LA(1);

                         
                        int index151_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index151_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA151_8 = input.LA(1);

                         
                        int index151_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index151_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA151_9 = input.LA(1);

                         
                        int index151_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index151_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA151_10 = input.LA(1);

                         
                        int index151_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index151_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA151_11 = input.LA(1);

                         
                        int index151_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index151_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA151_12 = input.LA(1);

                         
                        int index151_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index151_12);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 151, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_108s = "\7\uffff";
    static final String dfa_109s = "\1\2\6\uffff";
    static final String dfa_110s = "\2\5\1\uffff\2\5\1\0\1\uffff";
    static final String dfa_111s = "\1\163\1\5\1\uffff\2\132\1\0\1\uffff";
    static final String dfa_112s = "\2\uffff\1\2\3\uffff\1\1";
    static final String dfa_113s = "\5\uffff\1\0\1\uffff}>";
    static final String[] dfa_114s = {
            "\1\2\1\uffff\1\2\2\uffff\2\2\7\uffff\6\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\3\uffff\11\2\1\uffff\12\2\1\1\2\uffff\1\2\2\uffff\1\2\12\uffff\1\2\1\uffff\12\2\27\uffff\7\2",
            "\1\3",
            "",
            "\1\2\1\5\3\uffff\1\2\57\uffff\1\2\16\uffff\1\4\1\2\16\uffff\2\2",
            "\1\2\1\5\3\uffff\1\2\57\uffff\1\2\16\uffff\1\4\1\2\16\uffff\2\2",
            "\1\uffff",
            ""
    };

    static final short[] dfa_108 = DFA.unpackEncodedString(dfa_108s);
    static final short[] dfa_109 = DFA.unpackEncodedString(dfa_109s);
    static final char[] dfa_110 = DFA.unpackEncodedStringToUnsignedChars(dfa_110s);
    static final char[] dfa_111 = DFA.unpackEncodedStringToUnsignedChars(dfa_111s);
    static final short[] dfa_112 = DFA.unpackEncodedString(dfa_112s);
    static final short[] dfa_113 = DFA.unpackEncodedString(dfa_113s);
    static final short[][] dfa_114 = unpackEncodedStringArray(dfa_114s);

    class DFA153 extends DFA {

        public DFA153(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 153;
            this.eot = dfa_108;
            this.eof = dfa_109;
            this.min = dfa_110;
            this.max = dfa_111;
            this.accept = dfa_112;
            this.special = dfa_113;
            this.transition = dfa_114;
        }
        public String getDescription() {
            return "4930:2: (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA153_5 = input.LA(1);

                         
                        int index153_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index153_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 153, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_115s = "\1\163\1\uffff\2\146\1\uffff";
    static final String[] dfa_116s = {
            "\1\2\1\uffff\1\1\2\uffff\2\1\7\uffff\6\1\2\uffff\2\1\2\uffff\1\1\1\uffff\1\1\3\uffff\11\1\1\uffff\13\1\2\uffff\1\1\2\uffff\1\1\12\uffff\1\1\1\uffff\12\1\27\uffff\7\1",
            "",
            "\1\1\1\4\1\1\2\uffff\1\1\10\uffff\1\1\6\uffff\1\1\5\uffff\1\1\17\uffff\2\1\6\uffff\2\1\1\uffff\1\1\1\uffff\3\1\11\uffff\1\3\1\1\20\uffff\14\1",
            "\1\1\1\4\1\1\2\uffff\1\1\10\uffff\1\1\6\uffff\1\1\5\uffff\1\1\17\uffff\2\1\6\uffff\2\1\1\uffff\1\1\1\uffff\3\1\11\uffff\1\3\1\1\20\uffff\14\1",
            ""
    };
    static final char[] dfa_115 = DFA.unpackEncodedStringToUnsignedChars(dfa_115s);
    static final short[][] dfa_116 = unpackEncodedStringArray(dfa_116s);

    class DFA152 extends DFA {

        public DFA152(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 152;
            this.eot = dfa_92;
            this.eof = dfa_93;
            this.min = dfa_94;
            this.max = dfa_115;
            this.accept = dfa_96;
            this.special = dfa_97;
            this.transition = dfa_116;
        }
        public String getDescription() {
            return "()+ loopback of 4934:1: ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+";
        }
    }
    static final String dfa_117s = "\1\7\101\uffff";
    static final String dfa_118s = "\1\5\1\uffff\1\0\77\uffff";
    static final String dfa_119s = "\1\163\1\uffff\1\0\77\uffff";
    static final String dfa_120s = "\1\uffff\1\1\5\uffff\1\2\72\uffff";
    static final String dfa_121s = "\2\uffff\1\0\77\uffff}>";
    static final String[] dfa_122s = {
            "\1\7\1\uffff\1\7\2\uffff\2\7\7\uffff\6\7\2\uffff\2\7\1\uffff\2\7\1\uffff\1\7\2\uffff\12\7\1\uffff\13\7\2\uffff\1\7\2\uffff\1\2\1\1\3\7\6\uffff\1\7\1\uffff\12\7\21\uffff\4\1\2\uffff\7\7",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_117 = DFA.unpackEncodedString(dfa_117s);
    static final char[] dfa_118 = DFA.unpackEncodedStringToUnsignedChars(dfa_118s);
    static final char[] dfa_119 = DFA.unpackEncodedStringToUnsignedChars(dfa_119s);
    static final short[] dfa_120 = DFA.unpackEncodedString(dfa_120s);
    static final short[] dfa_121 = DFA.unpackEncodedString(dfa_121s);
    static final short[][] dfa_122 = unpackEncodedStringArray(dfa_122s);

    class DFA162 extends DFA {

        public DFA162(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 162;
            this.eot = dfa_1;
            this.eof = dfa_117;
            this.min = dfa_118;
            this.max = dfa_119;
            this.accept = dfa_120;
            this.special = dfa_121;
            this.transition = dfa_122;
        }
        public String getDescription() {
            return "5418:1: ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA162_2 = input.LA(1);

                         
                        int index162_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index162_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 162, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_123s = "\16\uffff";
    static final String dfa_124s = "\1\4\4\uffff\10\0\1\uffff";
    static final String dfa_125s = "\1\154\4\uffff\10\0\1\uffff";
    static final String dfa_126s = "\1\uffff\1\1\13\uffff\1\2";
    static final String dfa_127s = "\5\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\uffff}>";
    static final String[] dfa_128s = {
            "\1\1\1\11\1\1\1\14\1\1\1\6\20\uffff\1\5\2\uffff\1\15\32\uffff\1\12\6\uffff\1\13\5\uffff\1\1\45\uffff\1\7\1\10",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_123 = DFA.unpackEncodedString(dfa_123s);
    static final char[] dfa_124 = DFA.unpackEncodedStringToUnsignedChars(dfa_124s);
    static final char[] dfa_125 = DFA.unpackEncodedStringToUnsignedChars(dfa_125s);
    static final short[] dfa_126 = DFA.unpackEncodedString(dfa_126s);
    static final short[] dfa_127 = DFA.unpackEncodedString(dfa_127s);
    static final short[][] dfa_128 = unpackEncodedStringArray(dfa_128s);

    class DFA163 extends DFA {

        public DFA163(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 163;
            this.eot = dfa_123;
            this.eof = dfa_123;
            this.min = dfa_124;
            this.max = dfa_125;
            this.accept = dfa_126;
            this.special = dfa_127;
            this.transition = dfa_128;
        }
        public String getDescription() {
            return "5484:1: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA163_5 = input.LA(1);

                         
                        int index163_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred178_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index163_5);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA163_6 = input.LA(1);

                         
                        int index163_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred178_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index163_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA163_7 = input.LA(1);

                         
                        int index163_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred178_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index163_7);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA163_8 = input.LA(1);

                         
                        int index163_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred178_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index163_8);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA163_9 = input.LA(1);

                         
                        int index163_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred178_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index163_9);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA163_10 = input.LA(1);

                         
                        int index163_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred178_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index163_10);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA163_11 = input.LA(1);

                         
                        int index163_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred178_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index163_11);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA163_12 = input.LA(1);

                         
                        int index163_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred178_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index163_12);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 163, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_129s = "\11\uffff";
    static final String dfa_130s = "\3\uffff\1\2\3\uffff\1\2\1\uffff";
    static final String dfa_131s = "\1\5\2\uffff\1\5\3\uffff\1\5\1\uffff";
    static final String dfa_132s = "\1\154\2\uffff\1\163\3\uffff\1\163\1\uffff";
    static final String dfa_133s = "\1\uffff\1\1\1\2\1\uffff\1\3\1\5\1\6\1\uffff\1\4";
    static final String dfa_134s = "\11\uffff}>";
    static final String[] dfa_135s = {
            "\1\3\1\uffff\1\6\1\uffff\1\1\20\uffff\1\4\35\uffff\1\5\6\uffff\1\5\53\uffff\2\2",
            "",
            "",
            "\1\2\1\uffff\1\2\2\uffff\2\2\7\uffff\6\2\1\uffff\1\10\2\2\1\uffff\4\2\2\uffff\12\2\1\uffff\13\2\2\uffff\2\2\1\10\12\2\1\7\1\2\1\uffff\12\2\21\uffff\4\2\2\uffff\7\2",
            "",
            "",
            "",
            "\1\2\1\uffff\1\2\2\uffff\2\2\7\uffff\6\2\1\uffff\1\10\2\2\1\uffff\4\2\2\uffff\12\2\1\uffff\13\2\2\uffff\2\2\1\10\12\2\1\7\1\2\1\uffff\12\2\21\uffff\4\2\2\uffff\7\2",
            ""
    };

    static final short[] dfa_129 = DFA.unpackEncodedString(dfa_129s);
    static final short[] dfa_130 = DFA.unpackEncodedString(dfa_130s);
    static final char[] dfa_131 = DFA.unpackEncodedStringToUnsignedChars(dfa_131s);
    static final char[] dfa_132 = DFA.unpackEncodedStringToUnsignedChars(dfa_132s);
    static final short[] dfa_133 = DFA.unpackEncodedString(dfa_133s);
    static final short[] dfa_134 = DFA.unpackEncodedString(dfa_134s);
    static final short[][] dfa_135 = unpackEncodedStringArray(dfa_135s);

    class DFA176 extends DFA {

        public DFA176(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 176;
            this.eot = dfa_129;
            this.eof = dfa_130;
            this.min = dfa_131;
            this.max = dfa_132;
            this.accept = dfa_133;
            this.special = dfa_134;
            this.transition = dfa_135;
        }
        public String getDescription() {
            return "6221:1: (this_BoolValue_0= ruleBoolValue | this_ValuedObjectTestExpression_1= ruleValuedObjectTestExpression | (otherlv_2= '(' this_BoolExpression_3= ruleBoolExpression otherlv_4= ')' ) | this_ReferenceCall_5= ruleReferenceCall | this_FunctionCall_6= ruleFunctionCall | this_TextExpression_7= ruleTextExpression )";
        }
    }
    static final String dfa_136s = "\15\uffff";
    static final String dfa_137s = "\1\4\3\uffff\1\0\10\uffff";
    static final String dfa_138s = "\1\154\3\uffff\1\0\10\uffff";
    static final String dfa_139s = "\1\uffff\1\1\1\2\1\3\1\uffff\1\5\6\uffff\1\4";
    static final String dfa_140s = "\4\uffff\1\0\10\uffff}>";
    static final String[] dfa_141s = {
            "\1\3\1\5\1\1\1\5\1\2\1\5\20\uffff\1\4\35\uffff\1\5\6\uffff\1\5\53\uffff\2\5",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_136 = DFA.unpackEncodedString(dfa_136s);
    static final char[] dfa_137 = DFA.unpackEncodedStringToUnsignedChars(dfa_137s);
    static final char[] dfa_138 = DFA.unpackEncodedStringToUnsignedChars(dfa_138s);
    static final short[] dfa_139 = DFA.unpackEncodedString(dfa_139s);
    static final short[] dfa_140 = DFA.unpackEncodedString(dfa_140s);
    static final short[][] dfa_141 = unpackEncodedStringArray(dfa_141s);

    class DFA177 extends DFA {

        public DFA177(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 177;
            this.eot = dfa_136;
            this.eof = dfa_136;
            this.min = dfa_137;
            this.max = dfa_138;
            this.accept = dfa_139;
            this.special = dfa_140;
            this.transition = dfa_141;
        }
        public String getDescription() {
            return "6327:1: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | (otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')' ) | this_AtomicExpression_6= ruleAtomicExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA177_4 = input.LA(1);

                         
                        int index177_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred199_InternalSCTX()) ) {s = 12;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index177_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 177, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_142s = "\3\uffff\2\12\4\uffff\1\10\1\uffff\2\12\1\10\1\uffff";
    static final String dfa_143s = "\1\12\1\uffff\1\5\2\4\1\5\1\6\2\uffff\1\5\1\uffff\2\4\1\5\1\0";
    static final String dfa_144s = "\1\112\1\uffff\1\5\2\163\1\10\1\6\2\uffff\1\163\1\uffff\3\163\1\0";
    static final String dfa_145s = "\1\uffff\1\1\5\uffff\1\3\1\2\1\uffff\1\4\4\uffff";
    static final String dfa_146s = "\16\uffff\1\0}>";
    static final String[] dfa_147s = {
            "\1\1\77\uffff\1\2",
            "",
            "\1\3",
            "\1\10\1\11\1\10\1\12\2\10\1\12\6\uffff\1\12\2\uffff\5\12\7\uffff\1\7\14\uffff\1\12\1\uffff\1\12\1\uffff\11\12\3\uffff\1\4\7\uffff\1\5\4\uffff\1\12\1\6\41\uffff\7\12",
            "\1\10\1\11\1\10\1\12\2\10\1\12\6\uffff\1\12\2\uffff\5\12\7\uffff\1\7\14\uffff\1\12\1\uffff\1\12\1\uffff\11\12\3\uffff\1\4\7\uffff\1\5\4\uffff\1\12\1\6\41\uffff\7\12",
            "\1\13\1\10\1\uffff\1\10",
            "\1\14",
            "",
            "",
            "\1\10\1\uffff\1\10\2\uffff\1\10\6\uffff\1\10\2\uffff\5\10\1\uffff\1\12\1\10\4\uffff\1\12\14\uffff\1\10\1\uffff\1\10\1\uffff\11\10\1\uffff\1\12\1\uffff\1\15\1\12\6\uffff\1\10\3\uffff\1\12\2\10\17\uffff\14\12\6\uffff\7\10",
            "",
            "\1\10\1\11\1\10\1\12\2\10\1\12\6\uffff\1\12\2\uffff\5\12\7\uffff\1\7\14\uffff\1\12\1\uffff\1\12\1\uffff\11\12\3\uffff\1\4\7\uffff\1\5\4\uffff\1\12\1\6\41\uffff\7\12",
            "\1\10\1\11\1\10\1\12\2\10\1\12\6\uffff\1\12\2\uffff\5\12\7\uffff\1\7\14\uffff\1\12\1\uffff\1\12\1\uffff\11\12\13\uffff\1\10\4\uffff\1\12\42\uffff\7\12",
            "\1\16\1\uffff\1\10\2\uffff\1\10\6\uffff\1\10\2\uffff\5\10\2\uffff\1\10\21\uffff\1\10\1\uffff\1\10\1\uffff\11\10\3\uffff\1\10\7\uffff\1\10\4\uffff\2\10\41\uffff\7\10",
            "\1\uffff"
    };
    static final short[] dfa_142 = DFA.unpackEncodedString(dfa_142s);
    static final char[] dfa_143 = DFA.unpackEncodedStringToUnsignedChars(dfa_143s);
    static final char[] dfa_144 = DFA.unpackEncodedStringToUnsignedChars(dfa_144s);
    static final short[] dfa_145 = DFA.unpackEncodedString(dfa_145s);
    static final short[] dfa_146 = DFA.unpackEncodedString(dfa_146s);
    static final short[][] dfa_147 = unpackEncodedStringArray(dfa_147s);

    class DFA190 extends DFA {

        public DFA190(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 190;
            this.eot = dfa_30;
            this.eof = dfa_142;
            this.min = dfa_143;
            this.max = dfa_144;
            this.accept = dfa_145;
            this.special = dfa_146;
            this.transition = dfa_147;
        }
        public String getDescription() {
            return "7170:1: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA190_14 = input.LA(1);

                         
                        int index190_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_InternalSCTX()) ) {s = 8;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index190_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 190, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_148s = "\12\uffff";
    static final String dfa_149s = "\2\uffff\2\7\4\uffff\2\7";
    static final String dfa_150s = "\1\113\1\5\2\4\2\5\2\uffff\2\4";
    static final String dfa_151s = "\1\113\1\5\2\113\1\10\1\6\2\uffff\2\113";
    static final String dfa_152s = "\6\uffff\1\1\1\2\2\uffff";
    static final String dfa_153s = "\12\uffff}>";
    static final String[] dfa_154s = {
            "\1\1",
            "\1\2",
            "\3\6\1\uffff\2\6\1\7\6\uffff\1\7\53\uffff\1\3\7\uffff\1\4\4\uffff\1\7\1\5",
            "\3\6\1\uffff\2\6\1\7\6\uffff\1\7\53\uffff\1\3\7\uffff\1\4\4\uffff\1\7\1\5",
            "\1\10\1\6\1\uffff\1\6",
            "\1\7\1\11",
            "",
            "",
            "\3\6\1\uffff\2\6\1\7\6\uffff\1\7\53\uffff\1\3\7\uffff\1\4\4\uffff\1\7\1\5",
            "\3\6\1\uffff\2\6\1\7\6\uffff\1\7\63\uffff\1\6\4\uffff\2\7"
    };

    static final short[] dfa_148 = DFA.unpackEncodedString(dfa_148s);
    static final short[] dfa_149 = DFA.unpackEncodedString(dfa_149s);
    static final char[] dfa_150 = DFA.unpackEncodedStringToUnsignedChars(dfa_150s);
    static final char[] dfa_151 = DFA.unpackEncodedStringToUnsignedChars(dfa_151s);
    static final short[] dfa_152 = DFA.unpackEncodedString(dfa_152s);
    static final short[] dfa_153 = DFA.unpackEncodedString(dfa_153s);
    static final short[][] dfa_154 = unpackEncodedStringArray(dfa_154s);

    class DFA191 extends DFA {

        public DFA191(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 191;
            this.eot = dfa_148;
            this.eof = dfa_149;
            this.min = dfa_150;
            this.max = dfa_151;
            this.accept = dfa_152;
            this.special = dfa_153;
            this.transition = dfa_154;
        }
        public String getDescription() {
            return "7242:1: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )";
        }
    }
    static final String dfa_155s = "\14\uffff";
    static final String dfa_156s = "\3\uffff\2\10\5\uffff\2\10";
    static final String dfa_157s = "\1\12\1\uffff\1\5\2\4\1\5\1\6\3\uffff\2\4";
    static final String dfa_158s = "\1\112\1\uffff\1\5\2\121\1\5\1\6\3\uffff\2\121";
    static final String dfa_159s = "\1\uffff\1\1\5\uffff\1\3\1\4\1\2\2\uffff";
    static final String dfa_160s = "\14\uffff}>";
    static final String[] dfa_161s = {
            "\1\1\77\uffff\1\2",
            "",
            "\1\3",
            "\2\11\3\uffff\1\11\1\10\25\uffff\1\7\34\uffff\1\4\7\uffff\1\5\4\uffff\1\10\1\6\6\10",
            "\2\11\3\uffff\1\11\1\10\25\uffff\1\7\34\uffff\1\4\7\uffff\1\5\4\uffff\1\10\1\6\6\10",
            "\1\12",
            "\1\13",
            "",
            "",
            "",
            "\2\11\3\uffff\1\11\1\10\25\uffff\1\7\34\uffff\1\4\7\uffff\1\5\4\uffff\1\10\1\6\6\10",
            "\2\11\3\uffff\1\11\1\10\25\uffff\1\7\51\uffff\1\10\1\uffff\6\10"
    };

    static final short[] dfa_155 = DFA.unpackEncodedString(dfa_155s);
    static final short[] dfa_156 = DFA.unpackEncodedString(dfa_156s);
    static final char[] dfa_157 = DFA.unpackEncodedStringToUnsignedChars(dfa_157s);
    static final char[] dfa_158 = DFA.unpackEncodedStringToUnsignedChars(dfa_158s);
    static final short[] dfa_159 = DFA.unpackEncodedString(dfa_159s);
    static final short[] dfa_160 = DFA.unpackEncodedString(dfa_160s);
    static final short[][] dfa_161 = unpackEncodedStringArray(dfa_161s);

    class DFA192 extends DFA {

        public DFA192(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 192;
            this.eot = dfa_155;
            this.eof = dfa_156;
            this.min = dfa_157;
            this.max = dfa_158;
            this.accept = dfa_159;
            this.special = dfa_160;
            this.transition = dfa_161;
        }
        public String getDescription() {
            return "7290:1: (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )";
        }
    }
    static final String dfa_162s = "\3\uffff\2\11\5\uffff\2\11";
    static final String dfa_163s = "\1\112\1\uffff\1\5\2\113\1\5\1\6\3\uffff\1\113\1\112";
    static final String dfa_164s = "\1\uffff\1\1\5\uffff\1\3\1\2\1\4\2\uffff";
    static final String[] dfa_165s = {
            "\1\1\77\uffff\1\2",
            "",
            "\1\3",
            "\1\10\1\11\4\uffff\1\11\25\uffff\1\7\34\uffff\1\4\7\uffff\1\5\4\uffff\1\11\1\6",
            "\1\10\1\11\4\uffff\1\11\25\uffff\1\7\34\uffff\1\4\7\uffff\1\5\4\uffff\1\11\1\6",
            "\1\12",
            "\1\13",
            "",
            "",
            "",
            "\1\10\1\11\4\uffff\1\11\25\uffff\1\7\34\uffff\1\4\7\uffff\1\5\4\uffff\1\11\1\6",
            "\1\10\1\11\4\uffff\1\11\25\uffff\1\7\51\uffff\1\11"
    };
    static final short[] dfa_162 = DFA.unpackEncodedString(dfa_162s);
    static final char[] dfa_163 = DFA.unpackEncodedStringToUnsignedChars(dfa_163s);
    static final short[] dfa_164 = DFA.unpackEncodedString(dfa_164s);
    static final short[][] dfa_165 = unpackEncodedStringArray(dfa_165s);

    class DFA193 extends DFA {

        public DFA193(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 193;
            this.eot = dfa_155;
            this.eof = dfa_162;
            this.min = dfa_157;
            this.max = dfa_163;
            this.accept = dfa_164;
            this.special = dfa_160;
            this.transition = dfa_165;
        }
        public String getDescription() {
            return "7362:1: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )";
        }
    }

    class DFA227 extends DFA {

        public DFA227(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 227;
            this.eot = dfa_30;
            this.eof = dfa_30;
            this.min = dfa_31;
            this.max = dfa_32;
            this.accept = dfa_33;
            this.special = dfa_34;
            this.transition = dfa_35;
        }
        public String getDescription() {
            return "937:1: ( (lv_triggerDelay_7_0= RULE_INT ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA227_1 = input.LA(1);

                         
                        int index227_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalSCTX()) ) {s = 14;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index227_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 227, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA228 extends DFA {

        public DFA228(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 228;
            this.eot = dfa_30;
            this.eof = dfa_30;
            this.min = dfa_36;
            this.max = dfa_37;
            this.accept = dfa_38;
            this.special = dfa_39;
            this.transition = dfa_40;
        }
        public String getDescription() {
            return "955:3: ( ( (lv_trigger_8_0= ruleBoolExpression ) ) | ( (lv_trigger_9_0= ruleAtomicExpression ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA228_5 = input.LA(1);

                         
                        int index228_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index228_5);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA228_6 = input.LA(1);

                         
                        int index228_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index228_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA228_7 = input.LA(1);

                         
                        int index228_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index228_7);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA228_8 = input.LA(1);

                         
                        int index228_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index228_8);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA228_9 = input.LA(1);

                         
                        int index228_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index228_9);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA228_10 = input.LA(1);

                         
                        int index228_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index228_10);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA228_11 = input.LA(1);

                         
                        int index228_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index228_11);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA228_12 = input.LA(1);

                         
                        int index228_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index228_12);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 228, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    
    private static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000020402L,0x0000000000000C00L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000020402L,0x0000000000000400L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000020400L,0x0000000000000400L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000040010L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000040000L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x03FCBFC001F80420L,0x000FE000003C0400L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000BFC001F80420L,0x00000000003C0400L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000080000L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000A00000080400L,0x0000000000000400L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000001F00400L,0x0000000000000400L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000001E00000L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000001C00000L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000001800000L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000001000000L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000002040412L,0x000000000003F400L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000002040402L,0x000000000003F400L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000402L,0x000000000003F400L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000004000002L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x81000000640007F0L,0x0000180000000420L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000018000000L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000010000000L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000040000000L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000080000002L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000100000002L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000200000000L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000400L,0x000000000003F400L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000001C00000002L,0x0000000001FC0000L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000001C00000002L,0x0000000001C00000L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000001800000002L,0x0000000001C00000L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000001800000002L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x81000000240007F0L,0x0000180000000420L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000001000000002L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x81000000000004A0L,0x0000000000000400L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000002000000002L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000008000000000L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000060000000000L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000040000000000L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000800000002L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000001F00402L,0x0000000000000400L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000422L,0x0000000000000400L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000200000000400L,0x0000000000000400L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000400000000030L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000400000000010L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000400000000000L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x03FC000001F00400L,0x000FE00000000400L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000800000000400L,0x0000000000000400L});
        public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x03FC000000000420L,0x000FE00000000400L});
        public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x83FF0000000004A2L,0x000FE00000000400L});
        public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x81030000000004A2L,0x0000000000000400L});
        public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000040020L});
        public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0001000000000002L});
        public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x83FF0000000804A0L,0x000FE00000000400L});
        public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x81030000000804A0L,0x0000000000000400L});
        public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0001000000080000L});
        public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0002000000000400L,0x0000000000000400L});
        public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x007C000000000400L,0x000FE00000000400L});
        public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0078000000000000L,0x000FE00000000000L});
        public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0070000000000000L,0x000FE00000000000L});
        public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0060000000000000L,0x000FE00000000000L});
        public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0040000000000000L,0x000FE00000000000L});
        public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000000420L,0x0000000000000400L});
        public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000002008000000L});
        public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000802L});
        public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000008000802L});
        public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000400000000002L});
        public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0180000000000400L,0x0000000000000400L});
        public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0200000000000400L,0x0000000000000400L});
        public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0400000000000420L,0x0000000006000400L});
        public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0400000000000420L,0x0000000000000400L});
        public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000000L,0x0000000006000000L});
        public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x1800000100000002L});
        public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x1000000000000002L});
        public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000040000000L,0x0078000000000058L});
        public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0200000004000002L});
        public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0200000000000002L});
        public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0800000100000000L,0x0000001FF8000000L});
        public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x2800000100000000L,0x0000001FF8000000L});
        public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000420L,0x0000180000000400L});
        public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000100000000L,0x0000006000000000L});
        public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000480L,0x0000000000000400L});
        public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x4000000004000000L});
        public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0100000000000400L,0x0000000000000400L});
        public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L});
        public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
        public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000008L});
        public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000040000002L});
        public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x8000000000000002L,0x0000078000000001L});
        public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000010L});
        public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x81000000040007F0L,0x0000180000000420L});
        public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
        public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000040L});
        public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000080L});
        public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
        public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000004000000L});
        public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000200L});
        public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x2000000100000002L});
        public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000000370L,0x0000000000000020L});
        public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000008000002L});
        public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000000230L});
        public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000100000000L});
        public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x2000000000000002L,0x0000000000000820L});
        public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000100L});
    }


}