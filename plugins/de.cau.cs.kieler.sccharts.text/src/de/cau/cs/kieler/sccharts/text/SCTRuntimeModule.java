/*
 * generated by Xtext
 */
package de.cau.cs.kieler.sccharts.text;

import org.eclipse.xtext.linking.ILinker;

import de.cau.cs.kieler.sccharts.text.formatting.SCTValueConverter;
import de.cau.cs.kieler.sccharts.text.formatting.SctIndentionInformation;
import de.cau.cs.kieler.sccharts.text.scoping.SctQualifiedNameProvider;
import de.cau.cs.kieler.sccharts.text.validation.SCTValidatorX;

/**
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 * 
 * @author ssm
 */
public class SCTRuntimeModule extends de.cau.cs.kieler.sccharts.text.AbstractSCTRuntimeModule {

    @org.eclipse.xtext.service.SingletonBinding(eager=true) 
    public Class<? extends SCTValidatorX> bindSctJavaValidator() {
        return SCTValidatorX.class;
    }
    
    public Class<? extends org.eclipse.xtext.naming.IQualifiedNameProvider> bindIQualifiedNameProvider() {
        return SctQualifiedNameProvider.class;
    }    
    
//    public Class<? extends org.eclipse.xtext.resource.XtextResource> bindXtextResource() {
//        return SctResource.class;
//    }  
    
    public Class<? extends org.eclipse.xtext.parsetree.reconstr.ITransientValueService> bindITransientValueService() {
        return SctTransientValueService.class;
    }    
    
    public Class<? extends ILinker> bindILinker() {
        return SctLinker.class;
    }     
    
    public Class<? extends org.eclipse.xtext.formatting.IIndentationInformation> bindIIndentationInformation() {
        return SctIndentionInformation.class;
    }
    
    public Class<? extends org.eclipse.xtext.conversion.IValueConverterService> bindIValueConverterService() {
        return SCTValueConverter.class;
    }    
}
